// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Configure speed test server list. Applies to FortiOS Version `>= 6.2.4`.
 *
 * ## Import
 *
 * System SpeedTestServer can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import fortios:index/systemSpeedtestserver:SystemSpeedtestserver labelname {{name}}
 * ```
 *
 *  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 *  $ pulumi import fortios:index/systemSpeedtestserver:SystemSpeedtestserver labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SystemSpeedtestserver extends pulumi.CustomResource {
    /**
     * Get an existing SystemSpeedtestserver resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSpeedtestserverState, opts?: pulumi.CustomResourceOptions): SystemSpeedtestserver {
        return new SystemSpeedtestserver(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemSpeedtestserver:SystemSpeedtestserver';

    /**
     * Returns true if the given object is an instance of SystemSpeedtestserver.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSpeedtestserver {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSpeedtestserver.__pulumiType;
    }

    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Hosts of the server. The structure of `host` block is documented below.
     */
    public readonly hosts!: pulumi.Output<outputs.SystemSpeedtestserverHost[] | undefined>;
    /**
     * Speed test server name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Speed test server timestamp.
     */
    public readonly timestamp!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemSpeedtestserver resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemSpeedtestserverArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSpeedtestserverArgs | SystemSpeedtestserverState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSpeedtestserverState | undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["timestamp"] = state ? state.timestamp : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemSpeedtestserverArgs | undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["timestamp"] = args ? args.timestamp : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemSpeedtestserver.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemSpeedtestserver resources.
 */
export interface SystemSpeedtestserverState {
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Hosts of the server. The structure of `host` block is documented below.
     */
    hosts?: pulumi.Input<pulumi.Input<inputs.SystemSpeedtestserverHost>[]>;
    /**
     * Speed test server name.
     */
    name?: pulumi.Input<string>;
    /**
     * Speed test server timestamp.
     */
    timestamp?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemSpeedtestserver resource.
 */
export interface SystemSpeedtestserverArgs {
    /**
     * Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Hosts of the server. The structure of `host` block is documented below.
     */
    hosts?: pulumi.Input<pulumi.Input<inputs.SystemSpeedtestserverHost>[]>;
    /**
     * Speed test server name.
     */
    name?: pulumi.Input<string>;
    /**
     * Speed test server timestamp.
     */
    timestamp?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
