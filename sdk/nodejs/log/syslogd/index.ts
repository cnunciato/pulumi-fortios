// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { FilterArgs, FilterState } from "./filter";
export type Filter = import("./filter").Filter;
export const Filter: typeof import("./filter").Filter = null as any;
utilities.lazyLoad(exports, ["Filter"], () => require("./filter"));

export { OverridefilterArgs, OverridefilterState } from "./overridefilter";
export type Overridefilter = import("./overridefilter").Overridefilter;
export const Overridefilter: typeof import("./overridefilter").Overridefilter = null as any;
utilities.lazyLoad(exports, ["Overridefilter"], () => require("./overridefilter"));

export { OverridesettingArgs, OverridesettingState } from "./overridesetting";
export type Overridesetting = import("./overridesetting").Overridesetting;
export const Overridesetting: typeof import("./overridesetting").Overridesetting = null as any;
utilities.lazyLoad(exports, ["Overridesetting"], () => require("./overridesetting"));

export { SettingArgs, SettingState } from "./setting";
export type Setting = import("./setting").Setting;
export const Setting: typeof import("./setting").Setting = null as any;
utilities.lazyLoad(exports, ["Setting"], () => require("./setting"));


// Export sub-modules:
import * as v2 from "./v2";
import * as v3 from "./v3";
import * as v4 from "./v4";

export {
    v2,
    v3,
    v4,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:log/syslogd/filter:Filter":
                return new Filter(name, <any>undefined, { urn })
            case "fortios:log/syslogd/overridefilter:Overridefilter":
                return new Overridefilter(name, <any>undefined, { urn })
            case "fortios:log/syslogd/overridesetting:Overridesetting":
                return new Overridesetting(name, <any>undefined, { urn })
            case "fortios:log/syslogd/setting:Setting":
                return new Setting(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "log/syslogd/filter", _module)
pulumi.runtime.registerResourceModule("fortios", "log/syslogd/overridefilter", _module)
pulumi.runtime.registerResourceModule("fortios", "log/syslogd/overridesetting", _module)
pulumi.runtime.registerResourceModule("fortios", "log/syslogd/setting", _module)
