// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get information on an fortios firewall internetservice
 */
export function getFirewallInternetservice(args: GetFirewallInternetserviceArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallInternetserviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getFirewallInternetservice:getFirewallInternetservice", {
        "fosid": args.fosid,
        "vdomparam": args.vdomparam,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirewallInternetservice.
 */
export interface GetFirewallInternetserviceArgs {
    /**
     * Specify the fosid of the desired firewall internetservice.
     */
    fosid: number;
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: string;
}

/**
 * A collection of values returned by getFirewallInternetservice.
 */
export interface GetFirewallInternetserviceResult {
    /**
     * Database name this Internet Service belongs to.
     */
    readonly database: string;
    /**
     * How this service may be used in a firewall policy (source, destination or both).
     */
    readonly direction: string;
    /**
     * Extra number of IPv6 ranges.
     */
    readonly extraIp6RangeNumber: number;
    /**
     * Extra number of IP ranges.
     */
    readonly extraIpRangeNumber: number;
    /**
     * Internet Service ID.
     */
    readonly fosid: number;
    /**
     * Icon ID of Internet Service.
     */
    readonly iconId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Number of IPv6 ranges.
     */
    readonly ip6RangeNumber: number;
    /**
     * Total number of IP addresses.
     */
    readonly ipNumber: number;
    /**
     * Total number of IP ranges.
     */
    readonly ipRangeNumber: number;
    /**
     * Internet Service name.
     */
    readonly name: string;
    /**
     * Indicates whether the Internet Service can be used.
     */
    readonly obsolete: number;
    /**
     * Reputation level of the Internet Service.
     */
    readonly reputation: number;
    /**
     * Singular level of the Internet Service.
     */
    readonly singularity: number;
    /**
     * Second Level Domain.
     */
    readonly sldId: number;
    readonly vdomparam?: string;
}
/**
 * Use this data source to get information on an fortios firewall internetservice
 */
export function getFirewallInternetserviceOutput(args: GetFirewallInternetserviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallInternetserviceResult> {
    return pulumi.output(args).apply((a: any) => getFirewallInternetservice(a, opts))
}

/**
 * A collection of arguments for invoking getFirewallInternetservice.
 */
export interface GetFirewallInternetserviceOutputArgs {
    /**
     * Specify the fosid of the desired firewall internetservice.
     */
    fosid: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
