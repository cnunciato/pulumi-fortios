// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource supports Create/Read/Update/Delete admin user for FortiManager
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewFmgSystemAdminUser(ctx, "test1", &fortios.FmgSystemAdminUserArgs{
//				Description: pulumi.String("local user"),
//				Password:    pulumi.String("123"),
//				Profileid:   pulumi.String("Standard_User"),
//				RpcPermit:   pulumi.String("read"),
//				Trusthost1:  pulumi.String("1.1.1.1 255.255.255.255"),
//				UserType:    pulumi.String("local"),
//				Userid:      pulumi.String("user1"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = fortios.NewFmgSystemAdminUser(ctx, "test2", &fortios.FmgSystemAdminUserArgs{
//				Description: pulumi.String("api user"),
//				Password:    pulumi.String("098"),
//				Profileid:   pulumi.String("Standard_User"),
//				RpcPermit:   pulumi.String("read-write"),
//				Trusthost1:  pulumi.String("2.2.2.2 255.255.255.255"),
//				Userid:      pulumi.String("user2"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FmgSystemAdminUser struct {
	pulumi.CustomResourceState

	// Description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Password.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Profile id.
	Profileid pulumi.StringPtrOutput `pulumi:"profileid"`
	// RADIUS server name.
	RadiusServer pulumi.StringPtrOutput `pulumi:"radiusServer"`
	// Rpc permit, Enum: ["read-write", "none", "read"]
	RpcPermit pulumi.StringPtrOutput `pulumi:"rpcPermit"`
	// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
	Trusthost1 pulumi.StringPtrOutput `pulumi:"trusthost1"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost2 pulumi.StringPtrOutput `pulumi:"trusthost2"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost3 pulumi.StringPtrOutput `pulumi:"trusthost3"`
	// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
	UserType pulumi.StringPtrOutput `pulumi:"userType"`
	// User name.
	Userid pulumi.StringOutput `pulumi:"userid"`
}

// NewFmgSystemAdminUser registers a new resource with the given unique name, arguments, and options.
func NewFmgSystemAdminUser(ctx *pulumi.Context,
	name string, args *FmgSystemAdminUserArgs, opts ...pulumi.ResourceOption) (*FmgSystemAdminUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Userid == nil {
		return nil, errors.New("invalid value for required argument 'Userid'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FmgSystemAdminUser
	err := ctx.RegisterResource("fortios:index/fmgSystemAdminUser:FmgSystemAdminUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFmgSystemAdminUser gets an existing FmgSystemAdminUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFmgSystemAdminUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FmgSystemAdminUserState, opts ...pulumi.ResourceOption) (*FmgSystemAdminUser, error) {
	var resource FmgSystemAdminUser
	err := ctx.ReadResource("fortios:index/fmgSystemAdminUser:FmgSystemAdminUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FmgSystemAdminUser resources.
type fmgSystemAdminUserState struct {
	// Description.
	Description *string `pulumi:"description"`
	// Password.
	Password *string `pulumi:"password"`
	// Profile id.
	Profileid *string `pulumi:"profileid"`
	// RADIUS server name.
	RadiusServer *string `pulumi:"radiusServer"`
	// Rpc permit, Enum: ["read-write", "none", "read"]
	RpcPermit *string `pulumi:"rpcPermit"`
	// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
	Trusthost1 *string `pulumi:"trusthost1"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost2 *string `pulumi:"trusthost2"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost3 *string `pulumi:"trusthost3"`
	// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
	UserType *string `pulumi:"userType"`
	// User name.
	Userid *string `pulumi:"userid"`
}

type FmgSystemAdminUserState struct {
	// Description.
	Description pulumi.StringPtrInput
	// Password.
	Password pulumi.StringPtrInput
	// Profile id.
	Profileid pulumi.StringPtrInput
	// RADIUS server name.
	RadiusServer pulumi.StringPtrInput
	// Rpc permit, Enum: ["read-write", "none", "read"]
	RpcPermit pulumi.StringPtrInput
	// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
	Trusthost1 pulumi.StringPtrInput
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost2 pulumi.StringPtrInput
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost3 pulumi.StringPtrInput
	// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
	UserType pulumi.StringPtrInput
	// User name.
	Userid pulumi.StringPtrInput
}

func (FmgSystemAdminUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgSystemAdminUserState)(nil)).Elem()
}

type fmgSystemAdminUserArgs struct {
	// Description.
	Description *string `pulumi:"description"`
	// Password.
	Password *string `pulumi:"password"`
	// Profile id.
	Profileid *string `pulumi:"profileid"`
	// RADIUS server name.
	RadiusServer *string `pulumi:"radiusServer"`
	// Rpc permit, Enum: ["read-write", "none", "read"]
	RpcPermit *string `pulumi:"rpcPermit"`
	// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
	Trusthost1 *string `pulumi:"trusthost1"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost2 *string `pulumi:"trusthost2"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost3 *string `pulumi:"trusthost3"`
	// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
	UserType *string `pulumi:"userType"`
	// User name.
	Userid string `pulumi:"userid"`
}

// The set of arguments for constructing a FmgSystemAdminUser resource.
type FmgSystemAdminUserArgs struct {
	// Description.
	Description pulumi.StringPtrInput
	// Password.
	Password pulumi.StringPtrInput
	// Profile id.
	Profileid pulumi.StringPtrInput
	// RADIUS server name.
	RadiusServer pulumi.StringPtrInput
	// Rpc permit, Enum: ["read-write", "none", "read"]
	RpcPermit pulumi.StringPtrInput
	// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
	Trusthost1 pulumi.StringPtrInput
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost2 pulumi.StringPtrInput
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost3 pulumi.StringPtrInput
	// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
	UserType pulumi.StringPtrInput
	// User name.
	Userid pulumi.StringInput
}

func (FmgSystemAdminUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgSystemAdminUserArgs)(nil)).Elem()
}

type FmgSystemAdminUserInput interface {
	pulumi.Input

	ToFmgSystemAdminUserOutput() FmgSystemAdminUserOutput
	ToFmgSystemAdminUserOutputWithContext(ctx context.Context) FmgSystemAdminUserOutput
}

func (*FmgSystemAdminUser) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgSystemAdminUser)(nil)).Elem()
}

func (i *FmgSystemAdminUser) ToFmgSystemAdminUserOutput() FmgSystemAdminUserOutput {
	return i.ToFmgSystemAdminUserOutputWithContext(context.Background())
}

func (i *FmgSystemAdminUser) ToFmgSystemAdminUserOutputWithContext(ctx context.Context) FmgSystemAdminUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemAdminUserOutput)
}

// FmgSystemAdminUserArrayInput is an input type that accepts FmgSystemAdminUserArray and FmgSystemAdminUserArrayOutput values.
// You can construct a concrete instance of `FmgSystemAdminUserArrayInput` via:
//
//	FmgSystemAdminUserArray{ FmgSystemAdminUserArgs{...} }
type FmgSystemAdminUserArrayInput interface {
	pulumi.Input

	ToFmgSystemAdminUserArrayOutput() FmgSystemAdminUserArrayOutput
	ToFmgSystemAdminUserArrayOutputWithContext(context.Context) FmgSystemAdminUserArrayOutput
}

type FmgSystemAdminUserArray []FmgSystemAdminUserInput

func (FmgSystemAdminUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgSystemAdminUser)(nil)).Elem()
}

func (i FmgSystemAdminUserArray) ToFmgSystemAdminUserArrayOutput() FmgSystemAdminUserArrayOutput {
	return i.ToFmgSystemAdminUserArrayOutputWithContext(context.Background())
}

func (i FmgSystemAdminUserArray) ToFmgSystemAdminUserArrayOutputWithContext(ctx context.Context) FmgSystemAdminUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemAdminUserArrayOutput)
}

// FmgSystemAdminUserMapInput is an input type that accepts FmgSystemAdminUserMap and FmgSystemAdminUserMapOutput values.
// You can construct a concrete instance of `FmgSystemAdminUserMapInput` via:
//
//	FmgSystemAdminUserMap{ "key": FmgSystemAdminUserArgs{...} }
type FmgSystemAdminUserMapInput interface {
	pulumi.Input

	ToFmgSystemAdminUserMapOutput() FmgSystemAdminUserMapOutput
	ToFmgSystemAdminUserMapOutputWithContext(context.Context) FmgSystemAdminUserMapOutput
}

type FmgSystemAdminUserMap map[string]FmgSystemAdminUserInput

func (FmgSystemAdminUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgSystemAdminUser)(nil)).Elem()
}

func (i FmgSystemAdminUserMap) ToFmgSystemAdminUserMapOutput() FmgSystemAdminUserMapOutput {
	return i.ToFmgSystemAdminUserMapOutputWithContext(context.Background())
}

func (i FmgSystemAdminUserMap) ToFmgSystemAdminUserMapOutputWithContext(ctx context.Context) FmgSystemAdminUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemAdminUserMapOutput)
}

type FmgSystemAdminUserOutput struct{ *pulumi.OutputState }

func (FmgSystemAdminUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgSystemAdminUser)(nil)).Elem()
}

func (o FmgSystemAdminUserOutput) ToFmgSystemAdminUserOutput() FmgSystemAdminUserOutput {
	return o
}

func (o FmgSystemAdminUserOutput) ToFmgSystemAdminUserOutputWithContext(ctx context.Context) FmgSystemAdminUserOutput {
	return o
}

// Description.
func (o FmgSystemAdminUserOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminUser) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Password.
func (o FmgSystemAdminUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminUser) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Profile id.
func (o FmgSystemAdminUserOutput) Profileid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminUser) pulumi.StringPtrOutput { return v.Profileid }).(pulumi.StringPtrOutput)
}

// RADIUS server name.
func (o FmgSystemAdminUserOutput) RadiusServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminUser) pulumi.StringPtrOutput { return v.RadiusServer }).(pulumi.StringPtrOutput)
}

// Rpc permit, Enum: ["read-write", "none", "read"]
func (o FmgSystemAdminUserOutput) RpcPermit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminUser) pulumi.StringPtrOutput { return v.RpcPermit }).(pulumi.StringPtrOutput)
}

// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
func (o FmgSystemAdminUserOutput) Trusthost1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminUser) pulumi.StringPtrOutput { return v.Trusthost1 }).(pulumi.StringPtrOutput)
}

// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
func (o FmgSystemAdminUserOutput) Trusthost2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminUser) pulumi.StringPtrOutput { return v.Trusthost2 }).(pulumi.StringPtrOutput)
}

// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
func (o FmgSystemAdminUserOutput) Trusthost3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminUser) pulumi.StringPtrOutput { return v.Trusthost3 }).(pulumi.StringPtrOutput)
}

// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
func (o FmgSystemAdminUserOutput) UserType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminUser) pulumi.StringPtrOutput { return v.UserType }).(pulumi.StringPtrOutput)
}

// User name.
func (o FmgSystemAdminUserOutput) Userid() pulumi.StringOutput {
	return o.ApplyT(func(v *FmgSystemAdminUser) pulumi.StringOutput { return v.Userid }).(pulumi.StringOutput)
}

type FmgSystemAdminUserArrayOutput struct{ *pulumi.OutputState }

func (FmgSystemAdminUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgSystemAdminUser)(nil)).Elem()
}

func (o FmgSystemAdminUserArrayOutput) ToFmgSystemAdminUserArrayOutput() FmgSystemAdminUserArrayOutput {
	return o
}

func (o FmgSystemAdminUserArrayOutput) ToFmgSystemAdminUserArrayOutputWithContext(ctx context.Context) FmgSystemAdminUserArrayOutput {
	return o
}

func (o FmgSystemAdminUserArrayOutput) Index(i pulumi.IntInput) FmgSystemAdminUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FmgSystemAdminUser {
		return vs[0].([]*FmgSystemAdminUser)[vs[1].(int)]
	}).(FmgSystemAdminUserOutput)
}

type FmgSystemAdminUserMapOutput struct{ *pulumi.OutputState }

func (FmgSystemAdminUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgSystemAdminUser)(nil)).Elem()
}

func (o FmgSystemAdminUserMapOutput) ToFmgSystemAdminUserMapOutput() FmgSystemAdminUserMapOutput {
	return o
}

func (o FmgSystemAdminUserMapOutput) ToFmgSystemAdminUserMapOutputWithContext(ctx context.Context) FmgSystemAdminUserMapOutput {
	return o
}

func (o FmgSystemAdminUserMapOutput) MapIndex(k pulumi.StringInput) FmgSystemAdminUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FmgSystemAdminUser {
		return vs[0].(map[string]*FmgSystemAdminUser)[vs[1].(string)]
	}).(FmgSystemAdminUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemAdminUserInput)(nil)).Elem(), &FmgSystemAdminUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemAdminUserArrayInput)(nil)).Elem(), FmgSystemAdminUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemAdminUserMapInput)(nil)).Elem(), FmgSystemAdminUserMap{})
	pulumi.RegisterOutputType(FmgSystemAdminUserOutput{})
	pulumi.RegisterOutputType(FmgSystemAdminUserArrayOutput{})
	pulumi.RegisterOutputType(FmgSystemAdminUserMapOutput{})
}
