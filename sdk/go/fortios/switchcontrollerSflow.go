// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiSwitch sFlow.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSwitchcontrollerSflow(ctx, "trname", &fortios.SwitchcontrollerSflowArgs{
//				CollectorIp:   pulumi.String("0.0.0.0"),
//				CollectorPort: pulumi.Int(6343),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # SwitchController Sflow can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/switchcontrollerSflow:SwitchcontrollerSflow labelname SwitchControllerSflow
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/switchcontrollerSflow:SwitchcontrollerSflow labelname SwitchControllerSflow
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SwitchcontrollerSflow struct {
	pulumi.CustomResourceState

	// Collector IP.
	CollectorIp pulumi.StringOutput `pulumi:"collectorIp"`
	// SFlow collector port (0 - 65535).
	CollectorPort pulumi.IntOutput `pulumi:"collectorPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchcontrollerSflow registers a new resource with the given unique name, arguments, and options.
func NewSwitchcontrollerSflow(ctx *pulumi.Context,
	name string, args *SwitchcontrollerSflowArgs, opts ...pulumi.ResourceOption) (*SwitchcontrollerSflow, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CollectorIp == nil {
		return nil, errors.New("invalid value for required argument 'CollectorIp'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchcontrollerSflow
	err := ctx.RegisterResource("fortios:index/switchcontrollerSflow:SwitchcontrollerSflow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchcontrollerSflow gets an existing SwitchcontrollerSflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchcontrollerSflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchcontrollerSflowState, opts ...pulumi.ResourceOption) (*SwitchcontrollerSflow, error) {
	var resource SwitchcontrollerSflow
	err := ctx.ReadResource("fortios:index/switchcontrollerSflow:SwitchcontrollerSflow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchcontrollerSflow resources.
type switchcontrollerSflowState struct {
	// Collector IP.
	CollectorIp *string `pulumi:"collectorIp"`
	// SFlow collector port (0 - 65535).
	CollectorPort *int `pulumi:"collectorPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchcontrollerSflowState struct {
	// Collector IP.
	CollectorIp pulumi.StringPtrInput
	// SFlow collector port (0 - 65535).
	CollectorPort pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchcontrollerSflowState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchcontrollerSflowState)(nil)).Elem()
}

type switchcontrollerSflowArgs struct {
	// Collector IP.
	CollectorIp string `pulumi:"collectorIp"`
	// SFlow collector port (0 - 65535).
	CollectorPort *int `pulumi:"collectorPort"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchcontrollerSflow resource.
type SwitchcontrollerSflowArgs struct {
	// Collector IP.
	CollectorIp pulumi.StringInput
	// SFlow collector port (0 - 65535).
	CollectorPort pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchcontrollerSflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchcontrollerSflowArgs)(nil)).Elem()
}

type SwitchcontrollerSflowInput interface {
	pulumi.Input

	ToSwitchcontrollerSflowOutput() SwitchcontrollerSflowOutput
	ToSwitchcontrollerSflowOutputWithContext(ctx context.Context) SwitchcontrollerSflowOutput
}

func (*SwitchcontrollerSflow) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerSflow)(nil)).Elem()
}

func (i *SwitchcontrollerSflow) ToSwitchcontrollerSflowOutput() SwitchcontrollerSflowOutput {
	return i.ToSwitchcontrollerSflowOutputWithContext(context.Background())
}

func (i *SwitchcontrollerSflow) ToSwitchcontrollerSflowOutputWithContext(ctx context.Context) SwitchcontrollerSflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerSflowOutput)
}

// SwitchcontrollerSflowArrayInput is an input type that accepts SwitchcontrollerSflowArray and SwitchcontrollerSflowArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerSflowArrayInput` via:
//
//	SwitchcontrollerSflowArray{ SwitchcontrollerSflowArgs{...} }
type SwitchcontrollerSflowArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerSflowArrayOutput() SwitchcontrollerSflowArrayOutput
	ToSwitchcontrollerSflowArrayOutputWithContext(context.Context) SwitchcontrollerSflowArrayOutput
}

type SwitchcontrollerSflowArray []SwitchcontrollerSflowInput

func (SwitchcontrollerSflowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchcontrollerSflow)(nil)).Elem()
}

func (i SwitchcontrollerSflowArray) ToSwitchcontrollerSflowArrayOutput() SwitchcontrollerSflowArrayOutput {
	return i.ToSwitchcontrollerSflowArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerSflowArray) ToSwitchcontrollerSflowArrayOutputWithContext(ctx context.Context) SwitchcontrollerSflowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerSflowArrayOutput)
}

// SwitchcontrollerSflowMapInput is an input type that accepts SwitchcontrollerSflowMap and SwitchcontrollerSflowMapOutput values.
// You can construct a concrete instance of `SwitchcontrollerSflowMapInput` via:
//
//	SwitchcontrollerSflowMap{ "key": SwitchcontrollerSflowArgs{...} }
type SwitchcontrollerSflowMapInput interface {
	pulumi.Input

	ToSwitchcontrollerSflowMapOutput() SwitchcontrollerSflowMapOutput
	ToSwitchcontrollerSflowMapOutputWithContext(context.Context) SwitchcontrollerSflowMapOutput
}

type SwitchcontrollerSflowMap map[string]SwitchcontrollerSflowInput

func (SwitchcontrollerSflowMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchcontrollerSflow)(nil)).Elem()
}

func (i SwitchcontrollerSflowMap) ToSwitchcontrollerSflowMapOutput() SwitchcontrollerSflowMapOutput {
	return i.ToSwitchcontrollerSflowMapOutputWithContext(context.Background())
}

func (i SwitchcontrollerSflowMap) ToSwitchcontrollerSflowMapOutputWithContext(ctx context.Context) SwitchcontrollerSflowMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerSflowMapOutput)
}

type SwitchcontrollerSflowOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerSflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerSflow)(nil)).Elem()
}

func (o SwitchcontrollerSflowOutput) ToSwitchcontrollerSflowOutput() SwitchcontrollerSflowOutput {
	return o
}

func (o SwitchcontrollerSflowOutput) ToSwitchcontrollerSflowOutputWithContext(ctx context.Context) SwitchcontrollerSflowOutput {
	return o
}

// Collector IP.
func (o SwitchcontrollerSflowOutput) CollectorIp() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerSflow) pulumi.StringOutput { return v.CollectorIp }).(pulumi.StringOutput)
}

// SFlow collector port (0 - 65535).
func (o SwitchcontrollerSflowOutput) CollectorPort() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchcontrollerSflow) pulumi.IntOutput { return v.CollectorPort }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SwitchcontrollerSflowOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerSflow) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerSflowArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerSflowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchcontrollerSflow)(nil)).Elem()
}

func (o SwitchcontrollerSflowArrayOutput) ToSwitchcontrollerSflowArrayOutput() SwitchcontrollerSflowArrayOutput {
	return o
}

func (o SwitchcontrollerSflowArrayOutput) ToSwitchcontrollerSflowArrayOutputWithContext(ctx context.Context) SwitchcontrollerSflowArrayOutput {
	return o
}

func (o SwitchcontrollerSflowArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerSflowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchcontrollerSflow {
		return vs[0].([]*SwitchcontrollerSflow)[vs[1].(int)]
	}).(SwitchcontrollerSflowOutput)
}

type SwitchcontrollerSflowMapOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerSflowMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchcontrollerSflow)(nil)).Elem()
}

func (o SwitchcontrollerSflowMapOutput) ToSwitchcontrollerSflowMapOutput() SwitchcontrollerSflowMapOutput {
	return o
}

func (o SwitchcontrollerSflowMapOutput) ToSwitchcontrollerSflowMapOutputWithContext(ctx context.Context) SwitchcontrollerSflowMapOutput {
	return o
}

func (o SwitchcontrollerSflowMapOutput) MapIndex(k pulumi.StringInput) SwitchcontrollerSflowOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchcontrollerSflow {
		return vs[0].(map[string]*SwitchcontrollerSflow)[vs[1].(string)]
	}).(SwitchcontrollerSflowOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerSflowInput)(nil)).Elem(), &SwitchcontrollerSflow{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerSflowArrayInput)(nil)).Elem(), SwitchcontrollerSflowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerSflowMapInput)(nil)).Elem(), SwitchcontrollerSflowMap{})
	pulumi.RegisterOutputType(SwitchcontrollerSflowOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerSflowArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerSflowMapOutput{})
}
