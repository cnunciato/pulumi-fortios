// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Replacement messages.
//
// ## Import
//
// # SystemReplacemsg Icap can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgIcap:SystemreplacemsgIcap labelname {{msg_type}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgIcap:SystemreplacemsgIcap labelname {{msg_type}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemreplacemsgIcap struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemreplacemsgIcap registers a new resource with the given unique name, arguments, and options.
func NewSystemreplacemsgIcap(ctx *pulumi.Context,
	name string, args *SystemreplacemsgIcapArgs, opts ...pulumi.ResourceOption) (*SystemreplacemsgIcap, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemreplacemsgIcap
	err := ctx.RegisterResource("fortios:index/systemreplacemsgIcap:SystemreplacemsgIcap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemreplacemsgIcap gets an existing SystemreplacemsgIcap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemreplacemsgIcap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemreplacemsgIcapState, opts ...pulumi.ResourceOption) (*SystemreplacemsgIcap, error) {
	var resource SystemreplacemsgIcap
	err := ctx.ReadResource("fortios:index/systemreplacemsgIcap:SystemreplacemsgIcap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemreplacemsgIcap resources.
type systemreplacemsgIcapState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemreplacemsgIcapState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgIcapState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgIcapState)(nil)).Elem()
}

type systemreplacemsgIcapArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemreplacemsgIcap resource.
type SystemreplacemsgIcapArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgIcapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgIcapArgs)(nil)).Elem()
}

type SystemreplacemsgIcapInput interface {
	pulumi.Input

	ToSystemreplacemsgIcapOutput() SystemreplacemsgIcapOutput
	ToSystemreplacemsgIcapOutputWithContext(ctx context.Context) SystemreplacemsgIcapOutput
}

func (*SystemreplacemsgIcap) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgIcap)(nil)).Elem()
}

func (i *SystemreplacemsgIcap) ToSystemreplacemsgIcapOutput() SystemreplacemsgIcapOutput {
	return i.ToSystemreplacemsgIcapOutputWithContext(context.Background())
}

func (i *SystemreplacemsgIcap) ToSystemreplacemsgIcapOutputWithContext(ctx context.Context) SystemreplacemsgIcapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgIcapOutput)
}

// SystemreplacemsgIcapArrayInput is an input type that accepts SystemreplacemsgIcapArray and SystemreplacemsgIcapArrayOutput values.
// You can construct a concrete instance of `SystemreplacemsgIcapArrayInput` via:
//
//	SystemreplacemsgIcapArray{ SystemreplacemsgIcapArgs{...} }
type SystemreplacemsgIcapArrayInput interface {
	pulumi.Input

	ToSystemreplacemsgIcapArrayOutput() SystemreplacemsgIcapArrayOutput
	ToSystemreplacemsgIcapArrayOutputWithContext(context.Context) SystemreplacemsgIcapArrayOutput
}

type SystemreplacemsgIcapArray []SystemreplacemsgIcapInput

func (SystemreplacemsgIcapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgIcap)(nil)).Elem()
}

func (i SystemreplacemsgIcapArray) ToSystemreplacemsgIcapArrayOutput() SystemreplacemsgIcapArrayOutput {
	return i.ToSystemreplacemsgIcapArrayOutputWithContext(context.Background())
}

func (i SystemreplacemsgIcapArray) ToSystemreplacemsgIcapArrayOutputWithContext(ctx context.Context) SystemreplacemsgIcapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgIcapArrayOutput)
}

// SystemreplacemsgIcapMapInput is an input type that accepts SystemreplacemsgIcapMap and SystemreplacemsgIcapMapOutput values.
// You can construct a concrete instance of `SystemreplacemsgIcapMapInput` via:
//
//	SystemreplacemsgIcapMap{ "key": SystemreplacemsgIcapArgs{...} }
type SystemreplacemsgIcapMapInput interface {
	pulumi.Input

	ToSystemreplacemsgIcapMapOutput() SystemreplacemsgIcapMapOutput
	ToSystemreplacemsgIcapMapOutputWithContext(context.Context) SystemreplacemsgIcapMapOutput
}

type SystemreplacemsgIcapMap map[string]SystemreplacemsgIcapInput

func (SystemreplacemsgIcapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgIcap)(nil)).Elem()
}

func (i SystemreplacemsgIcapMap) ToSystemreplacemsgIcapMapOutput() SystemreplacemsgIcapMapOutput {
	return i.ToSystemreplacemsgIcapMapOutputWithContext(context.Background())
}

func (i SystemreplacemsgIcapMap) ToSystemreplacemsgIcapMapOutputWithContext(ctx context.Context) SystemreplacemsgIcapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgIcapMapOutput)
}

type SystemreplacemsgIcapOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgIcapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgIcap)(nil)).Elem()
}

func (o SystemreplacemsgIcapOutput) ToSystemreplacemsgIcapOutput() SystemreplacemsgIcapOutput {
	return o
}

func (o SystemreplacemsgIcapOutput) ToSystemreplacemsgIcapOutputWithContext(ctx context.Context) SystemreplacemsgIcapOutput {
	return o
}

// Message string.
func (o SystemreplacemsgIcapOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgIcap) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemreplacemsgIcapOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgIcap) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemreplacemsgIcapOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgIcap) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o SystemreplacemsgIcapOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgIcap) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemreplacemsgIcapOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgIcap) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemreplacemsgIcapArrayOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgIcapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgIcap)(nil)).Elem()
}

func (o SystemreplacemsgIcapArrayOutput) ToSystemreplacemsgIcapArrayOutput() SystemreplacemsgIcapArrayOutput {
	return o
}

func (o SystemreplacemsgIcapArrayOutput) ToSystemreplacemsgIcapArrayOutputWithContext(ctx context.Context) SystemreplacemsgIcapArrayOutput {
	return o
}

func (o SystemreplacemsgIcapArrayOutput) Index(i pulumi.IntInput) SystemreplacemsgIcapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemreplacemsgIcap {
		return vs[0].([]*SystemreplacemsgIcap)[vs[1].(int)]
	}).(SystemreplacemsgIcapOutput)
}

type SystemreplacemsgIcapMapOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgIcapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgIcap)(nil)).Elem()
}

func (o SystemreplacemsgIcapMapOutput) ToSystemreplacemsgIcapMapOutput() SystemreplacemsgIcapMapOutput {
	return o
}

func (o SystemreplacemsgIcapMapOutput) ToSystemreplacemsgIcapMapOutputWithContext(ctx context.Context) SystemreplacemsgIcapMapOutput {
	return o
}

func (o SystemreplacemsgIcapMapOutput) MapIndex(k pulumi.StringInput) SystemreplacemsgIcapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemreplacemsgIcap {
		return vs[0].(map[string]*SystemreplacemsgIcap)[vs[1].(string)]
	}).(SystemreplacemsgIcapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgIcapInput)(nil)).Elem(), &SystemreplacemsgIcap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgIcapArrayInput)(nil)).Elem(), SystemreplacemsgIcapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgIcapMapInput)(nil)).Elem(), SystemreplacemsgIcapMap{})
	pulumi.RegisterOutputType(SystemreplacemsgIcapOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgIcapArrayOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgIcapMapOutput{})
}
