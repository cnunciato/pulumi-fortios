// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// OSPF6 interface configuration.
//
// > The provider supports the definition of Ospf6-Interface in Router Ospf6 `RouterOspf6`, and also allows the definition of separate Ospf6-Interface resources `Routerospf6Ospf6interface`, but do not use a `RouterOspf6` with in-line Ospf6-Interface in conjunction with any `Routerospf6Ospf6interface` resources, otherwise conflicts and overwrite will occur.
//
// ## Import
//
// # Routerospf6 Ospf6Interface can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/routerospf6Ospf6interface:Routerospf6Ospf6interface labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/routerospf6Ospf6interface:Routerospf6Ospf6interface labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type Routerospf6Ospf6interface struct {
	pulumi.CustomResourceState

	// A.B.C.D, in IPv4 address format.
	AreaId pulumi.StringOutput `pulumi:"areaId"`
	// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
	Authentication pulumi.StringOutput `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringOutput `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntOutput `pulumi:"cost"`
	// Dead interval.
	DeadInterval pulumi.IntOutput `pulumi:"deadInterval"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Hello interval.
	HelloInterval pulumi.IntOutput `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg pulumi.StringOutput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg pulumi.StringOutput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys Routerospf6Ospf6interfaceIpsecKeyArrayOutput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntOutput `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu pulumi.IntOutput `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
	MtuIgnore pulumi.StringOutput `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name pulumi.StringOutput `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors Routerospf6Ospf6interfaceNeighborArrayOutput `pulumi:"neighbors"`
	// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType pulumi.StringOutput `pulumi:"networkType"`
	// priority
	Priority pulumi.IntOutput `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntOutput `pulumi:"retransmitInterval"`
	// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Transmit delay.
	TransmitDelay pulumi.IntOutput `pulumi:"transmitDelay"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewRouterospf6Ospf6interface registers a new resource with the given unique name, arguments, and options.
func NewRouterospf6Ospf6interface(ctx *pulumi.Context,
	name string, args *Routerospf6Ospf6interfaceArgs, opts ...pulumi.ResourceOption) (*Routerospf6Ospf6interface, error) {
	if args == nil {
		args = &Routerospf6Ospf6interfaceArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource Routerospf6Ospf6interface
	err := ctx.RegisterResource("fortios:index/routerospf6Ospf6interface:Routerospf6Ospf6interface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterospf6Ospf6interface gets an existing Routerospf6Ospf6interface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterospf6Ospf6interface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Routerospf6Ospf6interfaceState, opts ...pulumi.ResourceOption) (*Routerospf6Ospf6interface, error) {
	var resource Routerospf6Ospf6interface
	err := ctx.ReadResource("fortios:index/routerospf6Ospf6interface:Routerospf6Ospf6interface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Routerospf6Ospf6interface resources.
type routerospf6Ospf6interfaceState struct {
	// A.B.C.D, in IPv4 address format.
	AreaId *string `pulumi:"areaId"`
	// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
	Authentication *string `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface *string `pulumi:"interface"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []Routerospf6Ospf6interfaceIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval *int `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu *int `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
	MtuIgnore *string `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name *string `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors []Routerospf6Ospf6interfaceNeighbor `pulumi:"neighbors"`
	// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType *string `pulumi:"networkType"`
	// priority
	Priority *int `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Routerospf6Ospf6interfaceState struct {
	// A.B.C.D, in IPv4 address format.
	AreaId pulumi.StringPtrInput
	// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
	Authentication pulumi.StringPtrInput
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringPtrInput
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput
	// Dead interval.
	DeadInterval pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Hello interval.
	HelloInterval pulumi.IntPtrInput
	// Configuration interface name.
	Interface pulumi.StringPtrInput
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg pulumi.StringPtrInput
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg pulumi.StringPtrInput
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys Routerospf6Ospf6interfaceIpsecKeyArrayInput
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntPtrInput
	// MTU for OSPFv3 packets.
	Mtu pulumi.IntPtrInput
	// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
	MtuIgnore pulumi.StringPtrInput
	// Interface entry name.
	Name pulumi.StringPtrInput
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors Routerospf6Ospf6interfaceNeighborArrayInput
	// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType pulumi.StringPtrInput
	// priority
	Priority pulumi.IntPtrInput
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput
	// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Routerospf6Ospf6interfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerospf6Ospf6interfaceState)(nil)).Elem()
}

type routerospf6Ospf6interfaceArgs struct {
	// A.B.C.D, in IPv4 address format.
	AreaId *string `pulumi:"areaId"`
	// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
	Authentication *string `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface *string `pulumi:"interface"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []Routerospf6Ospf6interfaceIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval *int `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu *int `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
	MtuIgnore *string `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name *string `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors []Routerospf6Ospf6interfaceNeighbor `pulumi:"neighbors"`
	// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType *string `pulumi:"networkType"`
	// priority
	Priority *int `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Routerospf6Ospf6interface resource.
type Routerospf6Ospf6interfaceArgs struct {
	// A.B.C.D, in IPv4 address format.
	AreaId pulumi.StringPtrInput
	// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
	Authentication pulumi.StringPtrInput
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringPtrInput
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput
	// Dead interval.
	DeadInterval pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Hello interval.
	HelloInterval pulumi.IntPtrInput
	// Configuration interface name.
	Interface pulumi.StringPtrInput
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg pulumi.StringPtrInput
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg pulumi.StringPtrInput
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys Routerospf6Ospf6interfaceIpsecKeyArrayInput
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntPtrInput
	// MTU for OSPFv3 packets.
	Mtu pulumi.IntPtrInput
	// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
	MtuIgnore pulumi.StringPtrInput
	// Interface entry name.
	Name pulumi.StringPtrInput
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors Routerospf6Ospf6interfaceNeighborArrayInput
	// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType pulumi.StringPtrInput
	// priority
	Priority pulumi.IntPtrInput
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput
	// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Routerospf6Ospf6interfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerospf6Ospf6interfaceArgs)(nil)).Elem()
}

type Routerospf6Ospf6interfaceInput interface {
	pulumi.Input

	ToRouterospf6Ospf6interfaceOutput() Routerospf6Ospf6interfaceOutput
	ToRouterospf6Ospf6interfaceOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceOutput
}

func (*Routerospf6Ospf6interface) ElementType() reflect.Type {
	return reflect.TypeOf((**Routerospf6Ospf6interface)(nil)).Elem()
}

func (i *Routerospf6Ospf6interface) ToRouterospf6Ospf6interfaceOutput() Routerospf6Ospf6interfaceOutput {
	return i.ToRouterospf6Ospf6interfaceOutputWithContext(context.Background())
}

func (i *Routerospf6Ospf6interface) ToRouterospf6Ospf6interfaceOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6interfaceOutput)
}

// Routerospf6Ospf6interfaceArrayInput is an input type that accepts Routerospf6Ospf6interfaceArray and Routerospf6Ospf6interfaceArrayOutput values.
// You can construct a concrete instance of `Routerospf6Ospf6interfaceArrayInput` via:
//
//	Routerospf6Ospf6interfaceArray{ Routerospf6Ospf6interfaceArgs{...} }
type Routerospf6Ospf6interfaceArrayInput interface {
	pulumi.Input

	ToRouterospf6Ospf6interfaceArrayOutput() Routerospf6Ospf6interfaceArrayOutput
	ToRouterospf6Ospf6interfaceArrayOutputWithContext(context.Context) Routerospf6Ospf6interfaceArrayOutput
}

type Routerospf6Ospf6interfaceArray []Routerospf6Ospf6interfaceInput

func (Routerospf6Ospf6interfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Routerospf6Ospf6interface)(nil)).Elem()
}

func (i Routerospf6Ospf6interfaceArray) ToRouterospf6Ospf6interfaceArrayOutput() Routerospf6Ospf6interfaceArrayOutput {
	return i.ToRouterospf6Ospf6interfaceArrayOutputWithContext(context.Background())
}

func (i Routerospf6Ospf6interfaceArray) ToRouterospf6Ospf6interfaceArrayOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6interfaceArrayOutput)
}

// Routerospf6Ospf6interfaceMapInput is an input type that accepts Routerospf6Ospf6interfaceMap and Routerospf6Ospf6interfaceMapOutput values.
// You can construct a concrete instance of `Routerospf6Ospf6interfaceMapInput` via:
//
//	Routerospf6Ospf6interfaceMap{ "key": Routerospf6Ospf6interfaceArgs{...} }
type Routerospf6Ospf6interfaceMapInput interface {
	pulumi.Input

	ToRouterospf6Ospf6interfaceMapOutput() Routerospf6Ospf6interfaceMapOutput
	ToRouterospf6Ospf6interfaceMapOutputWithContext(context.Context) Routerospf6Ospf6interfaceMapOutput
}

type Routerospf6Ospf6interfaceMap map[string]Routerospf6Ospf6interfaceInput

func (Routerospf6Ospf6interfaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Routerospf6Ospf6interface)(nil)).Elem()
}

func (i Routerospf6Ospf6interfaceMap) ToRouterospf6Ospf6interfaceMapOutput() Routerospf6Ospf6interfaceMapOutput {
	return i.ToRouterospf6Ospf6interfaceMapOutputWithContext(context.Background())
}

func (i Routerospf6Ospf6interfaceMap) ToRouterospf6Ospf6interfaceMapOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6interfaceMapOutput)
}

type Routerospf6Ospf6interfaceOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6interfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Routerospf6Ospf6interface)(nil)).Elem()
}

func (o Routerospf6Ospf6interfaceOutput) ToRouterospf6Ospf6interfaceOutput() Routerospf6Ospf6interfaceOutput {
	return o
}

func (o Routerospf6Ospf6interfaceOutput) ToRouterospf6Ospf6interfaceOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceOutput {
	return o
}

// A.B.C.D, in IPv4 address format.
func (o Routerospf6Ospf6interfaceOutput) AreaId() pulumi.StringOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringOutput { return v.AreaId }).(pulumi.StringOutput)
}

// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
func (o Routerospf6Ospf6interfaceOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringOutput { return v.Authentication }).(pulumi.StringOutput)
}

// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
func (o Routerospf6Ospf6interfaceOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringOutput { return v.Bfd }).(pulumi.StringOutput)
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o Routerospf6Ospf6interfaceOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.IntOutput { return v.Cost }).(pulumi.IntOutput)
}

// Dead interval.
func (o Routerospf6Ospf6interfaceOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.IntOutput { return v.DeadInterval }).(pulumi.IntOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Routerospf6Ospf6interfaceOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Hello interval.
func (o Routerospf6Ospf6interfaceOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.IntOutput { return v.HelloInterval }).(pulumi.IntOutput)
}

// Configuration interface name.
func (o Routerospf6Ospf6interfaceOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
func (o Routerospf6Ospf6interfaceOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringOutput { return v.IpsecAuthAlg }).(pulumi.StringOutput)
}

// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
func (o Routerospf6Ospf6interfaceOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringOutput { return v.IpsecEncAlg }).(pulumi.StringOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o Routerospf6Ospf6interfaceOutput) IpsecKeys() Routerospf6Ospf6interfaceIpsecKeyArrayOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) Routerospf6Ospf6interfaceIpsecKeyArrayOutput { return v.IpsecKeys }).(Routerospf6Ospf6interfaceIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o Routerospf6Ospf6interfaceOutput) KeyRolloverInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.IntOutput { return v.KeyRolloverInterval }).(pulumi.IntOutput)
}

// MTU for OSPFv3 packets.
func (o Routerospf6Ospf6interfaceOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.IntOutput { return v.Mtu }).(pulumi.IntOutput)
}

// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
func (o Routerospf6Ospf6interfaceOutput) MtuIgnore() pulumi.StringOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringOutput { return v.MtuIgnore }).(pulumi.StringOutput)
}

// Interface entry name.
func (o Routerospf6Ospf6interfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
func (o Routerospf6Ospf6interfaceOutput) Neighbors() Routerospf6Ospf6interfaceNeighborArrayOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) Routerospf6Ospf6interfaceNeighborArrayOutput { return v.Neighbors }).(Routerospf6Ospf6interfaceNeighborArrayOutput)
}

// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
func (o Routerospf6Ospf6interfaceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringOutput { return v.NetworkType }).(pulumi.StringOutput)
}

// priority
func (o Routerospf6Ospf6interfaceOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// Retransmit interval.
func (o Routerospf6Ospf6interfaceOutput) RetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.IntOutput { return v.RetransmitInterval }).(pulumi.IntOutput)
}

// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
func (o Routerospf6Ospf6interfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Transmit delay.
func (o Routerospf6Ospf6interfaceOutput) TransmitDelay() pulumi.IntOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.IntOutput { return v.TransmitDelay }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Routerospf6Ospf6interfaceOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Routerospf6Ospf6interface) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Routerospf6Ospf6interfaceArrayOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6interfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Routerospf6Ospf6interface)(nil)).Elem()
}

func (o Routerospf6Ospf6interfaceArrayOutput) ToRouterospf6Ospf6interfaceArrayOutput() Routerospf6Ospf6interfaceArrayOutput {
	return o
}

func (o Routerospf6Ospf6interfaceArrayOutput) ToRouterospf6Ospf6interfaceArrayOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceArrayOutput {
	return o
}

func (o Routerospf6Ospf6interfaceArrayOutput) Index(i pulumi.IntInput) Routerospf6Ospf6interfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Routerospf6Ospf6interface {
		return vs[0].([]*Routerospf6Ospf6interface)[vs[1].(int)]
	}).(Routerospf6Ospf6interfaceOutput)
}

type Routerospf6Ospf6interfaceMapOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6interfaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Routerospf6Ospf6interface)(nil)).Elem()
}

func (o Routerospf6Ospf6interfaceMapOutput) ToRouterospf6Ospf6interfaceMapOutput() Routerospf6Ospf6interfaceMapOutput {
	return o
}

func (o Routerospf6Ospf6interfaceMapOutput) ToRouterospf6Ospf6interfaceMapOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceMapOutput {
	return o
}

func (o Routerospf6Ospf6interfaceMapOutput) MapIndex(k pulumi.StringInput) Routerospf6Ospf6interfaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Routerospf6Ospf6interface {
		return vs[0].(map[string]*Routerospf6Ospf6interface)[vs[1].(string)]
	}).(Routerospf6Ospf6interfaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6interfaceInput)(nil)).Elem(), &Routerospf6Ospf6interface{})
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6interfaceArrayInput)(nil)).Elem(), Routerospf6Ospf6interfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6interfaceMapInput)(nil)).Elem(), Routerospf6Ospf6interfaceMap{})
	pulumi.RegisterOutputType(Routerospf6Ospf6interfaceOutput{})
	pulumi.RegisterOutputType(Routerospf6Ospf6interfaceArrayOutput{})
	pulumi.RegisterOutputType(Routerospf6Ospf6interfaceMapOutput{})
}
