// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Replacement messages.
//
// ## Import
//
// # SystemReplacemsg Alertmail can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgAlertmail:SystemreplacemsgAlertmail labelname {{msg_type}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgAlertmail:SystemreplacemsgAlertmail labelname {{msg_type}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemreplacemsgAlertmail struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemreplacemsgAlertmail registers a new resource with the given unique name, arguments, and options.
func NewSystemreplacemsgAlertmail(ctx *pulumi.Context,
	name string, args *SystemreplacemsgAlertmailArgs, opts ...pulumi.ResourceOption) (*SystemreplacemsgAlertmail, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemreplacemsgAlertmail
	err := ctx.RegisterResource("fortios:index/systemreplacemsgAlertmail:SystemreplacemsgAlertmail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemreplacemsgAlertmail gets an existing SystemreplacemsgAlertmail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemreplacemsgAlertmail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemreplacemsgAlertmailState, opts ...pulumi.ResourceOption) (*SystemreplacemsgAlertmail, error) {
	var resource SystemreplacemsgAlertmail
	err := ctx.ReadResource("fortios:index/systemreplacemsgAlertmail:SystemreplacemsgAlertmail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemreplacemsgAlertmail resources.
type systemreplacemsgAlertmailState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemreplacemsgAlertmailState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgAlertmailState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgAlertmailState)(nil)).Elem()
}

type systemreplacemsgAlertmailArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemreplacemsgAlertmail resource.
type SystemreplacemsgAlertmailArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgAlertmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgAlertmailArgs)(nil)).Elem()
}

type SystemreplacemsgAlertmailInput interface {
	pulumi.Input

	ToSystemreplacemsgAlertmailOutput() SystemreplacemsgAlertmailOutput
	ToSystemreplacemsgAlertmailOutputWithContext(ctx context.Context) SystemreplacemsgAlertmailOutput
}

func (*SystemreplacemsgAlertmail) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgAlertmail)(nil)).Elem()
}

func (i *SystemreplacemsgAlertmail) ToSystemreplacemsgAlertmailOutput() SystemreplacemsgAlertmailOutput {
	return i.ToSystemreplacemsgAlertmailOutputWithContext(context.Background())
}

func (i *SystemreplacemsgAlertmail) ToSystemreplacemsgAlertmailOutputWithContext(ctx context.Context) SystemreplacemsgAlertmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgAlertmailOutput)
}

// SystemreplacemsgAlertmailArrayInput is an input type that accepts SystemreplacemsgAlertmailArray and SystemreplacemsgAlertmailArrayOutput values.
// You can construct a concrete instance of `SystemreplacemsgAlertmailArrayInput` via:
//
//	SystemreplacemsgAlertmailArray{ SystemreplacemsgAlertmailArgs{...} }
type SystemreplacemsgAlertmailArrayInput interface {
	pulumi.Input

	ToSystemreplacemsgAlertmailArrayOutput() SystemreplacemsgAlertmailArrayOutput
	ToSystemreplacemsgAlertmailArrayOutputWithContext(context.Context) SystemreplacemsgAlertmailArrayOutput
}

type SystemreplacemsgAlertmailArray []SystemreplacemsgAlertmailInput

func (SystemreplacemsgAlertmailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgAlertmail)(nil)).Elem()
}

func (i SystemreplacemsgAlertmailArray) ToSystemreplacemsgAlertmailArrayOutput() SystemreplacemsgAlertmailArrayOutput {
	return i.ToSystemreplacemsgAlertmailArrayOutputWithContext(context.Background())
}

func (i SystemreplacemsgAlertmailArray) ToSystemreplacemsgAlertmailArrayOutputWithContext(ctx context.Context) SystemreplacemsgAlertmailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgAlertmailArrayOutput)
}

// SystemreplacemsgAlertmailMapInput is an input type that accepts SystemreplacemsgAlertmailMap and SystemreplacemsgAlertmailMapOutput values.
// You can construct a concrete instance of `SystemreplacemsgAlertmailMapInput` via:
//
//	SystemreplacemsgAlertmailMap{ "key": SystemreplacemsgAlertmailArgs{...} }
type SystemreplacemsgAlertmailMapInput interface {
	pulumi.Input

	ToSystemreplacemsgAlertmailMapOutput() SystemreplacemsgAlertmailMapOutput
	ToSystemreplacemsgAlertmailMapOutputWithContext(context.Context) SystemreplacemsgAlertmailMapOutput
}

type SystemreplacemsgAlertmailMap map[string]SystemreplacemsgAlertmailInput

func (SystemreplacemsgAlertmailMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgAlertmail)(nil)).Elem()
}

func (i SystemreplacemsgAlertmailMap) ToSystemreplacemsgAlertmailMapOutput() SystemreplacemsgAlertmailMapOutput {
	return i.ToSystemreplacemsgAlertmailMapOutputWithContext(context.Background())
}

func (i SystemreplacemsgAlertmailMap) ToSystemreplacemsgAlertmailMapOutputWithContext(ctx context.Context) SystemreplacemsgAlertmailMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgAlertmailMapOutput)
}

type SystemreplacemsgAlertmailOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgAlertmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgAlertmail)(nil)).Elem()
}

func (o SystemreplacemsgAlertmailOutput) ToSystemreplacemsgAlertmailOutput() SystemreplacemsgAlertmailOutput {
	return o
}

func (o SystemreplacemsgAlertmailOutput) ToSystemreplacemsgAlertmailOutputWithContext(ctx context.Context) SystemreplacemsgAlertmailOutput {
	return o
}

// Message string.
func (o SystemreplacemsgAlertmailOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgAlertmail) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemreplacemsgAlertmailOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgAlertmail) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemreplacemsgAlertmailOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgAlertmail) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o SystemreplacemsgAlertmailOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgAlertmail) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemreplacemsgAlertmailOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgAlertmail) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemreplacemsgAlertmailArrayOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgAlertmailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgAlertmail)(nil)).Elem()
}

func (o SystemreplacemsgAlertmailArrayOutput) ToSystemreplacemsgAlertmailArrayOutput() SystemreplacemsgAlertmailArrayOutput {
	return o
}

func (o SystemreplacemsgAlertmailArrayOutput) ToSystemreplacemsgAlertmailArrayOutputWithContext(ctx context.Context) SystemreplacemsgAlertmailArrayOutput {
	return o
}

func (o SystemreplacemsgAlertmailArrayOutput) Index(i pulumi.IntInput) SystemreplacemsgAlertmailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemreplacemsgAlertmail {
		return vs[0].([]*SystemreplacemsgAlertmail)[vs[1].(int)]
	}).(SystemreplacemsgAlertmailOutput)
}

type SystemreplacemsgAlertmailMapOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgAlertmailMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgAlertmail)(nil)).Elem()
}

func (o SystemreplacemsgAlertmailMapOutput) ToSystemreplacemsgAlertmailMapOutput() SystemreplacemsgAlertmailMapOutput {
	return o
}

func (o SystemreplacemsgAlertmailMapOutput) ToSystemreplacemsgAlertmailMapOutputWithContext(ctx context.Context) SystemreplacemsgAlertmailMapOutput {
	return o
}

func (o SystemreplacemsgAlertmailMapOutput) MapIndex(k pulumi.StringInput) SystemreplacemsgAlertmailOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemreplacemsgAlertmail {
		return vs[0].(map[string]*SystemreplacemsgAlertmail)[vs[1].(string)]
	}).(SystemreplacemsgAlertmailOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgAlertmailInput)(nil)).Elem(), &SystemreplacemsgAlertmail{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgAlertmailArrayInput)(nil)).Elem(), SystemreplacemsgAlertmailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgAlertmailMapInput)(nil)).Elem(), SystemreplacemsgAlertmailMap{})
	pulumi.RegisterOutputType(SystemreplacemsgAlertmailOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgAlertmailArrayOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgAlertmailMapOutput{})
}
