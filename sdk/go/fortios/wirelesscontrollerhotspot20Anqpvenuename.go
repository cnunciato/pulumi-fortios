// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure venue name duple.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewWirelesscontrollerhotspot20Anqpvenuename(ctx, "trname", &fortios.Wirelesscontrollerhotspot20AnqpvenuenameArgs{
//				ValueLists: fortios.Wirelesscontrollerhotspot20AnqpvenuenameValueListArray{
//					&fortios.Wirelesscontrollerhotspot20AnqpvenuenameValueListArgs{
//						Index: pulumi.Int(1),
//						Lang:  pulumi.String("CN"),
//						Value: pulumi.String("3"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # WirelessControllerHotspot20 AnqpVenueName can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/wirelesscontrollerhotspot20Anqpvenuename:Wirelesscontrollerhotspot20Anqpvenuename labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/wirelesscontrollerhotspot20Anqpvenuename:Wirelesscontrollerhotspot20Anqpvenuename labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type Wirelesscontrollerhotspot20Anqpvenuename struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Name of venue name duple.
	Name pulumi.StringOutput `pulumi:"name"`
	// Name list. The structure of `valueList` block is documented below.
	ValueLists Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWirelesscontrollerhotspot20Anqpvenuename registers a new resource with the given unique name, arguments, and options.
func NewWirelesscontrollerhotspot20Anqpvenuename(ctx *pulumi.Context,
	name string, args *Wirelesscontrollerhotspot20AnqpvenuenameArgs, opts ...pulumi.ResourceOption) (*Wirelesscontrollerhotspot20Anqpvenuename, error) {
	if args == nil {
		args = &Wirelesscontrollerhotspot20AnqpvenuenameArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource Wirelesscontrollerhotspot20Anqpvenuename
	err := ctx.RegisterResource("fortios:index/wirelesscontrollerhotspot20Anqpvenuename:Wirelesscontrollerhotspot20Anqpvenuename", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelesscontrollerhotspot20Anqpvenuename gets an existing Wirelesscontrollerhotspot20Anqpvenuename resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelesscontrollerhotspot20Anqpvenuename(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Wirelesscontrollerhotspot20AnqpvenuenameState, opts ...pulumi.ResourceOption) (*Wirelesscontrollerhotspot20Anqpvenuename, error) {
	var resource Wirelesscontrollerhotspot20Anqpvenuename
	err := ctx.ReadResource("fortios:index/wirelesscontrollerhotspot20Anqpvenuename:Wirelesscontrollerhotspot20Anqpvenuename", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Wirelesscontrollerhotspot20Anqpvenuename resources.
type wirelesscontrollerhotspot20AnqpvenuenameState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name of venue name duple.
	Name *string `pulumi:"name"`
	// Name list. The structure of `valueList` block is documented below.
	ValueLists []Wirelesscontrollerhotspot20AnqpvenuenameValueList `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Wirelesscontrollerhotspot20AnqpvenuenameState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Name of venue name duple.
	Name pulumi.StringPtrInput
	// Name list. The structure of `valueList` block is documented below.
	ValueLists Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Wirelesscontrollerhotspot20AnqpvenuenameState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelesscontrollerhotspot20AnqpvenuenameState)(nil)).Elem()
}

type wirelesscontrollerhotspot20AnqpvenuenameArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name of venue name duple.
	Name *string `pulumi:"name"`
	// Name list. The structure of `valueList` block is documented below.
	ValueLists []Wirelesscontrollerhotspot20AnqpvenuenameValueList `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Wirelesscontrollerhotspot20Anqpvenuename resource.
type Wirelesscontrollerhotspot20AnqpvenuenameArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Name of venue name duple.
	Name pulumi.StringPtrInput
	// Name list. The structure of `valueList` block is documented below.
	ValueLists Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Wirelesscontrollerhotspot20AnqpvenuenameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelesscontrollerhotspot20AnqpvenuenameArgs)(nil)).Elem()
}

type Wirelesscontrollerhotspot20AnqpvenuenameInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpvenuenameOutput() Wirelesscontrollerhotspot20AnqpvenuenameOutput
	ToWirelesscontrollerhotspot20AnqpvenuenameOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameOutput
}

func (*Wirelesscontrollerhotspot20Anqpvenuename) ElementType() reflect.Type {
	return reflect.TypeOf((**Wirelesscontrollerhotspot20Anqpvenuename)(nil)).Elem()
}

func (i *Wirelesscontrollerhotspot20Anqpvenuename) ToWirelesscontrollerhotspot20AnqpvenuenameOutput() Wirelesscontrollerhotspot20AnqpvenuenameOutput {
	return i.ToWirelesscontrollerhotspot20AnqpvenuenameOutputWithContext(context.Background())
}

func (i *Wirelesscontrollerhotspot20Anqpvenuename) ToWirelesscontrollerhotspot20AnqpvenuenameOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpvenuenameOutput)
}

// Wirelesscontrollerhotspot20AnqpvenuenameArrayInput is an input type that accepts Wirelesscontrollerhotspot20AnqpvenuenameArray and Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpvenuenameArrayInput` via:
//
//	Wirelesscontrollerhotspot20AnqpvenuenameArray{ Wirelesscontrollerhotspot20AnqpvenuenameArgs{...} }
type Wirelesscontrollerhotspot20AnqpvenuenameArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpvenuenameArrayOutput() Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput
	ToWirelesscontrollerhotspot20AnqpvenuenameArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput
}

type Wirelesscontrollerhotspot20AnqpvenuenameArray []Wirelesscontrollerhotspot20AnqpvenuenameInput

func (Wirelesscontrollerhotspot20AnqpvenuenameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Wirelesscontrollerhotspot20Anqpvenuename)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpvenuenameArray) ToWirelesscontrollerhotspot20AnqpvenuenameArrayOutput() Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput {
	return i.ToWirelesscontrollerhotspot20AnqpvenuenameArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpvenuenameArray) ToWirelesscontrollerhotspot20AnqpvenuenameArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput)
}

// Wirelesscontrollerhotspot20AnqpvenuenameMapInput is an input type that accepts Wirelesscontrollerhotspot20AnqpvenuenameMap and Wirelesscontrollerhotspot20AnqpvenuenameMapOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20AnqpvenuenameMapInput` via:
//
//	Wirelesscontrollerhotspot20AnqpvenuenameMap{ "key": Wirelesscontrollerhotspot20AnqpvenuenameArgs{...} }
type Wirelesscontrollerhotspot20AnqpvenuenameMapInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20AnqpvenuenameMapOutput() Wirelesscontrollerhotspot20AnqpvenuenameMapOutput
	ToWirelesscontrollerhotspot20AnqpvenuenameMapOutputWithContext(context.Context) Wirelesscontrollerhotspot20AnqpvenuenameMapOutput
}

type Wirelesscontrollerhotspot20AnqpvenuenameMap map[string]Wirelesscontrollerhotspot20AnqpvenuenameInput

func (Wirelesscontrollerhotspot20AnqpvenuenameMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Wirelesscontrollerhotspot20Anqpvenuename)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20AnqpvenuenameMap) ToWirelesscontrollerhotspot20AnqpvenuenameMapOutput() Wirelesscontrollerhotspot20AnqpvenuenameMapOutput {
	return i.ToWirelesscontrollerhotspot20AnqpvenuenameMapOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20AnqpvenuenameMap) ToWirelesscontrollerhotspot20AnqpvenuenameMapOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20AnqpvenuenameMapOutput)
}

type Wirelesscontrollerhotspot20AnqpvenuenameOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpvenuenameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Wirelesscontrollerhotspot20Anqpvenuename)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameOutput) ToWirelesscontrollerhotspot20AnqpvenuenameOutput() Wirelesscontrollerhotspot20AnqpvenuenameOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameOutput) ToWirelesscontrollerhotspot20AnqpvenuenameOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Wirelesscontrollerhotspot20AnqpvenuenameOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20Anqpvenuename) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Name of venue name duple.
func (o Wirelesscontrollerhotspot20AnqpvenuenameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20Anqpvenuename) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name list. The structure of `valueList` block is documented below.
func (o Wirelesscontrollerhotspot20AnqpvenuenameOutput) ValueLists() Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20Anqpvenuename) Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput {
		return v.ValueLists
	}).(Wirelesscontrollerhotspot20AnqpvenuenameValueListArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Wirelesscontrollerhotspot20AnqpvenuenameOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20Anqpvenuename) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Wirelesscontrollerhotspot20Anqpvenuename)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput) ToWirelesscontrollerhotspot20AnqpvenuenameArrayOutput() Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput) ToWirelesscontrollerhotspot20AnqpvenuenameArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20AnqpvenuenameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Wirelesscontrollerhotspot20Anqpvenuename {
		return vs[0].([]*Wirelesscontrollerhotspot20Anqpvenuename)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20AnqpvenuenameOutput)
}

type Wirelesscontrollerhotspot20AnqpvenuenameMapOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20AnqpvenuenameMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Wirelesscontrollerhotspot20Anqpvenuename)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameMapOutput) ToWirelesscontrollerhotspot20AnqpvenuenameMapOutput() Wirelesscontrollerhotspot20AnqpvenuenameMapOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameMapOutput) ToWirelesscontrollerhotspot20AnqpvenuenameMapOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20AnqpvenuenameMapOutput {
	return o
}

func (o Wirelesscontrollerhotspot20AnqpvenuenameMapOutput) MapIndex(k pulumi.StringInput) Wirelesscontrollerhotspot20AnqpvenuenameOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Wirelesscontrollerhotspot20Anqpvenuename {
		return vs[0].(map[string]*Wirelesscontrollerhotspot20Anqpvenuename)[vs[1].(string)]
	}).(Wirelesscontrollerhotspot20AnqpvenuenameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenuenameInput)(nil)).Elem(), &Wirelesscontrollerhotspot20Anqpvenuename{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenuenameArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpvenuenameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20AnqpvenuenameMapInput)(nil)).Elem(), Wirelesscontrollerhotspot20AnqpvenuenameMap{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpvenuenameOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpvenuenameArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20AnqpvenuenameMapOutput{})
}
