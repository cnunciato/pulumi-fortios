// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to configure virtual IP groups of FortiOS.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `FirewallVipgrp`, we recommend that you use the new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewFirewallObjectVipgroup(ctx, "v11", &fortios.FirewallObjectVipgroupArgs{
//				Comments:  pulumi.String("comments"),
//				Interface: pulumi.String("port3"),
//				Members: pulumi.StringArray{
//					pulumi.String("vip1"),
//					pulumi.String("vip3"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FirewallObjectVipgroup struct {
	pulumi.CustomResourceState

	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Interface name.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Member VIP objects of the group.
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// VIP group name.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewFirewallObjectVipgroup registers a new resource with the given unique name, arguments, and options.
func NewFirewallObjectVipgroup(ctx *pulumi.Context,
	name string, args *FirewallObjectVipgroupArgs, opts ...pulumi.ResourceOption) (*FirewallObjectVipgroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallObjectVipgroup
	err := ctx.RegisterResource("fortios:index/firewallObjectVipgroup:FirewallObjectVipgroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallObjectVipgroup gets an existing FirewallObjectVipgroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallObjectVipgroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallObjectVipgroupState, opts ...pulumi.ResourceOption) (*FirewallObjectVipgroup, error) {
	var resource FirewallObjectVipgroup
	err := ctx.ReadResource("fortios:index/firewallObjectVipgroup:FirewallObjectVipgroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallObjectVipgroup resources.
type firewallObjectVipgroupState struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// Member VIP objects of the group.
	Members []string `pulumi:"members"`
	// VIP group name.
	Name *string `pulumi:"name"`
}

type FirewallObjectVipgroupState struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// Interface name.
	Interface pulumi.StringPtrInput
	// Member VIP objects of the group.
	Members pulumi.StringArrayInput
	// VIP group name.
	Name pulumi.StringPtrInput
}

func (FirewallObjectVipgroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallObjectVipgroupState)(nil)).Elem()
}

type firewallObjectVipgroupArgs struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// Member VIP objects of the group.
	Members []string `pulumi:"members"`
	// VIP group name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a FirewallObjectVipgroup resource.
type FirewallObjectVipgroupArgs struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// Interface name.
	Interface pulumi.StringPtrInput
	// Member VIP objects of the group.
	Members pulumi.StringArrayInput
	// VIP group name.
	Name pulumi.StringPtrInput
}

func (FirewallObjectVipgroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallObjectVipgroupArgs)(nil)).Elem()
}

type FirewallObjectVipgroupInput interface {
	pulumi.Input

	ToFirewallObjectVipgroupOutput() FirewallObjectVipgroupOutput
	ToFirewallObjectVipgroupOutputWithContext(ctx context.Context) FirewallObjectVipgroupOutput
}

func (*FirewallObjectVipgroup) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallObjectVipgroup)(nil)).Elem()
}

func (i *FirewallObjectVipgroup) ToFirewallObjectVipgroupOutput() FirewallObjectVipgroupOutput {
	return i.ToFirewallObjectVipgroupOutputWithContext(context.Background())
}

func (i *FirewallObjectVipgroup) ToFirewallObjectVipgroupOutputWithContext(ctx context.Context) FirewallObjectVipgroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectVipgroupOutput)
}

// FirewallObjectVipgroupArrayInput is an input type that accepts FirewallObjectVipgroupArray and FirewallObjectVipgroupArrayOutput values.
// You can construct a concrete instance of `FirewallObjectVipgroupArrayInput` via:
//
//	FirewallObjectVipgroupArray{ FirewallObjectVipgroupArgs{...} }
type FirewallObjectVipgroupArrayInput interface {
	pulumi.Input

	ToFirewallObjectVipgroupArrayOutput() FirewallObjectVipgroupArrayOutput
	ToFirewallObjectVipgroupArrayOutputWithContext(context.Context) FirewallObjectVipgroupArrayOutput
}

type FirewallObjectVipgroupArray []FirewallObjectVipgroupInput

func (FirewallObjectVipgroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallObjectVipgroup)(nil)).Elem()
}

func (i FirewallObjectVipgroupArray) ToFirewallObjectVipgroupArrayOutput() FirewallObjectVipgroupArrayOutput {
	return i.ToFirewallObjectVipgroupArrayOutputWithContext(context.Background())
}

func (i FirewallObjectVipgroupArray) ToFirewallObjectVipgroupArrayOutputWithContext(ctx context.Context) FirewallObjectVipgroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectVipgroupArrayOutput)
}

// FirewallObjectVipgroupMapInput is an input type that accepts FirewallObjectVipgroupMap and FirewallObjectVipgroupMapOutput values.
// You can construct a concrete instance of `FirewallObjectVipgroupMapInput` via:
//
//	FirewallObjectVipgroupMap{ "key": FirewallObjectVipgroupArgs{...} }
type FirewallObjectVipgroupMapInput interface {
	pulumi.Input

	ToFirewallObjectVipgroupMapOutput() FirewallObjectVipgroupMapOutput
	ToFirewallObjectVipgroupMapOutputWithContext(context.Context) FirewallObjectVipgroupMapOutput
}

type FirewallObjectVipgroupMap map[string]FirewallObjectVipgroupInput

func (FirewallObjectVipgroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallObjectVipgroup)(nil)).Elem()
}

func (i FirewallObjectVipgroupMap) ToFirewallObjectVipgroupMapOutput() FirewallObjectVipgroupMapOutput {
	return i.ToFirewallObjectVipgroupMapOutputWithContext(context.Background())
}

func (i FirewallObjectVipgroupMap) ToFirewallObjectVipgroupMapOutputWithContext(ctx context.Context) FirewallObjectVipgroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectVipgroupMapOutput)
}

type FirewallObjectVipgroupOutput struct{ *pulumi.OutputState }

func (FirewallObjectVipgroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallObjectVipgroup)(nil)).Elem()
}

func (o FirewallObjectVipgroupOutput) ToFirewallObjectVipgroupOutput() FirewallObjectVipgroupOutput {
	return o
}

func (o FirewallObjectVipgroupOutput) ToFirewallObjectVipgroupOutputWithContext(ctx context.Context) FirewallObjectVipgroupOutput {
	return o
}

// Comment.
func (o FirewallObjectVipgroupOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectVipgroup) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// Interface name.
func (o FirewallObjectVipgroupOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectVipgroup) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Member VIP objects of the group.
func (o FirewallObjectVipgroupOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallObjectVipgroup) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// VIP group name.
func (o FirewallObjectVipgroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectVipgroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type FirewallObjectVipgroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallObjectVipgroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallObjectVipgroup)(nil)).Elem()
}

func (o FirewallObjectVipgroupArrayOutput) ToFirewallObjectVipgroupArrayOutput() FirewallObjectVipgroupArrayOutput {
	return o
}

func (o FirewallObjectVipgroupArrayOutput) ToFirewallObjectVipgroupArrayOutputWithContext(ctx context.Context) FirewallObjectVipgroupArrayOutput {
	return o
}

func (o FirewallObjectVipgroupArrayOutput) Index(i pulumi.IntInput) FirewallObjectVipgroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallObjectVipgroup {
		return vs[0].([]*FirewallObjectVipgroup)[vs[1].(int)]
	}).(FirewallObjectVipgroupOutput)
}

type FirewallObjectVipgroupMapOutput struct{ *pulumi.OutputState }

func (FirewallObjectVipgroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallObjectVipgroup)(nil)).Elem()
}

func (o FirewallObjectVipgroupMapOutput) ToFirewallObjectVipgroupMapOutput() FirewallObjectVipgroupMapOutput {
	return o
}

func (o FirewallObjectVipgroupMapOutput) ToFirewallObjectVipgroupMapOutputWithContext(ctx context.Context) FirewallObjectVipgroupMapOutput {
	return o
}

func (o FirewallObjectVipgroupMapOutput) MapIndex(k pulumi.StringInput) FirewallObjectVipgroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallObjectVipgroup {
		return vs[0].(map[string]*FirewallObjectVipgroup)[vs[1].(string)]
	}).(FirewallObjectVipgroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectVipgroupInput)(nil)).Elem(), &FirewallObjectVipgroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectVipgroupArrayInput)(nil)).Elem(), FirewallObjectVipgroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectVipgroupMapInput)(nil)).Elem(), FirewallObjectVipgroupMap{})
	pulumi.RegisterOutputType(FirewallObjectVipgroupOutput{})
	pulumi.RegisterOutputType(FirewallObjectVipgroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallObjectVipgroupMapOutput{})
}
