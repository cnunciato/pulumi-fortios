// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios system virtualwanlink
func LookupSystemVirtualwanlink(ctx *pulumi.Context, args *LookupSystemVirtualwanlinkArgs, opts ...pulumi.InvokeOption) (*LookupSystemVirtualwanlinkResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSystemVirtualwanlinkResult
	err := ctx.Invoke("fortios:index/getSystemVirtualwanlink:getSystemVirtualwanlink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemVirtualwanlink.
type LookupSystemVirtualwanlinkArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getSystemVirtualwanlink.
type LookupSystemVirtualwanlinkResult struct {
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces []GetSystemVirtualwanlinkFailAlertInterface `pulumi:"failAlertInterfaces"`
	// Enable/disable SD-WAN Internet connection status checking (failure detection).
	FailDetect string `pulumi:"failDetect"`
	// Virtual WAN Link health-check.
	HealthChecks []GetSystemVirtualwanlinkHealthCheck `pulumi:"healthChecks"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members.
	LoadBalanceMode string `pulumi:"loadBalanceMode"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members []GetSystemVirtualwanlinkMember `pulumi:"members"`
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime int `pulumi:"neighborHoldBootTime"`
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor.
	NeighborHoldDown string `pulumi:"neighborHoldDown"`
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime int `pulumi:"neighborHoldDownTime"`
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors []GetSystemVirtualwanlinkNeighbor `pulumi:"neighbors"`
	// Create SD-WAN rules or priority rules (also called services) to control how sessions are distributed to physical interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services []GetSystemVirtualwanlinkService `pulumi:"services"`
	// Enable/disable SD-WAN service.
	Status    string  `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones []GetSystemVirtualwanlinkZone `pulumi:"zones"`
}

func LookupSystemVirtualwanlinkOutput(ctx *pulumi.Context, args LookupSystemVirtualwanlinkOutputArgs, opts ...pulumi.InvokeOption) LookupSystemVirtualwanlinkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSystemVirtualwanlinkResult, error) {
			args := v.(LookupSystemVirtualwanlinkArgs)
			r, err := LookupSystemVirtualwanlink(ctx, &args, opts...)
			var s LookupSystemVirtualwanlinkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSystemVirtualwanlinkResultOutput)
}

// A collection of arguments for invoking getSystemVirtualwanlink.
type LookupSystemVirtualwanlinkOutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupSystemVirtualwanlinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemVirtualwanlinkArgs)(nil)).Elem()
}

// A collection of values returned by getSystemVirtualwanlink.
type LookupSystemVirtualwanlinkResultOutput struct{ *pulumi.OutputState }

func (LookupSystemVirtualwanlinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemVirtualwanlinkResult)(nil)).Elem()
}

func (o LookupSystemVirtualwanlinkResultOutput) ToLookupSystemVirtualwanlinkResultOutput() LookupSystemVirtualwanlinkResultOutput {
	return o
}

func (o LookupSystemVirtualwanlinkResultOutput) ToLookupSystemVirtualwanlinkResultOutputWithContext(ctx context.Context) LookupSystemVirtualwanlinkResultOutput {
	return o
}

// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
func (o LookupSystemVirtualwanlinkResultOutput) FailAlertInterfaces() GetSystemVirtualwanlinkFailAlertInterfaceArrayOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) []GetSystemVirtualwanlinkFailAlertInterface {
		return v.FailAlertInterfaces
	}).(GetSystemVirtualwanlinkFailAlertInterfaceArrayOutput)
}

// Enable/disable SD-WAN Internet connection status checking (failure detection).
func (o LookupSystemVirtualwanlinkResultOutput) FailDetect() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) string { return v.FailDetect }).(pulumi.StringOutput)
}

// Virtual WAN Link health-check.
func (o LookupSystemVirtualwanlinkResultOutput) HealthChecks() GetSystemVirtualwanlinkHealthCheckArrayOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) []GetSystemVirtualwanlinkHealthCheck { return v.HealthChecks }).(GetSystemVirtualwanlinkHealthCheckArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSystemVirtualwanlinkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) string { return v.Id }).(pulumi.StringOutput)
}

// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members.
func (o LookupSystemVirtualwanlinkResultOutput) LoadBalanceMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) string { return v.LoadBalanceMode }).(pulumi.StringOutput)
}

// Member sequence number list. The structure of `members` block is documented below.
func (o LookupSystemVirtualwanlinkResultOutput) Members() GetSystemVirtualwanlinkMemberArrayOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) []GetSystemVirtualwanlinkMember { return v.Members }).(GetSystemVirtualwanlinkMemberArrayOutput)
}

// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
func (o LookupSystemVirtualwanlinkResultOutput) NeighborHoldBootTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) int { return v.NeighborHoldBootTime }).(pulumi.IntOutput)
}

// Enable/disable hold switching from the secondary neighbor to the primary neighbor.
func (o LookupSystemVirtualwanlinkResultOutput) NeighborHoldDown() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) string { return v.NeighborHoldDown }).(pulumi.StringOutput)
}

// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
func (o LookupSystemVirtualwanlinkResultOutput) NeighborHoldDownTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) int { return v.NeighborHoldDownTime }).(pulumi.IntOutput)
}

// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
func (o LookupSystemVirtualwanlinkResultOutput) Neighbors() GetSystemVirtualwanlinkNeighborArrayOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) []GetSystemVirtualwanlinkNeighbor { return v.Neighbors }).(GetSystemVirtualwanlinkNeighborArrayOutput)
}

// Create SD-WAN rules or priority rules (also called services) to control how sessions are distributed to physical interfaces in the SD-WAN. The structure of `service` block is documented below.
func (o LookupSystemVirtualwanlinkResultOutput) Services() GetSystemVirtualwanlinkServiceArrayOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) []GetSystemVirtualwanlinkService { return v.Services }).(GetSystemVirtualwanlinkServiceArrayOutput)
}

// Enable/disable SD-WAN service.
func (o LookupSystemVirtualwanlinkResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupSystemVirtualwanlinkResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Configure SD-WAN zones. The structure of `zone` block is documented below.
func (o LookupSystemVirtualwanlinkResultOutput) Zones() GetSystemVirtualwanlinkZoneArrayOutput {
	return o.ApplyT(func(v LookupSystemVirtualwanlinkResult) []GetSystemVirtualwanlinkZone { return v.Zones }).(GetSystemVirtualwanlinkZoneArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemVirtualwanlinkResultOutput{})
}
