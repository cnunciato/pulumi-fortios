// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure admin users.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSystemAdmin(ctx, "trname", &fortios.SystemAdminArgs{
//				Accprofile:              pulumi.String("super_admin"),
//				AccprofileOverride:      pulumi.String("disable"),
//				AllowRemoveAdminSession: pulumi.String("enable"),
//				ForcePasswordChange:     pulumi.String("disable"),
//				GuestAuth:               pulumi.String("disable"),
//				Hidden:                  pulumi.Int(0),
//				Password:                pulumi.String("fdafdace"),
//				PasswordExpire:          pulumi.String("0000-00-00 00:00:00"),
//				PeerAuth:                pulumi.String("disable"),
//				RadiusVdomOverride:      pulumi.String("disable"),
//				RemoteAuth:              pulumi.String("disable"),
//				TwoFactor:               pulumi.String("disable"),
//				Vdoms: fortios.SystemAdminVdomArray{
//					&fortios.SystemAdminVdomArgs{
//						Name: pulumi.String("root"),
//					},
//				},
//				Wildcard: pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # System Admin can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemAdmin:SystemAdmin labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemAdmin:SystemAdmin labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemAdmin struct {
	pulumi.CustomResourceState

	// Access profile for this administrator. Access profiles control administrator access to FortiGate features.
	Accprofile pulumi.StringOutput `pulumi:"accprofile"`
	// Enable to use the name of an access profile provided by the remote authentication server to control the FortiGate features that this administrator can access. Valid values: `enable`, `disable`.
	AccprofileOverride pulumi.StringOutput `pulumi:"accprofileOverride"`
	// Enable/disable allow admin session to be removed by privileged admin users. Valid values: `enable`, `disable`.
	AllowRemoveAdminSession pulumi.StringOutput `pulumi:"allowRemoveAdminSession"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// This administrator's email address.
	EmailTo pulumi.StringOutput `pulumi:"emailTo"`
	// Enable/disable force password change on next login. Valid values: `enable`, `disable`.
	ForcePasswordChange pulumi.StringOutput `pulumi:"forcePasswordChange"`
	// This administrator's FortiToken serial number.
	Fortitoken pulumi.StringOutput `pulumi:"fortitoken"`
	// Enable/disable guest authentication. Valid values: `disable`, `enable`.
	GuestAuth pulumi.StringOutput `pulumi:"guestAuth"`
	// Guest management portal language.
	GuestLang pulumi.StringOutput `pulumi:"guestLang"`
	// Select guest user groups. The structure of `guestUsergroups` block is documented below.
	GuestUsergroups SystemAdminGuestUsergroupArrayOutput `pulumi:"guestUsergroups"`
	// GUI dashboards. The structure of `guiDashboard` block is documented below.
	GuiDashboards SystemAdminGuiDashboardArrayOutput `pulumi:"guiDashboards"`
	// Favorite GUI menu IDs for the global VDOM. The structure of `guiGlobalMenuFavorites` block is documented below.
	GuiGlobalMenuFavorites SystemAdminGuiGlobalMenuFavoriteArrayOutput `pulumi:"guiGlobalMenuFavorites"`
	// Acknowledgement of new features. The structure of `guiNewFeatureAcknowledge` block is documented below.
	GuiNewFeatureAcknowledges SystemAdminGuiNewFeatureAcknowledgeArrayOutput `pulumi:"guiNewFeatureAcknowledges"`
	// Favorite GUI menu IDs for VDOMs. The structure of `guiVdomMenuFavorites` block is documented below.
	GuiVdomMenuFavorites SystemAdminGuiVdomMenuFavoriteArrayOutput `pulumi:"guiVdomMenuFavorites"`
	// Admin user hidden attribute.
	Hidden pulumi.IntOutput `pulumi:"hidden"`
	// history0
	History0 pulumi.StringPtrOutput `pulumi:"history0"`
	// history1
	History1 pulumi.StringPtrOutput `pulumi:"history1"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost1 pulumi.StringOutput `pulumi:"ip6Trusthost1"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost10 pulumi.StringOutput `pulumi:"ip6Trusthost10"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost2 pulumi.StringOutput `pulumi:"ip6Trusthost2"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost3 pulumi.StringOutput `pulumi:"ip6Trusthost3"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost4 pulumi.StringOutput `pulumi:"ip6Trusthost4"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost5 pulumi.StringOutput `pulumi:"ip6Trusthost5"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost6 pulumi.StringOutput `pulumi:"ip6Trusthost6"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost7 pulumi.StringOutput `pulumi:"ip6Trusthost7"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost8 pulumi.StringOutput `pulumi:"ip6Trusthost8"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost9 pulumi.StringOutput `pulumi:"ip6Trusthost9"`
	// Record user login time. The structure of `loginTime` block is documented below.
	LoginTimes SystemAdminLoginTimeArrayOutput `pulumi:"loginTimes"`
	// User name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Admin user password.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Password expire time.
	PasswordExpire pulumi.StringOutput `pulumi:"passwordExpire"`
	// Set to enable peer certificate authentication (for HTTPS admin access). Valid values: `enable`, `disable`.
	PeerAuth pulumi.StringOutput `pulumi:"peerAuth"`
	// Name of peer group defined under config user group which has PKI members. Used for peer certificate authentication (for HTTPS admin access).
	PeerGroup pulumi.StringOutput `pulumi:"peerGroup"`
	// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
	RadiusVdomOverride pulumi.StringOutput `pulumi:"radiusVdomOverride"`
	// Enable/disable authentication using a remote RADIUS, LDAP, or TACACS+ server. Valid values: `enable`, `disable`.
	RemoteAuth pulumi.StringOutput `pulumi:"remoteAuth"`
	// User group name used for remote auth.
	RemoteGroup pulumi.StringOutput `pulumi:"remoteGroup"`
	// Firewall schedule used to restrict when the administrator can log in. No schedule means no restrictions.
	Schedule pulumi.StringOutput `pulumi:"schedule"`
	// Custom SMS server to send SMS messages to.
	SmsCustomServer pulumi.StringOutput `pulumi:"smsCustomServer"`
	// Phone number on which the administrator receives SMS messages.
	SmsPhone pulumi.StringOutput `pulumi:"smsPhone"`
	// Send SMS messages using the FortiGuard SMS server or a custom server. Valid values: `fortiguard`, `custom`.
	SmsServer pulumi.StringOutput `pulumi:"smsServer"`
	// Select the certificate to be used by the FortiGate for authentication with an SSH client.
	SshCertificate pulumi.StringOutput `pulumi:"sshCertificate"`
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey1 pulumi.StringOutput `pulumi:"sshPublicKey1"`
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey2 pulumi.StringOutput `pulumi:"sshPublicKey2"`
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey3 pulumi.StringOutput `pulumi:"sshPublicKey3"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost1 pulumi.StringOutput `pulumi:"trusthost1"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost10 pulumi.StringOutput `pulumi:"trusthost10"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost2 pulumi.StringOutput `pulumi:"trusthost2"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost3 pulumi.StringOutput `pulumi:"trusthost3"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost4 pulumi.StringOutput `pulumi:"trusthost4"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost5 pulumi.StringOutput `pulumi:"trusthost5"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost6 pulumi.StringOutput `pulumi:"trusthost6"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost7 pulumi.StringOutput `pulumi:"trusthost7"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost8 pulumi.StringOutput `pulumi:"trusthost8"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost9 pulumi.StringOutput `pulumi:"trusthost9"`
	// Enable/disable two-factor authentication.
	TwoFactor pulumi.StringOutput `pulumi:"twoFactor"`
	// Authentication method by FortiToken Cloud. Valid values: `fortitoken`, `email`, `sms`.
	TwoFactorAuthentication pulumi.StringOutput `pulumi:"twoFactorAuthentication"`
	// Notification method for user activation by FortiToken Cloud. Valid values: `email`, `sms`.
	TwoFactorNotification pulumi.StringOutput `pulumi:"twoFactorNotification"`
	// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
	VdomOverride pulumi.StringOutput `pulumi:"vdomOverride"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms SystemAdminVdomArrayOutput `pulumi:"vdoms"`
	// Enable/disable wildcard RADIUS authentication. Valid values: `enable`, `disable`.
	Wildcard pulumi.StringOutput `pulumi:"wildcard"`
}

// NewSystemAdmin registers a new resource with the given unique name, arguments, and options.
func NewSystemAdmin(ctx *pulumi.Context,
	name string, args *SystemAdminArgs, opts ...pulumi.ResourceOption) (*SystemAdmin, error) {
	if args == nil {
		args = &SystemAdminArgs{}
	}

	if args.History0 != nil {
		args.History0 = pulumi.ToSecret(args.History0).(pulumi.StringPtrInput)
	}
	if args.History1 != nil {
		args.History1 = pulumi.ToSecret(args.History1).(pulumi.StringPtrInput)
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.SshPublicKey1 != nil {
		args.SshPublicKey1 = pulumi.ToSecret(args.SshPublicKey1).(pulumi.StringPtrInput)
	}
	if args.SshPublicKey2 != nil {
		args.SshPublicKey2 = pulumi.ToSecret(args.SshPublicKey2).(pulumi.StringPtrInput)
	}
	if args.SshPublicKey3 != nil {
		args.SshPublicKey3 = pulumi.ToSecret(args.SshPublicKey3).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"history0",
		"history1",
		"password",
		"sshPublicKey1",
		"sshPublicKey2",
		"sshPublicKey3",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemAdmin
	err := ctx.RegisterResource("fortios:index/systemAdmin:SystemAdmin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemAdmin gets an existing SystemAdmin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemAdmin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemAdminState, opts ...pulumi.ResourceOption) (*SystemAdmin, error) {
	var resource SystemAdmin
	err := ctx.ReadResource("fortios:index/systemAdmin:SystemAdmin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemAdmin resources.
type systemAdminState struct {
	// Access profile for this administrator. Access profiles control administrator access to FortiGate features.
	Accprofile *string `pulumi:"accprofile"`
	// Enable to use the name of an access profile provided by the remote authentication server to control the FortiGate features that this administrator can access. Valid values: `enable`, `disable`.
	AccprofileOverride *string `pulumi:"accprofileOverride"`
	// Enable/disable allow admin session to be removed by privileged admin users. Valid values: `enable`, `disable`.
	AllowRemoveAdminSession *string `pulumi:"allowRemoveAdminSession"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// This administrator's email address.
	EmailTo *string `pulumi:"emailTo"`
	// Enable/disable force password change on next login. Valid values: `enable`, `disable`.
	ForcePasswordChange *string `pulumi:"forcePasswordChange"`
	// This administrator's FortiToken serial number.
	Fortitoken *string `pulumi:"fortitoken"`
	// Enable/disable guest authentication. Valid values: `disable`, `enable`.
	GuestAuth *string `pulumi:"guestAuth"`
	// Guest management portal language.
	GuestLang *string `pulumi:"guestLang"`
	// Select guest user groups. The structure of `guestUsergroups` block is documented below.
	GuestUsergroups []SystemAdminGuestUsergroup `pulumi:"guestUsergroups"`
	// GUI dashboards. The structure of `guiDashboard` block is documented below.
	GuiDashboards []SystemAdminGuiDashboard `pulumi:"guiDashboards"`
	// Favorite GUI menu IDs for the global VDOM. The structure of `guiGlobalMenuFavorites` block is documented below.
	GuiGlobalMenuFavorites []SystemAdminGuiGlobalMenuFavorite `pulumi:"guiGlobalMenuFavorites"`
	// Acknowledgement of new features. The structure of `guiNewFeatureAcknowledge` block is documented below.
	GuiNewFeatureAcknowledges []SystemAdminGuiNewFeatureAcknowledge `pulumi:"guiNewFeatureAcknowledges"`
	// Favorite GUI menu IDs for VDOMs. The structure of `guiVdomMenuFavorites` block is documented below.
	GuiVdomMenuFavorites []SystemAdminGuiVdomMenuFavorite `pulumi:"guiVdomMenuFavorites"`
	// Admin user hidden attribute.
	Hidden *int `pulumi:"hidden"`
	// history0
	History0 *string `pulumi:"history0"`
	// history1
	History1 *string `pulumi:"history1"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost1 *string `pulumi:"ip6Trusthost1"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost10 *string `pulumi:"ip6Trusthost10"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost2 *string `pulumi:"ip6Trusthost2"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost3 *string `pulumi:"ip6Trusthost3"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost4 *string `pulumi:"ip6Trusthost4"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost5 *string `pulumi:"ip6Trusthost5"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost6 *string `pulumi:"ip6Trusthost6"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost7 *string `pulumi:"ip6Trusthost7"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost8 *string `pulumi:"ip6Trusthost8"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost9 *string `pulumi:"ip6Trusthost9"`
	// Record user login time. The structure of `loginTime` block is documented below.
	LoginTimes []SystemAdminLoginTime `pulumi:"loginTimes"`
	// User name.
	Name *string `pulumi:"name"`
	// Admin user password.
	Password *string `pulumi:"password"`
	// Password expire time.
	PasswordExpire *string `pulumi:"passwordExpire"`
	// Set to enable peer certificate authentication (for HTTPS admin access). Valid values: `enable`, `disable`.
	PeerAuth *string `pulumi:"peerAuth"`
	// Name of peer group defined under config user group which has PKI members. Used for peer certificate authentication (for HTTPS admin access).
	PeerGroup *string `pulumi:"peerGroup"`
	// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
	RadiusVdomOverride *string `pulumi:"radiusVdomOverride"`
	// Enable/disable authentication using a remote RADIUS, LDAP, or TACACS+ server. Valid values: `enable`, `disable`.
	RemoteAuth *string `pulumi:"remoteAuth"`
	// User group name used for remote auth.
	RemoteGroup *string `pulumi:"remoteGroup"`
	// Firewall schedule used to restrict when the administrator can log in. No schedule means no restrictions.
	Schedule *string `pulumi:"schedule"`
	// Custom SMS server to send SMS messages to.
	SmsCustomServer *string `pulumi:"smsCustomServer"`
	// Phone number on which the administrator receives SMS messages.
	SmsPhone *string `pulumi:"smsPhone"`
	// Send SMS messages using the FortiGuard SMS server or a custom server. Valid values: `fortiguard`, `custom`.
	SmsServer *string `pulumi:"smsServer"`
	// Select the certificate to be used by the FortiGate for authentication with an SSH client.
	SshCertificate *string `pulumi:"sshCertificate"`
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey1 *string `pulumi:"sshPublicKey1"`
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey2 *string `pulumi:"sshPublicKey2"`
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey3 *string `pulumi:"sshPublicKey3"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost1 *string `pulumi:"trusthost1"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost10 *string `pulumi:"trusthost10"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost2 *string `pulumi:"trusthost2"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost3 *string `pulumi:"trusthost3"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost4 *string `pulumi:"trusthost4"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost5 *string `pulumi:"trusthost5"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost6 *string `pulumi:"trusthost6"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost7 *string `pulumi:"trusthost7"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost8 *string `pulumi:"trusthost8"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost9 *string `pulumi:"trusthost9"`
	// Enable/disable two-factor authentication.
	TwoFactor *string `pulumi:"twoFactor"`
	// Authentication method by FortiToken Cloud. Valid values: `fortitoken`, `email`, `sms`.
	TwoFactorAuthentication *string `pulumi:"twoFactorAuthentication"`
	// Notification method for user activation by FortiToken Cloud. Valid values: `email`, `sms`.
	TwoFactorNotification *string `pulumi:"twoFactorNotification"`
	// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
	VdomOverride *string `pulumi:"vdomOverride"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms []SystemAdminVdom `pulumi:"vdoms"`
	// Enable/disable wildcard RADIUS authentication. Valid values: `enable`, `disable`.
	Wildcard *string `pulumi:"wildcard"`
}

type SystemAdminState struct {
	// Access profile for this administrator. Access profiles control administrator access to FortiGate features.
	Accprofile pulumi.StringPtrInput
	// Enable to use the name of an access profile provided by the remote authentication server to control the FortiGate features that this administrator can access. Valid values: `enable`, `disable`.
	AccprofileOverride pulumi.StringPtrInput
	// Enable/disable allow admin session to be removed by privileged admin users. Valid values: `enable`, `disable`.
	AllowRemoveAdminSession pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// This administrator's email address.
	EmailTo pulumi.StringPtrInput
	// Enable/disable force password change on next login. Valid values: `enable`, `disable`.
	ForcePasswordChange pulumi.StringPtrInput
	// This administrator's FortiToken serial number.
	Fortitoken pulumi.StringPtrInput
	// Enable/disable guest authentication. Valid values: `disable`, `enable`.
	GuestAuth pulumi.StringPtrInput
	// Guest management portal language.
	GuestLang pulumi.StringPtrInput
	// Select guest user groups. The structure of `guestUsergroups` block is documented below.
	GuestUsergroups SystemAdminGuestUsergroupArrayInput
	// GUI dashboards. The structure of `guiDashboard` block is documented below.
	GuiDashboards SystemAdminGuiDashboardArrayInput
	// Favorite GUI menu IDs for the global VDOM. The structure of `guiGlobalMenuFavorites` block is documented below.
	GuiGlobalMenuFavorites SystemAdminGuiGlobalMenuFavoriteArrayInput
	// Acknowledgement of new features. The structure of `guiNewFeatureAcknowledge` block is documented below.
	GuiNewFeatureAcknowledges SystemAdminGuiNewFeatureAcknowledgeArrayInput
	// Favorite GUI menu IDs for VDOMs. The structure of `guiVdomMenuFavorites` block is documented below.
	GuiVdomMenuFavorites SystemAdminGuiVdomMenuFavoriteArrayInput
	// Admin user hidden attribute.
	Hidden pulumi.IntPtrInput
	// history0
	History0 pulumi.StringPtrInput
	// history1
	History1 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost1 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost10 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost2 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost3 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost4 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost5 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost6 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost7 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost8 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost9 pulumi.StringPtrInput
	// Record user login time. The structure of `loginTime` block is documented below.
	LoginTimes SystemAdminLoginTimeArrayInput
	// User name.
	Name pulumi.StringPtrInput
	// Admin user password.
	Password pulumi.StringPtrInput
	// Password expire time.
	PasswordExpire pulumi.StringPtrInput
	// Set to enable peer certificate authentication (for HTTPS admin access). Valid values: `enable`, `disable`.
	PeerAuth pulumi.StringPtrInput
	// Name of peer group defined under config user group which has PKI members. Used for peer certificate authentication (for HTTPS admin access).
	PeerGroup pulumi.StringPtrInput
	// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
	RadiusVdomOverride pulumi.StringPtrInput
	// Enable/disable authentication using a remote RADIUS, LDAP, or TACACS+ server. Valid values: `enable`, `disable`.
	RemoteAuth pulumi.StringPtrInput
	// User group name used for remote auth.
	RemoteGroup pulumi.StringPtrInput
	// Firewall schedule used to restrict when the administrator can log in. No schedule means no restrictions.
	Schedule pulumi.StringPtrInput
	// Custom SMS server to send SMS messages to.
	SmsCustomServer pulumi.StringPtrInput
	// Phone number on which the administrator receives SMS messages.
	SmsPhone pulumi.StringPtrInput
	// Send SMS messages using the FortiGuard SMS server or a custom server. Valid values: `fortiguard`, `custom`.
	SmsServer pulumi.StringPtrInput
	// Select the certificate to be used by the FortiGate for authentication with an SSH client.
	SshCertificate pulumi.StringPtrInput
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey1 pulumi.StringPtrInput
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey2 pulumi.StringPtrInput
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey3 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost1 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost10 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost2 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost3 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost4 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost5 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost6 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost7 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost8 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost9 pulumi.StringPtrInput
	// Enable/disable two-factor authentication.
	TwoFactor pulumi.StringPtrInput
	// Authentication method by FortiToken Cloud. Valid values: `fortitoken`, `email`, `sms`.
	TwoFactorAuthentication pulumi.StringPtrInput
	// Notification method for user activation by FortiToken Cloud. Valid values: `email`, `sms`.
	TwoFactorNotification pulumi.StringPtrInput
	// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
	VdomOverride pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms SystemAdminVdomArrayInput
	// Enable/disable wildcard RADIUS authentication. Valid values: `enable`, `disable`.
	Wildcard pulumi.StringPtrInput
}

func (SystemAdminState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAdminState)(nil)).Elem()
}

type systemAdminArgs struct {
	// Access profile for this administrator. Access profiles control administrator access to FortiGate features.
	Accprofile *string `pulumi:"accprofile"`
	// Enable to use the name of an access profile provided by the remote authentication server to control the FortiGate features that this administrator can access. Valid values: `enable`, `disable`.
	AccprofileOverride *string `pulumi:"accprofileOverride"`
	// Enable/disable allow admin session to be removed by privileged admin users. Valid values: `enable`, `disable`.
	AllowRemoveAdminSession *string `pulumi:"allowRemoveAdminSession"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// This administrator's email address.
	EmailTo *string `pulumi:"emailTo"`
	// Enable/disable force password change on next login. Valid values: `enable`, `disable`.
	ForcePasswordChange *string `pulumi:"forcePasswordChange"`
	// This administrator's FortiToken serial number.
	Fortitoken *string `pulumi:"fortitoken"`
	// Enable/disable guest authentication. Valid values: `disable`, `enable`.
	GuestAuth *string `pulumi:"guestAuth"`
	// Guest management portal language.
	GuestLang *string `pulumi:"guestLang"`
	// Select guest user groups. The structure of `guestUsergroups` block is documented below.
	GuestUsergroups []SystemAdminGuestUsergroup `pulumi:"guestUsergroups"`
	// GUI dashboards. The structure of `guiDashboard` block is documented below.
	GuiDashboards []SystemAdminGuiDashboard `pulumi:"guiDashboards"`
	// Favorite GUI menu IDs for the global VDOM. The structure of `guiGlobalMenuFavorites` block is documented below.
	GuiGlobalMenuFavorites []SystemAdminGuiGlobalMenuFavorite `pulumi:"guiGlobalMenuFavorites"`
	// Acknowledgement of new features. The structure of `guiNewFeatureAcknowledge` block is documented below.
	GuiNewFeatureAcknowledges []SystemAdminGuiNewFeatureAcknowledge `pulumi:"guiNewFeatureAcknowledges"`
	// Favorite GUI menu IDs for VDOMs. The structure of `guiVdomMenuFavorites` block is documented below.
	GuiVdomMenuFavorites []SystemAdminGuiVdomMenuFavorite `pulumi:"guiVdomMenuFavorites"`
	// Admin user hidden attribute.
	Hidden *int `pulumi:"hidden"`
	// history0
	History0 *string `pulumi:"history0"`
	// history1
	History1 *string `pulumi:"history1"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost1 *string `pulumi:"ip6Trusthost1"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost10 *string `pulumi:"ip6Trusthost10"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost2 *string `pulumi:"ip6Trusthost2"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost3 *string `pulumi:"ip6Trusthost3"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost4 *string `pulumi:"ip6Trusthost4"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost5 *string `pulumi:"ip6Trusthost5"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost6 *string `pulumi:"ip6Trusthost6"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost7 *string `pulumi:"ip6Trusthost7"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost8 *string `pulumi:"ip6Trusthost8"`
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost9 *string `pulumi:"ip6Trusthost9"`
	// Record user login time. The structure of `loginTime` block is documented below.
	LoginTimes []SystemAdminLoginTime `pulumi:"loginTimes"`
	// User name.
	Name *string `pulumi:"name"`
	// Admin user password.
	Password *string `pulumi:"password"`
	// Password expire time.
	PasswordExpire *string `pulumi:"passwordExpire"`
	// Set to enable peer certificate authentication (for HTTPS admin access). Valid values: `enable`, `disable`.
	PeerAuth *string `pulumi:"peerAuth"`
	// Name of peer group defined under config user group which has PKI members. Used for peer certificate authentication (for HTTPS admin access).
	PeerGroup *string `pulumi:"peerGroup"`
	// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
	RadiusVdomOverride *string `pulumi:"radiusVdomOverride"`
	// Enable/disable authentication using a remote RADIUS, LDAP, or TACACS+ server. Valid values: `enable`, `disable`.
	RemoteAuth *string `pulumi:"remoteAuth"`
	// User group name used for remote auth.
	RemoteGroup *string `pulumi:"remoteGroup"`
	// Firewall schedule used to restrict when the administrator can log in. No schedule means no restrictions.
	Schedule *string `pulumi:"schedule"`
	// Custom SMS server to send SMS messages to.
	SmsCustomServer *string `pulumi:"smsCustomServer"`
	// Phone number on which the administrator receives SMS messages.
	SmsPhone *string `pulumi:"smsPhone"`
	// Send SMS messages using the FortiGuard SMS server or a custom server. Valid values: `fortiguard`, `custom`.
	SmsServer *string `pulumi:"smsServer"`
	// Select the certificate to be used by the FortiGate for authentication with an SSH client.
	SshCertificate *string `pulumi:"sshCertificate"`
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey1 *string `pulumi:"sshPublicKey1"`
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey2 *string `pulumi:"sshPublicKey2"`
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey3 *string `pulumi:"sshPublicKey3"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost1 *string `pulumi:"trusthost1"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost10 *string `pulumi:"trusthost10"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost2 *string `pulumi:"trusthost2"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost3 *string `pulumi:"trusthost3"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost4 *string `pulumi:"trusthost4"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost5 *string `pulumi:"trusthost5"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost6 *string `pulumi:"trusthost6"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost7 *string `pulumi:"trusthost7"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost8 *string `pulumi:"trusthost8"`
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost9 *string `pulumi:"trusthost9"`
	// Enable/disable two-factor authentication.
	TwoFactor *string `pulumi:"twoFactor"`
	// Authentication method by FortiToken Cloud. Valid values: `fortitoken`, `email`, `sms`.
	TwoFactorAuthentication *string `pulumi:"twoFactorAuthentication"`
	// Notification method for user activation by FortiToken Cloud. Valid values: `email`, `sms`.
	TwoFactorNotification *string `pulumi:"twoFactorNotification"`
	// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
	VdomOverride *string `pulumi:"vdomOverride"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms []SystemAdminVdom `pulumi:"vdoms"`
	// Enable/disable wildcard RADIUS authentication. Valid values: `enable`, `disable`.
	Wildcard *string `pulumi:"wildcard"`
}

// The set of arguments for constructing a SystemAdmin resource.
type SystemAdminArgs struct {
	// Access profile for this administrator. Access profiles control administrator access to FortiGate features.
	Accprofile pulumi.StringPtrInput
	// Enable to use the name of an access profile provided by the remote authentication server to control the FortiGate features that this administrator can access. Valid values: `enable`, `disable`.
	AccprofileOverride pulumi.StringPtrInput
	// Enable/disable allow admin session to be removed by privileged admin users. Valid values: `enable`, `disable`.
	AllowRemoveAdminSession pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// This administrator's email address.
	EmailTo pulumi.StringPtrInput
	// Enable/disable force password change on next login. Valid values: `enable`, `disable`.
	ForcePasswordChange pulumi.StringPtrInput
	// This administrator's FortiToken serial number.
	Fortitoken pulumi.StringPtrInput
	// Enable/disable guest authentication. Valid values: `disable`, `enable`.
	GuestAuth pulumi.StringPtrInput
	// Guest management portal language.
	GuestLang pulumi.StringPtrInput
	// Select guest user groups. The structure of `guestUsergroups` block is documented below.
	GuestUsergroups SystemAdminGuestUsergroupArrayInput
	// GUI dashboards. The structure of `guiDashboard` block is documented below.
	GuiDashboards SystemAdminGuiDashboardArrayInput
	// Favorite GUI menu IDs for the global VDOM. The structure of `guiGlobalMenuFavorites` block is documented below.
	GuiGlobalMenuFavorites SystemAdminGuiGlobalMenuFavoriteArrayInput
	// Acknowledgement of new features. The structure of `guiNewFeatureAcknowledge` block is documented below.
	GuiNewFeatureAcknowledges SystemAdminGuiNewFeatureAcknowledgeArrayInput
	// Favorite GUI menu IDs for VDOMs. The structure of `guiVdomMenuFavorites` block is documented below.
	GuiVdomMenuFavorites SystemAdminGuiVdomMenuFavoriteArrayInput
	// Admin user hidden attribute.
	Hidden pulumi.IntPtrInput
	// history0
	History0 pulumi.StringPtrInput
	// history1
	History1 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost1 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost10 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost2 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost3 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost4 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost5 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost6 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost7 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost8 pulumi.StringPtrInput
	// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
	Ip6Trusthost9 pulumi.StringPtrInput
	// Record user login time. The structure of `loginTime` block is documented below.
	LoginTimes SystemAdminLoginTimeArrayInput
	// User name.
	Name pulumi.StringPtrInput
	// Admin user password.
	Password pulumi.StringPtrInput
	// Password expire time.
	PasswordExpire pulumi.StringPtrInput
	// Set to enable peer certificate authentication (for HTTPS admin access). Valid values: `enable`, `disable`.
	PeerAuth pulumi.StringPtrInput
	// Name of peer group defined under config user group which has PKI members. Used for peer certificate authentication (for HTTPS admin access).
	PeerGroup pulumi.StringPtrInput
	// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
	RadiusVdomOverride pulumi.StringPtrInput
	// Enable/disable authentication using a remote RADIUS, LDAP, or TACACS+ server. Valid values: `enable`, `disable`.
	RemoteAuth pulumi.StringPtrInput
	// User group name used for remote auth.
	RemoteGroup pulumi.StringPtrInput
	// Firewall schedule used to restrict when the administrator can log in. No schedule means no restrictions.
	Schedule pulumi.StringPtrInput
	// Custom SMS server to send SMS messages to.
	SmsCustomServer pulumi.StringPtrInput
	// Phone number on which the administrator receives SMS messages.
	SmsPhone pulumi.StringPtrInput
	// Send SMS messages using the FortiGuard SMS server or a custom server. Valid values: `fortiguard`, `custom`.
	SmsServer pulumi.StringPtrInput
	// Select the certificate to be used by the FortiGate for authentication with an SSH client.
	SshCertificate pulumi.StringPtrInput
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey1 pulumi.StringPtrInput
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey2 pulumi.StringPtrInput
	// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
	SshPublicKey3 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost1 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost10 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost2 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost3 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost4 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost5 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost6 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost7 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost8 pulumi.StringPtrInput
	// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
	Trusthost9 pulumi.StringPtrInput
	// Enable/disable two-factor authentication.
	TwoFactor pulumi.StringPtrInput
	// Authentication method by FortiToken Cloud. Valid values: `fortitoken`, `email`, `sms`.
	TwoFactorAuthentication pulumi.StringPtrInput
	// Notification method for user activation by FortiToken Cloud. Valid values: `email`, `sms`.
	TwoFactorNotification pulumi.StringPtrInput
	// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
	VdomOverride pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms SystemAdminVdomArrayInput
	// Enable/disable wildcard RADIUS authentication. Valid values: `enable`, `disable`.
	Wildcard pulumi.StringPtrInput
}

func (SystemAdminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAdminArgs)(nil)).Elem()
}

type SystemAdminInput interface {
	pulumi.Input

	ToSystemAdminOutput() SystemAdminOutput
	ToSystemAdminOutputWithContext(ctx context.Context) SystemAdminOutput
}

func (*SystemAdmin) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAdmin)(nil)).Elem()
}

func (i *SystemAdmin) ToSystemAdminOutput() SystemAdminOutput {
	return i.ToSystemAdminOutputWithContext(context.Background())
}

func (i *SystemAdmin) ToSystemAdminOutputWithContext(ctx context.Context) SystemAdminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminOutput)
}

// SystemAdminArrayInput is an input type that accepts SystemAdminArray and SystemAdminArrayOutput values.
// You can construct a concrete instance of `SystemAdminArrayInput` via:
//
//	SystemAdminArray{ SystemAdminArgs{...} }
type SystemAdminArrayInput interface {
	pulumi.Input

	ToSystemAdminArrayOutput() SystemAdminArrayOutput
	ToSystemAdminArrayOutputWithContext(context.Context) SystemAdminArrayOutput
}

type SystemAdminArray []SystemAdminInput

func (SystemAdminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAdmin)(nil)).Elem()
}

func (i SystemAdminArray) ToSystemAdminArrayOutput() SystemAdminArrayOutput {
	return i.ToSystemAdminArrayOutputWithContext(context.Background())
}

func (i SystemAdminArray) ToSystemAdminArrayOutputWithContext(ctx context.Context) SystemAdminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminArrayOutput)
}

// SystemAdminMapInput is an input type that accepts SystemAdminMap and SystemAdminMapOutput values.
// You can construct a concrete instance of `SystemAdminMapInput` via:
//
//	SystemAdminMap{ "key": SystemAdminArgs{...} }
type SystemAdminMapInput interface {
	pulumi.Input

	ToSystemAdminMapOutput() SystemAdminMapOutput
	ToSystemAdminMapOutputWithContext(context.Context) SystemAdminMapOutput
}

type SystemAdminMap map[string]SystemAdminInput

func (SystemAdminMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAdmin)(nil)).Elem()
}

func (i SystemAdminMap) ToSystemAdminMapOutput() SystemAdminMapOutput {
	return i.ToSystemAdminMapOutputWithContext(context.Background())
}

func (i SystemAdminMap) ToSystemAdminMapOutputWithContext(ctx context.Context) SystemAdminMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminMapOutput)
}

type SystemAdminOutput struct{ *pulumi.OutputState }

func (SystemAdminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAdmin)(nil)).Elem()
}

func (o SystemAdminOutput) ToSystemAdminOutput() SystemAdminOutput {
	return o
}

func (o SystemAdminOutput) ToSystemAdminOutputWithContext(ctx context.Context) SystemAdminOutput {
	return o
}

// Access profile for this administrator. Access profiles control administrator access to FortiGate features.
func (o SystemAdminOutput) Accprofile() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Accprofile }).(pulumi.StringOutput)
}

// Enable to use the name of an access profile provided by the remote authentication server to control the FortiGate features that this administrator can access. Valid values: `enable`, `disable`.
func (o SystemAdminOutput) AccprofileOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.AccprofileOverride }).(pulumi.StringOutput)
}

// Enable/disable allow admin session to be removed by privileged admin users. Valid values: `enable`, `disable`.
func (o SystemAdminOutput) AllowRemoveAdminSession() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.AllowRemoveAdminSession }).(pulumi.StringOutput)
}

// Comment.
func (o SystemAdminOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SystemAdminOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// This administrator's email address.
func (o SystemAdminOutput) EmailTo() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.EmailTo }).(pulumi.StringOutput)
}

// Enable/disable force password change on next login. Valid values: `enable`, `disable`.
func (o SystemAdminOutput) ForcePasswordChange() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.ForcePasswordChange }).(pulumi.StringOutput)
}

// This administrator's FortiToken serial number.
func (o SystemAdminOutput) Fortitoken() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Fortitoken }).(pulumi.StringOutput)
}

// Enable/disable guest authentication. Valid values: `disable`, `enable`.
func (o SystemAdminOutput) GuestAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.GuestAuth }).(pulumi.StringOutput)
}

// Guest management portal language.
func (o SystemAdminOutput) GuestLang() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.GuestLang }).(pulumi.StringOutput)
}

// Select guest user groups. The structure of `guestUsergroups` block is documented below.
func (o SystemAdminOutput) GuestUsergroups() SystemAdminGuestUsergroupArrayOutput {
	return o.ApplyT(func(v *SystemAdmin) SystemAdminGuestUsergroupArrayOutput { return v.GuestUsergroups }).(SystemAdminGuestUsergroupArrayOutput)
}

// GUI dashboards. The structure of `guiDashboard` block is documented below.
func (o SystemAdminOutput) GuiDashboards() SystemAdminGuiDashboardArrayOutput {
	return o.ApplyT(func(v *SystemAdmin) SystemAdminGuiDashboardArrayOutput { return v.GuiDashboards }).(SystemAdminGuiDashboardArrayOutput)
}

// Favorite GUI menu IDs for the global VDOM. The structure of `guiGlobalMenuFavorites` block is documented below.
func (o SystemAdminOutput) GuiGlobalMenuFavorites() SystemAdminGuiGlobalMenuFavoriteArrayOutput {
	return o.ApplyT(func(v *SystemAdmin) SystemAdminGuiGlobalMenuFavoriteArrayOutput { return v.GuiGlobalMenuFavorites }).(SystemAdminGuiGlobalMenuFavoriteArrayOutput)
}

// Acknowledgement of new features. The structure of `guiNewFeatureAcknowledge` block is documented below.
func (o SystemAdminOutput) GuiNewFeatureAcknowledges() SystemAdminGuiNewFeatureAcknowledgeArrayOutput {
	return o.ApplyT(func(v *SystemAdmin) SystemAdminGuiNewFeatureAcknowledgeArrayOutput {
		return v.GuiNewFeatureAcknowledges
	}).(SystemAdminGuiNewFeatureAcknowledgeArrayOutput)
}

// Favorite GUI menu IDs for VDOMs. The structure of `guiVdomMenuFavorites` block is documented below.
func (o SystemAdminOutput) GuiVdomMenuFavorites() SystemAdminGuiVdomMenuFavoriteArrayOutput {
	return o.ApplyT(func(v *SystemAdmin) SystemAdminGuiVdomMenuFavoriteArrayOutput { return v.GuiVdomMenuFavorites }).(SystemAdminGuiVdomMenuFavoriteArrayOutput)
}

// Admin user hidden attribute.
func (o SystemAdminOutput) Hidden() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.IntOutput { return v.Hidden }).(pulumi.IntOutput)
}

// history0
func (o SystemAdminOutput) History0() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringPtrOutput { return v.History0 }).(pulumi.StringPtrOutput)
}

// history1
func (o SystemAdminOutput) History1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringPtrOutput { return v.History1 }).(pulumi.StringPtrOutput)
}

// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
func (o SystemAdminOutput) Ip6Trusthost1() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Ip6Trusthost1 }).(pulumi.StringOutput)
}

// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
func (o SystemAdminOutput) Ip6Trusthost10() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Ip6Trusthost10 }).(pulumi.StringOutput)
}

// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
func (o SystemAdminOutput) Ip6Trusthost2() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Ip6Trusthost2 }).(pulumi.StringOutput)
}

// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
func (o SystemAdminOutput) Ip6Trusthost3() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Ip6Trusthost3 }).(pulumi.StringOutput)
}

// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
func (o SystemAdminOutput) Ip6Trusthost4() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Ip6Trusthost4 }).(pulumi.StringOutput)
}

// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
func (o SystemAdminOutput) Ip6Trusthost5() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Ip6Trusthost5 }).(pulumi.StringOutput)
}

// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
func (o SystemAdminOutput) Ip6Trusthost6() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Ip6Trusthost6 }).(pulumi.StringOutput)
}

// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
func (o SystemAdminOutput) Ip6Trusthost7() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Ip6Trusthost7 }).(pulumi.StringOutput)
}

// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
func (o SystemAdminOutput) Ip6Trusthost8() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Ip6Trusthost8 }).(pulumi.StringOutput)
}

// Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
func (o SystemAdminOutput) Ip6Trusthost9() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Ip6Trusthost9 }).(pulumi.StringOutput)
}

// Record user login time. The structure of `loginTime` block is documented below.
func (o SystemAdminOutput) LoginTimes() SystemAdminLoginTimeArrayOutput {
	return o.ApplyT(func(v *SystemAdmin) SystemAdminLoginTimeArrayOutput { return v.LoginTimes }).(SystemAdminLoginTimeArrayOutput)
}

// User name.
func (o SystemAdminOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Admin user password.
func (o SystemAdminOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Password expire time.
func (o SystemAdminOutput) PasswordExpire() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.PasswordExpire }).(pulumi.StringOutput)
}

// Set to enable peer certificate authentication (for HTTPS admin access). Valid values: `enable`, `disable`.
func (o SystemAdminOutput) PeerAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.PeerAuth }).(pulumi.StringOutput)
}

// Name of peer group defined under config user group which has PKI members. Used for peer certificate authentication (for HTTPS admin access).
func (o SystemAdminOutput) PeerGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.PeerGroup }).(pulumi.StringOutput)
}

// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
func (o SystemAdminOutput) RadiusVdomOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.RadiusVdomOverride }).(pulumi.StringOutput)
}

// Enable/disable authentication using a remote RADIUS, LDAP, or TACACS+ server. Valid values: `enable`, `disable`.
func (o SystemAdminOutput) RemoteAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.RemoteAuth }).(pulumi.StringOutput)
}

// User group name used for remote auth.
func (o SystemAdminOutput) RemoteGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.RemoteGroup }).(pulumi.StringOutput)
}

// Firewall schedule used to restrict when the administrator can log in. No schedule means no restrictions.
func (o SystemAdminOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Schedule }).(pulumi.StringOutput)
}

// Custom SMS server to send SMS messages to.
func (o SystemAdminOutput) SmsCustomServer() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.SmsCustomServer }).(pulumi.StringOutput)
}

// Phone number on which the administrator receives SMS messages.
func (o SystemAdminOutput) SmsPhone() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.SmsPhone }).(pulumi.StringOutput)
}

// Send SMS messages using the FortiGuard SMS server or a custom server. Valid values: `fortiguard`, `custom`.
func (o SystemAdminOutput) SmsServer() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.SmsServer }).(pulumi.StringOutput)
}

// Select the certificate to be used by the FortiGate for authentication with an SSH client.
func (o SystemAdminOutput) SshCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.SshCertificate }).(pulumi.StringOutput)
}

// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
func (o SystemAdminOutput) SshPublicKey1() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.SshPublicKey1 }).(pulumi.StringOutput)
}

// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
func (o SystemAdminOutput) SshPublicKey2() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.SshPublicKey2 }).(pulumi.StringOutput)
}

// Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
func (o SystemAdminOutput) SshPublicKey3() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.SshPublicKey3 }).(pulumi.StringOutput)
}

// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
func (o SystemAdminOutput) Trusthost1() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Trusthost1 }).(pulumi.StringOutput)
}

// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
func (o SystemAdminOutput) Trusthost10() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Trusthost10 }).(pulumi.StringOutput)
}

// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
func (o SystemAdminOutput) Trusthost2() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Trusthost2 }).(pulumi.StringOutput)
}

// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
func (o SystemAdminOutput) Trusthost3() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Trusthost3 }).(pulumi.StringOutput)
}

// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
func (o SystemAdminOutput) Trusthost4() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Trusthost4 }).(pulumi.StringOutput)
}

// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
func (o SystemAdminOutput) Trusthost5() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Trusthost5 }).(pulumi.StringOutput)
}

// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
func (o SystemAdminOutput) Trusthost6() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Trusthost6 }).(pulumi.StringOutput)
}

// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
func (o SystemAdminOutput) Trusthost7() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Trusthost7 }).(pulumi.StringOutput)
}

// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
func (o SystemAdminOutput) Trusthost8() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Trusthost8 }).(pulumi.StringOutput)
}

// Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
func (o SystemAdminOutput) Trusthost9() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Trusthost9 }).(pulumi.StringOutput)
}

// Enable/disable two-factor authentication.
func (o SystemAdminOutput) TwoFactor() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.TwoFactor }).(pulumi.StringOutput)
}

// Authentication method by FortiToken Cloud. Valid values: `fortitoken`, `email`, `sms`.
func (o SystemAdminOutput) TwoFactorAuthentication() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.TwoFactorAuthentication }).(pulumi.StringOutput)
}

// Notification method for user activation by FortiToken Cloud. Valid values: `email`, `sms`.
func (o SystemAdminOutput) TwoFactorNotification() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.TwoFactorNotification }).(pulumi.StringOutput)
}

// Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access. Valid values: `enable`, `disable`.
func (o SystemAdminOutput) VdomOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.VdomOverride }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemAdminOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
func (o SystemAdminOutput) Vdoms() SystemAdminVdomArrayOutput {
	return o.ApplyT(func(v *SystemAdmin) SystemAdminVdomArrayOutput { return v.Vdoms }).(SystemAdminVdomArrayOutput)
}

// Enable/disable wildcard RADIUS authentication. Valid values: `enable`, `disable`.
func (o SystemAdminOutput) Wildcard() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAdmin) pulumi.StringOutput { return v.Wildcard }).(pulumi.StringOutput)
}

type SystemAdminArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAdmin)(nil)).Elem()
}

func (o SystemAdminArrayOutput) ToSystemAdminArrayOutput() SystemAdminArrayOutput {
	return o
}

func (o SystemAdminArrayOutput) ToSystemAdminArrayOutputWithContext(ctx context.Context) SystemAdminArrayOutput {
	return o
}

func (o SystemAdminArrayOutput) Index(i pulumi.IntInput) SystemAdminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemAdmin {
		return vs[0].([]*SystemAdmin)[vs[1].(int)]
	}).(SystemAdminOutput)
}

type SystemAdminMapOutput struct{ *pulumi.OutputState }

func (SystemAdminMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAdmin)(nil)).Elem()
}

func (o SystemAdminMapOutput) ToSystemAdminMapOutput() SystemAdminMapOutput {
	return o
}

func (o SystemAdminMapOutput) ToSystemAdminMapOutputWithContext(ctx context.Context) SystemAdminMapOutput {
	return o
}

func (o SystemAdminMapOutput) MapIndex(k pulumi.StringInput) SystemAdminOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemAdmin {
		return vs[0].(map[string]*SystemAdmin)[vs[1].(string)]
	}).(SystemAdminOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminInput)(nil)).Elem(), &SystemAdmin{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminArrayInput)(nil)).Elem(), SystemAdminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminMapInput)(nil)).Elem(), SystemAdminMap{})
	pulumi.RegisterOutputType(SystemAdminOutput{})
	pulumi.RegisterOutputType(SystemAdminArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminMapOutput{})
}
