// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure ICAP profiles.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewIcapProfile(ctx, "trname", &fortios.IcapProfileArgs{
//				IcapHeaders: fortios.IcapProfileIcapHeaderArray{
//					&fortios.IcapProfileIcapHeaderArgs{
//						Base64Encoding: pulumi.String("disable"),
//						Content:        pulumi.String("$user"),
//						Name:           pulumi.String("X-Authenticated-User"),
//					},
//				},
//				Methods:                pulumi.String("delete get head options post put trace other"),
//				Request:                pulumi.String("disable"),
//				RequestFailure:         pulumi.String("error"),
//				Response:               pulumi.String("disable"),
//				ResponseFailure:        pulumi.String("error"),
//				ResponseReqHdr:         pulumi.String("disable"),
//				StreamingContentBypass: pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Icap Profile can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/icapProfile:IcapProfile labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/icapProfile:IcapProfile labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type IcapProfile struct {
	pulumi.CustomResourceState

	// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
	ChunkEncap pulumi.StringOutput `pulumi:"chunkEncap"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable ICAP extension features. Valid values: `scan-progress`.
	ExtensionFeature pulumi.StringOutput `pulumi:"extensionFeature"`
	// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
	FileTransfer pulumi.StringOutput `pulumi:"fileTransfer"`
	// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
	FileTransferFailure pulumi.StringOutput `pulumi:"fileTransferFailure"`
	// Path component of the ICAP URI that identifies the file transfer processing service.
	FileTransferPath pulumi.StringOutput `pulumi:"fileTransferPath"`
	// ICAP server to use for a file transfer.
	FileTransferServer pulumi.StringOutput `pulumi:"fileTransferServer"`
	// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
	IcapBlockLog pulumi.StringOutput `pulumi:"icapBlockLog"`
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders IcapProfileIcapHeaderArrayOutput `pulumi:"icapHeaders"`
	// The allowed HTTP methods that will be sent to ICAP server for further processing.
	Methods pulumi.StringOutput `pulumi:"methods"`
	// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
	N204Response pulumi.StringOutput `pulumi:"n204Response"`
	// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
	N204SizeLimit pulumi.IntOutput `pulumi:"n204SizeLimit"`
	// ICAP profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview pulumi.StringOutput `pulumi:"preview"`
	// Preview data length to be sent to ICAP server.
	PreviewDataLength pulumi.IntOutput `pulumi:"previewDataLength"`
	// Replacement message group.
	ReplacemsgGroup pulumi.StringOutput `pulumi:"replacemsgGroup"`
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request pulumi.StringOutput `pulumi:"request"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure pulumi.StringOutput `pulumi:"requestFailure"`
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath pulumi.StringOutput `pulumi:"requestPath"`
	// ICAP server to use for an HTTP request.
	RequestServer pulumi.StringOutput `pulumi:"requestServer"`
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction pulumi.StringOutput `pulumi:"respmodDefaultAction"`
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules IcapProfileRespmodForwardRuleArrayOutput `pulumi:"respmodForwardRules"`
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response pulumi.StringOutput `pulumi:"response"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure pulumi.StringOutput `pulumi:"responseFailure"`
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath pulumi.StringOutput `pulumi:"responsePath"`
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr pulumi.StringOutput `pulumi:"responseReqHdr"`
	// ICAP server to use for an HTTP response.
	ResponseServer pulumi.StringOutput `pulumi:"responseServer"`
	// Scan progress interval value.
	ScanProgressInterval pulumi.IntOutput `pulumi:"scanProgressInterval"`
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass pulumi.StringOutput `pulumi:"streamingContentBypass"`
	// Time (in seconds) that ICAP client waits for the response from ICAP server.
	Timeout pulumi.IntOutput `pulumi:"timeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewIcapProfile registers a new resource with the given unique name, arguments, and options.
func NewIcapProfile(ctx *pulumi.Context,
	name string, args *IcapProfileArgs, opts ...pulumi.ResourceOption) (*IcapProfile, error) {
	if args == nil {
		args = &IcapProfileArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource IcapProfile
	err := ctx.RegisterResource("fortios:index/icapProfile:IcapProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIcapProfile gets an existing IcapProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIcapProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IcapProfileState, opts ...pulumi.ResourceOption) (*IcapProfile, error) {
	var resource IcapProfile
	err := ctx.ReadResource("fortios:index/icapProfile:IcapProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IcapProfile resources.
type icapProfileState struct {
	// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
	ChunkEncap *string `pulumi:"chunkEncap"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable ICAP extension features. Valid values: `scan-progress`.
	ExtensionFeature *string `pulumi:"extensionFeature"`
	// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
	FileTransfer *string `pulumi:"fileTransfer"`
	// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
	FileTransferFailure *string `pulumi:"fileTransferFailure"`
	// Path component of the ICAP URI that identifies the file transfer processing service.
	FileTransferPath *string `pulumi:"fileTransferPath"`
	// ICAP server to use for a file transfer.
	FileTransferServer *string `pulumi:"fileTransferServer"`
	// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
	IcapBlockLog *string `pulumi:"icapBlockLog"`
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders []IcapProfileIcapHeader `pulumi:"icapHeaders"`
	// The allowed HTTP methods that will be sent to ICAP server for further processing.
	Methods *string `pulumi:"methods"`
	// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
	N204Response *string `pulumi:"n204Response"`
	// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
	N204SizeLimit *int `pulumi:"n204SizeLimit"`
	// ICAP profile name.
	Name *string `pulumi:"name"`
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview *string `pulumi:"preview"`
	// Preview data length to be sent to ICAP server.
	PreviewDataLength *int `pulumi:"previewDataLength"`
	// Replacement message group.
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request *string `pulumi:"request"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure *string `pulumi:"requestFailure"`
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath *string `pulumi:"requestPath"`
	// ICAP server to use for an HTTP request.
	RequestServer *string `pulumi:"requestServer"`
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction *string `pulumi:"respmodDefaultAction"`
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules []IcapProfileRespmodForwardRule `pulumi:"respmodForwardRules"`
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response *string `pulumi:"response"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure *string `pulumi:"responseFailure"`
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath *string `pulumi:"responsePath"`
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr *string `pulumi:"responseReqHdr"`
	// ICAP server to use for an HTTP response.
	ResponseServer *string `pulumi:"responseServer"`
	// Scan progress interval value.
	ScanProgressInterval *int `pulumi:"scanProgressInterval"`
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass *string `pulumi:"streamingContentBypass"`
	// Time (in seconds) that ICAP client waits for the response from ICAP server.
	Timeout *int `pulumi:"timeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type IcapProfileState struct {
	// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
	ChunkEncap pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable ICAP extension features. Valid values: `scan-progress`.
	ExtensionFeature pulumi.StringPtrInput
	// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
	FileTransfer pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
	FileTransferFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the file transfer processing service.
	FileTransferPath pulumi.StringPtrInput
	// ICAP server to use for a file transfer.
	FileTransferServer pulumi.StringPtrInput
	// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
	IcapBlockLog pulumi.StringPtrInput
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders IcapProfileIcapHeaderArrayInput
	// The allowed HTTP methods that will be sent to ICAP server for further processing.
	Methods pulumi.StringPtrInput
	// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
	N204Response pulumi.StringPtrInput
	// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
	N204SizeLimit pulumi.IntPtrInput
	// ICAP profile name.
	Name pulumi.StringPtrInput
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview pulumi.StringPtrInput
	// Preview data length to be sent to ICAP server.
	PreviewDataLength pulumi.IntPtrInput
	// Replacement message group.
	ReplacemsgGroup pulumi.StringPtrInput
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath pulumi.StringPtrInput
	// ICAP server to use for an HTTP request.
	RequestServer pulumi.StringPtrInput
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction pulumi.StringPtrInput
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules IcapProfileRespmodForwardRuleArrayInput
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath pulumi.StringPtrInput
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr pulumi.StringPtrInput
	// ICAP server to use for an HTTP response.
	ResponseServer pulumi.StringPtrInput
	// Scan progress interval value.
	ScanProgressInterval pulumi.IntPtrInput
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass pulumi.StringPtrInput
	// Time (in seconds) that ICAP client waits for the response from ICAP server.
	Timeout pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (IcapProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*icapProfileState)(nil)).Elem()
}

type icapProfileArgs struct {
	// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
	ChunkEncap *string `pulumi:"chunkEncap"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable ICAP extension features. Valid values: `scan-progress`.
	ExtensionFeature *string `pulumi:"extensionFeature"`
	// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
	FileTransfer *string `pulumi:"fileTransfer"`
	// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
	FileTransferFailure *string `pulumi:"fileTransferFailure"`
	// Path component of the ICAP URI that identifies the file transfer processing service.
	FileTransferPath *string `pulumi:"fileTransferPath"`
	// ICAP server to use for a file transfer.
	FileTransferServer *string `pulumi:"fileTransferServer"`
	// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
	IcapBlockLog *string `pulumi:"icapBlockLog"`
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders []IcapProfileIcapHeader `pulumi:"icapHeaders"`
	// The allowed HTTP methods that will be sent to ICAP server for further processing.
	Methods *string `pulumi:"methods"`
	// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
	N204Response *string `pulumi:"n204Response"`
	// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
	N204SizeLimit *int `pulumi:"n204SizeLimit"`
	// ICAP profile name.
	Name *string `pulumi:"name"`
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview *string `pulumi:"preview"`
	// Preview data length to be sent to ICAP server.
	PreviewDataLength *int `pulumi:"previewDataLength"`
	// Replacement message group.
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request *string `pulumi:"request"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure *string `pulumi:"requestFailure"`
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath *string `pulumi:"requestPath"`
	// ICAP server to use for an HTTP request.
	RequestServer *string `pulumi:"requestServer"`
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction *string `pulumi:"respmodDefaultAction"`
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules []IcapProfileRespmodForwardRule `pulumi:"respmodForwardRules"`
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response *string `pulumi:"response"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure *string `pulumi:"responseFailure"`
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath *string `pulumi:"responsePath"`
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr *string `pulumi:"responseReqHdr"`
	// ICAP server to use for an HTTP response.
	ResponseServer *string `pulumi:"responseServer"`
	// Scan progress interval value.
	ScanProgressInterval *int `pulumi:"scanProgressInterval"`
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass *string `pulumi:"streamingContentBypass"`
	// Time (in seconds) that ICAP client waits for the response from ICAP server.
	Timeout *int `pulumi:"timeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a IcapProfile resource.
type IcapProfileArgs struct {
	// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
	ChunkEncap pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable ICAP extension features. Valid values: `scan-progress`.
	ExtensionFeature pulumi.StringPtrInput
	// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
	FileTransfer pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
	FileTransferFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the file transfer processing service.
	FileTransferPath pulumi.StringPtrInput
	// ICAP server to use for a file transfer.
	FileTransferServer pulumi.StringPtrInput
	// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
	IcapBlockLog pulumi.StringPtrInput
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders IcapProfileIcapHeaderArrayInput
	// The allowed HTTP methods that will be sent to ICAP server for further processing.
	Methods pulumi.StringPtrInput
	// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
	N204Response pulumi.StringPtrInput
	// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
	N204SizeLimit pulumi.IntPtrInput
	// ICAP profile name.
	Name pulumi.StringPtrInput
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview pulumi.StringPtrInput
	// Preview data length to be sent to ICAP server.
	PreviewDataLength pulumi.IntPtrInput
	// Replacement message group.
	ReplacemsgGroup pulumi.StringPtrInput
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath pulumi.StringPtrInput
	// ICAP server to use for an HTTP request.
	RequestServer pulumi.StringPtrInput
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction pulumi.StringPtrInput
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules IcapProfileRespmodForwardRuleArrayInput
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath pulumi.StringPtrInput
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr pulumi.StringPtrInput
	// ICAP server to use for an HTTP response.
	ResponseServer pulumi.StringPtrInput
	// Scan progress interval value.
	ScanProgressInterval pulumi.IntPtrInput
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass pulumi.StringPtrInput
	// Time (in seconds) that ICAP client waits for the response from ICAP server.
	Timeout pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (IcapProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*icapProfileArgs)(nil)).Elem()
}

type IcapProfileInput interface {
	pulumi.Input

	ToIcapProfileOutput() IcapProfileOutput
	ToIcapProfileOutputWithContext(ctx context.Context) IcapProfileOutput
}

func (*IcapProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**IcapProfile)(nil)).Elem()
}

func (i *IcapProfile) ToIcapProfileOutput() IcapProfileOutput {
	return i.ToIcapProfileOutputWithContext(context.Background())
}

func (i *IcapProfile) ToIcapProfileOutputWithContext(ctx context.Context) IcapProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileOutput)
}

// IcapProfileArrayInput is an input type that accepts IcapProfileArray and IcapProfileArrayOutput values.
// You can construct a concrete instance of `IcapProfileArrayInput` via:
//
//	IcapProfileArray{ IcapProfileArgs{...} }
type IcapProfileArrayInput interface {
	pulumi.Input

	ToIcapProfileArrayOutput() IcapProfileArrayOutput
	ToIcapProfileArrayOutputWithContext(context.Context) IcapProfileArrayOutput
}

type IcapProfileArray []IcapProfileInput

func (IcapProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IcapProfile)(nil)).Elem()
}

func (i IcapProfileArray) ToIcapProfileArrayOutput() IcapProfileArrayOutput {
	return i.ToIcapProfileArrayOutputWithContext(context.Background())
}

func (i IcapProfileArray) ToIcapProfileArrayOutputWithContext(ctx context.Context) IcapProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileArrayOutput)
}

// IcapProfileMapInput is an input type that accepts IcapProfileMap and IcapProfileMapOutput values.
// You can construct a concrete instance of `IcapProfileMapInput` via:
//
//	IcapProfileMap{ "key": IcapProfileArgs{...} }
type IcapProfileMapInput interface {
	pulumi.Input

	ToIcapProfileMapOutput() IcapProfileMapOutput
	ToIcapProfileMapOutputWithContext(context.Context) IcapProfileMapOutput
}

type IcapProfileMap map[string]IcapProfileInput

func (IcapProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IcapProfile)(nil)).Elem()
}

func (i IcapProfileMap) ToIcapProfileMapOutput() IcapProfileMapOutput {
	return i.ToIcapProfileMapOutputWithContext(context.Background())
}

func (i IcapProfileMap) ToIcapProfileMapOutputWithContext(ctx context.Context) IcapProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileMapOutput)
}

type IcapProfileOutput struct{ *pulumi.OutputState }

func (IcapProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IcapProfile)(nil)).Elem()
}

func (o IcapProfileOutput) ToIcapProfileOutput() IcapProfileOutput {
	return o
}

func (o IcapProfileOutput) ToIcapProfileOutputWithContext(ctx context.Context) IcapProfileOutput {
	return o
}

// Enable/disable chunked encapsulation (default = disable). Valid values: `disable`, `enable`.
func (o IcapProfileOutput) ChunkEncap() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.ChunkEncap }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o IcapProfileOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable ICAP extension features. Valid values: `scan-progress`.
func (o IcapProfileOutput) ExtensionFeature() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.ExtensionFeature }).(pulumi.StringOutput)
}

// Configure the file transfer protocols to pass transferred files to an ICAP server as REQMOD. Valid values: `ssh`, `ftp`.
func (o IcapProfileOutput) FileTransfer() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.FileTransfer }).(pulumi.StringOutput)
}

// Action to take if the ICAP server cannot be contacted when processing a file transfer. Valid values: `error`, `bypass`.
func (o IcapProfileOutput) FileTransferFailure() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.FileTransferFailure }).(pulumi.StringOutput)
}

// Path component of the ICAP URI that identifies the file transfer processing service.
func (o IcapProfileOutput) FileTransferPath() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.FileTransferPath }).(pulumi.StringOutput)
}

// ICAP server to use for a file transfer.
func (o IcapProfileOutput) FileTransferServer() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.FileTransferServer }).(pulumi.StringOutput)
}

// Enable/disable UTM log when infection found (default = disable). Valid values: `disable`, `enable`.
func (o IcapProfileOutput) IcapBlockLog() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.IcapBlockLog }).(pulumi.StringOutput)
}

// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
func (o IcapProfileOutput) IcapHeaders() IcapProfileIcapHeaderArrayOutput {
	return o.ApplyT(func(v *IcapProfile) IcapProfileIcapHeaderArrayOutput { return v.IcapHeaders }).(IcapProfileIcapHeaderArrayOutput)
}

// The allowed HTTP methods that will be sent to ICAP server for further processing.
func (o IcapProfileOutput) Methods() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.Methods }).(pulumi.StringOutput)
}

// Enable/disable allowance of 204 response from ICAP server. Valid values: `disable`, `enable`.
func (o IcapProfileOutput) N204Response() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.N204Response }).(pulumi.StringOutput)
}

// 204 response size limit to be saved by ICAP client in megabytes (1 - 10, default = 1 MB).
func (o IcapProfileOutput) N204SizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.IntOutput { return v.N204SizeLimit }).(pulumi.IntOutput)
}

// ICAP profile name.
func (o IcapProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
func (o IcapProfileOutput) Preview() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.Preview }).(pulumi.StringOutput)
}

// Preview data length to be sent to ICAP server.
func (o IcapProfileOutput) PreviewDataLength() pulumi.IntOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.IntOutput { return v.PreviewDataLength }).(pulumi.IntOutput)
}

// Replacement message group.
func (o IcapProfileOutput) ReplacemsgGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.ReplacemsgGroup }).(pulumi.StringOutput)
}

// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
func (o IcapProfileOutput) Request() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.Request }).(pulumi.StringOutput)
}

// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
func (o IcapProfileOutput) RequestFailure() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.RequestFailure }).(pulumi.StringOutput)
}

// Path component of the ICAP URI that identifies the HTTP request processing service.
func (o IcapProfileOutput) RequestPath() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.RequestPath }).(pulumi.StringOutput)
}

// ICAP server to use for an HTTP request.
func (o IcapProfileOutput) RequestServer() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.RequestServer }).(pulumi.StringOutput)
}

// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
func (o IcapProfileOutput) RespmodDefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.RespmodDefaultAction }).(pulumi.StringOutput)
}

// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
func (o IcapProfileOutput) RespmodForwardRules() IcapProfileRespmodForwardRuleArrayOutput {
	return o.ApplyT(func(v *IcapProfile) IcapProfileRespmodForwardRuleArrayOutput { return v.RespmodForwardRules }).(IcapProfileRespmodForwardRuleArrayOutput)
}

// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
func (o IcapProfileOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.Response }).(pulumi.StringOutput)
}

// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
func (o IcapProfileOutput) ResponseFailure() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.ResponseFailure }).(pulumi.StringOutput)
}

// Path component of the ICAP URI that identifies the HTTP response processing service.
func (o IcapProfileOutput) ResponsePath() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.ResponsePath }).(pulumi.StringOutput)
}

// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
func (o IcapProfileOutput) ResponseReqHdr() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.ResponseReqHdr }).(pulumi.StringOutput)
}

// ICAP server to use for an HTTP response.
func (o IcapProfileOutput) ResponseServer() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.ResponseServer }).(pulumi.StringOutput)
}

// Scan progress interval value.
func (o IcapProfileOutput) ScanProgressInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.IntOutput { return v.ScanProgressInterval }).(pulumi.IntOutput)
}

// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
func (o IcapProfileOutput) StreamingContentBypass() pulumi.StringOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringOutput { return v.StreamingContentBypass }).(pulumi.StringOutput)
}

// Time (in seconds) that ICAP client waits for the response from ICAP server.
func (o IcapProfileOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o IcapProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IcapProfile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type IcapProfileArrayOutput struct{ *pulumi.OutputState }

func (IcapProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IcapProfile)(nil)).Elem()
}

func (o IcapProfileArrayOutput) ToIcapProfileArrayOutput() IcapProfileArrayOutput {
	return o
}

func (o IcapProfileArrayOutput) ToIcapProfileArrayOutputWithContext(ctx context.Context) IcapProfileArrayOutput {
	return o
}

func (o IcapProfileArrayOutput) Index(i pulumi.IntInput) IcapProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IcapProfile {
		return vs[0].([]*IcapProfile)[vs[1].(int)]
	}).(IcapProfileOutput)
}

type IcapProfileMapOutput struct{ *pulumi.OutputState }

func (IcapProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IcapProfile)(nil)).Elem()
}

func (o IcapProfileMapOutput) ToIcapProfileMapOutput() IcapProfileMapOutput {
	return o
}

func (o IcapProfileMapOutput) ToIcapProfileMapOutputWithContext(ctx context.Context) IcapProfileMapOutput {
	return o
}

func (o IcapProfileMapOutput) MapIndex(k pulumi.StringInput) IcapProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IcapProfile {
		return vs[0].(map[string]*IcapProfile)[vs[1].(string)]
	}).(IcapProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileInput)(nil)).Elem(), &IcapProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileArrayInput)(nil)).Elem(), IcapProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileMapInput)(nil)).Elem(), IcapProfileMap{})
	pulumi.RegisterOutputType(IcapProfileOutput{})
	pulumi.RegisterOutputType(IcapProfileArrayOutput{})
	pulumi.RegisterOutputType(IcapProfileMapOutput{})
}
