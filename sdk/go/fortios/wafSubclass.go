// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Hidden table for datasource.
//
// ## Import
//
// # Waf SubClass can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/wafSubclass:WafSubclass labelname {{fosid}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/wafSubclass:WafSubclass labelname {{fosid}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type WafSubclass struct {
	pulumi.CustomResourceState

	// Signature subclass ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Signature subclass name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWafSubclass registers a new resource with the given unique name, arguments, and options.
func NewWafSubclass(ctx *pulumi.Context,
	name string, args *WafSubclassArgs, opts ...pulumi.ResourceOption) (*WafSubclass, error) {
	if args == nil {
		args = &WafSubclassArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WafSubclass
	err := ctx.RegisterResource("fortios:index/wafSubclass:WafSubclass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWafSubclass gets an existing WafSubclass resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWafSubclass(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WafSubclassState, opts ...pulumi.ResourceOption) (*WafSubclass, error) {
	var resource WafSubclass
	err := ctx.ReadResource("fortios:index/wafSubclass:WafSubclass", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WafSubclass resources.
type wafSubclassState struct {
	// Signature subclass ID.
	Fosid *int `pulumi:"fosid"`
	// Signature subclass name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WafSubclassState struct {
	// Signature subclass ID.
	Fosid pulumi.IntPtrInput
	// Signature subclass name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WafSubclassState) ElementType() reflect.Type {
	return reflect.TypeOf((*wafSubclassState)(nil)).Elem()
}

type wafSubclassArgs struct {
	// Signature subclass ID.
	Fosid *int `pulumi:"fosid"`
	// Signature subclass name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WafSubclass resource.
type WafSubclassArgs struct {
	// Signature subclass ID.
	Fosid pulumi.IntPtrInput
	// Signature subclass name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WafSubclassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wafSubclassArgs)(nil)).Elem()
}

type WafSubclassInput interface {
	pulumi.Input

	ToWafSubclassOutput() WafSubclassOutput
	ToWafSubclassOutputWithContext(ctx context.Context) WafSubclassOutput
}

func (*WafSubclass) ElementType() reflect.Type {
	return reflect.TypeOf((**WafSubclass)(nil)).Elem()
}

func (i *WafSubclass) ToWafSubclassOutput() WafSubclassOutput {
	return i.ToWafSubclassOutputWithContext(context.Background())
}

func (i *WafSubclass) ToWafSubclassOutputWithContext(ctx context.Context) WafSubclassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafSubclassOutput)
}

// WafSubclassArrayInput is an input type that accepts WafSubclassArray and WafSubclassArrayOutput values.
// You can construct a concrete instance of `WafSubclassArrayInput` via:
//
//	WafSubclassArray{ WafSubclassArgs{...} }
type WafSubclassArrayInput interface {
	pulumi.Input

	ToWafSubclassArrayOutput() WafSubclassArrayOutput
	ToWafSubclassArrayOutputWithContext(context.Context) WafSubclassArrayOutput
}

type WafSubclassArray []WafSubclassInput

func (WafSubclassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WafSubclass)(nil)).Elem()
}

func (i WafSubclassArray) ToWafSubclassArrayOutput() WafSubclassArrayOutput {
	return i.ToWafSubclassArrayOutputWithContext(context.Background())
}

func (i WafSubclassArray) ToWafSubclassArrayOutputWithContext(ctx context.Context) WafSubclassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafSubclassArrayOutput)
}

// WafSubclassMapInput is an input type that accepts WafSubclassMap and WafSubclassMapOutput values.
// You can construct a concrete instance of `WafSubclassMapInput` via:
//
//	WafSubclassMap{ "key": WafSubclassArgs{...} }
type WafSubclassMapInput interface {
	pulumi.Input

	ToWafSubclassMapOutput() WafSubclassMapOutput
	ToWafSubclassMapOutputWithContext(context.Context) WafSubclassMapOutput
}

type WafSubclassMap map[string]WafSubclassInput

func (WafSubclassMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WafSubclass)(nil)).Elem()
}

func (i WafSubclassMap) ToWafSubclassMapOutput() WafSubclassMapOutput {
	return i.ToWafSubclassMapOutputWithContext(context.Background())
}

func (i WafSubclassMap) ToWafSubclassMapOutputWithContext(ctx context.Context) WafSubclassMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafSubclassMapOutput)
}

type WafSubclassOutput struct{ *pulumi.OutputState }

func (WafSubclassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafSubclass)(nil)).Elem()
}

func (o WafSubclassOutput) ToWafSubclassOutput() WafSubclassOutput {
	return o
}

func (o WafSubclassOutput) ToWafSubclassOutputWithContext(ctx context.Context) WafSubclassOutput {
	return o
}

// Signature subclass ID.
func (o WafSubclassOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *WafSubclass) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Signature subclass name.
func (o WafSubclassOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WafSubclass) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o WafSubclassOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafSubclass) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WafSubclassArrayOutput struct{ *pulumi.OutputState }

func (WafSubclassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WafSubclass)(nil)).Elem()
}

func (o WafSubclassArrayOutput) ToWafSubclassArrayOutput() WafSubclassArrayOutput {
	return o
}

func (o WafSubclassArrayOutput) ToWafSubclassArrayOutputWithContext(ctx context.Context) WafSubclassArrayOutput {
	return o
}

func (o WafSubclassArrayOutput) Index(i pulumi.IntInput) WafSubclassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WafSubclass {
		return vs[0].([]*WafSubclass)[vs[1].(int)]
	}).(WafSubclassOutput)
}

type WafSubclassMapOutput struct{ *pulumi.OutputState }

func (WafSubclassMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WafSubclass)(nil)).Elem()
}

func (o WafSubclassMapOutput) ToWafSubclassMapOutput() WafSubclassMapOutput {
	return o
}

func (o WafSubclassMapOutput) ToWafSubclassMapOutputWithContext(ctx context.Context) WafSubclassMapOutput {
	return o
}

func (o WafSubclassMapOutput) MapIndex(k pulumi.StringInput) WafSubclassOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WafSubclass {
		return vs[0].(map[string]*WafSubclass)[vs[1].(string)]
	}).(WafSubclassOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WafSubclassInput)(nil)).Elem(), &WafSubclass{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafSubclassArrayInput)(nil)).Elem(), WafSubclassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafSubclassMapInput)(nil)).Elem(), WafSubclassMap{})
	pulumi.RegisterOutputType(WafSubclassOutput{})
	pulumi.RegisterOutputType(WafSubclassArrayOutput{})
	pulumi.RegisterOutputType(WafSubclassMapOutput{})
}
