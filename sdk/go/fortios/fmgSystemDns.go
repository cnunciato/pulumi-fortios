// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource supports modifying system dns setting for FortiManager.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewFmgSystemDns(ctx, "test1", &fortios.FmgSystemDnsArgs{
//				Primary:   pulumi.String("208.91.112.52"),
//				Secondary: pulumi.String("208.91.112.54"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FmgSystemDns struct {
	pulumi.CustomResourceState

	// Primary DNS IP.
	Primary pulumi.StringPtrOutput `pulumi:"primary"`
	// Secondary DNS IP.
	Secondary pulumi.StringPtrOutput `pulumi:"secondary"`
}

// NewFmgSystemDns registers a new resource with the given unique name, arguments, and options.
func NewFmgSystemDns(ctx *pulumi.Context,
	name string, args *FmgSystemDnsArgs, opts ...pulumi.ResourceOption) (*FmgSystemDns, error) {
	if args == nil {
		args = &FmgSystemDnsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FmgSystemDns
	err := ctx.RegisterResource("fortios:index/fmgSystemDns:FmgSystemDns", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFmgSystemDns gets an existing FmgSystemDns resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFmgSystemDns(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FmgSystemDnsState, opts ...pulumi.ResourceOption) (*FmgSystemDns, error) {
	var resource FmgSystemDns
	err := ctx.ReadResource("fortios:index/fmgSystemDns:FmgSystemDns", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FmgSystemDns resources.
type fmgSystemDnsState struct {
	// Primary DNS IP.
	Primary *string `pulumi:"primary"`
	// Secondary DNS IP.
	Secondary *string `pulumi:"secondary"`
}

type FmgSystemDnsState struct {
	// Primary DNS IP.
	Primary pulumi.StringPtrInput
	// Secondary DNS IP.
	Secondary pulumi.StringPtrInput
}

func (FmgSystemDnsState) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgSystemDnsState)(nil)).Elem()
}

type fmgSystemDnsArgs struct {
	// Primary DNS IP.
	Primary *string `pulumi:"primary"`
	// Secondary DNS IP.
	Secondary *string `pulumi:"secondary"`
}

// The set of arguments for constructing a FmgSystemDns resource.
type FmgSystemDnsArgs struct {
	// Primary DNS IP.
	Primary pulumi.StringPtrInput
	// Secondary DNS IP.
	Secondary pulumi.StringPtrInput
}

func (FmgSystemDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgSystemDnsArgs)(nil)).Elem()
}

type FmgSystemDnsInput interface {
	pulumi.Input

	ToFmgSystemDnsOutput() FmgSystemDnsOutput
	ToFmgSystemDnsOutputWithContext(ctx context.Context) FmgSystemDnsOutput
}

func (*FmgSystemDns) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgSystemDns)(nil)).Elem()
}

func (i *FmgSystemDns) ToFmgSystemDnsOutput() FmgSystemDnsOutput {
	return i.ToFmgSystemDnsOutputWithContext(context.Background())
}

func (i *FmgSystemDns) ToFmgSystemDnsOutputWithContext(ctx context.Context) FmgSystemDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemDnsOutput)
}

// FmgSystemDnsArrayInput is an input type that accepts FmgSystemDnsArray and FmgSystemDnsArrayOutput values.
// You can construct a concrete instance of `FmgSystemDnsArrayInput` via:
//
//	FmgSystemDnsArray{ FmgSystemDnsArgs{...} }
type FmgSystemDnsArrayInput interface {
	pulumi.Input

	ToFmgSystemDnsArrayOutput() FmgSystemDnsArrayOutput
	ToFmgSystemDnsArrayOutputWithContext(context.Context) FmgSystemDnsArrayOutput
}

type FmgSystemDnsArray []FmgSystemDnsInput

func (FmgSystemDnsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgSystemDns)(nil)).Elem()
}

func (i FmgSystemDnsArray) ToFmgSystemDnsArrayOutput() FmgSystemDnsArrayOutput {
	return i.ToFmgSystemDnsArrayOutputWithContext(context.Background())
}

func (i FmgSystemDnsArray) ToFmgSystemDnsArrayOutputWithContext(ctx context.Context) FmgSystemDnsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemDnsArrayOutput)
}

// FmgSystemDnsMapInput is an input type that accepts FmgSystemDnsMap and FmgSystemDnsMapOutput values.
// You can construct a concrete instance of `FmgSystemDnsMapInput` via:
//
//	FmgSystemDnsMap{ "key": FmgSystemDnsArgs{...} }
type FmgSystemDnsMapInput interface {
	pulumi.Input

	ToFmgSystemDnsMapOutput() FmgSystemDnsMapOutput
	ToFmgSystemDnsMapOutputWithContext(context.Context) FmgSystemDnsMapOutput
}

type FmgSystemDnsMap map[string]FmgSystemDnsInput

func (FmgSystemDnsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgSystemDns)(nil)).Elem()
}

func (i FmgSystemDnsMap) ToFmgSystemDnsMapOutput() FmgSystemDnsMapOutput {
	return i.ToFmgSystemDnsMapOutputWithContext(context.Background())
}

func (i FmgSystemDnsMap) ToFmgSystemDnsMapOutputWithContext(ctx context.Context) FmgSystemDnsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemDnsMapOutput)
}

type FmgSystemDnsOutput struct{ *pulumi.OutputState }

func (FmgSystemDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgSystemDns)(nil)).Elem()
}

func (o FmgSystemDnsOutput) ToFmgSystemDnsOutput() FmgSystemDnsOutput {
	return o
}

func (o FmgSystemDnsOutput) ToFmgSystemDnsOutputWithContext(ctx context.Context) FmgSystemDnsOutput {
	return o
}

// Primary DNS IP.
func (o FmgSystemDnsOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemDns) pulumi.StringPtrOutput { return v.Primary }).(pulumi.StringPtrOutput)
}

// Secondary DNS IP.
func (o FmgSystemDnsOutput) Secondary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemDns) pulumi.StringPtrOutput { return v.Secondary }).(pulumi.StringPtrOutput)
}

type FmgSystemDnsArrayOutput struct{ *pulumi.OutputState }

func (FmgSystemDnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgSystemDns)(nil)).Elem()
}

func (o FmgSystemDnsArrayOutput) ToFmgSystemDnsArrayOutput() FmgSystemDnsArrayOutput {
	return o
}

func (o FmgSystemDnsArrayOutput) ToFmgSystemDnsArrayOutputWithContext(ctx context.Context) FmgSystemDnsArrayOutput {
	return o
}

func (o FmgSystemDnsArrayOutput) Index(i pulumi.IntInput) FmgSystemDnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FmgSystemDns {
		return vs[0].([]*FmgSystemDns)[vs[1].(int)]
	}).(FmgSystemDnsOutput)
}

type FmgSystemDnsMapOutput struct{ *pulumi.OutputState }

func (FmgSystemDnsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgSystemDns)(nil)).Elem()
}

func (o FmgSystemDnsMapOutput) ToFmgSystemDnsMapOutput() FmgSystemDnsMapOutput {
	return o
}

func (o FmgSystemDnsMapOutput) ToFmgSystemDnsMapOutputWithContext(ctx context.Context) FmgSystemDnsMapOutput {
	return o
}

func (o FmgSystemDnsMapOutput) MapIndex(k pulumi.StringInput) FmgSystemDnsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FmgSystemDns {
		return vs[0].(map[string]*FmgSystemDns)[vs[1].(string)]
	}).(FmgSystemDnsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemDnsInput)(nil)).Elem(), &FmgSystemDns{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemDnsArrayInput)(nil)).Elem(), FmgSystemDnsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemDnsMapInput)(nil)).Elem(), FmgSystemDnsMap{})
	pulumi.RegisterOutputType(FmgSystemDnsOutput{})
	pulumi.RegisterOutputType(FmgSystemDnsArrayOutput{})
	pulumi.RegisterOutputType(FmgSystemDnsMapOutput{})
}
