// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure GRE tunnel.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSystemGretunnel(ctx, "trname", &fortios.SystemGretunnelArgs{
//				ChecksumReception:          pulumi.String("disable"),
//				ChecksumTransmission:       pulumi.String("disable"),
//				DscpCopying:                pulumi.String("disable"),
//				Interface:                  pulumi.String("port3"),
//				IpVersion:                  pulumi.String("4"),
//				KeepaliveFailtimes:         pulumi.Int(10),
//				KeepaliveInterval:          pulumi.Int(0),
//				KeyInbound:                 pulumi.Int(0),
//				KeyOutbound:                pulumi.Int(0),
//				LocalGw:                    pulumi.String("3.3.3.3"),
//				LocalGw6:                   pulumi.String("::"),
//				RemoteGw:                   pulumi.String("1.1.1.1"),
//				RemoteGw6:                  pulumi.String("::"),
//				SequenceNumberReception:    pulumi.String("disable"),
//				SequenceNumberTransmission: pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # System GreTunnel can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemGretunnel:SystemGretunnel labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemGretunnel:SystemGretunnel labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemGretunnel struct {
	pulumi.CustomResourceState

	// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
	ChecksumReception pulumi.StringOutput `pulumi:"checksumReception"`
	// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
	ChecksumTransmission pulumi.StringOutput `pulumi:"checksumTransmission"`
	// DiffServ setting to be applied to GRE tunnel outer IP header.
	Diffservcode pulumi.StringOutput `pulumi:"diffservcode"`
	// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
	DscpCopying pulumi.StringOutput `pulumi:"dscpCopying"`
	// Interface name.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// IP version to use for VPN interface. Valid values: `4`, `6`.
	IpVersion pulumi.StringOutput `pulumi:"ipVersion"`
	// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
	KeepaliveFailtimes pulumi.IntOutput `pulumi:"keepaliveFailtimes"`
	// Keepalive message interval (0 - 32767, 0 = disabled).
	KeepaliveInterval pulumi.IntOutput `pulumi:"keepaliveInterval"`
	// Require received GRE packets contain this key (0 - 4294967295).
	KeyInbound pulumi.IntOutput `pulumi:"keyInbound"`
	// Include this key in transmitted GRE packets (0 - 4294967295).
	KeyOutbound pulumi.IntOutput `pulumi:"keyOutbound"`
	// IP address of the local gateway.
	LocalGw pulumi.StringOutput `pulumi:"localGw"`
	// IPv6 address of the local gateway.
	LocalGw6 pulumi.StringOutput `pulumi:"localGw6"`
	// Tunnel name.
	Name pulumi.StringOutput `pulumi:"name"`
	// IP address of the remote gateway.
	RemoteGw pulumi.StringOutput `pulumi:"remoteGw"`
	// IPv6 address of the remote gateway.
	RemoteGw6 pulumi.StringOutput `pulumi:"remoteGw6"`
	// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberReception pulumi.StringOutput `pulumi:"sequenceNumberReception"`
	// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberTransmission pulumi.StringOutput `pulumi:"sequenceNumberTransmission"`
	// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
	UseSdwan pulumi.StringOutput `pulumi:"useSdwan"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemGretunnel registers a new resource with the given unique name, arguments, and options.
func NewSystemGretunnel(ctx *pulumi.Context,
	name string, args *SystemGretunnelArgs, opts ...pulumi.ResourceOption) (*SystemGretunnel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LocalGw == nil {
		return nil, errors.New("invalid value for required argument 'LocalGw'")
	}
	if args.RemoteGw == nil {
		return nil, errors.New("invalid value for required argument 'RemoteGw'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemGretunnel
	err := ctx.RegisterResource("fortios:index/systemGretunnel:SystemGretunnel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemGretunnel gets an existing SystemGretunnel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemGretunnel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemGretunnelState, opts ...pulumi.ResourceOption) (*SystemGretunnel, error) {
	var resource SystemGretunnel
	err := ctx.ReadResource("fortios:index/systemGretunnel:SystemGretunnel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemGretunnel resources.
type systemGretunnelState struct {
	// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
	ChecksumReception *string `pulumi:"checksumReception"`
	// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
	ChecksumTransmission *string `pulumi:"checksumTransmission"`
	// DiffServ setting to be applied to GRE tunnel outer IP header.
	Diffservcode *string `pulumi:"diffservcode"`
	// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
	DscpCopying *string `pulumi:"dscpCopying"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// IP version to use for VPN interface. Valid values: `4`, `6`.
	IpVersion *string `pulumi:"ipVersion"`
	// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
	KeepaliveFailtimes *int `pulumi:"keepaliveFailtimes"`
	// Keepalive message interval (0 - 32767, 0 = disabled).
	KeepaliveInterval *int `pulumi:"keepaliveInterval"`
	// Require received GRE packets contain this key (0 - 4294967295).
	KeyInbound *int `pulumi:"keyInbound"`
	// Include this key in transmitted GRE packets (0 - 4294967295).
	KeyOutbound *int `pulumi:"keyOutbound"`
	// IP address of the local gateway.
	LocalGw *string `pulumi:"localGw"`
	// IPv6 address of the local gateway.
	LocalGw6 *string `pulumi:"localGw6"`
	// Tunnel name.
	Name *string `pulumi:"name"`
	// IP address of the remote gateway.
	RemoteGw *string `pulumi:"remoteGw"`
	// IPv6 address of the remote gateway.
	RemoteGw6 *string `pulumi:"remoteGw6"`
	// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberReception *string `pulumi:"sequenceNumberReception"`
	// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberTransmission *string `pulumi:"sequenceNumberTransmission"`
	// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
	UseSdwan *string `pulumi:"useSdwan"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemGretunnelState struct {
	// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
	ChecksumReception pulumi.StringPtrInput
	// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
	ChecksumTransmission pulumi.StringPtrInput
	// DiffServ setting to be applied to GRE tunnel outer IP header.
	Diffservcode pulumi.StringPtrInput
	// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
	DscpCopying pulumi.StringPtrInput
	// Interface name.
	Interface pulumi.StringPtrInput
	// IP version to use for VPN interface. Valid values: `4`, `6`.
	IpVersion pulumi.StringPtrInput
	// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
	KeepaliveFailtimes pulumi.IntPtrInput
	// Keepalive message interval (0 - 32767, 0 = disabled).
	KeepaliveInterval pulumi.IntPtrInput
	// Require received GRE packets contain this key (0 - 4294967295).
	KeyInbound pulumi.IntPtrInput
	// Include this key in transmitted GRE packets (0 - 4294967295).
	KeyOutbound pulumi.IntPtrInput
	// IP address of the local gateway.
	LocalGw pulumi.StringPtrInput
	// IPv6 address of the local gateway.
	LocalGw6 pulumi.StringPtrInput
	// Tunnel name.
	Name pulumi.StringPtrInput
	// IP address of the remote gateway.
	RemoteGw pulumi.StringPtrInput
	// IPv6 address of the remote gateway.
	RemoteGw6 pulumi.StringPtrInput
	// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberReception pulumi.StringPtrInput
	// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberTransmission pulumi.StringPtrInput
	// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
	UseSdwan pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemGretunnelState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemGretunnelState)(nil)).Elem()
}

type systemGretunnelArgs struct {
	// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
	ChecksumReception *string `pulumi:"checksumReception"`
	// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
	ChecksumTransmission *string `pulumi:"checksumTransmission"`
	// DiffServ setting to be applied to GRE tunnel outer IP header.
	Diffservcode *string `pulumi:"diffservcode"`
	// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
	DscpCopying *string `pulumi:"dscpCopying"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// IP version to use for VPN interface. Valid values: `4`, `6`.
	IpVersion *string `pulumi:"ipVersion"`
	// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
	KeepaliveFailtimes *int `pulumi:"keepaliveFailtimes"`
	// Keepalive message interval (0 - 32767, 0 = disabled).
	KeepaliveInterval *int `pulumi:"keepaliveInterval"`
	// Require received GRE packets contain this key (0 - 4294967295).
	KeyInbound *int `pulumi:"keyInbound"`
	// Include this key in transmitted GRE packets (0 - 4294967295).
	KeyOutbound *int `pulumi:"keyOutbound"`
	// IP address of the local gateway.
	LocalGw string `pulumi:"localGw"`
	// IPv6 address of the local gateway.
	LocalGw6 *string `pulumi:"localGw6"`
	// Tunnel name.
	Name *string `pulumi:"name"`
	// IP address of the remote gateway.
	RemoteGw string `pulumi:"remoteGw"`
	// IPv6 address of the remote gateway.
	RemoteGw6 *string `pulumi:"remoteGw6"`
	// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberReception *string `pulumi:"sequenceNumberReception"`
	// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberTransmission *string `pulumi:"sequenceNumberTransmission"`
	// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
	UseSdwan *string `pulumi:"useSdwan"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemGretunnel resource.
type SystemGretunnelArgs struct {
	// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
	ChecksumReception pulumi.StringPtrInput
	// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
	ChecksumTransmission pulumi.StringPtrInput
	// DiffServ setting to be applied to GRE tunnel outer IP header.
	Diffservcode pulumi.StringPtrInput
	// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
	DscpCopying pulumi.StringPtrInput
	// Interface name.
	Interface pulumi.StringPtrInput
	// IP version to use for VPN interface. Valid values: `4`, `6`.
	IpVersion pulumi.StringPtrInput
	// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
	KeepaliveFailtimes pulumi.IntPtrInput
	// Keepalive message interval (0 - 32767, 0 = disabled).
	KeepaliveInterval pulumi.IntPtrInput
	// Require received GRE packets contain this key (0 - 4294967295).
	KeyInbound pulumi.IntPtrInput
	// Include this key in transmitted GRE packets (0 - 4294967295).
	KeyOutbound pulumi.IntPtrInput
	// IP address of the local gateway.
	LocalGw pulumi.StringInput
	// IPv6 address of the local gateway.
	LocalGw6 pulumi.StringPtrInput
	// Tunnel name.
	Name pulumi.StringPtrInput
	// IP address of the remote gateway.
	RemoteGw pulumi.StringInput
	// IPv6 address of the remote gateway.
	RemoteGw6 pulumi.StringPtrInput
	// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberReception pulumi.StringPtrInput
	// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
	SequenceNumberTransmission pulumi.StringPtrInput
	// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
	UseSdwan pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemGretunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemGretunnelArgs)(nil)).Elem()
}

type SystemGretunnelInput interface {
	pulumi.Input

	ToSystemGretunnelOutput() SystemGretunnelOutput
	ToSystemGretunnelOutputWithContext(ctx context.Context) SystemGretunnelOutput
}

func (*SystemGretunnel) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemGretunnel)(nil)).Elem()
}

func (i *SystemGretunnel) ToSystemGretunnelOutput() SystemGretunnelOutput {
	return i.ToSystemGretunnelOutputWithContext(context.Background())
}

func (i *SystemGretunnel) ToSystemGretunnelOutputWithContext(ctx context.Context) SystemGretunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGretunnelOutput)
}

// SystemGretunnelArrayInput is an input type that accepts SystemGretunnelArray and SystemGretunnelArrayOutput values.
// You can construct a concrete instance of `SystemGretunnelArrayInput` via:
//
//	SystemGretunnelArray{ SystemGretunnelArgs{...} }
type SystemGretunnelArrayInput interface {
	pulumi.Input

	ToSystemGretunnelArrayOutput() SystemGretunnelArrayOutput
	ToSystemGretunnelArrayOutputWithContext(context.Context) SystemGretunnelArrayOutput
}

type SystemGretunnelArray []SystemGretunnelInput

func (SystemGretunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemGretunnel)(nil)).Elem()
}

func (i SystemGretunnelArray) ToSystemGretunnelArrayOutput() SystemGretunnelArrayOutput {
	return i.ToSystemGretunnelArrayOutputWithContext(context.Background())
}

func (i SystemGretunnelArray) ToSystemGretunnelArrayOutputWithContext(ctx context.Context) SystemGretunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGretunnelArrayOutput)
}

// SystemGretunnelMapInput is an input type that accepts SystemGretunnelMap and SystemGretunnelMapOutput values.
// You can construct a concrete instance of `SystemGretunnelMapInput` via:
//
//	SystemGretunnelMap{ "key": SystemGretunnelArgs{...} }
type SystemGretunnelMapInput interface {
	pulumi.Input

	ToSystemGretunnelMapOutput() SystemGretunnelMapOutput
	ToSystemGretunnelMapOutputWithContext(context.Context) SystemGretunnelMapOutput
}

type SystemGretunnelMap map[string]SystemGretunnelInput

func (SystemGretunnelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemGretunnel)(nil)).Elem()
}

func (i SystemGretunnelMap) ToSystemGretunnelMapOutput() SystemGretunnelMapOutput {
	return i.ToSystemGretunnelMapOutputWithContext(context.Background())
}

func (i SystemGretunnelMap) ToSystemGretunnelMapOutputWithContext(ctx context.Context) SystemGretunnelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGretunnelMapOutput)
}

type SystemGretunnelOutput struct{ *pulumi.OutputState }

func (SystemGretunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemGretunnel)(nil)).Elem()
}

func (o SystemGretunnelOutput) ToSystemGretunnelOutput() SystemGretunnelOutput {
	return o
}

func (o SystemGretunnelOutput) ToSystemGretunnelOutputWithContext(ctx context.Context) SystemGretunnelOutput {
	return o
}

// Enable/disable validating checksums in received GRE packets. Valid values: `disable`, `enable`.
func (o SystemGretunnelOutput) ChecksumReception() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.ChecksumReception }).(pulumi.StringOutput)
}

// Enable/disable including checksums in transmitted GRE packets. Valid values: `disable`, `enable`.
func (o SystemGretunnelOutput) ChecksumTransmission() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.ChecksumTransmission }).(pulumi.StringOutput)
}

// DiffServ setting to be applied to GRE tunnel outer IP header.
func (o SystemGretunnelOutput) Diffservcode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.Diffservcode }).(pulumi.StringOutput)
}

// Enable/disable DSCP copying. Valid values: `disable`, `enable`.
func (o SystemGretunnelOutput) DscpCopying() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.DscpCopying }).(pulumi.StringOutput)
}

// Interface name.
func (o SystemGretunnelOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// IP version to use for VPN interface. Valid values: `4`, `6`.
func (o SystemGretunnelOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.IpVersion }).(pulumi.StringOutput)
}

// Number of consecutive unreturned keepalive messages before a GRE connection is considered down (1 - 255).
func (o SystemGretunnelOutput) KeepaliveFailtimes() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.IntOutput { return v.KeepaliveFailtimes }).(pulumi.IntOutput)
}

// Keepalive message interval (0 - 32767, 0 = disabled).
func (o SystemGretunnelOutput) KeepaliveInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.IntOutput { return v.KeepaliveInterval }).(pulumi.IntOutput)
}

// Require received GRE packets contain this key (0 - 4294967295).
func (o SystemGretunnelOutput) KeyInbound() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.IntOutput { return v.KeyInbound }).(pulumi.IntOutput)
}

// Include this key in transmitted GRE packets (0 - 4294967295).
func (o SystemGretunnelOutput) KeyOutbound() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.IntOutput { return v.KeyOutbound }).(pulumi.IntOutput)
}

// IP address of the local gateway.
func (o SystemGretunnelOutput) LocalGw() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.LocalGw }).(pulumi.StringOutput)
}

// IPv6 address of the local gateway.
func (o SystemGretunnelOutput) LocalGw6() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.LocalGw6 }).(pulumi.StringOutput)
}

// Tunnel name.
func (o SystemGretunnelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// IP address of the remote gateway.
func (o SystemGretunnelOutput) RemoteGw() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.RemoteGw }).(pulumi.StringOutput)
}

// IPv6 address of the remote gateway.
func (o SystemGretunnelOutput) RemoteGw6() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.RemoteGw6 }).(pulumi.StringOutput)
}

// Enable/disable validating sequence numbers in received GRE packets. Valid values: `disable`, `enable`.
func (o SystemGretunnelOutput) SequenceNumberReception() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.SequenceNumberReception }).(pulumi.StringOutput)
}

// Enable/disable including of sequence numbers in transmitted GRE packets. Valid values: `disable`, `enable`.
func (o SystemGretunnelOutput) SequenceNumberTransmission() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.SequenceNumberTransmission }).(pulumi.StringOutput)
}

// Enable/disable use of SD-WAN to reach remote gateway. Valid values: `disable`, `enable`.
func (o SystemGretunnelOutput) UseSdwan() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringOutput { return v.UseSdwan }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemGretunnelOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemGretunnel) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemGretunnelArrayOutput struct{ *pulumi.OutputState }

func (SystemGretunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemGretunnel)(nil)).Elem()
}

func (o SystemGretunnelArrayOutput) ToSystemGretunnelArrayOutput() SystemGretunnelArrayOutput {
	return o
}

func (o SystemGretunnelArrayOutput) ToSystemGretunnelArrayOutputWithContext(ctx context.Context) SystemGretunnelArrayOutput {
	return o
}

func (o SystemGretunnelArrayOutput) Index(i pulumi.IntInput) SystemGretunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemGretunnel {
		return vs[0].([]*SystemGretunnel)[vs[1].(int)]
	}).(SystemGretunnelOutput)
}

type SystemGretunnelMapOutput struct{ *pulumi.OutputState }

func (SystemGretunnelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemGretunnel)(nil)).Elem()
}

func (o SystemGretunnelMapOutput) ToSystemGretunnelMapOutput() SystemGretunnelMapOutput {
	return o
}

func (o SystemGretunnelMapOutput) ToSystemGretunnelMapOutputWithContext(ctx context.Context) SystemGretunnelMapOutput {
	return o
}

func (o SystemGretunnelMapOutput) MapIndex(k pulumi.StringInput) SystemGretunnelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemGretunnel {
		return vs[0].(map[string]*SystemGretunnel)[vs[1].(string)]
	}).(SystemGretunnelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGretunnelInput)(nil)).Elem(), &SystemGretunnel{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGretunnelArrayInput)(nil)).Elem(), SystemGretunnelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGretunnelMapInput)(nil)).Elem(), SystemGretunnelMap{})
	pulumi.RegisterOutputType(SystemGretunnelOutput{})
	pulumi.RegisterOutputType(SystemGretunnelArrayOutput{})
	pulumi.RegisterOutputType(SystemGretunnelMapOutput{})
}
