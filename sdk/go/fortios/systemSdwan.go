// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure redundant internet connections using SD-WAN (formerly virtual WAN link). Applies to FortiOS Version `>= 6.4.1`.
//
// ## Import
//
// # System Sdwan can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemSdwan:SystemSdwan labelname SystemSdwan
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemSdwan:SystemSdwan labelname SystemSdwan
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemSdwan struct {
	pulumi.CustomResourceState

	// Maximum number of interface members a packet is duplicated in the SD-WAN zone (2 - 4, default = 2; if set to 3, the original packet plus 2 more copies are created).
	DuplicationMaxNum pulumi.IntOutput `pulumi:"duplicationMaxNum"`
	// Create SD-WAN duplication rule. The structure of `duplication` block is documented below.
	Duplications SystemSdwanDuplicationArrayOutput `pulumi:"duplications"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces SystemSdwanFailAlertInterfaceArrayOutput `pulumi:"failAlertInterfaces"`
	// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
	FailDetect pulumi.StringOutput `pulumi:"failDetect"`
	// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
	HealthChecks SystemSdwanHealthCheckArrayOutput `pulumi:"healthChecks"`
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
	LoadBalanceMode pulumi.StringOutput `pulumi:"loadBalanceMode"`
	// FortiGate interfaces added to the SD-WAN. The structure of `members` block is documented below.
	Members SystemSdwanMemberArrayOutput `pulumi:"members"`
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime pulumi.IntOutput `pulumi:"neighborHoldBootTime"`
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
	NeighborHoldDown pulumi.StringOutput `pulumi:"neighborHoldDown"`
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime pulumi.IntOutput `pulumi:"neighborHoldDownTime"`
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors SystemSdwanNeighborArrayOutput `pulumi:"neighbors"`
	// Create SD-WAN rules (also called services) to control how sessions are distributed to interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services SystemSdwanServiceArrayOutput `pulumi:"services"`
	// Enable/disable bypass routing when speedtest on a SD-WAN member. Valid values: `disable`, `enable`.
	SpeedtestBypassRouting pulumi.StringOutput `pulumi:"speedtestBypassRouting"`
	// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones SystemSdwanZoneArrayOutput `pulumi:"zones"`
}

// NewSystemSdwan registers a new resource with the given unique name, arguments, and options.
func NewSystemSdwan(ctx *pulumi.Context,
	name string, args *SystemSdwanArgs, opts ...pulumi.ResourceOption) (*SystemSdwan, error) {
	if args == nil {
		args = &SystemSdwanArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemSdwan
	err := ctx.RegisterResource("fortios:index/systemSdwan:SystemSdwan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSdwan gets an existing SystemSdwan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSdwan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSdwanState, opts ...pulumi.ResourceOption) (*SystemSdwan, error) {
	var resource SystemSdwan
	err := ctx.ReadResource("fortios:index/systemSdwan:SystemSdwan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSdwan resources.
type systemSdwanState struct {
	// Maximum number of interface members a packet is duplicated in the SD-WAN zone (2 - 4, default = 2; if set to 3, the original packet plus 2 more copies are created).
	DuplicationMaxNum *int `pulumi:"duplicationMaxNum"`
	// Create SD-WAN duplication rule. The structure of `duplication` block is documented below.
	Duplications []SystemSdwanDuplication `pulumi:"duplications"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces []SystemSdwanFailAlertInterface `pulumi:"failAlertInterfaces"`
	// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
	FailDetect *string `pulumi:"failDetect"`
	// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
	HealthChecks []SystemSdwanHealthCheck `pulumi:"healthChecks"`
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
	LoadBalanceMode *string `pulumi:"loadBalanceMode"`
	// FortiGate interfaces added to the SD-WAN. The structure of `members` block is documented below.
	Members []SystemSdwanMember `pulumi:"members"`
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime *int `pulumi:"neighborHoldBootTime"`
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
	NeighborHoldDown *string `pulumi:"neighborHoldDown"`
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime *int `pulumi:"neighborHoldDownTime"`
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors []SystemSdwanNeighbor `pulumi:"neighbors"`
	// Create SD-WAN rules (also called services) to control how sessions are distributed to interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services []SystemSdwanService `pulumi:"services"`
	// Enable/disable bypass routing when speedtest on a SD-WAN member. Valid values: `disable`, `enable`.
	SpeedtestBypassRouting *string `pulumi:"speedtestBypassRouting"`
	// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones []SystemSdwanZone `pulumi:"zones"`
}

type SystemSdwanState struct {
	// Maximum number of interface members a packet is duplicated in the SD-WAN zone (2 - 4, default = 2; if set to 3, the original packet plus 2 more copies are created).
	DuplicationMaxNum pulumi.IntPtrInput
	// Create SD-WAN duplication rule. The structure of `duplication` block is documented below.
	Duplications SystemSdwanDuplicationArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces SystemSdwanFailAlertInterfaceArrayInput
	// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
	FailDetect pulumi.StringPtrInput
	// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
	HealthChecks SystemSdwanHealthCheckArrayInput
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
	LoadBalanceMode pulumi.StringPtrInput
	// FortiGate interfaces added to the SD-WAN. The structure of `members` block is documented below.
	Members SystemSdwanMemberArrayInput
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime pulumi.IntPtrInput
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
	NeighborHoldDown pulumi.StringPtrInput
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime pulumi.IntPtrInput
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors SystemSdwanNeighborArrayInput
	// Create SD-WAN rules (also called services) to control how sessions are distributed to interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services SystemSdwanServiceArrayInput
	// Enable/disable bypass routing when speedtest on a SD-WAN member. Valid values: `disable`, `enable`.
	SpeedtestBypassRouting pulumi.StringPtrInput
	// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones SystemSdwanZoneArrayInput
}

func (SystemSdwanState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSdwanState)(nil)).Elem()
}

type systemSdwanArgs struct {
	// Maximum number of interface members a packet is duplicated in the SD-WAN zone (2 - 4, default = 2; if set to 3, the original packet plus 2 more copies are created).
	DuplicationMaxNum *int `pulumi:"duplicationMaxNum"`
	// Create SD-WAN duplication rule. The structure of `duplication` block is documented below.
	Duplications []SystemSdwanDuplication `pulumi:"duplications"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces []SystemSdwanFailAlertInterface `pulumi:"failAlertInterfaces"`
	// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
	FailDetect *string `pulumi:"failDetect"`
	// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
	HealthChecks []SystemSdwanHealthCheck `pulumi:"healthChecks"`
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
	LoadBalanceMode *string `pulumi:"loadBalanceMode"`
	// FortiGate interfaces added to the SD-WAN. The structure of `members` block is documented below.
	Members []SystemSdwanMember `pulumi:"members"`
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime *int `pulumi:"neighborHoldBootTime"`
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
	NeighborHoldDown *string `pulumi:"neighborHoldDown"`
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime *int `pulumi:"neighborHoldDownTime"`
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors []SystemSdwanNeighbor `pulumi:"neighbors"`
	// Create SD-WAN rules (also called services) to control how sessions are distributed to interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services []SystemSdwanService `pulumi:"services"`
	// Enable/disable bypass routing when speedtest on a SD-WAN member. Valid values: `disable`, `enable`.
	SpeedtestBypassRouting *string `pulumi:"speedtestBypassRouting"`
	// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones []SystemSdwanZone `pulumi:"zones"`
}

// The set of arguments for constructing a SystemSdwan resource.
type SystemSdwanArgs struct {
	// Maximum number of interface members a packet is duplicated in the SD-WAN zone (2 - 4, default = 2; if set to 3, the original packet plus 2 more copies are created).
	DuplicationMaxNum pulumi.IntPtrInput
	// Create SD-WAN duplication rule. The structure of `duplication` block is documented below.
	Duplications SystemSdwanDuplicationArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces SystemSdwanFailAlertInterfaceArrayInput
	// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
	FailDetect pulumi.StringPtrInput
	// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
	HealthChecks SystemSdwanHealthCheckArrayInput
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
	LoadBalanceMode pulumi.StringPtrInput
	// FortiGate interfaces added to the SD-WAN. The structure of `members` block is documented below.
	Members SystemSdwanMemberArrayInput
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime pulumi.IntPtrInput
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
	NeighborHoldDown pulumi.StringPtrInput
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime pulumi.IntPtrInput
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors SystemSdwanNeighborArrayInput
	// Create SD-WAN rules (also called services) to control how sessions are distributed to interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services SystemSdwanServiceArrayInput
	// Enable/disable bypass routing when speedtest on a SD-WAN member. Valid values: `disable`, `enable`.
	SpeedtestBypassRouting pulumi.StringPtrInput
	// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones SystemSdwanZoneArrayInput
}

func (SystemSdwanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSdwanArgs)(nil)).Elem()
}

type SystemSdwanInput interface {
	pulumi.Input

	ToSystemSdwanOutput() SystemSdwanOutput
	ToSystemSdwanOutputWithContext(ctx context.Context) SystemSdwanOutput
}

func (*SystemSdwan) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSdwan)(nil)).Elem()
}

func (i *SystemSdwan) ToSystemSdwanOutput() SystemSdwanOutput {
	return i.ToSystemSdwanOutputWithContext(context.Background())
}

func (i *SystemSdwan) ToSystemSdwanOutputWithContext(ctx context.Context) SystemSdwanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanOutput)
}

// SystemSdwanArrayInput is an input type that accepts SystemSdwanArray and SystemSdwanArrayOutput values.
// You can construct a concrete instance of `SystemSdwanArrayInput` via:
//
//	SystemSdwanArray{ SystemSdwanArgs{...} }
type SystemSdwanArrayInput interface {
	pulumi.Input

	ToSystemSdwanArrayOutput() SystemSdwanArrayOutput
	ToSystemSdwanArrayOutputWithContext(context.Context) SystemSdwanArrayOutput
}

type SystemSdwanArray []SystemSdwanInput

func (SystemSdwanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSdwan)(nil)).Elem()
}

func (i SystemSdwanArray) ToSystemSdwanArrayOutput() SystemSdwanArrayOutput {
	return i.ToSystemSdwanArrayOutputWithContext(context.Background())
}

func (i SystemSdwanArray) ToSystemSdwanArrayOutputWithContext(ctx context.Context) SystemSdwanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanArrayOutput)
}

// SystemSdwanMapInput is an input type that accepts SystemSdwanMap and SystemSdwanMapOutput values.
// You can construct a concrete instance of `SystemSdwanMapInput` via:
//
//	SystemSdwanMap{ "key": SystemSdwanArgs{...} }
type SystemSdwanMapInput interface {
	pulumi.Input

	ToSystemSdwanMapOutput() SystemSdwanMapOutput
	ToSystemSdwanMapOutputWithContext(context.Context) SystemSdwanMapOutput
}

type SystemSdwanMap map[string]SystemSdwanInput

func (SystemSdwanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSdwan)(nil)).Elem()
}

func (i SystemSdwanMap) ToSystemSdwanMapOutput() SystemSdwanMapOutput {
	return i.ToSystemSdwanMapOutputWithContext(context.Background())
}

func (i SystemSdwanMap) ToSystemSdwanMapOutputWithContext(ctx context.Context) SystemSdwanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanMapOutput)
}

type SystemSdwanOutput struct{ *pulumi.OutputState }

func (SystemSdwanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSdwan)(nil)).Elem()
}

func (o SystemSdwanOutput) ToSystemSdwanOutput() SystemSdwanOutput {
	return o
}

func (o SystemSdwanOutput) ToSystemSdwanOutputWithContext(ctx context.Context) SystemSdwanOutput {
	return o
}

// Maximum number of interface members a packet is duplicated in the SD-WAN zone (2 - 4, default = 2; if set to 3, the original packet plus 2 more copies are created).
func (o SystemSdwanOutput) DuplicationMaxNum() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSdwan) pulumi.IntOutput { return v.DuplicationMaxNum }).(pulumi.IntOutput)
}

// Create SD-WAN duplication rule. The structure of `duplication` block is documented below.
func (o SystemSdwanOutput) Duplications() SystemSdwanDuplicationArrayOutput {
	return o.ApplyT(func(v *SystemSdwan) SystemSdwanDuplicationArrayOutput { return v.Duplications }).(SystemSdwanDuplicationArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SystemSdwanOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSdwan) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
func (o SystemSdwanOutput) FailAlertInterfaces() SystemSdwanFailAlertInterfaceArrayOutput {
	return o.ApplyT(func(v *SystemSdwan) SystemSdwanFailAlertInterfaceArrayOutput { return v.FailAlertInterfaces }).(SystemSdwanFailAlertInterfaceArrayOutput)
}

// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
func (o SystemSdwanOutput) FailDetect() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSdwan) pulumi.StringOutput { return v.FailDetect }).(pulumi.StringOutput)
}

// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
func (o SystemSdwanOutput) HealthChecks() SystemSdwanHealthCheckArrayOutput {
	return o.ApplyT(func(v *SystemSdwan) SystemSdwanHealthCheckArrayOutput { return v.HealthChecks }).(SystemSdwanHealthCheckArrayOutput)
}

// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
func (o SystemSdwanOutput) LoadBalanceMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSdwan) pulumi.StringOutput { return v.LoadBalanceMode }).(pulumi.StringOutput)
}

// FortiGate interfaces added to the SD-WAN. The structure of `members` block is documented below.
func (o SystemSdwanOutput) Members() SystemSdwanMemberArrayOutput {
	return o.ApplyT(func(v *SystemSdwan) SystemSdwanMemberArrayOutput { return v.Members }).(SystemSdwanMemberArrayOutput)
}

// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
func (o SystemSdwanOutput) NeighborHoldBootTime() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSdwan) pulumi.IntOutput { return v.NeighborHoldBootTime }).(pulumi.IntOutput)
}

// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
func (o SystemSdwanOutput) NeighborHoldDown() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSdwan) pulumi.StringOutput { return v.NeighborHoldDown }).(pulumi.StringOutput)
}

// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
func (o SystemSdwanOutput) NeighborHoldDownTime() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSdwan) pulumi.IntOutput { return v.NeighborHoldDownTime }).(pulumi.IntOutput)
}

// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
func (o SystemSdwanOutput) Neighbors() SystemSdwanNeighborArrayOutput {
	return o.ApplyT(func(v *SystemSdwan) SystemSdwanNeighborArrayOutput { return v.Neighbors }).(SystemSdwanNeighborArrayOutput)
}

// Create SD-WAN rules (also called services) to control how sessions are distributed to interfaces in the SD-WAN. The structure of `service` block is documented below.
func (o SystemSdwanOutput) Services() SystemSdwanServiceArrayOutput {
	return o.ApplyT(func(v *SystemSdwan) SystemSdwanServiceArrayOutput { return v.Services }).(SystemSdwanServiceArrayOutput)
}

// Enable/disable bypass routing when speedtest on a SD-WAN member. Valid values: `disable`, `enable`.
func (o SystemSdwanOutput) SpeedtestBypassRouting() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSdwan) pulumi.StringOutput { return v.SpeedtestBypassRouting }).(pulumi.StringOutput)
}

// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
func (o SystemSdwanOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSdwan) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemSdwanOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSdwan) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Configure SD-WAN zones. The structure of `zone` block is documented below.
func (o SystemSdwanOutput) Zones() SystemSdwanZoneArrayOutput {
	return o.ApplyT(func(v *SystemSdwan) SystemSdwanZoneArrayOutput { return v.Zones }).(SystemSdwanZoneArrayOutput)
}

type SystemSdwanArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSdwan)(nil)).Elem()
}

func (o SystemSdwanArrayOutput) ToSystemSdwanArrayOutput() SystemSdwanArrayOutput {
	return o
}

func (o SystemSdwanArrayOutput) ToSystemSdwanArrayOutputWithContext(ctx context.Context) SystemSdwanArrayOutput {
	return o
}

func (o SystemSdwanArrayOutput) Index(i pulumi.IntInput) SystemSdwanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSdwan {
		return vs[0].([]*SystemSdwan)[vs[1].(int)]
	}).(SystemSdwanOutput)
}

type SystemSdwanMapOutput struct{ *pulumi.OutputState }

func (SystemSdwanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSdwan)(nil)).Elem()
}

func (o SystemSdwanMapOutput) ToSystemSdwanMapOutput() SystemSdwanMapOutput {
	return o
}

func (o SystemSdwanMapOutput) ToSystemSdwanMapOutputWithContext(ctx context.Context) SystemSdwanMapOutput {
	return o
}

func (o SystemSdwanMapOutput) MapIndex(k pulumi.StringInput) SystemSdwanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSdwan {
		return vs[0].(map[string]*SystemSdwan)[vs[1].(string)]
	}).(SystemSdwanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanInput)(nil)).Elem(), &SystemSdwan{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanArrayInput)(nil)).Elem(), SystemSdwanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanMapInput)(nil)).Elem(), SystemSdwanMap{})
	pulumi.RegisterOutputType(SystemSdwanOutput{})
	pulumi.RegisterOutputType(SystemSdwanArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanMapOutput{})
}
