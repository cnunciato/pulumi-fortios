// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure geographical location mapping for IP address(es) to override mappings from FortiGuard.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSystemGeoipoverride(ctx, "trname", &fortios.SystemGeoipoverrideArgs{
//				Description: pulumi.String("TEST for country"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # System GeoipOverride can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemGeoipoverride:SystemGeoipoverride labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemGeoipoverride:SystemGeoipoverride labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemGeoipoverride struct {
	pulumi.CustomResourceState

	// Two character Country ID code.
	CountryId pulumi.StringOutput `pulumi:"countryId"`
	// Description.
	Description pulumi.StringOutput `pulumi:"description"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Table of IPv6 ranges assigned to country. The structure of `ip6Range` block is documented below.
	Ip6Ranges SystemGeoipoverrideIp6RangeArrayOutput `pulumi:"ip6Ranges"`
	// Table of IP ranges assigned to country. The structure of `ipRange` block is documented below.
	IpRanges SystemGeoipoverrideIpRangeArrayOutput `pulumi:"ipRanges"`
	// Location name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemGeoipoverride registers a new resource with the given unique name, arguments, and options.
func NewSystemGeoipoverride(ctx *pulumi.Context,
	name string, args *SystemGeoipoverrideArgs, opts ...pulumi.ResourceOption) (*SystemGeoipoverride, error) {
	if args == nil {
		args = &SystemGeoipoverrideArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemGeoipoverride
	err := ctx.RegisterResource("fortios:index/systemGeoipoverride:SystemGeoipoverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemGeoipoverride gets an existing SystemGeoipoverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemGeoipoverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemGeoipoverrideState, opts ...pulumi.ResourceOption) (*SystemGeoipoverride, error) {
	var resource SystemGeoipoverride
	err := ctx.ReadResource("fortios:index/systemGeoipoverride:SystemGeoipoverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemGeoipoverride resources.
type systemGeoipoverrideState struct {
	// Two character Country ID code.
	CountryId *string `pulumi:"countryId"`
	// Description.
	Description *string `pulumi:"description"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Table of IPv6 ranges assigned to country. The structure of `ip6Range` block is documented below.
	Ip6Ranges []SystemGeoipoverrideIp6Range `pulumi:"ip6Ranges"`
	// Table of IP ranges assigned to country. The structure of `ipRange` block is documented below.
	IpRanges []SystemGeoipoverrideIpRange `pulumi:"ipRanges"`
	// Location name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemGeoipoverrideState struct {
	// Two character Country ID code.
	CountryId pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Table of IPv6 ranges assigned to country. The structure of `ip6Range` block is documented below.
	Ip6Ranges SystemGeoipoverrideIp6RangeArrayInput
	// Table of IP ranges assigned to country. The structure of `ipRange` block is documented below.
	IpRanges SystemGeoipoverrideIpRangeArrayInput
	// Location name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemGeoipoverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemGeoipoverrideState)(nil)).Elem()
}

type systemGeoipoverrideArgs struct {
	// Two character Country ID code.
	CountryId *string `pulumi:"countryId"`
	// Description.
	Description *string `pulumi:"description"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Table of IPv6 ranges assigned to country. The structure of `ip6Range` block is documented below.
	Ip6Ranges []SystemGeoipoverrideIp6Range `pulumi:"ip6Ranges"`
	// Table of IP ranges assigned to country. The structure of `ipRange` block is documented below.
	IpRanges []SystemGeoipoverrideIpRange `pulumi:"ipRanges"`
	// Location name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemGeoipoverride resource.
type SystemGeoipoverrideArgs struct {
	// Two character Country ID code.
	CountryId pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Table of IPv6 ranges assigned to country. The structure of `ip6Range` block is documented below.
	Ip6Ranges SystemGeoipoverrideIp6RangeArrayInput
	// Table of IP ranges assigned to country. The structure of `ipRange` block is documented below.
	IpRanges SystemGeoipoverrideIpRangeArrayInput
	// Location name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemGeoipoverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemGeoipoverrideArgs)(nil)).Elem()
}

type SystemGeoipoverrideInput interface {
	pulumi.Input

	ToSystemGeoipoverrideOutput() SystemGeoipoverrideOutput
	ToSystemGeoipoverrideOutputWithContext(ctx context.Context) SystemGeoipoverrideOutput
}

func (*SystemGeoipoverride) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemGeoipoverride)(nil)).Elem()
}

func (i *SystemGeoipoverride) ToSystemGeoipoverrideOutput() SystemGeoipoverrideOutput {
	return i.ToSystemGeoipoverrideOutputWithContext(context.Background())
}

func (i *SystemGeoipoverride) ToSystemGeoipoverrideOutputWithContext(ctx context.Context) SystemGeoipoverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipoverrideOutput)
}

// SystemGeoipoverrideArrayInput is an input type that accepts SystemGeoipoverrideArray and SystemGeoipoverrideArrayOutput values.
// You can construct a concrete instance of `SystemGeoipoverrideArrayInput` via:
//
//	SystemGeoipoverrideArray{ SystemGeoipoverrideArgs{...} }
type SystemGeoipoverrideArrayInput interface {
	pulumi.Input

	ToSystemGeoipoverrideArrayOutput() SystemGeoipoverrideArrayOutput
	ToSystemGeoipoverrideArrayOutputWithContext(context.Context) SystemGeoipoverrideArrayOutput
}

type SystemGeoipoverrideArray []SystemGeoipoverrideInput

func (SystemGeoipoverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemGeoipoverride)(nil)).Elem()
}

func (i SystemGeoipoverrideArray) ToSystemGeoipoverrideArrayOutput() SystemGeoipoverrideArrayOutput {
	return i.ToSystemGeoipoverrideArrayOutputWithContext(context.Background())
}

func (i SystemGeoipoverrideArray) ToSystemGeoipoverrideArrayOutputWithContext(ctx context.Context) SystemGeoipoverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipoverrideArrayOutput)
}

// SystemGeoipoverrideMapInput is an input type that accepts SystemGeoipoverrideMap and SystemGeoipoverrideMapOutput values.
// You can construct a concrete instance of `SystemGeoipoverrideMapInput` via:
//
//	SystemGeoipoverrideMap{ "key": SystemGeoipoverrideArgs{...} }
type SystemGeoipoverrideMapInput interface {
	pulumi.Input

	ToSystemGeoipoverrideMapOutput() SystemGeoipoverrideMapOutput
	ToSystemGeoipoverrideMapOutputWithContext(context.Context) SystemGeoipoverrideMapOutput
}

type SystemGeoipoverrideMap map[string]SystemGeoipoverrideInput

func (SystemGeoipoverrideMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemGeoipoverride)(nil)).Elem()
}

func (i SystemGeoipoverrideMap) ToSystemGeoipoverrideMapOutput() SystemGeoipoverrideMapOutput {
	return i.ToSystemGeoipoverrideMapOutputWithContext(context.Background())
}

func (i SystemGeoipoverrideMap) ToSystemGeoipoverrideMapOutputWithContext(ctx context.Context) SystemGeoipoverrideMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipoverrideMapOutput)
}

type SystemGeoipoverrideOutput struct{ *pulumi.OutputState }

func (SystemGeoipoverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemGeoipoverride)(nil)).Elem()
}

func (o SystemGeoipoverrideOutput) ToSystemGeoipoverrideOutput() SystemGeoipoverrideOutput {
	return o
}

func (o SystemGeoipoverrideOutput) ToSystemGeoipoverrideOutputWithContext(ctx context.Context) SystemGeoipoverrideOutput {
	return o
}

// Two character Country ID code.
func (o SystemGeoipoverrideOutput) CountryId() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGeoipoverride) pulumi.StringOutput { return v.CountryId }).(pulumi.StringOutput)
}

// Description.
func (o SystemGeoipoverrideOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGeoipoverride) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SystemGeoipoverrideOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemGeoipoverride) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Table of IPv6 ranges assigned to country. The structure of `ip6Range` block is documented below.
func (o SystemGeoipoverrideOutput) Ip6Ranges() SystemGeoipoverrideIp6RangeArrayOutput {
	return o.ApplyT(func(v *SystemGeoipoverride) SystemGeoipoverrideIp6RangeArrayOutput { return v.Ip6Ranges }).(SystemGeoipoverrideIp6RangeArrayOutput)
}

// Table of IP ranges assigned to country. The structure of `ipRange` block is documented below.
func (o SystemGeoipoverrideOutput) IpRanges() SystemGeoipoverrideIpRangeArrayOutput {
	return o.ApplyT(func(v *SystemGeoipoverride) SystemGeoipoverrideIpRangeArrayOutput { return v.IpRanges }).(SystemGeoipoverrideIpRangeArrayOutput)
}

// Location name.
func (o SystemGeoipoverrideOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGeoipoverride) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemGeoipoverrideOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemGeoipoverride) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemGeoipoverrideArrayOutput struct{ *pulumi.OutputState }

func (SystemGeoipoverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemGeoipoverride)(nil)).Elem()
}

func (o SystemGeoipoverrideArrayOutput) ToSystemGeoipoverrideArrayOutput() SystemGeoipoverrideArrayOutput {
	return o
}

func (o SystemGeoipoverrideArrayOutput) ToSystemGeoipoverrideArrayOutputWithContext(ctx context.Context) SystemGeoipoverrideArrayOutput {
	return o
}

func (o SystemGeoipoverrideArrayOutput) Index(i pulumi.IntInput) SystemGeoipoverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemGeoipoverride {
		return vs[0].([]*SystemGeoipoverride)[vs[1].(int)]
	}).(SystemGeoipoverrideOutput)
}

type SystemGeoipoverrideMapOutput struct{ *pulumi.OutputState }

func (SystemGeoipoverrideMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemGeoipoverride)(nil)).Elem()
}

func (o SystemGeoipoverrideMapOutput) ToSystemGeoipoverrideMapOutput() SystemGeoipoverrideMapOutput {
	return o
}

func (o SystemGeoipoverrideMapOutput) ToSystemGeoipoverrideMapOutputWithContext(ctx context.Context) SystemGeoipoverrideMapOutput {
	return o
}

func (o SystemGeoipoverrideMapOutput) MapIndex(k pulumi.StringInput) SystemGeoipoverrideOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemGeoipoverride {
		return vs[0].(map[string]*SystemGeoipoverride)[vs[1].(string)]
	}).(SystemGeoipoverrideOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipoverrideInput)(nil)).Elem(), &SystemGeoipoverride{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipoverrideArrayInput)(nil)).Elem(), SystemGeoipoverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipoverrideMapInput)(nil)).Elem(), SystemGeoipoverrideMap{})
	pulumi.RegisterOutputType(SystemGeoipoverrideOutput{})
	pulumi.RegisterOutputType(SystemGeoipoverrideArrayOutput{})
	pulumi.RegisterOutputType(SystemGeoipoverrideMapOutput{})
}
