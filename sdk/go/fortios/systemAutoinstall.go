// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure USB auto installation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSystemAutoinstall(ctx, "trname", &fortios.SystemAutoinstallArgs{
//				AutoInstallConfig: pulumi.String("enable"),
//				AutoInstallImage:  pulumi.String("enable"),
//				DefaultConfigFile: pulumi.String("fgt_system.conf"),
//				DefaultImageFile:  pulumi.String("image.out"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # System AutoInstall can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemAutoinstall:SystemAutoinstall labelname SystemAutoInstall
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemAutoinstall:SystemAutoinstall labelname SystemAutoInstall
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemAutoinstall struct {
	pulumi.CustomResourceState

	// Enable/disable auto install the config in USB disk. Valid values: `enable`, `disable`.
	AutoInstallConfig pulumi.StringOutput `pulumi:"autoInstallConfig"`
	// Enable/disable auto install the image in USB disk. Valid values: `enable`, `disable`.
	AutoInstallImage pulumi.StringOutput `pulumi:"autoInstallImage"`
	// Default config file name in USB disk.
	DefaultConfigFile pulumi.StringOutput `pulumi:"defaultConfigFile"`
	// Default image file name in USB disk.
	DefaultImageFile pulumi.StringOutput `pulumi:"defaultImageFile"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemAutoinstall registers a new resource with the given unique name, arguments, and options.
func NewSystemAutoinstall(ctx *pulumi.Context,
	name string, args *SystemAutoinstallArgs, opts ...pulumi.ResourceOption) (*SystemAutoinstall, error) {
	if args == nil {
		args = &SystemAutoinstallArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemAutoinstall
	err := ctx.RegisterResource("fortios:index/systemAutoinstall:SystemAutoinstall", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemAutoinstall gets an existing SystemAutoinstall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemAutoinstall(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemAutoinstallState, opts ...pulumi.ResourceOption) (*SystemAutoinstall, error) {
	var resource SystemAutoinstall
	err := ctx.ReadResource("fortios:index/systemAutoinstall:SystemAutoinstall", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemAutoinstall resources.
type systemAutoinstallState struct {
	// Enable/disable auto install the config in USB disk. Valid values: `enable`, `disable`.
	AutoInstallConfig *string `pulumi:"autoInstallConfig"`
	// Enable/disable auto install the image in USB disk. Valid values: `enable`, `disable`.
	AutoInstallImage *string `pulumi:"autoInstallImage"`
	// Default config file name in USB disk.
	DefaultConfigFile *string `pulumi:"defaultConfigFile"`
	// Default image file name in USB disk.
	DefaultImageFile *string `pulumi:"defaultImageFile"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemAutoinstallState struct {
	// Enable/disable auto install the config in USB disk. Valid values: `enable`, `disable`.
	AutoInstallConfig pulumi.StringPtrInput
	// Enable/disable auto install the image in USB disk. Valid values: `enable`, `disable`.
	AutoInstallImage pulumi.StringPtrInput
	// Default config file name in USB disk.
	DefaultConfigFile pulumi.StringPtrInput
	// Default image file name in USB disk.
	DefaultImageFile pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemAutoinstallState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAutoinstallState)(nil)).Elem()
}

type systemAutoinstallArgs struct {
	// Enable/disable auto install the config in USB disk. Valid values: `enable`, `disable`.
	AutoInstallConfig *string `pulumi:"autoInstallConfig"`
	// Enable/disable auto install the image in USB disk. Valid values: `enable`, `disable`.
	AutoInstallImage *string `pulumi:"autoInstallImage"`
	// Default config file name in USB disk.
	DefaultConfigFile *string `pulumi:"defaultConfigFile"`
	// Default image file name in USB disk.
	DefaultImageFile *string `pulumi:"defaultImageFile"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemAutoinstall resource.
type SystemAutoinstallArgs struct {
	// Enable/disable auto install the config in USB disk. Valid values: `enable`, `disable`.
	AutoInstallConfig pulumi.StringPtrInput
	// Enable/disable auto install the image in USB disk. Valid values: `enable`, `disable`.
	AutoInstallImage pulumi.StringPtrInput
	// Default config file name in USB disk.
	DefaultConfigFile pulumi.StringPtrInput
	// Default image file name in USB disk.
	DefaultImageFile pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemAutoinstallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAutoinstallArgs)(nil)).Elem()
}

type SystemAutoinstallInput interface {
	pulumi.Input

	ToSystemAutoinstallOutput() SystemAutoinstallOutput
	ToSystemAutoinstallOutputWithContext(ctx context.Context) SystemAutoinstallOutput
}

func (*SystemAutoinstall) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAutoinstall)(nil)).Elem()
}

func (i *SystemAutoinstall) ToSystemAutoinstallOutput() SystemAutoinstallOutput {
	return i.ToSystemAutoinstallOutputWithContext(context.Background())
}

func (i *SystemAutoinstall) ToSystemAutoinstallOutputWithContext(ctx context.Context) SystemAutoinstallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutoinstallOutput)
}

// SystemAutoinstallArrayInput is an input type that accepts SystemAutoinstallArray and SystemAutoinstallArrayOutput values.
// You can construct a concrete instance of `SystemAutoinstallArrayInput` via:
//
//	SystemAutoinstallArray{ SystemAutoinstallArgs{...} }
type SystemAutoinstallArrayInput interface {
	pulumi.Input

	ToSystemAutoinstallArrayOutput() SystemAutoinstallArrayOutput
	ToSystemAutoinstallArrayOutputWithContext(context.Context) SystemAutoinstallArrayOutput
}

type SystemAutoinstallArray []SystemAutoinstallInput

func (SystemAutoinstallArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAutoinstall)(nil)).Elem()
}

func (i SystemAutoinstallArray) ToSystemAutoinstallArrayOutput() SystemAutoinstallArrayOutput {
	return i.ToSystemAutoinstallArrayOutputWithContext(context.Background())
}

func (i SystemAutoinstallArray) ToSystemAutoinstallArrayOutputWithContext(ctx context.Context) SystemAutoinstallArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutoinstallArrayOutput)
}

// SystemAutoinstallMapInput is an input type that accepts SystemAutoinstallMap and SystemAutoinstallMapOutput values.
// You can construct a concrete instance of `SystemAutoinstallMapInput` via:
//
//	SystemAutoinstallMap{ "key": SystemAutoinstallArgs{...} }
type SystemAutoinstallMapInput interface {
	pulumi.Input

	ToSystemAutoinstallMapOutput() SystemAutoinstallMapOutput
	ToSystemAutoinstallMapOutputWithContext(context.Context) SystemAutoinstallMapOutput
}

type SystemAutoinstallMap map[string]SystemAutoinstallInput

func (SystemAutoinstallMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAutoinstall)(nil)).Elem()
}

func (i SystemAutoinstallMap) ToSystemAutoinstallMapOutput() SystemAutoinstallMapOutput {
	return i.ToSystemAutoinstallMapOutputWithContext(context.Background())
}

func (i SystemAutoinstallMap) ToSystemAutoinstallMapOutputWithContext(ctx context.Context) SystemAutoinstallMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutoinstallMapOutput)
}

type SystemAutoinstallOutput struct{ *pulumi.OutputState }

func (SystemAutoinstallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAutoinstall)(nil)).Elem()
}

func (o SystemAutoinstallOutput) ToSystemAutoinstallOutput() SystemAutoinstallOutput {
	return o
}

func (o SystemAutoinstallOutput) ToSystemAutoinstallOutputWithContext(ctx context.Context) SystemAutoinstallOutput {
	return o
}

// Enable/disable auto install the config in USB disk. Valid values: `enable`, `disable`.
func (o SystemAutoinstallOutput) AutoInstallConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAutoinstall) pulumi.StringOutput { return v.AutoInstallConfig }).(pulumi.StringOutput)
}

// Enable/disable auto install the image in USB disk. Valid values: `enable`, `disable`.
func (o SystemAutoinstallOutput) AutoInstallImage() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAutoinstall) pulumi.StringOutput { return v.AutoInstallImage }).(pulumi.StringOutput)
}

// Default config file name in USB disk.
func (o SystemAutoinstallOutput) DefaultConfigFile() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAutoinstall) pulumi.StringOutput { return v.DefaultConfigFile }).(pulumi.StringOutput)
}

// Default image file name in USB disk.
func (o SystemAutoinstallOutput) DefaultImageFile() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAutoinstall) pulumi.StringOutput { return v.DefaultImageFile }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemAutoinstallOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAutoinstall) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemAutoinstallArrayOutput struct{ *pulumi.OutputState }

func (SystemAutoinstallArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAutoinstall)(nil)).Elem()
}

func (o SystemAutoinstallArrayOutput) ToSystemAutoinstallArrayOutput() SystemAutoinstallArrayOutput {
	return o
}

func (o SystemAutoinstallArrayOutput) ToSystemAutoinstallArrayOutputWithContext(ctx context.Context) SystemAutoinstallArrayOutput {
	return o
}

func (o SystemAutoinstallArrayOutput) Index(i pulumi.IntInput) SystemAutoinstallOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemAutoinstall {
		return vs[0].([]*SystemAutoinstall)[vs[1].(int)]
	}).(SystemAutoinstallOutput)
}

type SystemAutoinstallMapOutput struct{ *pulumi.OutputState }

func (SystemAutoinstallMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAutoinstall)(nil)).Elem()
}

func (o SystemAutoinstallMapOutput) ToSystemAutoinstallMapOutput() SystemAutoinstallMapOutput {
	return o
}

func (o SystemAutoinstallMapOutput) ToSystemAutoinstallMapOutputWithContext(ctx context.Context) SystemAutoinstallMapOutput {
	return o
}

func (o SystemAutoinstallMapOutput) MapIndex(k pulumi.StringInput) SystemAutoinstallOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemAutoinstall {
		return vs[0].(map[string]*SystemAutoinstall)[vs[1].(string)]
	}).(SystemAutoinstallOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutoinstallInput)(nil)).Elem(), &SystemAutoinstall{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutoinstallArrayInput)(nil)).Elem(), SystemAutoinstallArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutoinstallMapInput)(nil)).Elem(), SystemAutoinstallMap{})
	pulumi.RegisterOutputType(SystemAutoinstallOutput{})
	pulumi.RegisterOutputType(SystemAutoinstallArrayOutput{})
	pulumi.RegisterOutputType(SystemAutoinstallMapOutput{})
}
