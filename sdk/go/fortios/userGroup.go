// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure user groups.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewUserGroup(ctx, "trname", &fortios.UserGroupArgs{
//				Company:     pulumi.String("optional"),
//				Email:       pulumi.String("enable"),
//				Expire:      pulumi.Int(14400),
//				ExpireType:  pulumi.String("immediately"),
//				GroupType:   pulumi.String("firewall"),
//				MaxAccounts: pulumi.Int(0),
//				Members: fortios.UserGroupMemberArray{
//					&fortios.UserGroupMemberArgs{
//						Name: pulumi.String("guest"),
//					},
//				},
//				MobilePhone:      pulumi.String("disable"),
//				MultipleGuestAdd: pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # User Group can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/userGroup:UserGroup labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/userGroup:UserGroup labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type UserGroup struct {
	pulumi.CustomResourceState

	// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
	AuthConcurrentOverride pulumi.StringOutput `pulumi:"authConcurrentOverride"`
	// Maximum number of concurrent authenticated connections per user (0 - 100).
	AuthConcurrentValue pulumi.IntOutput `pulumi:"authConcurrentValue"`
	// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
	Authtimeout pulumi.IntOutput `pulumi:"authtimeout"`
	// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Company pulumi.StringOutput `pulumi:"company"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
	Email pulumi.StringOutput `pulumi:"email"`
	// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
	Expire pulumi.IntOutput `pulumi:"expire"`
	// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
	ExpireType pulumi.StringOutput `pulumi:"expireType"`
	// Group ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
	GroupType pulumi.StringOutput `pulumi:"groupType"`
	// Guest User. The structure of `guest` block is documented below.
	Guests UserGroupGuestArrayOutput `pulumi:"guests"`
	// Realm attribute for MD5-digest authentication.
	HttpDigestRealm pulumi.StringOutput `pulumi:"httpDigestRealm"`
	// Group matches. The structure of `match` block is documented below.
	Matches UserGroupMatchArrayOutput `pulumi:"matches"`
	// Maximum number of guest accounts that can be created for this group (0 means unlimited).
	MaxAccounts pulumi.IntOutput `pulumi:"maxAccounts"`
	// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
	Members UserGroupMemberArrayOutput `pulumi:"members"`
	// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
	MobilePhone pulumi.StringOutput `pulumi:"mobilePhone"`
	// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
	MultipleGuestAdd pulumi.StringOutput `pulumi:"multipleGuestAdd"`
	// Group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
	Password pulumi.StringOutput `pulumi:"password"`
	// SMS server.
	SmsCustomServer pulumi.StringOutput `pulumi:"smsCustomServer"`
	// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
	SmsServer pulumi.StringOutput `pulumi:"smsServer"`
	// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Sponsor pulumi.StringOutput `pulumi:"sponsor"`
	// Name of the RADIUS user group that this local user group represents.
	SsoAttributeValue pulumi.StringOutput `pulumi:"ssoAttributeValue"`
	// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
	UserId pulumi.StringOutput `pulumi:"userId"`
	// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
	UserName pulumi.StringOutput `pulumi:"userName"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewUserGroup registers a new resource with the given unique name, arguments, and options.
func NewUserGroup(ctx *pulumi.Context,
	name string, args *UserGroupArgs, opts ...pulumi.ResourceOption) (*UserGroup, error) {
	if args == nil {
		args = &UserGroupArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource UserGroup
	err := ctx.RegisterResource("fortios:index/userGroup:UserGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserGroup gets an existing UserGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserGroupState, opts ...pulumi.ResourceOption) (*UserGroup, error) {
	var resource UserGroup
	err := ctx.ReadResource("fortios:index/userGroup:UserGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserGroup resources.
type userGroupState struct {
	// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
	AuthConcurrentOverride *string `pulumi:"authConcurrentOverride"`
	// Maximum number of concurrent authenticated connections per user (0 - 100).
	AuthConcurrentValue *int `pulumi:"authConcurrentValue"`
	// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
	Authtimeout *int `pulumi:"authtimeout"`
	// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Company *string `pulumi:"company"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
	Email *string `pulumi:"email"`
	// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
	Expire *int `pulumi:"expire"`
	// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
	ExpireType *string `pulumi:"expireType"`
	// Group ID.
	Fosid *int `pulumi:"fosid"`
	// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
	GroupType *string `pulumi:"groupType"`
	// Guest User. The structure of `guest` block is documented below.
	Guests []UserGroupGuest `pulumi:"guests"`
	// Realm attribute for MD5-digest authentication.
	HttpDigestRealm *string `pulumi:"httpDigestRealm"`
	// Group matches. The structure of `match` block is documented below.
	Matches []UserGroupMatch `pulumi:"matches"`
	// Maximum number of guest accounts that can be created for this group (0 means unlimited).
	MaxAccounts *int `pulumi:"maxAccounts"`
	// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
	Members []UserGroupMember `pulumi:"members"`
	// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
	MobilePhone *string `pulumi:"mobilePhone"`
	// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
	MultipleGuestAdd *string `pulumi:"multipleGuestAdd"`
	// Group name.
	Name *string `pulumi:"name"`
	// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
	Password *string `pulumi:"password"`
	// SMS server.
	SmsCustomServer *string `pulumi:"smsCustomServer"`
	// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
	SmsServer *string `pulumi:"smsServer"`
	// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Sponsor *string `pulumi:"sponsor"`
	// Name of the RADIUS user group that this local user group represents.
	SsoAttributeValue *string `pulumi:"ssoAttributeValue"`
	// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
	UserId *string `pulumi:"userId"`
	// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
	UserName *string `pulumi:"userName"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type UserGroupState struct {
	// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
	AuthConcurrentOverride pulumi.StringPtrInput
	// Maximum number of concurrent authenticated connections per user (0 - 100).
	AuthConcurrentValue pulumi.IntPtrInput
	// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
	Authtimeout pulumi.IntPtrInput
	// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Company pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
	Email pulumi.StringPtrInput
	// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
	Expire pulumi.IntPtrInput
	// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
	ExpireType pulumi.StringPtrInput
	// Group ID.
	Fosid pulumi.IntPtrInput
	// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
	GroupType pulumi.StringPtrInput
	// Guest User. The structure of `guest` block is documented below.
	Guests UserGroupGuestArrayInput
	// Realm attribute for MD5-digest authentication.
	HttpDigestRealm pulumi.StringPtrInput
	// Group matches. The structure of `match` block is documented below.
	Matches UserGroupMatchArrayInput
	// Maximum number of guest accounts that can be created for this group (0 means unlimited).
	MaxAccounts pulumi.IntPtrInput
	// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
	Members UserGroupMemberArrayInput
	// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
	MobilePhone pulumi.StringPtrInput
	// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
	MultipleGuestAdd pulumi.StringPtrInput
	// Group name.
	Name pulumi.StringPtrInput
	// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
	Password pulumi.StringPtrInput
	// SMS server.
	SmsCustomServer pulumi.StringPtrInput
	// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
	SmsServer pulumi.StringPtrInput
	// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Sponsor pulumi.StringPtrInput
	// Name of the RADIUS user group that this local user group represents.
	SsoAttributeValue pulumi.StringPtrInput
	// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
	UserId pulumi.StringPtrInput
	// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
	UserName pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (UserGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*userGroupState)(nil)).Elem()
}

type userGroupArgs struct {
	// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
	AuthConcurrentOverride *string `pulumi:"authConcurrentOverride"`
	// Maximum number of concurrent authenticated connections per user (0 - 100).
	AuthConcurrentValue *int `pulumi:"authConcurrentValue"`
	// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
	Authtimeout *int `pulumi:"authtimeout"`
	// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Company *string `pulumi:"company"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
	Email *string `pulumi:"email"`
	// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
	Expire *int `pulumi:"expire"`
	// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
	ExpireType *string `pulumi:"expireType"`
	// Group ID.
	Fosid *int `pulumi:"fosid"`
	// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
	GroupType *string `pulumi:"groupType"`
	// Guest User. The structure of `guest` block is documented below.
	Guests []UserGroupGuest `pulumi:"guests"`
	// Realm attribute for MD5-digest authentication.
	HttpDigestRealm *string `pulumi:"httpDigestRealm"`
	// Group matches. The structure of `match` block is documented below.
	Matches []UserGroupMatch `pulumi:"matches"`
	// Maximum number of guest accounts that can be created for this group (0 means unlimited).
	MaxAccounts *int `pulumi:"maxAccounts"`
	// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
	Members []UserGroupMember `pulumi:"members"`
	// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
	MobilePhone *string `pulumi:"mobilePhone"`
	// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
	MultipleGuestAdd *string `pulumi:"multipleGuestAdd"`
	// Group name.
	Name *string `pulumi:"name"`
	// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
	Password *string `pulumi:"password"`
	// SMS server.
	SmsCustomServer *string `pulumi:"smsCustomServer"`
	// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
	SmsServer *string `pulumi:"smsServer"`
	// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Sponsor *string `pulumi:"sponsor"`
	// Name of the RADIUS user group that this local user group represents.
	SsoAttributeValue *string `pulumi:"ssoAttributeValue"`
	// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
	UserId *string `pulumi:"userId"`
	// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
	UserName *string `pulumi:"userName"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a UserGroup resource.
type UserGroupArgs struct {
	// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
	AuthConcurrentOverride pulumi.StringPtrInput
	// Maximum number of concurrent authenticated connections per user (0 - 100).
	AuthConcurrentValue pulumi.IntPtrInput
	// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
	Authtimeout pulumi.IntPtrInput
	// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Company pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
	Email pulumi.StringPtrInput
	// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
	Expire pulumi.IntPtrInput
	// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
	ExpireType pulumi.StringPtrInput
	// Group ID.
	Fosid pulumi.IntPtrInput
	// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
	GroupType pulumi.StringPtrInput
	// Guest User. The structure of `guest` block is documented below.
	Guests UserGroupGuestArrayInput
	// Realm attribute for MD5-digest authentication.
	HttpDigestRealm pulumi.StringPtrInput
	// Group matches. The structure of `match` block is documented below.
	Matches UserGroupMatchArrayInput
	// Maximum number of guest accounts that can be created for this group (0 means unlimited).
	MaxAccounts pulumi.IntPtrInput
	// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
	Members UserGroupMemberArrayInput
	// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
	MobilePhone pulumi.StringPtrInput
	// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
	MultipleGuestAdd pulumi.StringPtrInput
	// Group name.
	Name pulumi.StringPtrInput
	// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
	Password pulumi.StringPtrInput
	// SMS server.
	SmsCustomServer pulumi.StringPtrInput
	// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
	SmsServer pulumi.StringPtrInput
	// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
	Sponsor pulumi.StringPtrInput
	// Name of the RADIUS user group that this local user group represents.
	SsoAttributeValue pulumi.StringPtrInput
	// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
	UserId pulumi.StringPtrInput
	// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
	UserName pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (UserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userGroupArgs)(nil)).Elem()
}

type UserGroupInput interface {
	pulumi.Input

	ToUserGroupOutput() UserGroupOutput
	ToUserGroupOutputWithContext(ctx context.Context) UserGroupOutput
}

func (*UserGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGroup)(nil)).Elem()
}

func (i *UserGroup) ToUserGroupOutput() UserGroupOutput {
	return i.ToUserGroupOutputWithContext(context.Background())
}

func (i *UserGroup) ToUserGroupOutputWithContext(ctx context.Context) UserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupOutput)
}

// UserGroupArrayInput is an input type that accepts UserGroupArray and UserGroupArrayOutput values.
// You can construct a concrete instance of `UserGroupArrayInput` via:
//
//	UserGroupArray{ UserGroupArgs{...} }
type UserGroupArrayInput interface {
	pulumi.Input

	ToUserGroupArrayOutput() UserGroupArrayOutput
	ToUserGroupArrayOutputWithContext(context.Context) UserGroupArrayOutput
}

type UserGroupArray []UserGroupInput

func (UserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserGroup)(nil)).Elem()
}

func (i UserGroupArray) ToUserGroupArrayOutput() UserGroupArrayOutput {
	return i.ToUserGroupArrayOutputWithContext(context.Background())
}

func (i UserGroupArray) ToUserGroupArrayOutputWithContext(ctx context.Context) UserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupArrayOutput)
}

// UserGroupMapInput is an input type that accepts UserGroupMap and UserGroupMapOutput values.
// You can construct a concrete instance of `UserGroupMapInput` via:
//
//	UserGroupMap{ "key": UserGroupArgs{...} }
type UserGroupMapInput interface {
	pulumi.Input

	ToUserGroupMapOutput() UserGroupMapOutput
	ToUserGroupMapOutputWithContext(context.Context) UserGroupMapOutput
}

type UserGroupMap map[string]UserGroupInput

func (UserGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserGroup)(nil)).Elem()
}

func (i UserGroupMap) ToUserGroupMapOutput() UserGroupMapOutput {
	return i.ToUserGroupMapOutputWithContext(context.Background())
}

func (i UserGroupMap) ToUserGroupMapOutputWithContext(ctx context.Context) UserGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupMapOutput)
}

type UserGroupOutput struct{ *pulumi.OutputState }

func (UserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGroup)(nil)).Elem()
}

func (o UserGroupOutput) ToUserGroupOutput() UserGroupOutput {
	return o
}

func (o UserGroupOutput) ToUserGroupOutputWithContext(ctx context.Context) UserGroupOutput {
	return o
}

// Enable/disable overriding the global number of concurrent authentication sessions for this user group. Valid values: `enable`, `disable`.
func (o UserGroupOutput) AuthConcurrentOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.AuthConcurrentOverride }).(pulumi.StringOutput)
}

// Maximum number of concurrent authenticated connections per user (0 - 100).
func (o UserGroupOutput) AuthConcurrentValue() pulumi.IntOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.IntOutput { return v.AuthConcurrentValue }).(pulumi.IntOutput)
}

// Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.
func (o UserGroupOutput) Authtimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.IntOutput { return v.Authtimeout }).(pulumi.IntOutput)
}

// Set the action for the company guest user field. Valid values: `optional`, `mandatory`, `disabled`.
func (o UserGroupOutput) Company() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.Company }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o UserGroupOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable the guest user email address field. Valid values: `disable`, `enable`.
func (o UserGroupOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// Time in seconds before guest user accounts expire. (1 - 31536000 sec)
func (o UserGroupOutput) Expire() pulumi.IntOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.IntOutput { return v.Expire }).(pulumi.IntOutput)
}

// Determine when the expiration countdown begins. Valid values: `immediately`, `first-successful-login`.
func (o UserGroupOutput) ExpireType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.ExpireType }).(pulumi.StringOutput)
}

// Group ID.
func (o UserGroupOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Set the group to be for firewall authentication, FSSO, RSSO, or guest users. Valid values: `firewall`, `fsso-service`, `rsso`, `guest`.
func (o UserGroupOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.GroupType }).(pulumi.StringOutput)
}

// Guest User. The structure of `guest` block is documented below.
func (o UserGroupOutput) Guests() UserGroupGuestArrayOutput {
	return o.ApplyT(func(v *UserGroup) UserGroupGuestArrayOutput { return v.Guests }).(UserGroupGuestArrayOutput)
}

// Realm attribute for MD5-digest authentication.
func (o UserGroupOutput) HttpDigestRealm() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.HttpDigestRealm }).(pulumi.StringOutput)
}

// Group matches. The structure of `match` block is documented below.
func (o UserGroupOutput) Matches() UserGroupMatchArrayOutput {
	return o.ApplyT(func(v *UserGroup) UserGroupMatchArrayOutput { return v.Matches }).(UserGroupMatchArrayOutput)
}

// Maximum number of guest accounts that can be created for this group (0 means unlimited).
func (o UserGroupOutput) MaxAccounts() pulumi.IntOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.IntOutput { return v.MaxAccounts }).(pulumi.IntOutput)
}

// Names of users, peers, LDAP severs, or RADIUS servers to add to the user group. The structure of `member` block is documented below.
func (o UserGroupOutput) Members() UserGroupMemberArrayOutput {
	return o.ApplyT(func(v *UserGroup) UserGroupMemberArrayOutput { return v.Members }).(UserGroupMemberArrayOutput)
}

// Enable/disable the guest user mobile phone number field. Valid values: `disable`, `enable`.
func (o UserGroupOutput) MobilePhone() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.MobilePhone }).(pulumi.StringOutput)
}

// Enable/disable addition of multiple guests. Valid values: `disable`, `enable`.
func (o UserGroupOutput) MultipleGuestAdd() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.MultipleGuestAdd }).(pulumi.StringOutput)
}

// Group name.
func (o UserGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Guest user password type. Valid values: `auto-generate`, `specify`, `disable`.
func (o UserGroupOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// SMS server.
func (o UserGroupOutput) SmsCustomServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.SmsCustomServer }).(pulumi.StringOutput)
}

// Send SMS through FortiGuard or other external server. Valid values: `fortiguard`, `custom`.
func (o UserGroupOutput) SmsServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.SmsServer }).(pulumi.StringOutput)
}

// Set the action for the sponsor guest user field. Valid values: `optional`, `mandatory`, `disabled`.
func (o UserGroupOutput) Sponsor() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.Sponsor }).(pulumi.StringOutput)
}

// Name of the RADIUS user group that this local user group represents.
func (o UserGroupOutput) SsoAttributeValue() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.SsoAttributeValue }).(pulumi.StringOutput)
}

// Guest user ID type. Valid values: `email`, `auto-generate`, `specify`.
func (o UserGroupOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

// Enable/disable the guest user name entry. Valid values: `disable`, `enable`.
func (o UserGroupOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o UserGroupOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserGroup) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type UserGroupArrayOutput struct{ *pulumi.OutputState }

func (UserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserGroup)(nil)).Elem()
}

func (o UserGroupArrayOutput) ToUserGroupArrayOutput() UserGroupArrayOutput {
	return o
}

func (o UserGroupArrayOutput) ToUserGroupArrayOutputWithContext(ctx context.Context) UserGroupArrayOutput {
	return o
}

func (o UserGroupArrayOutput) Index(i pulumi.IntInput) UserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserGroup {
		return vs[0].([]*UserGroup)[vs[1].(int)]
	}).(UserGroupOutput)
}

type UserGroupMapOutput struct{ *pulumi.OutputState }

func (UserGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserGroup)(nil)).Elem()
}

func (o UserGroupMapOutput) ToUserGroupMapOutput() UserGroupMapOutput {
	return o
}

func (o UserGroupMapOutput) ToUserGroupMapOutputWithContext(ctx context.Context) UserGroupMapOutput {
	return o
}

func (o UserGroupMapOutput) MapIndex(k pulumi.StringInput) UserGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserGroup {
		return vs[0].(map[string]*UserGroup)[vs[1].(string)]
	}).(UserGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupInput)(nil)).Elem(), &UserGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupArrayInput)(nil)).Elem(), UserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupMapInput)(nil)).Elem(), UserGroupMap{})
	pulumi.RegisterOutputType(UserGroupOutput{})
	pulumi.RegisterOutputType(UserGroupArrayOutput{})
	pulumi.RegisterOutputType(UserGroupMapOutput{})
}
