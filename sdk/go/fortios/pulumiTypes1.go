// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogfortianalyzercloudFilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogfortianalyzercloudFilterFreeStyleInput is an input type that accepts LogfortianalyzercloudFilterFreeStyleArgs and LogfortianalyzercloudFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogfortianalyzercloudFilterFreeStyleInput` via:
//
//	LogfortianalyzercloudFilterFreeStyleArgs{...}
type LogfortianalyzercloudFilterFreeStyleInput interface {
	pulumi.Input

	ToLogfortianalyzercloudFilterFreeStyleOutput() LogfortianalyzercloudFilterFreeStyleOutput
	ToLogfortianalyzercloudFilterFreeStyleOutputWithContext(context.Context) LogfortianalyzercloudFilterFreeStyleOutput
}

type LogfortianalyzercloudFilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogfortianalyzercloudFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzercloudFilterFreeStyle)(nil)).Elem()
}

func (i LogfortianalyzercloudFilterFreeStyleArgs) ToLogfortianalyzercloudFilterFreeStyleOutput() LogfortianalyzercloudFilterFreeStyleOutput {
	return i.ToLogfortianalyzercloudFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogfortianalyzercloudFilterFreeStyleArgs) ToLogfortianalyzercloudFilterFreeStyleOutputWithContext(ctx context.Context) LogfortianalyzercloudFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzercloudFilterFreeStyleOutput)
}

// LogfortianalyzercloudFilterFreeStyleArrayInput is an input type that accepts LogfortianalyzercloudFilterFreeStyleArray and LogfortianalyzercloudFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogfortianalyzercloudFilterFreeStyleArrayInput` via:
//
//	LogfortianalyzercloudFilterFreeStyleArray{ LogfortianalyzercloudFilterFreeStyleArgs{...} }
type LogfortianalyzercloudFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogfortianalyzercloudFilterFreeStyleArrayOutput() LogfortianalyzercloudFilterFreeStyleArrayOutput
	ToLogfortianalyzercloudFilterFreeStyleArrayOutputWithContext(context.Context) LogfortianalyzercloudFilterFreeStyleArrayOutput
}

type LogfortianalyzercloudFilterFreeStyleArray []LogfortianalyzercloudFilterFreeStyleInput

func (LogfortianalyzercloudFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzercloudFilterFreeStyle)(nil)).Elem()
}

func (i LogfortianalyzercloudFilterFreeStyleArray) ToLogfortianalyzercloudFilterFreeStyleArrayOutput() LogfortianalyzercloudFilterFreeStyleArrayOutput {
	return i.ToLogfortianalyzercloudFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogfortianalyzercloudFilterFreeStyleArray) ToLogfortianalyzercloudFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortianalyzercloudFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzercloudFilterFreeStyleArrayOutput)
}

type LogfortianalyzercloudFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogfortianalyzercloudFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzercloudFilterFreeStyle)(nil)).Elem()
}

func (o LogfortianalyzercloudFilterFreeStyleOutput) ToLogfortianalyzercloudFilterFreeStyleOutput() LogfortianalyzercloudFilterFreeStyleOutput {
	return o
}

func (o LogfortianalyzercloudFilterFreeStyleOutput) ToLogfortianalyzercloudFilterFreeStyleOutputWithContext(ctx context.Context) LogfortianalyzercloudFilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogfortianalyzercloudFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzercloudFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogfortianalyzercloudFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzercloudFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogfortianalyzercloudFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzercloudFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogfortianalyzercloudFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogfortianalyzercloudFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogfortianalyzercloudFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogfortianalyzercloudFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzercloudFilterFreeStyle)(nil)).Elem()
}

func (o LogfortianalyzercloudFilterFreeStyleArrayOutput) ToLogfortianalyzercloudFilterFreeStyleArrayOutput() LogfortianalyzercloudFilterFreeStyleArrayOutput {
	return o
}

func (o LogfortianalyzercloudFilterFreeStyleArrayOutput) ToLogfortianalyzercloudFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortianalyzercloudFilterFreeStyleArrayOutput {
	return o
}

func (o LogfortianalyzercloudFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogfortianalyzercloudFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogfortianalyzercloudFilterFreeStyle {
		return vs[0].([]LogfortianalyzercloudFilterFreeStyle)[vs[1].(int)]
	}).(LogfortianalyzercloudFilterFreeStyleOutput)
}

type LogfortianalyzercloudOverridefilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogfortianalyzercloudOverridefilterFreeStyleInput is an input type that accepts LogfortianalyzercloudOverridefilterFreeStyleArgs and LogfortianalyzercloudOverridefilterFreeStyleOutput values.
// You can construct a concrete instance of `LogfortianalyzercloudOverridefilterFreeStyleInput` via:
//
//	LogfortianalyzercloudOverridefilterFreeStyleArgs{...}
type LogfortianalyzercloudOverridefilterFreeStyleInput interface {
	pulumi.Input

	ToLogfortianalyzercloudOverridefilterFreeStyleOutput() LogfortianalyzercloudOverridefilterFreeStyleOutput
	ToLogfortianalyzercloudOverridefilterFreeStyleOutputWithContext(context.Context) LogfortianalyzercloudOverridefilterFreeStyleOutput
}

type LogfortianalyzercloudOverridefilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogfortianalyzercloudOverridefilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzercloudOverridefilterFreeStyle)(nil)).Elem()
}

func (i LogfortianalyzercloudOverridefilterFreeStyleArgs) ToLogfortianalyzercloudOverridefilterFreeStyleOutput() LogfortianalyzercloudOverridefilterFreeStyleOutput {
	return i.ToLogfortianalyzercloudOverridefilterFreeStyleOutputWithContext(context.Background())
}

func (i LogfortianalyzercloudOverridefilterFreeStyleArgs) ToLogfortianalyzercloudOverridefilterFreeStyleOutputWithContext(ctx context.Context) LogfortianalyzercloudOverridefilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzercloudOverridefilterFreeStyleOutput)
}

// LogfortianalyzercloudOverridefilterFreeStyleArrayInput is an input type that accepts LogfortianalyzercloudOverridefilterFreeStyleArray and LogfortianalyzercloudOverridefilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogfortianalyzercloudOverridefilterFreeStyleArrayInput` via:
//
//	LogfortianalyzercloudOverridefilterFreeStyleArray{ LogfortianalyzercloudOverridefilterFreeStyleArgs{...} }
type LogfortianalyzercloudOverridefilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogfortianalyzercloudOverridefilterFreeStyleArrayOutput() LogfortianalyzercloudOverridefilterFreeStyleArrayOutput
	ToLogfortianalyzercloudOverridefilterFreeStyleArrayOutputWithContext(context.Context) LogfortianalyzercloudOverridefilterFreeStyleArrayOutput
}

type LogfortianalyzercloudOverridefilterFreeStyleArray []LogfortianalyzercloudOverridefilterFreeStyleInput

func (LogfortianalyzercloudOverridefilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzercloudOverridefilterFreeStyle)(nil)).Elem()
}

func (i LogfortianalyzercloudOverridefilterFreeStyleArray) ToLogfortianalyzercloudOverridefilterFreeStyleArrayOutput() LogfortianalyzercloudOverridefilterFreeStyleArrayOutput {
	return i.ToLogfortianalyzercloudOverridefilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogfortianalyzercloudOverridefilterFreeStyleArray) ToLogfortianalyzercloudOverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortianalyzercloudOverridefilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzercloudOverridefilterFreeStyleArrayOutput)
}

type LogfortianalyzercloudOverridefilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogfortianalyzercloudOverridefilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzercloudOverridefilterFreeStyle)(nil)).Elem()
}

func (o LogfortianalyzercloudOverridefilterFreeStyleOutput) ToLogfortianalyzercloudOverridefilterFreeStyleOutput() LogfortianalyzercloudOverridefilterFreeStyleOutput {
	return o
}

func (o LogfortianalyzercloudOverridefilterFreeStyleOutput) ToLogfortianalyzercloudOverridefilterFreeStyleOutputWithContext(ctx context.Context) LogfortianalyzercloudOverridefilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogfortianalyzercloudOverridefilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzercloudOverridefilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogfortianalyzercloudOverridefilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzercloudOverridefilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogfortianalyzercloudOverridefilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzercloudOverridefilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogfortianalyzercloudOverridefilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogfortianalyzercloudOverridefilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogfortianalyzercloudOverridefilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogfortianalyzercloudOverridefilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzercloudOverridefilterFreeStyle)(nil)).Elem()
}

func (o LogfortianalyzercloudOverridefilterFreeStyleArrayOutput) ToLogfortianalyzercloudOverridefilterFreeStyleArrayOutput() LogfortianalyzercloudOverridefilterFreeStyleArrayOutput {
	return o
}

func (o LogfortianalyzercloudOverridefilterFreeStyleArrayOutput) ToLogfortianalyzercloudOverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortianalyzercloudOverridefilterFreeStyleArrayOutput {
	return o
}

func (o LogfortianalyzercloudOverridefilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogfortianalyzercloudOverridefilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogfortianalyzercloudOverridefilterFreeStyle {
		return vs[0].([]LogfortianalyzercloudOverridefilterFreeStyle)[vs[1].(int)]
	}).(LogfortianalyzercloudOverridefilterFreeStyleOutput)
}

type LogfortianalyzercloudSettingSerial struct {
	// Serial Number.
	Name *string `pulumi:"name"`
}

// LogfortianalyzercloudSettingSerialInput is an input type that accepts LogfortianalyzercloudSettingSerialArgs and LogfortianalyzercloudSettingSerialOutput values.
// You can construct a concrete instance of `LogfortianalyzercloudSettingSerialInput` via:
//
//	LogfortianalyzercloudSettingSerialArgs{...}
type LogfortianalyzercloudSettingSerialInput interface {
	pulumi.Input

	ToLogfortianalyzercloudSettingSerialOutput() LogfortianalyzercloudSettingSerialOutput
	ToLogfortianalyzercloudSettingSerialOutputWithContext(context.Context) LogfortianalyzercloudSettingSerialOutput
}

type LogfortianalyzercloudSettingSerialArgs struct {
	// Serial Number.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LogfortianalyzercloudSettingSerialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzercloudSettingSerial)(nil)).Elem()
}

func (i LogfortianalyzercloudSettingSerialArgs) ToLogfortianalyzercloudSettingSerialOutput() LogfortianalyzercloudSettingSerialOutput {
	return i.ToLogfortianalyzercloudSettingSerialOutputWithContext(context.Background())
}

func (i LogfortianalyzercloudSettingSerialArgs) ToLogfortianalyzercloudSettingSerialOutputWithContext(ctx context.Context) LogfortianalyzercloudSettingSerialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzercloudSettingSerialOutput)
}

// LogfortianalyzercloudSettingSerialArrayInput is an input type that accepts LogfortianalyzercloudSettingSerialArray and LogfortianalyzercloudSettingSerialArrayOutput values.
// You can construct a concrete instance of `LogfortianalyzercloudSettingSerialArrayInput` via:
//
//	LogfortianalyzercloudSettingSerialArray{ LogfortianalyzercloudSettingSerialArgs{...} }
type LogfortianalyzercloudSettingSerialArrayInput interface {
	pulumi.Input

	ToLogfortianalyzercloudSettingSerialArrayOutput() LogfortianalyzercloudSettingSerialArrayOutput
	ToLogfortianalyzercloudSettingSerialArrayOutputWithContext(context.Context) LogfortianalyzercloudSettingSerialArrayOutput
}

type LogfortianalyzercloudSettingSerialArray []LogfortianalyzercloudSettingSerialInput

func (LogfortianalyzercloudSettingSerialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzercloudSettingSerial)(nil)).Elem()
}

func (i LogfortianalyzercloudSettingSerialArray) ToLogfortianalyzercloudSettingSerialArrayOutput() LogfortianalyzercloudSettingSerialArrayOutput {
	return i.ToLogfortianalyzercloudSettingSerialArrayOutputWithContext(context.Background())
}

func (i LogfortianalyzercloudSettingSerialArray) ToLogfortianalyzercloudSettingSerialArrayOutputWithContext(ctx context.Context) LogfortianalyzercloudSettingSerialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzercloudSettingSerialArrayOutput)
}

type LogfortianalyzercloudSettingSerialOutput struct{ *pulumi.OutputState }

func (LogfortianalyzercloudSettingSerialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzercloudSettingSerial)(nil)).Elem()
}

func (o LogfortianalyzercloudSettingSerialOutput) ToLogfortianalyzercloudSettingSerialOutput() LogfortianalyzercloudSettingSerialOutput {
	return o
}

func (o LogfortianalyzercloudSettingSerialOutput) ToLogfortianalyzercloudSettingSerialOutputWithContext(ctx context.Context) LogfortianalyzercloudSettingSerialOutput {
	return o
}

// Serial Number.
func (o LogfortianalyzercloudSettingSerialOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzercloudSettingSerial) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogfortianalyzercloudSettingSerialArrayOutput struct{ *pulumi.OutputState }

func (LogfortianalyzercloudSettingSerialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzercloudSettingSerial)(nil)).Elem()
}

func (o LogfortianalyzercloudSettingSerialArrayOutput) ToLogfortianalyzercloudSettingSerialArrayOutput() LogfortianalyzercloudSettingSerialArrayOutput {
	return o
}

func (o LogfortianalyzercloudSettingSerialArrayOutput) ToLogfortianalyzercloudSettingSerialArrayOutputWithContext(ctx context.Context) LogfortianalyzercloudSettingSerialArrayOutput {
	return o
}

func (o LogfortianalyzercloudSettingSerialArrayOutput) Index(i pulumi.IntInput) LogfortianalyzercloudSettingSerialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogfortianalyzercloudSettingSerial {
		return vs[0].([]LogfortianalyzercloudSettingSerial)[vs[1].(int)]
	}).(LogfortianalyzercloudSettingSerialOutput)
}

type LogfortiguardFilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogfortiguardFilterFreeStyleInput is an input type that accepts LogfortiguardFilterFreeStyleArgs and LogfortiguardFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogfortiguardFilterFreeStyleInput` via:
//
//	LogfortiguardFilterFreeStyleArgs{...}
type LogfortiguardFilterFreeStyleInput interface {
	pulumi.Input

	ToLogfortiguardFilterFreeStyleOutput() LogfortiguardFilterFreeStyleOutput
	ToLogfortiguardFilterFreeStyleOutputWithContext(context.Context) LogfortiguardFilterFreeStyleOutput
}

type LogfortiguardFilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogfortiguardFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortiguardFilterFreeStyle)(nil)).Elem()
}

func (i LogfortiguardFilterFreeStyleArgs) ToLogfortiguardFilterFreeStyleOutput() LogfortiguardFilterFreeStyleOutput {
	return i.ToLogfortiguardFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogfortiguardFilterFreeStyleArgs) ToLogfortiguardFilterFreeStyleOutputWithContext(ctx context.Context) LogfortiguardFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortiguardFilterFreeStyleOutput)
}

// LogfortiguardFilterFreeStyleArrayInput is an input type that accepts LogfortiguardFilterFreeStyleArray and LogfortiguardFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogfortiguardFilterFreeStyleArrayInput` via:
//
//	LogfortiguardFilterFreeStyleArray{ LogfortiguardFilterFreeStyleArgs{...} }
type LogfortiguardFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogfortiguardFilterFreeStyleArrayOutput() LogfortiguardFilterFreeStyleArrayOutput
	ToLogfortiguardFilterFreeStyleArrayOutputWithContext(context.Context) LogfortiguardFilterFreeStyleArrayOutput
}

type LogfortiguardFilterFreeStyleArray []LogfortiguardFilterFreeStyleInput

func (LogfortiguardFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortiguardFilterFreeStyle)(nil)).Elem()
}

func (i LogfortiguardFilterFreeStyleArray) ToLogfortiguardFilterFreeStyleArrayOutput() LogfortiguardFilterFreeStyleArrayOutput {
	return i.ToLogfortiguardFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogfortiguardFilterFreeStyleArray) ToLogfortiguardFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortiguardFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortiguardFilterFreeStyleArrayOutput)
}

type LogfortiguardFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogfortiguardFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortiguardFilterFreeStyle)(nil)).Elem()
}

func (o LogfortiguardFilterFreeStyleOutput) ToLogfortiguardFilterFreeStyleOutput() LogfortiguardFilterFreeStyleOutput {
	return o
}

func (o LogfortiguardFilterFreeStyleOutput) ToLogfortiguardFilterFreeStyleOutputWithContext(ctx context.Context) LogfortiguardFilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogfortiguardFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortiguardFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogfortiguardFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortiguardFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogfortiguardFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortiguardFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogfortiguardFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogfortiguardFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogfortiguardFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogfortiguardFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortiguardFilterFreeStyle)(nil)).Elem()
}

func (o LogfortiguardFilterFreeStyleArrayOutput) ToLogfortiguardFilterFreeStyleArrayOutput() LogfortiguardFilterFreeStyleArrayOutput {
	return o
}

func (o LogfortiguardFilterFreeStyleArrayOutput) ToLogfortiguardFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortiguardFilterFreeStyleArrayOutput {
	return o
}

func (o LogfortiguardFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogfortiguardFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogfortiguardFilterFreeStyle {
		return vs[0].([]LogfortiguardFilterFreeStyle)[vs[1].(int)]
	}).(LogfortiguardFilterFreeStyleOutput)
}

type LogfortiguardOverridefilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogfortiguardOverridefilterFreeStyleInput is an input type that accepts LogfortiguardOverridefilterFreeStyleArgs and LogfortiguardOverridefilterFreeStyleOutput values.
// You can construct a concrete instance of `LogfortiguardOverridefilterFreeStyleInput` via:
//
//	LogfortiguardOverridefilterFreeStyleArgs{...}
type LogfortiguardOverridefilterFreeStyleInput interface {
	pulumi.Input

	ToLogfortiguardOverridefilterFreeStyleOutput() LogfortiguardOverridefilterFreeStyleOutput
	ToLogfortiguardOverridefilterFreeStyleOutputWithContext(context.Context) LogfortiguardOverridefilterFreeStyleOutput
}

type LogfortiguardOverridefilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogfortiguardOverridefilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortiguardOverridefilterFreeStyle)(nil)).Elem()
}

func (i LogfortiguardOverridefilterFreeStyleArgs) ToLogfortiguardOverridefilterFreeStyleOutput() LogfortiguardOverridefilterFreeStyleOutput {
	return i.ToLogfortiguardOverridefilterFreeStyleOutputWithContext(context.Background())
}

func (i LogfortiguardOverridefilterFreeStyleArgs) ToLogfortiguardOverridefilterFreeStyleOutputWithContext(ctx context.Context) LogfortiguardOverridefilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortiguardOverridefilterFreeStyleOutput)
}

// LogfortiguardOverridefilterFreeStyleArrayInput is an input type that accepts LogfortiguardOverridefilterFreeStyleArray and LogfortiguardOverridefilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogfortiguardOverridefilterFreeStyleArrayInput` via:
//
//	LogfortiguardOverridefilterFreeStyleArray{ LogfortiguardOverridefilterFreeStyleArgs{...} }
type LogfortiguardOverridefilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogfortiguardOverridefilterFreeStyleArrayOutput() LogfortiguardOverridefilterFreeStyleArrayOutput
	ToLogfortiguardOverridefilterFreeStyleArrayOutputWithContext(context.Context) LogfortiguardOverridefilterFreeStyleArrayOutput
}

type LogfortiguardOverridefilterFreeStyleArray []LogfortiguardOverridefilterFreeStyleInput

func (LogfortiguardOverridefilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortiguardOverridefilterFreeStyle)(nil)).Elem()
}

func (i LogfortiguardOverridefilterFreeStyleArray) ToLogfortiguardOverridefilterFreeStyleArrayOutput() LogfortiguardOverridefilterFreeStyleArrayOutput {
	return i.ToLogfortiguardOverridefilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogfortiguardOverridefilterFreeStyleArray) ToLogfortiguardOverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortiguardOverridefilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortiguardOverridefilterFreeStyleArrayOutput)
}

type LogfortiguardOverridefilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogfortiguardOverridefilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortiguardOverridefilterFreeStyle)(nil)).Elem()
}

func (o LogfortiguardOverridefilterFreeStyleOutput) ToLogfortiguardOverridefilterFreeStyleOutput() LogfortiguardOverridefilterFreeStyleOutput {
	return o
}

func (o LogfortiguardOverridefilterFreeStyleOutput) ToLogfortiguardOverridefilterFreeStyleOutputWithContext(ctx context.Context) LogfortiguardOverridefilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogfortiguardOverridefilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortiguardOverridefilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogfortiguardOverridefilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortiguardOverridefilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogfortiguardOverridefilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortiguardOverridefilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogfortiguardOverridefilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogfortiguardOverridefilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogfortiguardOverridefilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogfortiguardOverridefilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortiguardOverridefilterFreeStyle)(nil)).Elem()
}

func (o LogfortiguardOverridefilterFreeStyleArrayOutput) ToLogfortiguardOverridefilterFreeStyleArrayOutput() LogfortiguardOverridefilterFreeStyleArrayOutput {
	return o
}

func (o LogfortiguardOverridefilterFreeStyleArrayOutput) ToLogfortiguardOverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortiguardOverridefilterFreeStyleArrayOutput {
	return o
}

func (o LogfortiguardOverridefilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogfortiguardOverridefilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogfortiguardOverridefilterFreeStyle {
		return vs[0].([]LogfortiguardOverridefilterFreeStyle)[vs[1].(int)]
	}).(LogfortiguardOverridefilterFreeStyleOutput)
}

type LogmemoryFilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogmemoryFilterFreeStyleInput is an input type that accepts LogmemoryFilterFreeStyleArgs and LogmemoryFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogmemoryFilterFreeStyleInput` via:
//
//	LogmemoryFilterFreeStyleArgs{...}
type LogmemoryFilterFreeStyleInput interface {
	pulumi.Input

	ToLogmemoryFilterFreeStyleOutput() LogmemoryFilterFreeStyleOutput
	ToLogmemoryFilterFreeStyleOutputWithContext(context.Context) LogmemoryFilterFreeStyleOutput
}

type LogmemoryFilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogmemoryFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogmemoryFilterFreeStyle)(nil)).Elem()
}

func (i LogmemoryFilterFreeStyleArgs) ToLogmemoryFilterFreeStyleOutput() LogmemoryFilterFreeStyleOutput {
	return i.ToLogmemoryFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogmemoryFilterFreeStyleArgs) ToLogmemoryFilterFreeStyleOutputWithContext(ctx context.Context) LogmemoryFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogmemoryFilterFreeStyleOutput)
}

// LogmemoryFilterFreeStyleArrayInput is an input type that accepts LogmemoryFilterFreeStyleArray and LogmemoryFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogmemoryFilterFreeStyleArrayInput` via:
//
//	LogmemoryFilterFreeStyleArray{ LogmemoryFilterFreeStyleArgs{...} }
type LogmemoryFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogmemoryFilterFreeStyleArrayOutput() LogmemoryFilterFreeStyleArrayOutput
	ToLogmemoryFilterFreeStyleArrayOutputWithContext(context.Context) LogmemoryFilterFreeStyleArrayOutput
}

type LogmemoryFilterFreeStyleArray []LogmemoryFilterFreeStyleInput

func (LogmemoryFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogmemoryFilterFreeStyle)(nil)).Elem()
}

func (i LogmemoryFilterFreeStyleArray) ToLogmemoryFilterFreeStyleArrayOutput() LogmemoryFilterFreeStyleArrayOutput {
	return i.ToLogmemoryFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogmemoryFilterFreeStyleArray) ToLogmemoryFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogmemoryFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogmemoryFilterFreeStyleArrayOutput)
}

type LogmemoryFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogmemoryFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogmemoryFilterFreeStyle)(nil)).Elem()
}

func (o LogmemoryFilterFreeStyleOutput) ToLogmemoryFilterFreeStyleOutput() LogmemoryFilterFreeStyleOutput {
	return o
}

func (o LogmemoryFilterFreeStyleOutput) ToLogmemoryFilterFreeStyleOutputWithContext(ctx context.Context) LogmemoryFilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogmemoryFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogmemoryFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogmemoryFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogmemoryFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogmemoryFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogmemoryFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogmemoryFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogmemoryFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogmemoryFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogmemoryFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogmemoryFilterFreeStyle)(nil)).Elem()
}

func (o LogmemoryFilterFreeStyleArrayOutput) ToLogmemoryFilterFreeStyleArrayOutput() LogmemoryFilterFreeStyleArrayOutput {
	return o
}

func (o LogmemoryFilterFreeStyleArrayOutput) ToLogmemoryFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogmemoryFilterFreeStyleArrayOutput {
	return o
}

func (o LogmemoryFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogmemoryFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogmemoryFilterFreeStyle {
		return vs[0].([]LogmemoryFilterFreeStyle)[vs[1].(int)]
	}).(LogmemoryFilterFreeStyleOutput)
}

type LognulldeviceFilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LognulldeviceFilterFreeStyleInput is an input type that accepts LognulldeviceFilterFreeStyleArgs and LognulldeviceFilterFreeStyleOutput values.
// You can construct a concrete instance of `LognulldeviceFilterFreeStyleInput` via:
//
//	LognulldeviceFilterFreeStyleArgs{...}
type LognulldeviceFilterFreeStyleInput interface {
	pulumi.Input

	ToLognulldeviceFilterFreeStyleOutput() LognulldeviceFilterFreeStyleOutput
	ToLognulldeviceFilterFreeStyleOutputWithContext(context.Context) LognulldeviceFilterFreeStyleOutput
}

type LognulldeviceFilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LognulldeviceFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LognulldeviceFilterFreeStyle)(nil)).Elem()
}

func (i LognulldeviceFilterFreeStyleArgs) ToLognulldeviceFilterFreeStyleOutput() LognulldeviceFilterFreeStyleOutput {
	return i.ToLognulldeviceFilterFreeStyleOutputWithContext(context.Background())
}

func (i LognulldeviceFilterFreeStyleArgs) ToLognulldeviceFilterFreeStyleOutputWithContext(ctx context.Context) LognulldeviceFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LognulldeviceFilterFreeStyleOutput)
}

// LognulldeviceFilterFreeStyleArrayInput is an input type that accepts LognulldeviceFilterFreeStyleArray and LognulldeviceFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LognulldeviceFilterFreeStyleArrayInput` via:
//
//	LognulldeviceFilterFreeStyleArray{ LognulldeviceFilterFreeStyleArgs{...} }
type LognulldeviceFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLognulldeviceFilterFreeStyleArrayOutput() LognulldeviceFilterFreeStyleArrayOutput
	ToLognulldeviceFilterFreeStyleArrayOutputWithContext(context.Context) LognulldeviceFilterFreeStyleArrayOutput
}

type LognulldeviceFilterFreeStyleArray []LognulldeviceFilterFreeStyleInput

func (LognulldeviceFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LognulldeviceFilterFreeStyle)(nil)).Elem()
}

func (i LognulldeviceFilterFreeStyleArray) ToLognulldeviceFilterFreeStyleArrayOutput() LognulldeviceFilterFreeStyleArrayOutput {
	return i.ToLognulldeviceFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LognulldeviceFilterFreeStyleArray) ToLognulldeviceFilterFreeStyleArrayOutputWithContext(ctx context.Context) LognulldeviceFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LognulldeviceFilterFreeStyleArrayOutput)
}

type LognulldeviceFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LognulldeviceFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LognulldeviceFilterFreeStyle)(nil)).Elem()
}

func (o LognulldeviceFilterFreeStyleOutput) ToLognulldeviceFilterFreeStyleOutput() LognulldeviceFilterFreeStyleOutput {
	return o
}

func (o LognulldeviceFilterFreeStyleOutput) ToLognulldeviceFilterFreeStyleOutputWithContext(ctx context.Context) LognulldeviceFilterFreeStyleOutput {
	return o
}

// Log category.
func (o LognulldeviceFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LognulldeviceFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LognulldeviceFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LognulldeviceFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LognulldeviceFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LognulldeviceFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LognulldeviceFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LognulldeviceFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LognulldeviceFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LognulldeviceFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LognulldeviceFilterFreeStyle)(nil)).Elem()
}

func (o LognulldeviceFilterFreeStyleArrayOutput) ToLognulldeviceFilterFreeStyleArrayOutput() LognulldeviceFilterFreeStyleArrayOutput {
	return o
}

func (o LognulldeviceFilterFreeStyleArrayOutput) ToLognulldeviceFilterFreeStyleArrayOutputWithContext(ctx context.Context) LognulldeviceFilterFreeStyleArrayOutput {
	return o
}

func (o LognulldeviceFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LognulldeviceFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LognulldeviceFilterFreeStyle {
		return vs[0].([]LognulldeviceFilterFreeStyle)[vs[1].(int)]
	}).(LognulldeviceFilterFreeStyleOutput)
}

type Logsyslogd2FilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// Logsyslogd2FilterFreeStyleInput is an input type that accepts Logsyslogd2FilterFreeStyleArgs and Logsyslogd2FilterFreeStyleOutput values.
// You can construct a concrete instance of `Logsyslogd2FilterFreeStyleInput` via:
//
//	Logsyslogd2FilterFreeStyleArgs{...}
type Logsyslogd2FilterFreeStyleInput interface {
	pulumi.Input

	ToLogsyslogd2FilterFreeStyleOutput() Logsyslogd2FilterFreeStyleOutput
	ToLogsyslogd2FilterFreeStyleOutputWithContext(context.Context) Logsyslogd2FilterFreeStyleOutput
}

type Logsyslogd2FilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Logsyslogd2FilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd2FilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd2FilterFreeStyleArgs) ToLogsyslogd2FilterFreeStyleOutput() Logsyslogd2FilterFreeStyleOutput {
	return i.ToLogsyslogd2FilterFreeStyleOutputWithContext(context.Background())
}

func (i Logsyslogd2FilterFreeStyleArgs) ToLogsyslogd2FilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd2FilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd2FilterFreeStyleOutput)
}

// Logsyslogd2FilterFreeStyleArrayInput is an input type that accepts Logsyslogd2FilterFreeStyleArray and Logsyslogd2FilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `Logsyslogd2FilterFreeStyleArrayInput` via:
//
//	Logsyslogd2FilterFreeStyleArray{ Logsyslogd2FilterFreeStyleArgs{...} }
type Logsyslogd2FilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogsyslogd2FilterFreeStyleArrayOutput() Logsyslogd2FilterFreeStyleArrayOutput
	ToLogsyslogd2FilterFreeStyleArrayOutputWithContext(context.Context) Logsyslogd2FilterFreeStyleArrayOutput
}

type Logsyslogd2FilterFreeStyleArray []Logsyslogd2FilterFreeStyleInput

func (Logsyslogd2FilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd2FilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd2FilterFreeStyleArray) ToLogsyslogd2FilterFreeStyleArrayOutput() Logsyslogd2FilterFreeStyleArrayOutput {
	return i.ToLogsyslogd2FilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i Logsyslogd2FilterFreeStyleArray) ToLogsyslogd2FilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd2FilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd2FilterFreeStyleArrayOutput)
}

type Logsyslogd2FilterFreeStyleOutput struct{ *pulumi.OutputState }

func (Logsyslogd2FilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd2FilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd2FilterFreeStyleOutput) ToLogsyslogd2FilterFreeStyleOutput() Logsyslogd2FilterFreeStyleOutput {
	return o
}

func (o Logsyslogd2FilterFreeStyleOutput) ToLogsyslogd2FilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd2FilterFreeStyleOutput {
	return o
}

// Log category.
func (o Logsyslogd2FilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd2FilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o Logsyslogd2FilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd2FilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o Logsyslogd2FilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd2FilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd2FilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd2FilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Logsyslogd2FilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd2FilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd2FilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd2FilterFreeStyleArrayOutput) ToLogsyslogd2FilterFreeStyleArrayOutput() Logsyslogd2FilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd2FilterFreeStyleArrayOutput) ToLogsyslogd2FilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd2FilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd2FilterFreeStyleArrayOutput) Index(i pulumi.IntInput) Logsyslogd2FilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd2FilterFreeStyle {
		return vs[0].([]Logsyslogd2FilterFreeStyle)[vs[1].(int)]
	}).(Logsyslogd2FilterFreeStyleOutput)
}

type Logsyslogd2OverridefilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// Logsyslogd2OverridefilterFreeStyleInput is an input type that accepts Logsyslogd2OverridefilterFreeStyleArgs and Logsyslogd2OverridefilterFreeStyleOutput values.
// You can construct a concrete instance of `Logsyslogd2OverridefilterFreeStyleInput` via:
//
//	Logsyslogd2OverridefilterFreeStyleArgs{...}
type Logsyslogd2OverridefilterFreeStyleInput interface {
	pulumi.Input

	ToLogsyslogd2OverridefilterFreeStyleOutput() Logsyslogd2OverridefilterFreeStyleOutput
	ToLogsyslogd2OverridefilterFreeStyleOutputWithContext(context.Context) Logsyslogd2OverridefilterFreeStyleOutput
}

type Logsyslogd2OverridefilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Logsyslogd2OverridefilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd2OverridefilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd2OverridefilterFreeStyleArgs) ToLogsyslogd2OverridefilterFreeStyleOutput() Logsyslogd2OverridefilterFreeStyleOutput {
	return i.ToLogsyslogd2OverridefilterFreeStyleOutputWithContext(context.Background())
}

func (i Logsyslogd2OverridefilterFreeStyleArgs) ToLogsyslogd2OverridefilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd2OverridefilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd2OverridefilterFreeStyleOutput)
}

// Logsyslogd2OverridefilterFreeStyleArrayInput is an input type that accepts Logsyslogd2OverridefilterFreeStyleArray and Logsyslogd2OverridefilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `Logsyslogd2OverridefilterFreeStyleArrayInput` via:
//
//	Logsyslogd2OverridefilterFreeStyleArray{ Logsyslogd2OverridefilterFreeStyleArgs{...} }
type Logsyslogd2OverridefilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogsyslogd2OverridefilterFreeStyleArrayOutput() Logsyslogd2OverridefilterFreeStyleArrayOutput
	ToLogsyslogd2OverridefilterFreeStyleArrayOutputWithContext(context.Context) Logsyslogd2OverridefilterFreeStyleArrayOutput
}

type Logsyslogd2OverridefilterFreeStyleArray []Logsyslogd2OverridefilterFreeStyleInput

func (Logsyslogd2OverridefilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd2OverridefilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd2OverridefilterFreeStyleArray) ToLogsyslogd2OverridefilterFreeStyleArrayOutput() Logsyslogd2OverridefilterFreeStyleArrayOutput {
	return i.ToLogsyslogd2OverridefilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i Logsyslogd2OverridefilterFreeStyleArray) ToLogsyslogd2OverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd2OverridefilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd2OverridefilterFreeStyleArrayOutput)
}

type Logsyslogd2OverridefilterFreeStyleOutput struct{ *pulumi.OutputState }

func (Logsyslogd2OverridefilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd2OverridefilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd2OverridefilterFreeStyleOutput) ToLogsyslogd2OverridefilterFreeStyleOutput() Logsyslogd2OverridefilterFreeStyleOutput {
	return o
}

func (o Logsyslogd2OverridefilterFreeStyleOutput) ToLogsyslogd2OverridefilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd2OverridefilterFreeStyleOutput {
	return o
}

// Log category.
func (o Logsyslogd2OverridefilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd2OverridefilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o Logsyslogd2OverridefilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd2OverridefilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o Logsyslogd2OverridefilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd2OverridefilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd2OverridefilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd2OverridefilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Logsyslogd2OverridefilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd2OverridefilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd2OverridefilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd2OverridefilterFreeStyleArrayOutput) ToLogsyslogd2OverridefilterFreeStyleArrayOutput() Logsyslogd2OverridefilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd2OverridefilterFreeStyleArrayOutput) ToLogsyslogd2OverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd2OverridefilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd2OverridefilterFreeStyleArrayOutput) Index(i pulumi.IntInput) Logsyslogd2OverridefilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd2OverridefilterFreeStyle {
		return vs[0].([]Logsyslogd2OverridefilterFreeStyle)[vs[1].(int)]
	}).(Logsyslogd2OverridefilterFreeStyleOutput)
}

type Logsyslogd2OverridesettingCustomFieldName struct {
	// Field custom name.
	Custom *string `pulumi:"custom"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Field name.
	Name *string `pulumi:"name"`
}

// Logsyslogd2OverridesettingCustomFieldNameInput is an input type that accepts Logsyslogd2OverridesettingCustomFieldNameArgs and Logsyslogd2OverridesettingCustomFieldNameOutput values.
// You can construct a concrete instance of `Logsyslogd2OverridesettingCustomFieldNameInput` via:
//
//	Logsyslogd2OverridesettingCustomFieldNameArgs{...}
type Logsyslogd2OverridesettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogsyslogd2OverridesettingCustomFieldNameOutput() Logsyslogd2OverridesettingCustomFieldNameOutput
	ToLogsyslogd2OverridesettingCustomFieldNameOutputWithContext(context.Context) Logsyslogd2OverridesettingCustomFieldNameOutput
}

type Logsyslogd2OverridesettingCustomFieldNameArgs struct {
	// Field custom name.
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Field name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Logsyslogd2OverridesettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd2OverridesettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd2OverridesettingCustomFieldNameArgs) ToLogsyslogd2OverridesettingCustomFieldNameOutput() Logsyslogd2OverridesettingCustomFieldNameOutput {
	return i.ToLogsyslogd2OverridesettingCustomFieldNameOutputWithContext(context.Background())
}

func (i Logsyslogd2OverridesettingCustomFieldNameArgs) ToLogsyslogd2OverridesettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd2OverridesettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd2OverridesettingCustomFieldNameOutput)
}

// Logsyslogd2OverridesettingCustomFieldNameArrayInput is an input type that accepts Logsyslogd2OverridesettingCustomFieldNameArray and Logsyslogd2OverridesettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `Logsyslogd2OverridesettingCustomFieldNameArrayInput` via:
//
//	Logsyslogd2OverridesettingCustomFieldNameArray{ Logsyslogd2OverridesettingCustomFieldNameArgs{...} }
type Logsyslogd2OverridesettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogsyslogd2OverridesettingCustomFieldNameArrayOutput() Logsyslogd2OverridesettingCustomFieldNameArrayOutput
	ToLogsyslogd2OverridesettingCustomFieldNameArrayOutputWithContext(context.Context) Logsyslogd2OverridesettingCustomFieldNameArrayOutput
}

type Logsyslogd2OverridesettingCustomFieldNameArray []Logsyslogd2OverridesettingCustomFieldNameInput

func (Logsyslogd2OverridesettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd2OverridesettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd2OverridesettingCustomFieldNameArray) ToLogsyslogd2OverridesettingCustomFieldNameArrayOutput() Logsyslogd2OverridesettingCustomFieldNameArrayOutput {
	return i.ToLogsyslogd2OverridesettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i Logsyslogd2OverridesettingCustomFieldNameArray) ToLogsyslogd2OverridesettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd2OverridesettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd2OverridesettingCustomFieldNameArrayOutput)
}

type Logsyslogd2OverridesettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (Logsyslogd2OverridesettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd2OverridesettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd2OverridesettingCustomFieldNameOutput) ToLogsyslogd2OverridesettingCustomFieldNameOutput() Logsyslogd2OverridesettingCustomFieldNameOutput {
	return o
}

func (o Logsyslogd2OverridesettingCustomFieldNameOutput) ToLogsyslogd2OverridesettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd2OverridesettingCustomFieldNameOutput {
	return o
}

// Field custom name.
func (o Logsyslogd2OverridesettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd2OverridesettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd2OverridesettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd2OverridesettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Field name.
func (o Logsyslogd2OverridesettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd2OverridesettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Logsyslogd2OverridesettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd2OverridesettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd2OverridesettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd2OverridesettingCustomFieldNameArrayOutput) ToLogsyslogd2OverridesettingCustomFieldNameArrayOutput() Logsyslogd2OverridesettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd2OverridesettingCustomFieldNameArrayOutput) ToLogsyslogd2OverridesettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd2OverridesettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd2OverridesettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) Logsyslogd2OverridesettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd2OverridesettingCustomFieldName {
		return vs[0].([]Logsyslogd2OverridesettingCustomFieldName)[vs[1].(int)]
	}).(Logsyslogd2OverridesettingCustomFieldNameOutput)
}

type Logsyslogd2SettingCustomFieldName struct {
	// Field custom name.
	Custom *string `pulumi:"custom"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Field name.
	Name *string `pulumi:"name"`
}

// Logsyslogd2SettingCustomFieldNameInput is an input type that accepts Logsyslogd2SettingCustomFieldNameArgs and Logsyslogd2SettingCustomFieldNameOutput values.
// You can construct a concrete instance of `Logsyslogd2SettingCustomFieldNameInput` via:
//
//	Logsyslogd2SettingCustomFieldNameArgs{...}
type Logsyslogd2SettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogsyslogd2SettingCustomFieldNameOutput() Logsyslogd2SettingCustomFieldNameOutput
	ToLogsyslogd2SettingCustomFieldNameOutputWithContext(context.Context) Logsyslogd2SettingCustomFieldNameOutput
}

type Logsyslogd2SettingCustomFieldNameArgs struct {
	// Field custom name.
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Field name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Logsyslogd2SettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd2SettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd2SettingCustomFieldNameArgs) ToLogsyslogd2SettingCustomFieldNameOutput() Logsyslogd2SettingCustomFieldNameOutput {
	return i.ToLogsyslogd2SettingCustomFieldNameOutputWithContext(context.Background())
}

func (i Logsyslogd2SettingCustomFieldNameArgs) ToLogsyslogd2SettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd2SettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd2SettingCustomFieldNameOutput)
}

// Logsyslogd2SettingCustomFieldNameArrayInput is an input type that accepts Logsyslogd2SettingCustomFieldNameArray and Logsyslogd2SettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `Logsyslogd2SettingCustomFieldNameArrayInput` via:
//
//	Logsyslogd2SettingCustomFieldNameArray{ Logsyslogd2SettingCustomFieldNameArgs{...} }
type Logsyslogd2SettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogsyslogd2SettingCustomFieldNameArrayOutput() Logsyslogd2SettingCustomFieldNameArrayOutput
	ToLogsyslogd2SettingCustomFieldNameArrayOutputWithContext(context.Context) Logsyslogd2SettingCustomFieldNameArrayOutput
}

type Logsyslogd2SettingCustomFieldNameArray []Logsyslogd2SettingCustomFieldNameInput

func (Logsyslogd2SettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd2SettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd2SettingCustomFieldNameArray) ToLogsyslogd2SettingCustomFieldNameArrayOutput() Logsyslogd2SettingCustomFieldNameArrayOutput {
	return i.ToLogsyslogd2SettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i Logsyslogd2SettingCustomFieldNameArray) ToLogsyslogd2SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd2SettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd2SettingCustomFieldNameArrayOutput)
}

type Logsyslogd2SettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (Logsyslogd2SettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd2SettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd2SettingCustomFieldNameOutput) ToLogsyslogd2SettingCustomFieldNameOutput() Logsyslogd2SettingCustomFieldNameOutput {
	return o
}

func (o Logsyslogd2SettingCustomFieldNameOutput) ToLogsyslogd2SettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd2SettingCustomFieldNameOutput {
	return o
}

// Field custom name.
func (o Logsyslogd2SettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd2SettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd2SettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd2SettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Field name.
func (o Logsyslogd2SettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd2SettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Logsyslogd2SettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd2SettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd2SettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd2SettingCustomFieldNameArrayOutput) ToLogsyslogd2SettingCustomFieldNameArrayOutput() Logsyslogd2SettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd2SettingCustomFieldNameArrayOutput) ToLogsyslogd2SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd2SettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd2SettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) Logsyslogd2SettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd2SettingCustomFieldName {
		return vs[0].([]Logsyslogd2SettingCustomFieldName)[vs[1].(int)]
	}).(Logsyslogd2SettingCustomFieldNameOutput)
}

type Logsyslogd3FilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// Logsyslogd3FilterFreeStyleInput is an input type that accepts Logsyslogd3FilterFreeStyleArgs and Logsyslogd3FilterFreeStyleOutput values.
// You can construct a concrete instance of `Logsyslogd3FilterFreeStyleInput` via:
//
//	Logsyslogd3FilterFreeStyleArgs{...}
type Logsyslogd3FilterFreeStyleInput interface {
	pulumi.Input

	ToLogsyslogd3FilterFreeStyleOutput() Logsyslogd3FilterFreeStyleOutput
	ToLogsyslogd3FilterFreeStyleOutputWithContext(context.Context) Logsyslogd3FilterFreeStyleOutput
}

type Logsyslogd3FilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Logsyslogd3FilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd3FilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd3FilterFreeStyleArgs) ToLogsyslogd3FilterFreeStyleOutput() Logsyslogd3FilterFreeStyleOutput {
	return i.ToLogsyslogd3FilterFreeStyleOutputWithContext(context.Background())
}

func (i Logsyslogd3FilterFreeStyleArgs) ToLogsyslogd3FilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd3FilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd3FilterFreeStyleOutput)
}

// Logsyslogd3FilterFreeStyleArrayInput is an input type that accepts Logsyslogd3FilterFreeStyleArray and Logsyslogd3FilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `Logsyslogd3FilterFreeStyleArrayInput` via:
//
//	Logsyslogd3FilterFreeStyleArray{ Logsyslogd3FilterFreeStyleArgs{...} }
type Logsyslogd3FilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogsyslogd3FilterFreeStyleArrayOutput() Logsyslogd3FilterFreeStyleArrayOutput
	ToLogsyslogd3FilterFreeStyleArrayOutputWithContext(context.Context) Logsyslogd3FilterFreeStyleArrayOutput
}

type Logsyslogd3FilterFreeStyleArray []Logsyslogd3FilterFreeStyleInput

func (Logsyslogd3FilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd3FilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd3FilterFreeStyleArray) ToLogsyslogd3FilterFreeStyleArrayOutput() Logsyslogd3FilterFreeStyleArrayOutput {
	return i.ToLogsyslogd3FilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i Logsyslogd3FilterFreeStyleArray) ToLogsyslogd3FilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd3FilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd3FilterFreeStyleArrayOutput)
}

type Logsyslogd3FilterFreeStyleOutput struct{ *pulumi.OutputState }

func (Logsyslogd3FilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd3FilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd3FilterFreeStyleOutput) ToLogsyslogd3FilterFreeStyleOutput() Logsyslogd3FilterFreeStyleOutput {
	return o
}

func (o Logsyslogd3FilterFreeStyleOutput) ToLogsyslogd3FilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd3FilterFreeStyleOutput {
	return o
}

// Log category.
func (o Logsyslogd3FilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd3FilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o Logsyslogd3FilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd3FilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o Logsyslogd3FilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd3FilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd3FilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd3FilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Logsyslogd3FilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd3FilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd3FilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd3FilterFreeStyleArrayOutput) ToLogsyslogd3FilterFreeStyleArrayOutput() Logsyslogd3FilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd3FilterFreeStyleArrayOutput) ToLogsyslogd3FilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd3FilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd3FilterFreeStyleArrayOutput) Index(i pulumi.IntInput) Logsyslogd3FilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd3FilterFreeStyle {
		return vs[0].([]Logsyslogd3FilterFreeStyle)[vs[1].(int)]
	}).(Logsyslogd3FilterFreeStyleOutput)
}

type Logsyslogd3OverridefilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// Logsyslogd3OverridefilterFreeStyleInput is an input type that accepts Logsyslogd3OverridefilterFreeStyleArgs and Logsyslogd3OverridefilterFreeStyleOutput values.
// You can construct a concrete instance of `Logsyslogd3OverridefilterFreeStyleInput` via:
//
//	Logsyslogd3OverridefilterFreeStyleArgs{...}
type Logsyslogd3OverridefilterFreeStyleInput interface {
	pulumi.Input

	ToLogsyslogd3OverridefilterFreeStyleOutput() Logsyslogd3OverridefilterFreeStyleOutput
	ToLogsyslogd3OverridefilterFreeStyleOutputWithContext(context.Context) Logsyslogd3OverridefilterFreeStyleOutput
}

type Logsyslogd3OverridefilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Logsyslogd3OverridefilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd3OverridefilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd3OverridefilterFreeStyleArgs) ToLogsyslogd3OverridefilterFreeStyleOutput() Logsyslogd3OverridefilterFreeStyleOutput {
	return i.ToLogsyslogd3OverridefilterFreeStyleOutputWithContext(context.Background())
}

func (i Logsyslogd3OverridefilterFreeStyleArgs) ToLogsyslogd3OverridefilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd3OverridefilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd3OverridefilterFreeStyleOutput)
}

// Logsyslogd3OverridefilterFreeStyleArrayInput is an input type that accepts Logsyslogd3OverridefilterFreeStyleArray and Logsyslogd3OverridefilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `Logsyslogd3OverridefilterFreeStyleArrayInput` via:
//
//	Logsyslogd3OverridefilterFreeStyleArray{ Logsyslogd3OverridefilterFreeStyleArgs{...} }
type Logsyslogd3OverridefilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogsyslogd3OverridefilterFreeStyleArrayOutput() Logsyslogd3OverridefilterFreeStyleArrayOutput
	ToLogsyslogd3OverridefilterFreeStyleArrayOutputWithContext(context.Context) Logsyslogd3OverridefilterFreeStyleArrayOutput
}

type Logsyslogd3OverridefilterFreeStyleArray []Logsyslogd3OverridefilterFreeStyleInput

func (Logsyslogd3OverridefilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd3OverridefilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd3OverridefilterFreeStyleArray) ToLogsyslogd3OverridefilterFreeStyleArrayOutput() Logsyslogd3OverridefilterFreeStyleArrayOutput {
	return i.ToLogsyslogd3OverridefilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i Logsyslogd3OverridefilterFreeStyleArray) ToLogsyslogd3OverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd3OverridefilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd3OverridefilterFreeStyleArrayOutput)
}

type Logsyslogd3OverridefilterFreeStyleOutput struct{ *pulumi.OutputState }

func (Logsyslogd3OverridefilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd3OverridefilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd3OverridefilterFreeStyleOutput) ToLogsyslogd3OverridefilterFreeStyleOutput() Logsyslogd3OverridefilterFreeStyleOutput {
	return o
}

func (o Logsyslogd3OverridefilterFreeStyleOutput) ToLogsyslogd3OverridefilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd3OverridefilterFreeStyleOutput {
	return o
}

// Log category.
func (o Logsyslogd3OverridefilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd3OverridefilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o Logsyslogd3OverridefilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd3OverridefilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o Logsyslogd3OverridefilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd3OverridefilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd3OverridefilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd3OverridefilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Logsyslogd3OverridefilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd3OverridefilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd3OverridefilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd3OverridefilterFreeStyleArrayOutput) ToLogsyslogd3OverridefilterFreeStyleArrayOutput() Logsyslogd3OverridefilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd3OverridefilterFreeStyleArrayOutput) ToLogsyslogd3OverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd3OverridefilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd3OverridefilterFreeStyleArrayOutput) Index(i pulumi.IntInput) Logsyslogd3OverridefilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd3OverridefilterFreeStyle {
		return vs[0].([]Logsyslogd3OverridefilterFreeStyle)[vs[1].(int)]
	}).(Logsyslogd3OverridefilterFreeStyleOutput)
}

type Logsyslogd3OverridesettingCustomFieldName struct {
	// Field custom name.
	Custom *string `pulumi:"custom"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Field name.
	Name *string `pulumi:"name"`
}

// Logsyslogd3OverridesettingCustomFieldNameInput is an input type that accepts Logsyslogd3OverridesettingCustomFieldNameArgs and Logsyslogd3OverridesettingCustomFieldNameOutput values.
// You can construct a concrete instance of `Logsyslogd3OverridesettingCustomFieldNameInput` via:
//
//	Logsyslogd3OverridesettingCustomFieldNameArgs{...}
type Logsyslogd3OverridesettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogsyslogd3OverridesettingCustomFieldNameOutput() Logsyslogd3OverridesettingCustomFieldNameOutput
	ToLogsyslogd3OverridesettingCustomFieldNameOutputWithContext(context.Context) Logsyslogd3OverridesettingCustomFieldNameOutput
}

type Logsyslogd3OverridesettingCustomFieldNameArgs struct {
	// Field custom name.
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Field name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Logsyslogd3OverridesettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd3OverridesettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd3OverridesettingCustomFieldNameArgs) ToLogsyslogd3OverridesettingCustomFieldNameOutput() Logsyslogd3OverridesettingCustomFieldNameOutput {
	return i.ToLogsyslogd3OverridesettingCustomFieldNameOutputWithContext(context.Background())
}

func (i Logsyslogd3OverridesettingCustomFieldNameArgs) ToLogsyslogd3OverridesettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd3OverridesettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd3OverridesettingCustomFieldNameOutput)
}

// Logsyslogd3OverridesettingCustomFieldNameArrayInput is an input type that accepts Logsyslogd3OverridesettingCustomFieldNameArray and Logsyslogd3OverridesettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `Logsyslogd3OverridesettingCustomFieldNameArrayInput` via:
//
//	Logsyslogd3OverridesettingCustomFieldNameArray{ Logsyslogd3OverridesettingCustomFieldNameArgs{...} }
type Logsyslogd3OverridesettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogsyslogd3OverridesettingCustomFieldNameArrayOutput() Logsyslogd3OverridesettingCustomFieldNameArrayOutput
	ToLogsyslogd3OverridesettingCustomFieldNameArrayOutputWithContext(context.Context) Logsyslogd3OverridesettingCustomFieldNameArrayOutput
}

type Logsyslogd3OverridesettingCustomFieldNameArray []Logsyslogd3OverridesettingCustomFieldNameInput

func (Logsyslogd3OverridesettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd3OverridesettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd3OverridesettingCustomFieldNameArray) ToLogsyslogd3OverridesettingCustomFieldNameArrayOutput() Logsyslogd3OverridesettingCustomFieldNameArrayOutput {
	return i.ToLogsyslogd3OverridesettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i Logsyslogd3OverridesettingCustomFieldNameArray) ToLogsyslogd3OverridesettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd3OverridesettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd3OverridesettingCustomFieldNameArrayOutput)
}

type Logsyslogd3OverridesettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (Logsyslogd3OverridesettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd3OverridesettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd3OverridesettingCustomFieldNameOutput) ToLogsyslogd3OverridesettingCustomFieldNameOutput() Logsyslogd3OverridesettingCustomFieldNameOutput {
	return o
}

func (o Logsyslogd3OverridesettingCustomFieldNameOutput) ToLogsyslogd3OverridesettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd3OverridesettingCustomFieldNameOutput {
	return o
}

// Field custom name.
func (o Logsyslogd3OverridesettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd3OverridesettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd3OverridesettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd3OverridesettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Field name.
func (o Logsyslogd3OverridesettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd3OverridesettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Logsyslogd3OverridesettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd3OverridesettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd3OverridesettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd3OverridesettingCustomFieldNameArrayOutput) ToLogsyslogd3OverridesettingCustomFieldNameArrayOutput() Logsyslogd3OverridesettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd3OverridesettingCustomFieldNameArrayOutput) ToLogsyslogd3OverridesettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd3OverridesettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd3OverridesettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) Logsyslogd3OverridesettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd3OverridesettingCustomFieldName {
		return vs[0].([]Logsyslogd3OverridesettingCustomFieldName)[vs[1].(int)]
	}).(Logsyslogd3OverridesettingCustomFieldNameOutput)
}

type Logsyslogd3SettingCustomFieldName struct {
	// Field custom name.
	Custom *string `pulumi:"custom"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Field name.
	Name *string `pulumi:"name"`
}

// Logsyslogd3SettingCustomFieldNameInput is an input type that accepts Logsyslogd3SettingCustomFieldNameArgs and Logsyslogd3SettingCustomFieldNameOutput values.
// You can construct a concrete instance of `Logsyslogd3SettingCustomFieldNameInput` via:
//
//	Logsyslogd3SettingCustomFieldNameArgs{...}
type Logsyslogd3SettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogsyslogd3SettingCustomFieldNameOutput() Logsyslogd3SettingCustomFieldNameOutput
	ToLogsyslogd3SettingCustomFieldNameOutputWithContext(context.Context) Logsyslogd3SettingCustomFieldNameOutput
}

type Logsyslogd3SettingCustomFieldNameArgs struct {
	// Field custom name.
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Field name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Logsyslogd3SettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd3SettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd3SettingCustomFieldNameArgs) ToLogsyslogd3SettingCustomFieldNameOutput() Logsyslogd3SettingCustomFieldNameOutput {
	return i.ToLogsyslogd3SettingCustomFieldNameOutputWithContext(context.Background())
}

func (i Logsyslogd3SettingCustomFieldNameArgs) ToLogsyslogd3SettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd3SettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd3SettingCustomFieldNameOutput)
}

// Logsyslogd3SettingCustomFieldNameArrayInput is an input type that accepts Logsyslogd3SettingCustomFieldNameArray and Logsyslogd3SettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `Logsyslogd3SettingCustomFieldNameArrayInput` via:
//
//	Logsyslogd3SettingCustomFieldNameArray{ Logsyslogd3SettingCustomFieldNameArgs{...} }
type Logsyslogd3SettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogsyslogd3SettingCustomFieldNameArrayOutput() Logsyslogd3SettingCustomFieldNameArrayOutput
	ToLogsyslogd3SettingCustomFieldNameArrayOutputWithContext(context.Context) Logsyslogd3SettingCustomFieldNameArrayOutput
}

type Logsyslogd3SettingCustomFieldNameArray []Logsyslogd3SettingCustomFieldNameInput

func (Logsyslogd3SettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd3SettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd3SettingCustomFieldNameArray) ToLogsyslogd3SettingCustomFieldNameArrayOutput() Logsyslogd3SettingCustomFieldNameArrayOutput {
	return i.ToLogsyslogd3SettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i Logsyslogd3SettingCustomFieldNameArray) ToLogsyslogd3SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd3SettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd3SettingCustomFieldNameArrayOutput)
}

type Logsyslogd3SettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (Logsyslogd3SettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd3SettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd3SettingCustomFieldNameOutput) ToLogsyslogd3SettingCustomFieldNameOutput() Logsyslogd3SettingCustomFieldNameOutput {
	return o
}

func (o Logsyslogd3SettingCustomFieldNameOutput) ToLogsyslogd3SettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd3SettingCustomFieldNameOutput {
	return o
}

// Field custom name.
func (o Logsyslogd3SettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd3SettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd3SettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd3SettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Field name.
func (o Logsyslogd3SettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd3SettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Logsyslogd3SettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd3SettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd3SettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd3SettingCustomFieldNameArrayOutput) ToLogsyslogd3SettingCustomFieldNameArrayOutput() Logsyslogd3SettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd3SettingCustomFieldNameArrayOutput) ToLogsyslogd3SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd3SettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd3SettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) Logsyslogd3SettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd3SettingCustomFieldName {
		return vs[0].([]Logsyslogd3SettingCustomFieldName)[vs[1].(int)]
	}).(Logsyslogd3SettingCustomFieldNameOutput)
}

type Logsyslogd4FilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// Logsyslogd4FilterFreeStyleInput is an input type that accepts Logsyslogd4FilterFreeStyleArgs and Logsyslogd4FilterFreeStyleOutput values.
// You can construct a concrete instance of `Logsyslogd4FilterFreeStyleInput` via:
//
//	Logsyslogd4FilterFreeStyleArgs{...}
type Logsyslogd4FilterFreeStyleInput interface {
	pulumi.Input

	ToLogsyslogd4FilterFreeStyleOutput() Logsyslogd4FilterFreeStyleOutput
	ToLogsyslogd4FilterFreeStyleOutputWithContext(context.Context) Logsyslogd4FilterFreeStyleOutput
}

type Logsyslogd4FilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Logsyslogd4FilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd4FilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd4FilterFreeStyleArgs) ToLogsyslogd4FilterFreeStyleOutput() Logsyslogd4FilterFreeStyleOutput {
	return i.ToLogsyslogd4FilterFreeStyleOutputWithContext(context.Background())
}

func (i Logsyslogd4FilterFreeStyleArgs) ToLogsyslogd4FilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd4FilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd4FilterFreeStyleOutput)
}

// Logsyslogd4FilterFreeStyleArrayInput is an input type that accepts Logsyslogd4FilterFreeStyleArray and Logsyslogd4FilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `Logsyslogd4FilterFreeStyleArrayInput` via:
//
//	Logsyslogd4FilterFreeStyleArray{ Logsyslogd4FilterFreeStyleArgs{...} }
type Logsyslogd4FilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogsyslogd4FilterFreeStyleArrayOutput() Logsyslogd4FilterFreeStyleArrayOutput
	ToLogsyslogd4FilterFreeStyleArrayOutputWithContext(context.Context) Logsyslogd4FilterFreeStyleArrayOutput
}

type Logsyslogd4FilterFreeStyleArray []Logsyslogd4FilterFreeStyleInput

func (Logsyslogd4FilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd4FilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd4FilterFreeStyleArray) ToLogsyslogd4FilterFreeStyleArrayOutput() Logsyslogd4FilterFreeStyleArrayOutput {
	return i.ToLogsyslogd4FilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i Logsyslogd4FilterFreeStyleArray) ToLogsyslogd4FilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd4FilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd4FilterFreeStyleArrayOutput)
}

type Logsyslogd4FilterFreeStyleOutput struct{ *pulumi.OutputState }

func (Logsyslogd4FilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd4FilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd4FilterFreeStyleOutput) ToLogsyslogd4FilterFreeStyleOutput() Logsyslogd4FilterFreeStyleOutput {
	return o
}

func (o Logsyslogd4FilterFreeStyleOutput) ToLogsyslogd4FilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd4FilterFreeStyleOutput {
	return o
}

// Log category.
func (o Logsyslogd4FilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd4FilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o Logsyslogd4FilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd4FilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o Logsyslogd4FilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd4FilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd4FilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd4FilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Logsyslogd4FilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd4FilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd4FilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd4FilterFreeStyleArrayOutput) ToLogsyslogd4FilterFreeStyleArrayOutput() Logsyslogd4FilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd4FilterFreeStyleArrayOutput) ToLogsyslogd4FilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd4FilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd4FilterFreeStyleArrayOutput) Index(i pulumi.IntInput) Logsyslogd4FilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd4FilterFreeStyle {
		return vs[0].([]Logsyslogd4FilterFreeStyle)[vs[1].(int)]
	}).(Logsyslogd4FilterFreeStyleOutput)
}

type Logsyslogd4OverridefilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// Logsyslogd4OverridefilterFreeStyleInput is an input type that accepts Logsyslogd4OverridefilterFreeStyleArgs and Logsyslogd4OverridefilterFreeStyleOutput values.
// You can construct a concrete instance of `Logsyslogd4OverridefilterFreeStyleInput` via:
//
//	Logsyslogd4OverridefilterFreeStyleArgs{...}
type Logsyslogd4OverridefilterFreeStyleInput interface {
	pulumi.Input

	ToLogsyslogd4OverridefilterFreeStyleOutput() Logsyslogd4OverridefilterFreeStyleOutput
	ToLogsyslogd4OverridefilterFreeStyleOutputWithContext(context.Context) Logsyslogd4OverridefilterFreeStyleOutput
}

type Logsyslogd4OverridefilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Logsyslogd4OverridefilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd4OverridefilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd4OverridefilterFreeStyleArgs) ToLogsyslogd4OverridefilterFreeStyleOutput() Logsyslogd4OverridefilterFreeStyleOutput {
	return i.ToLogsyslogd4OverridefilterFreeStyleOutputWithContext(context.Background())
}

func (i Logsyslogd4OverridefilterFreeStyleArgs) ToLogsyslogd4OverridefilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd4OverridefilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd4OverridefilterFreeStyleOutput)
}

// Logsyslogd4OverridefilterFreeStyleArrayInput is an input type that accepts Logsyslogd4OverridefilterFreeStyleArray and Logsyslogd4OverridefilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `Logsyslogd4OverridefilterFreeStyleArrayInput` via:
//
//	Logsyslogd4OverridefilterFreeStyleArray{ Logsyslogd4OverridefilterFreeStyleArgs{...} }
type Logsyslogd4OverridefilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogsyslogd4OverridefilterFreeStyleArrayOutput() Logsyslogd4OverridefilterFreeStyleArrayOutput
	ToLogsyslogd4OverridefilterFreeStyleArrayOutputWithContext(context.Context) Logsyslogd4OverridefilterFreeStyleArrayOutput
}

type Logsyslogd4OverridefilterFreeStyleArray []Logsyslogd4OverridefilterFreeStyleInput

func (Logsyslogd4OverridefilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd4OverridefilterFreeStyle)(nil)).Elem()
}

func (i Logsyslogd4OverridefilterFreeStyleArray) ToLogsyslogd4OverridefilterFreeStyleArrayOutput() Logsyslogd4OverridefilterFreeStyleArrayOutput {
	return i.ToLogsyslogd4OverridefilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i Logsyslogd4OverridefilterFreeStyleArray) ToLogsyslogd4OverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd4OverridefilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd4OverridefilterFreeStyleArrayOutput)
}

type Logsyslogd4OverridefilterFreeStyleOutput struct{ *pulumi.OutputState }

func (Logsyslogd4OverridefilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd4OverridefilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd4OverridefilterFreeStyleOutput) ToLogsyslogd4OverridefilterFreeStyleOutput() Logsyslogd4OverridefilterFreeStyleOutput {
	return o
}

func (o Logsyslogd4OverridefilterFreeStyleOutput) ToLogsyslogd4OverridefilterFreeStyleOutputWithContext(ctx context.Context) Logsyslogd4OverridefilterFreeStyleOutput {
	return o
}

// Log category.
func (o Logsyslogd4OverridefilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd4OverridefilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o Logsyslogd4OverridefilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd4OverridefilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o Logsyslogd4OverridefilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd4OverridefilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd4OverridefilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd4OverridefilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Logsyslogd4OverridefilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd4OverridefilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd4OverridefilterFreeStyle)(nil)).Elem()
}

func (o Logsyslogd4OverridefilterFreeStyleArrayOutput) ToLogsyslogd4OverridefilterFreeStyleArrayOutput() Logsyslogd4OverridefilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd4OverridefilterFreeStyleArrayOutput) ToLogsyslogd4OverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) Logsyslogd4OverridefilterFreeStyleArrayOutput {
	return o
}

func (o Logsyslogd4OverridefilterFreeStyleArrayOutput) Index(i pulumi.IntInput) Logsyslogd4OverridefilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd4OverridefilterFreeStyle {
		return vs[0].([]Logsyslogd4OverridefilterFreeStyle)[vs[1].(int)]
	}).(Logsyslogd4OverridefilterFreeStyleOutput)
}

type Logsyslogd4OverridesettingCustomFieldName struct {
	// Field custom name.
	Custom *string `pulumi:"custom"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Field name.
	Name *string `pulumi:"name"`
}

// Logsyslogd4OverridesettingCustomFieldNameInput is an input type that accepts Logsyslogd4OverridesettingCustomFieldNameArgs and Logsyslogd4OverridesettingCustomFieldNameOutput values.
// You can construct a concrete instance of `Logsyslogd4OverridesettingCustomFieldNameInput` via:
//
//	Logsyslogd4OverridesettingCustomFieldNameArgs{...}
type Logsyslogd4OverridesettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogsyslogd4OverridesettingCustomFieldNameOutput() Logsyslogd4OverridesettingCustomFieldNameOutput
	ToLogsyslogd4OverridesettingCustomFieldNameOutputWithContext(context.Context) Logsyslogd4OverridesettingCustomFieldNameOutput
}

type Logsyslogd4OverridesettingCustomFieldNameArgs struct {
	// Field custom name.
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Field name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Logsyslogd4OverridesettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd4OverridesettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd4OverridesettingCustomFieldNameArgs) ToLogsyslogd4OverridesettingCustomFieldNameOutput() Logsyslogd4OverridesettingCustomFieldNameOutput {
	return i.ToLogsyslogd4OverridesettingCustomFieldNameOutputWithContext(context.Background())
}

func (i Logsyslogd4OverridesettingCustomFieldNameArgs) ToLogsyslogd4OverridesettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd4OverridesettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd4OverridesettingCustomFieldNameOutput)
}

// Logsyslogd4OverridesettingCustomFieldNameArrayInput is an input type that accepts Logsyslogd4OverridesettingCustomFieldNameArray and Logsyslogd4OverridesettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `Logsyslogd4OverridesettingCustomFieldNameArrayInput` via:
//
//	Logsyslogd4OverridesettingCustomFieldNameArray{ Logsyslogd4OverridesettingCustomFieldNameArgs{...} }
type Logsyslogd4OverridesettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogsyslogd4OverridesettingCustomFieldNameArrayOutput() Logsyslogd4OverridesettingCustomFieldNameArrayOutput
	ToLogsyslogd4OverridesettingCustomFieldNameArrayOutputWithContext(context.Context) Logsyslogd4OverridesettingCustomFieldNameArrayOutput
}

type Logsyslogd4OverridesettingCustomFieldNameArray []Logsyslogd4OverridesettingCustomFieldNameInput

func (Logsyslogd4OverridesettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd4OverridesettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd4OverridesettingCustomFieldNameArray) ToLogsyslogd4OverridesettingCustomFieldNameArrayOutput() Logsyslogd4OverridesettingCustomFieldNameArrayOutput {
	return i.ToLogsyslogd4OverridesettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i Logsyslogd4OverridesettingCustomFieldNameArray) ToLogsyslogd4OverridesettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd4OverridesettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd4OverridesettingCustomFieldNameArrayOutput)
}

type Logsyslogd4OverridesettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (Logsyslogd4OverridesettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd4OverridesettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd4OverridesettingCustomFieldNameOutput) ToLogsyslogd4OverridesettingCustomFieldNameOutput() Logsyslogd4OverridesettingCustomFieldNameOutput {
	return o
}

func (o Logsyslogd4OverridesettingCustomFieldNameOutput) ToLogsyslogd4OverridesettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd4OverridesettingCustomFieldNameOutput {
	return o
}

// Field custom name.
func (o Logsyslogd4OverridesettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd4OverridesettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd4OverridesettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd4OverridesettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Field name.
func (o Logsyslogd4OverridesettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd4OverridesettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Logsyslogd4OverridesettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd4OverridesettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd4OverridesettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd4OverridesettingCustomFieldNameArrayOutput) ToLogsyslogd4OverridesettingCustomFieldNameArrayOutput() Logsyslogd4OverridesettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd4OverridesettingCustomFieldNameArrayOutput) ToLogsyslogd4OverridesettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd4OverridesettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd4OverridesettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) Logsyslogd4OverridesettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd4OverridesettingCustomFieldName {
		return vs[0].([]Logsyslogd4OverridesettingCustomFieldName)[vs[1].(int)]
	}).(Logsyslogd4OverridesettingCustomFieldNameOutput)
}

type Logsyslogd4SettingCustomFieldName struct {
	// Field custom name.
	Custom *string `pulumi:"custom"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Field name.
	Name *string `pulumi:"name"`
}

// Logsyslogd4SettingCustomFieldNameInput is an input type that accepts Logsyslogd4SettingCustomFieldNameArgs and Logsyslogd4SettingCustomFieldNameOutput values.
// You can construct a concrete instance of `Logsyslogd4SettingCustomFieldNameInput` via:
//
//	Logsyslogd4SettingCustomFieldNameArgs{...}
type Logsyslogd4SettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogsyslogd4SettingCustomFieldNameOutput() Logsyslogd4SettingCustomFieldNameOutput
	ToLogsyslogd4SettingCustomFieldNameOutputWithContext(context.Context) Logsyslogd4SettingCustomFieldNameOutput
}

type Logsyslogd4SettingCustomFieldNameArgs struct {
	// Field custom name.
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Field name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Logsyslogd4SettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd4SettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd4SettingCustomFieldNameArgs) ToLogsyslogd4SettingCustomFieldNameOutput() Logsyslogd4SettingCustomFieldNameOutput {
	return i.ToLogsyslogd4SettingCustomFieldNameOutputWithContext(context.Background())
}

func (i Logsyslogd4SettingCustomFieldNameArgs) ToLogsyslogd4SettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd4SettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd4SettingCustomFieldNameOutput)
}

// Logsyslogd4SettingCustomFieldNameArrayInput is an input type that accepts Logsyslogd4SettingCustomFieldNameArray and Logsyslogd4SettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `Logsyslogd4SettingCustomFieldNameArrayInput` via:
//
//	Logsyslogd4SettingCustomFieldNameArray{ Logsyslogd4SettingCustomFieldNameArgs{...} }
type Logsyslogd4SettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogsyslogd4SettingCustomFieldNameArrayOutput() Logsyslogd4SettingCustomFieldNameArrayOutput
	ToLogsyslogd4SettingCustomFieldNameArrayOutputWithContext(context.Context) Logsyslogd4SettingCustomFieldNameArrayOutput
}

type Logsyslogd4SettingCustomFieldNameArray []Logsyslogd4SettingCustomFieldNameInput

func (Logsyslogd4SettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd4SettingCustomFieldName)(nil)).Elem()
}

func (i Logsyslogd4SettingCustomFieldNameArray) ToLogsyslogd4SettingCustomFieldNameArrayOutput() Logsyslogd4SettingCustomFieldNameArrayOutput {
	return i.ToLogsyslogd4SettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i Logsyslogd4SettingCustomFieldNameArray) ToLogsyslogd4SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd4SettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logsyslogd4SettingCustomFieldNameArrayOutput)
}

type Logsyslogd4SettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (Logsyslogd4SettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logsyslogd4SettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd4SettingCustomFieldNameOutput) ToLogsyslogd4SettingCustomFieldNameOutput() Logsyslogd4SettingCustomFieldNameOutput {
	return o
}

func (o Logsyslogd4SettingCustomFieldNameOutput) ToLogsyslogd4SettingCustomFieldNameOutputWithContext(ctx context.Context) Logsyslogd4SettingCustomFieldNameOutput {
	return o
}

// Field custom name.
func (o Logsyslogd4SettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd4SettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logsyslogd4SettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logsyslogd4SettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Field name.
func (o Logsyslogd4SettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logsyslogd4SettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Logsyslogd4SettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (Logsyslogd4SettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logsyslogd4SettingCustomFieldName)(nil)).Elem()
}

func (o Logsyslogd4SettingCustomFieldNameArrayOutput) ToLogsyslogd4SettingCustomFieldNameArrayOutput() Logsyslogd4SettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd4SettingCustomFieldNameArrayOutput) ToLogsyslogd4SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) Logsyslogd4SettingCustomFieldNameArrayOutput {
	return o
}

func (o Logsyslogd4SettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) Logsyslogd4SettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logsyslogd4SettingCustomFieldName {
		return vs[0].([]Logsyslogd4SettingCustomFieldName)[vs[1].(int)]
	}).(Logsyslogd4SettingCustomFieldNameOutput)
}

type LogsyslogdFilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogsyslogdFilterFreeStyleInput is an input type that accepts LogsyslogdFilterFreeStyleArgs and LogsyslogdFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogsyslogdFilterFreeStyleInput` via:
//
//	LogsyslogdFilterFreeStyleArgs{...}
type LogsyslogdFilterFreeStyleInput interface {
	pulumi.Input

	ToLogsyslogdFilterFreeStyleOutput() LogsyslogdFilterFreeStyleOutput
	ToLogsyslogdFilterFreeStyleOutputWithContext(context.Context) LogsyslogdFilterFreeStyleOutput
}

type LogsyslogdFilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogsyslogdFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsyslogdFilterFreeStyle)(nil)).Elem()
}

func (i LogsyslogdFilterFreeStyleArgs) ToLogsyslogdFilterFreeStyleOutput() LogsyslogdFilterFreeStyleOutput {
	return i.ToLogsyslogdFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogsyslogdFilterFreeStyleArgs) ToLogsyslogdFilterFreeStyleOutputWithContext(ctx context.Context) LogsyslogdFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsyslogdFilterFreeStyleOutput)
}

// LogsyslogdFilterFreeStyleArrayInput is an input type that accepts LogsyslogdFilterFreeStyleArray and LogsyslogdFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogsyslogdFilterFreeStyleArrayInput` via:
//
//	LogsyslogdFilterFreeStyleArray{ LogsyslogdFilterFreeStyleArgs{...} }
type LogsyslogdFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogsyslogdFilterFreeStyleArrayOutput() LogsyslogdFilterFreeStyleArrayOutput
	ToLogsyslogdFilterFreeStyleArrayOutputWithContext(context.Context) LogsyslogdFilterFreeStyleArrayOutput
}

type LogsyslogdFilterFreeStyleArray []LogsyslogdFilterFreeStyleInput

func (LogsyslogdFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsyslogdFilterFreeStyle)(nil)).Elem()
}

func (i LogsyslogdFilterFreeStyleArray) ToLogsyslogdFilterFreeStyleArrayOutput() LogsyslogdFilterFreeStyleArrayOutput {
	return i.ToLogsyslogdFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogsyslogdFilterFreeStyleArray) ToLogsyslogdFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogsyslogdFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsyslogdFilterFreeStyleArrayOutput)
}

type LogsyslogdFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogsyslogdFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsyslogdFilterFreeStyle)(nil)).Elem()
}

func (o LogsyslogdFilterFreeStyleOutput) ToLogsyslogdFilterFreeStyleOutput() LogsyslogdFilterFreeStyleOutput {
	return o
}

func (o LogsyslogdFilterFreeStyleOutput) ToLogsyslogdFilterFreeStyleOutputWithContext(ctx context.Context) LogsyslogdFilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogsyslogdFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsyslogdFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogsyslogdFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsyslogdFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogsyslogdFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsyslogdFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogsyslogdFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogsyslogdFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogsyslogdFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogsyslogdFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsyslogdFilterFreeStyle)(nil)).Elem()
}

func (o LogsyslogdFilterFreeStyleArrayOutput) ToLogsyslogdFilterFreeStyleArrayOutput() LogsyslogdFilterFreeStyleArrayOutput {
	return o
}

func (o LogsyslogdFilterFreeStyleArrayOutput) ToLogsyslogdFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogsyslogdFilterFreeStyleArrayOutput {
	return o
}

func (o LogsyslogdFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogsyslogdFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogsyslogdFilterFreeStyle {
		return vs[0].([]LogsyslogdFilterFreeStyle)[vs[1].(int)]
	}).(LogsyslogdFilterFreeStyleOutput)
}

type LogsyslogdOverridefilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogsyslogdOverridefilterFreeStyleInput is an input type that accepts LogsyslogdOverridefilterFreeStyleArgs and LogsyslogdOverridefilterFreeStyleOutput values.
// You can construct a concrete instance of `LogsyslogdOverridefilterFreeStyleInput` via:
//
//	LogsyslogdOverridefilterFreeStyleArgs{...}
type LogsyslogdOverridefilterFreeStyleInput interface {
	pulumi.Input

	ToLogsyslogdOverridefilterFreeStyleOutput() LogsyslogdOverridefilterFreeStyleOutput
	ToLogsyslogdOverridefilterFreeStyleOutputWithContext(context.Context) LogsyslogdOverridefilterFreeStyleOutput
}

type LogsyslogdOverridefilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogsyslogdOverridefilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsyslogdOverridefilterFreeStyle)(nil)).Elem()
}

func (i LogsyslogdOverridefilterFreeStyleArgs) ToLogsyslogdOverridefilterFreeStyleOutput() LogsyslogdOverridefilterFreeStyleOutput {
	return i.ToLogsyslogdOverridefilterFreeStyleOutputWithContext(context.Background())
}

func (i LogsyslogdOverridefilterFreeStyleArgs) ToLogsyslogdOverridefilterFreeStyleOutputWithContext(ctx context.Context) LogsyslogdOverridefilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsyslogdOverridefilterFreeStyleOutput)
}

// LogsyslogdOverridefilterFreeStyleArrayInput is an input type that accepts LogsyslogdOverridefilterFreeStyleArray and LogsyslogdOverridefilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogsyslogdOverridefilterFreeStyleArrayInput` via:
//
//	LogsyslogdOverridefilterFreeStyleArray{ LogsyslogdOverridefilterFreeStyleArgs{...} }
type LogsyslogdOverridefilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogsyslogdOverridefilterFreeStyleArrayOutput() LogsyslogdOverridefilterFreeStyleArrayOutput
	ToLogsyslogdOverridefilterFreeStyleArrayOutputWithContext(context.Context) LogsyslogdOverridefilterFreeStyleArrayOutput
}

type LogsyslogdOverridefilterFreeStyleArray []LogsyslogdOverridefilterFreeStyleInput

func (LogsyslogdOverridefilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsyslogdOverridefilterFreeStyle)(nil)).Elem()
}

func (i LogsyslogdOverridefilterFreeStyleArray) ToLogsyslogdOverridefilterFreeStyleArrayOutput() LogsyslogdOverridefilterFreeStyleArrayOutput {
	return i.ToLogsyslogdOverridefilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogsyslogdOverridefilterFreeStyleArray) ToLogsyslogdOverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) LogsyslogdOverridefilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsyslogdOverridefilterFreeStyleArrayOutput)
}

type LogsyslogdOverridefilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogsyslogdOverridefilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsyslogdOverridefilterFreeStyle)(nil)).Elem()
}

func (o LogsyslogdOverridefilterFreeStyleOutput) ToLogsyslogdOverridefilterFreeStyleOutput() LogsyslogdOverridefilterFreeStyleOutput {
	return o
}

func (o LogsyslogdOverridefilterFreeStyleOutput) ToLogsyslogdOverridefilterFreeStyleOutputWithContext(ctx context.Context) LogsyslogdOverridefilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogsyslogdOverridefilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsyslogdOverridefilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogsyslogdOverridefilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsyslogdOverridefilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogsyslogdOverridefilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsyslogdOverridefilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogsyslogdOverridefilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogsyslogdOverridefilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogsyslogdOverridefilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogsyslogdOverridefilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsyslogdOverridefilterFreeStyle)(nil)).Elem()
}

func (o LogsyslogdOverridefilterFreeStyleArrayOutput) ToLogsyslogdOverridefilterFreeStyleArrayOutput() LogsyslogdOverridefilterFreeStyleArrayOutput {
	return o
}

func (o LogsyslogdOverridefilterFreeStyleArrayOutput) ToLogsyslogdOverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) LogsyslogdOverridefilterFreeStyleArrayOutput {
	return o
}

func (o LogsyslogdOverridefilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogsyslogdOverridefilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogsyslogdOverridefilterFreeStyle {
		return vs[0].([]LogsyslogdOverridefilterFreeStyle)[vs[1].(int)]
	}).(LogsyslogdOverridefilterFreeStyleOutput)
}

type LogsyslogdOverridesettingCustomFieldName struct {
	// Field custom name.
	Custom *string `pulumi:"custom"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Field name.
	Name *string `pulumi:"name"`
}

// LogsyslogdOverridesettingCustomFieldNameInput is an input type that accepts LogsyslogdOverridesettingCustomFieldNameArgs and LogsyslogdOverridesettingCustomFieldNameOutput values.
// You can construct a concrete instance of `LogsyslogdOverridesettingCustomFieldNameInput` via:
//
//	LogsyslogdOverridesettingCustomFieldNameArgs{...}
type LogsyslogdOverridesettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogsyslogdOverridesettingCustomFieldNameOutput() LogsyslogdOverridesettingCustomFieldNameOutput
	ToLogsyslogdOverridesettingCustomFieldNameOutputWithContext(context.Context) LogsyslogdOverridesettingCustomFieldNameOutput
}

type LogsyslogdOverridesettingCustomFieldNameArgs struct {
	// Field custom name.
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Field name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LogsyslogdOverridesettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsyslogdOverridesettingCustomFieldName)(nil)).Elem()
}

func (i LogsyslogdOverridesettingCustomFieldNameArgs) ToLogsyslogdOverridesettingCustomFieldNameOutput() LogsyslogdOverridesettingCustomFieldNameOutput {
	return i.ToLogsyslogdOverridesettingCustomFieldNameOutputWithContext(context.Background())
}

func (i LogsyslogdOverridesettingCustomFieldNameArgs) ToLogsyslogdOverridesettingCustomFieldNameOutputWithContext(ctx context.Context) LogsyslogdOverridesettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsyslogdOverridesettingCustomFieldNameOutput)
}

// LogsyslogdOverridesettingCustomFieldNameArrayInput is an input type that accepts LogsyslogdOverridesettingCustomFieldNameArray and LogsyslogdOverridesettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `LogsyslogdOverridesettingCustomFieldNameArrayInput` via:
//
//	LogsyslogdOverridesettingCustomFieldNameArray{ LogsyslogdOverridesettingCustomFieldNameArgs{...} }
type LogsyslogdOverridesettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogsyslogdOverridesettingCustomFieldNameArrayOutput() LogsyslogdOverridesettingCustomFieldNameArrayOutput
	ToLogsyslogdOverridesettingCustomFieldNameArrayOutputWithContext(context.Context) LogsyslogdOverridesettingCustomFieldNameArrayOutput
}

type LogsyslogdOverridesettingCustomFieldNameArray []LogsyslogdOverridesettingCustomFieldNameInput

func (LogsyslogdOverridesettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsyslogdOverridesettingCustomFieldName)(nil)).Elem()
}

func (i LogsyslogdOverridesettingCustomFieldNameArray) ToLogsyslogdOverridesettingCustomFieldNameArrayOutput() LogsyslogdOverridesettingCustomFieldNameArrayOutput {
	return i.ToLogsyslogdOverridesettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i LogsyslogdOverridesettingCustomFieldNameArray) ToLogsyslogdOverridesettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogsyslogdOverridesettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsyslogdOverridesettingCustomFieldNameArrayOutput)
}

type LogsyslogdOverridesettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (LogsyslogdOverridesettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsyslogdOverridesettingCustomFieldName)(nil)).Elem()
}

func (o LogsyslogdOverridesettingCustomFieldNameOutput) ToLogsyslogdOverridesettingCustomFieldNameOutput() LogsyslogdOverridesettingCustomFieldNameOutput {
	return o
}

func (o LogsyslogdOverridesettingCustomFieldNameOutput) ToLogsyslogdOverridesettingCustomFieldNameOutputWithContext(ctx context.Context) LogsyslogdOverridesettingCustomFieldNameOutput {
	return o
}

// Field custom name.
func (o LogsyslogdOverridesettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsyslogdOverridesettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogsyslogdOverridesettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogsyslogdOverridesettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Field name.
func (o LogsyslogdOverridesettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsyslogdOverridesettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogsyslogdOverridesettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (LogsyslogdOverridesettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsyslogdOverridesettingCustomFieldName)(nil)).Elem()
}

func (o LogsyslogdOverridesettingCustomFieldNameArrayOutput) ToLogsyslogdOverridesettingCustomFieldNameArrayOutput() LogsyslogdOverridesettingCustomFieldNameArrayOutput {
	return o
}

func (o LogsyslogdOverridesettingCustomFieldNameArrayOutput) ToLogsyslogdOverridesettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogsyslogdOverridesettingCustomFieldNameArrayOutput {
	return o
}

func (o LogsyslogdOverridesettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) LogsyslogdOverridesettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogsyslogdOverridesettingCustomFieldName {
		return vs[0].([]LogsyslogdOverridesettingCustomFieldName)[vs[1].(int)]
	}).(LogsyslogdOverridesettingCustomFieldNameOutput)
}

type LogsyslogdSettingCustomFieldName struct {
	// Field custom name.
	Custom *string `pulumi:"custom"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Field name.
	Name *string `pulumi:"name"`
}

// LogsyslogdSettingCustomFieldNameInput is an input type that accepts LogsyslogdSettingCustomFieldNameArgs and LogsyslogdSettingCustomFieldNameOutput values.
// You can construct a concrete instance of `LogsyslogdSettingCustomFieldNameInput` via:
//
//	LogsyslogdSettingCustomFieldNameArgs{...}
type LogsyslogdSettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogsyslogdSettingCustomFieldNameOutput() LogsyslogdSettingCustomFieldNameOutput
	ToLogsyslogdSettingCustomFieldNameOutputWithContext(context.Context) LogsyslogdSettingCustomFieldNameOutput
}

type LogsyslogdSettingCustomFieldNameArgs struct {
	// Field custom name.
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Field name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LogsyslogdSettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsyslogdSettingCustomFieldName)(nil)).Elem()
}

func (i LogsyslogdSettingCustomFieldNameArgs) ToLogsyslogdSettingCustomFieldNameOutput() LogsyslogdSettingCustomFieldNameOutput {
	return i.ToLogsyslogdSettingCustomFieldNameOutputWithContext(context.Background())
}

func (i LogsyslogdSettingCustomFieldNameArgs) ToLogsyslogdSettingCustomFieldNameOutputWithContext(ctx context.Context) LogsyslogdSettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsyslogdSettingCustomFieldNameOutput)
}

// LogsyslogdSettingCustomFieldNameArrayInput is an input type that accepts LogsyslogdSettingCustomFieldNameArray and LogsyslogdSettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `LogsyslogdSettingCustomFieldNameArrayInput` via:
//
//	LogsyslogdSettingCustomFieldNameArray{ LogsyslogdSettingCustomFieldNameArgs{...} }
type LogsyslogdSettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogsyslogdSettingCustomFieldNameArrayOutput() LogsyslogdSettingCustomFieldNameArrayOutput
	ToLogsyslogdSettingCustomFieldNameArrayOutputWithContext(context.Context) LogsyslogdSettingCustomFieldNameArrayOutput
}

type LogsyslogdSettingCustomFieldNameArray []LogsyslogdSettingCustomFieldNameInput

func (LogsyslogdSettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsyslogdSettingCustomFieldName)(nil)).Elem()
}

func (i LogsyslogdSettingCustomFieldNameArray) ToLogsyslogdSettingCustomFieldNameArrayOutput() LogsyslogdSettingCustomFieldNameArrayOutput {
	return i.ToLogsyslogdSettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i LogsyslogdSettingCustomFieldNameArray) ToLogsyslogdSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogsyslogdSettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsyslogdSettingCustomFieldNameArrayOutput)
}

type LogsyslogdSettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (LogsyslogdSettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsyslogdSettingCustomFieldName)(nil)).Elem()
}

func (o LogsyslogdSettingCustomFieldNameOutput) ToLogsyslogdSettingCustomFieldNameOutput() LogsyslogdSettingCustomFieldNameOutput {
	return o
}

func (o LogsyslogdSettingCustomFieldNameOutput) ToLogsyslogdSettingCustomFieldNameOutputWithContext(ctx context.Context) LogsyslogdSettingCustomFieldNameOutput {
	return o
}

// Field custom name.
func (o LogsyslogdSettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsyslogdSettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogsyslogdSettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogsyslogdSettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Field name.
func (o LogsyslogdSettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsyslogdSettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogsyslogdSettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (LogsyslogdSettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsyslogdSettingCustomFieldName)(nil)).Elem()
}

func (o LogsyslogdSettingCustomFieldNameArrayOutput) ToLogsyslogdSettingCustomFieldNameArrayOutput() LogsyslogdSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogsyslogdSettingCustomFieldNameArrayOutput) ToLogsyslogdSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogsyslogdSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogsyslogdSettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) LogsyslogdSettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogsyslogdSettingCustomFieldName {
		return vs[0].([]LogsyslogdSettingCustomFieldName)[vs[1].(int)]
	}).(LogsyslogdSettingCustomFieldNameOutput)
}

type LogwebtrendsFilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogwebtrendsFilterFreeStyleInput is an input type that accepts LogwebtrendsFilterFreeStyleArgs and LogwebtrendsFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogwebtrendsFilterFreeStyleInput` via:
//
//	LogwebtrendsFilterFreeStyleArgs{...}
type LogwebtrendsFilterFreeStyleInput interface {
	pulumi.Input

	ToLogwebtrendsFilterFreeStyleOutput() LogwebtrendsFilterFreeStyleOutput
	ToLogwebtrendsFilterFreeStyleOutputWithContext(context.Context) LogwebtrendsFilterFreeStyleOutput
}

type LogwebtrendsFilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogwebtrendsFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogwebtrendsFilterFreeStyle)(nil)).Elem()
}

func (i LogwebtrendsFilterFreeStyleArgs) ToLogwebtrendsFilterFreeStyleOutput() LogwebtrendsFilterFreeStyleOutput {
	return i.ToLogwebtrendsFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogwebtrendsFilterFreeStyleArgs) ToLogwebtrendsFilterFreeStyleOutputWithContext(ctx context.Context) LogwebtrendsFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogwebtrendsFilterFreeStyleOutput)
}

// LogwebtrendsFilterFreeStyleArrayInput is an input type that accepts LogwebtrendsFilterFreeStyleArray and LogwebtrendsFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogwebtrendsFilterFreeStyleArrayInput` via:
//
//	LogwebtrendsFilterFreeStyleArray{ LogwebtrendsFilterFreeStyleArgs{...} }
type LogwebtrendsFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogwebtrendsFilterFreeStyleArrayOutput() LogwebtrendsFilterFreeStyleArrayOutput
	ToLogwebtrendsFilterFreeStyleArrayOutputWithContext(context.Context) LogwebtrendsFilterFreeStyleArrayOutput
}

type LogwebtrendsFilterFreeStyleArray []LogwebtrendsFilterFreeStyleInput

func (LogwebtrendsFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogwebtrendsFilterFreeStyle)(nil)).Elem()
}

func (i LogwebtrendsFilterFreeStyleArray) ToLogwebtrendsFilterFreeStyleArrayOutput() LogwebtrendsFilterFreeStyleArrayOutput {
	return i.ToLogwebtrendsFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogwebtrendsFilterFreeStyleArray) ToLogwebtrendsFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogwebtrendsFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogwebtrendsFilterFreeStyleArrayOutput)
}

type LogwebtrendsFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogwebtrendsFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogwebtrendsFilterFreeStyle)(nil)).Elem()
}

func (o LogwebtrendsFilterFreeStyleOutput) ToLogwebtrendsFilterFreeStyleOutput() LogwebtrendsFilterFreeStyleOutput {
	return o
}

func (o LogwebtrendsFilterFreeStyleOutput) ToLogwebtrendsFilterFreeStyleOutputWithContext(ctx context.Context) LogwebtrendsFilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogwebtrendsFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogwebtrendsFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogwebtrendsFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogwebtrendsFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogwebtrendsFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogwebtrendsFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogwebtrendsFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogwebtrendsFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogwebtrendsFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogwebtrendsFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogwebtrendsFilterFreeStyle)(nil)).Elem()
}

func (o LogwebtrendsFilterFreeStyleArrayOutput) ToLogwebtrendsFilterFreeStyleArrayOutput() LogwebtrendsFilterFreeStyleArrayOutput {
	return o
}

func (o LogwebtrendsFilterFreeStyleArrayOutput) ToLogwebtrendsFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogwebtrendsFilterFreeStyleArrayOutput {
	return o
}

func (o LogwebtrendsFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogwebtrendsFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogwebtrendsFilterFreeStyle {
		return vs[0].([]LogwebtrendsFilterFreeStyle)[vs[1].(int)]
	}).(LogwebtrendsFilterFreeStyleOutput)
}

type NsxtServicechainServiceIndex struct {
	// Service index.
	Id *int `pulumi:"id"`
	// Index name.
	Name *string `pulumi:"name"`
	// Reverse service index.
	ReverseIndex *int `pulumi:"reverseIndex"`
	// VDOM name.
	Vd *string `pulumi:"vd"`
}

// NsxtServicechainServiceIndexInput is an input type that accepts NsxtServicechainServiceIndexArgs and NsxtServicechainServiceIndexOutput values.
// You can construct a concrete instance of `NsxtServicechainServiceIndexInput` via:
//
//	NsxtServicechainServiceIndexArgs{...}
type NsxtServicechainServiceIndexInput interface {
	pulumi.Input

	ToNsxtServicechainServiceIndexOutput() NsxtServicechainServiceIndexOutput
	ToNsxtServicechainServiceIndexOutputWithContext(context.Context) NsxtServicechainServiceIndexOutput
}

type NsxtServicechainServiceIndexArgs struct {
	// Service index.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Index name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reverse service index.
	ReverseIndex pulumi.IntPtrInput `pulumi:"reverseIndex"`
	// VDOM name.
	Vd pulumi.StringPtrInput `pulumi:"vd"`
}

func (NsxtServicechainServiceIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtServicechainServiceIndex)(nil)).Elem()
}

func (i NsxtServicechainServiceIndexArgs) ToNsxtServicechainServiceIndexOutput() NsxtServicechainServiceIndexOutput {
	return i.ToNsxtServicechainServiceIndexOutputWithContext(context.Background())
}

func (i NsxtServicechainServiceIndexArgs) ToNsxtServicechainServiceIndexOutputWithContext(ctx context.Context) NsxtServicechainServiceIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtServicechainServiceIndexOutput)
}

// NsxtServicechainServiceIndexArrayInput is an input type that accepts NsxtServicechainServiceIndexArray and NsxtServicechainServiceIndexArrayOutput values.
// You can construct a concrete instance of `NsxtServicechainServiceIndexArrayInput` via:
//
//	NsxtServicechainServiceIndexArray{ NsxtServicechainServiceIndexArgs{...} }
type NsxtServicechainServiceIndexArrayInput interface {
	pulumi.Input

	ToNsxtServicechainServiceIndexArrayOutput() NsxtServicechainServiceIndexArrayOutput
	ToNsxtServicechainServiceIndexArrayOutputWithContext(context.Context) NsxtServicechainServiceIndexArrayOutput
}

type NsxtServicechainServiceIndexArray []NsxtServicechainServiceIndexInput

func (NsxtServicechainServiceIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtServicechainServiceIndex)(nil)).Elem()
}

func (i NsxtServicechainServiceIndexArray) ToNsxtServicechainServiceIndexArrayOutput() NsxtServicechainServiceIndexArrayOutput {
	return i.ToNsxtServicechainServiceIndexArrayOutputWithContext(context.Background())
}

func (i NsxtServicechainServiceIndexArray) ToNsxtServicechainServiceIndexArrayOutputWithContext(ctx context.Context) NsxtServicechainServiceIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtServicechainServiceIndexArrayOutput)
}

type NsxtServicechainServiceIndexOutput struct{ *pulumi.OutputState }

func (NsxtServicechainServiceIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtServicechainServiceIndex)(nil)).Elem()
}

func (o NsxtServicechainServiceIndexOutput) ToNsxtServicechainServiceIndexOutput() NsxtServicechainServiceIndexOutput {
	return o
}

func (o NsxtServicechainServiceIndexOutput) ToNsxtServicechainServiceIndexOutputWithContext(ctx context.Context) NsxtServicechainServiceIndexOutput {
	return o
}

// Service index.
func (o NsxtServicechainServiceIndexOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtServicechainServiceIndex) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Index name.
func (o NsxtServicechainServiceIndexOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtServicechainServiceIndex) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reverse service index.
func (o NsxtServicechainServiceIndexOutput) ReverseIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtServicechainServiceIndex) *int { return v.ReverseIndex }).(pulumi.IntPtrOutput)
}

// VDOM name.
func (o NsxtServicechainServiceIndexOutput) Vd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtServicechainServiceIndex) *string { return v.Vd }).(pulumi.StringPtrOutput)
}

type NsxtServicechainServiceIndexArrayOutput struct{ *pulumi.OutputState }

func (NsxtServicechainServiceIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtServicechainServiceIndex)(nil)).Elem()
}

func (o NsxtServicechainServiceIndexArrayOutput) ToNsxtServicechainServiceIndexArrayOutput() NsxtServicechainServiceIndexArrayOutput {
	return o
}

func (o NsxtServicechainServiceIndexArrayOutput) ToNsxtServicechainServiceIndexArrayOutputWithContext(ctx context.Context) NsxtServicechainServiceIndexArrayOutput {
	return o
}

func (o NsxtServicechainServiceIndexArrayOutput) Index(i pulumi.IntInput) NsxtServicechainServiceIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtServicechainServiceIndex {
		return vs[0].([]NsxtServicechainServiceIndex)[vs[1].(int)]
	}).(NsxtServicechainServiceIndexOutput)
}

type ReportChartCategorySeries struct {
	// Category series value expression.
	Databind *string `pulumi:"databind"`
	// Font size of category-series title.
	FontSize *int `pulumi:"fontSize"`
}

// ReportChartCategorySeriesInput is an input type that accepts ReportChartCategorySeriesArgs and ReportChartCategorySeriesOutput values.
// You can construct a concrete instance of `ReportChartCategorySeriesInput` via:
//
//	ReportChartCategorySeriesArgs{...}
type ReportChartCategorySeriesInput interface {
	pulumi.Input

	ToReportChartCategorySeriesOutput() ReportChartCategorySeriesOutput
	ToReportChartCategorySeriesOutputWithContext(context.Context) ReportChartCategorySeriesOutput
}

type ReportChartCategorySeriesArgs struct {
	// Category series value expression.
	Databind pulumi.StringPtrInput `pulumi:"databind"`
	// Font size of category-series title.
	FontSize pulumi.IntPtrInput `pulumi:"fontSize"`
}

func (ReportChartCategorySeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartCategorySeries)(nil)).Elem()
}

func (i ReportChartCategorySeriesArgs) ToReportChartCategorySeriesOutput() ReportChartCategorySeriesOutput {
	return i.ToReportChartCategorySeriesOutputWithContext(context.Background())
}

func (i ReportChartCategorySeriesArgs) ToReportChartCategorySeriesOutputWithContext(ctx context.Context) ReportChartCategorySeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartCategorySeriesOutput)
}

func (i ReportChartCategorySeriesArgs) ToReportChartCategorySeriesPtrOutput() ReportChartCategorySeriesPtrOutput {
	return i.ToReportChartCategorySeriesPtrOutputWithContext(context.Background())
}

func (i ReportChartCategorySeriesArgs) ToReportChartCategorySeriesPtrOutputWithContext(ctx context.Context) ReportChartCategorySeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartCategorySeriesOutput).ToReportChartCategorySeriesPtrOutputWithContext(ctx)
}

// ReportChartCategorySeriesPtrInput is an input type that accepts ReportChartCategorySeriesArgs, ReportChartCategorySeriesPtr and ReportChartCategorySeriesPtrOutput values.
// You can construct a concrete instance of `ReportChartCategorySeriesPtrInput` via:
//
//	        ReportChartCategorySeriesArgs{...}
//
//	or:
//
//	        nil
type ReportChartCategorySeriesPtrInput interface {
	pulumi.Input

	ToReportChartCategorySeriesPtrOutput() ReportChartCategorySeriesPtrOutput
	ToReportChartCategorySeriesPtrOutputWithContext(context.Context) ReportChartCategorySeriesPtrOutput
}

type reportChartCategorySeriesPtrType ReportChartCategorySeriesArgs

func ReportChartCategorySeriesPtr(v *ReportChartCategorySeriesArgs) ReportChartCategorySeriesPtrInput {
	return (*reportChartCategorySeriesPtrType)(v)
}

func (*reportChartCategorySeriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartCategorySeries)(nil)).Elem()
}

func (i *reportChartCategorySeriesPtrType) ToReportChartCategorySeriesPtrOutput() ReportChartCategorySeriesPtrOutput {
	return i.ToReportChartCategorySeriesPtrOutputWithContext(context.Background())
}

func (i *reportChartCategorySeriesPtrType) ToReportChartCategorySeriesPtrOutputWithContext(ctx context.Context) ReportChartCategorySeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartCategorySeriesPtrOutput)
}

type ReportChartCategorySeriesOutput struct{ *pulumi.OutputState }

func (ReportChartCategorySeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartCategorySeries)(nil)).Elem()
}

func (o ReportChartCategorySeriesOutput) ToReportChartCategorySeriesOutput() ReportChartCategorySeriesOutput {
	return o
}

func (o ReportChartCategorySeriesOutput) ToReportChartCategorySeriesOutputWithContext(ctx context.Context) ReportChartCategorySeriesOutput {
	return o
}

func (o ReportChartCategorySeriesOutput) ToReportChartCategorySeriesPtrOutput() ReportChartCategorySeriesPtrOutput {
	return o.ToReportChartCategorySeriesPtrOutputWithContext(context.Background())
}

func (o ReportChartCategorySeriesOutput) ToReportChartCategorySeriesPtrOutputWithContext(ctx context.Context) ReportChartCategorySeriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportChartCategorySeries) *ReportChartCategorySeries {
		return &v
	}).(ReportChartCategorySeriesPtrOutput)
}

// Category series value expression.
func (o ReportChartCategorySeriesOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartCategorySeries) *string { return v.Databind }).(pulumi.StringPtrOutput)
}

// Font size of category-series title.
func (o ReportChartCategorySeriesOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartCategorySeries) *int { return v.FontSize }).(pulumi.IntPtrOutput)
}

type ReportChartCategorySeriesPtrOutput struct{ *pulumi.OutputState }

func (ReportChartCategorySeriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartCategorySeries)(nil)).Elem()
}

func (o ReportChartCategorySeriesPtrOutput) ToReportChartCategorySeriesPtrOutput() ReportChartCategorySeriesPtrOutput {
	return o
}

func (o ReportChartCategorySeriesPtrOutput) ToReportChartCategorySeriesPtrOutputWithContext(ctx context.Context) ReportChartCategorySeriesPtrOutput {
	return o
}

func (o ReportChartCategorySeriesPtrOutput) Elem() ReportChartCategorySeriesOutput {
	return o.ApplyT(func(v *ReportChartCategorySeries) ReportChartCategorySeries {
		if v != nil {
			return *v
		}
		var ret ReportChartCategorySeries
		return ret
	}).(ReportChartCategorySeriesOutput)
}

// Category series value expression.
func (o ReportChartCategorySeriesPtrOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartCategorySeries) *string {
		if v == nil {
			return nil
		}
		return v.Databind
	}).(pulumi.StringPtrOutput)
}

// Font size of category-series title.
func (o ReportChartCategorySeriesPtrOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartCategorySeries) *int {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(pulumi.IntPtrOutput)
}

type ReportChartColumn struct {
	// Detail unit of column.
	DetailUnit *string `pulumi:"detailUnit"`
	// Detail value of column.
	DetailValue *string `pulumi:"detailValue"`
	// Footer unit of column.
	FooterUnit *string `pulumi:"footerUnit"`
	// Footer value of column.
	FooterValue *string `pulumi:"footerValue"`
	// Display name of table header.
	HeaderValue *string `pulumi:"headerValue"`
	// ID.
	Id *int `pulumi:"id"`
	// Show detail in certain display value for certain condition. The structure of `mapping` block is documented below.
	Mappings []ReportChartColumnMapping `pulumi:"mappings"`
}

// ReportChartColumnInput is an input type that accepts ReportChartColumnArgs and ReportChartColumnOutput values.
// You can construct a concrete instance of `ReportChartColumnInput` via:
//
//	ReportChartColumnArgs{...}
type ReportChartColumnInput interface {
	pulumi.Input

	ToReportChartColumnOutput() ReportChartColumnOutput
	ToReportChartColumnOutputWithContext(context.Context) ReportChartColumnOutput
}

type ReportChartColumnArgs struct {
	// Detail unit of column.
	DetailUnit pulumi.StringPtrInput `pulumi:"detailUnit"`
	// Detail value of column.
	DetailValue pulumi.StringPtrInput `pulumi:"detailValue"`
	// Footer unit of column.
	FooterUnit pulumi.StringPtrInput `pulumi:"footerUnit"`
	// Footer value of column.
	FooterValue pulumi.StringPtrInput `pulumi:"footerValue"`
	// Display name of table header.
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Show detail in certain display value for certain condition. The structure of `mapping` block is documented below.
	Mappings ReportChartColumnMappingArrayInput `pulumi:"mappings"`
}

func (ReportChartColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartColumn)(nil)).Elem()
}

func (i ReportChartColumnArgs) ToReportChartColumnOutput() ReportChartColumnOutput {
	return i.ToReportChartColumnOutputWithContext(context.Background())
}

func (i ReportChartColumnArgs) ToReportChartColumnOutputWithContext(ctx context.Context) ReportChartColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartColumnOutput)
}

// ReportChartColumnArrayInput is an input type that accepts ReportChartColumnArray and ReportChartColumnArrayOutput values.
// You can construct a concrete instance of `ReportChartColumnArrayInput` via:
//
//	ReportChartColumnArray{ ReportChartColumnArgs{...} }
type ReportChartColumnArrayInput interface {
	pulumi.Input

	ToReportChartColumnArrayOutput() ReportChartColumnArrayOutput
	ToReportChartColumnArrayOutputWithContext(context.Context) ReportChartColumnArrayOutput
}

type ReportChartColumnArray []ReportChartColumnInput

func (ReportChartColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartColumn)(nil)).Elem()
}

func (i ReportChartColumnArray) ToReportChartColumnArrayOutput() ReportChartColumnArrayOutput {
	return i.ToReportChartColumnArrayOutputWithContext(context.Background())
}

func (i ReportChartColumnArray) ToReportChartColumnArrayOutputWithContext(ctx context.Context) ReportChartColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartColumnArrayOutput)
}

type ReportChartColumnOutput struct{ *pulumi.OutputState }

func (ReportChartColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartColumn)(nil)).Elem()
}

func (o ReportChartColumnOutput) ToReportChartColumnOutput() ReportChartColumnOutput {
	return o
}

func (o ReportChartColumnOutput) ToReportChartColumnOutputWithContext(ctx context.Context) ReportChartColumnOutput {
	return o
}

// Detail unit of column.
func (o ReportChartColumnOutput) DetailUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *string { return v.DetailUnit }).(pulumi.StringPtrOutput)
}

// Detail value of column.
func (o ReportChartColumnOutput) DetailValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *string { return v.DetailValue }).(pulumi.StringPtrOutput)
}

// Footer unit of column.
func (o ReportChartColumnOutput) FooterUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *string { return v.FooterUnit }).(pulumi.StringPtrOutput)
}

// Footer value of column.
func (o ReportChartColumnOutput) FooterValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *string { return v.FooterValue }).(pulumi.StringPtrOutput)
}

// Display name of table header.
func (o ReportChartColumnOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

// ID.
func (o ReportChartColumnOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Show detail in certain display value for certain condition. The structure of `mapping` block is documented below.
func (o ReportChartColumnOutput) Mappings() ReportChartColumnMappingArrayOutput {
	return o.ApplyT(func(v ReportChartColumn) []ReportChartColumnMapping { return v.Mappings }).(ReportChartColumnMappingArrayOutput)
}

type ReportChartColumnArrayOutput struct{ *pulumi.OutputState }

func (ReportChartColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartColumn)(nil)).Elem()
}

func (o ReportChartColumnArrayOutput) ToReportChartColumnArrayOutput() ReportChartColumnArrayOutput {
	return o
}

func (o ReportChartColumnArrayOutput) ToReportChartColumnArrayOutputWithContext(ctx context.Context) ReportChartColumnArrayOutput {
	return o
}

func (o ReportChartColumnArrayOutput) Index(i pulumi.IntInput) ReportChartColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportChartColumn {
		return vs[0].([]ReportChartColumn)[vs[1].(int)]
	}).(ReportChartColumnOutput)
}

type ReportChartColumnMapping struct {
	// Display name.
	Displayname *string `pulumi:"displayname"`
	// id
	Id *int `pulumi:"id"`
	// Comparision operater. Valid values: `none`, `greater`, `greater-equal`, `less`, `less-equal`, `equal`, `between`.
	Op *string `pulumi:"op"`
	// Value 1.
	Value1 *string `pulumi:"value1"`
	// Value 2.
	Value2 *string `pulumi:"value2"`
	// Value type. Valid values: `integer`, `string`.
	ValueType *string `pulumi:"valueType"`
}

// ReportChartColumnMappingInput is an input type that accepts ReportChartColumnMappingArgs and ReportChartColumnMappingOutput values.
// You can construct a concrete instance of `ReportChartColumnMappingInput` via:
//
//	ReportChartColumnMappingArgs{...}
type ReportChartColumnMappingInput interface {
	pulumi.Input

	ToReportChartColumnMappingOutput() ReportChartColumnMappingOutput
	ToReportChartColumnMappingOutputWithContext(context.Context) ReportChartColumnMappingOutput
}

type ReportChartColumnMappingArgs struct {
	// Display name.
	Displayname pulumi.StringPtrInput `pulumi:"displayname"`
	// id
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Comparision operater. Valid values: `none`, `greater`, `greater-equal`, `less`, `less-equal`, `equal`, `between`.
	Op pulumi.StringPtrInput `pulumi:"op"`
	// Value 1.
	Value1 pulumi.StringPtrInput `pulumi:"value1"`
	// Value 2.
	Value2 pulumi.StringPtrInput `pulumi:"value2"`
	// Value type. Valid values: `integer`, `string`.
	ValueType pulumi.StringPtrInput `pulumi:"valueType"`
}

func (ReportChartColumnMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartColumnMapping)(nil)).Elem()
}

func (i ReportChartColumnMappingArgs) ToReportChartColumnMappingOutput() ReportChartColumnMappingOutput {
	return i.ToReportChartColumnMappingOutputWithContext(context.Background())
}

func (i ReportChartColumnMappingArgs) ToReportChartColumnMappingOutputWithContext(ctx context.Context) ReportChartColumnMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartColumnMappingOutput)
}

// ReportChartColumnMappingArrayInput is an input type that accepts ReportChartColumnMappingArray and ReportChartColumnMappingArrayOutput values.
// You can construct a concrete instance of `ReportChartColumnMappingArrayInput` via:
//
//	ReportChartColumnMappingArray{ ReportChartColumnMappingArgs{...} }
type ReportChartColumnMappingArrayInput interface {
	pulumi.Input

	ToReportChartColumnMappingArrayOutput() ReportChartColumnMappingArrayOutput
	ToReportChartColumnMappingArrayOutputWithContext(context.Context) ReportChartColumnMappingArrayOutput
}

type ReportChartColumnMappingArray []ReportChartColumnMappingInput

func (ReportChartColumnMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartColumnMapping)(nil)).Elem()
}

func (i ReportChartColumnMappingArray) ToReportChartColumnMappingArrayOutput() ReportChartColumnMappingArrayOutput {
	return i.ToReportChartColumnMappingArrayOutputWithContext(context.Background())
}

func (i ReportChartColumnMappingArray) ToReportChartColumnMappingArrayOutputWithContext(ctx context.Context) ReportChartColumnMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartColumnMappingArrayOutput)
}

type ReportChartColumnMappingOutput struct{ *pulumi.OutputState }

func (ReportChartColumnMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartColumnMapping)(nil)).Elem()
}

func (o ReportChartColumnMappingOutput) ToReportChartColumnMappingOutput() ReportChartColumnMappingOutput {
	return o
}

func (o ReportChartColumnMappingOutput) ToReportChartColumnMappingOutputWithContext(ctx context.Context) ReportChartColumnMappingOutput {
	return o
}

// Display name.
func (o ReportChartColumnMappingOutput) Displayname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *string { return v.Displayname }).(pulumi.StringPtrOutput)
}

// id
func (o ReportChartColumnMappingOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Comparision operater. Valid values: `none`, `greater`, `greater-equal`, `less`, `less-equal`, `equal`, `between`.
func (o ReportChartColumnMappingOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *string { return v.Op }).(pulumi.StringPtrOutput)
}

// Value 1.
func (o ReportChartColumnMappingOutput) Value1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *string { return v.Value1 }).(pulumi.StringPtrOutput)
}

// Value 2.
func (o ReportChartColumnMappingOutput) Value2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *string { return v.Value2 }).(pulumi.StringPtrOutput)
}

// Value type. Valid values: `integer`, `string`.
func (o ReportChartColumnMappingOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *string { return v.ValueType }).(pulumi.StringPtrOutput)
}

type ReportChartColumnMappingArrayOutput struct{ *pulumi.OutputState }

func (ReportChartColumnMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartColumnMapping)(nil)).Elem()
}

func (o ReportChartColumnMappingArrayOutput) ToReportChartColumnMappingArrayOutput() ReportChartColumnMappingArrayOutput {
	return o
}

func (o ReportChartColumnMappingArrayOutput) ToReportChartColumnMappingArrayOutputWithContext(ctx context.Context) ReportChartColumnMappingArrayOutput {
	return o
}

func (o ReportChartColumnMappingArrayOutput) Index(i pulumi.IntInput) ReportChartColumnMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportChartColumnMapping {
		return vs[0].([]ReportChartColumnMapping)[vs[1].(int)]
	}).(ReportChartColumnMappingOutput)
}

type ReportChartDrillDownChart struct {
	// Drill down chart name.
	ChartName *string `pulumi:"chartName"`
	// Drill down chart ID.
	Id *int `pulumi:"id"`
	// Enable/disable this drill down chart. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// ReportChartDrillDownChartInput is an input type that accepts ReportChartDrillDownChartArgs and ReportChartDrillDownChartOutput values.
// You can construct a concrete instance of `ReportChartDrillDownChartInput` via:
//
//	ReportChartDrillDownChartArgs{...}
type ReportChartDrillDownChartInput interface {
	pulumi.Input

	ToReportChartDrillDownChartOutput() ReportChartDrillDownChartOutput
	ToReportChartDrillDownChartOutputWithContext(context.Context) ReportChartDrillDownChartOutput
}

type ReportChartDrillDownChartArgs struct {
	// Drill down chart name.
	ChartName pulumi.StringPtrInput `pulumi:"chartName"`
	// Drill down chart ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable this drill down chart. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ReportChartDrillDownChartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartDrillDownChart)(nil)).Elem()
}

func (i ReportChartDrillDownChartArgs) ToReportChartDrillDownChartOutput() ReportChartDrillDownChartOutput {
	return i.ToReportChartDrillDownChartOutputWithContext(context.Background())
}

func (i ReportChartDrillDownChartArgs) ToReportChartDrillDownChartOutputWithContext(ctx context.Context) ReportChartDrillDownChartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartDrillDownChartOutput)
}

// ReportChartDrillDownChartArrayInput is an input type that accepts ReportChartDrillDownChartArray and ReportChartDrillDownChartArrayOutput values.
// You can construct a concrete instance of `ReportChartDrillDownChartArrayInput` via:
//
//	ReportChartDrillDownChartArray{ ReportChartDrillDownChartArgs{...} }
type ReportChartDrillDownChartArrayInput interface {
	pulumi.Input

	ToReportChartDrillDownChartArrayOutput() ReportChartDrillDownChartArrayOutput
	ToReportChartDrillDownChartArrayOutputWithContext(context.Context) ReportChartDrillDownChartArrayOutput
}

type ReportChartDrillDownChartArray []ReportChartDrillDownChartInput

func (ReportChartDrillDownChartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartDrillDownChart)(nil)).Elem()
}

func (i ReportChartDrillDownChartArray) ToReportChartDrillDownChartArrayOutput() ReportChartDrillDownChartArrayOutput {
	return i.ToReportChartDrillDownChartArrayOutputWithContext(context.Background())
}

func (i ReportChartDrillDownChartArray) ToReportChartDrillDownChartArrayOutputWithContext(ctx context.Context) ReportChartDrillDownChartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartDrillDownChartArrayOutput)
}

type ReportChartDrillDownChartOutput struct{ *pulumi.OutputState }

func (ReportChartDrillDownChartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartDrillDownChart)(nil)).Elem()
}

func (o ReportChartDrillDownChartOutput) ToReportChartDrillDownChartOutput() ReportChartDrillDownChartOutput {
	return o
}

func (o ReportChartDrillDownChartOutput) ToReportChartDrillDownChartOutputWithContext(ctx context.Context) ReportChartDrillDownChartOutput {
	return o
}

// Drill down chart name.
func (o ReportChartDrillDownChartOutput) ChartName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartDrillDownChart) *string { return v.ChartName }).(pulumi.StringPtrOutput)
}

// Drill down chart ID.
func (o ReportChartDrillDownChartOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartDrillDownChart) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable this drill down chart. Valid values: `enable`, `disable`.
func (o ReportChartDrillDownChartOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartDrillDownChart) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ReportChartDrillDownChartArrayOutput struct{ *pulumi.OutputState }

func (ReportChartDrillDownChartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartDrillDownChart)(nil)).Elem()
}

func (o ReportChartDrillDownChartArrayOutput) ToReportChartDrillDownChartArrayOutput() ReportChartDrillDownChartArrayOutput {
	return o
}

func (o ReportChartDrillDownChartArrayOutput) ToReportChartDrillDownChartArrayOutputWithContext(ctx context.Context) ReportChartDrillDownChartArrayOutput {
	return o
}

func (o ReportChartDrillDownChartArrayOutput) Index(i pulumi.IntInput) ReportChartDrillDownChartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportChartDrillDownChart {
		return vs[0].([]ReportChartDrillDownChart)[vs[1].(int)]
	}).(ReportChartDrillDownChartOutput)
}

type ReportChartValueSeries struct {
	// Value series value expression.
	Databind *string `pulumi:"databind"`
}

// ReportChartValueSeriesInput is an input type that accepts ReportChartValueSeriesArgs and ReportChartValueSeriesOutput values.
// You can construct a concrete instance of `ReportChartValueSeriesInput` via:
//
//	ReportChartValueSeriesArgs{...}
type ReportChartValueSeriesInput interface {
	pulumi.Input

	ToReportChartValueSeriesOutput() ReportChartValueSeriesOutput
	ToReportChartValueSeriesOutputWithContext(context.Context) ReportChartValueSeriesOutput
}

type ReportChartValueSeriesArgs struct {
	// Value series value expression.
	Databind pulumi.StringPtrInput `pulumi:"databind"`
}

func (ReportChartValueSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartValueSeries)(nil)).Elem()
}

func (i ReportChartValueSeriesArgs) ToReportChartValueSeriesOutput() ReportChartValueSeriesOutput {
	return i.ToReportChartValueSeriesOutputWithContext(context.Background())
}

func (i ReportChartValueSeriesArgs) ToReportChartValueSeriesOutputWithContext(ctx context.Context) ReportChartValueSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartValueSeriesOutput)
}

func (i ReportChartValueSeriesArgs) ToReportChartValueSeriesPtrOutput() ReportChartValueSeriesPtrOutput {
	return i.ToReportChartValueSeriesPtrOutputWithContext(context.Background())
}

func (i ReportChartValueSeriesArgs) ToReportChartValueSeriesPtrOutputWithContext(ctx context.Context) ReportChartValueSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartValueSeriesOutput).ToReportChartValueSeriesPtrOutputWithContext(ctx)
}

// ReportChartValueSeriesPtrInput is an input type that accepts ReportChartValueSeriesArgs, ReportChartValueSeriesPtr and ReportChartValueSeriesPtrOutput values.
// You can construct a concrete instance of `ReportChartValueSeriesPtrInput` via:
//
//	        ReportChartValueSeriesArgs{...}
//
//	or:
//
//	        nil
type ReportChartValueSeriesPtrInput interface {
	pulumi.Input

	ToReportChartValueSeriesPtrOutput() ReportChartValueSeriesPtrOutput
	ToReportChartValueSeriesPtrOutputWithContext(context.Context) ReportChartValueSeriesPtrOutput
}

type reportChartValueSeriesPtrType ReportChartValueSeriesArgs

func ReportChartValueSeriesPtr(v *ReportChartValueSeriesArgs) ReportChartValueSeriesPtrInput {
	return (*reportChartValueSeriesPtrType)(v)
}

func (*reportChartValueSeriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartValueSeries)(nil)).Elem()
}

func (i *reportChartValueSeriesPtrType) ToReportChartValueSeriesPtrOutput() ReportChartValueSeriesPtrOutput {
	return i.ToReportChartValueSeriesPtrOutputWithContext(context.Background())
}

func (i *reportChartValueSeriesPtrType) ToReportChartValueSeriesPtrOutputWithContext(ctx context.Context) ReportChartValueSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartValueSeriesPtrOutput)
}

type ReportChartValueSeriesOutput struct{ *pulumi.OutputState }

func (ReportChartValueSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartValueSeries)(nil)).Elem()
}

func (o ReportChartValueSeriesOutput) ToReportChartValueSeriesOutput() ReportChartValueSeriesOutput {
	return o
}

func (o ReportChartValueSeriesOutput) ToReportChartValueSeriesOutputWithContext(ctx context.Context) ReportChartValueSeriesOutput {
	return o
}

func (o ReportChartValueSeriesOutput) ToReportChartValueSeriesPtrOutput() ReportChartValueSeriesPtrOutput {
	return o.ToReportChartValueSeriesPtrOutputWithContext(context.Background())
}

func (o ReportChartValueSeriesOutput) ToReportChartValueSeriesPtrOutputWithContext(ctx context.Context) ReportChartValueSeriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportChartValueSeries) *ReportChartValueSeries {
		return &v
	}).(ReportChartValueSeriesPtrOutput)
}

// Value series value expression.
func (o ReportChartValueSeriesOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartValueSeries) *string { return v.Databind }).(pulumi.StringPtrOutput)
}

type ReportChartValueSeriesPtrOutput struct{ *pulumi.OutputState }

func (ReportChartValueSeriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartValueSeries)(nil)).Elem()
}

func (o ReportChartValueSeriesPtrOutput) ToReportChartValueSeriesPtrOutput() ReportChartValueSeriesPtrOutput {
	return o
}

func (o ReportChartValueSeriesPtrOutput) ToReportChartValueSeriesPtrOutputWithContext(ctx context.Context) ReportChartValueSeriesPtrOutput {
	return o
}

func (o ReportChartValueSeriesPtrOutput) Elem() ReportChartValueSeriesOutput {
	return o.ApplyT(func(v *ReportChartValueSeries) ReportChartValueSeries {
		if v != nil {
			return *v
		}
		var ret ReportChartValueSeries
		return ret
	}).(ReportChartValueSeriesOutput)
}

// Value series value expression.
func (o ReportChartValueSeriesPtrOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartValueSeries) *string {
		if v == nil {
			return nil
		}
		return v.Databind
	}).(pulumi.StringPtrOutput)
}

type ReportChartXSeries struct {
	// X-series caption.
	Caption *string `pulumi:"caption"`
	// X-series caption font size.
	CaptionFontSize *int `pulumi:"captionFontSize"`
	// X-series value expression.
	Databind *string `pulumi:"databind"`
	// X-series label font size.
	FontSize *int `pulumi:"fontSize"`
	// X-series represent category or not. Valid values: `yes`, `no`.
	IsCategory *string `pulumi:"isCategory"`
	// X-series label angle. Valid values: `45-degree`, `vertical`, `horizontal`.
	LabelAngle *string `pulumi:"labelAngle"`
	// Scale increase or decrease. Valid values: `decrease`, `increase`.
	ScaleDirection *string `pulumi:"scaleDirection"`
	// Date/time format. Valid values: `YYYY-MM-DD-HH-MM`, `YYYY-MM-DD HH`, `YYYY-MM-DD`, `YYYY-MM`, `YYYY`, `HH-MM`, `MM-DD`.
	ScaleFormat *string `pulumi:"scaleFormat"`
	// Scale step.
	ScaleStep *int `pulumi:"scaleStep"`
	// Scale unit. Valid values: `minute`, `hour`, `day`, `month`, `year`.
	ScaleUnit *string `pulumi:"scaleUnit"`
	// X-series unit.
	Unit *string `pulumi:"unit"`
}

// ReportChartXSeriesInput is an input type that accepts ReportChartXSeriesArgs and ReportChartXSeriesOutput values.
// You can construct a concrete instance of `ReportChartXSeriesInput` via:
//
//	ReportChartXSeriesArgs{...}
type ReportChartXSeriesInput interface {
	pulumi.Input

	ToReportChartXSeriesOutput() ReportChartXSeriesOutput
	ToReportChartXSeriesOutputWithContext(context.Context) ReportChartXSeriesOutput
}

type ReportChartXSeriesArgs struct {
	// X-series caption.
	Caption pulumi.StringPtrInput `pulumi:"caption"`
	// X-series caption font size.
	CaptionFontSize pulumi.IntPtrInput `pulumi:"captionFontSize"`
	// X-series value expression.
	Databind pulumi.StringPtrInput `pulumi:"databind"`
	// X-series label font size.
	FontSize pulumi.IntPtrInput `pulumi:"fontSize"`
	// X-series represent category or not. Valid values: `yes`, `no`.
	IsCategory pulumi.StringPtrInput `pulumi:"isCategory"`
	// X-series label angle. Valid values: `45-degree`, `vertical`, `horizontal`.
	LabelAngle pulumi.StringPtrInput `pulumi:"labelAngle"`
	// Scale increase or decrease. Valid values: `decrease`, `increase`.
	ScaleDirection pulumi.StringPtrInput `pulumi:"scaleDirection"`
	// Date/time format. Valid values: `YYYY-MM-DD-HH-MM`, `YYYY-MM-DD HH`, `YYYY-MM-DD`, `YYYY-MM`, `YYYY`, `HH-MM`, `MM-DD`.
	ScaleFormat pulumi.StringPtrInput `pulumi:"scaleFormat"`
	// Scale step.
	ScaleStep pulumi.IntPtrInput `pulumi:"scaleStep"`
	// Scale unit. Valid values: `minute`, `hour`, `day`, `month`, `year`.
	ScaleUnit pulumi.StringPtrInput `pulumi:"scaleUnit"`
	// X-series unit.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (ReportChartXSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartXSeries)(nil)).Elem()
}

func (i ReportChartXSeriesArgs) ToReportChartXSeriesOutput() ReportChartXSeriesOutput {
	return i.ToReportChartXSeriesOutputWithContext(context.Background())
}

func (i ReportChartXSeriesArgs) ToReportChartXSeriesOutputWithContext(ctx context.Context) ReportChartXSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartXSeriesOutput)
}

func (i ReportChartXSeriesArgs) ToReportChartXSeriesPtrOutput() ReportChartXSeriesPtrOutput {
	return i.ToReportChartXSeriesPtrOutputWithContext(context.Background())
}

func (i ReportChartXSeriesArgs) ToReportChartXSeriesPtrOutputWithContext(ctx context.Context) ReportChartXSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartXSeriesOutput).ToReportChartXSeriesPtrOutputWithContext(ctx)
}

// ReportChartXSeriesPtrInput is an input type that accepts ReportChartXSeriesArgs, ReportChartXSeriesPtr and ReportChartXSeriesPtrOutput values.
// You can construct a concrete instance of `ReportChartXSeriesPtrInput` via:
//
//	        ReportChartXSeriesArgs{...}
//
//	or:
//
//	        nil
type ReportChartXSeriesPtrInput interface {
	pulumi.Input

	ToReportChartXSeriesPtrOutput() ReportChartXSeriesPtrOutput
	ToReportChartXSeriesPtrOutputWithContext(context.Context) ReportChartXSeriesPtrOutput
}

type reportChartXSeriesPtrType ReportChartXSeriesArgs

func ReportChartXSeriesPtr(v *ReportChartXSeriesArgs) ReportChartXSeriesPtrInput {
	return (*reportChartXSeriesPtrType)(v)
}

func (*reportChartXSeriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartXSeries)(nil)).Elem()
}

func (i *reportChartXSeriesPtrType) ToReportChartXSeriesPtrOutput() ReportChartXSeriesPtrOutput {
	return i.ToReportChartXSeriesPtrOutputWithContext(context.Background())
}

func (i *reportChartXSeriesPtrType) ToReportChartXSeriesPtrOutputWithContext(ctx context.Context) ReportChartXSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartXSeriesPtrOutput)
}

type ReportChartXSeriesOutput struct{ *pulumi.OutputState }

func (ReportChartXSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartXSeries)(nil)).Elem()
}

func (o ReportChartXSeriesOutput) ToReportChartXSeriesOutput() ReportChartXSeriesOutput {
	return o
}

func (o ReportChartXSeriesOutput) ToReportChartXSeriesOutputWithContext(ctx context.Context) ReportChartXSeriesOutput {
	return o
}

func (o ReportChartXSeriesOutput) ToReportChartXSeriesPtrOutput() ReportChartXSeriesPtrOutput {
	return o.ToReportChartXSeriesPtrOutputWithContext(context.Background())
}

func (o ReportChartXSeriesOutput) ToReportChartXSeriesPtrOutputWithContext(ctx context.Context) ReportChartXSeriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportChartXSeries) *ReportChartXSeries {
		return &v
	}).(ReportChartXSeriesPtrOutput)
}

// X-series caption.
func (o ReportChartXSeriesOutput) Caption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.Caption }).(pulumi.StringPtrOutput)
}

// X-series caption font size.
func (o ReportChartXSeriesOutput) CaptionFontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *int { return v.CaptionFontSize }).(pulumi.IntPtrOutput)
}

// X-series value expression.
func (o ReportChartXSeriesOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.Databind }).(pulumi.StringPtrOutput)
}

// X-series label font size.
func (o ReportChartXSeriesOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *int { return v.FontSize }).(pulumi.IntPtrOutput)
}

// X-series represent category or not. Valid values: `yes`, `no`.
func (o ReportChartXSeriesOutput) IsCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.IsCategory }).(pulumi.StringPtrOutput)
}

// X-series label angle. Valid values: `45-degree`, `vertical`, `horizontal`.
func (o ReportChartXSeriesOutput) LabelAngle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.LabelAngle }).(pulumi.StringPtrOutput)
}

// Scale increase or decrease. Valid values: `decrease`, `increase`.
func (o ReportChartXSeriesOutput) ScaleDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.ScaleDirection }).(pulumi.StringPtrOutput)
}

// Date/time format. Valid values: `YYYY-MM-DD-HH-MM`, `YYYY-MM-DD HH`, `YYYY-MM-DD`, `YYYY-MM`, `YYYY`, `HH-MM`, `MM-DD`.
func (o ReportChartXSeriesOutput) ScaleFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.ScaleFormat }).(pulumi.StringPtrOutput)
}

// Scale step.
func (o ReportChartXSeriesOutput) ScaleStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *int { return v.ScaleStep }).(pulumi.IntPtrOutput)
}

// Scale unit. Valid values: `minute`, `hour`, `day`, `month`, `year`.
func (o ReportChartXSeriesOutput) ScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.ScaleUnit }).(pulumi.StringPtrOutput)
}

// X-series unit.
func (o ReportChartXSeriesOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type ReportChartXSeriesPtrOutput struct{ *pulumi.OutputState }

func (ReportChartXSeriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartXSeries)(nil)).Elem()
}

func (o ReportChartXSeriesPtrOutput) ToReportChartXSeriesPtrOutput() ReportChartXSeriesPtrOutput {
	return o
}

func (o ReportChartXSeriesPtrOutput) ToReportChartXSeriesPtrOutputWithContext(ctx context.Context) ReportChartXSeriesPtrOutput {
	return o
}

func (o ReportChartXSeriesPtrOutput) Elem() ReportChartXSeriesOutput {
	return o.ApplyT(func(v *ReportChartXSeries) ReportChartXSeries {
		if v != nil {
			return *v
		}
		var ret ReportChartXSeries
		return ret
	}).(ReportChartXSeriesOutput)
}

// X-series caption.
func (o ReportChartXSeriesPtrOutput) Caption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.Caption
	}).(pulumi.StringPtrOutput)
}

// X-series caption font size.
func (o ReportChartXSeriesPtrOutput) CaptionFontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *int {
		if v == nil {
			return nil
		}
		return v.CaptionFontSize
	}).(pulumi.IntPtrOutput)
}

// X-series value expression.
func (o ReportChartXSeriesPtrOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.Databind
	}).(pulumi.StringPtrOutput)
}

// X-series label font size.
func (o ReportChartXSeriesPtrOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *int {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(pulumi.IntPtrOutput)
}

// X-series represent category or not. Valid values: `yes`, `no`.
func (o ReportChartXSeriesPtrOutput) IsCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.IsCategory
	}).(pulumi.StringPtrOutput)
}

// X-series label angle. Valid values: `45-degree`, `vertical`, `horizontal`.
func (o ReportChartXSeriesPtrOutput) LabelAngle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.LabelAngle
	}).(pulumi.StringPtrOutput)
}

// Scale increase or decrease. Valid values: `decrease`, `increase`.
func (o ReportChartXSeriesPtrOutput) ScaleDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDirection
	}).(pulumi.StringPtrOutput)
}

// Date/time format. Valid values: `YYYY-MM-DD-HH-MM`, `YYYY-MM-DD HH`, `YYYY-MM-DD`, `YYYY-MM`, `YYYY`, `HH-MM`, `MM-DD`.
func (o ReportChartXSeriesPtrOutput) ScaleFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.ScaleFormat
	}).(pulumi.StringPtrOutput)
}

// Scale step.
func (o ReportChartXSeriesPtrOutput) ScaleStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *int {
		if v == nil {
			return nil
		}
		return v.ScaleStep
	}).(pulumi.IntPtrOutput)
}

// Scale unit. Valid values: `minute`, `hour`, `day`, `month`, `year`.
func (o ReportChartXSeriesPtrOutput) ScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.ScaleUnit
	}).(pulumi.StringPtrOutput)
}

// X-series unit.
func (o ReportChartXSeriesPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

type ReportChartYSeries struct {
	// Y-series caption.
	Caption *string `pulumi:"caption"`
	// Y-series caption font size.
	CaptionFontSize *int `pulumi:"captionFontSize"`
	// Y-series value expression.
	Databind *string `pulumi:"databind"`
	// Extra Y-series value.
	ExtraDatabind *string `pulumi:"extraDatabind"`
	// Allow another Y-series value Valid values: `enable`, `disable`.
	ExtraY *string `pulumi:"extraY"`
	// Extra Y-series legend type/name.
	ExtraYLegend *string `pulumi:"extraYLegend"`
	// Y-series label font size.
	FontSize *int `pulumi:"fontSize"`
	// Y-series group option.
	Group *string `pulumi:"group"`
	// Y-series label angle. Valid values: `45-degree`, `vertical`, `horizontal`.
	LabelAngle *string `pulumi:"labelAngle"`
	// Y-series unit.
	Unit *string `pulumi:"unit"`
	// First Y-series legend type/name.
	YLegend *string `pulumi:"yLegend"`
}

// ReportChartYSeriesInput is an input type that accepts ReportChartYSeriesArgs and ReportChartYSeriesOutput values.
// You can construct a concrete instance of `ReportChartYSeriesInput` via:
//
//	ReportChartYSeriesArgs{...}
type ReportChartYSeriesInput interface {
	pulumi.Input

	ToReportChartYSeriesOutput() ReportChartYSeriesOutput
	ToReportChartYSeriesOutputWithContext(context.Context) ReportChartYSeriesOutput
}

type ReportChartYSeriesArgs struct {
	// Y-series caption.
	Caption pulumi.StringPtrInput `pulumi:"caption"`
	// Y-series caption font size.
	CaptionFontSize pulumi.IntPtrInput `pulumi:"captionFontSize"`
	// Y-series value expression.
	Databind pulumi.StringPtrInput `pulumi:"databind"`
	// Extra Y-series value.
	ExtraDatabind pulumi.StringPtrInput `pulumi:"extraDatabind"`
	// Allow another Y-series value Valid values: `enable`, `disable`.
	ExtraY pulumi.StringPtrInput `pulumi:"extraY"`
	// Extra Y-series legend type/name.
	ExtraYLegend pulumi.StringPtrInput `pulumi:"extraYLegend"`
	// Y-series label font size.
	FontSize pulumi.IntPtrInput `pulumi:"fontSize"`
	// Y-series group option.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// Y-series label angle. Valid values: `45-degree`, `vertical`, `horizontal`.
	LabelAngle pulumi.StringPtrInput `pulumi:"labelAngle"`
	// Y-series unit.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// First Y-series legend type/name.
	YLegend pulumi.StringPtrInput `pulumi:"yLegend"`
}

func (ReportChartYSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartYSeries)(nil)).Elem()
}

func (i ReportChartYSeriesArgs) ToReportChartYSeriesOutput() ReportChartYSeriesOutput {
	return i.ToReportChartYSeriesOutputWithContext(context.Background())
}

func (i ReportChartYSeriesArgs) ToReportChartYSeriesOutputWithContext(ctx context.Context) ReportChartYSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartYSeriesOutput)
}

func (i ReportChartYSeriesArgs) ToReportChartYSeriesPtrOutput() ReportChartYSeriesPtrOutput {
	return i.ToReportChartYSeriesPtrOutputWithContext(context.Background())
}

func (i ReportChartYSeriesArgs) ToReportChartYSeriesPtrOutputWithContext(ctx context.Context) ReportChartYSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartYSeriesOutput).ToReportChartYSeriesPtrOutputWithContext(ctx)
}

// ReportChartYSeriesPtrInput is an input type that accepts ReportChartYSeriesArgs, ReportChartYSeriesPtr and ReportChartYSeriesPtrOutput values.
// You can construct a concrete instance of `ReportChartYSeriesPtrInput` via:
//
//	        ReportChartYSeriesArgs{...}
//
//	or:
//
//	        nil
type ReportChartYSeriesPtrInput interface {
	pulumi.Input

	ToReportChartYSeriesPtrOutput() ReportChartYSeriesPtrOutput
	ToReportChartYSeriesPtrOutputWithContext(context.Context) ReportChartYSeriesPtrOutput
}

type reportChartYSeriesPtrType ReportChartYSeriesArgs

func ReportChartYSeriesPtr(v *ReportChartYSeriesArgs) ReportChartYSeriesPtrInput {
	return (*reportChartYSeriesPtrType)(v)
}

func (*reportChartYSeriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartYSeries)(nil)).Elem()
}

func (i *reportChartYSeriesPtrType) ToReportChartYSeriesPtrOutput() ReportChartYSeriesPtrOutput {
	return i.ToReportChartYSeriesPtrOutputWithContext(context.Background())
}

func (i *reportChartYSeriesPtrType) ToReportChartYSeriesPtrOutputWithContext(ctx context.Context) ReportChartYSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartYSeriesPtrOutput)
}

type ReportChartYSeriesOutput struct{ *pulumi.OutputState }

func (ReportChartYSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartYSeries)(nil)).Elem()
}

func (o ReportChartYSeriesOutput) ToReportChartYSeriesOutput() ReportChartYSeriesOutput {
	return o
}

func (o ReportChartYSeriesOutput) ToReportChartYSeriesOutputWithContext(ctx context.Context) ReportChartYSeriesOutput {
	return o
}

func (o ReportChartYSeriesOutput) ToReportChartYSeriesPtrOutput() ReportChartYSeriesPtrOutput {
	return o.ToReportChartYSeriesPtrOutputWithContext(context.Background())
}

func (o ReportChartYSeriesOutput) ToReportChartYSeriesPtrOutputWithContext(ctx context.Context) ReportChartYSeriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportChartYSeries) *ReportChartYSeries {
		return &v
	}).(ReportChartYSeriesPtrOutput)
}

// Y-series caption.
func (o ReportChartYSeriesOutput) Caption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.Caption }).(pulumi.StringPtrOutput)
}

// Y-series caption font size.
func (o ReportChartYSeriesOutput) CaptionFontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *int { return v.CaptionFontSize }).(pulumi.IntPtrOutput)
}

// Y-series value expression.
func (o ReportChartYSeriesOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.Databind }).(pulumi.StringPtrOutput)
}

// Extra Y-series value.
func (o ReportChartYSeriesOutput) ExtraDatabind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.ExtraDatabind }).(pulumi.StringPtrOutput)
}

// Allow another Y-series value Valid values: `enable`, `disable`.
func (o ReportChartYSeriesOutput) ExtraY() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.ExtraY }).(pulumi.StringPtrOutput)
}

// Extra Y-series legend type/name.
func (o ReportChartYSeriesOutput) ExtraYLegend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.ExtraYLegend }).(pulumi.StringPtrOutput)
}

// Y-series label font size.
func (o ReportChartYSeriesOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *int { return v.FontSize }).(pulumi.IntPtrOutput)
}

// Y-series group option.
func (o ReportChartYSeriesOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// Y-series label angle. Valid values: `45-degree`, `vertical`, `horizontal`.
func (o ReportChartYSeriesOutput) LabelAngle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.LabelAngle }).(pulumi.StringPtrOutput)
}

// Y-series unit.
func (o ReportChartYSeriesOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// First Y-series legend type/name.
func (o ReportChartYSeriesOutput) YLegend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.YLegend }).(pulumi.StringPtrOutput)
}

type ReportChartYSeriesPtrOutput struct{ *pulumi.OutputState }

func (ReportChartYSeriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartYSeries)(nil)).Elem()
}

func (o ReportChartYSeriesPtrOutput) ToReportChartYSeriesPtrOutput() ReportChartYSeriesPtrOutput {
	return o
}

func (o ReportChartYSeriesPtrOutput) ToReportChartYSeriesPtrOutputWithContext(ctx context.Context) ReportChartYSeriesPtrOutput {
	return o
}

func (o ReportChartYSeriesPtrOutput) Elem() ReportChartYSeriesOutput {
	return o.ApplyT(func(v *ReportChartYSeries) ReportChartYSeries {
		if v != nil {
			return *v
		}
		var ret ReportChartYSeries
		return ret
	}).(ReportChartYSeriesOutput)
}

// Y-series caption.
func (o ReportChartYSeriesPtrOutput) Caption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.Caption
	}).(pulumi.StringPtrOutput)
}

// Y-series caption font size.
func (o ReportChartYSeriesPtrOutput) CaptionFontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *int {
		if v == nil {
			return nil
		}
		return v.CaptionFontSize
	}).(pulumi.IntPtrOutput)
}

// Y-series value expression.
func (o ReportChartYSeriesPtrOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.Databind
	}).(pulumi.StringPtrOutput)
}

// Extra Y-series value.
func (o ReportChartYSeriesPtrOutput) ExtraDatabind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.ExtraDatabind
	}).(pulumi.StringPtrOutput)
}

// Allow another Y-series value Valid values: `enable`, `disable`.
func (o ReportChartYSeriesPtrOutput) ExtraY() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.ExtraY
	}).(pulumi.StringPtrOutput)
}

// Extra Y-series legend type/name.
func (o ReportChartYSeriesPtrOutput) ExtraYLegend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.ExtraYLegend
	}).(pulumi.StringPtrOutput)
}

// Y-series label font size.
func (o ReportChartYSeriesPtrOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *int {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(pulumi.IntPtrOutput)
}

// Y-series group option.
func (o ReportChartYSeriesPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// Y-series label angle. Valid values: `45-degree`, `vertical`, `horizontal`.
func (o ReportChartYSeriesPtrOutput) LabelAngle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.LabelAngle
	}).(pulumi.StringPtrOutput)
}

// Y-series unit.
func (o ReportChartYSeriesPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// First Y-series legend type/name.
func (o ReportChartYSeriesPtrOutput) YLegend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.YLegend
	}).(pulumi.StringPtrOutput)
}

type ReportDatasetField struct {
	// Display name.
	Displayname *string `pulumi:"displayname"`
	// Field ID (1 to number of columns in SQL result).
	Id *int `pulumi:"id"`
	// Name.
	Name *string `pulumi:"name"`
	// Field type. Valid values: `text`, `integer`, `double`.
	Type *string `pulumi:"type"`
}

// ReportDatasetFieldInput is an input type that accepts ReportDatasetFieldArgs and ReportDatasetFieldOutput values.
// You can construct a concrete instance of `ReportDatasetFieldInput` via:
//
//	ReportDatasetFieldArgs{...}
type ReportDatasetFieldInput interface {
	pulumi.Input

	ToReportDatasetFieldOutput() ReportDatasetFieldOutput
	ToReportDatasetFieldOutputWithContext(context.Context) ReportDatasetFieldOutput
}

type ReportDatasetFieldArgs struct {
	// Display name.
	Displayname pulumi.StringPtrInput `pulumi:"displayname"`
	// Field ID (1 to number of columns in SQL result).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Field type. Valid values: `text`, `integer`, `double`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReportDatasetFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDatasetField)(nil)).Elem()
}

func (i ReportDatasetFieldArgs) ToReportDatasetFieldOutput() ReportDatasetFieldOutput {
	return i.ToReportDatasetFieldOutputWithContext(context.Background())
}

func (i ReportDatasetFieldArgs) ToReportDatasetFieldOutputWithContext(ctx context.Context) ReportDatasetFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDatasetFieldOutput)
}

// ReportDatasetFieldArrayInput is an input type that accepts ReportDatasetFieldArray and ReportDatasetFieldArrayOutput values.
// You can construct a concrete instance of `ReportDatasetFieldArrayInput` via:
//
//	ReportDatasetFieldArray{ ReportDatasetFieldArgs{...} }
type ReportDatasetFieldArrayInput interface {
	pulumi.Input

	ToReportDatasetFieldArrayOutput() ReportDatasetFieldArrayOutput
	ToReportDatasetFieldArrayOutputWithContext(context.Context) ReportDatasetFieldArrayOutput
}

type ReportDatasetFieldArray []ReportDatasetFieldInput

func (ReportDatasetFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportDatasetField)(nil)).Elem()
}

func (i ReportDatasetFieldArray) ToReportDatasetFieldArrayOutput() ReportDatasetFieldArrayOutput {
	return i.ToReportDatasetFieldArrayOutputWithContext(context.Background())
}

func (i ReportDatasetFieldArray) ToReportDatasetFieldArrayOutputWithContext(ctx context.Context) ReportDatasetFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDatasetFieldArrayOutput)
}

type ReportDatasetFieldOutput struct{ *pulumi.OutputState }

func (ReportDatasetFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDatasetField)(nil)).Elem()
}

func (o ReportDatasetFieldOutput) ToReportDatasetFieldOutput() ReportDatasetFieldOutput {
	return o
}

func (o ReportDatasetFieldOutput) ToReportDatasetFieldOutputWithContext(ctx context.Context) ReportDatasetFieldOutput {
	return o
}

// Display name.
func (o ReportDatasetFieldOutput) Displayname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetField) *string { return v.Displayname }).(pulumi.StringPtrOutput)
}

// Field ID (1 to number of columns in SQL result).
func (o ReportDatasetFieldOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportDatasetField) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Name.
func (o ReportDatasetFieldOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetField) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Field type. Valid values: `text`, `integer`, `double`.
func (o ReportDatasetFieldOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetField) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReportDatasetFieldArrayOutput struct{ *pulumi.OutputState }

func (ReportDatasetFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportDatasetField)(nil)).Elem()
}

func (o ReportDatasetFieldArrayOutput) ToReportDatasetFieldArrayOutput() ReportDatasetFieldArrayOutput {
	return o
}

func (o ReportDatasetFieldArrayOutput) ToReportDatasetFieldArrayOutputWithContext(ctx context.Context) ReportDatasetFieldArrayOutput {
	return o
}

func (o ReportDatasetFieldArrayOutput) Index(i pulumi.IntInput) ReportDatasetFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportDatasetField {
		return vs[0].([]ReportDatasetField)[vs[1].(int)]
	}).(ReportDatasetFieldOutput)
}

type ReportDatasetParameter struct {
	// Data type. Valid values: `text`, `integer`, `double`, `long-integer`, `date-time`.
	DataType *string `pulumi:"dataType"`
	// Display name.
	DisplayName *string `pulumi:"displayName"`
	// SQL field name.
	Field *string `pulumi:"field"`
	// Parameter ID (1 to number of columns in SQL result).
	Id *int `pulumi:"id"`
}

// ReportDatasetParameterInput is an input type that accepts ReportDatasetParameterArgs and ReportDatasetParameterOutput values.
// You can construct a concrete instance of `ReportDatasetParameterInput` via:
//
//	ReportDatasetParameterArgs{...}
type ReportDatasetParameterInput interface {
	pulumi.Input

	ToReportDatasetParameterOutput() ReportDatasetParameterOutput
	ToReportDatasetParameterOutputWithContext(context.Context) ReportDatasetParameterOutput
}

type ReportDatasetParameterArgs struct {
	// Data type. Valid values: `text`, `integer`, `double`, `long-integer`, `date-time`.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// Display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// SQL field name.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// Parameter ID (1 to number of columns in SQL result).
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ReportDatasetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDatasetParameter)(nil)).Elem()
}

func (i ReportDatasetParameterArgs) ToReportDatasetParameterOutput() ReportDatasetParameterOutput {
	return i.ToReportDatasetParameterOutputWithContext(context.Background())
}

func (i ReportDatasetParameterArgs) ToReportDatasetParameterOutputWithContext(ctx context.Context) ReportDatasetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDatasetParameterOutput)
}

// ReportDatasetParameterArrayInput is an input type that accepts ReportDatasetParameterArray and ReportDatasetParameterArrayOutput values.
// You can construct a concrete instance of `ReportDatasetParameterArrayInput` via:
//
//	ReportDatasetParameterArray{ ReportDatasetParameterArgs{...} }
type ReportDatasetParameterArrayInput interface {
	pulumi.Input

	ToReportDatasetParameterArrayOutput() ReportDatasetParameterArrayOutput
	ToReportDatasetParameterArrayOutputWithContext(context.Context) ReportDatasetParameterArrayOutput
}

type ReportDatasetParameterArray []ReportDatasetParameterInput

func (ReportDatasetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportDatasetParameter)(nil)).Elem()
}

func (i ReportDatasetParameterArray) ToReportDatasetParameterArrayOutput() ReportDatasetParameterArrayOutput {
	return i.ToReportDatasetParameterArrayOutputWithContext(context.Background())
}

func (i ReportDatasetParameterArray) ToReportDatasetParameterArrayOutputWithContext(ctx context.Context) ReportDatasetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDatasetParameterArrayOutput)
}

type ReportDatasetParameterOutput struct{ *pulumi.OutputState }

func (ReportDatasetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDatasetParameter)(nil)).Elem()
}

func (o ReportDatasetParameterOutput) ToReportDatasetParameterOutput() ReportDatasetParameterOutput {
	return o
}

func (o ReportDatasetParameterOutput) ToReportDatasetParameterOutputWithContext(ctx context.Context) ReportDatasetParameterOutput {
	return o
}

// Data type. Valid values: `text`, `integer`, `double`, `long-integer`, `date-time`.
func (o ReportDatasetParameterOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetParameter) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// Display name.
func (o ReportDatasetParameterOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetParameter) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// SQL field name.
func (o ReportDatasetParameterOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetParameter) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// Parameter ID (1 to number of columns in SQL result).
func (o ReportDatasetParameterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportDatasetParameter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ReportDatasetParameterArrayOutput struct{ *pulumi.OutputState }

func (ReportDatasetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportDatasetParameter)(nil)).Elem()
}

func (o ReportDatasetParameterArrayOutput) ToReportDatasetParameterArrayOutput() ReportDatasetParameterArrayOutput {
	return o
}

func (o ReportDatasetParameterArrayOutput) ToReportDatasetParameterArrayOutputWithContext(ctx context.Context) ReportDatasetParameterArrayOutput {
	return o
}

func (o ReportDatasetParameterArrayOutput) Index(i pulumi.IntInput) ReportDatasetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportDatasetParameter {
		return vs[0].([]ReportDatasetParameter)[vs[1].(int)]
	}).(ReportDatasetParameterOutput)
}

type ReportLayoutBodyItem struct {
	// Report item chart name.
	Chart *string `pulumi:"chart"`
	// Report chart options. Valid values: `include-no-data`, `hide-title`, `show-caption`.
	ChartOptions *string `pulumi:"chartOptions"`
	// Report section column number.
	Column *int `pulumi:"column"`
	// Report item text content.
	Content *string `pulumi:"content"`
	// Description.
	Description *string `pulumi:"description"`
	// Control how drill down charts are shown.
	DrillDownItems *string `pulumi:"drillDownItems"`
	// Control whether keys from the parent being combined or not.
	DrillDownTypes *string `pulumi:"drillDownTypes"`
	// Enable/disable hide item in report. Valid values: `enable`, `disable`.
	Hide *string `pulumi:"hide"`
	// Report item ID.
	Id *int `pulumi:"id"`
	// Report item image file name.
	ImgSrc *string `pulumi:"imgSrc"`
	// Report item list component. Valid values: `bullet`, `numbered`.
	ListComponent *string `pulumi:"listComponent"`
	// Configure report list item. The structure of `list` block is documented below.
	Lists []ReportLayoutBodyItemList `pulumi:"lists"`
	// Report item miscellaneous component. Valid values: `hline`, `page-break`, `column-break`, `section-start`.
	MiscComponent *string `pulumi:"miscComponent"`
	// Parameters. The structure of `parameters` block is documented below.
	Parameters []ReportLayoutBodyItemParameter `pulumi:"parameters"`
	// Report item style.
	Style *string `pulumi:"style"`
	// Table chart caption style.
	TableCaptionStyle *string `pulumi:"tableCaptionStyle"`
	// Report item table column widths.
	TableColumnWidths *string `pulumi:"tableColumnWidths"`
	// Table chart even row style.
	TableEvenRowStyle *string `pulumi:"tableEvenRowStyle"`
	// Table chart head style.
	TableHeadStyle *string `pulumi:"tableHeadStyle"`
	// Table chart odd row style.
	TableOddRowStyle *string `pulumi:"tableOddRowStyle"`
	// Report item text component. Valid values: `text`, `heading1`, `heading2`, `heading3`.
	TextComponent *string `pulumi:"textComponent"`
	// Report section title.
	Title *string `pulumi:"title"`
	// Value of top.
	TopN *int `pulumi:"topN"`
	// Report item type. Valid values: `text`, `image`, `chart`, `misc`.
	Type *string `pulumi:"type"`
}

// ReportLayoutBodyItemInput is an input type that accepts ReportLayoutBodyItemArgs and ReportLayoutBodyItemOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemInput` via:
//
//	ReportLayoutBodyItemArgs{...}
type ReportLayoutBodyItemInput interface {
	pulumi.Input

	ToReportLayoutBodyItemOutput() ReportLayoutBodyItemOutput
	ToReportLayoutBodyItemOutputWithContext(context.Context) ReportLayoutBodyItemOutput
}

type ReportLayoutBodyItemArgs struct {
	// Report item chart name.
	Chart pulumi.StringPtrInput `pulumi:"chart"`
	// Report chart options. Valid values: `include-no-data`, `hide-title`, `show-caption`.
	ChartOptions pulumi.StringPtrInput `pulumi:"chartOptions"`
	// Report section column number.
	Column pulumi.IntPtrInput `pulumi:"column"`
	// Report item text content.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Control how drill down charts are shown.
	DrillDownItems pulumi.StringPtrInput `pulumi:"drillDownItems"`
	// Control whether keys from the parent being combined or not.
	DrillDownTypes pulumi.StringPtrInput `pulumi:"drillDownTypes"`
	// Enable/disable hide item in report. Valid values: `enable`, `disable`.
	Hide pulumi.StringPtrInput `pulumi:"hide"`
	// Report item ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Report item image file name.
	ImgSrc pulumi.StringPtrInput `pulumi:"imgSrc"`
	// Report item list component. Valid values: `bullet`, `numbered`.
	ListComponent pulumi.StringPtrInput `pulumi:"listComponent"`
	// Configure report list item. The structure of `list` block is documented below.
	Lists ReportLayoutBodyItemListArrayInput `pulumi:"lists"`
	// Report item miscellaneous component. Valid values: `hline`, `page-break`, `column-break`, `section-start`.
	MiscComponent pulumi.StringPtrInput `pulumi:"miscComponent"`
	// Parameters. The structure of `parameters` block is documented below.
	Parameters ReportLayoutBodyItemParameterArrayInput `pulumi:"parameters"`
	// Report item style.
	Style pulumi.StringPtrInput `pulumi:"style"`
	// Table chart caption style.
	TableCaptionStyle pulumi.StringPtrInput `pulumi:"tableCaptionStyle"`
	// Report item table column widths.
	TableColumnWidths pulumi.StringPtrInput `pulumi:"tableColumnWidths"`
	// Table chart even row style.
	TableEvenRowStyle pulumi.StringPtrInput `pulumi:"tableEvenRowStyle"`
	// Table chart head style.
	TableHeadStyle pulumi.StringPtrInput `pulumi:"tableHeadStyle"`
	// Table chart odd row style.
	TableOddRowStyle pulumi.StringPtrInput `pulumi:"tableOddRowStyle"`
	// Report item text component. Valid values: `text`, `heading1`, `heading2`, `heading3`.
	TextComponent pulumi.StringPtrInput `pulumi:"textComponent"`
	// Report section title.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// Value of top.
	TopN pulumi.IntPtrInput `pulumi:"topN"`
	// Report item type. Valid values: `text`, `image`, `chart`, `misc`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReportLayoutBodyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItem)(nil)).Elem()
}

func (i ReportLayoutBodyItemArgs) ToReportLayoutBodyItemOutput() ReportLayoutBodyItemOutput {
	return i.ToReportLayoutBodyItemOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemArgs) ToReportLayoutBodyItemOutputWithContext(ctx context.Context) ReportLayoutBodyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemOutput)
}

// ReportLayoutBodyItemArrayInput is an input type that accepts ReportLayoutBodyItemArray and ReportLayoutBodyItemArrayOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemArrayInput` via:
//
//	ReportLayoutBodyItemArray{ ReportLayoutBodyItemArgs{...} }
type ReportLayoutBodyItemArrayInput interface {
	pulumi.Input

	ToReportLayoutBodyItemArrayOutput() ReportLayoutBodyItemArrayOutput
	ToReportLayoutBodyItemArrayOutputWithContext(context.Context) ReportLayoutBodyItemArrayOutput
}

type ReportLayoutBodyItemArray []ReportLayoutBodyItemInput

func (ReportLayoutBodyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItem)(nil)).Elem()
}

func (i ReportLayoutBodyItemArray) ToReportLayoutBodyItemArrayOutput() ReportLayoutBodyItemArrayOutput {
	return i.ToReportLayoutBodyItemArrayOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemArray) ToReportLayoutBodyItemArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemArrayOutput)
}

type ReportLayoutBodyItemOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItem)(nil)).Elem()
}

func (o ReportLayoutBodyItemOutput) ToReportLayoutBodyItemOutput() ReportLayoutBodyItemOutput {
	return o
}

func (o ReportLayoutBodyItemOutput) ToReportLayoutBodyItemOutputWithContext(ctx context.Context) ReportLayoutBodyItemOutput {
	return o
}

// Report item chart name.
func (o ReportLayoutBodyItemOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

// Report chart options. Valid values: `include-no-data`, `hide-title`, `show-caption`.
func (o ReportLayoutBodyItemOutput) ChartOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.ChartOptions }).(pulumi.StringPtrOutput)
}

// Report section column number.
func (o ReportLayoutBodyItemOutput) Column() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *int { return v.Column }).(pulumi.IntPtrOutput)
}

// Report item text content.
func (o ReportLayoutBodyItemOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Description.
func (o ReportLayoutBodyItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Control how drill down charts are shown.
func (o ReportLayoutBodyItemOutput) DrillDownItems() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.DrillDownItems }).(pulumi.StringPtrOutput)
}

// Control whether keys from the parent being combined or not.
func (o ReportLayoutBodyItemOutput) DrillDownTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.DrillDownTypes }).(pulumi.StringPtrOutput)
}

// Enable/disable hide item in report. Valid values: `enable`, `disable`.
func (o ReportLayoutBodyItemOutput) Hide() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Hide }).(pulumi.StringPtrOutput)
}

// Report item ID.
func (o ReportLayoutBodyItemOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Report item image file name.
func (o ReportLayoutBodyItemOutput) ImgSrc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.ImgSrc }).(pulumi.StringPtrOutput)
}

// Report item list component. Valid values: `bullet`, `numbered`.
func (o ReportLayoutBodyItemOutput) ListComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.ListComponent }).(pulumi.StringPtrOutput)
}

// Configure report list item. The structure of `list` block is documented below.
func (o ReportLayoutBodyItemOutput) Lists() ReportLayoutBodyItemListArrayOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) []ReportLayoutBodyItemList { return v.Lists }).(ReportLayoutBodyItemListArrayOutput)
}

// Report item miscellaneous component. Valid values: `hline`, `page-break`, `column-break`, `section-start`.
func (o ReportLayoutBodyItemOutput) MiscComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.MiscComponent }).(pulumi.StringPtrOutput)
}

// Parameters. The structure of `parameters` block is documented below.
func (o ReportLayoutBodyItemOutput) Parameters() ReportLayoutBodyItemParameterArrayOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) []ReportLayoutBodyItemParameter { return v.Parameters }).(ReportLayoutBodyItemParameterArrayOutput)
}

// Report item style.
func (o ReportLayoutBodyItemOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Style }).(pulumi.StringPtrOutput)
}

// Table chart caption style.
func (o ReportLayoutBodyItemOutput) TableCaptionStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TableCaptionStyle }).(pulumi.StringPtrOutput)
}

// Report item table column widths.
func (o ReportLayoutBodyItemOutput) TableColumnWidths() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TableColumnWidths }).(pulumi.StringPtrOutput)
}

// Table chart even row style.
func (o ReportLayoutBodyItemOutput) TableEvenRowStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TableEvenRowStyle }).(pulumi.StringPtrOutput)
}

// Table chart head style.
func (o ReportLayoutBodyItemOutput) TableHeadStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TableHeadStyle }).(pulumi.StringPtrOutput)
}

// Table chart odd row style.
func (o ReportLayoutBodyItemOutput) TableOddRowStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TableOddRowStyle }).(pulumi.StringPtrOutput)
}

// Report item text component. Valid values: `text`, `heading1`, `heading2`, `heading3`.
func (o ReportLayoutBodyItemOutput) TextComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TextComponent }).(pulumi.StringPtrOutput)
}

// Report section title.
func (o ReportLayoutBodyItemOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Value of top.
func (o ReportLayoutBodyItemOutput) TopN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *int { return v.TopN }).(pulumi.IntPtrOutput)
}

// Report item type. Valid values: `text`, `image`, `chart`, `misc`.
func (o ReportLayoutBodyItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReportLayoutBodyItemArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItem)(nil)).Elem()
}

func (o ReportLayoutBodyItemArrayOutput) ToReportLayoutBodyItemArrayOutput() ReportLayoutBodyItemArrayOutput {
	return o
}

func (o ReportLayoutBodyItemArrayOutput) ToReportLayoutBodyItemArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemArrayOutput {
	return o
}

func (o ReportLayoutBodyItemArrayOutput) Index(i pulumi.IntInput) ReportLayoutBodyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportLayoutBodyItem {
		return vs[0].([]ReportLayoutBodyItem)[vs[1].(int)]
	}).(ReportLayoutBodyItemOutput)
}

type ReportLayoutBodyItemList struct {
	// List entry content.
	Content *string `pulumi:"content"`
	// List entry ID.
	Id *int `pulumi:"id"`
}

// ReportLayoutBodyItemListInput is an input type that accepts ReportLayoutBodyItemListArgs and ReportLayoutBodyItemListOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemListInput` via:
//
//	ReportLayoutBodyItemListArgs{...}
type ReportLayoutBodyItemListInput interface {
	pulumi.Input

	ToReportLayoutBodyItemListOutput() ReportLayoutBodyItemListOutput
	ToReportLayoutBodyItemListOutputWithContext(context.Context) ReportLayoutBodyItemListOutput
}

type ReportLayoutBodyItemListArgs struct {
	// List entry content.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// List entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ReportLayoutBodyItemListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItemList)(nil)).Elem()
}

func (i ReportLayoutBodyItemListArgs) ToReportLayoutBodyItemListOutput() ReportLayoutBodyItemListOutput {
	return i.ToReportLayoutBodyItemListOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemListArgs) ToReportLayoutBodyItemListOutputWithContext(ctx context.Context) ReportLayoutBodyItemListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemListOutput)
}

// ReportLayoutBodyItemListArrayInput is an input type that accepts ReportLayoutBodyItemListArray and ReportLayoutBodyItemListArrayOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemListArrayInput` via:
//
//	ReportLayoutBodyItemListArray{ ReportLayoutBodyItemListArgs{...} }
type ReportLayoutBodyItemListArrayInput interface {
	pulumi.Input

	ToReportLayoutBodyItemListArrayOutput() ReportLayoutBodyItemListArrayOutput
	ToReportLayoutBodyItemListArrayOutputWithContext(context.Context) ReportLayoutBodyItemListArrayOutput
}

type ReportLayoutBodyItemListArray []ReportLayoutBodyItemListInput

func (ReportLayoutBodyItemListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItemList)(nil)).Elem()
}

func (i ReportLayoutBodyItemListArray) ToReportLayoutBodyItemListArrayOutput() ReportLayoutBodyItemListArrayOutput {
	return i.ToReportLayoutBodyItemListArrayOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemListArray) ToReportLayoutBodyItemListArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemListArrayOutput)
}

type ReportLayoutBodyItemListOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItemList)(nil)).Elem()
}

func (o ReportLayoutBodyItemListOutput) ToReportLayoutBodyItemListOutput() ReportLayoutBodyItemListOutput {
	return o
}

func (o ReportLayoutBodyItemListOutput) ToReportLayoutBodyItemListOutputWithContext(ctx context.Context) ReportLayoutBodyItemListOutput {
	return o
}

// List entry content.
func (o ReportLayoutBodyItemListOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItemList) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// List entry ID.
func (o ReportLayoutBodyItemListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItemList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ReportLayoutBodyItemListArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItemList)(nil)).Elem()
}

func (o ReportLayoutBodyItemListArrayOutput) ToReportLayoutBodyItemListArrayOutput() ReportLayoutBodyItemListArrayOutput {
	return o
}

func (o ReportLayoutBodyItemListArrayOutput) ToReportLayoutBodyItemListArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemListArrayOutput {
	return o
}

func (o ReportLayoutBodyItemListArrayOutput) Index(i pulumi.IntInput) ReportLayoutBodyItemListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportLayoutBodyItemList {
		return vs[0].([]ReportLayoutBodyItemList)[vs[1].(int)]
	}).(ReportLayoutBodyItemListOutput)
}

type ReportLayoutBodyItemParameter struct {
	// ID.
	Id *int `pulumi:"id"`
	// Field name that match field of parameters defined in dataset.
	Name *string `pulumi:"name"`
	// Value to replace corresponding field of parameters defined in dataset.
	Value *string `pulumi:"value"`
}

// ReportLayoutBodyItemParameterInput is an input type that accepts ReportLayoutBodyItemParameterArgs and ReportLayoutBodyItemParameterOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemParameterInput` via:
//
//	ReportLayoutBodyItemParameterArgs{...}
type ReportLayoutBodyItemParameterInput interface {
	pulumi.Input

	ToReportLayoutBodyItemParameterOutput() ReportLayoutBodyItemParameterOutput
	ToReportLayoutBodyItemParameterOutputWithContext(context.Context) ReportLayoutBodyItemParameterOutput
}

type ReportLayoutBodyItemParameterArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Field name that match field of parameters defined in dataset.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value to replace corresponding field of parameters defined in dataset.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ReportLayoutBodyItemParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItemParameter)(nil)).Elem()
}

func (i ReportLayoutBodyItemParameterArgs) ToReportLayoutBodyItemParameterOutput() ReportLayoutBodyItemParameterOutput {
	return i.ToReportLayoutBodyItemParameterOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemParameterArgs) ToReportLayoutBodyItemParameterOutputWithContext(ctx context.Context) ReportLayoutBodyItemParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemParameterOutput)
}

// ReportLayoutBodyItemParameterArrayInput is an input type that accepts ReportLayoutBodyItemParameterArray and ReportLayoutBodyItemParameterArrayOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemParameterArrayInput` via:
//
//	ReportLayoutBodyItemParameterArray{ ReportLayoutBodyItemParameterArgs{...} }
type ReportLayoutBodyItemParameterArrayInput interface {
	pulumi.Input

	ToReportLayoutBodyItemParameterArrayOutput() ReportLayoutBodyItemParameterArrayOutput
	ToReportLayoutBodyItemParameterArrayOutputWithContext(context.Context) ReportLayoutBodyItemParameterArrayOutput
}

type ReportLayoutBodyItemParameterArray []ReportLayoutBodyItemParameterInput

func (ReportLayoutBodyItemParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItemParameter)(nil)).Elem()
}

func (i ReportLayoutBodyItemParameterArray) ToReportLayoutBodyItemParameterArrayOutput() ReportLayoutBodyItemParameterArrayOutput {
	return i.ToReportLayoutBodyItemParameterArrayOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemParameterArray) ToReportLayoutBodyItemParameterArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemParameterArrayOutput)
}

type ReportLayoutBodyItemParameterOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItemParameter)(nil)).Elem()
}

func (o ReportLayoutBodyItemParameterOutput) ToReportLayoutBodyItemParameterOutput() ReportLayoutBodyItemParameterOutput {
	return o
}

func (o ReportLayoutBodyItemParameterOutput) ToReportLayoutBodyItemParameterOutputWithContext(ctx context.Context) ReportLayoutBodyItemParameterOutput {
	return o
}

// ID.
func (o ReportLayoutBodyItemParameterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItemParameter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Field name that match field of parameters defined in dataset.
func (o ReportLayoutBodyItemParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItemParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value to replace corresponding field of parameters defined in dataset.
func (o ReportLayoutBodyItemParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItemParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ReportLayoutBodyItemParameterArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItemParameter)(nil)).Elem()
}

func (o ReportLayoutBodyItemParameterArrayOutput) ToReportLayoutBodyItemParameterArrayOutput() ReportLayoutBodyItemParameterArrayOutput {
	return o
}

func (o ReportLayoutBodyItemParameterArrayOutput) ToReportLayoutBodyItemParameterArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemParameterArrayOutput {
	return o
}

func (o ReportLayoutBodyItemParameterArrayOutput) Index(i pulumi.IntInput) ReportLayoutBodyItemParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportLayoutBodyItemParameter {
		return vs[0].([]ReportLayoutBodyItemParameter)[vs[1].(int)]
	}).(ReportLayoutBodyItemParameterOutput)
}

type ReportLayoutPage struct {
	// Report page auto column break before heading. Valid values: `heading1`, `heading2`, `heading3`.
	ColumnBreakBefore *string `pulumi:"columnBreakBefore"`
	// Configure report page footer. The structure of `footer` block is documented below.
	Footer *ReportLayoutPageFooter `pulumi:"footer"`
	// Configure report page header. The structure of `header` block is documented below.
	Header *ReportLayoutPageHeader `pulumi:"header"`
	// Report page options. Valid values: `header-on-first-page`, `footer-on-first-page`.
	Options *string `pulumi:"options"`
	// Report page auto page break before heading. Valid values: `heading1`, `heading2`, `heading3`.
	PageBreakBefore *string `pulumi:"pageBreakBefore"`
	// Report page paper. Valid values: `a4`, `letter`.
	Paper *string `pulumi:"paper"`
}

// ReportLayoutPageInput is an input type that accepts ReportLayoutPageArgs and ReportLayoutPageOutput values.
// You can construct a concrete instance of `ReportLayoutPageInput` via:
//
//	ReportLayoutPageArgs{...}
type ReportLayoutPageInput interface {
	pulumi.Input

	ToReportLayoutPageOutput() ReportLayoutPageOutput
	ToReportLayoutPageOutputWithContext(context.Context) ReportLayoutPageOutput
}

type ReportLayoutPageArgs struct {
	// Report page auto column break before heading. Valid values: `heading1`, `heading2`, `heading3`.
	ColumnBreakBefore pulumi.StringPtrInput `pulumi:"columnBreakBefore"`
	// Configure report page footer. The structure of `footer` block is documented below.
	Footer ReportLayoutPageFooterPtrInput `pulumi:"footer"`
	// Configure report page header. The structure of `header` block is documented below.
	Header ReportLayoutPageHeaderPtrInput `pulumi:"header"`
	// Report page options. Valid values: `header-on-first-page`, `footer-on-first-page`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Report page auto page break before heading. Valid values: `heading1`, `heading2`, `heading3`.
	PageBreakBefore pulumi.StringPtrInput `pulumi:"pageBreakBefore"`
	// Report page paper. Valid values: `a4`, `letter`.
	Paper pulumi.StringPtrInput `pulumi:"paper"`
}

func (ReportLayoutPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPage)(nil)).Elem()
}

func (i ReportLayoutPageArgs) ToReportLayoutPageOutput() ReportLayoutPageOutput {
	return i.ToReportLayoutPageOutputWithContext(context.Background())
}

func (i ReportLayoutPageArgs) ToReportLayoutPageOutputWithContext(ctx context.Context) ReportLayoutPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageOutput)
}

func (i ReportLayoutPageArgs) ToReportLayoutPagePtrOutput() ReportLayoutPagePtrOutput {
	return i.ToReportLayoutPagePtrOutputWithContext(context.Background())
}

func (i ReportLayoutPageArgs) ToReportLayoutPagePtrOutputWithContext(ctx context.Context) ReportLayoutPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageOutput).ToReportLayoutPagePtrOutputWithContext(ctx)
}

// ReportLayoutPagePtrInput is an input type that accepts ReportLayoutPageArgs, ReportLayoutPagePtr and ReportLayoutPagePtrOutput values.
// You can construct a concrete instance of `ReportLayoutPagePtrInput` via:
//
//	        ReportLayoutPageArgs{...}
//
//	or:
//
//	        nil
type ReportLayoutPagePtrInput interface {
	pulumi.Input

	ToReportLayoutPagePtrOutput() ReportLayoutPagePtrOutput
	ToReportLayoutPagePtrOutputWithContext(context.Context) ReportLayoutPagePtrOutput
}

type reportLayoutPagePtrType ReportLayoutPageArgs

func ReportLayoutPagePtr(v *ReportLayoutPageArgs) ReportLayoutPagePtrInput {
	return (*reportLayoutPagePtrType)(v)
}

func (*reportLayoutPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPage)(nil)).Elem()
}

func (i *reportLayoutPagePtrType) ToReportLayoutPagePtrOutput() ReportLayoutPagePtrOutput {
	return i.ToReportLayoutPagePtrOutputWithContext(context.Background())
}

func (i *reportLayoutPagePtrType) ToReportLayoutPagePtrOutputWithContext(ctx context.Context) ReportLayoutPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPagePtrOutput)
}

type ReportLayoutPageOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPage)(nil)).Elem()
}

func (o ReportLayoutPageOutput) ToReportLayoutPageOutput() ReportLayoutPageOutput {
	return o
}

func (o ReportLayoutPageOutput) ToReportLayoutPageOutputWithContext(ctx context.Context) ReportLayoutPageOutput {
	return o
}

func (o ReportLayoutPageOutput) ToReportLayoutPagePtrOutput() ReportLayoutPagePtrOutput {
	return o.ToReportLayoutPagePtrOutputWithContext(context.Background())
}

func (o ReportLayoutPageOutput) ToReportLayoutPagePtrOutputWithContext(ctx context.Context) ReportLayoutPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportLayoutPage) *ReportLayoutPage {
		return &v
	}).(ReportLayoutPagePtrOutput)
}

// Report page auto column break before heading. Valid values: `heading1`, `heading2`, `heading3`.
func (o ReportLayoutPageOutput) ColumnBreakBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *string { return v.ColumnBreakBefore }).(pulumi.StringPtrOutput)
}

// Configure report page footer. The structure of `footer` block is documented below.
func (o ReportLayoutPageOutput) Footer() ReportLayoutPageFooterPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *ReportLayoutPageFooter { return v.Footer }).(ReportLayoutPageFooterPtrOutput)
}

// Configure report page header. The structure of `header` block is documented below.
func (o ReportLayoutPageOutput) Header() ReportLayoutPageHeaderPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *ReportLayoutPageHeader { return v.Header }).(ReportLayoutPageHeaderPtrOutput)
}

// Report page options. Valid values: `header-on-first-page`, `footer-on-first-page`.
func (o ReportLayoutPageOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Report page auto page break before heading. Valid values: `heading1`, `heading2`, `heading3`.
func (o ReportLayoutPageOutput) PageBreakBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *string { return v.PageBreakBefore }).(pulumi.StringPtrOutput)
}

// Report page paper. Valid values: `a4`, `letter`.
func (o ReportLayoutPageOutput) Paper() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *string { return v.Paper }).(pulumi.StringPtrOutput)
}

type ReportLayoutPagePtrOutput struct{ *pulumi.OutputState }

func (ReportLayoutPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPage)(nil)).Elem()
}

func (o ReportLayoutPagePtrOutput) ToReportLayoutPagePtrOutput() ReportLayoutPagePtrOutput {
	return o
}

func (o ReportLayoutPagePtrOutput) ToReportLayoutPagePtrOutputWithContext(ctx context.Context) ReportLayoutPagePtrOutput {
	return o
}

func (o ReportLayoutPagePtrOutput) Elem() ReportLayoutPageOutput {
	return o.ApplyT(func(v *ReportLayoutPage) ReportLayoutPage {
		if v != nil {
			return *v
		}
		var ret ReportLayoutPage
		return ret
	}).(ReportLayoutPageOutput)
}

// Report page auto column break before heading. Valid values: `heading1`, `heading2`, `heading3`.
func (o ReportLayoutPagePtrOutput) ColumnBreakBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *string {
		if v == nil {
			return nil
		}
		return v.ColumnBreakBefore
	}).(pulumi.StringPtrOutput)
}

// Configure report page footer. The structure of `footer` block is documented below.
func (o ReportLayoutPagePtrOutput) Footer() ReportLayoutPageFooterPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *ReportLayoutPageFooter {
		if v == nil {
			return nil
		}
		return v.Footer
	}).(ReportLayoutPageFooterPtrOutput)
}

// Configure report page header. The structure of `header` block is documented below.
func (o ReportLayoutPagePtrOutput) Header() ReportLayoutPageHeaderPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *ReportLayoutPageHeader {
		if v == nil {
			return nil
		}
		return v.Header
	}).(ReportLayoutPageHeaderPtrOutput)
}

// Report page options. Valid values: `header-on-first-page`, `footer-on-first-page`.
func (o ReportLayoutPagePtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Report page auto page break before heading. Valid values: `heading1`, `heading2`, `heading3`.
func (o ReportLayoutPagePtrOutput) PageBreakBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *string {
		if v == nil {
			return nil
		}
		return v.PageBreakBefore
	}).(pulumi.StringPtrOutput)
}

// Report page paper. Valid values: `a4`, `letter`.
func (o ReportLayoutPagePtrOutput) Paper() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *string {
		if v == nil {
			return nil
		}
		return v.Paper
	}).(pulumi.StringPtrOutput)
}

type ReportLayoutPageFooter struct {
	// Configure report footer item. The structure of `footerItem` block is documented below.
	FooterItems []ReportLayoutPageFooterFooterItem `pulumi:"footerItems"`
	// Report footer style.
	Style *string `pulumi:"style"`
}

// ReportLayoutPageFooterInput is an input type that accepts ReportLayoutPageFooterArgs and ReportLayoutPageFooterOutput values.
// You can construct a concrete instance of `ReportLayoutPageFooterInput` via:
//
//	ReportLayoutPageFooterArgs{...}
type ReportLayoutPageFooterInput interface {
	pulumi.Input

	ToReportLayoutPageFooterOutput() ReportLayoutPageFooterOutput
	ToReportLayoutPageFooterOutputWithContext(context.Context) ReportLayoutPageFooterOutput
}

type ReportLayoutPageFooterArgs struct {
	// Configure report footer item. The structure of `footerItem` block is documented below.
	FooterItems ReportLayoutPageFooterFooterItemArrayInput `pulumi:"footerItems"`
	// Report footer style.
	Style pulumi.StringPtrInput `pulumi:"style"`
}

func (ReportLayoutPageFooterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageFooter)(nil)).Elem()
}

func (i ReportLayoutPageFooterArgs) ToReportLayoutPageFooterOutput() ReportLayoutPageFooterOutput {
	return i.ToReportLayoutPageFooterOutputWithContext(context.Background())
}

func (i ReportLayoutPageFooterArgs) ToReportLayoutPageFooterOutputWithContext(ctx context.Context) ReportLayoutPageFooterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageFooterOutput)
}

func (i ReportLayoutPageFooterArgs) ToReportLayoutPageFooterPtrOutput() ReportLayoutPageFooterPtrOutput {
	return i.ToReportLayoutPageFooterPtrOutputWithContext(context.Background())
}

func (i ReportLayoutPageFooterArgs) ToReportLayoutPageFooterPtrOutputWithContext(ctx context.Context) ReportLayoutPageFooterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageFooterOutput).ToReportLayoutPageFooterPtrOutputWithContext(ctx)
}

// ReportLayoutPageFooterPtrInput is an input type that accepts ReportLayoutPageFooterArgs, ReportLayoutPageFooterPtr and ReportLayoutPageFooterPtrOutput values.
// You can construct a concrete instance of `ReportLayoutPageFooterPtrInput` via:
//
//	        ReportLayoutPageFooterArgs{...}
//
//	or:
//
//	        nil
type ReportLayoutPageFooterPtrInput interface {
	pulumi.Input

	ToReportLayoutPageFooterPtrOutput() ReportLayoutPageFooterPtrOutput
	ToReportLayoutPageFooterPtrOutputWithContext(context.Context) ReportLayoutPageFooterPtrOutput
}

type reportLayoutPageFooterPtrType ReportLayoutPageFooterArgs

func ReportLayoutPageFooterPtr(v *ReportLayoutPageFooterArgs) ReportLayoutPageFooterPtrInput {
	return (*reportLayoutPageFooterPtrType)(v)
}

func (*reportLayoutPageFooterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPageFooter)(nil)).Elem()
}

func (i *reportLayoutPageFooterPtrType) ToReportLayoutPageFooterPtrOutput() ReportLayoutPageFooterPtrOutput {
	return i.ToReportLayoutPageFooterPtrOutputWithContext(context.Background())
}

func (i *reportLayoutPageFooterPtrType) ToReportLayoutPageFooterPtrOutputWithContext(ctx context.Context) ReportLayoutPageFooterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageFooterPtrOutput)
}

type ReportLayoutPageFooterOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageFooterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageFooter)(nil)).Elem()
}

func (o ReportLayoutPageFooterOutput) ToReportLayoutPageFooterOutput() ReportLayoutPageFooterOutput {
	return o
}

func (o ReportLayoutPageFooterOutput) ToReportLayoutPageFooterOutputWithContext(ctx context.Context) ReportLayoutPageFooterOutput {
	return o
}

func (o ReportLayoutPageFooterOutput) ToReportLayoutPageFooterPtrOutput() ReportLayoutPageFooterPtrOutput {
	return o.ToReportLayoutPageFooterPtrOutputWithContext(context.Background())
}

func (o ReportLayoutPageFooterOutput) ToReportLayoutPageFooterPtrOutputWithContext(ctx context.Context) ReportLayoutPageFooterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportLayoutPageFooter) *ReportLayoutPageFooter {
		return &v
	}).(ReportLayoutPageFooterPtrOutput)
}

// Configure report footer item. The structure of `footerItem` block is documented below.
func (o ReportLayoutPageFooterOutput) FooterItems() ReportLayoutPageFooterFooterItemArrayOutput {
	return o.ApplyT(func(v ReportLayoutPageFooter) []ReportLayoutPageFooterFooterItem { return v.FooterItems }).(ReportLayoutPageFooterFooterItemArrayOutput)
}

// Report footer style.
func (o ReportLayoutPageFooterOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooter) *string { return v.Style }).(pulumi.StringPtrOutput)
}

type ReportLayoutPageFooterPtrOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageFooterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPageFooter)(nil)).Elem()
}

func (o ReportLayoutPageFooterPtrOutput) ToReportLayoutPageFooterPtrOutput() ReportLayoutPageFooterPtrOutput {
	return o
}

func (o ReportLayoutPageFooterPtrOutput) ToReportLayoutPageFooterPtrOutputWithContext(ctx context.Context) ReportLayoutPageFooterPtrOutput {
	return o
}

func (o ReportLayoutPageFooterPtrOutput) Elem() ReportLayoutPageFooterOutput {
	return o.ApplyT(func(v *ReportLayoutPageFooter) ReportLayoutPageFooter {
		if v != nil {
			return *v
		}
		var ret ReportLayoutPageFooter
		return ret
	}).(ReportLayoutPageFooterOutput)
}

// Configure report footer item. The structure of `footerItem` block is documented below.
func (o ReportLayoutPageFooterPtrOutput) FooterItems() ReportLayoutPageFooterFooterItemArrayOutput {
	return o.ApplyT(func(v *ReportLayoutPageFooter) []ReportLayoutPageFooterFooterItem {
		if v == nil {
			return nil
		}
		return v.FooterItems
	}).(ReportLayoutPageFooterFooterItemArrayOutput)
}

// Report footer style.
func (o ReportLayoutPageFooterPtrOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPageFooter) *string {
		if v == nil {
			return nil
		}
		return v.Style
	}).(pulumi.StringPtrOutput)
}

type ReportLayoutPageFooterFooterItem struct {
	// Report item text content.
	Content *string `pulumi:"content"`
	// Description.
	Description *string `pulumi:"description"`
	// Report item ID.
	Id *int `pulumi:"id"`
	// Report item image file name.
	ImgSrc *string `pulumi:"imgSrc"`
	// Report item style.
	Style *string `pulumi:"style"`
	// Report item type. Valid values: `text`, `image`.
	Type *string `pulumi:"type"`
}

// ReportLayoutPageFooterFooterItemInput is an input type that accepts ReportLayoutPageFooterFooterItemArgs and ReportLayoutPageFooterFooterItemOutput values.
// You can construct a concrete instance of `ReportLayoutPageFooterFooterItemInput` via:
//
//	ReportLayoutPageFooterFooterItemArgs{...}
type ReportLayoutPageFooterFooterItemInput interface {
	pulumi.Input

	ToReportLayoutPageFooterFooterItemOutput() ReportLayoutPageFooterFooterItemOutput
	ToReportLayoutPageFooterFooterItemOutputWithContext(context.Context) ReportLayoutPageFooterFooterItemOutput
}

type ReportLayoutPageFooterFooterItemArgs struct {
	// Report item text content.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Report item ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Report item image file name.
	ImgSrc pulumi.StringPtrInput `pulumi:"imgSrc"`
	// Report item style.
	Style pulumi.StringPtrInput `pulumi:"style"`
	// Report item type. Valid values: `text`, `image`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReportLayoutPageFooterFooterItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageFooterFooterItem)(nil)).Elem()
}

func (i ReportLayoutPageFooterFooterItemArgs) ToReportLayoutPageFooterFooterItemOutput() ReportLayoutPageFooterFooterItemOutput {
	return i.ToReportLayoutPageFooterFooterItemOutputWithContext(context.Background())
}

func (i ReportLayoutPageFooterFooterItemArgs) ToReportLayoutPageFooterFooterItemOutputWithContext(ctx context.Context) ReportLayoutPageFooterFooterItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageFooterFooterItemOutput)
}

// ReportLayoutPageFooterFooterItemArrayInput is an input type that accepts ReportLayoutPageFooterFooterItemArray and ReportLayoutPageFooterFooterItemArrayOutput values.
// You can construct a concrete instance of `ReportLayoutPageFooterFooterItemArrayInput` via:
//
//	ReportLayoutPageFooterFooterItemArray{ ReportLayoutPageFooterFooterItemArgs{...} }
type ReportLayoutPageFooterFooterItemArrayInput interface {
	pulumi.Input

	ToReportLayoutPageFooterFooterItemArrayOutput() ReportLayoutPageFooterFooterItemArrayOutput
	ToReportLayoutPageFooterFooterItemArrayOutputWithContext(context.Context) ReportLayoutPageFooterFooterItemArrayOutput
}

type ReportLayoutPageFooterFooterItemArray []ReportLayoutPageFooterFooterItemInput

func (ReportLayoutPageFooterFooterItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutPageFooterFooterItem)(nil)).Elem()
}

func (i ReportLayoutPageFooterFooterItemArray) ToReportLayoutPageFooterFooterItemArrayOutput() ReportLayoutPageFooterFooterItemArrayOutput {
	return i.ToReportLayoutPageFooterFooterItemArrayOutputWithContext(context.Background())
}

func (i ReportLayoutPageFooterFooterItemArray) ToReportLayoutPageFooterFooterItemArrayOutputWithContext(ctx context.Context) ReportLayoutPageFooterFooterItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageFooterFooterItemArrayOutput)
}

type ReportLayoutPageFooterFooterItemOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageFooterFooterItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageFooterFooterItem)(nil)).Elem()
}

func (o ReportLayoutPageFooterFooterItemOutput) ToReportLayoutPageFooterFooterItemOutput() ReportLayoutPageFooterFooterItemOutput {
	return o
}

func (o ReportLayoutPageFooterFooterItemOutput) ToReportLayoutPageFooterFooterItemOutputWithContext(ctx context.Context) ReportLayoutPageFooterFooterItemOutput {
	return o
}

// Report item text content.
func (o ReportLayoutPageFooterFooterItemOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Description.
func (o ReportLayoutPageFooterFooterItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Report item ID.
func (o ReportLayoutPageFooterFooterItemOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Report item image file name.
func (o ReportLayoutPageFooterFooterItemOutput) ImgSrc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *string { return v.ImgSrc }).(pulumi.StringPtrOutput)
}

// Report item style.
func (o ReportLayoutPageFooterFooterItemOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *string { return v.Style }).(pulumi.StringPtrOutput)
}

// Report item type. Valid values: `text`, `image`.
func (o ReportLayoutPageFooterFooterItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReportLayoutPageFooterFooterItemArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageFooterFooterItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutPageFooterFooterItem)(nil)).Elem()
}

func (o ReportLayoutPageFooterFooterItemArrayOutput) ToReportLayoutPageFooterFooterItemArrayOutput() ReportLayoutPageFooterFooterItemArrayOutput {
	return o
}

func (o ReportLayoutPageFooterFooterItemArrayOutput) ToReportLayoutPageFooterFooterItemArrayOutputWithContext(ctx context.Context) ReportLayoutPageFooterFooterItemArrayOutput {
	return o
}

func (o ReportLayoutPageFooterFooterItemArrayOutput) Index(i pulumi.IntInput) ReportLayoutPageFooterFooterItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportLayoutPageFooterFooterItem {
		return vs[0].([]ReportLayoutPageFooterFooterItem)[vs[1].(int)]
	}).(ReportLayoutPageFooterFooterItemOutput)
}

type ReportLayoutPageHeader struct {
	// Configure report header item. The structure of `headerItem` block is documented below.
	HeaderItems []ReportLayoutPageHeaderHeaderItem `pulumi:"headerItems"`
	// Report header style.
	Style *string `pulumi:"style"`
}

// ReportLayoutPageHeaderInput is an input type that accepts ReportLayoutPageHeaderArgs and ReportLayoutPageHeaderOutput values.
// You can construct a concrete instance of `ReportLayoutPageHeaderInput` via:
//
//	ReportLayoutPageHeaderArgs{...}
type ReportLayoutPageHeaderInput interface {
	pulumi.Input

	ToReportLayoutPageHeaderOutput() ReportLayoutPageHeaderOutput
	ToReportLayoutPageHeaderOutputWithContext(context.Context) ReportLayoutPageHeaderOutput
}

type ReportLayoutPageHeaderArgs struct {
	// Configure report header item. The structure of `headerItem` block is documented below.
	HeaderItems ReportLayoutPageHeaderHeaderItemArrayInput `pulumi:"headerItems"`
	// Report header style.
	Style pulumi.StringPtrInput `pulumi:"style"`
}

func (ReportLayoutPageHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageHeader)(nil)).Elem()
}

func (i ReportLayoutPageHeaderArgs) ToReportLayoutPageHeaderOutput() ReportLayoutPageHeaderOutput {
	return i.ToReportLayoutPageHeaderOutputWithContext(context.Background())
}

func (i ReportLayoutPageHeaderArgs) ToReportLayoutPageHeaderOutputWithContext(ctx context.Context) ReportLayoutPageHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageHeaderOutput)
}

func (i ReportLayoutPageHeaderArgs) ToReportLayoutPageHeaderPtrOutput() ReportLayoutPageHeaderPtrOutput {
	return i.ToReportLayoutPageHeaderPtrOutputWithContext(context.Background())
}

func (i ReportLayoutPageHeaderArgs) ToReportLayoutPageHeaderPtrOutputWithContext(ctx context.Context) ReportLayoutPageHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageHeaderOutput).ToReportLayoutPageHeaderPtrOutputWithContext(ctx)
}

// ReportLayoutPageHeaderPtrInput is an input type that accepts ReportLayoutPageHeaderArgs, ReportLayoutPageHeaderPtr and ReportLayoutPageHeaderPtrOutput values.
// You can construct a concrete instance of `ReportLayoutPageHeaderPtrInput` via:
//
//	        ReportLayoutPageHeaderArgs{...}
//
//	or:
//
//	        nil
type ReportLayoutPageHeaderPtrInput interface {
	pulumi.Input

	ToReportLayoutPageHeaderPtrOutput() ReportLayoutPageHeaderPtrOutput
	ToReportLayoutPageHeaderPtrOutputWithContext(context.Context) ReportLayoutPageHeaderPtrOutput
}

type reportLayoutPageHeaderPtrType ReportLayoutPageHeaderArgs

func ReportLayoutPageHeaderPtr(v *ReportLayoutPageHeaderArgs) ReportLayoutPageHeaderPtrInput {
	return (*reportLayoutPageHeaderPtrType)(v)
}

func (*reportLayoutPageHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPageHeader)(nil)).Elem()
}

func (i *reportLayoutPageHeaderPtrType) ToReportLayoutPageHeaderPtrOutput() ReportLayoutPageHeaderPtrOutput {
	return i.ToReportLayoutPageHeaderPtrOutputWithContext(context.Background())
}

func (i *reportLayoutPageHeaderPtrType) ToReportLayoutPageHeaderPtrOutputWithContext(ctx context.Context) ReportLayoutPageHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageHeaderPtrOutput)
}

type ReportLayoutPageHeaderOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageHeader)(nil)).Elem()
}

func (o ReportLayoutPageHeaderOutput) ToReportLayoutPageHeaderOutput() ReportLayoutPageHeaderOutput {
	return o
}

func (o ReportLayoutPageHeaderOutput) ToReportLayoutPageHeaderOutputWithContext(ctx context.Context) ReportLayoutPageHeaderOutput {
	return o
}

func (o ReportLayoutPageHeaderOutput) ToReportLayoutPageHeaderPtrOutput() ReportLayoutPageHeaderPtrOutput {
	return o.ToReportLayoutPageHeaderPtrOutputWithContext(context.Background())
}

func (o ReportLayoutPageHeaderOutput) ToReportLayoutPageHeaderPtrOutputWithContext(ctx context.Context) ReportLayoutPageHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportLayoutPageHeader) *ReportLayoutPageHeader {
		return &v
	}).(ReportLayoutPageHeaderPtrOutput)
}

// Configure report header item. The structure of `headerItem` block is documented below.
func (o ReportLayoutPageHeaderOutput) HeaderItems() ReportLayoutPageHeaderHeaderItemArrayOutput {
	return o.ApplyT(func(v ReportLayoutPageHeader) []ReportLayoutPageHeaderHeaderItem { return v.HeaderItems }).(ReportLayoutPageHeaderHeaderItemArrayOutput)
}

// Report header style.
func (o ReportLayoutPageHeaderOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeader) *string { return v.Style }).(pulumi.StringPtrOutput)
}

type ReportLayoutPageHeaderPtrOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPageHeader)(nil)).Elem()
}

func (o ReportLayoutPageHeaderPtrOutput) ToReportLayoutPageHeaderPtrOutput() ReportLayoutPageHeaderPtrOutput {
	return o
}

func (o ReportLayoutPageHeaderPtrOutput) ToReportLayoutPageHeaderPtrOutputWithContext(ctx context.Context) ReportLayoutPageHeaderPtrOutput {
	return o
}

func (o ReportLayoutPageHeaderPtrOutput) Elem() ReportLayoutPageHeaderOutput {
	return o.ApplyT(func(v *ReportLayoutPageHeader) ReportLayoutPageHeader {
		if v != nil {
			return *v
		}
		var ret ReportLayoutPageHeader
		return ret
	}).(ReportLayoutPageHeaderOutput)
}

// Configure report header item. The structure of `headerItem` block is documented below.
func (o ReportLayoutPageHeaderPtrOutput) HeaderItems() ReportLayoutPageHeaderHeaderItemArrayOutput {
	return o.ApplyT(func(v *ReportLayoutPageHeader) []ReportLayoutPageHeaderHeaderItem {
		if v == nil {
			return nil
		}
		return v.HeaderItems
	}).(ReportLayoutPageHeaderHeaderItemArrayOutput)
}

// Report header style.
func (o ReportLayoutPageHeaderPtrOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPageHeader) *string {
		if v == nil {
			return nil
		}
		return v.Style
	}).(pulumi.StringPtrOutput)
}

type ReportLayoutPageHeaderHeaderItem struct {
	// Report item text content.
	Content *string `pulumi:"content"`
	// Description.
	Description *string `pulumi:"description"`
	// Report item ID.
	Id *int `pulumi:"id"`
	// Report item image file name.
	ImgSrc *string `pulumi:"imgSrc"`
	// Report item style.
	Style *string `pulumi:"style"`
	// Report item type. Valid values: `text`, `image`.
	Type *string `pulumi:"type"`
}

// ReportLayoutPageHeaderHeaderItemInput is an input type that accepts ReportLayoutPageHeaderHeaderItemArgs and ReportLayoutPageHeaderHeaderItemOutput values.
// You can construct a concrete instance of `ReportLayoutPageHeaderHeaderItemInput` via:
//
//	ReportLayoutPageHeaderHeaderItemArgs{...}
type ReportLayoutPageHeaderHeaderItemInput interface {
	pulumi.Input

	ToReportLayoutPageHeaderHeaderItemOutput() ReportLayoutPageHeaderHeaderItemOutput
	ToReportLayoutPageHeaderHeaderItemOutputWithContext(context.Context) ReportLayoutPageHeaderHeaderItemOutput
}

type ReportLayoutPageHeaderHeaderItemArgs struct {
	// Report item text content.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Report item ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Report item image file name.
	ImgSrc pulumi.StringPtrInput `pulumi:"imgSrc"`
	// Report item style.
	Style pulumi.StringPtrInput `pulumi:"style"`
	// Report item type. Valid values: `text`, `image`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReportLayoutPageHeaderHeaderItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageHeaderHeaderItem)(nil)).Elem()
}

func (i ReportLayoutPageHeaderHeaderItemArgs) ToReportLayoutPageHeaderHeaderItemOutput() ReportLayoutPageHeaderHeaderItemOutput {
	return i.ToReportLayoutPageHeaderHeaderItemOutputWithContext(context.Background())
}

func (i ReportLayoutPageHeaderHeaderItemArgs) ToReportLayoutPageHeaderHeaderItemOutputWithContext(ctx context.Context) ReportLayoutPageHeaderHeaderItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageHeaderHeaderItemOutput)
}

// ReportLayoutPageHeaderHeaderItemArrayInput is an input type that accepts ReportLayoutPageHeaderHeaderItemArray and ReportLayoutPageHeaderHeaderItemArrayOutput values.
// You can construct a concrete instance of `ReportLayoutPageHeaderHeaderItemArrayInput` via:
//
//	ReportLayoutPageHeaderHeaderItemArray{ ReportLayoutPageHeaderHeaderItemArgs{...} }
type ReportLayoutPageHeaderHeaderItemArrayInput interface {
	pulumi.Input

	ToReportLayoutPageHeaderHeaderItemArrayOutput() ReportLayoutPageHeaderHeaderItemArrayOutput
	ToReportLayoutPageHeaderHeaderItemArrayOutputWithContext(context.Context) ReportLayoutPageHeaderHeaderItemArrayOutput
}

type ReportLayoutPageHeaderHeaderItemArray []ReportLayoutPageHeaderHeaderItemInput

func (ReportLayoutPageHeaderHeaderItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutPageHeaderHeaderItem)(nil)).Elem()
}

func (i ReportLayoutPageHeaderHeaderItemArray) ToReportLayoutPageHeaderHeaderItemArrayOutput() ReportLayoutPageHeaderHeaderItemArrayOutput {
	return i.ToReportLayoutPageHeaderHeaderItemArrayOutputWithContext(context.Background())
}

func (i ReportLayoutPageHeaderHeaderItemArray) ToReportLayoutPageHeaderHeaderItemArrayOutputWithContext(ctx context.Context) ReportLayoutPageHeaderHeaderItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageHeaderHeaderItemArrayOutput)
}

type ReportLayoutPageHeaderHeaderItemOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageHeaderHeaderItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageHeaderHeaderItem)(nil)).Elem()
}

func (o ReportLayoutPageHeaderHeaderItemOutput) ToReportLayoutPageHeaderHeaderItemOutput() ReportLayoutPageHeaderHeaderItemOutput {
	return o
}

func (o ReportLayoutPageHeaderHeaderItemOutput) ToReportLayoutPageHeaderHeaderItemOutputWithContext(ctx context.Context) ReportLayoutPageHeaderHeaderItemOutput {
	return o
}

// Report item text content.
func (o ReportLayoutPageHeaderHeaderItemOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Description.
func (o ReportLayoutPageHeaderHeaderItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Report item ID.
func (o ReportLayoutPageHeaderHeaderItemOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Report item image file name.
func (o ReportLayoutPageHeaderHeaderItemOutput) ImgSrc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *string { return v.ImgSrc }).(pulumi.StringPtrOutput)
}

// Report item style.
func (o ReportLayoutPageHeaderHeaderItemOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *string { return v.Style }).(pulumi.StringPtrOutput)
}

// Report item type. Valid values: `text`, `image`.
func (o ReportLayoutPageHeaderHeaderItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReportLayoutPageHeaderHeaderItemArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageHeaderHeaderItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutPageHeaderHeaderItem)(nil)).Elem()
}

func (o ReportLayoutPageHeaderHeaderItemArrayOutput) ToReportLayoutPageHeaderHeaderItemArrayOutput() ReportLayoutPageHeaderHeaderItemArrayOutput {
	return o
}

func (o ReportLayoutPageHeaderHeaderItemArrayOutput) ToReportLayoutPageHeaderHeaderItemArrayOutputWithContext(ctx context.Context) ReportLayoutPageHeaderHeaderItemArrayOutput {
	return o
}

func (o ReportLayoutPageHeaderHeaderItemArrayOutput) Index(i pulumi.IntInput) ReportLayoutPageHeaderHeaderItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportLayoutPageHeaderHeaderItem {
		return vs[0].([]ReportLayoutPageHeaderHeaderItem)[vs[1].(int)]
	}).(ReportLayoutPageHeaderHeaderItemOutput)
}

type RouterAccesslist6Rule struct {
	// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
	Action *string `pulumi:"action"`
	// Enable/disable exact prefix match. Valid values: `enable`, `disable`.
	ExactMatch *string `pulumi:"exactMatch"`
	// Flags.
	Flags *int `pulumi:"flags"`
	// Rule ID.
	Id *int `pulumi:"id"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 *string `pulumi:"prefix6"`
}

// RouterAccesslist6RuleInput is an input type that accepts RouterAccesslist6RuleArgs and RouterAccesslist6RuleOutput values.
// You can construct a concrete instance of `RouterAccesslist6RuleInput` via:
//
//	RouterAccesslist6RuleArgs{...}
type RouterAccesslist6RuleInput interface {
	pulumi.Input

	ToRouterAccesslist6RuleOutput() RouterAccesslist6RuleOutput
	ToRouterAccesslist6RuleOutputWithContext(context.Context) RouterAccesslist6RuleOutput
}

type RouterAccesslist6RuleArgs struct {
	// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable exact prefix match. Valid values: `enable`, `disable`.
	ExactMatch pulumi.StringPtrInput `pulumi:"exactMatch"`
	// Flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterAccesslist6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAccesslist6Rule)(nil)).Elem()
}

func (i RouterAccesslist6RuleArgs) ToRouterAccesslist6RuleOutput() RouterAccesslist6RuleOutput {
	return i.ToRouterAccesslist6RuleOutputWithContext(context.Background())
}

func (i RouterAccesslist6RuleArgs) ToRouterAccesslist6RuleOutputWithContext(ctx context.Context) RouterAccesslist6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccesslist6RuleOutput)
}

// RouterAccesslist6RuleArrayInput is an input type that accepts RouterAccesslist6RuleArray and RouterAccesslist6RuleArrayOutput values.
// You can construct a concrete instance of `RouterAccesslist6RuleArrayInput` via:
//
//	RouterAccesslist6RuleArray{ RouterAccesslist6RuleArgs{...} }
type RouterAccesslist6RuleArrayInput interface {
	pulumi.Input

	ToRouterAccesslist6RuleArrayOutput() RouterAccesslist6RuleArrayOutput
	ToRouterAccesslist6RuleArrayOutputWithContext(context.Context) RouterAccesslist6RuleArrayOutput
}

type RouterAccesslist6RuleArray []RouterAccesslist6RuleInput

func (RouterAccesslist6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAccesslist6Rule)(nil)).Elem()
}

func (i RouterAccesslist6RuleArray) ToRouterAccesslist6RuleArrayOutput() RouterAccesslist6RuleArrayOutput {
	return i.ToRouterAccesslist6RuleArrayOutputWithContext(context.Background())
}

func (i RouterAccesslist6RuleArray) ToRouterAccesslist6RuleArrayOutputWithContext(ctx context.Context) RouterAccesslist6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccesslist6RuleArrayOutput)
}

type RouterAccesslist6RuleOutput struct{ *pulumi.OutputState }

func (RouterAccesslist6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAccesslist6Rule)(nil)).Elem()
}

func (o RouterAccesslist6RuleOutput) ToRouterAccesslist6RuleOutput() RouterAccesslist6RuleOutput {
	return o
}

func (o RouterAccesslist6RuleOutput) ToRouterAccesslist6RuleOutputWithContext(ctx context.Context) RouterAccesslist6RuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
func (o RouterAccesslist6RuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccesslist6Rule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable exact prefix match. Valid values: `enable`, `disable`.
func (o RouterAccesslist6RuleOutput) ExactMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccesslist6Rule) *string { return v.ExactMatch }).(pulumi.StringPtrOutput)
}

// Flags.
func (o RouterAccesslist6RuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterAccesslist6Rule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Rule ID.
func (o RouterAccesslist6RuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterAccesslist6Rule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
func (o RouterAccesslist6RuleOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccesslist6Rule) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterAccesslist6RuleArrayOutput struct{ *pulumi.OutputState }

func (RouterAccesslist6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAccesslist6Rule)(nil)).Elem()
}

func (o RouterAccesslist6RuleArrayOutput) ToRouterAccesslist6RuleArrayOutput() RouterAccesslist6RuleArrayOutput {
	return o
}

func (o RouterAccesslist6RuleArrayOutput) ToRouterAccesslist6RuleArrayOutputWithContext(ctx context.Context) RouterAccesslist6RuleArrayOutput {
	return o
}

func (o RouterAccesslist6RuleArrayOutput) Index(i pulumi.IntInput) RouterAccesslist6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterAccesslist6Rule {
		return vs[0].([]RouterAccesslist6Rule)[vs[1].(int)]
	}).(RouterAccesslist6RuleOutput)
}

type RouterAccesslistRule struct {
	// Permit or deny this IP address and netmask prefix.
	Action *string `pulumi:"action"`
	// Enable/disable exact match.
	ExactMatch *string `pulumi:"exactMatch"`
	// Flags.
	Flags *int `pulumi:"flags"`
	// Rule ID.
	Id *int `pulumi:"id"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix *string `pulumi:"prefix"`
	// Wildcard to define Cisco-style wildcard filter criteria.
	Wildcard *string `pulumi:"wildcard"`
}

// RouterAccesslistRuleInput is an input type that accepts RouterAccesslistRuleArgs and RouterAccesslistRuleOutput values.
// You can construct a concrete instance of `RouterAccesslistRuleInput` via:
//
//	RouterAccesslistRuleArgs{...}
type RouterAccesslistRuleInput interface {
	pulumi.Input

	ToRouterAccesslistRuleOutput() RouterAccesslistRuleOutput
	ToRouterAccesslistRuleOutputWithContext(context.Context) RouterAccesslistRuleOutput
}

type RouterAccesslistRuleArgs struct {
	// Permit or deny this IP address and netmask prefix.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable exact match.
	ExactMatch pulumi.StringPtrInput `pulumi:"exactMatch"`
	// Flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Wildcard to define Cisco-style wildcard filter criteria.
	Wildcard pulumi.StringPtrInput `pulumi:"wildcard"`
}

func (RouterAccesslistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAccesslistRule)(nil)).Elem()
}

func (i RouterAccesslistRuleArgs) ToRouterAccesslistRuleOutput() RouterAccesslistRuleOutput {
	return i.ToRouterAccesslistRuleOutputWithContext(context.Background())
}

func (i RouterAccesslistRuleArgs) ToRouterAccesslistRuleOutputWithContext(ctx context.Context) RouterAccesslistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccesslistRuleOutput)
}

// RouterAccesslistRuleArrayInput is an input type that accepts RouterAccesslistRuleArray and RouterAccesslistRuleArrayOutput values.
// You can construct a concrete instance of `RouterAccesslistRuleArrayInput` via:
//
//	RouterAccesslistRuleArray{ RouterAccesslistRuleArgs{...} }
type RouterAccesslistRuleArrayInput interface {
	pulumi.Input

	ToRouterAccesslistRuleArrayOutput() RouterAccesslistRuleArrayOutput
	ToRouterAccesslistRuleArrayOutputWithContext(context.Context) RouterAccesslistRuleArrayOutput
}

type RouterAccesslistRuleArray []RouterAccesslistRuleInput

func (RouterAccesslistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAccesslistRule)(nil)).Elem()
}

func (i RouterAccesslistRuleArray) ToRouterAccesslistRuleArrayOutput() RouterAccesslistRuleArrayOutput {
	return i.ToRouterAccesslistRuleArrayOutputWithContext(context.Background())
}

func (i RouterAccesslistRuleArray) ToRouterAccesslistRuleArrayOutputWithContext(ctx context.Context) RouterAccesslistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccesslistRuleArrayOutput)
}

type RouterAccesslistRuleOutput struct{ *pulumi.OutputState }

func (RouterAccesslistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAccesslistRule)(nil)).Elem()
}

func (o RouterAccesslistRuleOutput) ToRouterAccesslistRuleOutput() RouterAccesslistRuleOutput {
	return o
}

func (o RouterAccesslistRuleOutput) ToRouterAccesslistRuleOutputWithContext(ctx context.Context) RouterAccesslistRuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix.
func (o RouterAccesslistRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccesslistRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable exact match.
func (o RouterAccesslistRuleOutput) ExactMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccesslistRule) *string { return v.ExactMatch }).(pulumi.StringPtrOutput)
}

// Flags.
func (o RouterAccesslistRuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterAccesslistRule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Rule ID.
func (o RouterAccesslistRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterAccesslistRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
func (o RouterAccesslistRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccesslistRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Wildcard to define Cisco-style wildcard filter criteria.
func (o RouterAccesslistRuleOutput) Wildcard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccesslistRule) *string { return v.Wildcard }).(pulumi.StringPtrOutput)
}

type RouterAccesslistRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterAccesslistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAccesslistRule)(nil)).Elem()
}

func (o RouterAccesslistRuleArrayOutput) ToRouterAccesslistRuleArrayOutput() RouterAccesslistRuleArrayOutput {
	return o
}

func (o RouterAccesslistRuleArrayOutput) ToRouterAccesslistRuleArrayOutputWithContext(ctx context.Context) RouterAccesslistRuleArrayOutput {
	return o
}

func (o RouterAccesslistRuleArrayOutput) Index(i pulumi.IntInput) RouterAccesslistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterAccesslistRule {
		return vs[0].([]RouterAccesslistRule)[vs[1].(int)]
	}).(RouterAccesslistRuleOutput)
}

type RouterAspathlistRule struct {
	// Permit or deny route-based operations, based on the route's AS_PATH attribute. Valid values: `deny`, `permit`.
	Action *string `pulumi:"action"`
	// ID.
	Id *int `pulumi:"id"`
	// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
	Regexp *string `pulumi:"regexp"`
}

// RouterAspathlistRuleInput is an input type that accepts RouterAspathlistRuleArgs and RouterAspathlistRuleOutput values.
// You can construct a concrete instance of `RouterAspathlistRuleInput` via:
//
//	RouterAspathlistRuleArgs{...}
type RouterAspathlistRuleInput interface {
	pulumi.Input

	ToRouterAspathlistRuleOutput() RouterAspathlistRuleOutput
	ToRouterAspathlistRuleOutputWithContext(context.Context) RouterAspathlistRuleOutput
}

type RouterAspathlistRuleArgs struct {
	// Permit or deny route-based operations, based on the route's AS_PATH attribute. Valid values: `deny`, `permit`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
}

func (RouterAspathlistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAspathlistRule)(nil)).Elem()
}

func (i RouterAspathlistRuleArgs) ToRouterAspathlistRuleOutput() RouterAspathlistRuleOutput {
	return i.ToRouterAspathlistRuleOutputWithContext(context.Background())
}

func (i RouterAspathlistRuleArgs) ToRouterAspathlistRuleOutputWithContext(ctx context.Context) RouterAspathlistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAspathlistRuleOutput)
}

// RouterAspathlistRuleArrayInput is an input type that accepts RouterAspathlistRuleArray and RouterAspathlistRuleArrayOutput values.
// You can construct a concrete instance of `RouterAspathlistRuleArrayInput` via:
//
//	RouterAspathlistRuleArray{ RouterAspathlistRuleArgs{...} }
type RouterAspathlistRuleArrayInput interface {
	pulumi.Input

	ToRouterAspathlistRuleArrayOutput() RouterAspathlistRuleArrayOutput
	ToRouterAspathlistRuleArrayOutputWithContext(context.Context) RouterAspathlistRuleArrayOutput
}

type RouterAspathlistRuleArray []RouterAspathlistRuleInput

func (RouterAspathlistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAspathlistRule)(nil)).Elem()
}

func (i RouterAspathlistRuleArray) ToRouterAspathlistRuleArrayOutput() RouterAspathlistRuleArrayOutput {
	return i.ToRouterAspathlistRuleArrayOutputWithContext(context.Background())
}

func (i RouterAspathlistRuleArray) ToRouterAspathlistRuleArrayOutputWithContext(ctx context.Context) RouterAspathlistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAspathlistRuleArrayOutput)
}

type RouterAspathlistRuleOutput struct{ *pulumi.OutputState }

func (RouterAspathlistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAspathlistRule)(nil)).Elem()
}

func (o RouterAspathlistRuleOutput) ToRouterAspathlistRuleOutput() RouterAspathlistRuleOutput {
	return o
}

func (o RouterAspathlistRuleOutput) ToRouterAspathlistRuleOutputWithContext(ctx context.Context) RouterAspathlistRuleOutput {
	return o
}

// Permit or deny route-based operations, based on the route's AS_PATH attribute. Valid values: `deny`, `permit`.
func (o RouterAspathlistRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAspathlistRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// ID.
func (o RouterAspathlistRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterAspathlistRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Regular-expression to match the Border Gateway Protocol (BGP) AS paths.
func (o RouterAspathlistRuleOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAspathlistRule) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

type RouterAspathlistRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterAspathlistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAspathlistRule)(nil)).Elem()
}

func (o RouterAspathlistRuleArrayOutput) ToRouterAspathlistRuleArrayOutput() RouterAspathlistRuleArrayOutput {
	return o
}

func (o RouterAspathlistRuleArrayOutput) ToRouterAspathlistRuleArrayOutputWithContext(ctx context.Context) RouterAspathlistRuleArrayOutput {
	return o
}

func (o RouterAspathlistRuleArrayOutput) Index(i pulumi.IntInput) RouterAspathlistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterAspathlistRule {
		return vs[0].([]RouterAspathlistRule)[vs[1].(int)]
	}).(RouterAspathlistRuleOutput)
}

type RouterBfd6MultihopTemplate struct {
	// Authentication mode. Valid values: `none`, `md5`.
	AuthMode *string `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx *int `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult *int `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx *int `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst *string `pulumi:"dst"`
	// ID.
	Id *int `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key *string `pulumi:"md5Key"`
	// Source prefix.
	Src *string `pulumi:"src"`
}

// RouterBfd6MultihopTemplateInput is an input type that accepts RouterBfd6MultihopTemplateArgs and RouterBfd6MultihopTemplateOutput values.
// You can construct a concrete instance of `RouterBfd6MultihopTemplateInput` via:
//
//	RouterBfd6MultihopTemplateArgs{...}
type RouterBfd6MultihopTemplateInput interface {
	pulumi.Input

	ToRouterBfd6MultihopTemplateOutput() RouterBfd6MultihopTemplateOutput
	ToRouterBfd6MultihopTemplateOutputWithContext(context.Context) RouterBfd6MultihopTemplateOutput
}

type RouterBfd6MultihopTemplateArgs struct {
	// Authentication mode. Valid values: `none`, `md5`.
	AuthMode pulumi.StringPtrInput `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx pulumi.IntPtrInput `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntPtrInput `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx pulumi.IntPtrInput `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst pulumi.StringPtrInput `pulumi:"dst"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key pulumi.StringPtrInput `pulumi:"md5Key"`
	// Source prefix.
	Src pulumi.StringPtrInput `pulumi:"src"`
}

func (RouterBfd6MultihopTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfd6MultihopTemplate)(nil)).Elem()
}

func (i RouterBfd6MultihopTemplateArgs) ToRouterBfd6MultihopTemplateOutput() RouterBfd6MultihopTemplateOutput {
	return i.ToRouterBfd6MultihopTemplateOutputWithContext(context.Background())
}

func (i RouterBfd6MultihopTemplateArgs) ToRouterBfd6MultihopTemplateOutputWithContext(ctx context.Context) RouterBfd6MultihopTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfd6MultihopTemplateOutput)
}

// RouterBfd6MultihopTemplateArrayInput is an input type that accepts RouterBfd6MultihopTemplateArray and RouterBfd6MultihopTemplateArrayOutput values.
// You can construct a concrete instance of `RouterBfd6MultihopTemplateArrayInput` via:
//
//	RouterBfd6MultihopTemplateArray{ RouterBfd6MultihopTemplateArgs{...} }
type RouterBfd6MultihopTemplateArrayInput interface {
	pulumi.Input

	ToRouterBfd6MultihopTemplateArrayOutput() RouterBfd6MultihopTemplateArrayOutput
	ToRouterBfd6MultihopTemplateArrayOutputWithContext(context.Context) RouterBfd6MultihopTemplateArrayOutput
}

type RouterBfd6MultihopTemplateArray []RouterBfd6MultihopTemplateInput

func (RouterBfd6MultihopTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfd6MultihopTemplate)(nil)).Elem()
}

func (i RouterBfd6MultihopTemplateArray) ToRouterBfd6MultihopTemplateArrayOutput() RouterBfd6MultihopTemplateArrayOutput {
	return i.ToRouterBfd6MultihopTemplateArrayOutputWithContext(context.Background())
}

func (i RouterBfd6MultihopTemplateArray) ToRouterBfd6MultihopTemplateArrayOutputWithContext(ctx context.Context) RouterBfd6MultihopTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfd6MultihopTemplateArrayOutput)
}

type RouterBfd6MultihopTemplateOutput struct{ *pulumi.OutputState }

func (RouterBfd6MultihopTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfd6MultihopTemplate)(nil)).Elem()
}

func (o RouterBfd6MultihopTemplateOutput) ToRouterBfd6MultihopTemplateOutput() RouterBfd6MultihopTemplateOutput {
	return o
}

func (o RouterBfd6MultihopTemplateOutput) ToRouterBfd6MultihopTemplateOutputWithContext(ctx context.Context) RouterBfd6MultihopTemplateOutput {
	return o
}

// Authentication mode. Valid values: `none`, `md5`.
func (o RouterBfd6MultihopTemplateOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// BFD desired minimal transmit interval (milliseconds).
func (o RouterBfd6MultihopTemplateOutput) BfdDesiredMinTx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *int { return v.BfdDesiredMinTx }).(pulumi.IntPtrOutput)
}

// BFD detection multiplier.
func (o RouterBfd6MultihopTemplateOutput) BfdDetectMult() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *int { return v.BfdDetectMult }).(pulumi.IntPtrOutput)
}

// BFD required minimal receive interval (milliseconds).
func (o RouterBfd6MultihopTemplateOutput) BfdRequiredMinRx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *int { return v.BfdRequiredMinRx }).(pulumi.IntPtrOutput)
}

// Destination prefix.
func (o RouterBfd6MultihopTemplateOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

// ID.
func (o RouterBfd6MultihopTemplateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// MD5 key of key ID 1.
func (o RouterBfd6MultihopTemplateOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

// Source prefix.
func (o RouterBfd6MultihopTemplateOutput) Src() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *string { return v.Src }).(pulumi.StringPtrOutput)
}

type RouterBfd6MultihopTemplateArrayOutput struct{ *pulumi.OutputState }

func (RouterBfd6MultihopTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfd6MultihopTemplate)(nil)).Elem()
}

func (o RouterBfd6MultihopTemplateArrayOutput) ToRouterBfd6MultihopTemplateArrayOutput() RouterBfd6MultihopTemplateArrayOutput {
	return o
}

func (o RouterBfd6MultihopTemplateArrayOutput) ToRouterBfd6MultihopTemplateArrayOutputWithContext(ctx context.Context) RouterBfd6MultihopTemplateArrayOutput {
	return o
}

func (o RouterBfd6MultihopTemplateArrayOutput) Index(i pulumi.IntInput) RouterBfd6MultihopTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBfd6MultihopTemplate {
		return vs[0].([]RouterBfd6MultihopTemplate)[vs[1].(int)]
	}).(RouterBfd6MultihopTemplateOutput)
}

type RouterBfd6Neighbor struct {
	// Interface to the BFD neighbor.
	Interface *string `pulumi:"interface"`
	// IPv6 address of the BFD neighbor.
	Ip6Address *string `pulumi:"ip6Address"`
}

// RouterBfd6NeighborInput is an input type that accepts RouterBfd6NeighborArgs and RouterBfd6NeighborOutput values.
// You can construct a concrete instance of `RouterBfd6NeighborInput` via:
//
//	RouterBfd6NeighborArgs{...}
type RouterBfd6NeighborInput interface {
	pulumi.Input

	ToRouterBfd6NeighborOutput() RouterBfd6NeighborOutput
	ToRouterBfd6NeighborOutputWithContext(context.Context) RouterBfd6NeighborOutput
}

type RouterBfd6NeighborArgs struct {
	// Interface to the BFD neighbor.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IPv6 address of the BFD neighbor.
	Ip6Address pulumi.StringPtrInput `pulumi:"ip6Address"`
}

func (RouterBfd6NeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfd6Neighbor)(nil)).Elem()
}

func (i RouterBfd6NeighborArgs) ToRouterBfd6NeighborOutput() RouterBfd6NeighborOutput {
	return i.ToRouterBfd6NeighborOutputWithContext(context.Background())
}

func (i RouterBfd6NeighborArgs) ToRouterBfd6NeighborOutputWithContext(ctx context.Context) RouterBfd6NeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfd6NeighborOutput)
}

// RouterBfd6NeighborArrayInput is an input type that accepts RouterBfd6NeighborArray and RouterBfd6NeighborArrayOutput values.
// You can construct a concrete instance of `RouterBfd6NeighborArrayInput` via:
//
//	RouterBfd6NeighborArray{ RouterBfd6NeighborArgs{...} }
type RouterBfd6NeighborArrayInput interface {
	pulumi.Input

	ToRouterBfd6NeighborArrayOutput() RouterBfd6NeighborArrayOutput
	ToRouterBfd6NeighborArrayOutputWithContext(context.Context) RouterBfd6NeighborArrayOutput
}

type RouterBfd6NeighborArray []RouterBfd6NeighborInput

func (RouterBfd6NeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfd6Neighbor)(nil)).Elem()
}

func (i RouterBfd6NeighborArray) ToRouterBfd6NeighborArrayOutput() RouterBfd6NeighborArrayOutput {
	return i.ToRouterBfd6NeighborArrayOutputWithContext(context.Background())
}

func (i RouterBfd6NeighborArray) ToRouterBfd6NeighborArrayOutputWithContext(ctx context.Context) RouterBfd6NeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfd6NeighborArrayOutput)
}

type RouterBfd6NeighborOutput struct{ *pulumi.OutputState }

func (RouterBfd6NeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfd6Neighbor)(nil)).Elem()
}

func (o RouterBfd6NeighborOutput) ToRouterBfd6NeighborOutput() RouterBfd6NeighborOutput {
	return o
}

func (o RouterBfd6NeighborOutput) ToRouterBfd6NeighborOutputWithContext(ctx context.Context) RouterBfd6NeighborOutput {
	return o
}

// Interface to the BFD neighbor.
func (o RouterBfd6NeighborOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6Neighbor) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IPv6 address of the BFD neighbor.
func (o RouterBfd6NeighborOutput) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6Neighbor) *string { return v.Ip6Address }).(pulumi.StringPtrOutput)
}

type RouterBfd6NeighborArrayOutput struct{ *pulumi.OutputState }

func (RouterBfd6NeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfd6Neighbor)(nil)).Elem()
}

func (o RouterBfd6NeighborArrayOutput) ToRouterBfd6NeighborArrayOutput() RouterBfd6NeighborArrayOutput {
	return o
}

func (o RouterBfd6NeighborArrayOutput) ToRouterBfd6NeighborArrayOutputWithContext(ctx context.Context) RouterBfd6NeighborArrayOutput {
	return o
}

func (o RouterBfd6NeighborArrayOutput) Index(i pulumi.IntInput) RouterBfd6NeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBfd6Neighbor {
		return vs[0].([]RouterBfd6Neighbor)[vs[1].(int)]
	}).(RouterBfd6NeighborOutput)
}

type RouterBfdMultihopTemplate struct {
	// Authentication mode. Valid values: `none`, `md5`.
	AuthMode *string `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx *int `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult *int `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx *int `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst *string `pulumi:"dst"`
	// ID.
	Id *int `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key *string `pulumi:"md5Key"`
	// Source prefix.
	Src *string `pulumi:"src"`
}

// RouterBfdMultihopTemplateInput is an input type that accepts RouterBfdMultihopTemplateArgs and RouterBfdMultihopTemplateOutput values.
// You can construct a concrete instance of `RouterBfdMultihopTemplateInput` via:
//
//	RouterBfdMultihopTemplateArgs{...}
type RouterBfdMultihopTemplateInput interface {
	pulumi.Input

	ToRouterBfdMultihopTemplateOutput() RouterBfdMultihopTemplateOutput
	ToRouterBfdMultihopTemplateOutputWithContext(context.Context) RouterBfdMultihopTemplateOutput
}

type RouterBfdMultihopTemplateArgs struct {
	// Authentication mode. Valid values: `none`, `md5`.
	AuthMode pulumi.StringPtrInput `pulumi:"authMode"`
	// BFD desired minimal transmit interval (milliseconds).
	BfdDesiredMinTx pulumi.IntPtrInput `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntPtrInput `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval (milliseconds).
	BfdRequiredMinRx pulumi.IntPtrInput `pulumi:"bfdRequiredMinRx"`
	// Destination prefix.
	Dst pulumi.StringPtrInput `pulumi:"dst"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// MD5 key of key ID 1.
	Md5Key pulumi.StringPtrInput `pulumi:"md5Key"`
	// Source prefix.
	Src pulumi.StringPtrInput `pulumi:"src"`
}

func (RouterBfdMultihopTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfdMultihopTemplate)(nil)).Elem()
}

func (i RouterBfdMultihopTemplateArgs) ToRouterBfdMultihopTemplateOutput() RouterBfdMultihopTemplateOutput {
	return i.ToRouterBfdMultihopTemplateOutputWithContext(context.Background())
}

func (i RouterBfdMultihopTemplateArgs) ToRouterBfdMultihopTemplateOutputWithContext(ctx context.Context) RouterBfdMultihopTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfdMultihopTemplateOutput)
}

// RouterBfdMultihopTemplateArrayInput is an input type that accepts RouterBfdMultihopTemplateArray and RouterBfdMultihopTemplateArrayOutput values.
// You can construct a concrete instance of `RouterBfdMultihopTemplateArrayInput` via:
//
//	RouterBfdMultihopTemplateArray{ RouterBfdMultihopTemplateArgs{...} }
type RouterBfdMultihopTemplateArrayInput interface {
	pulumi.Input

	ToRouterBfdMultihopTemplateArrayOutput() RouterBfdMultihopTemplateArrayOutput
	ToRouterBfdMultihopTemplateArrayOutputWithContext(context.Context) RouterBfdMultihopTemplateArrayOutput
}

type RouterBfdMultihopTemplateArray []RouterBfdMultihopTemplateInput

func (RouterBfdMultihopTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfdMultihopTemplate)(nil)).Elem()
}

func (i RouterBfdMultihopTemplateArray) ToRouterBfdMultihopTemplateArrayOutput() RouterBfdMultihopTemplateArrayOutput {
	return i.ToRouterBfdMultihopTemplateArrayOutputWithContext(context.Background())
}

func (i RouterBfdMultihopTemplateArray) ToRouterBfdMultihopTemplateArrayOutputWithContext(ctx context.Context) RouterBfdMultihopTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfdMultihopTemplateArrayOutput)
}

type RouterBfdMultihopTemplateOutput struct{ *pulumi.OutputState }

func (RouterBfdMultihopTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfdMultihopTemplate)(nil)).Elem()
}

func (o RouterBfdMultihopTemplateOutput) ToRouterBfdMultihopTemplateOutput() RouterBfdMultihopTemplateOutput {
	return o
}

func (o RouterBfdMultihopTemplateOutput) ToRouterBfdMultihopTemplateOutputWithContext(ctx context.Context) RouterBfdMultihopTemplateOutput {
	return o
}

// Authentication mode. Valid values: `none`, `md5`.
func (o RouterBfdMultihopTemplateOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// BFD desired minimal transmit interval (milliseconds).
func (o RouterBfdMultihopTemplateOutput) BfdDesiredMinTx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *int { return v.BfdDesiredMinTx }).(pulumi.IntPtrOutput)
}

// BFD detection multiplier.
func (o RouterBfdMultihopTemplateOutput) BfdDetectMult() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *int { return v.BfdDetectMult }).(pulumi.IntPtrOutput)
}

// BFD required minimal receive interval (milliseconds).
func (o RouterBfdMultihopTemplateOutput) BfdRequiredMinRx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *int { return v.BfdRequiredMinRx }).(pulumi.IntPtrOutput)
}

// Destination prefix.
func (o RouterBfdMultihopTemplateOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

// ID.
func (o RouterBfdMultihopTemplateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// MD5 key of key ID 1.
func (o RouterBfdMultihopTemplateOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

// Source prefix.
func (o RouterBfdMultihopTemplateOutput) Src() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *string { return v.Src }).(pulumi.StringPtrOutput)
}

type RouterBfdMultihopTemplateArrayOutput struct{ *pulumi.OutputState }

func (RouterBfdMultihopTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfdMultihopTemplate)(nil)).Elem()
}

func (o RouterBfdMultihopTemplateArrayOutput) ToRouterBfdMultihopTemplateArrayOutput() RouterBfdMultihopTemplateArrayOutput {
	return o
}

func (o RouterBfdMultihopTemplateArrayOutput) ToRouterBfdMultihopTemplateArrayOutputWithContext(ctx context.Context) RouterBfdMultihopTemplateArrayOutput {
	return o
}

func (o RouterBfdMultihopTemplateArrayOutput) Index(i pulumi.IntInput) RouterBfdMultihopTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBfdMultihopTemplate {
		return vs[0].([]RouterBfdMultihopTemplate)[vs[1].(int)]
	}).(RouterBfdMultihopTemplateOutput)
}

type RouterBfdNeighbor struct {
	// Interface name.
	Interface *string `pulumi:"interface"`
	// IPv4 address of the BFD neighbor.
	Ip *string `pulumi:"ip"`
}

// RouterBfdNeighborInput is an input type that accepts RouterBfdNeighborArgs and RouterBfdNeighborOutput values.
// You can construct a concrete instance of `RouterBfdNeighborInput` via:
//
//	RouterBfdNeighborArgs{...}
type RouterBfdNeighborInput interface {
	pulumi.Input

	ToRouterBfdNeighborOutput() RouterBfdNeighborOutput
	ToRouterBfdNeighborOutputWithContext(context.Context) RouterBfdNeighborOutput
}

type RouterBfdNeighborArgs struct {
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IPv4 address of the BFD neighbor.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (RouterBfdNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfdNeighbor)(nil)).Elem()
}

func (i RouterBfdNeighborArgs) ToRouterBfdNeighborOutput() RouterBfdNeighborOutput {
	return i.ToRouterBfdNeighborOutputWithContext(context.Background())
}

func (i RouterBfdNeighborArgs) ToRouterBfdNeighborOutputWithContext(ctx context.Context) RouterBfdNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfdNeighborOutput)
}

// RouterBfdNeighborArrayInput is an input type that accepts RouterBfdNeighborArray and RouterBfdNeighborArrayOutput values.
// You can construct a concrete instance of `RouterBfdNeighborArrayInput` via:
//
//	RouterBfdNeighborArray{ RouterBfdNeighborArgs{...} }
type RouterBfdNeighborArrayInput interface {
	pulumi.Input

	ToRouterBfdNeighborArrayOutput() RouterBfdNeighborArrayOutput
	ToRouterBfdNeighborArrayOutputWithContext(context.Context) RouterBfdNeighborArrayOutput
}

type RouterBfdNeighborArray []RouterBfdNeighborInput

func (RouterBfdNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfdNeighbor)(nil)).Elem()
}

func (i RouterBfdNeighborArray) ToRouterBfdNeighborArrayOutput() RouterBfdNeighborArrayOutput {
	return i.ToRouterBfdNeighborArrayOutputWithContext(context.Background())
}

func (i RouterBfdNeighborArray) ToRouterBfdNeighborArrayOutputWithContext(ctx context.Context) RouterBfdNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfdNeighborArrayOutput)
}

type RouterBfdNeighborOutput struct{ *pulumi.OutputState }

func (RouterBfdNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfdNeighbor)(nil)).Elem()
}

func (o RouterBfdNeighborOutput) ToRouterBfdNeighborOutput() RouterBfdNeighborOutput {
	return o
}

func (o RouterBfdNeighborOutput) ToRouterBfdNeighborOutputWithContext(ctx context.Context) RouterBfdNeighborOutput {
	return o
}

// Interface name.
func (o RouterBfdNeighborOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdNeighbor) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IPv4 address of the BFD neighbor.
func (o RouterBfdNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type RouterBfdNeighborArrayOutput struct{ *pulumi.OutputState }

func (RouterBfdNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfdNeighbor)(nil)).Elem()
}

func (o RouterBfdNeighborArrayOutput) ToRouterBfdNeighborArrayOutput() RouterBfdNeighborArrayOutput {
	return o
}

func (o RouterBfdNeighborArrayOutput) ToRouterBfdNeighborArrayOutputWithContext(ctx context.Context) RouterBfdNeighborArrayOutput {
	return o
}

func (o RouterBfdNeighborArrayOutput) Index(i pulumi.IntInput) RouterBfdNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBfdNeighbor {
		return vs[0].([]RouterBfdNeighbor)[vs[1].(int)]
	}).(RouterBfdNeighborOutput)
}

type RouterBgpAdminDistance struct {
	// Administrative distance to apply (1 - 255).
	Distance *int `pulumi:"distance"`
	// ID.
	Id *int `pulumi:"id"`
	// Neighbor address prefix.
	NeighbourPrefix *string `pulumi:"neighbourPrefix"`
	// Access list of routes to apply new distance to.
	RouteList *string `pulumi:"routeList"`
}

// RouterBgpAdminDistanceInput is an input type that accepts RouterBgpAdminDistanceArgs and RouterBgpAdminDistanceOutput values.
// You can construct a concrete instance of `RouterBgpAdminDistanceInput` via:
//
//	RouterBgpAdminDistanceArgs{...}
type RouterBgpAdminDistanceInput interface {
	pulumi.Input

	ToRouterBgpAdminDistanceOutput() RouterBgpAdminDistanceOutput
	ToRouterBgpAdminDistanceOutputWithContext(context.Context) RouterBgpAdminDistanceOutput
}

type RouterBgpAdminDistanceArgs struct {
	// Administrative distance to apply (1 - 255).
	Distance pulumi.IntPtrInput `pulumi:"distance"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Neighbor address prefix.
	NeighbourPrefix pulumi.StringPtrInput `pulumi:"neighbourPrefix"`
	// Access list of routes to apply new distance to.
	RouteList pulumi.StringPtrInput `pulumi:"routeList"`
}

func (RouterBgpAdminDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAdminDistance)(nil)).Elem()
}

func (i RouterBgpAdminDistanceArgs) ToRouterBgpAdminDistanceOutput() RouterBgpAdminDistanceOutput {
	return i.ToRouterBgpAdminDistanceOutputWithContext(context.Background())
}

func (i RouterBgpAdminDistanceArgs) ToRouterBgpAdminDistanceOutputWithContext(ctx context.Context) RouterBgpAdminDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAdminDistanceOutput)
}

// RouterBgpAdminDistanceArrayInput is an input type that accepts RouterBgpAdminDistanceArray and RouterBgpAdminDistanceArrayOutput values.
// You can construct a concrete instance of `RouterBgpAdminDistanceArrayInput` via:
//
//	RouterBgpAdminDistanceArray{ RouterBgpAdminDistanceArgs{...} }
type RouterBgpAdminDistanceArrayInput interface {
	pulumi.Input

	ToRouterBgpAdminDistanceArrayOutput() RouterBgpAdminDistanceArrayOutput
	ToRouterBgpAdminDistanceArrayOutputWithContext(context.Context) RouterBgpAdminDistanceArrayOutput
}

type RouterBgpAdminDistanceArray []RouterBgpAdminDistanceInput

func (RouterBgpAdminDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAdminDistance)(nil)).Elem()
}

func (i RouterBgpAdminDistanceArray) ToRouterBgpAdminDistanceArrayOutput() RouterBgpAdminDistanceArrayOutput {
	return i.ToRouterBgpAdminDistanceArrayOutputWithContext(context.Background())
}

func (i RouterBgpAdminDistanceArray) ToRouterBgpAdminDistanceArrayOutputWithContext(ctx context.Context) RouterBgpAdminDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAdminDistanceArrayOutput)
}

type RouterBgpAdminDistanceOutput struct{ *pulumi.OutputState }

func (RouterBgpAdminDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAdminDistance)(nil)).Elem()
}

func (o RouterBgpAdminDistanceOutput) ToRouterBgpAdminDistanceOutput() RouterBgpAdminDistanceOutput {
	return o
}

func (o RouterBgpAdminDistanceOutput) ToRouterBgpAdminDistanceOutputWithContext(ctx context.Context) RouterBgpAdminDistanceOutput {
	return o
}

// Administrative distance to apply (1 - 255).
func (o RouterBgpAdminDistanceOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpAdminDistance) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

// ID.
func (o RouterBgpAdminDistanceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpAdminDistance) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Neighbor address prefix.
func (o RouterBgpAdminDistanceOutput) NeighbourPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAdminDistance) *string { return v.NeighbourPrefix }).(pulumi.StringPtrOutput)
}

// Access list of routes to apply new distance to.
func (o RouterBgpAdminDistanceOutput) RouteList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAdminDistance) *string { return v.RouteList }).(pulumi.StringPtrOutput)
}

type RouterBgpAdminDistanceArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpAdminDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAdminDistance)(nil)).Elem()
}

func (o RouterBgpAdminDistanceArrayOutput) ToRouterBgpAdminDistanceArrayOutput() RouterBgpAdminDistanceArrayOutput {
	return o
}

func (o RouterBgpAdminDistanceArrayOutput) ToRouterBgpAdminDistanceArrayOutputWithContext(ctx context.Context) RouterBgpAdminDistanceArrayOutput {
	return o
}

func (o RouterBgpAdminDistanceArrayOutput) Index(i pulumi.IntInput) RouterBgpAdminDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpAdminDistance {
		return vs[0].([]RouterBgpAdminDistance)[vs[1].(int)]
	}).(RouterBgpAdminDistanceOutput)
}

type RouterBgpAggregateAddress6 struct {
	// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
	AsSet *string `pulumi:"asSet"`
	// ID.
	Id *int `pulumi:"id"`
	// Aggregate IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
	// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
	//
	// The `aggregateAddress6` block supports:
	SummaryOnly *string `pulumi:"summaryOnly"`
}

// RouterBgpAggregateAddress6Input is an input type that accepts RouterBgpAggregateAddress6Args and RouterBgpAggregateAddress6Output values.
// You can construct a concrete instance of `RouterBgpAggregateAddress6Input` via:
//
//	RouterBgpAggregateAddress6Args{...}
type RouterBgpAggregateAddress6Input interface {
	pulumi.Input

	ToRouterBgpAggregateAddress6Output() RouterBgpAggregateAddress6Output
	ToRouterBgpAggregateAddress6OutputWithContext(context.Context) RouterBgpAggregateAddress6Output
}

type RouterBgpAggregateAddress6Args struct {
	// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
	AsSet pulumi.StringPtrInput `pulumi:"asSet"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Aggregate IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
	// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
	//
	// The `aggregateAddress6` block supports:
	SummaryOnly pulumi.StringPtrInput `pulumi:"summaryOnly"`
}

func (RouterBgpAggregateAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAggregateAddress6)(nil)).Elem()
}

func (i RouterBgpAggregateAddress6Args) ToRouterBgpAggregateAddress6Output() RouterBgpAggregateAddress6Output {
	return i.ToRouterBgpAggregateAddress6OutputWithContext(context.Background())
}

func (i RouterBgpAggregateAddress6Args) ToRouterBgpAggregateAddress6OutputWithContext(ctx context.Context) RouterBgpAggregateAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAggregateAddress6Output)
}

// RouterBgpAggregateAddress6ArrayInput is an input type that accepts RouterBgpAggregateAddress6Array and RouterBgpAggregateAddress6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpAggregateAddress6ArrayInput` via:
//
//	RouterBgpAggregateAddress6Array{ RouterBgpAggregateAddress6Args{...} }
type RouterBgpAggregateAddress6ArrayInput interface {
	pulumi.Input

	ToRouterBgpAggregateAddress6ArrayOutput() RouterBgpAggregateAddress6ArrayOutput
	ToRouterBgpAggregateAddress6ArrayOutputWithContext(context.Context) RouterBgpAggregateAddress6ArrayOutput
}

type RouterBgpAggregateAddress6Array []RouterBgpAggregateAddress6Input

func (RouterBgpAggregateAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAggregateAddress6)(nil)).Elem()
}

func (i RouterBgpAggregateAddress6Array) ToRouterBgpAggregateAddress6ArrayOutput() RouterBgpAggregateAddress6ArrayOutput {
	return i.ToRouterBgpAggregateAddress6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpAggregateAddress6Array) ToRouterBgpAggregateAddress6ArrayOutputWithContext(ctx context.Context) RouterBgpAggregateAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAggregateAddress6ArrayOutput)
}

type RouterBgpAggregateAddress6Output struct{ *pulumi.OutputState }

func (RouterBgpAggregateAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAggregateAddress6)(nil)).Elem()
}

func (o RouterBgpAggregateAddress6Output) ToRouterBgpAggregateAddress6Output() RouterBgpAggregateAddress6Output {
	return o
}

func (o RouterBgpAggregateAddress6Output) ToRouterBgpAggregateAddress6OutputWithContext(ctx context.Context) RouterBgpAggregateAddress6Output {
	return o
}

// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
func (o RouterBgpAggregateAddress6Output) AsSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress6) *string { return v.AsSet }).(pulumi.StringPtrOutput)
}

// ID.
func (o RouterBgpAggregateAddress6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Aggregate IPv6 prefix.
func (o RouterBgpAggregateAddress6Output) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress6) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
//
// The `aggregateAddress6` block supports:
func (o RouterBgpAggregateAddress6Output) SummaryOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress6) *string { return v.SummaryOnly }).(pulumi.StringPtrOutput)
}

type RouterBgpAggregateAddress6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpAggregateAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAggregateAddress6)(nil)).Elem()
}

func (o RouterBgpAggregateAddress6ArrayOutput) ToRouterBgpAggregateAddress6ArrayOutput() RouterBgpAggregateAddress6ArrayOutput {
	return o
}

func (o RouterBgpAggregateAddress6ArrayOutput) ToRouterBgpAggregateAddress6ArrayOutputWithContext(ctx context.Context) RouterBgpAggregateAddress6ArrayOutput {
	return o
}

func (o RouterBgpAggregateAddress6ArrayOutput) Index(i pulumi.IntInput) RouterBgpAggregateAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpAggregateAddress6 {
		return vs[0].([]RouterBgpAggregateAddress6)[vs[1].(int)]
	}).(RouterBgpAggregateAddress6Output)
}

type RouterBgpAggregateAddress struct {
	// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
	AsSet *string `pulumi:"asSet"`
	// ID.
	Id *int `pulumi:"id"`
	// Aggregate prefix.
	Prefix *string `pulumi:"prefix"`
	// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
	SummaryOnly *string `pulumi:"summaryOnly"`
}

// RouterBgpAggregateAddressInput is an input type that accepts RouterBgpAggregateAddressArgs and RouterBgpAggregateAddressOutput values.
// You can construct a concrete instance of `RouterBgpAggregateAddressInput` via:
//
//	RouterBgpAggregateAddressArgs{...}
type RouterBgpAggregateAddressInput interface {
	pulumi.Input

	ToRouterBgpAggregateAddressOutput() RouterBgpAggregateAddressOutput
	ToRouterBgpAggregateAddressOutputWithContext(context.Context) RouterBgpAggregateAddressOutput
}

type RouterBgpAggregateAddressArgs struct {
	// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
	AsSet pulumi.StringPtrInput `pulumi:"asSet"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Aggregate prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
	SummaryOnly pulumi.StringPtrInput `pulumi:"summaryOnly"`
}

func (RouterBgpAggregateAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAggregateAddress)(nil)).Elem()
}

func (i RouterBgpAggregateAddressArgs) ToRouterBgpAggregateAddressOutput() RouterBgpAggregateAddressOutput {
	return i.ToRouterBgpAggregateAddressOutputWithContext(context.Background())
}

func (i RouterBgpAggregateAddressArgs) ToRouterBgpAggregateAddressOutputWithContext(ctx context.Context) RouterBgpAggregateAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAggregateAddressOutput)
}

// RouterBgpAggregateAddressArrayInput is an input type that accepts RouterBgpAggregateAddressArray and RouterBgpAggregateAddressArrayOutput values.
// You can construct a concrete instance of `RouterBgpAggregateAddressArrayInput` via:
//
//	RouterBgpAggregateAddressArray{ RouterBgpAggregateAddressArgs{...} }
type RouterBgpAggregateAddressArrayInput interface {
	pulumi.Input

	ToRouterBgpAggregateAddressArrayOutput() RouterBgpAggregateAddressArrayOutput
	ToRouterBgpAggregateAddressArrayOutputWithContext(context.Context) RouterBgpAggregateAddressArrayOutput
}

type RouterBgpAggregateAddressArray []RouterBgpAggregateAddressInput

func (RouterBgpAggregateAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAggregateAddress)(nil)).Elem()
}

func (i RouterBgpAggregateAddressArray) ToRouterBgpAggregateAddressArrayOutput() RouterBgpAggregateAddressArrayOutput {
	return i.ToRouterBgpAggregateAddressArrayOutputWithContext(context.Background())
}

func (i RouterBgpAggregateAddressArray) ToRouterBgpAggregateAddressArrayOutputWithContext(ctx context.Context) RouterBgpAggregateAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAggregateAddressArrayOutput)
}

type RouterBgpAggregateAddressOutput struct{ *pulumi.OutputState }

func (RouterBgpAggregateAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAggregateAddress)(nil)).Elem()
}

func (o RouterBgpAggregateAddressOutput) ToRouterBgpAggregateAddressOutput() RouterBgpAggregateAddressOutput {
	return o
}

func (o RouterBgpAggregateAddressOutput) ToRouterBgpAggregateAddressOutputWithContext(ctx context.Context) RouterBgpAggregateAddressOutput {
	return o
}

// Enable/disable generate AS set path information. Valid values: `enable`, `disable`.
func (o RouterBgpAggregateAddressOutput) AsSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress) *string { return v.AsSet }).(pulumi.StringPtrOutput)
}

// ID.
func (o RouterBgpAggregateAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Aggregate prefix.
func (o RouterBgpAggregateAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Enable/disable filter more specific routes from updates. Valid values: `enable`, `disable`.
func (o RouterBgpAggregateAddressOutput) SummaryOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress) *string { return v.SummaryOnly }).(pulumi.StringPtrOutput)
}

type RouterBgpAggregateAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpAggregateAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAggregateAddress)(nil)).Elem()
}

func (o RouterBgpAggregateAddressArrayOutput) ToRouterBgpAggregateAddressArrayOutput() RouterBgpAggregateAddressArrayOutput {
	return o
}

func (o RouterBgpAggregateAddressArrayOutput) ToRouterBgpAggregateAddressArrayOutputWithContext(ctx context.Context) RouterBgpAggregateAddressArrayOutput {
	return o
}

func (o RouterBgpAggregateAddressArrayOutput) Index(i pulumi.IntInput) RouterBgpAggregateAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpAggregateAddress {
		return vs[0].([]RouterBgpAggregateAddress)[vs[1].(int)]
	}).(RouterBgpAggregateAddressOutput)
}

type RouterBgpConfederationPeer struct {
	// Peer ID.
	Peer *string `pulumi:"peer"`
}

// RouterBgpConfederationPeerInput is an input type that accepts RouterBgpConfederationPeerArgs and RouterBgpConfederationPeerOutput values.
// You can construct a concrete instance of `RouterBgpConfederationPeerInput` via:
//
//	RouterBgpConfederationPeerArgs{...}
type RouterBgpConfederationPeerInput interface {
	pulumi.Input

	ToRouterBgpConfederationPeerOutput() RouterBgpConfederationPeerOutput
	ToRouterBgpConfederationPeerOutputWithContext(context.Context) RouterBgpConfederationPeerOutput
}

type RouterBgpConfederationPeerArgs struct {
	// Peer ID.
	Peer pulumi.StringPtrInput `pulumi:"peer"`
}

func (RouterBgpConfederationPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpConfederationPeer)(nil)).Elem()
}

func (i RouterBgpConfederationPeerArgs) ToRouterBgpConfederationPeerOutput() RouterBgpConfederationPeerOutput {
	return i.ToRouterBgpConfederationPeerOutputWithContext(context.Background())
}

func (i RouterBgpConfederationPeerArgs) ToRouterBgpConfederationPeerOutputWithContext(ctx context.Context) RouterBgpConfederationPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpConfederationPeerOutput)
}

// RouterBgpConfederationPeerArrayInput is an input type that accepts RouterBgpConfederationPeerArray and RouterBgpConfederationPeerArrayOutput values.
// You can construct a concrete instance of `RouterBgpConfederationPeerArrayInput` via:
//
//	RouterBgpConfederationPeerArray{ RouterBgpConfederationPeerArgs{...} }
type RouterBgpConfederationPeerArrayInput interface {
	pulumi.Input

	ToRouterBgpConfederationPeerArrayOutput() RouterBgpConfederationPeerArrayOutput
	ToRouterBgpConfederationPeerArrayOutputWithContext(context.Context) RouterBgpConfederationPeerArrayOutput
}

type RouterBgpConfederationPeerArray []RouterBgpConfederationPeerInput

func (RouterBgpConfederationPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpConfederationPeer)(nil)).Elem()
}

func (i RouterBgpConfederationPeerArray) ToRouterBgpConfederationPeerArrayOutput() RouterBgpConfederationPeerArrayOutput {
	return i.ToRouterBgpConfederationPeerArrayOutputWithContext(context.Background())
}

func (i RouterBgpConfederationPeerArray) ToRouterBgpConfederationPeerArrayOutputWithContext(ctx context.Context) RouterBgpConfederationPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpConfederationPeerArrayOutput)
}

type RouterBgpConfederationPeerOutput struct{ *pulumi.OutputState }

func (RouterBgpConfederationPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpConfederationPeer)(nil)).Elem()
}

func (o RouterBgpConfederationPeerOutput) ToRouterBgpConfederationPeerOutput() RouterBgpConfederationPeerOutput {
	return o
}

func (o RouterBgpConfederationPeerOutput) ToRouterBgpConfederationPeerOutputWithContext(ctx context.Context) RouterBgpConfederationPeerOutput {
	return o
}

// Peer ID.
func (o RouterBgpConfederationPeerOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpConfederationPeer) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

type RouterBgpConfederationPeerArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpConfederationPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpConfederationPeer)(nil)).Elem()
}

func (o RouterBgpConfederationPeerArrayOutput) ToRouterBgpConfederationPeerArrayOutput() RouterBgpConfederationPeerArrayOutput {
	return o
}

func (o RouterBgpConfederationPeerArrayOutput) ToRouterBgpConfederationPeerArrayOutputWithContext(ctx context.Context) RouterBgpConfederationPeerArrayOutput {
	return o
}

func (o RouterBgpConfederationPeerArrayOutput) Index(i pulumi.IntInput) RouterBgpConfederationPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpConfederationPeer {
		return vs[0].([]RouterBgpConfederationPeer)[vs[1].(int)]
	}).(RouterBgpConfederationPeerOutput)
}

type RouterBgpNeighborType struct {
	// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
	Activate *string `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
	Activate6 *string `pulumi:"activate6"`
	// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv4 *string `pulumi:"activateVpnv4"`
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath *string `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 *string `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv4 *string `pulumi:"additionalPathVpnv4"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath *int `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 *int `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 *int `pulumi:"advAdditionalPathVpnv4"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval *int `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn *int `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 *int `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable *string `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable6 *string `pulumi:"allowasInEnable6"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 *int `pulumi:"allowasInVpnv4"`
	// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
	AsOverride *string `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
	AsOverride6 *string `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged *string `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged6 *string `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv4 *string `pulumi:"attributeUnchangedVpnv4"`
	// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate *string `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate6 *string `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDynamic *string `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart *string `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart6 *string `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv4 *string `pulumi:"capabilityGracefulRestartVpnv4"`
	// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf *string `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf6 *string `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityRouteRefresh *string `pulumi:"capabilityRouteRefresh"`
	// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
	ConditionalAdvertise6s []RouterBgpNeighborConditionalAdvertise6 `pulumi:"conditionalAdvertise6s"`
	// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
	ConditionalAdvertises []RouterBgpNeighborConditionalAdvertise `pulumi:"conditionalAdvertises"`
	// Interval (sec) for connect timer.
	ConnectTimer *int `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap *string `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 *string `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description *string `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn *string `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 *string `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 *string `pulumi:"distributeListInVpnv4"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut *string `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 *string `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 *string `pulumi:"distributeListOutVpnv4"`
	// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
	DontCapabilityNegotiate *string `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
	EbgpEnforceMultihop *string `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl *int `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn *string `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 *string `pulumi:"filterListIn6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut *string `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 *string `pulumi:"filterListOut6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer *int `pulumi:"holdtimeTimer"`
	// Interface
	Interface *string `pulumi:"interface"`
	// IP/IPv6 address of neighbor.
	Ip *string `pulumi:"ip"`
	// Keep alive timer interval (sec).
	KeepAliveTimer *int `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
	LinkDownFailover *string `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs *int `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
	LocalAsNoPrepend *string `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
	LocalAsReplaceAs *string `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix *int `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 *int `pulumi:"maximumPrefix6"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold *int `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 *int `pulumi:"maximumPrefixThreshold6"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 *int `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 *int `pulumi:"maximumPrefixVpnv4"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly *string `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly6 *string `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv4 *string `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf *string `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf6 *string `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr *string `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr6 *string `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv4 *string `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
	OverrideCapability *string `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
	Passive *string `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password *string `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn *string `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 *string `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 *string `pulumi:"prefixListInVpnv4"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut *string `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 *string `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 *string `pulumi:"prefixListOutVpnv4"`
	// AS number of neighbor.
	RemoteAs *int `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs *string `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs6 *string `pulumi:"removePrivateAs6"`
	// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv4 *string `pulumi:"removePrivateAsVpnv4"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime *int `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime *int `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn *string `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 *string `pulumi:"routeMapIn6"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 *string `pulumi:"routeMapInVpnv4"`
	// IPv4 Outbound route map filter.
	RouteMapOut *string `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 *string `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable *string `pulumi:"routeMapOut6Preferable"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable *string `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 *string `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable *string `pulumi:"routeMapOutVpnv4Preferable"`
	// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient *string `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient6 *string `pulumi:"routeReflectorClient6"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv4 *string `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient *string `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient6 *string `pulumi:"routeServerClient6"`
	// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv4 *string `pulumi:"routeServerClientVpnv4"`
	// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity *string `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity6 *string `pulumi:"sendCommunity6"`
	// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv4 *string `pulumi:"sendCommunityVpnv4"`
	// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
	Shutdown *string `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration *string `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration6 *string `pulumi:"softReconfiguration6"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv4 *string `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
	StaleRoute *string `pulumi:"staleRoute"`
	// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
	StrictCapabilityMatch *string `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap *string `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 *string `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource *string `pulumi:"updateSource"`
	// Neighbor weight.
	Weight *int `pulumi:"weight"`
}

// RouterBgpNeighborTypeInput is an input type that accepts RouterBgpNeighborTypeArgs and RouterBgpNeighborTypeOutput values.
// You can construct a concrete instance of `RouterBgpNeighborTypeInput` via:
//
//	RouterBgpNeighborTypeArgs{...}
type RouterBgpNeighborTypeInput interface {
	pulumi.Input

	ToRouterBgpNeighborTypeOutput() RouterBgpNeighborTypeOutput
	ToRouterBgpNeighborTypeOutputWithContext(context.Context) RouterBgpNeighborTypeOutput
}

type RouterBgpNeighborTypeArgs struct {
	// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
	Activate pulumi.StringPtrInput `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
	Activate6 pulumi.StringPtrInput `pulumi:"activate6"`
	// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv4 pulumi.StringPtrInput `pulumi:"activateVpnv4"`
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath pulumi.StringPtrInput `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 pulumi.StringPtrInput `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv4 pulumi.StringPtrInput `pulumi:"additionalPathVpnv4"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath pulumi.IntPtrInput `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 pulumi.IntPtrInput `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 pulumi.IntPtrInput `pulumi:"advAdditionalPathVpnv4"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval pulumi.IntPtrInput `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn pulumi.IntPtrInput `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 pulumi.IntPtrInput `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable pulumi.StringPtrInput `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable6 pulumi.StringPtrInput `pulumi:"allowasInEnable6"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 pulumi.IntPtrInput `pulumi:"allowasInVpnv4"`
	// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
	AsOverride pulumi.StringPtrInput `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
	AsOverride6 pulumi.StringPtrInput `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged pulumi.StringPtrInput `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged6 pulumi.StringPtrInput `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv4 pulumi.StringPtrInput `pulumi:"attributeUnchangedVpnv4"`
	// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate pulumi.StringPtrInput `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate6 pulumi.StringPtrInput `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDynamic pulumi.StringPtrInput `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart pulumi.StringPtrInput `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart6 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv4 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestartVpnv4"`
	// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf pulumi.StringPtrInput `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf6 pulumi.StringPtrInput `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityRouteRefresh pulumi.StringPtrInput `pulumi:"capabilityRouteRefresh"`
	// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
	ConditionalAdvertise6s RouterBgpNeighborConditionalAdvertise6ArrayInput `pulumi:"conditionalAdvertise6s"`
	// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
	ConditionalAdvertises RouterBgpNeighborConditionalAdvertiseArrayInput `pulumi:"conditionalAdvertises"`
	// Interval (sec) for connect timer.
	ConnectTimer pulumi.IntPtrInput `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap pulumi.StringPtrInput `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 pulumi.StringPtrInput `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn pulumi.StringPtrInput `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 pulumi.StringPtrInput `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 pulumi.StringPtrInput `pulumi:"distributeListInVpnv4"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut pulumi.StringPtrInput `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 pulumi.StringPtrInput `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 pulumi.StringPtrInput `pulumi:"distributeListOutVpnv4"`
	// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
	DontCapabilityNegotiate pulumi.StringPtrInput `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
	EbgpEnforceMultihop pulumi.StringPtrInput `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl pulumi.IntPtrInput `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn pulumi.StringPtrInput `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 pulumi.StringPtrInput `pulumi:"filterListIn6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut pulumi.StringPtrInput `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 pulumi.StringPtrInput `pulumi:"filterListOut6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntPtrInput `pulumi:"holdtimeTimer"`
	// Interface
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IP/IPv6 address of neighbor.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Keep alive timer interval (sec).
	KeepAliveTimer pulumi.IntPtrInput `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
	LinkDownFailover pulumi.StringPtrInput `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs pulumi.IntPtrInput `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
	LocalAsNoPrepend pulumi.StringPtrInput `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
	LocalAsReplaceAs pulumi.StringPtrInput `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix pulumi.IntPtrInput `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 pulumi.IntPtrInput `pulumi:"maximumPrefix6"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold pulumi.IntPtrInput `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 pulumi.IntPtrInput `pulumi:"maximumPrefixThreshold6"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 pulumi.IntPtrInput `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 pulumi.IntPtrInput `pulumi:"maximumPrefixVpnv4"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly6 pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv4 pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf pulumi.StringPtrInput `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf6 pulumi.StringPtrInput `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr pulumi.StringPtrInput `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr6 pulumi.StringPtrInput `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv4 pulumi.StringPtrInput `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
	OverrideCapability pulumi.StringPtrInput `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
	Passive pulumi.StringPtrInput `pulumi:"passive"`
	// Password used in MD5 authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn pulumi.StringPtrInput `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 pulumi.StringPtrInput `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 pulumi.StringPtrInput `pulumi:"prefixListInVpnv4"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut pulumi.StringPtrInput `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 pulumi.StringPtrInput `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 pulumi.StringPtrInput `pulumi:"prefixListOutVpnv4"`
	// AS number of neighbor.
	RemoteAs pulumi.IntPtrInput `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs pulumi.StringPtrInput `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs6 pulumi.StringPtrInput `pulumi:"removePrivateAs6"`
	// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv4 pulumi.StringPtrInput `pulumi:"removePrivateAsVpnv4"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime pulumi.IntPtrInput `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime pulumi.IntPtrInput `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn pulumi.StringPtrInput `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 pulumi.StringPtrInput `pulumi:"routeMapIn6"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 pulumi.StringPtrInput `pulumi:"routeMapInVpnv4"`
	// IPv4 Outbound route map filter.
	RouteMapOut pulumi.StringPtrInput `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 pulumi.StringPtrInput `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable pulumi.StringPtrInput `pulumi:"routeMapOut6Preferable"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable pulumi.StringPtrInput `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 pulumi.StringPtrInput `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable pulumi.StringPtrInput `pulumi:"routeMapOutVpnv4Preferable"`
	// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient pulumi.StringPtrInput `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient6 pulumi.StringPtrInput `pulumi:"routeReflectorClient6"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv4 pulumi.StringPtrInput `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient pulumi.StringPtrInput `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient6 pulumi.StringPtrInput `pulumi:"routeServerClient6"`
	// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv4 pulumi.StringPtrInput `pulumi:"routeServerClientVpnv4"`
	// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity pulumi.StringPtrInput `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity6 pulumi.StringPtrInput `pulumi:"sendCommunity6"`
	// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv4 pulumi.StringPtrInput `pulumi:"sendCommunityVpnv4"`
	// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
	Shutdown pulumi.StringPtrInput `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration pulumi.StringPtrInput `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration6 pulumi.StringPtrInput `pulumi:"softReconfiguration6"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv4 pulumi.StringPtrInput `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
	StaleRoute pulumi.StringPtrInput `pulumi:"staleRoute"`
	// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
	StrictCapabilityMatch pulumi.StringPtrInput `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap pulumi.StringPtrInput `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 pulumi.StringPtrInput `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource pulumi.StringPtrInput `pulumi:"updateSource"`
	// Neighbor weight.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (RouterBgpNeighborTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborType)(nil)).Elem()
}

func (i RouterBgpNeighborTypeArgs) ToRouterBgpNeighborTypeOutput() RouterBgpNeighborTypeOutput {
	return i.ToRouterBgpNeighborTypeOutputWithContext(context.Background())
}

func (i RouterBgpNeighborTypeArgs) ToRouterBgpNeighborTypeOutputWithContext(ctx context.Context) RouterBgpNeighborTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborTypeOutput)
}

// RouterBgpNeighborTypeArrayInput is an input type that accepts RouterBgpNeighborTypeArray and RouterBgpNeighborTypeArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborTypeArrayInput` via:
//
//	RouterBgpNeighborTypeArray{ RouterBgpNeighborTypeArgs{...} }
type RouterBgpNeighborTypeArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborTypeArrayOutput() RouterBgpNeighborTypeArrayOutput
	ToRouterBgpNeighborTypeArrayOutputWithContext(context.Context) RouterBgpNeighborTypeArrayOutput
}

type RouterBgpNeighborTypeArray []RouterBgpNeighborTypeInput

func (RouterBgpNeighborTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborType)(nil)).Elem()
}

func (i RouterBgpNeighborTypeArray) ToRouterBgpNeighborTypeArrayOutput() RouterBgpNeighborTypeArrayOutput {
	return i.ToRouterBgpNeighborTypeArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborTypeArray) ToRouterBgpNeighborTypeArrayOutputWithContext(ctx context.Context) RouterBgpNeighborTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborTypeArrayOutput)
}

type RouterBgpNeighborTypeOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborType)(nil)).Elem()
}

func (o RouterBgpNeighborTypeOutput) ToRouterBgpNeighborTypeOutput() RouterBgpNeighborTypeOutput {
	return o
}

func (o RouterBgpNeighborTypeOutput) ToRouterBgpNeighborTypeOutputWithContext(ctx context.Context) RouterBgpNeighborTypeOutput {
	return o
}

// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) Activate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Activate }).(pulumi.StringPtrOutput)
}

// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) Activate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Activate6 }).(pulumi.StringPtrOutput)
}

// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) ActivateVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.ActivateVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o RouterBgpNeighborTypeOutput) AdditionalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AdditionalPath }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o RouterBgpNeighborTypeOutput) AdditionalPath6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AdditionalPath6 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o RouterBgpNeighborTypeOutput) AdditionalPathVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AdditionalPathVpnv4 }).(pulumi.StringPtrOutput)
}

// Number of IPv4 additional paths that can be advertised to this neighbor.
func (o RouterBgpNeighborTypeOutput) AdvAdditionalPath() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AdvAdditionalPath }).(pulumi.IntPtrOutput)
}

// Number of IPv6 additional paths that can be advertised to this neighbor.
func (o RouterBgpNeighborTypeOutput) AdvAdditionalPath6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AdvAdditionalPath6 }).(pulumi.IntPtrOutput)
}

// Number of VPNv4 additional paths that can be advertised to this neighbor.
func (o RouterBgpNeighborTypeOutput) AdvAdditionalPathVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AdvAdditionalPathVpnv4 }).(pulumi.IntPtrOutput)
}

// Minimum interval (sec) between sending updates.
func (o RouterBgpNeighborTypeOutput) AdvertisementInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AdvertisementInterval }).(pulumi.IntPtrOutput)
}

// IPv4 The maximum number of occurrence of my AS number allowed.
func (o RouterBgpNeighborTypeOutput) AllowasIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AllowasIn }).(pulumi.IntPtrOutput)
}

// IPv6 The maximum number of occurrence of my AS number allowed.
func (o RouterBgpNeighborTypeOutput) AllowasIn6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AllowasIn6 }).(pulumi.IntPtrOutput)
}

// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) AllowasInEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AllowasInEnable }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) AllowasInEnable6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AllowasInEnable6 }).(pulumi.StringPtrOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv4 route.
func (o RouterBgpNeighborTypeOutput) AllowasInVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AllowasInVpnv4 }).(pulumi.IntPtrOutput)
}

// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) AsOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AsOverride }).(pulumi.StringPtrOutput)
}

// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) AsOverride6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AsOverride6 }).(pulumi.StringPtrOutput)
}

// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
func (o RouterBgpNeighborTypeOutput) AttributeUnchanged() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AttributeUnchanged }).(pulumi.StringPtrOutput)
}

// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
func (o RouterBgpNeighborTypeOutput) AttributeUnchanged6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AttributeUnchanged6 }).(pulumi.StringPtrOutput)
}

// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
func (o RouterBgpNeighborTypeOutput) AttributeUnchangedVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AttributeUnchangedVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) CapabilityDefaultOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityDefaultOriginate }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) CapabilityDefaultOriginate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityDefaultOriginate6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) CapabilityDynamic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityDynamic }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) CapabilityGracefulRestart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityGracefulRestart }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) CapabilityGracefulRestart6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityGracefulRestart6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) CapabilityGracefulRestartVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityGracefulRestartVpnv4 }).(pulumi.StringPtrOutput)
}

// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
func (o RouterBgpNeighborTypeOutput) CapabilityOrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityOrf }).(pulumi.StringPtrOutput)
}

// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
func (o RouterBgpNeighborTypeOutput) CapabilityOrf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityOrf6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) CapabilityRouteRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityRouteRefresh }).(pulumi.StringPtrOutput)
}

// IPv6 conditional advertisement. The structure of `conditionalAdvertise6` block is documented below.
func (o RouterBgpNeighborTypeOutput) ConditionalAdvertise6s() RouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) []RouterBgpNeighborConditionalAdvertise6 {
		return v.ConditionalAdvertise6s
	}).(RouterBgpNeighborConditionalAdvertise6ArrayOutput)
}

// Conditional advertisement. The structure of `conditionalAdvertise` block is documented below.
func (o RouterBgpNeighborTypeOutput) ConditionalAdvertises() RouterBgpNeighborConditionalAdvertiseArrayOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) []RouterBgpNeighborConditionalAdvertise { return v.ConditionalAdvertises }).(RouterBgpNeighborConditionalAdvertiseArrayOutput)
}

// Interval (sec) for connect timer.
func (o RouterBgpNeighborTypeOutput) ConnectTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.ConnectTimer }).(pulumi.IntPtrOutput)
}

// Route map to specify criteria to originate IPv4 default.
func (o RouterBgpNeighborTypeOutput) DefaultOriginateRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DefaultOriginateRoutemap }).(pulumi.StringPtrOutput)
}

// Route map to specify criteria to originate IPv6 default.
func (o RouterBgpNeighborTypeOutput) DefaultOriginateRoutemap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DefaultOriginateRoutemap6 }).(pulumi.StringPtrOutput)
}

// Description.
func (o RouterBgpNeighborTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Filter for IPv4 updates from this neighbor.
func (o RouterBgpNeighborTypeOutput) DistributeListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListIn }).(pulumi.StringPtrOutput)
}

// Filter for IPv6 updates from this neighbor.
func (o RouterBgpNeighborTypeOutput) DistributeListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListIn6 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv4 updates from this neighbor.
func (o RouterBgpNeighborTypeOutput) DistributeListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListInVpnv4 }).(pulumi.StringPtrOutput)
}

// Filter for IPv4 updates to this neighbor.
func (o RouterBgpNeighborTypeOutput) DistributeListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListOut }).(pulumi.StringPtrOutput)
}

// Filter for IPv6 updates to this neighbor.
func (o RouterBgpNeighborTypeOutput) DistributeListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListOut6 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv4 updates to this neighbor.
func (o RouterBgpNeighborTypeOutput) DistributeListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListOutVpnv4 }).(pulumi.StringPtrOutput)
}

// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) DontCapabilityNegotiate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DontCapabilityNegotiate }).(pulumi.StringPtrOutput)
}

// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) EbgpEnforceMultihop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.EbgpEnforceMultihop }).(pulumi.StringPtrOutput)
}

// EBGP multihop TTL for this peer.
func (o RouterBgpNeighborTypeOutput) EbgpMultihopTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.EbgpMultihopTtl }).(pulumi.IntPtrOutput)
}

// BGP filter for IPv4 inbound routes.
func (o RouterBgpNeighborTypeOutput) FilterListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.FilterListIn }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv6 inbound routes.
func (o RouterBgpNeighborTypeOutput) FilterListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.FilterListIn6 }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv4 outbound routes.
func (o RouterBgpNeighborTypeOutput) FilterListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.FilterListOut }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv6 outbound routes.
func (o RouterBgpNeighborTypeOutput) FilterListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.FilterListOut6 }).(pulumi.StringPtrOutput)
}

// Interval (sec) before peer considered dead.
func (o RouterBgpNeighborTypeOutput) HoldtimeTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.HoldtimeTimer }).(pulumi.IntPtrOutput)
}

// Interface
func (o RouterBgpNeighborTypeOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IP/IPv6 address of neighbor.
func (o RouterBgpNeighborTypeOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Keep alive timer interval (sec).
func (o RouterBgpNeighborTypeOutput) KeepAliveTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.KeepAliveTimer }).(pulumi.IntPtrOutput)
}

// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) LinkDownFailover() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.LinkDownFailover }).(pulumi.StringPtrOutput)
}

// Local AS number of neighbor.
func (o RouterBgpNeighborTypeOutput) LocalAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.LocalAs }).(pulumi.IntPtrOutput)
}

// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) LocalAsNoPrepend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.LocalAsNoPrepend }).(pulumi.StringPtrOutput)
}

// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) LocalAsReplaceAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.LocalAsReplaceAs }).(pulumi.StringPtrOutput)
}

// Maximum number of IPv4 prefixes to accept from this peer.
func (o RouterBgpNeighborTypeOutput) MaximumPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefix }).(pulumi.IntPtrOutput)
}

// Maximum number of IPv6 prefixes to accept from this peer.
func (o RouterBgpNeighborTypeOutput) MaximumPrefix6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefix6 }).(pulumi.IntPtrOutput)
}

// Maximum IPv4 prefix threshold value (1 - 100 percent).
func (o RouterBgpNeighborTypeOutput) MaximumPrefixThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefixThreshold }).(pulumi.IntPtrOutput)
}

// Maximum IPv6 prefix threshold value (1 - 100 percent).
func (o RouterBgpNeighborTypeOutput) MaximumPrefixThreshold6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefixThreshold6 }).(pulumi.IntPtrOutput)
}

// Maximum VPNv4 prefix threshold value (1 - 100 percent).
func (o RouterBgpNeighborTypeOutput) MaximumPrefixThresholdVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefixThresholdVpnv4 }).(pulumi.IntPtrOutput)
}

// Maximum number of VPNv4 prefixes to accept from this peer.
func (o RouterBgpNeighborTypeOutput) MaximumPrefixVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefixVpnv4 }).(pulumi.IntPtrOutput)
}

// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) MaximumPrefixWarningOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.MaximumPrefixWarningOnly }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) MaximumPrefixWarningOnly6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.MaximumPrefixWarningOnly6 }).(pulumi.StringPtrOutput)
}

// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) MaximumPrefixWarningOnlyVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.MaximumPrefixWarningOnlyVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) NextHopSelf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.NextHopSelf }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) NextHopSelf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.NextHopSelf6 }).(pulumi.StringPtrOutput)
}

// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) NextHopSelfRr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.NextHopSelfRr }).(pulumi.StringPtrOutput)
}

// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) NextHopSelfRr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.NextHopSelfRr6 }).(pulumi.StringPtrOutput)
}

// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) NextHopSelfVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.NextHopSelfVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) OverrideCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.OverrideCapability }).(pulumi.StringPtrOutput)
}

// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) Passive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Passive }).(pulumi.StringPtrOutput)
}

// Password used in MD5 authentication.
func (o RouterBgpNeighborTypeOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// IPv4 Inbound filter for updates from this neighbor.
func (o RouterBgpNeighborTypeOutput) PrefixListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListIn }).(pulumi.StringPtrOutput)
}

// IPv6 Inbound filter for updates from this neighbor.
func (o RouterBgpNeighborTypeOutput) PrefixListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListIn6 }).(pulumi.StringPtrOutput)
}

// Inbound filter for VPNv4 updates from this neighbor.
func (o RouterBgpNeighborTypeOutput) PrefixListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListInVpnv4 }).(pulumi.StringPtrOutput)
}

// IPv4 Outbound filter for updates to this neighbor.
func (o RouterBgpNeighborTypeOutput) PrefixListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListOut }).(pulumi.StringPtrOutput)
}

// IPv6 Outbound filter for updates to this neighbor.
func (o RouterBgpNeighborTypeOutput) PrefixListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListOut6 }).(pulumi.StringPtrOutput)
}

// Outbound filter for VPNv4 updates to this neighbor.
func (o RouterBgpNeighborTypeOutput) PrefixListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListOutVpnv4 }).(pulumi.StringPtrOutput)
}

// AS number of neighbor.
func (o RouterBgpNeighborTypeOutput) RemoteAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.RemoteAs }).(pulumi.IntPtrOutput)
}

// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) RemovePrivateAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RemovePrivateAs }).(pulumi.StringPtrOutput)
}

// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) RemovePrivateAs6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RemovePrivateAs6 }).(pulumi.StringPtrOutput)
}

// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) RemovePrivateAsVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RemovePrivateAsVpnv4 }).(pulumi.StringPtrOutput)
}

// Graceful restart delay time (sec, 0 = global default).
func (o RouterBgpNeighborTypeOutput) RestartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.RestartTime }).(pulumi.IntPtrOutput)
}

// Time to retain stale routes.
func (o RouterBgpNeighborTypeOutput) RetainStaleTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.RetainStaleTime }).(pulumi.IntPtrOutput)
}

// IPv4 Inbound route map filter.
func (o RouterBgpNeighborTypeOutput) RouteMapIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapIn }).(pulumi.StringPtrOutput)
}

// IPv6 Inbound route map filter.
func (o RouterBgpNeighborTypeOutput) RouteMapIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapIn6 }).(pulumi.StringPtrOutput)
}

// VPNv4 inbound route map filter.
func (o RouterBgpNeighborTypeOutput) RouteMapInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapInVpnv4 }).(pulumi.StringPtrOutput)
}

// IPv4 Outbound route map filter.
func (o RouterBgpNeighborTypeOutput) RouteMapOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOut }).(pulumi.StringPtrOutput)
}

// IPv6 Outbound route map filter.
func (o RouterBgpNeighborTypeOutput) RouteMapOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOut6 }).(pulumi.StringPtrOutput)
}

// IPv6 outbound route map filter if the peer is preferred.
func (o RouterBgpNeighborTypeOutput) RouteMapOut6Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOut6Preferable }).(pulumi.StringPtrOutput)
}

// IPv4 outbound route map filter if the peer is preferred.
func (o RouterBgpNeighborTypeOutput) RouteMapOutPreferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOutPreferable }).(pulumi.StringPtrOutput)
}

// VPNv4 outbound route map filter.
func (o RouterBgpNeighborTypeOutput) RouteMapOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOutVpnv4 }).(pulumi.StringPtrOutput)
}

// VPNv4 outbound route map filter if the peer is preferred.
func (o RouterBgpNeighborTypeOutput) RouteMapOutVpnv4Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOutVpnv4Preferable }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) RouteReflectorClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteReflectorClient }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) RouteReflectorClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteReflectorClient6 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) RouteReflectorClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteReflectorClientVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) RouteServerClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteServerClient }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) RouteServerClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteServerClient6 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) RouteServerClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteServerClientVpnv4 }).(pulumi.StringPtrOutput)
}

// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
func (o RouterBgpNeighborTypeOutput) SendCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SendCommunity }).(pulumi.StringPtrOutput)
}

// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
func (o RouterBgpNeighborTypeOutput) SendCommunity6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SendCommunity6 }).(pulumi.StringPtrOutput)
}

// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
func (o RouterBgpNeighborTypeOutput) SendCommunityVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SendCommunityVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) Shutdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Shutdown }).(pulumi.StringPtrOutput)
}

// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) SoftReconfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SoftReconfiguration }).(pulumi.StringPtrOutput)
}

// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) SoftReconfiguration6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SoftReconfiguration6 }).(pulumi.StringPtrOutput)
}

// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) SoftReconfigurationVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SoftReconfigurationVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) StaleRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.StaleRoute }).(pulumi.StringPtrOutput)
}

// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborTypeOutput) StrictCapabilityMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.StrictCapabilityMatch }).(pulumi.StringPtrOutput)
}

// IPv4 Route map to selectively unsuppress suppressed routes.
func (o RouterBgpNeighborTypeOutput) UnsuppressMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.UnsuppressMap }).(pulumi.StringPtrOutput)
}

// IPv6 Route map to selectively unsuppress suppressed routes.
func (o RouterBgpNeighborTypeOutput) UnsuppressMap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.UnsuppressMap6 }).(pulumi.StringPtrOutput)
}

// Interface to use as source IP/IPv6 address of TCP connections.
func (o RouterBgpNeighborTypeOutput) UpdateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.UpdateSource }).(pulumi.StringPtrOutput)
}

// Neighbor weight.
func (o RouterBgpNeighborTypeOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type RouterBgpNeighborTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborType)(nil)).Elem()
}

func (o RouterBgpNeighborTypeArrayOutput) ToRouterBgpNeighborTypeArrayOutput() RouterBgpNeighborTypeArrayOutput {
	return o
}

func (o RouterBgpNeighborTypeArrayOutput) ToRouterBgpNeighborTypeArrayOutputWithContext(ctx context.Context) RouterBgpNeighborTypeArrayOutput {
	return o
}

func (o RouterBgpNeighborTypeArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborType {
		return vs[0].([]RouterBgpNeighborType)[vs[1].(int)]
	}).(RouterBgpNeighborTypeOutput)
}

type RouterBgpNeighborConditionalAdvertise6 struct {
	// Name of advertising route map.
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	//
	// The `conditionalAdvertise6` block supports:
	ConditionType *string `pulumi:"conditionType"`
}

// RouterBgpNeighborConditionalAdvertise6Input is an input type that accepts RouterBgpNeighborConditionalAdvertise6Args and RouterBgpNeighborConditionalAdvertise6Output values.
// You can construct a concrete instance of `RouterBgpNeighborConditionalAdvertise6Input` via:
//
//	RouterBgpNeighborConditionalAdvertise6Args{...}
type RouterBgpNeighborConditionalAdvertise6Input interface {
	pulumi.Input

	ToRouterBgpNeighborConditionalAdvertise6Output() RouterBgpNeighborConditionalAdvertise6Output
	ToRouterBgpNeighborConditionalAdvertise6OutputWithContext(context.Context) RouterBgpNeighborConditionalAdvertise6Output
}

type RouterBgpNeighborConditionalAdvertise6Args struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	//
	// The `conditionalAdvertise6` block supports:
	ConditionType pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (RouterBgpNeighborConditionalAdvertise6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i RouterBgpNeighborConditionalAdvertise6Args) ToRouterBgpNeighborConditionalAdvertise6Output() RouterBgpNeighborConditionalAdvertise6Output {
	return i.ToRouterBgpNeighborConditionalAdvertise6OutputWithContext(context.Background())
}

func (i RouterBgpNeighborConditionalAdvertise6Args) ToRouterBgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertise6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborConditionalAdvertise6Output)
}

// RouterBgpNeighborConditionalAdvertise6ArrayInput is an input type that accepts RouterBgpNeighborConditionalAdvertise6Array and RouterBgpNeighborConditionalAdvertise6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborConditionalAdvertise6ArrayInput` via:
//
//	RouterBgpNeighborConditionalAdvertise6Array{ RouterBgpNeighborConditionalAdvertise6Args{...} }
type RouterBgpNeighborConditionalAdvertise6ArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborConditionalAdvertise6ArrayOutput() RouterBgpNeighborConditionalAdvertise6ArrayOutput
	ToRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Context) RouterBgpNeighborConditionalAdvertise6ArrayOutput
}

type RouterBgpNeighborConditionalAdvertise6Array []RouterBgpNeighborConditionalAdvertise6Input

func (RouterBgpNeighborConditionalAdvertise6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i RouterBgpNeighborConditionalAdvertise6Array) ToRouterBgpNeighborConditionalAdvertise6ArrayOutput() RouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return i.ToRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborConditionalAdvertise6Array) ToRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborConditionalAdvertise6ArrayOutput)
}

type RouterBgpNeighborConditionalAdvertise6Output struct{ *pulumi.OutputState }

func (RouterBgpNeighborConditionalAdvertise6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o RouterBgpNeighborConditionalAdvertise6Output) ToRouterBgpNeighborConditionalAdvertise6Output() RouterBgpNeighborConditionalAdvertise6Output {
	return o
}

func (o RouterBgpNeighborConditionalAdvertise6Output) ToRouterBgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertise6Output {
	return o
}

// Name of advertising route map.
func (o RouterBgpNeighborConditionalAdvertise6Output) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise6) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

// Name of condition route map.
func (o RouterBgpNeighborConditionalAdvertise6Output) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise6) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

// Type of condition. Valid values: `exist`, `non-exist`.
//
// The `conditionalAdvertise6` block supports:
func (o RouterBgpNeighborConditionalAdvertise6Output) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise6) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type RouterBgpNeighborConditionalAdvertise6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborConditionalAdvertise6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o RouterBgpNeighborConditionalAdvertise6ArrayOutput) ToRouterBgpNeighborConditionalAdvertise6ArrayOutput() RouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertise6ArrayOutput) ToRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertise6ArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborConditionalAdvertise6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborConditionalAdvertise6 {
		return vs[0].([]RouterBgpNeighborConditionalAdvertise6)[vs[1].(int)]
	}).(RouterBgpNeighborConditionalAdvertise6Output)
}

type RouterBgpNeighborConditionalAdvertise struct {
	// Name of advertising route map.
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	ConditionType *string `pulumi:"conditionType"`
}

// RouterBgpNeighborConditionalAdvertiseInput is an input type that accepts RouterBgpNeighborConditionalAdvertiseArgs and RouterBgpNeighborConditionalAdvertiseOutput values.
// You can construct a concrete instance of `RouterBgpNeighborConditionalAdvertiseInput` via:
//
//	RouterBgpNeighborConditionalAdvertiseArgs{...}
type RouterBgpNeighborConditionalAdvertiseInput interface {
	pulumi.Input

	ToRouterBgpNeighborConditionalAdvertiseOutput() RouterBgpNeighborConditionalAdvertiseOutput
	ToRouterBgpNeighborConditionalAdvertiseOutputWithContext(context.Context) RouterBgpNeighborConditionalAdvertiseOutput
}

type RouterBgpNeighborConditionalAdvertiseArgs struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	ConditionType pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (RouterBgpNeighborConditionalAdvertiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i RouterBgpNeighborConditionalAdvertiseArgs) ToRouterBgpNeighborConditionalAdvertiseOutput() RouterBgpNeighborConditionalAdvertiseOutput {
	return i.ToRouterBgpNeighborConditionalAdvertiseOutputWithContext(context.Background())
}

func (i RouterBgpNeighborConditionalAdvertiseArgs) ToRouterBgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborConditionalAdvertiseOutput)
}

// RouterBgpNeighborConditionalAdvertiseArrayInput is an input type that accepts RouterBgpNeighborConditionalAdvertiseArray and RouterBgpNeighborConditionalAdvertiseArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborConditionalAdvertiseArrayInput` via:
//
//	RouterBgpNeighborConditionalAdvertiseArray{ RouterBgpNeighborConditionalAdvertiseArgs{...} }
type RouterBgpNeighborConditionalAdvertiseArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborConditionalAdvertiseArrayOutput() RouterBgpNeighborConditionalAdvertiseArrayOutput
	ToRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Context) RouterBgpNeighborConditionalAdvertiseArrayOutput
}

type RouterBgpNeighborConditionalAdvertiseArray []RouterBgpNeighborConditionalAdvertiseInput

func (RouterBgpNeighborConditionalAdvertiseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i RouterBgpNeighborConditionalAdvertiseArray) ToRouterBgpNeighborConditionalAdvertiseArrayOutput() RouterBgpNeighborConditionalAdvertiseArrayOutput {
	return i.ToRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborConditionalAdvertiseArray) ToRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertiseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborConditionalAdvertiseArrayOutput)
}

type RouterBgpNeighborConditionalAdvertiseOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborConditionalAdvertiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o RouterBgpNeighborConditionalAdvertiseOutput) ToRouterBgpNeighborConditionalAdvertiseOutput() RouterBgpNeighborConditionalAdvertiseOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertiseOutput) ToRouterBgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertiseOutput {
	return o
}

// Name of advertising route map.
func (o RouterBgpNeighborConditionalAdvertiseOutput) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

// Name of condition route map.
func (o RouterBgpNeighborConditionalAdvertiseOutput) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

// Type of condition. Valid values: `exist`, `non-exist`.
func (o RouterBgpNeighborConditionalAdvertiseOutput) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type RouterBgpNeighborConditionalAdvertiseArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborConditionalAdvertiseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o RouterBgpNeighborConditionalAdvertiseArrayOutput) ToRouterBgpNeighborConditionalAdvertiseArrayOutput() RouterBgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertiseArrayOutput) ToRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertiseArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborConditionalAdvertiseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborConditionalAdvertise {
		return vs[0].([]RouterBgpNeighborConditionalAdvertise)[vs[1].(int)]
	}).(RouterBgpNeighborConditionalAdvertiseOutput)
}

type RouterBgpNeighborGroup struct {
	// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
	Activate *string `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
	Activate6 *string `pulumi:"activate6"`
	// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv4 *string `pulumi:"activateVpnv4"`
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath *string `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 *string `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv4 *string `pulumi:"additionalPathVpnv4"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath *int `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 *int `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 *int `pulumi:"advAdditionalPathVpnv4"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval *int `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn *int `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 *int `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable *string `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable6 *string `pulumi:"allowasInEnable6"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 *int `pulumi:"allowasInVpnv4"`
	// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
	AsOverride *string `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
	AsOverride6 *string `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged *string `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged6 *string `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv4 *string `pulumi:"attributeUnchangedVpnv4"`
	// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate *string `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate6 *string `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDynamic *string `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart *string `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart6 *string `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv4 *string `pulumi:"capabilityGracefulRestartVpnv4"`
	// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf *string `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf6 *string `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityRouteRefresh *string `pulumi:"capabilityRouteRefresh"`
	// Interval (sec) for connect timer.
	ConnectTimer *int `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap *string `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 *string `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description *string `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn *string `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 *string `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 *string `pulumi:"distributeListInVpnv4"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut *string `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 *string `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 *string `pulumi:"distributeListOutVpnv4"`
	// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
	DontCapabilityNegotiate *string `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
	EbgpEnforceMultihop *string `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl *int `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn *string `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 *string `pulumi:"filterListIn6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut *string `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 *string `pulumi:"filterListOut6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer *int `pulumi:"holdtimeTimer"`
	// Interface
	Interface *string `pulumi:"interface"`
	// Keep alive timer interval (sec).
	KeepAliveTimer *int `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
	LinkDownFailover *string `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs *int `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
	LocalAsNoPrepend *string `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
	LocalAsReplaceAs *string `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix *int `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 *int `pulumi:"maximumPrefix6"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold *int `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 *int `pulumi:"maximumPrefixThreshold6"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 *int `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 *int `pulumi:"maximumPrefixVpnv4"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly *string `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly6 *string `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv4 *string `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Neighbor group name.
	Name *string `pulumi:"name"`
	// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf *string `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf6 *string `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr *string `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr6 *string `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv4 *string `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
	OverrideCapability *string `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
	Passive *string `pulumi:"passive"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn *string `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 *string `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 *string `pulumi:"prefixListInVpnv4"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut *string `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 *string `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 *string `pulumi:"prefixListOutVpnv4"`
	// AS number of neighbor.
	RemoteAs *int `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs *string `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs6 *string `pulumi:"removePrivateAs6"`
	// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv4 *string `pulumi:"removePrivateAsVpnv4"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime *int `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime *int `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn *string `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 *string `pulumi:"routeMapIn6"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 *string `pulumi:"routeMapInVpnv4"`
	// IPv4 Outbound route map filter.
	RouteMapOut *string `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 *string `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable *string `pulumi:"routeMapOut6Preferable"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable *string `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 *string `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable *string `pulumi:"routeMapOutVpnv4Preferable"`
	// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient *string `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient6 *string `pulumi:"routeReflectorClient6"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv4 *string `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient *string `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient6 *string `pulumi:"routeServerClient6"`
	// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv4 *string `pulumi:"routeServerClientVpnv4"`
	// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity *string `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity6 *string `pulumi:"sendCommunity6"`
	// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv4 *string `pulumi:"sendCommunityVpnv4"`
	// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
	Shutdown *string `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration *string `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration6 *string `pulumi:"softReconfiguration6"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv4 *string `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
	StaleRoute *string `pulumi:"staleRoute"`
	// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
	StrictCapabilityMatch *string `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap *string `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 *string `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource *string `pulumi:"updateSource"`
	// Neighbor weight.
	Weight *int `pulumi:"weight"`
}

// RouterBgpNeighborGroupInput is an input type that accepts RouterBgpNeighborGroupArgs and RouterBgpNeighborGroupOutput values.
// You can construct a concrete instance of `RouterBgpNeighborGroupInput` via:
//
//	RouterBgpNeighborGroupArgs{...}
type RouterBgpNeighborGroupInput interface {
	pulumi.Input

	ToRouterBgpNeighborGroupOutput() RouterBgpNeighborGroupOutput
	ToRouterBgpNeighborGroupOutputWithContext(context.Context) RouterBgpNeighborGroupOutput
}

type RouterBgpNeighborGroupArgs struct {
	// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
	Activate pulumi.StringPtrInput `pulumi:"activate"`
	// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
	Activate6 pulumi.StringPtrInput `pulumi:"activate6"`
	// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
	ActivateVpnv4 pulumi.StringPtrInput `pulumi:"activateVpnv4"`
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath pulumi.StringPtrInput `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 pulumi.StringPtrInput `pulumi:"additionalPath6"`
	// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPathVpnv4 pulumi.StringPtrInput `pulumi:"additionalPathVpnv4"`
	// Number of IPv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath pulumi.IntPtrInput `pulumi:"advAdditionalPath"`
	// Number of IPv6 additional paths that can be advertised to this neighbor.
	AdvAdditionalPath6 pulumi.IntPtrInput `pulumi:"advAdditionalPath6"`
	// Number of VPNv4 additional paths that can be advertised to this neighbor.
	AdvAdditionalPathVpnv4 pulumi.IntPtrInput `pulumi:"advAdditionalPathVpnv4"`
	// Minimum interval (sec) between sending updates.
	AdvertisementInterval pulumi.IntPtrInput `pulumi:"advertisementInterval"`
	// IPv4 The maximum number of occurrence of my AS number allowed.
	AllowasIn pulumi.IntPtrInput `pulumi:"allowasIn"`
	// IPv6 The maximum number of occurrence of my AS number allowed.
	AllowasIn6 pulumi.IntPtrInput `pulumi:"allowasIn6"`
	// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable pulumi.StringPtrInput `pulumi:"allowasInEnable"`
	// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
	AllowasInEnable6 pulumi.StringPtrInput `pulumi:"allowasInEnable6"`
	// The maximum number of occurrence of my AS number allowed for VPNv4 route.
	AllowasInVpnv4 pulumi.IntPtrInput `pulumi:"allowasInVpnv4"`
	// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
	AsOverride pulumi.StringPtrInput `pulumi:"asOverride"`
	// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
	AsOverride6 pulumi.StringPtrInput `pulumi:"asOverride6"`
	// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged pulumi.StringPtrInput `pulumi:"attributeUnchanged"`
	// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchanged6 pulumi.StringPtrInput `pulumi:"attributeUnchanged6"`
	// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
	AttributeUnchangedVpnv4 pulumi.StringPtrInput `pulumi:"attributeUnchangedVpnv4"`
	// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate pulumi.StringPtrInput `pulumi:"capabilityDefaultOriginate"`
	// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDefaultOriginate6 pulumi.StringPtrInput `pulumi:"capabilityDefaultOriginate6"`
	// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityDynamic pulumi.StringPtrInput `pulumi:"capabilityDynamic"`
	// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart pulumi.StringPtrInput `pulumi:"capabilityGracefulRestart"`
	// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestart6 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestart6"`
	// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityGracefulRestartVpnv4 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestartVpnv4"`
	// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf pulumi.StringPtrInput `pulumi:"capabilityOrf"`
	// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
	CapabilityOrf6 pulumi.StringPtrInput `pulumi:"capabilityOrf6"`
	// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
	CapabilityRouteRefresh pulumi.StringPtrInput `pulumi:"capabilityRouteRefresh"`
	// Interval (sec) for connect timer.
	ConnectTimer pulumi.IntPtrInput `pulumi:"connectTimer"`
	// Route map to specify criteria to originate IPv4 default.
	DefaultOriginateRoutemap pulumi.StringPtrInput `pulumi:"defaultOriginateRoutemap"`
	// Route map to specify criteria to originate IPv6 default.
	DefaultOriginateRoutemap6 pulumi.StringPtrInput `pulumi:"defaultOriginateRoutemap6"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Filter for IPv4 updates from this neighbor.
	DistributeListIn pulumi.StringPtrInput `pulumi:"distributeListIn"`
	// Filter for IPv6 updates from this neighbor.
	DistributeListIn6 pulumi.StringPtrInput `pulumi:"distributeListIn6"`
	// Filter for VPNv4 updates from this neighbor.
	DistributeListInVpnv4 pulumi.StringPtrInput `pulumi:"distributeListInVpnv4"`
	// Filter for IPv4 updates to this neighbor.
	DistributeListOut pulumi.StringPtrInput `pulumi:"distributeListOut"`
	// Filter for IPv6 updates to this neighbor.
	DistributeListOut6 pulumi.StringPtrInput `pulumi:"distributeListOut6"`
	// Filter for VPNv4 updates to this neighbor.
	DistributeListOutVpnv4 pulumi.StringPtrInput `pulumi:"distributeListOutVpnv4"`
	// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
	DontCapabilityNegotiate pulumi.StringPtrInput `pulumi:"dontCapabilityNegotiate"`
	// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
	EbgpEnforceMultihop pulumi.StringPtrInput `pulumi:"ebgpEnforceMultihop"`
	// EBGP multihop TTL for this peer.
	EbgpMultihopTtl pulumi.IntPtrInput `pulumi:"ebgpMultihopTtl"`
	// BGP filter for IPv4 inbound routes.
	FilterListIn pulumi.StringPtrInput `pulumi:"filterListIn"`
	// BGP filter for IPv6 inbound routes.
	FilterListIn6 pulumi.StringPtrInput `pulumi:"filterListIn6"`
	// BGP filter for IPv4 outbound routes.
	FilterListOut pulumi.StringPtrInput `pulumi:"filterListOut"`
	// BGP filter for IPv6 outbound routes.
	FilterListOut6 pulumi.StringPtrInput `pulumi:"filterListOut6"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntPtrInput `pulumi:"holdtimeTimer"`
	// Interface
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Keep alive timer interval (sec).
	KeepAliveTimer pulumi.IntPtrInput `pulumi:"keepAliveTimer"`
	// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
	LinkDownFailover pulumi.StringPtrInput `pulumi:"linkDownFailover"`
	// Local AS number of neighbor.
	LocalAs pulumi.IntPtrInput `pulumi:"localAs"`
	// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
	LocalAsNoPrepend pulumi.StringPtrInput `pulumi:"localAsNoPrepend"`
	// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
	LocalAsReplaceAs pulumi.StringPtrInput `pulumi:"localAsReplaceAs"`
	// Maximum number of IPv4 prefixes to accept from this peer.
	MaximumPrefix pulumi.IntPtrInput `pulumi:"maximumPrefix"`
	// Maximum number of IPv6 prefixes to accept from this peer.
	MaximumPrefix6 pulumi.IntPtrInput `pulumi:"maximumPrefix6"`
	// Maximum IPv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold pulumi.IntPtrInput `pulumi:"maximumPrefixThreshold"`
	// Maximum IPv6 prefix threshold value (1 - 100 percent).
	MaximumPrefixThreshold6 pulumi.IntPtrInput `pulumi:"maximumPrefixThreshold6"`
	// Maximum VPNv4 prefix threshold value (1 - 100 percent).
	MaximumPrefixThresholdVpnv4 pulumi.IntPtrInput `pulumi:"maximumPrefixThresholdVpnv4"`
	// Maximum number of VPNv4 prefixes to accept from this peer.
	MaximumPrefixVpnv4 pulumi.IntPtrInput `pulumi:"maximumPrefixVpnv4"`
	// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnly"`
	// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnly6 pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnly6"`
	// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
	MaximumPrefixWarningOnlyVpnv4 pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	// Neighbor group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf pulumi.StringPtrInput `pulumi:"nextHopSelf"`
	// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelf6 pulumi.StringPtrInput `pulumi:"nextHopSelf6"`
	// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr pulumi.StringPtrInput `pulumi:"nextHopSelfRr"`
	// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
	NextHopSelfRr6 pulumi.StringPtrInput `pulumi:"nextHopSelfRr6"`
	// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
	NextHopSelfVpnv4 pulumi.StringPtrInput `pulumi:"nextHopSelfVpnv4"`
	// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
	OverrideCapability pulumi.StringPtrInput `pulumi:"overrideCapability"`
	// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
	Passive pulumi.StringPtrInput `pulumi:"passive"`
	// IPv4 Inbound filter for updates from this neighbor.
	PrefixListIn pulumi.StringPtrInput `pulumi:"prefixListIn"`
	// IPv6 Inbound filter for updates from this neighbor.
	PrefixListIn6 pulumi.StringPtrInput `pulumi:"prefixListIn6"`
	// Inbound filter for VPNv4 updates from this neighbor.
	PrefixListInVpnv4 pulumi.StringPtrInput `pulumi:"prefixListInVpnv4"`
	// IPv4 Outbound filter for updates to this neighbor.
	PrefixListOut pulumi.StringPtrInput `pulumi:"prefixListOut"`
	// IPv6 Outbound filter for updates to this neighbor.
	PrefixListOut6 pulumi.StringPtrInput `pulumi:"prefixListOut6"`
	// Outbound filter for VPNv4 updates to this neighbor.
	PrefixListOutVpnv4 pulumi.StringPtrInput `pulumi:"prefixListOutVpnv4"`
	// AS number of neighbor.
	RemoteAs pulumi.IntPtrInput `pulumi:"remoteAs"`
	// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs pulumi.StringPtrInput `pulumi:"removePrivateAs"`
	// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAs6 pulumi.StringPtrInput `pulumi:"removePrivateAs6"`
	// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
	RemovePrivateAsVpnv4 pulumi.StringPtrInput `pulumi:"removePrivateAsVpnv4"`
	// Graceful restart delay time (sec, 0 = global default).
	RestartTime pulumi.IntPtrInput `pulumi:"restartTime"`
	// Time to retain stale routes.
	RetainStaleTime pulumi.IntPtrInput `pulumi:"retainStaleTime"`
	// IPv4 Inbound route map filter.
	RouteMapIn pulumi.StringPtrInput `pulumi:"routeMapIn"`
	// IPv6 Inbound route map filter.
	RouteMapIn6 pulumi.StringPtrInput `pulumi:"routeMapIn6"`
	// VPNv4 inbound route map filter.
	RouteMapInVpnv4 pulumi.StringPtrInput `pulumi:"routeMapInVpnv4"`
	// IPv4 Outbound route map filter.
	RouteMapOut pulumi.StringPtrInput `pulumi:"routeMapOut"`
	// IPv6 Outbound route map filter.
	RouteMapOut6 pulumi.StringPtrInput `pulumi:"routeMapOut6"`
	// IPv6 outbound route map filter if the peer is preferred.
	RouteMapOut6Preferable pulumi.StringPtrInput `pulumi:"routeMapOut6Preferable"`
	// IPv4 outbound route map filter if the peer is preferred.
	RouteMapOutPreferable pulumi.StringPtrInput `pulumi:"routeMapOutPreferable"`
	// VPNv4 outbound route map filter.
	RouteMapOutVpnv4 pulumi.StringPtrInput `pulumi:"routeMapOutVpnv4"`
	// VPNv4 outbound route map filter if the peer is preferred.
	RouteMapOutVpnv4Preferable pulumi.StringPtrInput `pulumi:"routeMapOutVpnv4Preferable"`
	// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient pulumi.StringPtrInput `pulumi:"routeReflectorClient"`
	// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
	RouteReflectorClient6 pulumi.StringPtrInput `pulumi:"routeReflectorClient6"`
	// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
	RouteReflectorClientVpnv4 pulumi.StringPtrInput `pulumi:"routeReflectorClientVpnv4"`
	// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient pulumi.StringPtrInput `pulumi:"routeServerClient"`
	// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
	RouteServerClient6 pulumi.StringPtrInput `pulumi:"routeServerClient6"`
	// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
	RouteServerClientVpnv4 pulumi.StringPtrInput `pulumi:"routeServerClientVpnv4"`
	// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity pulumi.StringPtrInput `pulumi:"sendCommunity"`
	// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunity6 pulumi.StringPtrInput `pulumi:"sendCommunity6"`
	// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
	SendCommunityVpnv4 pulumi.StringPtrInput `pulumi:"sendCommunityVpnv4"`
	// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
	Shutdown pulumi.StringPtrInput `pulumi:"shutdown"`
	// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration pulumi.StringPtrInput `pulumi:"softReconfiguration"`
	// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfiguration6 pulumi.StringPtrInput `pulumi:"softReconfiguration6"`
	// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
	SoftReconfigurationVpnv4 pulumi.StringPtrInput `pulumi:"softReconfigurationVpnv4"`
	// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
	StaleRoute pulumi.StringPtrInput `pulumi:"staleRoute"`
	// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
	StrictCapabilityMatch pulumi.StringPtrInput `pulumi:"strictCapabilityMatch"`
	// IPv4 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap pulumi.StringPtrInput `pulumi:"unsuppressMap"`
	// IPv6 Route map to selectively unsuppress suppressed routes.
	UnsuppressMap6 pulumi.StringPtrInput `pulumi:"unsuppressMap6"`
	// Interface to use as source IP/IPv6 address of TCP connections.
	UpdateSource pulumi.StringPtrInput `pulumi:"updateSource"`
	// Neighbor weight.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (RouterBgpNeighborGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborGroup)(nil)).Elem()
}

func (i RouterBgpNeighborGroupArgs) ToRouterBgpNeighborGroupOutput() RouterBgpNeighborGroupOutput {
	return i.ToRouterBgpNeighborGroupOutputWithContext(context.Background())
}

func (i RouterBgpNeighborGroupArgs) ToRouterBgpNeighborGroupOutputWithContext(ctx context.Context) RouterBgpNeighborGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborGroupOutput)
}

// RouterBgpNeighborGroupArrayInput is an input type that accepts RouterBgpNeighborGroupArray and RouterBgpNeighborGroupArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborGroupArrayInput` via:
//
//	RouterBgpNeighborGroupArray{ RouterBgpNeighborGroupArgs{...} }
type RouterBgpNeighborGroupArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborGroupArrayOutput() RouterBgpNeighborGroupArrayOutput
	ToRouterBgpNeighborGroupArrayOutputWithContext(context.Context) RouterBgpNeighborGroupArrayOutput
}

type RouterBgpNeighborGroupArray []RouterBgpNeighborGroupInput

func (RouterBgpNeighborGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborGroup)(nil)).Elem()
}

func (i RouterBgpNeighborGroupArray) ToRouterBgpNeighborGroupArrayOutput() RouterBgpNeighborGroupArrayOutput {
	return i.ToRouterBgpNeighborGroupArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborGroupArray) ToRouterBgpNeighborGroupArrayOutputWithContext(ctx context.Context) RouterBgpNeighborGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborGroupArrayOutput)
}

type RouterBgpNeighborGroupOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborGroup)(nil)).Elem()
}

func (o RouterBgpNeighborGroupOutput) ToRouterBgpNeighborGroupOutput() RouterBgpNeighborGroupOutput {
	return o
}

func (o RouterBgpNeighborGroupOutput) ToRouterBgpNeighborGroupOutputWithContext(ctx context.Context) RouterBgpNeighborGroupOutput {
	return o
}

// Enable/disable address family IPv4 for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) Activate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Activate }).(pulumi.StringPtrOutput)
}

// Enable/disable address family IPv6 for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) Activate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Activate6 }).(pulumi.StringPtrOutput)
}

// Enable/disable address family VPNv4 for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) ActivateVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.ActivateVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o RouterBgpNeighborGroupOutput) AdditionalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AdditionalPath }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o RouterBgpNeighborGroupOutput) AdditionalPath6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AdditionalPath6 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
func (o RouterBgpNeighborGroupOutput) AdditionalPathVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AdditionalPathVpnv4 }).(pulumi.StringPtrOutput)
}

// Number of IPv4 additional paths that can be advertised to this neighbor.
func (o RouterBgpNeighborGroupOutput) AdvAdditionalPath() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AdvAdditionalPath }).(pulumi.IntPtrOutput)
}

// Number of IPv6 additional paths that can be advertised to this neighbor.
func (o RouterBgpNeighborGroupOutput) AdvAdditionalPath6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AdvAdditionalPath6 }).(pulumi.IntPtrOutput)
}

// Number of VPNv4 additional paths that can be advertised to this neighbor.
func (o RouterBgpNeighborGroupOutput) AdvAdditionalPathVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AdvAdditionalPathVpnv4 }).(pulumi.IntPtrOutput)
}

// Minimum interval (sec) between sending updates.
func (o RouterBgpNeighborGroupOutput) AdvertisementInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AdvertisementInterval }).(pulumi.IntPtrOutput)
}

// IPv4 The maximum number of occurrence of my AS number allowed.
func (o RouterBgpNeighborGroupOutput) AllowasIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AllowasIn }).(pulumi.IntPtrOutput)
}

// IPv6 The maximum number of occurrence of my AS number allowed.
func (o RouterBgpNeighborGroupOutput) AllowasIn6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AllowasIn6 }).(pulumi.IntPtrOutput)
}

// Enable/disable IPv4 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) AllowasInEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AllowasInEnable }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 Enable to allow my AS in AS path. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) AllowasInEnable6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AllowasInEnable6 }).(pulumi.StringPtrOutput)
}

// The maximum number of occurrence of my AS number allowed for VPNv4 route.
func (o RouterBgpNeighborGroupOutput) AllowasInVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AllowasInVpnv4 }).(pulumi.IntPtrOutput)
}

// Enable/disable replace peer AS with own AS for IPv4. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) AsOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AsOverride }).(pulumi.StringPtrOutput)
}

// Enable/disable replace peer AS with own AS for IPv6. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) AsOverride6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AsOverride6 }).(pulumi.StringPtrOutput)
}

// IPv4 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
func (o RouterBgpNeighborGroupOutput) AttributeUnchanged() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AttributeUnchanged }).(pulumi.StringPtrOutput)
}

// IPv6 List of attributes that should be unchanged. Valid values: `as-path`, `med`, `next-hop`.
func (o RouterBgpNeighborGroupOutput) AttributeUnchanged6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AttributeUnchanged6 }).(pulumi.StringPtrOutput)
}

// List of attributes that should be unchanged for VPNv4 route. Valid values: `as-path`, `med`, `next-hop`.
func (o RouterBgpNeighborGroupOutput) AttributeUnchangedVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AttributeUnchangedVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable BFD for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise default IPv4 route to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) CapabilityDefaultOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityDefaultOriginate }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise default IPv6 route to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) CapabilityDefaultOriginate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityDefaultOriginate6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise dynamic capability to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) CapabilityDynamic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityDynamic }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise IPv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) CapabilityGracefulRestart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityGracefulRestart }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise IPv6 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) CapabilityGracefulRestart6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityGracefulRestart6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise VPNv4 graceful restart capability to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) CapabilityGracefulRestartVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityGracefulRestartVpnv4 }).(pulumi.StringPtrOutput)
}

// Accept/Send IPv4 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
func (o RouterBgpNeighborGroupOutput) CapabilityOrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityOrf }).(pulumi.StringPtrOutput)
}

// Accept/Send IPv6 ORF lists to/from this neighbor. Valid values: `none`, `receive`, `send`, `both`.
func (o RouterBgpNeighborGroupOutput) CapabilityOrf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityOrf6 }).(pulumi.StringPtrOutput)
}

// Enable/disable advertise route refresh capability to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) CapabilityRouteRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityRouteRefresh }).(pulumi.StringPtrOutput)
}

// Interval (sec) for connect timer.
func (o RouterBgpNeighborGroupOutput) ConnectTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.ConnectTimer }).(pulumi.IntPtrOutput)
}

// Route map to specify criteria to originate IPv4 default.
func (o RouterBgpNeighborGroupOutput) DefaultOriginateRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DefaultOriginateRoutemap }).(pulumi.StringPtrOutput)
}

// Route map to specify criteria to originate IPv6 default.
func (o RouterBgpNeighborGroupOutput) DefaultOriginateRoutemap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DefaultOriginateRoutemap6 }).(pulumi.StringPtrOutput)
}

// Description.
func (o RouterBgpNeighborGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Filter for IPv4 updates from this neighbor.
func (o RouterBgpNeighborGroupOutput) DistributeListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListIn }).(pulumi.StringPtrOutput)
}

// Filter for IPv6 updates from this neighbor.
func (o RouterBgpNeighborGroupOutput) DistributeListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListIn6 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv4 updates from this neighbor.
func (o RouterBgpNeighborGroupOutput) DistributeListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListInVpnv4 }).(pulumi.StringPtrOutput)
}

// Filter for IPv4 updates to this neighbor.
func (o RouterBgpNeighborGroupOutput) DistributeListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListOut }).(pulumi.StringPtrOutput)
}

// Filter for IPv6 updates to this neighbor.
func (o RouterBgpNeighborGroupOutput) DistributeListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListOut6 }).(pulumi.StringPtrOutput)
}

// Filter for VPNv4 updates to this neighbor.
func (o RouterBgpNeighborGroupOutput) DistributeListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListOutVpnv4 }).(pulumi.StringPtrOutput)
}

// Don't negotiate capabilities with this neighbor Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) DontCapabilityNegotiate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DontCapabilityNegotiate }).(pulumi.StringPtrOutput)
}

// Enable/disable allow multi-hop EBGP neighbors. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) EbgpEnforceMultihop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.EbgpEnforceMultihop }).(pulumi.StringPtrOutput)
}

// EBGP multihop TTL for this peer.
func (o RouterBgpNeighborGroupOutput) EbgpMultihopTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.EbgpMultihopTtl }).(pulumi.IntPtrOutput)
}

// BGP filter for IPv4 inbound routes.
func (o RouterBgpNeighborGroupOutput) FilterListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.FilterListIn }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv6 inbound routes.
func (o RouterBgpNeighborGroupOutput) FilterListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.FilterListIn6 }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv4 outbound routes.
func (o RouterBgpNeighborGroupOutput) FilterListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.FilterListOut }).(pulumi.StringPtrOutput)
}

// BGP filter for IPv6 outbound routes.
func (o RouterBgpNeighborGroupOutput) FilterListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.FilterListOut6 }).(pulumi.StringPtrOutput)
}

// Interval (sec) before peer considered dead.
func (o RouterBgpNeighborGroupOutput) HoldtimeTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.HoldtimeTimer }).(pulumi.IntPtrOutput)
}

// Interface
func (o RouterBgpNeighborGroupOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Keep alive timer interval (sec).
func (o RouterBgpNeighborGroupOutput) KeepAliveTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.KeepAliveTimer }).(pulumi.IntPtrOutput)
}

// Enable/disable failover upon link down. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) LinkDownFailover() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.LinkDownFailover }).(pulumi.StringPtrOutput)
}

// Local AS number of neighbor.
func (o RouterBgpNeighborGroupOutput) LocalAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.LocalAs }).(pulumi.IntPtrOutput)
}

// Do not prepend local-as to incoming updates. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) LocalAsNoPrepend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.LocalAsNoPrepend }).(pulumi.StringPtrOutput)
}

// Replace real AS with local-as in outgoing updates. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) LocalAsReplaceAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.LocalAsReplaceAs }).(pulumi.StringPtrOutput)
}

// Maximum number of IPv4 prefixes to accept from this peer.
func (o RouterBgpNeighborGroupOutput) MaximumPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefix }).(pulumi.IntPtrOutput)
}

// Maximum number of IPv6 prefixes to accept from this peer.
func (o RouterBgpNeighborGroupOutput) MaximumPrefix6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefix6 }).(pulumi.IntPtrOutput)
}

// Maximum IPv4 prefix threshold value (1 - 100 percent).
func (o RouterBgpNeighborGroupOutput) MaximumPrefixThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefixThreshold }).(pulumi.IntPtrOutput)
}

// Maximum IPv6 prefix threshold value (1 - 100 percent).
func (o RouterBgpNeighborGroupOutput) MaximumPrefixThreshold6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefixThreshold6 }).(pulumi.IntPtrOutput)
}

// Maximum VPNv4 prefix threshold value (1 - 100 percent).
func (o RouterBgpNeighborGroupOutput) MaximumPrefixThresholdVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefixThresholdVpnv4 }).(pulumi.IntPtrOutput)
}

// Maximum number of VPNv4 prefixes to accept from this peer.
func (o RouterBgpNeighborGroupOutput) MaximumPrefixVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefixVpnv4 }).(pulumi.IntPtrOutput)
}

// Enable/disable IPv4 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) MaximumPrefixWarningOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.MaximumPrefixWarningOnly }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 Only give warning message when limit is exceeded. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) MaximumPrefixWarningOnly6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.MaximumPrefixWarningOnly6 }).(pulumi.StringPtrOutput)
}

// Enable/disable only giving warning message when limit is exceeded for VPNv4 routes. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) MaximumPrefixWarningOnlyVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.MaximumPrefixWarningOnlyVpnv4 }).(pulumi.StringPtrOutput)
}

// Neighbor group name.
func (o RouterBgpNeighborGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) NextHopSelf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.NextHopSelf }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 next-hop calculation for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) NextHopSelf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.NextHopSelf6 }).(pulumi.StringPtrOutput)
}

// Enable/disable setting nexthop's address to interface's IPv4 address for route-reflector routes. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) NextHopSelfRr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.NextHopSelfRr }).(pulumi.StringPtrOutput)
}

// Enable/disable setting nexthop's address to interface's IPv6 address for route-reflector routes. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) NextHopSelfRr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.NextHopSelfRr6 }).(pulumi.StringPtrOutput)
}

// Enable/disable setting VPNv4 next-hop to interface's IP address for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) NextHopSelfVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.NextHopSelfVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable override result of capability negotiation. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) OverrideCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.OverrideCapability }).(pulumi.StringPtrOutput)
}

// Enable/disable sending of open messages to this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) Passive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Passive }).(pulumi.StringPtrOutput)
}

// IPv4 Inbound filter for updates from this neighbor.
func (o RouterBgpNeighborGroupOutput) PrefixListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListIn }).(pulumi.StringPtrOutput)
}

// IPv6 Inbound filter for updates from this neighbor.
func (o RouterBgpNeighborGroupOutput) PrefixListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListIn6 }).(pulumi.StringPtrOutput)
}

// Inbound filter for VPNv4 updates from this neighbor.
func (o RouterBgpNeighborGroupOutput) PrefixListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListInVpnv4 }).(pulumi.StringPtrOutput)
}

// IPv4 Outbound filter for updates to this neighbor.
func (o RouterBgpNeighborGroupOutput) PrefixListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListOut }).(pulumi.StringPtrOutput)
}

// IPv6 Outbound filter for updates to this neighbor.
func (o RouterBgpNeighborGroupOutput) PrefixListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListOut6 }).(pulumi.StringPtrOutput)
}

// Outbound filter for VPNv4 updates to this neighbor.
func (o RouterBgpNeighborGroupOutput) PrefixListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListOutVpnv4 }).(pulumi.StringPtrOutput)
}

// AS number of neighbor.
func (o RouterBgpNeighborGroupOutput) RemoteAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.RemoteAs }).(pulumi.IntPtrOutput)
}

// Enable/disable remove private AS number from IPv4 outbound updates. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) RemovePrivateAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RemovePrivateAs }).(pulumi.StringPtrOutput)
}

// Enable/disable remove private AS number from IPv6 outbound updates. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) RemovePrivateAs6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RemovePrivateAs6 }).(pulumi.StringPtrOutput)
}

// Enable/disable remove private AS number from VPNv4 outbound updates. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) RemovePrivateAsVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RemovePrivateAsVpnv4 }).(pulumi.StringPtrOutput)
}

// Graceful restart delay time (sec, 0 = global default).
func (o RouterBgpNeighborGroupOutput) RestartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.RestartTime }).(pulumi.IntPtrOutput)
}

// Time to retain stale routes.
func (o RouterBgpNeighborGroupOutput) RetainStaleTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.RetainStaleTime }).(pulumi.IntPtrOutput)
}

// IPv4 Inbound route map filter.
func (o RouterBgpNeighborGroupOutput) RouteMapIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapIn }).(pulumi.StringPtrOutput)
}

// IPv6 Inbound route map filter.
func (o RouterBgpNeighborGroupOutput) RouteMapIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapIn6 }).(pulumi.StringPtrOutput)
}

// VPNv4 inbound route map filter.
func (o RouterBgpNeighborGroupOutput) RouteMapInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapInVpnv4 }).(pulumi.StringPtrOutput)
}

// IPv4 Outbound route map filter.
func (o RouterBgpNeighborGroupOutput) RouteMapOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOut }).(pulumi.StringPtrOutput)
}

// IPv6 Outbound route map filter.
func (o RouterBgpNeighborGroupOutput) RouteMapOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOut6 }).(pulumi.StringPtrOutput)
}

// IPv6 outbound route map filter if the peer is preferred.
func (o RouterBgpNeighborGroupOutput) RouteMapOut6Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOut6Preferable }).(pulumi.StringPtrOutput)
}

// IPv4 outbound route map filter if the peer is preferred.
func (o RouterBgpNeighborGroupOutput) RouteMapOutPreferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOutPreferable }).(pulumi.StringPtrOutput)
}

// VPNv4 outbound route map filter.
func (o RouterBgpNeighborGroupOutput) RouteMapOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOutVpnv4 }).(pulumi.StringPtrOutput)
}

// VPNv4 outbound route map filter if the peer is preferred.
func (o RouterBgpNeighborGroupOutput) RouteMapOutVpnv4Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOutVpnv4Preferable }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 AS route reflector client. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) RouteReflectorClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteReflectorClient }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 AS route reflector client. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) RouteReflectorClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteReflectorClient6 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 AS route reflector client for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) RouteReflectorClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteReflectorClientVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv4 AS route server client. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) RouteServerClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteServerClient }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 AS route server client. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) RouteServerClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteServerClient6 }).(pulumi.StringPtrOutput)
}

// Enable/disable VPNv4 AS route server client for this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) RouteServerClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteServerClientVpnv4 }).(pulumi.StringPtrOutput)
}

// IPv4 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
func (o RouterBgpNeighborGroupOutput) SendCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SendCommunity }).(pulumi.StringPtrOutput)
}

// IPv6 Send community attribute to neighbor. Valid values: `standard`, `extended`, `both`, `disable`.
func (o RouterBgpNeighborGroupOutput) SendCommunity6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SendCommunity6 }).(pulumi.StringPtrOutput)
}

// Send community attribute to neighbor for VPNv4 address family. Valid values: `standard`, `extended`, `both`, `disable`.
func (o RouterBgpNeighborGroupOutput) SendCommunityVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SendCommunityVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable shutdown this neighbor. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) Shutdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Shutdown }).(pulumi.StringPtrOutput)
}

// Enable/disable allow IPv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) SoftReconfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SoftReconfiguration }).(pulumi.StringPtrOutput)
}

// Enable/disable allow IPv6 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) SoftReconfiguration6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SoftReconfiguration6 }).(pulumi.StringPtrOutput)
}

// Enable/disable allow VPNv4 inbound soft reconfiguration. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) SoftReconfigurationVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SoftReconfigurationVpnv4 }).(pulumi.StringPtrOutput)
}

// Enable/disable stale route after neighbor down. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) StaleRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.StaleRoute }).(pulumi.StringPtrOutput)
}

// Enable/disable strict capability matching. Valid values: `enable`, `disable`.
func (o RouterBgpNeighborGroupOutput) StrictCapabilityMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.StrictCapabilityMatch }).(pulumi.StringPtrOutput)
}

// IPv4 Route map to selectively unsuppress suppressed routes.
func (o RouterBgpNeighborGroupOutput) UnsuppressMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.UnsuppressMap }).(pulumi.StringPtrOutput)
}

// IPv6 Route map to selectively unsuppress suppressed routes.
func (o RouterBgpNeighborGroupOutput) UnsuppressMap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.UnsuppressMap6 }).(pulumi.StringPtrOutput)
}

// Interface to use as source IP/IPv6 address of TCP connections.
func (o RouterBgpNeighborGroupOutput) UpdateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.UpdateSource }).(pulumi.StringPtrOutput)
}

// Neighbor weight.
func (o RouterBgpNeighborGroupOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type RouterBgpNeighborGroupArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborGroup)(nil)).Elem()
}

func (o RouterBgpNeighborGroupArrayOutput) ToRouterBgpNeighborGroupArrayOutput() RouterBgpNeighborGroupArrayOutput {
	return o
}

func (o RouterBgpNeighborGroupArrayOutput) ToRouterBgpNeighborGroupArrayOutputWithContext(ctx context.Context) RouterBgpNeighborGroupArrayOutput {
	return o
}

func (o RouterBgpNeighborGroupArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborGroup {
		return vs[0].([]RouterBgpNeighborGroup)[vs[1].(int)]
	}).(RouterBgpNeighborGroupOutput)
}

type RouterBgpNeighborRange6 struct {
	// ID.
	Id *int `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum *int `pulumi:"maxNeighborNum"`
	// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
	NeighborGroup *string `pulumi:"neighborGroup"`
	// Aggregate IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
}

// RouterBgpNeighborRange6Input is an input type that accepts RouterBgpNeighborRange6Args and RouterBgpNeighborRange6Output values.
// You can construct a concrete instance of `RouterBgpNeighborRange6Input` via:
//
//	RouterBgpNeighborRange6Args{...}
type RouterBgpNeighborRange6Input interface {
	pulumi.Input

	ToRouterBgpNeighborRange6Output() RouterBgpNeighborRange6Output
	ToRouterBgpNeighborRange6OutputWithContext(context.Context) RouterBgpNeighborRange6Output
}

type RouterBgpNeighborRange6Args struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum pulumi.IntPtrInput `pulumi:"maxNeighborNum"`
	// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
	NeighborGroup pulumi.StringPtrInput `pulumi:"neighborGroup"`
	// Aggregate IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterBgpNeighborRange6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborRange6)(nil)).Elem()
}

func (i RouterBgpNeighborRange6Args) ToRouterBgpNeighborRange6Output() RouterBgpNeighborRange6Output {
	return i.ToRouterBgpNeighborRange6OutputWithContext(context.Background())
}

func (i RouterBgpNeighborRange6Args) ToRouterBgpNeighborRange6OutputWithContext(ctx context.Context) RouterBgpNeighborRange6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborRange6Output)
}

// RouterBgpNeighborRange6ArrayInput is an input type that accepts RouterBgpNeighborRange6Array and RouterBgpNeighborRange6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborRange6ArrayInput` via:
//
//	RouterBgpNeighborRange6Array{ RouterBgpNeighborRange6Args{...} }
type RouterBgpNeighborRange6ArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborRange6ArrayOutput() RouterBgpNeighborRange6ArrayOutput
	ToRouterBgpNeighborRange6ArrayOutputWithContext(context.Context) RouterBgpNeighborRange6ArrayOutput
}

type RouterBgpNeighborRange6Array []RouterBgpNeighborRange6Input

func (RouterBgpNeighborRange6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborRange6)(nil)).Elem()
}

func (i RouterBgpNeighborRange6Array) ToRouterBgpNeighborRange6ArrayOutput() RouterBgpNeighborRange6ArrayOutput {
	return i.ToRouterBgpNeighborRange6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborRange6Array) ToRouterBgpNeighborRange6ArrayOutputWithContext(ctx context.Context) RouterBgpNeighborRange6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborRange6ArrayOutput)
}

type RouterBgpNeighborRange6Output struct{ *pulumi.OutputState }

func (RouterBgpNeighborRange6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborRange6)(nil)).Elem()
}

func (o RouterBgpNeighborRange6Output) ToRouterBgpNeighborRange6Output() RouterBgpNeighborRange6Output {
	return o
}

func (o RouterBgpNeighborRange6Output) ToRouterBgpNeighborRange6OutputWithContext(ctx context.Context) RouterBgpNeighborRange6Output {
	return o
}

// ID.
func (o RouterBgpNeighborRange6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Maximum number of neighbors.
func (o RouterBgpNeighborRange6Output) MaxNeighborNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange6) *int { return v.MaxNeighborNum }).(pulumi.IntPtrOutput)
}

// BGP neighbor group table. The structure of `neighborGroup` block is documented below.
func (o RouterBgpNeighborRange6Output) NeighborGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange6) *string { return v.NeighborGroup }).(pulumi.StringPtrOutput)
}

// Aggregate IPv6 prefix.
func (o RouterBgpNeighborRange6Output) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange6) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterBgpNeighborRange6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborRange6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborRange6)(nil)).Elem()
}

func (o RouterBgpNeighborRange6ArrayOutput) ToRouterBgpNeighborRange6ArrayOutput() RouterBgpNeighborRange6ArrayOutput {
	return o
}

func (o RouterBgpNeighborRange6ArrayOutput) ToRouterBgpNeighborRange6ArrayOutputWithContext(ctx context.Context) RouterBgpNeighborRange6ArrayOutput {
	return o
}

func (o RouterBgpNeighborRange6ArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborRange6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborRange6 {
		return vs[0].([]RouterBgpNeighborRange6)[vs[1].(int)]
	}).(RouterBgpNeighborRange6Output)
}

type RouterBgpNeighborRange struct {
	// IPv6 neighbor range ID.
	Id *int `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum *int `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup *string `pulumi:"neighborGroup"`
	// Neighbor range prefix.
	Prefix *string `pulumi:"prefix"`
}

// RouterBgpNeighborRangeInput is an input type that accepts RouterBgpNeighborRangeArgs and RouterBgpNeighborRangeOutput values.
// You can construct a concrete instance of `RouterBgpNeighborRangeInput` via:
//
//	RouterBgpNeighborRangeArgs{...}
type RouterBgpNeighborRangeInput interface {
	pulumi.Input

	ToRouterBgpNeighborRangeOutput() RouterBgpNeighborRangeOutput
	ToRouterBgpNeighborRangeOutputWithContext(context.Context) RouterBgpNeighborRangeOutput
}

type RouterBgpNeighborRangeArgs struct {
	// IPv6 neighbor range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Maximum number of neighbors.
	MaxNeighborNum pulumi.IntPtrInput `pulumi:"maxNeighborNum"`
	// Neighbor group name.
	NeighborGroup pulumi.StringPtrInput `pulumi:"neighborGroup"`
	// Neighbor range prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterBgpNeighborRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborRange)(nil)).Elem()
}

func (i RouterBgpNeighborRangeArgs) ToRouterBgpNeighborRangeOutput() RouterBgpNeighborRangeOutput {
	return i.ToRouterBgpNeighborRangeOutputWithContext(context.Background())
}

func (i RouterBgpNeighborRangeArgs) ToRouterBgpNeighborRangeOutputWithContext(ctx context.Context) RouterBgpNeighborRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborRangeOutput)
}

// RouterBgpNeighborRangeArrayInput is an input type that accepts RouterBgpNeighborRangeArray and RouterBgpNeighborRangeArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborRangeArrayInput` via:
//
//	RouterBgpNeighborRangeArray{ RouterBgpNeighborRangeArgs{...} }
type RouterBgpNeighborRangeArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborRangeArrayOutput() RouterBgpNeighborRangeArrayOutput
	ToRouterBgpNeighborRangeArrayOutputWithContext(context.Context) RouterBgpNeighborRangeArrayOutput
}

type RouterBgpNeighborRangeArray []RouterBgpNeighborRangeInput

func (RouterBgpNeighborRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborRange)(nil)).Elem()
}

func (i RouterBgpNeighborRangeArray) ToRouterBgpNeighborRangeArrayOutput() RouterBgpNeighborRangeArrayOutput {
	return i.ToRouterBgpNeighborRangeArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborRangeArray) ToRouterBgpNeighborRangeArrayOutputWithContext(ctx context.Context) RouterBgpNeighborRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborRangeArrayOutput)
}

type RouterBgpNeighborRangeOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborRange)(nil)).Elem()
}

func (o RouterBgpNeighborRangeOutput) ToRouterBgpNeighborRangeOutput() RouterBgpNeighborRangeOutput {
	return o
}

func (o RouterBgpNeighborRangeOutput) ToRouterBgpNeighborRangeOutputWithContext(ctx context.Context) RouterBgpNeighborRangeOutput {
	return o
}

// IPv6 neighbor range ID.
func (o RouterBgpNeighborRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Maximum number of neighbors.
func (o RouterBgpNeighborRangeOutput) MaxNeighborNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange) *int { return v.MaxNeighborNum }).(pulumi.IntPtrOutput)
}

// Neighbor group name.
func (o RouterBgpNeighborRangeOutput) NeighborGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange) *string { return v.NeighborGroup }).(pulumi.StringPtrOutput)
}

// Neighbor range prefix.
func (o RouterBgpNeighborRangeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterBgpNeighborRangeArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborRange)(nil)).Elem()
}

func (o RouterBgpNeighborRangeArrayOutput) ToRouterBgpNeighborRangeArrayOutput() RouterBgpNeighborRangeArrayOutput {
	return o
}

func (o RouterBgpNeighborRangeArrayOutput) ToRouterBgpNeighborRangeArrayOutputWithContext(ctx context.Context) RouterBgpNeighborRangeArrayOutput {
	return o
}

func (o RouterBgpNeighborRangeArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborRange {
		return vs[0].([]RouterBgpNeighborRange)[vs[1].(int)]
	}).(RouterBgpNeighborRangeOutput)
}

type RouterBgpNetwork6Type struct {
	// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
	Backdoor *string `pulumi:"backdoor"`
	// ID.
	Id *int `pulumi:"id"`
	// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
	NetworkImportCheck *string `pulumi:"networkImportCheck"`
	// Aggregate IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
	// Route map to modify generated route.
	//
	// The `network6` block supports:
	//
	// The `redistribute6` block supports:
	RouteMap *string `pulumi:"routeMap"`
}

// RouterBgpNetwork6TypeInput is an input type that accepts RouterBgpNetwork6TypeArgs and RouterBgpNetwork6TypeOutput values.
// You can construct a concrete instance of `RouterBgpNetwork6TypeInput` via:
//
//	RouterBgpNetwork6TypeArgs{...}
type RouterBgpNetwork6TypeInput interface {
	pulumi.Input

	ToRouterBgpNetwork6TypeOutput() RouterBgpNetwork6TypeOutput
	ToRouterBgpNetwork6TypeOutputWithContext(context.Context) RouterBgpNetwork6TypeOutput
}

type RouterBgpNetwork6TypeArgs struct {
	// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
	Backdoor pulumi.StringPtrInput `pulumi:"backdoor"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
	NetworkImportCheck pulumi.StringPtrInput `pulumi:"networkImportCheck"`
	// Aggregate IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
	// Route map to modify generated route.
	//
	// The `network6` block supports:
	//
	// The `redistribute6` block supports:
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
}

func (RouterBgpNetwork6TypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNetwork6Type)(nil)).Elem()
}

func (i RouterBgpNetwork6TypeArgs) ToRouterBgpNetwork6TypeOutput() RouterBgpNetwork6TypeOutput {
	return i.ToRouterBgpNetwork6TypeOutputWithContext(context.Background())
}

func (i RouterBgpNetwork6TypeArgs) ToRouterBgpNetwork6TypeOutputWithContext(ctx context.Context) RouterBgpNetwork6TypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNetwork6TypeOutput)
}

// RouterBgpNetwork6TypeArrayInput is an input type that accepts RouterBgpNetwork6TypeArray and RouterBgpNetwork6TypeArrayOutput values.
// You can construct a concrete instance of `RouterBgpNetwork6TypeArrayInput` via:
//
//	RouterBgpNetwork6TypeArray{ RouterBgpNetwork6TypeArgs{...} }
type RouterBgpNetwork6TypeArrayInput interface {
	pulumi.Input

	ToRouterBgpNetwork6TypeArrayOutput() RouterBgpNetwork6TypeArrayOutput
	ToRouterBgpNetwork6TypeArrayOutputWithContext(context.Context) RouterBgpNetwork6TypeArrayOutput
}

type RouterBgpNetwork6TypeArray []RouterBgpNetwork6TypeInput

func (RouterBgpNetwork6TypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNetwork6Type)(nil)).Elem()
}

func (i RouterBgpNetwork6TypeArray) ToRouterBgpNetwork6TypeArrayOutput() RouterBgpNetwork6TypeArrayOutput {
	return i.ToRouterBgpNetwork6TypeArrayOutputWithContext(context.Background())
}

func (i RouterBgpNetwork6TypeArray) ToRouterBgpNetwork6TypeArrayOutputWithContext(ctx context.Context) RouterBgpNetwork6TypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNetwork6TypeArrayOutput)
}

type RouterBgpNetwork6TypeOutput struct{ *pulumi.OutputState }

func (RouterBgpNetwork6TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNetwork6Type)(nil)).Elem()
}

func (o RouterBgpNetwork6TypeOutput) ToRouterBgpNetwork6TypeOutput() RouterBgpNetwork6TypeOutput {
	return o
}

func (o RouterBgpNetwork6TypeOutput) ToRouterBgpNetwork6TypeOutputWithContext(ctx context.Context) RouterBgpNetwork6TypeOutput {
	return o
}

// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
func (o RouterBgpNetwork6TypeOutput) Backdoor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetwork6Type) *string { return v.Backdoor }).(pulumi.StringPtrOutput)
}

// ID.
func (o RouterBgpNetwork6TypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNetwork6Type) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable ensure BGP network route exists in IGP. Valid values: `enable`, `disable`.
func (o RouterBgpNetwork6TypeOutput) NetworkImportCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetwork6Type) *string { return v.NetworkImportCheck }).(pulumi.StringPtrOutput)
}

// Aggregate IPv6 prefix.
func (o RouterBgpNetwork6TypeOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetwork6Type) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

// Route map to modify generated route.
//
// The `network6` block supports:
//
// The `redistribute6` block supports:
func (o RouterBgpNetwork6TypeOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetwork6Type) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

type RouterBgpNetwork6TypeArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNetwork6TypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNetwork6Type)(nil)).Elem()
}

func (o RouterBgpNetwork6TypeArrayOutput) ToRouterBgpNetwork6TypeArrayOutput() RouterBgpNetwork6TypeArrayOutput {
	return o
}

func (o RouterBgpNetwork6TypeArrayOutput) ToRouterBgpNetwork6TypeArrayOutputWithContext(ctx context.Context) RouterBgpNetwork6TypeArrayOutput {
	return o
}

func (o RouterBgpNetwork6TypeArrayOutput) Index(i pulumi.IntInput) RouterBgpNetwork6TypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNetwork6Type {
		return vs[0].([]RouterBgpNetwork6Type)[vs[1].(int)]
	}).(RouterBgpNetwork6TypeOutput)
}

type RouterBgpNetworkType struct {
	// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
	Backdoor *string `pulumi:"backdoor"`
	// ID.
	Id *int `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
	NetworkImportCheck *string `pulumi:"networkImportCheck"`
	// Network prefix.
	Prefix *string `pulumi:"prefix"`
	// Route map to modify generated route.
	RouteMap *string `pulumi:"routeMap"`
}

// RouterBgpNetworkTypeInput is an input type that accepts RouterBgpNetworkTypeArgs and RouterBgpNetworkTypeOutput values.
// You can construct a concrete instance of `RouterBgpNetworkTypeInput` via:
//
//	RouterBgpNetworkTypeArgs{...}
type RouterBgpNetworkTypeInput interface {
	pulumi.Input

	ToRouterBgpNetworkTypeOutput() RouterBgpNetworkTypeOutput
	ToRouterBgpNetworkTypeOutputWithContext(context.Context) RouterBgpNetworkTypeOutput
}

type RouterBgpNetworkTypeArgs struct {
	// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
	Backdoor pulumi.StringPtrInput `pulumi:"backdoor"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
	NetworkImportCheck pulumi.StringPtrInput `pulumi:"networkImportCheck"`
	// Network prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Route map to modify generated route.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
}

func (RouterBgpNetworkTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNetworkType)(nil)).Elem()
}

func (i RouterBgpNetworkTypeArgs) ToRouterBgpNetworkTypeOutput() RouterBgpNetworkTypeOutput {
	return i.ToRouterBgpNetworkTypeOutputWithContext(context.Background())
}

func (i RouterBgpNetworkTypeArgs) ToRouterBgpNetworkTypeOutputWithContext(ctx context.Context) RouterBgpNetworkTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNetworkTypeOutput)
}

// RouterBgpNetworkTypeArrayInput is an input type that accepts RouterBgpNetworkTypeArray and RouterBgpNetworkTypeArrayOutput values.
// You can construct a concrete instance of `RouterBgpNetworkTypeArrayInput` via:
//
//	RouterBgpNetworkTypeArray{ RouterBgpNetworkTypeArgs{...} }
type RouterBgpNetworkTypeArrayInput interface {
	pulumi.Input

	ToRouterBgpNetworkTypeArrayOutput() RouterBgpNetworkTypeArrayOutput
	ToRouterBgpNetworkTypeArrayOutputWithContext(context.Context) RouterBgpNetworkTypeArrayOutput
}

type RouterBgpNetworkTypeArray []RouterBgpNetworkTypeInput

func (RouterBgpNetworkTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNetworkType)(nil)).Elem()
}

func (i RouterBgpNetworkTypeArray) ToRouterBgpNetworkTypeArrayOutput() RouterBgpNetworkTypeArrayOutput {
	return i.ToRouterBgpNetworkTypeArrayOutputWithContext(context.Background())
}

func (i RouterBgpNetworkTypeArray) ToRouterBgpNetworkTypeArrayOutputWithContext(ctx context.Context) RouterBgpNetworkTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNetworkTypeArrayOutput)
}

type RouterBgpNetworkTypeOutput struct{ *pulumi.OutputState }

func (RouterBgpNetworkTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNetworkType)(nil)).Elem()
}

func (o RouterBgpNetworkTypeOutput) ToRouterBgpNetworkTypeOutput() RouterBgpNetworkTypeOutput {
	return o
}

func (o RouterBgpNetworkTypeOutput) ToRouterBgpNetworkTypeOutputWithContext(ctx context.Context) RouterBgpNetworkTypeOutput {
	return o
}

// Enable/disable route as backdoor. Valid values: `enable`, `disable`.
func (o RouterBgpNetworkTypeOutput) Backdoor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetworkType) *string { return v.Backdoor }).(pulumi.StringPtrOutput)
}

// ID.
func (o RouterBgpNetworkTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNetworkType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
func (o RouterBgpNetworkTypeOutput) NetworkImportCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetworkType) *string { return v.NetworkImportCheck }).(pulumi.StringPtrOutput)
}

// Network prefix.
func (o RouterBgpNetworkTypeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetworkType) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Route map to modify generated route.
func (o RouterBgpNetworkTypeOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetworkType) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

type RouterBgpNetworkTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNetworkTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNetworkType)(nil)).Elem()
}

func (o RouterBgpNetworkTypeArrayOutput) ToRouterBgpNetworkTypeArrayOutput() RouterBgpNetworkTypeArrayOutput {
	return o
}

func (o RouterBgpNetworkTypeArrayOutput) ToRouterBgpNetworkTypeArrayOutputWithContext(ctx context.Context) RouterBgpNetworkTypeArrayOutput {
	return o
}

func (o RouterBgpNetworkTypeArrayOutput) Index(i pulumi.IntInput) RouterBgpNetworkTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNetworkType {
		return vs[0].([]RouterBgpNetworkType)[vs[1].(int)]
	}).(RouterBgpNetworkTypeOutput)
}

type RouterBgpRedistribute6 struct {
	// Neighbor group name.
	Name *string `pulumi:"name"`
	// Route map to modify generated route.
	//
	// The `network6` block supports:
	//
	// The `redistribute6` block supports:
	RouteMap *string `pulumi:"routeMap"`
	// Status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterBgpRedistribute6Input is an input type that accepts RouterBgpRedistribute6Args and RouterBgpRedistribute6Output values.
// You can construct a concrete instance of `RouterBgpRedistribute6Input` via:
//
//	RouterBgpRedistribute6Args{...}
type RouterBgpRedistribute6Input interface {
	pulumi.Input

	ToRouterBgpRedistribute6Output() RouterBgpRedistribute6Output
	ToRouterBgpRedistribute6OutputWithContext(context.Context) RouterBgpRedistribute6Output
}

type RouterBgpRedistribute6Args struct {
	// Neighbor group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map to modify generated route.
	//
	// The `network6` block supports:
	//
	// The `redistribute6` block supports:
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	// Status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterBgpRedistribute6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpRedistribute6)(nil)).Elem()
}

func (i RouterBgpRedistribute6Args) ToRouterBgpRedistribute6Output() RouterBgpRedistribute6Output {
	return i.ToRouterBgpRedistribute6OutputWithContext(context.Background())
}

func (i RouterBgpRedistribute6Args) ToRouterBgpRedistribute6OutputWithContext(ctx context.Context) RouterBgpRedistribute6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpRedistribute6Output)
}

// RouterBgpRedistribute6ArrayInput is an input type that accepts RouterBgpRedistribute6Array and RouterBgpRedistribute6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpRedistribute6ArrayInput` via:
//
//	RouterBgpRedistribute6Array{ RouterBgpRedistribute6Args{...} }
type RouterBgpRedistribute6ArrayInput interface {
	pulumi.Input

	ToRouterBgpRedistribute6ArrayOutput() RouterBgpRedistribute6ArrayOutput
	ToRouterBgpRedistribute6ArrayOutputWithContext(context.Context) RouterBgpRedistribute6ArrayOutput
}

type RouterBgpRedistribute6Array []RouterBgpRedistribute6Input

func (RouterBgpRedistribute6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpRedistribute6)(nil)).Elem()
}

func (i RouterBgpRedistribute6Array) ToRouterBgpRedistribute6ArrayOutput() RouterBgpRedistribute6ArrayOutput {
	return i.ToRouterBgpRedistribute6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpRedistribute6Array) ToRouterBgpRedistribute6ArrayOutputWithContext(ctx context.Context) RouterBgpRedistribute6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpRedistribute6ArrayOutput)
}

type RouterBgpRedistribute6Output struct{ *pulumi.OutputState }

func (RouterBgpRedistribute6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpRedistribute6)(nil)).Elem()
}

func (o RouterBgpRedistribute6Output) ToRouterBgpRedistribute6Output() RouterBgpRedistribute6Output {
	return o
}

func (o RouterBgpRedistribute6Output) ToRouterBgpRedistribute6OutputWithContext(ctx context.Context) RouterBgpRedistribute6Output {
	return o
}

// Neighbor group name.
func (o RouterBgpRedistribute6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map to modify generated route.
//
// The `network6` block supports:
//
// The `redistribute6` block supports:
func (o RouterBgpRedistribute6Output) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute6) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Status Valid values: `enable`, `disable`.
func (o RouterBgpRedistribute6Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute6) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterBgpRedistribute6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpRedistribute6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpRedistribute6)(nil)).Elem()
}

func (o RouterBgpRedistribute6ArrayOutput) ToRouterBgpRedistribute6ArrayOutput() RouterBgpRedistribute6ArrayOutput {
	return o
}

func (o RouterBgpRedistribute6ArrayOutput) ToRouterBgpRedistribute6ArrayOutputWithContext(ctx context.Context) RouterBgpRedistribute6ArrayOutput {
	return o
}

func (o RouterBgpRedistribute6ArrayOutput) Index(i pulumi.IntInput) RouterBgpRedistribute6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpRedistribute6 {
		return vs[0].([]RouterBgpRedistribute6)[vs[1].(int)]
	}).(RouterBgpRedistribute6Output)
}

type RouterBgpRedistribute struct {
	// Distribute list entry name.
	Name *string `pulumi:"name"`
	// Route map name.
	RouteMap *string `pulumi:"routeMap"`
	// Status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterBgpRedistributeInput is an input type that accepts RouterBgpRedistributeArgs and RouterBgpRedistributeOutput values.
// You can construct a concrete instance of `RouterBgpRedistributeInput` via:
//
//	RouterBgpRedistributeArgs{...}
type RouterBgpRedistributeInput interface {
	pulumi.Input

	ToRouterBgpRedistributeOutput() RouterBgpRedistributeOutput
	ToRouterBgpRedistributeOutputWithContext(context.Context) RouterBgpRedistributeOutput
}

type RouterBgpRedistributeArgs struct {
	// Distribute list entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map name.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	// Status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterBgpRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpRedistribute)(nil)).Elem()
}

func (i RouterBgpRedistributeArgs) ToRouterBgpRedistributeOutput() RouterBgpRedistributeOutput {
	return i.ToRouterBgpRedistributeOutputWithContext(context.Background())
}

func (i RouterBgpRedistributeArgs) ToRouterBgpRedistributeOutputWithContext(ctx context.Context) RouterBgpRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpRedistributeOutput)
}

// RouterBgpRedistributeArrayInput is an input type that accepts RouterBgpRedistributeArray and RouterBgpRedistributeArrayOutput values.
// You can construct a concrete instance of `RouterBgpRedistributeArrayInput` via:
//
//	RouterBgpRedistributeArray{ RouterBgpRedistributeArgs{...} }
type RouterBgpRedistributeArrayInput interface {
	pulumi.Input

	ToRouterBgpRedistributeArrayOutput() RouterBgpRedistributeArrayOutput
	ToRouterBgpRedistributeArrayOutputWithContext(context.Context) RouterBgpRedistributeArrayOutput
}

type RouterBgpRedistributeArray []RouterBgpRedistributeInput

func (RouterBgpRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpRedistribute)(nil)).Elem()
}

func (i RouterBgpRedistributeArray) ToRouterBgpRedistributeArrayOutput() RouterBgpRedistributeArrayOutput {
	return i.ToRouterBgpRedistributeArrayOutputWithContext(context.Background())
}

func (i RouterBgpRedistributeArray) ToRouterBgpRedistributeArrayOutputWithContext(ctx context.Context) RouterBgpRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpRedistributeArrayOutput)
}

type RouterBgpRedistributeOutput struct{ *pulumi.OutputState }

func (RouterBgpRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpRedistribute)(nil)).Elem()
}

func (o RouterBgpRedistributeOutput) ToRouterBgpRedistributeOutput() RouterBgpRedistributeOutput {
	return o
}

func (o RouterBgpRedistributeOutput) ToRouterBgpRedistributeOutputWithContext(ctx context.Context) RouterBgpRedistributeOutput {
	return o
}

// Distribute list entry name.
func (o RouterBgpRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o RouterBgpRedistributeOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Status Valid values: `enable`, `disable`.
func (o RouterBgpRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterBgpRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpRedistribute)(nil)).Elem()
}

func (o RouterBgpRedistributeArrayOutput) ToRouterBgpRedistributeArrayOutput() RouterBgpRedistributeArrayOutput {
	return o
}

func (o RouterBgpRedistributeArrayOutput) ToRouterBgpRedistributeArrayOutputWithContext(ctx context.Context) RouterBgpRedistributeArrayOutput {
	return o
}

func (o RouterBgpRedistributeArrayOutput) Index(i pulumi.IntInput) RouterBgpRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpRedistribute {
		return vs[0].([]RouterBgpRedistribute)[vs[1].(int)]
	}).(RouterBgpRedistributeOutput)
}

type RouterBgpVrf6 struct {
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets []RouterBgpVrf6LeakTarget `pulumi:"leakTargets"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrf *string `pulumi:"vrf"`
}

// RouterBgpVrf6Input is an input type that accepts RouterBgpVrf6Args and RouterBgpVrf6Output values.
// You can construct a concrete instance of `RouterBgpVrf6Input` via:
//
//	RouterBgpVrf6Args{...}
type RouterBgpVrf6Input interface {
	pulumi.Input

	ToRouterBgpVrf6Output() RouterBgpVrf6Output
	ToRouterBgpVrf6OutputWithContext(context.Context) RouterBgpVrf6Output
}

type RouterBgpVrf6Args struct {
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets RouterBgpVrf6LeakTargetArrayInput `pulumi:"leakTargets"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (RouterBgpVrf6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf6)(nil)).Elem()
}

func (i RouterBgpVrf6Args) ToRouterBgpVrf6Output() RouterBgpVrf6Output {
	return i.ToRouterBgpVrf6OutputWithContext(context.Background())
}

func (i RouterBgpVrf6Args) ToRouterBgpVrf6OutputWithContext(ctx context.Context) RouterBgpVrf6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrf6Output)
}

// RouterBgpVrf6ArrayInput is an input type that accepts RouterBgpVrf6Array and RouterBgpVrf6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrf6ArrayInput` via:
//
//	RouterBgpVrf6Array{ RouterBgpVrf6Args{...} }
type RouterBgpVrf6ArrayInput interface {
	pulumi.Input

	ToRouterBgpVrf6ArrayOutput() RouterBgpVrf6ArrayOutput
	ToRouterBgpVrf6ArrayOutputWithContext(context.Context) RouterBgpVrf6ArrayOutput
}

type RouterBgpVrf6Array []RouterBgpVrf6Input

func (RouterBgpVrf6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf6)(nil)).Elem()
}

func (i RouterBgpVrf6Array) ToRouterBgpVrf6ArrayOutput() RouterBgpVrf6ArrayOutput {
	return i.ToRouterBgpVrf6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrf6Array) ToRouterBgpVrf6ArrayOutputWithContext(ctx context.Context) RouterBgpVrf6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrf6ArrayOutput)
}

type RouterBgpVrf6Output struct{ *pulumi.OutputState }

func (RouterBgpVrf6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf6)(nil)).Elem()
}

func (o RouterBgpVrf6Output) ToRouterBgpVrf6Output() RouterBgpVrf6Output {
	return o
}

func (o RouterBgpVrf6Output) ToRouterBgpVrf6OutputWithContext(ctx context.Context) RouterBgpVrf6Output {
	return o
}

// Target VRF table. The structure of `leakTarget` block is documented below.
func (o RouterBgpVrf6Output) LeakTargets() RouterBgpVrf6LeakTargetArrayOutput {
	return o.ApplyT(func(v RouterBgpVrf6) []RouterBgpVrf6LeakTarget { return v.LeakTargets }).(RouterBgpVrf6LeakTargetArrayOutput)
}

// BGP VRF leaking table. The structure of `vrf` block is documented below.
func (o RouterBgpVrf6Output) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf6) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrf6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrf6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf6)(nil)).Elem()
}

func (o RouterBgpVrf6ArrayOutput) ToRouterBgpVrf6ArrayOutput() RouterBgpVrf6ArrayOutput {
	return o
}

func (o RouterBgpVrf6ArrayOutput) ToRouterBgpVrf6ArrayOutputWithContext(ctx context.Context) RouterBgpVrf6ArrayOutput {
	return o
}

func (o RouterBgpVrf6ArrayOutput) Index(i pulumi.IntInput) RouterBgpVrf6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrf6 {
		return vs[0].([]RouterBgpVrf6)[vs[1].(int)]
	}).(RouterBgpVrf6Output)
}

type RouterBgpVrf6LeakTarget struct {
	// Interface which is used to leak routes to target VRF.
	Interface *string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap *string `pulumi:"routeMap"`
	// Target VRF ID (0 - 63).
	Vrf *string `pulumi:"vrf"`
}

// RouterBgpVrf6LeakTargetInput is an input type that accepts RouterBgpVrf6LeakTargetArgs and RouterBgpVrf6LeakTargetOutput values.
// You can construct a concrete instance of `RouterBgpVrf6LeakTargetInput` via:
//
//	RouterBgpVrf6LeakTargetArgs{...}
type RouterBgpVrf6LeakTargetInput interface {
	pulumi.Input

	ToRouterBgpVrf6LeakTargetOutput() RouterBgpVrf6LeakTargetOutput
	ToRouterBgpVrf6LeakTargetOutputWithContext(context.Context) RouterBgpVrf6LeakTargetOutput
}

type RouterBgpVrf6LeakTargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	// Target VRF ID (0 - 63).
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (RouterBgpVrf6LeakTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (i RouterBgpVrf6LeakTargetArgs) ToRouterBgpVrf6LeakTargetOutput() RouterBgpVrf6LeakTargetOutput {
	return i.ToRouterBgpVrf6LeakTargetOutputWithContext(context.Background())
}

func (i RouterBgpVrf6LeakTargetArgs) ToRouterBgpVrf6LeakTargetOutputWithContext(ctx context.Context) RouterBgpVrf6LeakTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrf6LeakTargetOutput)
}

// RouterBgpVrf6LeakTargetArrayInput is an input type that accepts RouterBgpVrf6LeakTargetArray and RouterBgpVrf6LeakTargetArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrf6LeakTargetArrayInput` via:
//
//	RouterBgpVrf6LeakTargetArray{ RouterBgpVrf6LeakTargetArgs{...} }
type RouterBgpVrf6LeakTargetArrayInput interface {
	pulumi.Input

	ToRouterBgpVrf6LeakTargetArrayOutput() RouterBgpVrf6LeakTargetArrayOutput
	ToRouterBgpVrf6LeakTargetArrayOutputWithContext(context.Context) RouterBgpVrf6LeakTargetArrayOutput
}

type RouterBgpVrf6LeakTargetArray []RouterBgpVrf6LeakTargetInput

func (RouterBgpVrf6LeakTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (i RouterBgpVrf6LeakTargetArray) ToRouterBgpVrf6LeakTargetArrayOutput() RouterBgpVrf6LeakTargetArrayOutput {
	return i.ToRouterBgpVrf6LeakTargetArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrf6LeakTargetArray) ToRouterBgpVrf6LeakTargetArrayOutputWithContext(ctx context.Context) RouterBgpVrf6LeakTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrf6LeakTargetArrayOutput)
}

type RouterBgpVrf6LeakTargetOutput struct{ *pulumi.OutputState }

func (RouterBgpVrf6LeakTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (o RouterBgpVrf6LeakTargetOutput) ToRouterBgpVrf6LeakTargetOutput() RouterBgpVrf6LeakTargetOutput {
	return o
}

func (o RouterBgpVrf6LeakTargetOutput) ToRouterBgpVrf6LeakTargetOutputWithContext(ctx context.Context) RouterBgpVrf6LeakTargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o RouterBgpVrf6LeakTargetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf6LeakTarget) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Route map of VRF leaking.
func (o RouterBgpVrf6LeakTargetOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf6LeakTarget) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Target VRF ID (0 - 63).
func (o RouterBgpVrf6LeakTargetOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf6LeakTarget) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrf6LeakTargetArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrf6LeakTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (o RouterBgpVrf6LeakTargetArrayOutput) ToRouterBgpVrf6LeakTargetArrayOutput() RouterBgpVrf6LeakTargetArrayOutput {
	return o
}

func (o RouterBgpVrf6LeakTargetArrayOutput) ToRouterBgpVrf6LeakTargetArrayOutputWithContext(ctx context.Context) RouterBgpVrf6LeakTargetArrayOutput {
	return o
}

func (o RouterBgpVrf6LeakTargetArrayOutput) Index(i pulumi.IntInput) RouterBgpVrf6LeakTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrf6LeakTarget {
		return vs[0].([]RouterBgpVrf6LeakTarget)[vs[1].(int)]
	}).(RouterBgpVrf6LeakTargetOutput)
}

type RouterBgpVrf struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts []RouterBgpVrfExportRt `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap *string `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts []RouterBgpVrfImportRt `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets []RouterBgpVrfLeakTarget `pulumi:"leakTargets"`
	// Route Distinguisher: AA|AA:NN.
	Rd *string `pulumi:"rd"`
	// VRF role. Valid values: `standalone`, `ce`, `pe`.
	Role *string `pulumi:"role"`
	// Origin VRF ID (0 - 63).
	Vrf *string `pulumi:"vrf"`
}

// RouterBgpVrfInput is an input type that accepts RouterBgpVrfArgs and RouterBgpVrfOutput values.
// You can construct a concrete instance of `RouterBgpVrfInput` via:
//
//	RouterBgpVrfArgs{...}
type RouterBgpVrfInput interface {
	pulumi.Input

	ToRouterBgpVrfOutput() RouterBgpVrfOutput
	ToRouterBgpVrfOutputWithContext(context.Context) RouterBgpVrfOutput
}

type RouterBgpVrfArgs struct {
	// List of export route target. The structure of `exportRt` block is documented below.
	ExportRts RouterBgpVrfExportRtArrayInput `pulumi:"exportRts"`
	// Import route map.
	ImportRouteMap pulumi.StringPtrInput `pulumi:"importRouteMap"`
	// List of import route target. The structure of `importRt` block is documented below.
	ImportRts RouterBgpVrfImportRtArrayInput `pulumi:"importRts"`
	// Target VRF table. The structure of `leakTarget` block is documented below.
	LeakTargets RouterBgpVrfLeakTargetArrayInput `pulumi:"leakTargets"`
	// Route Distinguisher: AA|AA:NN.
	Rd pulumi.StringPtrInput `pulumi:"rd"`
	// VRF role. Valid values: `standalone`, `ce`, `pe`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Origin VRF ID (0 - 63).
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (RouterBgpVrfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf)(nil)).Elem()
}

func (i RouterBgpVrfArgs) ToRouterBgpVrfOutput() RouterBgpVrfOutput {
	return i.ToRouterBgpVrfOutputWithContext(context.Background())
}

func (i RouterBgpVrfArgs) ToRouterBgpVrfOutputWithContext(ctx context.Context) RouterBgpVrfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfOutput)
}

// RouterBgpVrfArrayInput is an input type that accepts RouterBgpVrfArray and RouterBgpVrfArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfArrayInput` via:
//
//	RouterBgpVrfArray{ RouterBgpVrfArgs{...} }
type RouterBgpVrfArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfArrayOutput() RouterBgpVrfArrayOutput
	ToRouterBgpVrfArrayOutputWithContext(context.Context) RouterBgpVrfArrayOutput
}

type RouterBgpVrfArray []RouterBgpVrfInput

func (RouterBgpVrfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf)(nil)).Elem()
}

func (i RouterBgpVrfArray) ToRouterBgpVrfArrayOutput() RouterBgpVrfArrayOutput {
	return i.ToRouterBgpVrfArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfArray) ToRouterBgpVrfArrayOutputWithContext(ctx context.Context) RouterBgpVrfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfArrayOutput)
}

type RouterBgpVrfOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf)(nil)).Elem()
}

func (o RouterBgpVrfOutput) ToRouterBgpVrfOutput() RouterBgpVrfOutput {
	return o
}

func (o RouterBgpVrfOutput) ToRouterBgpVrfOutputWithContext(ctx context.Context) RouterBgpVrfOutput {
	return o
}

// List of export route target. The structure of `exportRt` block is documented below.
func (o RouterBgpVrfOutput) ExportRts() RouterBgpVrfExportRtArrayOutput {
	return o.ApplyT(func(v RouterBgpVrf) []RouterBgpVrfExportRt { return v.ExportRts }).(RouterBgpVrfExportRtArrayOutput)
}

// Import route map.
func (o RouterBgpVrfOutput) ImportRouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf) *string { return v.ImportRouteMap }).(pulumi.StringPtrOutput)
}

// List of import route target. The structure of `importRt` block is documented below.
func (o RouterBgpVrfOutput) ImportRts() RouterBgpVrfImportRtArrayOutput {
	return o.ApplyT(func(v RouterBgpVrf) []RouterBgpVrfImportRt { return v.ImportRts }).(RouterBgpVrfImportRtArrayOutput)
}

// Target VRF table. The structure of `leakTarget` block is documented below.
func (o RouterBgpVrfOutput) LeakTargets() RouterBgpVrfLeakTargetArrayOutput {
	return o.ApplyT(func(v RouterBgpVrf) []RouterBgpVrfLeakTarget { return v.LeakTargets }).(RouterBgpVrfLeakTargetArrayOutput)
}

// Route Distinguisher: AA|AA:NN.
func (o RouterBgpVrfOutput) Rd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf) *string { return v.Rd }).(pulumi.StringPtrOutput)
}

// VRF role. Valid values: `standalone`, `ce`, `pe`.
func (o RouterBgpVrfOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Origin VRF ID (0 - 63).
func (o RouterBgpVrfOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf)(nil)).Elem()
}

func (o RouterBgpVrfArrayOutput) ToRouterBgpVrfArrayOutput() RouterBgpVrfArrayOutput {
	return o
}

func (o RouterBgpVrfArrayOutput) ToRouterBgpVrfArrayOutputWithContext(ctx context.Context) RouterBgpVrfArrayOutput {
	return o
}

func (o RouterBgpVrfArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrf {
		return vs[0].([]RouterBgpVrf)[vs[1].(int)]
	}).(RouterBgpVrfOutput)
}

type RouterBgpVrfExportRt struct {
	// Attribute: AA|AA:NN.
	RouteTarget *string `pulumi:"routeTarget"`
}

// RouterBgpVrfExportRtInput is an input type that accepts RouterBgpVrfExportRtArgs and RouterBgpVrfExportRtOutput values.
// You can construct a concrete instance of `RouterBgpVrfExportRtInput` via:
//
//	RouterBgpVrfExportRtArgs{...}
type RouterBgpVrfExportRtInput interface {
	pulumi.Input

	ToRouterBgpVrfExportRtOutput() RouterBgpVrfExportRtOutput
	ToRouterBgpVrfExportRtOutputWithContext(context.Context) RouterBgpVrfExportRtOutput
}

type RouterBgpVrfExportRtArgs struct {
	// Attribute: AA|AA:NN.
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (RouterBgpVrfExportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfExportRt)(nil)).Elem()
}

func (i RouterBgpVrfExportRtArgs) ToRouterBgpVrfExportRtOutput() RouterBgpVrfExportRtOutput {
	return i.ToRouterBgpVrfExportRtOutputWithContext(context.Background())
}

func (i RouterBgpVrfExportRtArgs) ToRouterBgpVrfExportRtOutputWithContext(ctx context.Context) RouterBgpVrfExportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfExportRtOutput)
}

// RouterBgpVrfExportRtArrayInput is an input type that accepts RouterBgpVrfExportRtArray and RouterBgpVrfExportRtArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfExportRtArrayInput` via:
//
//	RouterBgpVrfExportRtArray{ RouterBgpVrfExportRtArgs{...} }
type RouterBgpVrfExportRtArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfExportRtArrayOutput() RouterBgpVrfExportRtArrayOutput
	ToRouterBgpVrfExportRtArrayOutputWithContext(context.Context) RouterBgpVrfExportRtArrayOutput
}

type RouterBgpVrfExportRtArray []RouterBgpVrfExportRtInput

func (RouterBgpVrfExportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfExportRt)(nil)).Elem()
}

func (i RouterBgpVrfExportRtArray) ToRouterBgpVrfExportRtArrayOutput() RouterBgpVrfExportRtArrayOutput {
	return i.ToRouterBgpVrfExportRtArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfExportRtArray) ToRouterBgpVrfExportRtArrayOutputWithContext(ctx context.Context) RouterBgpVrfExportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfExportRtArrayOutput)
}

type RouterBgpVrfExportRtOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfExportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfExportRt)(nil)).Elem()
}

func (o RouterBgpVrfExportRtOutput) ToRouterBgpVrfExportRtOutput() RouterBgpVrfExportRtOutput {
	return o
}

func (o RouterBgpVrfExportRtOutput) ToRouterBgpVrfExportRtOutputWithContext(ctx context.Context) RouterBgpVrfExportRtOutput {
	return o
}

// Attribute: AA|AA:NN.
func (o RouterBgpVrfExportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfExportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfExportRtArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfExportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfExportRt)(nil)).Elem()
}

func (o RouterBgpVrfExportRtArrayOutput) ToRouterBgpVrfExportRtArrayOutput() RouterBgpVrfExportRtArrayOutput {
	return o
}

func (o RouterBgpVrfExportRtArrayOutput) ToRouterBgpVrfExportRtArrayOutputWithContext(ctx context.Context) RouterBgpVrfExportRtArrayOutput {
	return o
}

func (o RouterBgpVrfExportRtArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfExportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfExportRt {
		return vs[0].([]RouterBgpVrfExportRt)[vs[1].(int)]
	}).(RouterBgpVrfExportRtOutput)
}

type RouterBgpVrfImportRt struct {
	// Attribute: AA|AA:NN.
	RouteTarget *string `pulumi:"routeTarget"`
}

// RouterBgpVrfImportRtInput is an input type that accepts RouterBgpVrfImportRtArgs and RouterBgpVrfImportRtOutput values.
// You can construct a concrete instance of `RouterBgpVrfImportRtInput` via:
//
//	RouterBgpVrfImportRtArgs{...}
type RouterBgpVrfImportRtInput interface {
	pulumi.Input

	ToRouterBgpVrfImportRtOutput() RouterBgpVrfImportRtOutput
	ToRouterBgpVrfImportRtOutputWithContext(context.Context) RouterBgpVrfImportRtOutput
}

type RouterBgpVrfImportRtArgs struct {
	// Attribute: AA|AA:NN.
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (RouterBgpVrfImportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfImportRt)(nil)).Elem()
}

func (i RouterBgpVrfImportRtArgs) ToRouterBgpVrfImportRtOutput() RouterBgpVrfImportRtOutput {
	return i.ToRouterBgpVrfImportRtOutputWithContext(context.Background())
}

func (i RouterBgpVrfImportRtArgs) ToRouterBgpVrfImportRtOutputWithContext(ctx context.Context) RouterBgpVrfImportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfImportRtOutput)
}

// RouterBgpVrfImportRtArrayInput is an input type that accepts RouterBgpVrfImportRtArray and RouterBgpVrfImportRtArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfImportRtArrayInput` via:
//
//	RouterBgpVrfImportRtArray{ RouterBgpVrfImportRtArgs{...} }
type RouterBgpVrfImportRtArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfImportRtArrayOutput() RouterBgpVrfImportRtArrayOutput
	ToRouterBgpVrfImportRtArrayOutputWithContext(context.Context) RouterBgpVrfImportRtArrayOutput
}

type RouterBgpVrfImportRtArray []RouterBgpVrfImportRtInput

func (RouterBgpVrfImportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfImportRt)(nil)).Elem()
}

func (i RouterBgpVrfImportRtArray) ToRouterBgpVrfImportRtArrayOutput() RouterBgpVrfImportRtArrayOutput {
	return i.ToRouterBgpVrfImportRtArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfImportRtArray) ToRouterBgpVrfImportRtArrayOutputWithContext(ctx context.Context) RouterBgpVrfImportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfImportRtArrayOutput)
}

type RouterBgpVrfImportRtOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfImportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfImportRt)(nil)).Elem()
}

func (o RouterBgpVrfImportRtOutput) ToRouterBgpVrfImportRtOutput() RouterBgpVrfImportRtOutput {
	return o
}

func (o RouterBgpVrfImportRtOutput) ToRouterBgpVrfImportRtOutputWithContext(ctx context.Context) RouterBgpVrfImportRtOutput {
	return o
}

// Attribute: AA|AA:NN.
func (o RouterBgpVrfImportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfImportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfImportRtArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfImportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfImportRt)(nil)).Elem()
}

func (o RouterBgpVrfImportRtArrayOutput) ToRouterBgpVrfImportRtArrayOutput() RouterBgpVrfImportRtArrayOutput {
	return o
}

func (o RouterBgpVrfImportRtArrayOutput) ToRouterBgpVrfImportRtArrayOutputWithContext(ctx context.Context) RouterBgpVrfImportRtArrayOutput {
	return o
}

func (o RouterBgpVrfImportRtArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfImportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfImportRt {
		return vs[0].([]RouterBgpVrfImportRt)[vs[1].(int)]
	}).(RouterBgpVrfImportRtOutput)
}

type RouterBgpVrfLeak6 struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets []RouterBgpVrfLeak6Target `pulumi:"targets"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrf *string `pulumi:"vrf"`
}

// RouterBgpVrfLeak6Input is an input type that accepts RouterBgpVrfLeak6Args and RouterBgpVrfLeak6Output values.
// You can construct a concrete instance of `RouterBgpVrfLeak6Input` via:
//
//	RouterBgpVrfLeak6Args{...}
type RouterBgpVrfLeak6Input interface {
	pulumi.Input

	ToRouterBgpVrfLeak6Output() RouterBgpVrfLeak6Output
	ToRouterBgpVrfLeak6OutputWithContext(context.Context) RouterBgpVrfLeak6Output
}

type RouterBgpVrfLeak6Args struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets RouterBgpVrfLeak6TargetArrayInput `pulumi:"targets"`
	// BGP VRF leaking table. The structure of `vrf` block is documented below.
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (RouterBgpVrfLeak6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak6)(nil)).Elem()
}

func (i RouterBgpVrfLeak6Args) ToRouterBgpVrfLeak6Output() RouterBgpVrfLeak6Output {
	return i.ToRouterBgpVrfLeak6OutputWithContext(context.Background())
}

func (i RouterBgpVrfLeak6Args) ToRouterBgpVrfLeak6OutputWithContext(ctx context.Context) RouterBgpVrfLeak6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeak6Output)
}

// RouterBgpVrfLeak6ArrayInput is an input type that accepts RouterBgpVrfLeak6Array and RouterBgpVrfLeak6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeak6ArrayInput` via:
//
//	RouterBgpVrfLeak6Array{ RouterBgpVrfLeak6Args{...} }
type RouterBgpVrfLeak6ArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfLeak6ArrayOutput() RouterBgpVrfLeak6ArrayOutput
	ToRouterBgpVrfLeak6ArrayOutputWithContext(context.Context) RouterBgpVrfLeak6ArrayOutput
}

type RouterBgpVrfLeak6Array []RouterBgpVrfLeak6Input

func (RouterBgpVrfLeak6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak6)(nil)).Elem()
}

func (i RouterBgpVrfLeak6Array) ToRouterBgpVrfLeak6ArrayOutput() RouterBgpVrfLeak6ArrayOutput {
	return i.ToRouterBgpVrfLeak6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeak6Array) ToRouterBgpVrfLeak6ArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeak6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeak6ArrayOutput)
}

type RouterBgpVrfLeak6Output struct{ *pulumi.OutputState }

func (RouterBgpVrfLeak6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak6)(nil)).Elem()
}

func (o RouterBgpVrfLeak6Output) ToRouterBgpVrfLeak6Output() RouterBgpVrfLeak6Output {
	return o
}

func (o RouterBgpVrfLeak6Output) ToRouterBgpVrfLeak6OutputWithContext(ctx context.Context) RouterBgpVrfLeak6Output {
	return o
}

// Target VRF table. The structure of `target` block is documented below.
func (o RouterBgpVrfLeak6Output) Targets() RouterBgpVrfLeak6TargetArrayOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak6) []RouterBgpVrfLeak6Target { return v.Targets }).(RouterBgpVrfLeak6TargetArrayOutput)
}

// BGP VRF leaking table. The structure of `vrf` block is documented below.
func (o RouterBgpVrfLeak6Output) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak6) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfLeak6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeak6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak6)(nil)).Elem()
}

func (o RouterBgpVrfLeak6ArrayOutput) ToRouterBgpVrfLeak6ArrayOutput() RouterBgpVrfLeak6ArrayOutput {
	return o
}

func (o RouterBgpVrfLeak6ArrayOutput) ToRouterBgpVrfLeak6ArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeak6ArrayOutput {
	return o
}

func (o RouterBgpVrfLeak6ArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfLeak6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfLeak6 {
		return vs[0].([]RouterBgpVrfLeak6)[vs[1].(int)]
	}).(RouterBgpVrfLeak6Output)
}

type RouterBgpVrfLeak6Target struct {
	// Interface which is used to leak routes to target VRF.
	Interface *string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap *string `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf *string `pulumi:"vrf"`
}

// RouterBgpVrfLeak6TargetInput is an input type that accepts RouterBgpVrfLeak6TargetArgs and RouterBgpVrfLeak6TargetOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeak6TargetInput` via:
//
//	RouterBgpVrfLeak6TargetArgs{...}
type RouterBgpVrfLeak6TargetInput interface {
	pulumi.Input

	ToRouterBgpVrfLeak6TargetOutput() RouterBgpVrfLeak6TargetOutput
	ToRouterBgpVrfLeak6TargetOutputWithContext(context.Context) RouterBgpVrfLeak6TargetOutput
}

type RouterBgpVrfLeak6TargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (RouterBgpVrfLeak6TargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak6Target)(nil)).Elem()
}

func (i RouterBgpVrfLeak6TargetArgs) ToRouterBgpVrfLeak6TargetOutput() RouterBgpVrfLeak6TargetOutput {
	return i.ToRouterBgpVrfLeak6TargetOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeak6TargetArgs) ToRouterBgpVrfLeak6TargetOutputWithContext(ctx context.Context) RouterBgpVrfLeak6TargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeak6TargetOutput)
}

// RouterBgpVrfLeak6TargetArrayInput is an input type that accepts RouterBgpVrfLeak6TargetArray and RouterBgpVrfLeak6TargetArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeak6TargetArrayInput` via:
//
//	RouterBgpVrfLeak6TargetArray{ RouterBgpVrfLeak6TargetArgs{...} }
type RouterBgpVrfLeak6TargetArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfLeak6TargetArrayOutput() RouterBgpVrfLeak6TargetArrayOutput
	ToRouterBgpVrfLeak6TargetArrayOutputWithContext(context.Context) RouterBgpVrfLeak6TargetArrayOutput
}

type RouterBgpVrfLeak6TargetArray []RouterBgpVrfLeak6TargetInput

func (RouterBgpVrfLeak6TargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak6Target)(nil)).Elem()
}

func (i RouterBgpVrfLeak6TargetArray) ToRouterBgpVrfLeak6TargetArrayOutput() RouterBgpVrfLeak6TargetArrayOutput {
	return i.ToRouterBgpVrfLeak6TargetArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeak6TargetArray) ToRouterBgpVrfLeak6TargetArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeak6TargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeak6TargetArrayOutput)
}

type RouterBgpVrfLeak6TargetOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeak6TargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak6Target)(nil)).Elem()
}

func (o RouterBgpVrfLeak6TargetOutput) ToRouterBgpVrfLeak6TargetOutput() RouterBgpVrfLeak6TargetOutput {
	return o
}

func (o RouterBgpVrfLeak6TargetOutput) ToRouterBgpVrfLeak6TargetOutputWithContext(ctx context.Context) RouterBgpVrfLeak6TargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o RouterBgpVrfLeak6TargetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak6Target) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Route map of VRF leaking.
func (o RouterBgpVrfLeak6TargetOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak6Target) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Target VRF ID <0 - 31>.
func (o RouterBgpVrfLeak6TargetOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak6Target) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfLeak6TargetArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeak6TargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak6Target)(nil)).Elem()
}

func (o RouterBgpVrfLeak6TargetArrayOutput) ToRouterBgpVrfLeak6TargetArrayOutput() RouterBgpVrfLeak6TargetArrayOutput {
	return o
}

func (o RouterBgpVrfLeak6TargetArrayOutput) ToRouterBgpVrfLeak6TargetArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeak6TargetArrayOutput {
	return o
}

func (o RouterBgpVrfLeak6TargetArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfLeak6TargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfLeak6Target {
		return vs[0].([]RouterBgpVrfLeak6Target)[vs[1].(int)]
	}).(RouterBgpVrfLeak6TargetOutput)
}

type RouterBgpVrfLeak struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets []RouterBgpVrfLeakTarget `pulumi:"targets"`
	// Origin VRF ID <0 - 31>.
	Vrf *string `pulumi:"vrf"`
}

// RouterBgpVrfLeakInput is an input type that accepts RouterBgpVrfLeakArgs and RouterBgpVrfLeakOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeakInput` via:
//
//	RouterBgpVrfLeakArgs{...}
type RouterBgpVrfLeakInput interface {
	pulumi.Input

	ToRouterBgpVrfLeakOutput() RouterBgpVrfLeakOutput
	ToRouterBgpVrfLeakOutputWithContext(context.Context) RouterBgpVrfLeakOutput
}

type RouterBgpVrfLeakArgs struct {
	// Target VRF table. The structure of `target` block is documented below.
	Targets RouterBgpVrfLeakTargetArrayInput `pulumi:"targets"`
	// Origin VRF ID <0 - 31>.
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (RouterBgpVrfLeakArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak)(nil)).Elem()
}

func (i RouterBgpVrfLeakArgs) ToRouterBgpVrfLeakOutput() RouterBgpVrfLeakOutput {
	return i.ToRouterBgpVrfLeakOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeakArgs) ToRouterBgpVrfLeakOutputWithContext(ctx context.Context) RouterBgpVrfLeakOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeakOutput)
}

// RouterBgpVrfLeakArrayInput is an input type that accepts RouterBgpVrfLeakArray and RouterBgpVrfLeakArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeakArrayInput` via:
//
//	RouterBgpVrfLeakArray{ RouterBgpVrfLeakArgs{...} }
type RouterBgpVrfLeakArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfLeakArrayOutput() RouterBgpVrfLeakArrayOutput
	ToRouterBgpVrfLeakArrayOutputWithContext(context.Context) RouterBgpVrfLeakArrayOutput
}

type RouterBgpVrfLeakArray []RouterBgpVrfLeakInput

func (RouterBgpVrfLeakArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak)(nil)).Elem()
}

func (i RouterBgpVrfLeakArray) ToRouterBgpVrfLeakArrayOutput() RouterBgpVrfLeakArrayOutput {
	return i.ToRouterBgpVrfLeakArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeakArray) ToRouterBgpVrfLeakArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeakArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeakArrayOutput)
}

type RouterBgpVrfLeakOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeakOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak)(nil)).Elem()
}

func (o RouterBgpVrfLeakOutput) ToRouterBgpVrfLeakOutput() RouterBgpVrfLeakOutput {
	return o
}

func (o RouterBgpVrfLeakOutput) ToRouterBgpVrfLeakOutputWithContext(ctx context.Context) RouterBgpVrfLeakOutput {
	return o
}

// Target VRF table. The structure of `target` block is documented below.
func (o RouterBgpVrfLeakOutput) Targets() RouterBgpVrfLeakTargetArrayOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak) []RouterBgpVrfLeakTarget { return v.Targets }).(RouterBgpVrfLeakTargetArrayOutput)
}

// Origin VRF ID <0 - 31>.
func (o RouterBgpVrfLeakOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfLeakArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeakArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak)(nil)).Elem()
}

func (o RouterBgpVrfLeakArrayOutput) ToRouterBgpVrfLeakArrayOutput() RouterBgpVrfLeakArrayOutput {
	return o
}

func (o RouterBgpVrfLeakArrayOutput) ToRouterBgpVrfLeakArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeakArrayOutput {
	return o
}

func (o RouterBgpVrfLeakArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfLeakOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfLeak {
		return vs[0].([]RouterBgpVrfLeak)[vs[1].(int)]
	}).(RouterBgpVrfLeakOutput)
}

type RouterBgpVrfLeakTarget struct {
	// Interface which is used to leak routes to target VRF.
	Interface *string `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap *string `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf *string `pulumi:"vrf"`
}

// RouterBgpVrfLeakTargetInput is an input type that accepts RouterBgpVrfLeakTargetArgs and RouterBgpVrfLeakTargetOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeakTargetInput` via:
//
//	RouterBgpVrfLeakTargetArgs{...}
type RouterBgpVrfLeakTargetInput interface {
	pulumi.Input

	ToRouterBgpVrfLeakTargetOutput() RouterBgpVrfLeakTargetOutput
	ToRouterBgpVrfLeakTargetOutputWithContext(context.Context) RouterBgpVrfLeakTargetOutput
}

type RouterBgpVrfLeakTargetArgs struct {
	// Interface which is used to leak routes to target VRF.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Route map of VRF leaking.
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	// Target VRF ID <0 - 31>.
	Vrf pulumi.StringPtrInput `pulumi:"vrf"`
}

func (RouterBgpVrfLeakTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeakTarget)(nil)).Elem()
}

func (i RouterBgpVrfLeakTargetArgs) ToRouterBgpVrfLeakTargetOutput() RouterBgpVrfLeakTargetOutput {
	return i.ToRouterBgpVrfLeakTargetOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeakTargetArgs) ToRouterBgpVrfLeakTargetOutputWithContext(ctx context.Context) RouterBgpVrfLeakTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeakTargetOutput)
}

// RouterBgpVrfLeakTargetArrayInput is an input type that accepts RouterBgpVrfLeakTargetArray and RouterBgpVrfLeakTargetArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeakTargetArrayInput` via:
//
//	RouterBgpVrfLeakTargetArray{ RouterBgpVrfLeakTargetArgs{...} }
type RouterBgpVrfLeakTargetArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfLeakTargetArrayOutput() RouterBgpVrfLeakTargetArrayOutput
	ToRouterBgpVrfLeakTargetArrayOutputWithContext(context.Context) RouterBgpVrfLeakTargetArrayOutput
}

type RouterBgpVrfLeakTargetArray []RouterBgpVrfLeakTargetInput

func (RouterBgpVrfLeakTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeakTarget)(nil)).Elem()
}

func (i RouterBgpVrfLeakTargetArray) ToRouterBgpVrfLeakTargetArrayOutput() RouterBgpVrfLeakTargetArrayOutput {
	return i.ToRouterBgpVrfLeakTargetArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeakTargetArray) ToRouterBgpVrfLeakTargetArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeakTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeakTargetArrayOutput)
}

type RouterBgpVrfLeakTargetOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeakTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeakTarget)(nil)).Elem()
}

func (o RouterBgpVrfLeakTargetOutput) ToRouterBgpVrfLeakTargetOutput() RouterBgpVrfLeakTargetOutput {
	return o
}

func (o RouterBgpVrfLeakTargetOutput) ToRouterBgpVrfLeakTargetOutputWithContext(ctx context.Context) RouterBgpVrfLeakTargetOutput {
	return o
}

// Interface which is used to leak routes to target VRF.
func (o RouterBgpVrfLeakTargetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeakTarget) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Route map of VRF leaking.
func (o RouterBgpVrfLeakTargetOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeakTarget) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

// Target VRF ID <0 - 31>.
func (o RouterBgpVrfLeakTargetOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeakTarget) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfLeakTargetArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeakTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeakTarget)(nil)).Elem()
}

func (o RouterBgpVrfLeakTargetArrayOutput) ToRouterBgpVrfLeakTargetArrayOutput() RouterBgpVrfLeakTargetArrayOutput {
	return o
}

func (o RouterBgpVrfLeakTargetArrayOutput) ToRouterBgpVrfLeakTargetArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeakTargetArrayOutput {
	return o
}

func (o RouterBgpVrfLeakTargetArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfLeakTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfLeakTarget {
		return vs[0].([]RouterBgpVrfLeakTarget)[vs[1].(int)]
	}).(RouterBgpVrfLeakTargetOutput)
}

type RouterCommunitylistRule struct {
	// Permit or deny route-based operations, based on the route's COMMUNITY attribute. Valid values: `deny`, `permit`.
	Action *string `pulumi:"action"`
	// ID.
	Id *int `pulumi:"id"`
	// Community specifications for matching a reserved community.
	Match *string `pulumi:"match"`
	// Ordered list of COMMUNITY attributes as a regular expression.
	Regexp *string `pulumi:"regexp"`
}

// RouterCommunitylistRuleInput is an input type that accepts RouterCommunitylistRuleArgs and RouterCommunitylistRuleOutput values.
// You can construct a concrete instance of `RouterCommunitylistRuleInput` via:
//
//	RouterCommunitylistRuleArgs{...}
type RouterCommunitylistRuleInput interface {
	pulumi.Input

	ToRouterCommunitylistRuleOutput() RouterCommunitylistRuleOutput
	ToRouterCommunitylistRuleOutputWithContext(context.Context) RouterCommunitylistRuleOutput
}

type RouterCommunitylistRuleArgs struct {
	// Permit or deny route-based operations, based on the route's COMMUNITY attribute. Valid values: `deny`, `permit`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Community specifications for matching a reserved community.
	Match pulumi.StringPtrInput `pulumi:"match"`
	// Ordered list of COMMUNITY attributes as a regular expression.
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
}

func (RouterCommunitylistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterCommunitylistRule)(nil)).Elem()
}

func (i RouterCommunitylistRuleArgs) ToRouterCommunitylistRuleOutput() RouterCommunitylistRuleOutput {
	return i.ToRouterCommunitylistRuleOutputWithContext(context.Background())
}

func (i RouterCommunitylistRuleArgs) ToRouterCommunitylistRuleOutputWithContext(ctx context.Context) RouterCommunitylistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterCommunitylistRuleOutput)
}

// RouterCommunitylistRuleArrayInput is an input type that accepts RouterCommunitylistRuleArray and RouterCommunitylistRuleArrayOutput values.
// You can construct a concrete instance of `RouterCommunitylistRuleArrayInput` via:
//
//	RouterCommunitylistRuleArray{ RouterCommunitylistRuleArgs{...} }
type RouterCommunitylistRuleArrayInput interface {
	pulumi.Input

	ToRouterCommunitylistRuleArrayOutput() RouterCommunitylistRuleArrayOutput
	ToRouterCommunitylistRuleArrayOutputWithContext(context.Context) RouterCommunitylistRuleArrayOutput
}

type RouterCommunitylistRuleArray []RouterCommunitylistRuleInput

func (RouterCommunitylistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterCommunitylistRule)(nil)).Elem()
}

func (i RouterCommunitylistRuleArray) ToRouterCommunitylistRuleArrayOutput() RouterCommunitylistRuleArrayOutput {
	return i.ToRouterCommunitylistRuleArrayOutputWithContext(context.Background())
}

func (i RouterCommunitylistRuleArray) ToRouterCommunitylistRuleArrayOutputWithContext(ctx context.Context) RouterCommunitylistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterCommunitylistRuleArrayOutput)
}

type RouterCommunitylistRuleOutput struct{ *pulumi.OutputState }

func (RouterCommunitylistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterCommunitylistRule)(nil)).Elem()
}

func (o RouterCommunitylistRuleOutput) ToRouterCommunitylistRuleOutput() RouterCommunitylistRuleOutput {
	return o
}

func (o RouterCommunitylistRuleOutput) ToRouterCommunitylistRuleOutputWithContext(ctx context.Context) RouterCommunitylistRuleOutput {
	return o
}

// Permit or deny route-based operations, based on the route's COMMUNITY attribute. Valid values: `deny`, `permit`.
func (o RouterCommunitylistRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterCommunitylistRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// ID.
func (o RouterCommunitylistRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterCommunitylistRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Community specifications for matching a reserved community.
func (o RouterCommunitylistRuleOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterCommunitylistRule) *string { return v.Match }).(pulumi.StringPtrOutput)
}

// Ordered list of COMMUNITY attributes as a regular expression.
func (o RouterCommunitylistRuleOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterCommunitylistRule) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

type RouterCommunitylistRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterCommunitylistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterCommunitylistRule)(nil)).Elem()
}

func (o RouterCommunitylistRuleArrayOutput) ToRouterCommunitylistRuleArrayOutput() RouterCommunitylistRuleArrayOutput {
	return o
}

func (o RouterCommunitylistRuleArrayOutput) ToRouterCommunitylistRuleArrayOutputWithContext(ctx context.Context) RouterCommunitylistRuleArrayOutput {
	return o
}

func (o RouterCommunitylistRuleArrayOutput) Index(i pulumi.IntInput) RouterCommunitylistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterCommunitylistRule {
		return vs[0].([]RouterCommunitylistRule)[vs[1].(int)]
	}).(RouterCommunitylistRuleOutput)
}

type RouterIsisIsisInterface struct {
	// Authentication key-chain for level 1 PDUs.
	AuthKeychainL1 *string `pulumi:"authKeychainL1"`
	// Authentication key-chain for level 2 PDUs.
	AuthKeychainL2 *string `pulumi:"authKeychainL2"`
	// Level 1 authentication mode. Valid values: `md5`, `password`.
	AuthModeL1 *string `pulumi:"authModeL1"`
	// Level 2 authentication mode. Valid values: `md5`, `password`.
	AuthModeL2 *string `pulumi:"authModeL2"`
	// Authentication password for level 1 PDUs.
	AuthPasswordL1 *string `pulumi:"authPasswordL1"`
	// Authentication password for level 2 PDUs.
	AuthPasswordL2 *string `pulumi:"authPasswordL2"`
	// Enable/disable authentication send-only for level 1 PDUs. Valid values: `enable`, `disable`.
	AuthSendOnlyL1 *string `pulumi:"authSendOnlyL1"`
	// Enable/disable authentication send-only for level 2 PDUs. Valid values: `enable`, `disable`.
	AuthSendOnlyL2 *string `pulumi:"authSendOnlyL2"`
	// IS-IS interface's circuit type Valid values: `level-1-2`, `level-1`, `level-2`.
	CircuitType *string `pulumi:"circuitType"`
	// Level 1 CSNP interval.
	CsnpIntervalL1 *int `pulumi:"csnpIntervalL1"`
	// Level 2 CSNP interval.
	CsnpIntervalL2 *int `pulumi:"csnpIntervalL2"`
	// Level 1 hello interval.
	HelloIntervalL1 *int `pulumi:"helloIntervalL1"`
	// Level 2 hello interval.
	HelloIntervalL2 *int `pulumi:"helloIntervalL2"`
	// Level 1 multiplier for Hello holding time.
	HelloMultiplierL1 *int `pulumi:"helloMultiplierL1"`
	// Level 2 multiplier for Hello holding time.
	HelloMultiplierL2 *int `pulumi:"helloMultiplierL2"`
	// Enable/disable padding to IS-IS hello packets. Valid values: `enable`, `disable`.
	HelloPadding *string `pulumi:"helloPadding"`
	// LSP transmission interval (milliseconds).
	LspInterval *int `pulumi:"lspInterval"`
	// LSP retransmission interval (sec).
	LspRetransmitInterval *int `pulumi:"lspRetransmitInterval"`
	// Enable/disable IS-IS mesh group. Valid values: `enable`, `disable`.
	MeshGroup *string `pulumi:"meshGroup"`
	// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
	MeshGroupId *int `pulumi:"meshGroupId"`
	// Level 1 metric for interface.
	MetricL1 *int `pulumi:"metricL1"`
	// Level 2 metric for interface.
	MetricL2 *int `pulumi:"metricL2"`
	// IS-IS interface name.
	Name *string `pulumi:"name"`
	// IS-IS interface's network type Valid values: `broadcast`, `point-to-point`, `loopback`.
	NetworkType *string `pulumi:"networkType"`
	// Level 1 priority.
	PriorityL1 *int `pulumi:"priorityL1"`
	// Level 2 priority.
	PriorityL2 *int `pulumi:"priorityL2"`
	// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable IPv6 interface for IS-IS. Valid values: `enable`, `disable`.
	Status6 *string `pulumi:"status6"`
	// Level 1 wide metric for interface.
	WideMetricL1 *int `pulumi:"wideMetricL1"`
	// Level 2 wide metric for interface.
	WideMetricL2 *int `pulumi:"wideMetricL2"`
}

// RouterIsisIsisInterfaceInput is an input type that accepts RouterIsisIsisInterfaceArgs and RouterIsisIsisInterfaceOutput values.
// You can construct a concrete instance of `RouterIsisIsisInterfaceInput` via:
//
//	RouterIsisIsisInterfaceArgs{...}
type RouterIsisIsisInterfaceInput interface {
	pulumi.Input

	ToRouterIsisIsisInterfaceOutput() RouterIsisIsisInterfaceOutput
	ToRouterIsisIsisInterfaceOutputWithContext(context.Context) RouterIsisIsisInterfaceOutput
}

type RouterIsisIsisInterfaceArgs struct {
	// Authentication key-chain for level 1 PDUs.
	AuthKeychainL1 pulumi.StringPtrInput `pulumi:"authKeychainL1"`
	// Authentication key-chain for level 2 PDUs.
	AuthKeychainL2 pulumi.StringPtrInput `pulumi:"authKeychainL2"`
	// Level 1 authentication mode. Valid values: `md5`, `password`.
	AuthModeL1 pulumi.StringPtrInput `pulumi:"authModeL1"`
	// Level 2 authentication mode. Valid values: `md5`, `password`.
	AuthModeL2 pulumi.StringPtrInput `pulumi:"authModeL2"`
	// Authentication password for level 1 PDUs.
	AuthPasswordL1 pulumi.StringPtrInput `pulumi:"authPasswordL1"`
	// Authentication password for level 2 PDUs.
	AuthPasswordL2 pulumi.StringPtrInput `pulumi:"authPasswordL2"`
	// Enable/disable authentication send-only for level 1 PDUs. Valid values: `enable`, `disable`.
	AuthSendOnlyL1 pulumi.StringPtrInput `pulumi:"authSendOnlyL1"`
	// Enable/disable authentication send-only for level 2 PDUs. Valid values: `enable`, `disable`.
	AuthSendOnlyL2 pulumi.StringPtrInput `pulumi:"authSendOnlyL2"`
	// IS-IS interface's circuit type Valid values: `level-1-2`, `level-1`, `level-2`.
	CircuitType pulumi.StringPtrInput `pulumi:"circuitType"`
	// Level 1 CSNP interval.
	CsnpIntervalL1 pulumi.IntPtrInput `pulumi:"csnpIntervalL1"`
	// Level 2 CSNP interval.
	CsnpIntervalL2 pulumi.IntPtrInput `pulumi:"csnpIntervalL2"`
	// Level 1 hello interval.
	HelloIntervalL1 pulumi.IntPtrInput `pulumi:"helloIntervalL1"`
	// Level 2 hello interval.
	HelloIntervalL2 pulumi.IntPtrInput `pulumi:"helloIntervalL2"`
	// Level 1 multiplier for Hello holding time.
	HelloMultiplierL1 pulumi.IntPtrInput `pulumi:"helloMultiplierL1"`
	// Level 2 multiplier for Hello holding time.
	HelloMultiplierL2 pulumi.IntPtrInput `pulumi:"helloMultiplierL2"`
	// Enable/disable padding to IS-IS hello packets. Valid values: `enable`, `disable`.
	HelloPadding pulumi.StringPtrInput `pulumi:"helloPadding"`
	// LSP transmission interval (milliseconds).
	LspInterval pulumi.IntPtrInput `pulumi:"lspInterval"`
	// LSP retransmission interval (sec).
	LspRetransmitInterval pulumi.IntPtrInput `pulumi:"lspRetransmitInterval"`
	// Enable/disable IS-IS mesh group. Valid values: `enable`, `disable`.
	MeshGroup pulumi.StringPtrInput `pulumi:"meshGroup"`
	// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
	MeshGroupId pulumi.IntPtrInput `pulumi:"meshGroupId"`
	// Level 1 metric for interface.
	MetricL1 pulumi.IntPtrInput `pulumi:"metricL1"`
	// Level 2 metric for interface.
	MetricL2 pulumi.IntPtrInput `pulumi:"metricL2"`
	// IS-IS interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// IS-IS interface's network type Valid values: `broadcast`, `point-to-point`, `loopback`.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// Level 1 priority.
	PriorityL1 pulumi.IntPtrInput `pulumi:"priorityL1"`
	// Level 2 priority.
	PriorityL2 pulumi.IntPtrInput `pulumi:"priorityL2"`
	// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable IPv6 interface for IS-IS. Valid values: `enable`, `disable`.
	Status6 pulumi.StringPtrInput `pulumi:"status6"`
	// Level 1 wide metric for interface.
	WideMetricL1 pulumi.IntPtrInput `pulumi:"wideMetricL1"`
	// Level 2 wide metric for interface.
	WideMetricL2 pulumi.IntPtrInput `pulumi:"wideMetricL2"`
}

func (RouterIsisIsisInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisIsisInterface)(nil)).Elem()
}

func (i RouterIsisIsisInterfaceArgs) ToRouterIsisIsisInterfaceOutput() RouterIsisIsisInterfaceOutput {
	return i.ToRouterIsisIsisInterfaceOutputWithContext(context.Background())
}

func (i RouterIsisIsisInterfaceArgs) ToRouterIsisIsisInterfaceOutputWithContext(ctx context.Context) RouterIsisIsisInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisIsisInterfaceOutput)
}

// RouterIsisIsisInterfaceArrayInput is an input type that accepts RouterIsisIsisInterfaceArray and RouterIsisIsisInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterIsisIsisInterfaceArrayInput` via:
//
//	RouterIsisIsisInterfaceArray{ RouterIsisIsisInterfaceArgs{...} }
type RouterIsisIsisInterfaceArrayInput interface {
	pulumi.Input

	ToRouterIsisIsisInterfaceArrayOutput() RouterIsisIsisInterfaceArrayOutput
	ToRouterIsisIsisInterfaceArrayOutputWithContext(context.Context) RouterIsisIsisInterfaceArrayOutput
}

type RouterIsisIsisInterfaceArray []RouterIsisIsisInterfaceInput

func (RouterIsisIsisInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisIsisInterface)(nil)).Elem()
}

func (i RouterIsisIsisInterfaceArray) ToRouterIsisIsisInterfaceArrayOutput() RouterIsisIsisInterfaceArrayOutput {
	return i.ToRouterIsisIsisInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterIsisIsisInterfaceArray) ToRouterIsisIsisInterfaceArrayOutputWithContext(ctx context.Context) RouterIsisIsisInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisIsisInterfaceArrayOutput)
}

type RouterIsisIsisInterfaceOutput struct{ *pulumi.OutputState }

func (RouterIsisIsisInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisIsisInterface)(nil)).Elem()
}

func (o RouterIsisIsisInterfaceOutput) ToRouterIsisIsisInterfaceOutput() RouterIsisIsisInterfaceOutput {
	return o
}

func (o RouterIsisIsisInterfaceOutput) ToRouterIsisIsisInterfaceOutputWithContext(ctx context.Context) RouterIsisIsisInterfaceOutput {
	return o
}

// Authentication key-chain for level 1 PDUs.
func (o RouterIsisIsisInterfaceOutput) AuthKeychainL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthKeychainL1 }).(pulumi.StringPtrOutput)
}

// Authentication key-chain for level 2 PDUs.
func (o RouterIsisIsisInterfaceOutput) AuthKeychainL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthKeychainL2 }).(pulumi.StringPtrOutput)
}

// Level 1 authentication mode. Valid values: `md5`, `password`.
func (o RouterIsisIsisInterfaceOutput) AuthModeL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthModeL1 }).(pulumi.StringPtrOutput)
}

// Level 2 authentication mode. Valid values: `md5`, `password`.
func (o RouterIsisIsisInterfaceOutput) AuthModeL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthModeL2 }).(pulumi.StringPtrOutput)
}

// Authentication password for level 1 PDUs.
func (o RouterIsisIsisInterfaceOutput) AuthPasswordL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthPasswordL1 }).(pulumi.StringPtrOutput)
}

// Authentication password for level 2 PDUs.
func (o RouterIsisIsisInterfaceOutput) AuthPasswordL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthPasswordL2 }).(pulumi.StringPtrOutput)
}

// Enable/disable authentication send-only for level 1 PDUs. Valid values: `enable`, `disable`.
func (o RouterIsisIsisInterfaceOutput) AuthSendOnlyL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthSendOnlyL1 }).(pulumi.StringPtrOutput)
}

// Enable/disable authentication send-only for level 2 PDUs. Valid values: `enable`, `disable`.
func (o RouterIsisIsisInterfaceOutput) AuthSendOnlyL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthSendOnlyL2 }).(pulumi.StringPtrOutput)
}

// IS-IS interface's circuit type Valid values: `level-1-2`, `level-1`, `level-2`.
func (o RouterIsisIsisInterfaceOutput) CircuitType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.CircuitType }).(pulumi.StringPtrOutput)
}

// Level 1 CSNP interval.
func (o RouterIsisIsisInterfaceOutput) CsnpIntervalL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.CsnpIntervalL1 }).(pulumi.IntPtrOutput)
}

// Level 2 CSNP interval.
func (o RouterIsisIsisInterfaceOutput) CsnpIntervalL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.CsnpIntervalL2 }).(pulumi.IntPtrOutput)
}

// Level 1 hello interval.
func (o RouterIsisIsisInterfaceOutput) HelloIntervalL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.HelloIntervalL1 }).(pulumi.IntPtrOutput)
}

// Level 2 hello interval.
func (o RouterIsisIsisInterfaceOutput) HelloIntervalL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.HelloIntervalL2 }).(pulumi.IntPtrOutput)
}

// Level 1 multiplier for Hello holding time.
func (o RouterIsisIsisInterfaceOutput) HelloMultiplierL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.HelloMultiplierL1 }).(pulumi.IntPtrOutput)
}

// Level 2 multiplier for Hello holding time.
func (o RouterIsisIsisInterfaceOutput) HelloMultiplierL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.HelloMultiplierL2 }).(pulumi.IntPtrOutput)
}

// Enable/disable padding to IS-IS hello packets. Valid values: `enable`, `disable`.
func (o RouterIsisIsisInterfaceOutput) HelloPadding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.HelloPadding }).(pulumi.StringPtrOutput)
}

// LSP transmission interval (milliseconds).
func (o RouterIsisIsisInterfaceOutput) LspInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.LspInterval }).(pulumi.IntPtrOutput)
}

// LSP retransmission interval (sec).
func (o RouterIsisIsisInterfaceOutput) LspRetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.LspRetransmitInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable IS-IS mesh group. Valid values: `enable`, `disable`.
func (o RouterIsisIsisInterfaceOutput) MeshGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.MeshGroup }).(pulumi.StringPtrOutput)
}

// Mesh group ID <0-4294967295>, 0: mesh-group blocked.
func (o RouterIsisIsisInterfaceOutput) MeshGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.MeshGroupId }).(pulumi.IntPtrOutput)
}

// Level 1 metric for interface.
func (o RouterIsisIsisInterfaceOutput) MetricL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.MetricL1 }).(pulumi.IntPtrOutput)
}

// Level 2 metric for interface.
func (o RouterIsisIsisInterfaceOutput) MetricL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.MetricL2 }).(pulumi.IntPtrOutput)
}

// IS-IS interface name.
func (o RouterIsisIsisInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// IS-IS interface's network type Valid values: `broadcast`, `point-to-point`, `loopback`.
func (o RouterIsisIsisInterfaceOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// Level 1 priority.
func (o RouterIsisIsisInterfaceOutput) PriorityL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.PriorityL1 }).(pulumi.IntPtrOutput)
}

// Level 2 priority.
func (o RouterIsisIsisInterfaceOutput) PriorityL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.PriorityL2 }).(pulumi.IntPtrOutput)
}

// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
func (o RouterIsisIsisInterfaceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable IPv6 interface for IS-IS. Valid values: `enable`, `disable`.
func (o RouterIsisIsisInterfaceOutput) Status6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.Status6 }).(pulumi.StringPtrOutput)
}

// Level 1 wide metric for interface.
func (o RouterIsisIsisInterfaceOutput) WideMetricL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.WideMetricL1 }).(pulumi.IntPtrOutput)
}

// Level 2 wide metric for interface.
func (o RouterIsisIsisInterfaceOutput) WideMetricL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.WideMetricL2 }).(pulumi.IntPtrOutput)
}

type RouterIsisIsisInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisIsisInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisIsisInterface)(nil)).Elem()
}

func (o RouterIsisIsisInterfaceArrayOutput) ToRouterIsisIsisInterfaceArrayOutput() RouterIsisIsisInterfaceArrayOutput {
	return o
}

func (o RouterIsisIsisInterfaceArrayOutput) ToRouterIsisIsisInterfaceArrayOutputWithContext(ctx context.Context) RouterIsisIsisInterfaceArrayOutput {
	return o
}

func (o RouterIsisIsisInterfaceArrayOutput) Index(i pulumi.IntInput) RouterIsisIsisInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisIsisInterface {
		return vs[0].([]RouterIsisIsisInterface)[vs[1].(int)]
	}).(RouterIsisIsisInterfaceOutput)
}

type RouterIsisIsisNet struct {
	// isis-net ID.
	Id *int `pulumi:"id"`
	// IS-IS net xx.xxxx. ... .xxxx.xx.
	Net *string `pulumi:"net"`
}

// RouterIsisIsisNetInput is an input type that accepts RouterIsisIsisNetArgs and RouterIsisIsisNetOutput values.
// You can construct a concrete instance of `RouterIsisIsisNetInput` via:
//
//	RouterIsisIsisNetArgs{...}
type RouterIsisIsisNetInput interface {
	pulumi.Input

	ToRouterIsisIsisNetOutput() RouterIsisIsisNetOutput
	ToRouterIsisIsisNetOutputWithContext(context.Context) RouterIsisIsisNetOutput
}

type RouterIsisIsisNetArgs struct {
	// isis-net ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IS-IS net xx.xxxx. ... .xxxx.xx.
	Net pulumi.StringPtrInput `pulumi:"net"`
}

func (RouterIsisIsisNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisIsisNet)(nil)).Elem()
}

func (i RouterIsisIsisNetArgs) ToRouterIsisIsisNetOutput() RouterIsisIsisNetOutput {
	return i.ToRouterIsisIsisNetOutputWithContext(context.Background())
}

func (i RouterIsisIsisNetArgs) ToRouterIsisIsisNetOutputWithContext(ctx context.Context) RouterIsisIsisNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisIsisNetOutput)
}

// RouterIsisIsisNetArrayInput is an input type that accepts RouterIsisIsisNetArray and RouterIsisIsisNetArrayOutput values.
// You can construct a concrete instance of `RouterIsisIsisNetArrayInput` via:
//
//	RouterIsisIsisNetArray{ RouterIsisIsisNetArgs{...} }
type RouterIsisIsisNetArrayInput interface {
	pulumi.Input

	ToRouterIsisIsisNetArrayOutput() RouterIsisIsisNetArrayOutput
	ToRouterIsisIsisNetArrayOutputWithContext(context.Context) RouterIsisIsisNetArrayOutput
}

type RouterIsisIsisNetArray []RouterIsisIsisNetInput

func (RouterIsisIsisNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisIsisNet)(nil)).Elem()
}

func (i RouterIsisIsisNetArray) ToRouterIsisIsisNetArrayOutput() RouterIsisIsisNetArrayOutput {
	return i.ToRouterIsisIsisNetArrayOutputWithContext(context.Background())
}

func (i RouterIsisIsisNetArray) ToRouterIsisIsisNetArrayOutputWithContext(ctx context.Context) RouterIsisIsisNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisIsisNetArrayOutput)
}

type RouterIsisIsisNetOutput struct{ *pulumi.OutputState }

func (RouterIsisIsisNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisIsisNet)(nil)).Elem()
}

func (o RouterIsisIsisNetOutput) ToRouterIsisIsisNetOutput() RouterIsisIsisNetOutput {
	return o
}

func (o RouterIsisIsisNetOutput) ToRouterIsisIsisNetOutputWithContext(ctx context.Context) RouterIsisIsisNetOutput {
	return o
}

// isis-net ID.
func (o RouterIsisIsisNetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisNet) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IS-IS net xx.xxxx. ... .xxxx.xx.
func (o RouterIsisIsisNetOutput) Net() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisNet) *string { return v.Net }).(pulumi.StringPtrOutput)
}

type RouterIsisIsisNetArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisIsisNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisIsisNet)(nil)).Elem()
}

func (o RouterIsisIsisNetArrayOutput) ToRouterIsisIsisNetArrayOutput() RouterIsisIsisNetArrayOutput {
	return o
}

func (o RouterIsisIsisNetArrayOutput) ToRouterIsisIsisNetArrayOutputWithContext(ctx context.Context) RouterIsisIsisNetArrayOutput {
	return o
}

func (o RouterIsisIsisNetArrayOutput) Index(i pulumi.IntInput) RouterIsisIsisNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisIsisNet {
		return vs[0].([]RouterIsisIsisNet)[vs[1].(int)]
	}).(RouterIsisIsisNetOutput)
}

type RouterIsisRedistribute6 struct {
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	//
	// The `summaryAddress6` block supports:
	Level *string `pulumi:"level"`
	// Metric.
	Metric *int `pulumi:"metric"`
	// Metric type. Valid values: `external`, `internal`.
	MetricType *string `pulumi:"metricType"`
	// Protocol name.
	Protocol *string `pulumi:"protocol"`
	// Route map name.
	//
	// The `redistribute6` block supports:
	Routemap *string `pulumi:"routemap"`
	// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterIsisRedistribute6Input is an input type that accepts RouterIsisRedistribute6Args and RouterIsisRedistribute6Output values.
// You can construct a concrete instance of `RouterIsisRedistribute6Input` via:
//
//	RouterIsisRedistribute6Args{...}
type RouterIsisRedistribute6Input interface {
	pulumi.Input

	ToRouterIsisRedistribute6Output() RouterIsisRedistribute6Output
	ToRouterIsisRedistribute6OutputWithContext(context.Context) RouterIsisRedistribute6Output
}

type RouterIsisRedistribute6Args struct {
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	//
	// The `summaryAddress6` block supports:
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Metric.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Metric type. Valid values: `external`, `internal`.
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	// Protocol name.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Route map name.
	//
	// The `redistribute6` block supports:
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterIsisRedistribute6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisRedistribute6)(nil)).Elem()
}

func (i RouterIsisRedistribute6Args) ToRouterIsisRedistribute6Output() RouterIsisRedistribute6Output {
	return i.ToRouterIsisRedistribute6OutputWithContext(context.Background())
}

func (i RouterIsisRedistribute6Args) ToRouterIsisRedistribute6OutputWithContext(ctx context.Context) RouterIsisRedistribute6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisRedistribute6Output)
}

// RouterIsisRedistribute6ArrayInput is an input type that accepts RouterIsisRedistribute6Array and RouterIsisRedistribute6ArrayOutput values.
// You can construct a concrete instance of `RouterIsisRedistribute6ArrayInput` via:
//
//	RouterIsisRedistribute6Array{ RouterIsisRedistribute6Args{...} }
type RouterIsisRedistribute6ArrayInput interface {
	pulumi.Input

	ToRouterIsisRedistribute6ArrayOutput() RouterIsisRedistribute6ArrayOutput
	ToRouterIsisRedistribute6ArrayOutputWithContext(context.Context) RouterIsisRedistribute6ArrayOutput
}

type RouterIsisRedistribute6Array []RouterIsisRedistribute6Input

func (RouterIsisRedistribute6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisRedistribute6)(nil)).Elem()
}

func (i RouterIsisRedistribute6Array) ToRouterIsisRedistribute6ArrayOutput() RouterIsisRedistribute6ArrayOutput {
	return i.ToRouterIsisRedistribute6ArrayOutputWithContext(context.Background())
}

func (i RouterIsisRedistribute6Array) ToRouterIsisRedistribute6ArrayOutputWithContext(ctx context.Context) RouterIsisRedistribute6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisRedistribute6ArrayOutput)
}

type RouterIsisRedistribute6Output struct{ *pulumi.OutputState }

func (RouterIsisRedistribute6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisRedistribute6)(nil)).Elem()
}

func (o RouterIsisRedistribute6Output) ToRouterIsisRedistribute6Output() RouterIsisRedistribute6Output {
	return o
}

func (o RouterIsisRedistribute6Output) ToRouterIsisRedistribute6OutputWithContext(ctx context.Context) RouterIsisRedistribute6Output {
	return o
}

// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
//
// The `summaryAddress6` block supports:
func (o RouterIsisRedistribute6Output) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Metric.
func (o RouterIsisRedistribute6Output) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Metric type. Valid values: `external`, `internal`.
func (o RouterIsisRedistribute6Output) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

// Protocol name.
func (o RouterIsisRedistribute6Output) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Route map name.
//
// The `redistribute6` block supports:
func (o RouterIsisRedistribute6Output) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// Enable/disable interface for IS-IS. Valid values: `enable`, `disable`.
func (o RouterIsisRedistribute6Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterIsisRedistribute6ArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisRedistribute6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisRedistribute6)(nil)).Elem()
}

func (o RouterIsisRedistribute6ArrayOutput) ToRouterIsisRedistribute6ArrayOutput() RouterIsisRedistribute6ArrayOutput {
	return o
}

func (o RouterIsisRedistribute6ArrayOutput) ToRouterIsisRedistribute6ArrayOutputWithContext(ctx context.Context) RouterIsisRedistribute6ArrayOutput {
	return o
}

func (o RouterIsisRedistribute6ArrayOutput) Index(i pulumi.IntInput) RouterIsisRedistribute6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisRedistribute6 {
		return vs[0].([]RouterIsisRedistribute6)[vs[1].(int)]
	}).(RouterIsisRedistribute6Output)
}

type RouterIsisRedistribute struct {
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level *string `pulumi:"level"`
	// Metric.
	Metric *int `pulumi:"metric"`
	// Metric type. Valid values: `external`, `internal`.
	MetricType *string `pulumi:"metricType"`
	// Protocol name.
	Protocol *string `pulumi:"protocol"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// Enable/disable redistribution. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterIsisRedistributeInput is an input type that accepts RouterIsisRedistributeArgs and RouterIsisRedistributeOutput values.
// You can construct a concrete instance of `RouterIsisRedistributeInput` via:
//
//	RouterIsisRedistributeArgs{...}
type RouterIsisRedistributeInput interface {
	pulumi.Input

	ToRouterIsisRedistributeOutput() RouterIsisRedistributeOutput
	ToRouterIsisRedistributeOutputWithContext(context.Context) RouterIsisRedistributeOutput
}

type RouterIsisRedistributeArgs struct {
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Metric.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Metric type. Valid values: `external`, `internal`.
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	// Protocol name.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// Enable/disable redistribution. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterIsisRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisRedistribute)(nil)).Elem()
}

func (i RouterIsisRedistributeArgs) ToRouterIsisRedistributeOutput() RouterIsisRedistributeOutput {
	return i.ToRouterIsisRedistributeOutputWithContext(context.Background())
}

func (i RouterIsisRedistributeArgs) ToRouterIsisRedistributeOutputWithContext(ctx context.Context) RouterIsisRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisRedistributeOutput)
}

// RouterIsisRedistributeArrayInput is an input type that accepts RouterIsisRedistributeArray and RouterIsisRedistributeArrayOutput values.
// You can construct a concrete instance of `RouterIsisRedistributeArrayInput` via:
//
//	RouterIsisRedistributeArray{ RouterIsisRedistributeArgs{...} }
type RouterIsisRedistributeArrayInput interface {
	pulumi.Input

	ToRouterIsisRedistributeArrayOutput() RouterIsisRedistributeArrayOutput
	ToRouterIsisRedistributeArrayOutputWithContext(context.Context) RouterIsisRedistributeArrayOutput
}

type RouterIsisRedistributeArray []RouterIsisRedistributeInput

func (RouterIsisRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisRedistribute)(nil)).Elem()
}

func (i RouterIsisRedistributeArray) ToRouterIsisRedistributeArrayOutput() RouterIsisRedistributeArrayOutput {
	return i.ToRouterIsisRedistributeArrayOutputWithContext(context.Background())
}

func (i RouterIsisRedistributeArray) ToRouterIsisRedistributeArrayOutputWithContext(ctx context.Context) RouterIsisRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisRedistributeArrayOutput)
}

type RouterIsisRedistributeOutput struct{ *pulumi.OutputState }

func (RouterIsisRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisRedistribute)(nil)).Elem()
}

func (o RouterIsisRedistributeOutput) ToRouterIsisRedistributeOutput() RouterIsisRedistributeOutput {
	return o
}

func (o RouterIsisRedistributeOutput) ToRouterIsisRedistributeOutputWithContext(ctx context.Context) RouterIsisRedistributeOutput {
	return o
}

// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
func (o RouterIsisRedistributeOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Metric.
func (o RouterIsisRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Metric type. Valid values: `external`, `internal`.
func (o RouterIsisRedistributeOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

// Protocol name.
func (o RouterIsisRedistributeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o RouterIsisRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// Enable/disable redistribution. Valid values: `enable`, `disable`.
func (o RouterIsisRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterIsisRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisRedistribute)(nil)).Elem()
}

func (o RouterIsisRedistributeArrayOutput) ToRouterIsisRedistributeArrayOutput() RouterIsisRedistributeArrayOutput {
	return o
}

func (o RouterIsisRedistributeArrayOutput) ToRouterIsisRedistributeArrayOutputWithContext(ctx context.Context) RouterIsisRedistributeArrayOutput {
	return o
}

func (o RouterIsisRedistributeArrayOutput) Index(i pulumi.IntInput) RouterIsisRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisRedistribute {
		return vs[0].([]RouterIsisRedistribute)[vs[1].(int)]
	}).(RouterIsisRedistributeOutput)
}

type RouterIsisSummaryAddress6 struct {
	// isis-net ID.
	Id *int `pulumi:"id"`
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	//
	// The `summaryAddress6` block supports:
	Level *string `pulumi:"level"`
	// IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
}

// RouterIsisSummaryAddress6Input is an input type that accepts RouterIsisSummaryAddress6Args and RouterIsisSummaryAddress6Output values.
// You can construct a concrete instance of `RouterIsisSummaryAddress6Input` via:
//
//	RouterIsisSummaryAddress6Args{...}
type RouterIsisSummaryAddress6Input interface {
	pulumi.Input

	ToRouterIsisSummaryAddress6Output() RouterIsisSummaryAddress6Output
	ToRouterIsisSummaryAddress6OutputWithContext(context.Context) RouterIsisSummaryAddress6Output
}

type RouterIsisSummaryAddress6Args struct {
	// isis-net ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	//
	// The `summaryAddress6` block supports:
	Level pulumi.StringPtrInput `pulumi:"level"`
	// IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterIsisSummaryAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisSummaryAddress6)(nil)).Elem()
}

func (i RouterIsisSummaryAddress6Args) ToRouterIsisSummaryAddress6Output() RouterIsisSummaryAddress6Output {
	return i.ToRouterIsisSummaryAddress6OutputWithContext(context.Background())
}

func (i RouterIsisSummaryAddress6Args) ToRouterIsisSummaryAddress6OutputWithContext(ctx context.Context) RouterIsisSummaryAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisSummaryAddress6Output)
}

// RouterIsisSummaryAddress6ArrayInput is an input type that accepts RouterIsisSummaryAddress6Array and RouterIsisSummaryAddress6ArrayOutput values.
// You can construct a concrete instance of `RouterIsisSummaryAddress6ArrayInput` via:
//
//	RouterIsisSummaryAddress6Array{ RouterIsisSummaryAddress6Args{...} }
type RouterIsisSummaryAddress6ArrayInput interface {
	pulumi.Input

	ToRouterIsisSummaryAddress6ArrayOutput() RouterIsisSummaryAddress6ArrayOutput
	ToRouterIsisSummaryAddress6ArrayOutputWithContext(context.Context) RouterIsisSummaryAddress6ArrayOutput
}

type RouterIsisSummaryAddress6Array []RouterIsisSummaryAddress6Input

func (RouterIsisSummaryAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisSummaryAddress6)(nil)).Elem()
}

func (i RouterIsisSummaryAddress6Array) ToRouterIsisSummaryAddress6ArrayOutput() RouterIsisSummaryAddress6ArrayOutput {
	return i.ToRouterIsisSummaryAddress6ArrayOutputWithContext(context.Background())
}

func (i RouterIsisSummaryAddress6Array) ToRouterIsisSummaryAddress6ArrayOutputWithContext(ctx context.Context) RouterIsisSummaryAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisSummaryAddress6ArrayOutput)
}

type RouterIsisSummaryAddress6Output struct{ *pulumi.OutputState }

func (RouterIsisSummaryAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisSummaryAddress6)(nil)).Elem()
}

func (o RouterIsisSummaryAddress6Output) ToRouterIsisSummaryAddress6Output() RouterIsisSummaryAddress6Output {
	return o
}

func (o RouterIsisSummaryAddress6Output) ToRouterIsisSummaryAddress6OutputWithContext(ctx context.Context) RouterIsisSummaryAddress6Output {
	return o
}

// isis-net ID.
func (o RouterIsisSummaryAddress6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
//
// The `summaryAddress6` block supports:
func (o RouterIsisSummaryAddress6Output) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress6) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// IPv6 prefix.
func (o RouterIsisSummaryAddress6Output) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress6) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterIsisSummaryAddress6ArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisSummaryAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisSummaryAddress6)(nil)).Elem()
}

func (o RouterIsisSummaryAddress6ArrayOutput) ToRouterIsisSummaryAddress6ArrayOutput() RouterIsisSummaryAddress6ArrayOutput {
	return o
}

func (o RouterIsisSummaryAddress6ArrayOutput) ToRouterIsisSummaryAddress6ArrayOutputWithContext(ctx context.Context) RouterIsisSummaryAddress6ArrayOutput {
	return o
}

func (o RouterIsisSummaryAddress6ArrayOutput) Index(i pulumi.IntInput) RouterIsisSummaryAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisSummaryAddress6 {
		return vs[0].([]RouterIsisSummaryAddress6)[vs[1].(int)]
	}).(RouterIsisSummaryAddress6Output)
}

type RouterIsisSummaryAddress struct {
	// Prefix entry ID.
	Id *int `pulumi:"id"`
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level *string `pulumi:"level"`
	// Prefix.
	Prefix *string `pulumi:"prefix"`
}

// RouterIsisSummaryAddressInput is an input type that accepts RouterIsisSummaryAddressArgs and RouterIsisSummaryAddressOutput values.
// You can construct a concrete instance of `RouterIsisSummaryAddressInput` via:
//
//	RouterIsisSummaryAddressArgs{...}
type RouterIsisSummaryAddressInput interface {
	pulumi.Input

	ToRouterIsisSummaryAddressOutput() RouterIsisSummaryAddressOutput
	ToRouterIsisSummaryAddressOutputWithContext(context.Context) RouterIsisSummaryAddressOutput
}

type RouterIsisSummaryAddressArgs struct {
	// Prefix entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterIsisSummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisSummaryAddress)(nil)).Elem()
}

func (i RouterIsisSummaryAddressArgs) ToRouterIsisSummaryAddressOutput() RouterIsisSummaryAddressOutput {
	return i.ToRouterIsisSummaryAddressOutputWithContext(context.Background())
}

func (i RouterIsisSummaryAddressArgs) ToRouterIsisSummaryAddressOutputWithContext(ctx context.Context) RouterIsisSummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisSummaryAddressOutput)
}

// RouterIsisSummaryAddressArrayInput is an input type that accepts RouterIsisSummaryAddressArray and RouterIsisSummaryAddressArrayOutput values.
// You can construct a concrete instance of `RouterIsisSummaryAddressArrayInput` via:
//
//	RouterIsisSummaryAddressArray{ RouterIsisSummaryAddressArgs{...} }
type RouterIsisSummaryAddressArrayInput interface {
	pulumi.Input

	ToRouterIsisSummaryAddressArrayOutput() RouterIsisSummaryAddressArrayOutput
	ToRouterIsisSummaryAddressArrayOutputWithContext(context.Context) RouterIsisSummaryAddressArrayOutput
}

type RouterIsisSummaryAddressArray []RouterIsisSummaryAddressInput

func (RouterIsisSummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisSummaryAddress)(nil)).Elem()
}

func (i RouterIsisSummaryAddressArray) ToRouterIsisSummaryAddressArrayOutput() RouterIsisSummaryAddressArrayOutput {
	return i.ToRouterIsisSummaryAddressArrayOutputWithContext(context.Background())
}

func (i RouterIsisSummaryAddressArray) ToRouterIsisSummaryAddressArrayOutputWithContext(ctx context.Context) RouterIsisSummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisSummaryAddressArrayOutput)
}

type RouterIsisSummaryAddressOutput struct{ *pulumi.OutputState }

func (RouterIsisSummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisSummaryAddress)(nil)).Elem()
}

func (o RouterIsisSummaryAddressOutput) ToRouterIsisSummaryAddressOutput() RouterIsisSummaryAddressOutput {
	return o
}

func (o RouterIsisSummaryAddressOutput) ToRouterIsisSummaryAddressOutputWithContext(ctx context.Context) RouterIsisSummaryAddressOutput {
	return o
}

// Prefix entry ID.
func (o RouterIsisSummaryAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Level. Valid values: `level-1-2`, `level-1`, `level-2`.
func (o RouterIsisSummaryAddressOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Prefix.
func (o RouterIsisSummaryAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterIsisSummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisSummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisSummaryAddress)(nil)).Elem()
}

func (o RouterIsisSummaryAddressArrayOutput) ToRouterIsisSummaryAddressArrayOutput() RouterIsisSummaryAddressArrayOutput {
	return o
}

func (o RouterIsisSummaryAddressArrayOutput) ToRouterIsisSummaryAddressArrayOutputWithContext(ctx context.Context) RouterIsisSummaryAddressArrayOutput {
	return o
}

func (o RouterIsisSummaryAddressArrayOutput) Index(i pulumi.IntInput) RouterIsisSummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisSummaryAddress {
		return vs[0].([]RouterIsisSummaryAddress)[vs[1].(int)]
	}).(RouterIsisSummaryAddressOutput)
}

type RouterKeychainKey struct {
	// Lifetime of received authentication key (format: hh:mm:ss day month year).
	AcceptLifetime *string `pulumi:"acceptLifetime"`
	// Cryptographic algorithm. Valid values: `md5`, `hmac-sha1`, `hmac-sha256`, `hmac-sha384`, `hmac-sha512`.
	Algorithm *string `pulumi:"algorithm"`
	// Key ID (0 - 2147483647).
	Id *int `pulumi:"id"`
	// Password for the key (max. = 35 characters).
	KeyString *string `pulumi:"keyString"`
	// Lifetime of sent authentication key (format: hh:mm:ss day month year).
	SendLifetime *string `pulumi:"sendLifetime"`
}

// RouterKeychainKeyInput is an input type that accepts RouterKeychainKeyArgs and RouterKeychainKeyOutput values.
// You can construct a concrete instance of `RouterKeychainKeyInput` via:
//
//	RouterKeychainKeyArgs{...}
type RouterKeychainKeyInput interface {
	pulumi.Input

	ToRouterKeychainKeyOutput() RouterKeychainKeyOutput
	ToRouterKeychainKeyOutputWithContext(context.Context) RouterKeychainKeyOutput
}

type RouterKeychainKeyArgs struct {
	// Lifetime of received authentication key (format: hh:mm:ss day month year).
	AcceptLifetime pulumi.StringPtrInput `pulumi:"acceptLifetime"`
	// Cryptographic algorithm. Valid values: `md5`, `hmac-sha1`, `hmac-sha256`, `hmac-sha384`, `hmac-sha512`.
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// Key ID (0 - 2147483647).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Password for the key (max. = 35 characters).
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
	// Lifetime of sent authentication key (format: hh:mm:ss day month year).
	SendLifetime pulumi.StringPtrInput `pulumi:"sendLifetime"`
}

func (RouterKeychainKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterKeychainKey)(nil)).Elem()
}

func (i RouterKeychainKeyArgs) ToRouterKeychainKeyOutput() RouterKeychainKeyOutput {
	return i.ToRouterKeychainKeyOutputWithContext(context.Background())
}

func (i RouterKeychainKeyArgs) ToRouterKeychainKeyOutputWithContext(ctx context.Context) RouterKeychainKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterKeychainKeyOutput)
}

// RouterKeychainKeyArrayInput is an input type that accepts RouterKeychainKeyArray and RouterKeychainKeyArrayOutput values.
// You can construct a concrete instance of `RouterKeychainKeyArrayInput` via:
//
//	RouterKeychainKeyArray{ RouterKeychainKeyArgs{...} }
type RouterKeychainKeyArrayInput interface {
	pulumi.Input

	ToRouterKeychainKeyArrayOutput() RouterKeychainKeyArrayOutput
	ToRouterKeychainKeyArrayOutputWithContext(context.Context) RouterKeychainKeyArrayOutput
}

type RouterKeychainKeyArray []RouterKeychainKeyInput

func (RouterKeychainKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterKeychainKey)(nil)).Elem()
}

func (i RouterKeychainKeyArray) ToRouterKeychainKeyArrayOutput() RouterKeychainKeyArrayOutput {
	return i.ToRouterKeychainKeyArrayOutputWithContext(context.Background())
}

func (i RouterKeychainKeyArray) ToRouterKeychainKeyArrayOutputWithContext(ctx context.Context) RouterKeychainKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterKeychainKeyArrayOutput)
}

type RouterKeychainKeyOutput struct{ *pulumi.OutputState }

func (RouterKeychainKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterKeychainKey)(nil)).Elem()
}

func (o RouterKeychainKeyOutput) ToRouterKeychainKeyOutput() RouterKeychainKeyOutput {
	return o
}

func (o RouterKeychainKeyOutput) ToRouterKeychainKeyOutputWithContext(ctx context.Context) RouterKeychainKeyOutput {
	return o
}

// Lifetime of received authentication key (format: hh:mm:ss day month year).
func (o RouterKeychainKeyOutput) AcceptLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterKeychainKey) *string { return v.AcceptLifetime }).(pulumi.StringPtrOutput)
}

// Cryptographic algorithm. Valid values: `md5`, `hmac-sha1`, `hmac-sha256`, `hmac-sha384`, `hmac-sha512`.
func (o RouterKeychainKeyOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterKeychainKey) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// Key ID (0 - 2147483647).
func (o RouterKeychainKeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterKeychainKey) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Password for the key (max. = 35 characters).
func (o RouterKeychainKeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterKeychainKey) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

// Lifetime of sent authentication key (format: hh:mm:ss day month year).
func (o RouterKeychainKeyOutput) SendLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterKeychainKey) *string { return v.SendLifetime }).(pulumi.StringPtrOutput)
}

type RouterKeychainKeyArrayOutput struct{ *pulumi.OutputState }

func (RouterKeychainKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterKeychainKey)(nil)).Elem()
}

func (o RouterKeychainKeyArrayOutput) ToRouterKeychainKeyArrayOutput() RouterKeychainKeyArrayOutput {
	return o
}

func (o RouterKeychainKeyArrayOutput) ToRouterKeychainKeyArrayOutputWithContext(ctx context.Context) RouterKeychainKeyArrayOutput {
	return o
}

func (o RouterKeychainKeyArrayOutput) Index(i pulumi.IntInput) RouterKeychainKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterKeychainKey {
		return vs[0].([]RouterKeychainKey)[vs[1].(int)]
	}).(RouterKeychainKeyOutput)
}

type RouterMulticast6Interface struct {
	// Time before old neighbour information expires (1 - 65535 sec, default = 105).
	HelloHoldtime *int `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..
	HelloInterval *int `pulumi:"helloInterval"`
	// Interface name.
	Name *string `pulumi:"name"`
}

// RouterMulticast6InterfaceInput is an input type that accepts RouterMulticast6InterfaceArgs and RouterMulticast6InterfaceOutput values.
// You can construct a concrete instance of `RouterMulticast6InterfaceInput` via:
//
//	RouterMulticast6InterfaceArgs{...}
type RouterMulticast6InterfaceInput interface {
	pulumi.Input

	ToRouterMulticast6InterfaceOutput() RouterMulticast6InterfaceOutput
	ToRouterMulticast6InterfaceOutputWithContext(context.Context) RouterMulticast6InterfaceOutput
}

type RouterMulticast6InterfaceArgs struct {
	// Time before old neighbour information expires (1 - 65535 sec, default = 105).
	HelloHoldtime pulumi.IntPtrInput `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterMulticast6InterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6Interface)(nil)).Elem()
}

func (i RouterMulticast6InterfaceArgs) ToRouterMulticast6InterfaceOutput() RouterMulticast6InterfaceOutput {
	return i.ToRouterMulticast6InterfaceOutputWithContext(context.Background())
}

func (i RouterMulticast6InterfaceArgs) ToRouterMulticast6InterfaceOutputWithContext(ctx context.Context) RouterMulticast6InterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6InterfaceOutput)
}

// RouterMulticast6InterfaceArrayInput is an input type that accepts RouterMulticast6InterfaceArray and RouterMulticast6InterfaceArrayOutput values.
// You can construct a concrete instance of `RouterMulticast6InterfaceArrayInput` via:
//
//	RouterMulticast6InterfaceArray{ RouterMulticast6InterfaceArgs{...} }
type RouterMulticast6InterfaceArrayInput interface {
	pulumi.Input

	ToRouterMulticast6InterfaceArrayOutput() RouterMulticast6InterfaceArrayOutput
	ToRouterMulticast6InterfaceArrayOutputWithContext(context.Context) RouterMulticast6InterfaceArrayOutput
}

type RouterMulticast6InterfaceArray []RouterMulticast6InterfaceInput

func (RouterMulticast6InterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticast6Interface)(nil)).Elem()
}

func (i RouterMulticast6InterfaceArray) ToRouterMulticast6InterfaceArrayOutput() RouterMulticast6InterfaceArrayOutput {
	return i.ToRouterMulticast6InterfaceArrayOutputWithContext(context.Background())
}

func (i RouterMulticast6InterfaceArray) ToRouterMulticast6InterfaceArrayOutputWithContext(ctx context.Context) RouterMulticast6InterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6InterfaceArrayOutput)
}

type RouterMulticast6InterfaceOutput struct{ *pulumi.OutputState }

func (RouterMulticast6InterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6Interface)(nil)).Elem()
}

func (o RouterMulticast6InterfaceOutput) ToRouterMulticast6InterfaceOutput() RouterMulticast6InterfaceOutput {
	return o
}

func (o RouterMulticast6InterfaceOutput) ToRouterMulticast6InterfaceOutputWithContext(ctx context.Context) RouterMulticast6InterfaceOutput {
	return o
}

// Time before old neighbour information expires (1 - 65535 sec, default = 105).
func (o RouterMulticast6InterfaceOutput) HelloHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticast6Interface) *int { return v.HelloHoldtime }).(pulumi.IntPtrOutput)
}

// Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..
func (o RouterMulticast6InterfaceOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticast6Interface) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RouterMulticast6InterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticast6Interface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterMulticast6InterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticast6InterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticast6Interface)(nil)).Elem()
}

func (o RouterMulticast6InterfaceArrayOutput) ToRouterMulticast6InterfaceArrayOutput() RouterMulticast6InterfaceArrayOutput {
	return o
}

func (o RouterMulticast6InterfaceArrayOutput) ToRouterMulticast6InterfaceArrayOutputWithContext(ctx context.Context) RouterMulticast6InterfaceArrayOutput {
	return o
}

func (o RouterMulticast6InterfaceArrayOutput) Index(i pulumi.IntInput) RouterMulticast6InterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticast6Interface {
		return vs[0].([]RouterMulticast6Interface)[vs[1].(int)]
	}).(RouterMulticast6InterfaceOutput)
}

type RouterMulticast6PimSmGlobal struct {
	// Limit of packets/sec per source registered through this RP (0 means unlimited).
	RegisterRateLimit *int `pulumi:"registerRateLimit"`
	// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses []RouterMulticast6PimSmGlobalRpAddress `pulumi:"rpAddresses"`
}

// RouterMulticast6PimSmGlobalInput is an input type that accepts RouterMulticast6PimSmGlobalArgs and RouterMulticast6PimSmGlobalOutput values.
// You can construct a concrete instance of `RouterMulticast6PimSmGlobalInput` via:
//
//	RouterMulticast6PimSmGlobalArgs{...}
type RouterMulticast6PimSmGlobalInput interface {
	pulumi.Input

	ToRouterMulticast6PimSmGlobalOutput() RouterMulticast6PimSmGlobalOutput
	ToRouterMulticast6PimSmGlobalOutputWithContext(context.Context) RouterMulticast6PimSmGlobalOutput
}

type RouterMulticast6PimSmGlobalArgs struct {
	// Limit of packets/sec per source registered through this RP (0 means unlimited).
	RegisterRateLimit pulumi.IntPtrInput `pulumi:"registerRateLimit"`
	// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses RouterMulticast6PimSmGlobalRpAddressArrayInput `pulumi:"rpAddresses"`
}

func (RouterMulticast6PimSmGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (i RouterMulticast6PimSmGlobalArgs) ToRouterMulticast6PimSmGlobalOutput() RouterMulticast6PimSmGlobalOutput {
	return i.ToRouterMulticast6PimSmGlobalOutputWithContext(context.Background())
}

func (i RouterMulticast6PimSmGlobalArgs) ToRouterMulticast6PimSmGlobalOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6PimSmGlobalOutput)
}

func (i RouterMulticast6PimSmGlobalArgs) ToRouterMulticast6PimSmGlobalPtrOutput() RouterMulticast6PimSmGlobalPtrOutput {
	return i.ToRouterMulticast6PimSmGlobalPtrOutputWithContext(context.Background())
}

func (i RouterMulticast6PimSmGlobalArgs) ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6PimSmGlobalOutput).ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx)
}

// RouterMulticast6PimSmGlobalPtrInput is an input type that accepts RouterMulticast6PimSmGlobalArgs, RouterMulticast6PimSmGlobalPtr and RouterMulticast6PimSmGlobalPtrOutput values.
// You can construct a concrete instance of `RouterMulticast6PimSmGlobalPtrInput` via:
//
//	        RouterMulticast6PimSmGlobalArgs{...}
//
//	or:
//
//	        nil
type RouterMulticast6PimSmGlobalPtrInput interface {
	pulumi.Input

	ToRouterMulticast6PimSmGlobalPtrOutput() RouterMulticast6PimSmGlobalPtrOutput
	ToRouterMulticast6PimSmGlobalPtrOutputWithContext(context.Context) RouterMulticast6PimSmGlobalPtrOutput
}

type routerMulticast6PimSmGlobalPtrType RouterMulticast6PimSmGlobalArgs

func RouterMulticast6PimSmGlobalPtr(v *RouterMulticast6PimSmGlobalArgs) RouterMulticast6PimSmGlobalPtrInput {
	return (*routerMulticast6PimSmGlobalPtrType)(v)
}

func (*routerMulticast6PimSmGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (i *routerMulticast6PimSmGlobalPtrType) ToRouterMulticast6PimSmGlobalPtrOutput() RouterMulticast6PimSmGlobalPtrOutput {
	return i.ToRouterMulticast6PimSmGlobalPtrOutputWithContext(context.Background())
}

func (i *routerMulticast6PimSmGlobalPtrType) ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6PimSmGlobalPtrOutput)
}

type RouterMulticast6PimSmGlobalOutput struct{ *pulumi.OutputState }

func (RouterMulticast6PimSmGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (o RouterMulticast6PimSmGlobalOutput) ToRouterMulticast6PimSmGlobalOutput() RouterMulticast6PimSmGlobalOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalOutput) ToRouterMulticast6PimSmGlobalOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalOutput) ToRouterMulticast6PimSmGlobalPtrOutput() RouterMulticast6PimSmGlobalPtrOutput {
	return o.ToRouterMulticast6PimSmGlobalPtrOutputWithContext(context.Background())
}

func (o RouterMulticast6PimSmGlobalOutput) ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterMulticast6PimSmGlobal) *RouterMulticast6PimSmGlobal {
		return &v
	}).(RouterMulticast6PimSmGlobalPtrOutput)
}

// Limit of packets/sec per source registered through this RP (0 means unlimited).
func (o RouterMulticast6PimSmGlobalOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticast6PimSmGlobal) *int { return v.RegisterRateLimit }).(pulumi.IntPtrOutput)
}

// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
func (o RouterMulticast6PimSmGlobalOutput) RpAddresses() RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v RouterMulticast6PimSmGlobal) []RouterMulticast6PimSmGlobalRpAddress { return v.RpAddresses }).(RouterMulticast6PimSmGlobalRpAddressArrayOutput)
}

type RouterMulticast6PimSmGlobalPtrOutput struct{ *pulumi.OutputState }

func (RouterMulticast6PimSmGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (o RouterMulticast6PimSmGlobalPtrOutput) ToRouterMulticast6PimSmGlobalPtrOutput() RouterMulticast6PimSmGlobalPtrOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalPtrOutput) ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalPtrOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalPtrOutput) Elem() RouterMulticast6PimSmGlobalOutput {
	return o.ApplyT(func(v *RouterMulticast6PimSmGlobal) RouterMulticast6PimSmGlobal {
		if v != nil {
			return *v
		}
		var ret RouterMulticast6PimSmGlobal
		return ret
	}).(RouterMulticast6PimSmGlobalOutput)
}

// Limit of packets/sec per source registered through this RP (0 means unlimited).
func (o RouterMulticast6PimSmGlobalPtrOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticast6PimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RegisterRateLimit
	}).(pulumi.IntPtrOutput)
}

// Statically configured RP addresses. The structure of `rpAddress` block is documented below.
func (o RouterMulticast6PimSmGlobalPtrOutput) RpAddresses() RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v *RouterMulticast6PimSmGlobal) []RouterMulticast6PimSmGlobalRpAddress {
		if v == nil {
			return nil
		}
		return v.RpAddresses
	}).(RouterMulticast6PimSmGlobalRpAddressArrayOutput)
}

type RouterMulticast6PimSmGlobalRpAddress struct {
	// ID of the entry.
	Id *int `pulumi:"id"`
	// RP router IPv6 address.
	Ip6Address *string `pulumi:"ip6Address"`
}

// RouterMulticast6PimSmGlobalRpAddressInput is an input type that accepts RouterMulticast6PimSmGlobalRpAddressArgs and RouterMulticast6PimSmGlobalRpAddressOutput values.
// You can construct a concrete instance of `RouterMulticast6PimSmGlobalRpAddressInput` via:
//
//	RouterMulticast6PimSmGlobalRpAddressArgs{...}
type RouterMulticast6PimSmGlobalRpAddressInput interface {
	pulumi.Input

	ToRouterMulticast6PimSmGlobalRpAddressOutput() RouterMulticast6PimSmGlobalRpAddressOutput
	ToRouterMulticast6PimSmGlobalRpAddressOutputWithContext(context.Context) RouterMulticast6PimSmGlobalRpAddressOutput
}

type RouterMulticast6PimSmGlobalRpAddressArgs struct {
	// ID of the entry.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// RP router IPv6 address.
	Ip6Address pulumi.StringPtrInput `pulumi:"ip6Address"`
}

func (RouterMulticast6PimSmGlobalRpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (i RouterMulticast6PimSmGlobalRpAddressArgs) ToRouterMulticast6PimSmGlobalRpAddressOutput() RouterMulticast6PimSmGlobalRpAddressOutput {
	return i.ToRouterMulticast6PimSmGlobalRpAddressOutputWithContext(context.Background())
}

func (i RouterMulticast6PimSmGlobalRpAddressArgs) ToRouterMulticast6PimSmGlobalRpAddressOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalRpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6PimSmGlobalRpAddressOutput)
}

// RouterMulticast6PimSmGlobalRpAddressArrayInput is an input type that accepts RouterMulticast6PimSmGlobalRpAddressArray and RouterMulticast6PimSmGlobalRpAddressArrayOutput values.
// You can construct a concrete instance of `RouterMulticast6PimSmGlobalRpAddressArrayInput` via:
//
//	RouterMulticast6PimSmGlobalRpAddressArray{ RouterMulticast6PimSmGlobalRpAddressArgs{...} }
type RouterMulticast6PimSmGlobalRpAddressArrayInput interface {
	pulumi.Input

	ToRouterMulticast6PimSmGlobalRpAddressArrayOutput() RouterMulticast6PimSmGlobalRpAddressArrayOutput
	ToRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(context.Context) RouterMulticast6PimSmGlobalRpAddressArrayOutput
}

type RouterMulticast6PimSmGlobalRpAddressArray []RouterMulticast6PimSmGlobalRpAddressInput

func (RouterMulticast6PimSmGlobalRpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (i RouterMulticast6PimSmGlobalRpAddressArray) ToRouterMulticast6PimSmGlobalRpAddressArrayOutput() RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return i.ToRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(context.Background())
}

func (i RouterMulticast6PimSmGlobalRpAddressArray) ToRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6PimSmGlobalRpAddressArrayOutput)
}

type RouterMulticast6PimSmGlobalRpAddressOutput struct{ *pulumi.OutputState }

func (RouterMulticast6PimSmGlobalRpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (o RouterMulticast6PimSmGlobalRpAddressOutput) ToRouterMulticast6PimSmGlobalRpAddressOutput() RouterMulticast6PimSmGlobalRpAddressOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalRpAddressOutput) ToRouterMulticast6PimSmGlobalRpAddressOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalRpAddressOutput {
	return o
}

// ID of the entry.
func (o RouterMulticast6PimSmGlobalRpAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticast6PimSmGlobalRpAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// RP router IPv6 address.
func (o RouterMulticast6PimSmGlobalRpAddressOutput) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticast6PimSmGlobalRpAddress) *string { return v.Ip6Address }).(pulumi.StringPtrOutput)
}

type RouterMulticast6PimSmGlobalRpAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticast6PimSmGlobalRpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (o RouterMulticast6PimSmGlobalRpAddressArrayOutput) ToRouterMulticast6PimSmGlobalRpAddressArrayOutput() RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalRpAddressArrayOutput) ToRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalRpAddressArrayOutput) Index(i pulumi.IntInput) RouterMulticast6PimSmGlobalRpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticast6PimSmGlobalRpAddress {
		return vs[0].([]RouterMulticast6PimSmGlobalRpAddress)[vs[1].(int)]
	}).(RouterMulticast6PimSmGlobalRpAddressOutput)
}

type RouterMulticastInterface struct {
	// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Exclude GenID from hello packets (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
	CiscoExcludeGenid *string `pulumi:"ciscoExcludeGenid"`
	// DR election priority.
	DrPriority *int `pulumi:"drPriority"`
	// Time before old neighbor information expires (0 - 65535 sec, default = 105).
	HelloHoldtime *int `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
	HelloInterval *int `pulumi:"helloInterval"`
	// IGMP configuration options. The structure of `igmp` block is documented below.
	Igmp *RouterMulticastInterfaceIgmp `pulumi:"igmp"`
	// Join multicast groups. The structure of `joinGroup` block is documented below.
	JoinGroups []RouterMulticastInterfaceJoinGroup `pulumi:"joinGroups"`
	// Acceptable source for multicast group.
	MulticastFlow *string `pulumi:"multicastFlow"`
	// Interface name.
	Name *string `pulumi:"name"`
	// Routers acknowledged as neighbor routers.
	NeighbourFilter *string `pulumi:"neighbourFilter"`
	// Enable/disable listening to IGMP but not participating in PIM. Valid values: `enable`, `disable`.
	Passive *string `pulumi:"passive"`
	// PIM operation mode. Valid values: `sparse-mode`, `dense-mode`.
	PimMode *string `pulumi:"pimMode"`
	// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
	PropagationDelay *int `pulumi:"propagationDelay"`
	// Enable/disable compete to become RP in elections. Valid values: `enable`, `disable`.
	RpCandidate *string `pulumi:"rpCandidate"`
	// Multicast groups managed by this RP.
	RpCandidateGroup *string `pulumi:"rpCandidateGroup"`
	// RP candidate advertisement interval (1 - 16383 sec, default = 60).
	RpCandidateInterval *int `pulumi:"rpCandidateInterval"`
	// Router's priority as RP.
	RpCandidatePriority *int `pulumi:"rpCandidatePriority"`
	// Enable/disable fail back for RPF neighbor query. Valid values: `enable`, `disable`.
	RpfNbrFailBack *string `pulumi:"rpfNbrFailBack"`
	// Filter for fail back RPF neighbors.
	RpfNbrFailBackFilter *string `pulumi:"rpfNbrFailBackFilter"`
	// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
	StateRefreshInterval *int `pulumi:"stateRefreshInterval"`
	// Statically set multicast groups to forward out.
	StaticGroup *string `pulumi:"staticGroup"`
	// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
	TtlThreshold *int `pulumi:"ttlThreshold"`
}

// RouterMulticastInterfaceInput is an input type that accepts RouterMulticastInterfaceArgs and RouterMulticastInterfaceOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceInput` via:
//
//	RouterMulticastInterfaceArgs{...}
type RouterMulticastInterfaceInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceOutput() RouterMulticastInterfaceOutput
	ToRouterMulticastInterfaceOutputWithContext(context.Context) RouterMulticastInterfaceOutput
}

type RouterMulticastInterfaceArgs struct {
	// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Exclude GenID from hello packets (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
	CiscoExcludeGenid pulumi.StringPtrInput `pulumi:"ciscoExcludeGenid"`
	// DR election priority.
	DrPriority pulumi.IntPtrInput `pulumi:"drPriority"`
	// Time before old neighbor information expires (0 - 65535 sec, default = 105).
	HelloHoldtime pulumi.IntPtrInput `pulumi:"helloHoldtime"`
	// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// IGMP configuration options. The structure of `igmp` block is documented below.
	Igmp RouterMulticastInterfaceIgmpPtrInput `pulumi:"igmp"`
	// Join multicast groups. The structure of `joinGroup` block is documented below.
	JoinGroups RouterMulticastInterfaceJoinGroupArrayInput `pulumi:"joinGroups"`
	// Acceptable source for multicast group.
	MulticastFlow pulumi.StringPtrInput `pulumi:"multicastFlow"`
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Routers acknowledged as neighbor routers.
	NeighbourFilter pulumi.StringPtrInput `pulumi:"neighbourFilter"`
	// Enable/disable listening to IGMP but not participating in PIM. Valid values: `enable`, `disable`.
	Passive pulumi.StringPtrInput `pulumi:"passive"`
	// PIM operation mode. Valid values: `sparse-mode`, `dense-mode`.
	PimMode pulumi.StringPtrInput `pulumi:"pimMode"`
	// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
	PropagationDelay pulumi.IntPtrInput `pulumi:"propagationDelay"`
	// Enable/disable compete to become RP in elections. Valid values: `enable`, `disable`.
	RpCandidate pulumi.StringPtrInput `pulumi:"rpCandidate"`
	// Multicast groups managed by this RP.
	RpCandidateGroup pulumi.StringPtrInput `pulumi:"rpCandidateGroup"`
	// RP candidate advertisement interval (1 - 16383 sec, default = 60).
	RpCandidateInterval pulumi.IntPtrInput `pulumi:"rpCandidateInterval"`
	// Router's priority as RP.
	RpCandidatePriority pulumi.IntPtrInput `pulumi:"rpCandidatePriority"`
	// Enable/disable fail back for RPF neighbor query. Valid values: `enable`, `disable`.
	RpfNbrFailBack pulumi.StringPtrInput `pulumi:"rpfNbrFailBack"`
	// Filter for fail back RPF neighbors.
	RpfNbrFailBackFilter pulumi.StringPtrInput `pulumi:"rpfNbrFailBackFilter"`
	// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
	StateRefreshInterval pulumi.IntPtrInput `pulumi:"stateRefreshInterval"`
	// Statically set multicast groups to forward out.
	StaticGroup pulumi.StringPtrInput `pulumi:"staticGroup"`
	// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
	TtlThreshold pulumi.IntPtrInput `pulumi:"ttlThreshold"`
}

func (RouterMulticastInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterface)(nil)).Elem()
}

func (i RouterMulticastInterfaceArgs) ToRouterMulticastInterfaceOutput() RouterMulticastInterfaceOutput {
	return i.ToRouterMulticastInterfaceOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceArgs) ToRouterMulticastInterfaceOutputWithContext(ctx context.Context) RouterMulticastInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceOutput)
}

// RouterMulticastInterfaceArrayInput is an input type that accepts RouterMulticastInterfaceArray and RouterMulticastInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceArrayInput` via:
//
//	RouterMulticastInterfaceArray{ RouterMulticastInterfaceArgs{...} }
type RouterMulticastInterfaceArrayInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceArrayOutput() RouterMulticastInterfaceArrayOutput
	ToRouterMulticastInterfaceArrayOutputWithContext(context.Context) RouterMulticastInterfaceArrayOutput
}

type RouterMulticastInterfaceArray []RouterMulticastInterfaceInput

func (RouterMulticastInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastInterface)(nil)).Elem()
}

func (i RouterMulticastInterfaceArray) ToRouterMulticastInterfaceArrayOutput() RouterMulticastInterfaceArrayOutput {
	return i.ToRouterMulticastInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceArray) ToRouterMulticastInterfaceArrayOutputWithContext(ctx context.Context) RouterMulticastInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceArrayOutput)
}

type RouterMulticastInterfaceOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterface)(nil)).Elem()
}

func (o RouterMulticastInterfaceOutput) ToRouterMulticastInterfaceOutput() RouterMulticastInterfaceOutput {
	return o
}

func (o RouterMulticastInterfaceOutput) ToRouterMulticastInterfaceOutputWithContext(ctx context.Context) RouterMulticastInterfaceOutput {
	return o
}

// Enable/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
func (o RouterMulticastInterfaceOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Exclude GenID from hello packets (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
func (o RouterMulticastInterfaceOutput) CiscoExcludeGenid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.CiscoExcludeGenid }).(pulumi.StringPtrOutput)
}

// DR election priority.
func (o RouterMulticastInterfaceOutput) DrPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.DrPriority }).(pulumi.IntPtrOutput)
}

// Time before old neighbor information expires (0 - 65535 sec, default = 105).
func (o RouterMulticastInterfaceOutput) HelloHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.HelloHoldtime }).(pulumi.IntPtrOutput)
}

// Interval between sending PIM hello messages (0 - 65535 sec, default = 30).
func (o RouterMulticastInterfaceOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// IGMP configuration options. The structure of `igmp` block is documented below.
func (o RouterMulticastInterfaceOutput) Igmp() RouterMulticastInterfaceIgmpPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *RouterMulticastInterfaceIgmp { return v.Igmp }).(RouterMulticastInterfaceIgmpPtrOutput)
}

// Join multicast groups. The structure of `joinGroup` block is documented below.
func (o RouterMulticastInterfaceOutput) JoinGroups() RouterMulticastInterfaceJoinGroupArrayOutput {
	return o.ApplyT(func(v RouterMulticastInterface) []RouterMulticastInterfaceJoinGroup { return v.JoinGroups }).(RouterMulticastInterfaceJoinGroupArrayOutput)
}

// Acceptable source for multicast group.
func (o RouterMulticastInterfaceOutput) MulticastFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.MulticastFlow }).(pulumi.StringPtrOutput)
}

// Interface name.
func (o RouterMulticastInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Routers acknowledged as neighbor routers.
func (o RouterMulticastInterfaceOutput) NeighbourFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.NeighbourFilter }).(pulumi.StringPtrOutput)
}

// Enable/disable listening to IGMP but not participating in PIM. Valid values: `enable`, `disable`.
func (o RouterMulticastInterfaceOutput) Passive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.Passive }).(pulumi.StringPtrOutput)
}

// PIM operation mode. Valid values: `sparse-mode`, `dense-mode`.
func (o RouterMulticastInterfaceOutput) PimMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.PimMode }).(pulumi.StringPtrOutput)
}

// Delay flooding packets on this interface (100 - 5000 msec, default = 500).
func (o RouterMulticastInterfaceOutput) PropagationDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.PropagationDelay }).(pulumi.IntPtrOutput)
}

// Enable/disable compete to become RP in elections. Valid values: `enable`, `disable`.
func (o RouterMulticastInterfaceOutput) RpCandidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.RpCandidate }).(pulumi.StringPtrOutput)
}

// Multicast groups managed by this RP.
func (o RouterMulticastInterfaceOutput) RpCandidateGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.RpCandidateGroup }).(pulumi.StringPtrOutput)
}

// RP candidate advertisement interval (1 - 16383 sec, default = 60).
func (o RouterMulticastInterfaceOutput) RpCandidateInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.RpCandidateInterval }).(pulumi.IntPtrOutput)
}

// Router's priority as RP.
func (o RouterMulticastInterfaceOutput) RpCandidatePriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.RpCandidatePriority }).(pulumi.IntPtrOutput)
}

// Enable/disable fail back for RPF neighbor query. Valid values: `enable`, `disable`.
func (o RouterMulticastInterfaceOutput) RpfNbrFailBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.RpfNbrFailBack }).(pulumi.StringPtrOutput)
}

// Filter for fail back RPF neighbors.
func (o RouterMulticastInterfaceOutput) RpfNbrFailBackFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.RpfNbrFailBackFilter }).(pulumi.StringPtrOutput)
}

// Interval between sending state-refresh packets (1 - 100 sec, default = 60).
func (o RouterMulticastInterfaceOutput) StateRefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.StateRefreshInterval }).(pulumi.IntPtrOutput)
}

// Statically set multicast groups to forward out.
func (o RouterMulticastInterfaceOutput) StaticGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.StaticGroup }).(pulumi.StringPtrOutput)
}

// Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).
func (o RouterMulticastInterfaceOutput) TtlThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.TtlThreshold }).(pulumi.IntPtrOutput)
}

type RouterMulticastInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastInterface)(nil)).Elem()
}

func (o RouterMulticastInterfaceArrayOutput) ToRouterMulticastInterfaceArrayOutput() RouterMulticastInterfaceArrayOutput {
	return o
}

func (o RouterMulticastInterfaceArrayOutput) ToRouterMulticastInterfaceArrayOutputWithContext(ctx context.Context) RouterMulticastInterfaceArrayOutput {
	return o
}

func (o RouterMulticastInterfaceArrayOutput) Index(i pulumi.IntInput) RouterMulticastInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticastInterface {
		return vs[0].([]RouterMulticastInterface)[vs[1].(int)]
	}).(RouterMulticastInterfaceOutput)
}

type RouterMulticastInterfaceIgmp struct {
	// Groups IGMP hosts are allowed to join.
	AccessGroup *string `pulumi:"accessGroup"`
	// Groups to drop membership for immediately after receiving IGMPv2 leave.
	ImmediateLeaveGroup *string `pulumi:"immediateLeaveGroup"`
	// Number of group specific queries before removing group (2 - 7, default = 2).
	LastMemberQueryCount *int `pulumi:"lastMemberQueryCount"`
	// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
	LastMemberQueryInterval *int `pulumi:"lastMemberQueryInterval"`
	// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
	QueryInterval *int `pulumi:"queryInterval"`
	// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
	QueryMaxResponseTime *int `pulumi:"queryMaxResponseTime"`
	// Timeout between queries before becoming querier for network (60 - 900, default = 255).
	QueryTimeout *int `pulumi:"queryTimeout"`
	// Enable/disable require IGMP packets contain router alert option. Valid values: `enable`, `disable`.
	RouterAlertCheck *string `pulumi:"routerAlertCheck"`
	// Maximum version of IGMP to support. Valid values: `3`, `2`, `1`.
	Version *string `pulumi:"version"`
}

// RouterMulticastInterfaceIgmpInput is an input type that accepts RouterMulticastInterfaceIgmpArgs and RouterMulticastInterfaceIgmpOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceIgmpInput` via:
//
//	RouterMulticastInterfaceIgmpArgs{...}
type RouterMulticastInterfaceIgmpInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceIgmpOutput() RouterMulticastInterfaceIgmpOutput
	ToRouterMulticastInterfaceIgmpOutputWithContext(context.Context) RouterMulticastInterfaceIgmpOutput
}

type RouterMulticastInterfaceIgmpArgs struct {
	// Groups IGMP hosts are allowed to join.
	AccessGroup pulumi.StringPtrInput `pulumi:"accessGroup"`
	// Groups to drop membership for immediately after receiving IGMPv2 leave.
	ImmediateLeaveGroup pulumi.StringPtrInput `pulumi:"immediateLeaveGroup"`
	// Number of group specific queries before removing group (2 - 7, default = 2).
	LastMemberQueryCount pulumi.IntPtrInput `pulumi:"lastMemberQueryCount"`
	// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
	LastMemberQueryInterval pulumi.IntPtrInput `pulumi:"lastMemberQueryInterval"`
	// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
	QueryInterval pulumi.IntPtrInput `pulumi:"queryInterval"`
	// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
	QueryMaxResponseTime pulumi.IntPtrInput `pulumi:"queryMaxResponseTime"`
	// Timeout between queries before becoming querier for network (60 - 900, default = 255).
	QueryTimeout pulumi.IntPtrInput `pulumi:"queryTimeout"`
	// Enable/disable require IGMP packets contain router alert option. Valid values: `enable`, `disable`.
	RouterAlertCheck pulumi.StringPtrInput `pulumi:"routerAlertCheck"`
	// Maximum version of IGMP to support. Valid values: `3`, `2`, `1`.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (RouterMulticastInterfaceIgmpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (i RouterMulticastInterfaceIgmpArgs) ToRouterMulticastInterfaceIgmpOutput() RouterMulticastInterfaceIgmpOutput {
	return i.ToRouterMulticastInterfaceIgmpOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceIgmpArgs) ToRouterMulticastInterfaceIgmpOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceIgmpOutput)
}

func (i RouterMulticastInterfaceIgmpArgs) ToRouterMulticastInterfaceIgmpPtrOutput() RouterMulticastInterfaceIgmpPtrOutput {
	return i.ToRouterMulticastInterfaceIgmpPtrOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceIgmpArgs) ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceIgmpOutput).ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx)
}

// RouterMulticastInterfaceIgmpPtrInput is an input type that accepts RouterMulticastInterfaceIgmpArgs, RouterMulticastInterfaceIgmpPtr and RouterMulticastInterfaceIgmpPtrOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceIgmpPtrInput` via:
//
//	        RouterMulticastInterfaceIgmpArgs{...}
//
//	or:
//
//	        nil
type RouterMulticastInterfaceIgmpPtrInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceIgmpPtrOutput() RouterMulticastInterfaceIgmpPtrOutput
	ToRouterMulticastInterfaceIgmpPtrOutputWithContext(context.Context) RouterMulticastInterfaceIgmpPtrOutput
}

type routerMulticastInterfaceIgmpPtrType RouterMulticastInterfaceIgmpArgs

func RouterMulticastInterfaceIgmpPtr(v *RouterMulticastInterfaceIgmpArgs) RouterMulticastInterfaceIgmpPtrInput {
	return (*routerMulticastInterfaceIgmpPtrType)(v)
}

func (*routerMulticastInterfaceIgmpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (i *routerMulticastInterfaceIgmpPtrType) ToRouterMulticastInterfaceIgmpPtrOutput() RouterMulticastInterfaceIgmpPtrOutput {
	return i.ToRouterMulticastInterfaceIgmpPtrOutputWithContext(context.Background())
}

func (i *routerMulticastInterfaceIgmpPtrType) ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceIgmpPtrOutput)
}

type RouterMulticastInterfaceIgmpOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceIgmpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (o RouterMulticastInterfaceIgmpOutput) ToRouterMulticastInterfaceIgmpOutput() RouterMulticastInterfaceIgmpOutput {
	return o
}

func (o RouterMulticastInterfaceIgmpOutput) ToRouterMulticastInterfaceIgmpOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpOutput {
	return o
}

func (o RouterMulticastInterfaceIgmpOutput) ToRouterMulticastInterfaceIgmpPtrOutput() RouterMulticastInterfaceIgmpPtrOutput {
	return o.ToRouterMulticastInterfaceIgmpPtrOutputWithContext(context.Background())
}

func (o RouterMulticastInterfaceIgmpOutput) ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterMulticastInterfaceIgmp) *RouterMulticastInterfaceIgmp {
		return &v
	}).(RouterMulticastInterfaceIgmpPtrOutput)
}

// Groups IGMP hosts are allowed to join.
func (o RouterMulticastInterfaceIgmpOutput) AccessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *string { return v.AccessGroup }).(pulumi.StringPtrOutput)
}

// Groups to drop membership for immediately after receiving IGMPv2 leave.
func (o RouterMulticastInterfaceIgmpOutput) ImmediateLeaveGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *string { return v.ImmediateLeaveGroup }).(pulumi.StringPtrOutput)
}

// Number of group specific queries before removing group (2 - 7, default = 2).
func (o RouterMulticastInterfaceIgmpOutput) LastMemberQueryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *int { return v.LastMemberQueryCount }).(pulumi.IntPtrOutput)
}

// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
func (o RouterMulticastInterfaceIgmpOutput) LastMemberQueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *int { return v.LastMemberQueryInterval }).(pulumi.IntPtrOutput)
}

// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
func (o RouterMulticastInterfaceIgmpOutput) QueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *int { return v.QueryInterval }).(pulumi.IntPtrOutput)
}

// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
func (o RouterMulticastInterfaceIgmpOutput) QueryMaxResponseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *int { return v.QueryMaxResponseTime }).(pulumi.IntPtrOutput)
}

// Timeout between queries before becoming querier for network (60 - 900, default = 255).
func (o RouterMulticastInterfaceIgmpOutput) QueryTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *int { return v.QueryTimeout }).(pulumi.IntPtrOutput)
}

// Enable/disable require IGMP packets contain router alert option. Valid values: `enable`, `disable`.
func (o RouterMulticastInterfaceIgmpOutput) RouterAlertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *string { return v.RouterAlertCheck }).(pulumi.StringPtrOutput)
}

// Maximum version of IGMP to support. Valid values: `3`, `2`, `1`.
func (o RouterMulticastInterfaceIgmpOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type RouterMulticastInterfaceIgmpPtrOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceIgmpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (o RouterMulticastInterfaceIgmpPtrOutput) ToRouterMulticastInterfaceIgmpPtrOutput() RouterMulticastInterfaceIgmpPtrOutput {
	return o
}

func (o RouterMulticastInterfaceIgmpPtrOutput) ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpPtrOutput {
	return o
}

func (o RouterMulticastInterfaceIgmpPtrOutput) Elem() RouterMulticastInterfaceIgmpOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) RouterMulticastInterfaceIgmp {
		if v != nil {
			return *v
		}
		var ret RouterMulticastInterfaceIgmp
		return ret
	}).(RouterMulticastInterfaceIgmpOutput)
}

// Groups IGMP hosts are allowed to join.
func (o RouterMulticastInterfaceIgmpPtrOutput) AccessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.AccessGroup
	}).(pulumi.StringPtrOutput)
}

// Groups to drop membership for immediately after receiving IGMPv2 leave.
func (o RouterMulticastInterfaceIgmpPtrOutput) ImmediateLeaveGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.ImmediateLeaveGroup
	}).(pulumi.StringPtrOutput)
}

// Number of group specific queries before removing group (2 - 7, default = 2).
func (o RouterMulticastInterfaceIgmpPtrOutput) LastMemberQueryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.LastMemberQueryCount
	}).(pulumi.IntPtrOutput)
}

// Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).
func (o RouterMulticastInterfaceIgmpPtrOutput) LastMemberQueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.LastMemberQueryInterval
	}).(pulumi.IntPtrOutput)
}

// Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).
func (o RouterMulticastInterfaceIgmpPtrOutput) QueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.QueryInterval
	}).(pulumi.IntPtrOutput)
}

// Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).
func (o RouterMulticastInterfaceIgmpPtrOutput) QueryMaxResponseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.QueryMaxResponseTime
	}).(pulumi.IntPtrOutput)
}

// Timeout between queries before becoming querier for network (60 - 900, default = 255).
func (o RouterMulticastInterfaceIgmpPtrOutput) QueryTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.QueryTimeout
	}).(pulumi.IntPtrOutput)
}

// Enable/disable require IGMP packets contain router alert option. Valid values: `enable`, `disable`.
func (o RouterMulticastInterfaceIgmpPtrOutput) RouterAlertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.RouterAlertCheck
	}).(pulumi.StringPtrOutput)
}

// Maximum version of IGMP to support. Valid values: `3`, `2`, `1`.
func (o RouterMulticastInterfaceIgmpPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type RouterMulticastInterfaceJoinGroup struct {
	// Multicast group IP address.
	Address *string `pulumi:"address"`
}

// RouterMulticastInterfaceJoinGroupInput is an input type that accepts RouterMulticastInterfaceJoinGroupArgs and RouterMulticastInterfaceJoinGroupOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceJoinGroupInput` via:
//
//	RouterMulticastInterfaceJoinGroupArgs{...}
type RouterMulticastInterfaceJoinGroupInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceJoinGroupOutput() RouterMulticastInterfaceJoinGroupOutput
	ToRouterMulticastInterfaceJoinGroupOutputWithContext(context.Context) RouterMulticastInterfaceJoinGroupOutput
}

type RouterMulticastInterfaceJoinGroupArgs struct {
	// Multicast group IP address.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (RouterMulticastInterfaceJoinGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (i RouterMulticastInterfaceJoinGroupArgs) ToRouterMulticastInterfaceJoinGroupOutput() RouterMulticastInterfaceJoinGroupOutput {
	return i.ToRouterMulticastInterfaceJoinGroupOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceJoinGroupArgs) ToRouterMulticastInterfaceJoinGroupOutputWithContext(ctx context.Context) RouterMulticastInterfaceJoinGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceJoinGroupOutput)
}

// RouterMulticastInterfaceJoinGroupArrayInput is an input type that accepts RouterMulticastInterfaceJoinGroupArray and RouterMulticastInterfaceJoinGroupArrayOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceJoinGroupArrayInput` via:
//
//	RouterMulticastInterfaceJoinGroupArray{ RouterMulticastInterfaceJoinGroupArgs{...} }
type RouterMulticastInterfaceJoinGroupArrayInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceJoinGroupArrayOutput() RouterMulticastInterfaceJoinGroupArrayOutput
	ToRouterMulticastInterfaceJoinGroupArrayOutputWithContext(context.Context) RouterMulticastInterfaceJoinGroupArrayOutput
}

type RouterMulticastInterfaceJoinGroupArray []RouterMulticastInterfaceJoinGroupInput

func (RouterMulticastInterfaceJoinGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (i RouterMulticastInterfaceJoinGroupArray) ToRouterMulticastInterfaceJoinGroupArrayOutput() RouterMulticastInterfaceJoinGroupArrayOutput {
	return i.ToRouterMulticastInterfaceJoinGroupArrayOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceJoinGroupArray) ToRouterMulticastInterfaceJoinGroupArrayOutputWithContext(ctx context.Context) RouterMulticastInterfaceJoinGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceJoinGroupArrayOutput)
}

type RouterMulticastInterfaceJoinGroupOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceJoinGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (o RouterMulticastInterfaceJoinGroupOutput) ToRouterMulticastInterfaceJoinGroupOutput() RouterMulticastInterfaceJoinGroupOutput {
	return o
}

func (o RouterMulticastInterfaceJoinGroupOutput) ToRouterMulticastInterfaceJoinGroupOutputWithContext(ctx context.Context) RouterMulticastInterfaceJoinGroupOutput {
	return o
}

// Multicast group IP address.
func (o RouterMulticastInterfaceJoinGroupOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceJoinGroup) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type RouterMulticastInterfaceJoinGroupArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceJoinGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (o RouterMulticastInterfaceJoinGroupArrayOutput) ToRouterMulticastInterfaceJoinGroupArrayOutput() RouterMulticastInterfaceJoinGroupArrayOutput {
	return o
}

func (o RouterMulticastInterfaceJoinGroupArrayOutput) ToRouterMulticastInterfaceJoinGroupArrayOutputWithContext(ctx context.Context) RouterMulticastInterfaceJoinGroupArrayOutput {
	return o
}

func (o RouterMulticastInterfaceJoinGroupArrayOutput) Index(i pulumi.IntInput) RouterMulticastInterfaceJoinGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticastInterfaceJoinGroup {
		return vs[0].([]RouterMulticastInterfaceJoinGroup)[vs[1].(int)]
	}).(RouterMulticastInterfaceJoinGroupOutput)
}

type RouterMulticastPimSmGlobal struct {
	// Sources allowed to register packets with this Rendezvous Point (RP).
	AcceptRegisterList *string `pulumi:"acceptRegisterList"`
	// Sources allowed to send multicast traffic.
	AcceptSourceList *string `pulumi:"acceptSourceList"`
	// Enable/disable accept BSR quick refresh packets from neighbors. Valid values: `enable`, `disable`.
	BsrAllowQuickRefresh *string `pulumi:"bsrAllowQuickRefresh"`
	// Enable/disable allowing this router to become a bootstrap router (BSR). Valid values: `enable`, `disable`.
	BsrCandidate *string `pulumi:"bsrCandidate"`
	// BSR hash length (0 - 32, default = 10).
	BsrHash *int `pulumi:"bsrHash"`
	// Interface to advertise as candidate BSR.
	BsrInterface *string `pulumi:"bsrInterface"`
	// BSR priority (0 - 255, default = 0).
	BsrPriority *int `pulumi:"bsrPriority"`
	// Enable/disable making candidate RP compatible with old Cisco IOS. Valid values: `enable`, `disable`.
	CiscoCrpPrefix *string `pulumi:"ciscoCrpPrefix"`
	// Use only hash for RP selection (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
	CiscoIgnoreRpSetPriority *string `pulumi:"ciscoIgnoreRpSetPriority"`
	// Checksum entire register packet(for old Cisco IOS compatibility). Valid values: `enable`, `disable`.
	CiscoRegisterChecksum *string `pulumi:"ciscoRegisterChecksum"`
	// Cisco register checksum only these groups.
	CiscoRegisterChecksumGroup *string `pulumi:"ciscoRegisterChecksumGroup"`
	// Join/prune holdtime (1 - 65535, default = 210).
	JoinPruneHoldtime *int `pulumi:"joinPruneHoldtime"`
	// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
	MessageInterval *int `pulumi:"messageInterval"`
	// Maximum retries of null register (1 - 20, default = 1).
	NullRegisterRetries *int `pulumi:"nullRegisterRetries"`
	// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
	RegisterRateLimit *int `pulumi:"registerRateLimit"`
	// Enable/disable check RP is reachable before registering packets. Valid values: `enable`, `disable`.
	RegisterRpReachability *string `pulumi:"registerRpReachability"`
	// Override source address in register packets. Valid values: `disable`, `interface`, `ip-address`.
	RegisterSource *string `pulumi:"registerSource"`
	// Override with primary interface address.
	RegisterSourceInterface *string `pulumi:"registerSourceInterface"`
	// Override with local IP address.
	RegisterSourceIp *string `pulumi:"registerSourceIp"`
	// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
	RegisterSupression *int `pulumi:"registerSupression"`
	// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses []RouterMulticastPimSmGlobalRpAddress `pulumi:"rpAddresses"`
	// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
	RpRegisterKeepalive *int `pulumi:"rpRegisterKeepalive"`
	// Enable/disable switching to source specific trees. Valid values: `enable`, `disable`.
	SptThreshold *string `pulumi:"sptThreshold"`
	// Groups allowed to switch to source tree.
	SptThresholdGroup *string `pulumi:"sptThresholdGroup"`
	// Enable/disable source specific multicast. Valid values: `enable`, `disable`.
	Ssm *string `pulumi:"ssm"`
	// Groups allowed to source specific multicast.
	SsmRange *string `pulumi:"ssmRange"`
}

// RouterMulticastPimSmGlobalInput is an input type that accepts RouterMulticastPimSmGlobalArgs and RouterMulticastPimSmGlobalOutput values.
// You can construct a concrete instance of `RouterMulticastPimSmGlobalInput` via:
//
//	RouterMulticastPimSmGlobalArgs{...}
type RouterMulticastPimSmGlobalInput interface {
	pulumi.Input

	ToRouterMulticastPimSmGlobalOutput() RouterMulticastPimSmGlobalOutput
	ToRouterMulticastPimSmGlobalOutputWithContext(context.Context) RouterMulticastPimSmGlobalOutput
}

type RouterMulticastPimSmGlobalArgs struct {
	// Sources allowed to register packets with this Rendezvous Point (RP).
	AcceptRegisterList pulumi.StringPtrInput `pulumi:"acceptRegisterList"`
	// Sources allowed to send multicast traffic.
	AcceptSourceList pulumi.StringPtrInput `pulumi:"acceptSourceList"`
	// Enable/disable accept BSR quick refresh packets from neighbors. Valid values: `enable`, `disable`.
	BsrAllowQuickRefresh pulumi.StringPtrInput `pulumi:"bsrAllowQuickRefresh"`
	// Enable/disable allowing this router to become a bootstrap router (BSR). Valid values: `enable`, `disable`.
	BsrCandidate pulumi.StringPtrInput `pulumi:"bsrCandidate"`
	// BSR hash length (0 - 32, default = 10).
	BsrHash pulumi.IntPtrInput `pulumi:"bsrHash"`
	// Interface to advertise as candidate BSR.
	BsrInterface pulumi.StringPtrInput `pulumi:"bsrInterface"`
	// BSR priority (0 - 255, default = 0).
	BsrPriority pulumi.IntPtrInput `pulumi:"bsrPriority"`
	// Enable/disable making candidate RP compatible with old Cisco IOS. Valid values: `enable`, `disable`.
	CiscoCrpPrefix pulumi.StringPtrInput `pulumi:"ciscoCrpPrefix"`
	// Use only hash for RP selection (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
	CiscoIgnoreRpSetPriority pulumi.StringPtrInput `pulumi:"ciscoIgnoreRpSetPriority"`
	// Checksum entire register packet(for old Cisco IOS compatibility). Valid values: `enable`, `disable`.
	CiscoRegisterChecksum pulumi.StringPtrInput `pulumi:"ciscoRegisterChecksum"`
	// Cisco register checksum only these groups.
	CiscoRegisterChecksumGroup pulumi.StringPtrInput `pulumi:"ciscoRegisterChecksumGroup"`
	// Join/prune holdtime (1 - 65535, default = 210).
	JoinPruneHoldtime pulumi.IntPtrInput `pulumi:"joinPruneHoldtime"`
	// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
	MessageInterval pulumi.IntPtrInput `pulumi:"messageInterval"`
	// Maximum retries of null register (1 - 20, default = 1).
	NullRegisterRetries pulumi.IntPtrInput `pulumi:"nullRegisterRetries"`
	// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
	RegisterRateLimit pulumi.IntPtrInput `pulumi:"registerRateLimit"`
	// Enable/disable check RP is reachable before registering packets. Valid values: `enable`, `disable`.
	RegisterRpReachability pulumi.StringPtrInput `pulumi:"registerRpReachability"`
	// Override source address in register packets. Valid values: `disable`, `interface`, `ip-address`.
	RegisterSource pulumi.StringPtrInput `pulumi:"registerSource"`
	// Override with primary interface address.
	RegisterSourceInterface pulumi.StringPtrInput `pulumi:"registerSourceInterface"`
	// Override with local IP address.
	RegisterSourceIp pulumi.StringPtrInput `pulumi:"registerSourceIp"`
	// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
	RegisterSupression pulumi.IntPtrInput `pulumi:"registerSupression"`
	// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
	RpAddresses RouterMulticastPimSmGlobalRpAddressArrayInput `pulumi:"rpAddresses"`
	// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
	RpRegisterKeepalive pulumi.IntPtrInput `pulumi:"rpRegisterKeepalive"`
	// Enable/disable switching to source specific trees. Valid values: `enable`, `disable`.
	SptThreshold pulumi.StringPtrInput `pulumi:"sptThreshold"`
	// Groups allowed to switch to source tree.
	SptThresholdGroup pulumi.StringPtrInput `pulumi:"sptThresholdGroup"`
	// Enable/disable source specific multicast. Valid values: `enable`, `disable`.
	Ssm pulumi.StringPtrInput `pulumi:"ssm"`
	// Groups allowed to source specific multicast.
	SsmRange pulumi.StringPtrInput `pulumi:"ssmRange"`
}

func (RouterMulticastPimSmGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastPimSmGlobal)(nil)).Elem()
}

func (i RouterMulticastPimSmGlobalArgs) ToRouterMulticastPimSmGlobalOutput() RouterMulticastPimSmGlobalOutput {
	return i.ToRouterMulticastPimSmGlobalOutputWithContext(context.Background())
}

func (i RouterMulticastPimSmGlobalArgs) ToRouterMulticastPimSmGlobalOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastPimSmGlobalOutput)
}

func (i RouterMulticastPimSmGlobalArgs) ToRouterMulticastPimSmGlobalPtrOutput() RouterMulticastPimSmGlobalPtrOutput {
	return i.ToRouterMulticastPimSmGlobalPtrOutputWithContext(context.Background())
}

func (i RouterMulticastPimSmGlobalArgs) ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastPimSmGlobalOutput).ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx)
}

// RouterMulticastPimSmGlobalPtrInput is an input type that accepts RouterMulticastPimSmGlobalArgs, RouterMulticastPimSmGlobalPtr and RouterMulticastPimSmGlobalPtrOutput values.
// You can construct a concrete instance of `RouterMulticastPimSmGlobalPtrInput` via:
//
//	        RouterMulticastPimSmGlobalArgs{...}
//
//	or:
//
//	        nil
type RouterMulticastPimSmGlobalPtrInput interface {
	pulumi.Input

	ToRouterMulticastPimSmGlobalPtrOutput() RouterMulticastPimSmGlobalPtrOutput
	ToRouterMulticastPimSmGlobalPtrOutputWithContext(context.Context) RouterMulticastPimSmGlobalPtrOutput
}

type routerMulticastPimSmGlobalPtrType RouterMulticastPimSmGlobalArgs

func RouterMulticastPimSmGlobalPtr(v *RouterMulticastPimSmGlobalArgs) RouterMulticastPimSmGlobalPtrInput {
	return (*routerMulticastPimSmGlobalPtrType)(v)
}

func (*routerMulticastPimSmGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticastPimSmGlobal)(nil)).Elem()
}

func (i *routerMulticastPimSmGlobalPtrType) ToRouterMulticastPimSmGlobalPtrOutput() RouterMulticastPimSmGlobalPtrOutput {
	return i.ToRouterMulticastPimSmGlobalPtrOutputWithContext(context.Background())
}

func (i *routerMulticastPimSmGlobalPtrType) ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastPimSmGlobalPtrOutput)
}

type RouterMulticastPimSmGlobalOutput struct{ *pulumi.OutputState }

func (RouterMulticastPimSmGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastPimSmGlobal)(nil)).Elem()
}

func (o RouterMulticastPimSmGlobalOutput) ToRouterMulticastPimSmGlobalOutput() RouterMulticastPimSmGlobalOutput {
	return o
}

func (o RouterMulticastPimSmGlobalOutput) ToRouterMulticastPimSmGlobalOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalOutput {
	return o
}

func (o RouterMulticastPimSmGlobalOutput) ToRouterMulticastPimSmGlobalPtrOutput() RouterMulticastPimSmGlobalPtrOutput {
	return o.ToRouterMulticastPimSmGlobalPtrOutputWithContext(context.Background())
}

func (o RouterMulticastPimSmGlobalOutput) ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterMulticastPimSmGlobal) *RouterMulticastPimSmGlobal {
		return &v
	}).(RouterMulticastPimSmGlobalPtrOutput)
}

// Sources allowed to register packets with this Rendezvous Point (RP).
func (o RouterMulticastPimSmGlobalOutput) AcceptRegisterList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.AcceptRegisterList }).(pulumi.StringPtrOutput)
}

// Sources allowed to send multicast traffic.
func (o RouterMulticastPimSmGlobalOutput) AcceptSourceList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.AcceptSourceList }).(pulumi.StringPtrOutput)
}

// Enable/disable accept BSR quick refresh packets from neighbors. Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalOutput) BsrAllowQuickRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.BsrAllowQuickRefresh }).(pulumi.StringPtrOutput)
}

// Enable/disable allowing this router to become a bootstrap router (BSR). Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalOutput) BsrCandidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.BsrCandidate }).(pulumi.StringPtrOutput)
}

// BSR hash length (0 - 32, default = 10).
func (o RouterMulticastPimSmGlobalOutput) BsrHash() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.BsrHash }).(pulumi.IntPtrOutput)
}

// Interface to advertise as candidate BSR.
func (o RouterMulticastPimSmGlobalOutput) BsrInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.BsrInterface }).(pulumi.StringPtrOutput)
}

// BSR priority (0 - 255, default = 0).
func (o RouterMulticastPimSmGlobalOutput) BsrPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.BsrPriority }).(pulumi.IntPtrOutput)
}

// Enable/disable making candidate RP compatible with old Cisco IOS. Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalOutput) CiscoCrpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.CiscoCrpPrefix }).(pulumi.StringPtrOutput)
}

// Use only hash for RP selection (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalOutput) CiscoIgnoreRpSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.CiscoIgnoreRpSetPriority }).(pulumi.StringPtrOutput)
}

// Checksum entire register packet(for old Cisco IOS compatibility). Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalOutput) CiscoRegisterChecksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.CiscoRegisterChecksum }).(pulumi.StringPtrOutput)
}

// Cisco register checksum only these groups.
func (o RouterMulticastPimSmGlobalOutput) CiscoRegisterChecksumGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.CiscoRegisterChecksumGroup }).(pulumi.StringPtrOutput)
}

// Join/prune holdtime (1 - 65535, default = 210).
func (o RouterMulticastPimSmGlobalOutput) JoinPruneHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.JoinPruneHoldtime }).(pulumi.IntPtrOutput)
}

// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
func (o RouterMulticastPimSmGlobalOutput) MessageInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.MessageInterval }).(pulumi.IntPtrOutput)
}

// Maximum retries of null register (1 - 20, default = 1).
func (o RouterMulticastPimSmGlobalOutput) NullRegisterRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.NullRegisterRetries }).(pulumi.IntPtrOutput)
}

// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
func (o RouterMulticastPimSmGlobalOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.RegisterRateLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable check RP is reachable before registering packets. Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalOutput) RegisterRpReachability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.RegisterRpReachability }).(pulumi.StringPtrOutput)
}

// Override source address in register packets. Valid values: `disable`, `interface`, `ip-address`.
func (o RouterMulticastPimSmGlobalOutput) RegisterSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.RegisterSource }).(pulumi.StringPtrOutput)
}

// Override with primary interface address.
func (o RouterMulticastPimSmGlobalOutput) RegisterSourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.RegisterSourceInterface }).(pulumi.StringPtrOutput)
}

// Override with local IP address.
func (o RouterMulticastPimSmGlobalOutput) RegisterSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.RegisterSourceIp }).(pulumi.StringPtrOutput)
}

// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
func (o RouterMulticastPimSmGlobalOutput) RegisterSupression() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.RegisterSupression }).(pulumi.IntPtrOutput)
}

// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
func (o RouterMulticastPimSmGlobalOutput) RpAddresses() RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) []RouterMulticastPimSmGlobalRpAddress { return v.RpAddresses }).(RouterMulticastPimSmGlobalRpAddressArrayOutput)
}

// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
func (o RouterMulticastPimSmGlobalOutput) RpRegisterKeepalive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.RpRegisterKeepalive }).(pulumi.IntPtrOutput)
}

// Enable/disable switching to source specific trees. Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalOutput) SptThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.SptThreshold }).(pulumi.StringPtrOutput)
}

// Groups allowed to switch to source tree.
func (o RouterMulticastPimSmGlobalOutput) SptThresholdGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.SptThresholdGroup }).(pulumi.StringPtrOutput)
}

// Enable/disable source specific multicast. Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalOutput) Ssm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.Ssm }).(pulumi.StringPtrOutput)
}

// Groups allowed to source specific multicast.
func (o RouterMulticastPimSmGlobalOutput) SsmRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.SsmRange }).(pulumi.StringPtrOutput)
}

type RouterMulticastPimSmGlobalPtrOutput struct{ *pulumi.OutputState }

func (RouterMulticastPimSmGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticastPimSmGlobal)(nil)).Elem()
}

func (o RouterMulticastPimSmGlobalPtrOutput) ToRouterMulticastPimSmGlobalPtrOutput() RouterMulticastPimSmGlobalPtrOutput {
	return o
}

func (o RouterMulticastPimSmGlobalPtrOutput) ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalPtrOutput {
	return o
}

func (o RouterMulticastPimSmGlobalPtrOutput) Elem() RouterMulticastPimSmGlobalOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) RouterMulticastPimSmGlobal {
		if v != nil {
			return *v
		}
		var ret RouterMulticastPimSmGlobal
		return ret
	}).(RouterMulticastPimSmGlobalOutput)
}

// Sources allowed to register packets with this Rendezvous Point (RP).
func (o RouterMulticastPimSmGlobalPtrOutput) AcceptRegisterList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.AcceptRegisterList
	}).(pulumi.StringPtrOutput)
}

// Sources allowed to send multicast traffic.
func (o RouterMulticastPimSmGlobalPtrOutput) AcceptSourceList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.AcceptSourceList
	}).(pulumi.StringPtrOutput)
}

// Enable/disable accept BSR quick refresh packets from neighbors. Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalPtrOutput) BsrAllowQuickRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.BsrAllowQuickRefresh
	}).(pulumi.StringPtrOutput)
}

// Enable/disable allowing this router to become a bootstrap router (BSR). Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalPtrOutput) BsrCandidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.BsrCandidate
	}).(pulumi.StringPtrOutput)
}

// BSR hash length (0 - 32, default = 10).
func (o RouterMulticastPimSmGlobalPtrOutput) BsrHash() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.BsrHash
	}).(pulumi.IntPtrOutput)
}

// Interface to advertise as candidate BSR.
func (o RouterMulticastPimSmGlobalPtrOutput) BsrInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.BsrInterface
	}).(pulumi.StringPtrOutput)
}

// BSR priority (0 - 255, default = 0).
func (o RouterMulticastPimSmGlobalPtrOutput) BsrPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.BsrPriority
	}).(pulumi.IntPtrOutput)
}

// Enable/disable making candidate RP compatible with old Cisco IOS. Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalPtrOutput) CiscoCrpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoCrpPrefix
	}).(pulumi.StringPtrOutput)
}

// Use only hash for RP selection (compatibility with old Cisco IOS). Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalPtrOutput) CiscoIgnoreRpSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoIgnoreRpSetPriority
	}).(pulumi.StringPtrOutput)
}

// Checksum entire register packet(for old Cisco IOS compatibility). Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalPtrOutput) CiscoRegisterChecksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoRegisterChecksum
	}).(pulumi.StringPtrOutput)
}

// Cisco register checksum only these groups.
func (o RouterMulticastPimSmGlobalPtrOutput) CiscoRegisterChecksumGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoRegisterChecksumGroup
	}).(pulumi.StringPtrOutput)
}

// Join/prune holdtime (1 - 65535, default = 210).
func (o RouterMulticastPimSmGlobalPtrOutput) JoinPruneHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.JoinPruneHoldtime
	}).(pulumi.IntPtrOutput)
}

// Period of time between sending periodic PIM join/prune messages in seconds (1 - 65535, default = 60).
func (o RouterMulticastPimSmGlobalPtrOutput) MessageInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.MessageInterval
	}).(pulumi.IntPtrOutput)
}

// Maximum retries of null register (1 - 20, default = 1).
func (o RouterMulticastPimSmGlobalPtrOutput) NullRegisterRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.NullRegisterRetries
	}).(pulumi.IntPtrOutput)
}

// Limit of packets/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).
func (o RouterMulticastPimSmGlobalPtrOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RegisterRateLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable check RP is reachable before registering packets. Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalPtrOutput) RegisterRpReachability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterRpReachability
	}).(pulumi.StringPtrOutput)
}

// Override source address in register packets. Valid values: `disable`, `interface`, `ip-address`.
func (o RouterMulticastPimSmGlobalPtrOutput) RegisterSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterSource
	}).(pulumi.StringPtrOutput)
}

// Override with primary interface address.
func (o RouterMulticastPimSmGlobalPtrOutput) RegisterSourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterSourceInterface
	}).(pulumi.StringPtrOutput)
}

// Override with local IP address.
func (o RouterMulticastPimSmGlobalPtrOutput) RegisterSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterSourceIp
	}).(pulumi.StringPtrOutput)
}

// Period of time to honor register-stop message (1 - 65535 sec, default = 60).
func (o RouterMulticastPimSmGlobalPtrOutput) RegisterSupression() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RegisterSupression
	}).(pulumi.IntPtrOutput)
}

// Statically configure RP addresses. The structure of `rpAddress` block is documented below.
func (o RouterMulticastPimSmGlobalPtrOutput) RpAddresses() RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) []RouterMulticastPimSmGlobalRpAddress {
		if v == nil {
			return nil
		}
		return v.RpAddresses
	}).(RouterMulticastPimSmGlobalRpAddressArrayOutput)
}

// Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).
func (o RouterMulticastPimSmGlobalPtrOutput) RpRegisterKeepalive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RpRegisterKeepalive
	}).(pulumi.IntPtrOutput)
}

// Enable/disable switching to source specific trees. Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalPtrOutput) SptThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SptThreshold
	}).(pulumi.StringPtrOutput)
}

// Groups allowed to switch to source tree.
func (o RouterMulticastPimSmGlobalPtrOutput) SptThresholdGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SptThresholdGroup
	}).(pulumi.StringPtrOutput)
}

// Enable/disable source specific multicast. Valid values: `enable`, `disable`.
func (o RouterMulticastPimSmGlobalPtrOutput) Ssm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Ssm
	}).(pulumi.StringPtrOutput)
}

// Groups allowed to source specific multicast.
func (o RouterMulticastPimSmGlobalPtrOutput) SsmRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SsmRange
	}).(pulumi.StringPtrOutput)
}

type RouterMulticastPimSmGlobalRpAddress struct {
	// Groups to use this RP.
	Group *string `pulumi:"group"`
	// ID.
	Id *int `pulumi:"id"`
	// RP router address.
	IpAddress *string `pulumi:"ipAddress"`
}

// RouterMulticastPimSmGlobalRpAddressInput is an input type that accepts RouterMulticastPimSmGlobalRpAddressArgs and RouterMulticastPimSmGlobalRpAddressOutput values.
// You can construct a concrete instance of `RouterMulticastPimSmGlobalRpAddressInput` via:
//
//	RouterMulticastPimSmGlobalRpAddressArgs{...}
type RouterMulticastPimSmGlobalRpAddressInput interface {
	pulumi.Input

	ToRouterMulticastPimSmGlobalRpAddressOutput() RouterMulticastPimSmGlobalRpAddressOutput
	ToRouterMulticastPimSmGlobalRpAddressOutputWithContext(context.Context) RouterMulticastPimSmGlobalRpAddressOutput
}

type RouterMulticastPimSmGlobalRpAddressArgs struct {
	// Groups to use this RP.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// RP router address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (RouterMulticastPimSmGlobalRpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (i RouterMulticastPimSmGlobalRpAddressArgs) ToRouterMulticastPimSmGlobalRpAddressOutput() RouterMulticastPimSmGlobalRpAddressOutput {
	return i.ToRouterMulticastPimSmGlobalRpAddressOutputWithContext(context.Background())
}

func (i RouterMulticastPimSmGlobalRpAddressArgs) ToRouterMulticastPimSmGlobalRpAddressOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalRpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastPimSmGlobalRpAddressOutput)
}

// RouterMulticastPimSmGlobalRpAddressArrayInput is an input type that accepts RouterMulticastPimSmGlobalRpAddressArray and RouterMulticastPimSmGlobalRpAddressArrayOutput values.
// You can construct a concrete instance of `RouterMulticastPimSmGlobalRpAddressArrayInput` via:
//
//	RouterMulticastPimSmGlobalRpAddressArray{ RouterMulticastPimSmGlobalRpAddressArgs{...} }
type RouterMulticastPimSmGlobalRpAddressArrayInput interface {
	pulumi.Input

	ToRouterMulticastPimSmGlobalRpAddressArrayOutput() RouterMulticastPimSmGlobalRpAddressArrayOutput
	ToRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(context.Context) RouterMulticastPimSmGlobalRpAddressArrayOutput
}

type RouterMulticastPimSmGlobalRpAddressArray []RouterMulticastPimSmGlobalRpAddressInput

func (RouterMulticastPimSmGlobalRpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (i RouterMulticastPimSmGlobalRpAddressArray) ToRouterMulticastPimSmGlobalRpAddressArrayOutput() RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return i.ToRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(context.Background())
}

func (i RouterMulticastPimSmGlobalRpAddressArray) ToRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastPimSmGlobalRpAddressArrayOutput)
}

type RouterMulticastPimSmGlobalRpAddressOutput struct{ *pulumi.OutputState }

func (RouterMulticastPimSmGlobalRpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (o RouterMulticastPimSmGlobalRpAddressOutput) ToRouterMulticastPimSmGlobalRpAddressOutput() RouterMulticastPimSmGlobalRpAddressOutput {
	return o
}

func (o RouterMulticastPimSmGlobalRpAddressOutput) ToRouterMulticastPimSmGlobalRpAddressOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalRpAddressOutput {
	return o
}

// Groups to use this RP.
func (o RouterMulticastPimSmGlobalRpAddressOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobalRpAddress) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// ID.
func (o RouterMulticastPimSmGlobalRpAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobalRpAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// RP router address.
func (o RouterMulticastPimSmGlobalRpAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobalRpAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type RouterMulticastPimSmGlobalRpAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticastPimSmGlobalRpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (o RouterMulticastPimSmGlobalRpAddressArrayOutput) ToRouterMulticastPimSmGlobalRpAddressArrayOutput() RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o
}

func (o RouterMulticastPimSmGlobalRpAddressArrayOutput) ToRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o
}

func (o RouterMulticastPimSmGlobalRpAddressArrayOutput) Index(i pulumi.IntInput) RouterMulticastPimSmGlobalRpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticastPimSmGlobalRpAddress {
		return vs[0].([]RouterMulticastPimSmGlobalRpAddress)[vs[1].(int)]
	}).(RouterMulticastPimSmGlobalRpAddressOutput)
}

type RouterMulticastflowFlow struct {
	// Multicast group IP address.
	GroupAddr *string `pulumi:"groupAddr"`
	// Flow ID.
	Id *int `pulumi:"id"`
	// Multicast source IP address.
	SourceAddr *string `pulumi:"sourceAddr"`
}

// RouterMulticastflowFlowInput is an input type that accepts RouterMulticastflowFlowArgs and RouterMulticastflowFlowOutput values.
// You can construct a concrete instance of `RouterMulticastflowFlowInput` via:
//
//	RouterMulticastflowFlowArgs{...}
type RouterMulticastflowFlowInput interface {
	pulumi.Input

	ToRouterMulticastflowFlowOutput() RouterMulticastflowFlowOutput
	ToRouterMulticastflowFlowOutputWithContext(context.Context) RouterMulticastflowFlowOutput
}

type RouterMulticastflowFlowArgs struct {
	// Multicast group IP address.
	GroupAddr pulumi.StringPtrInput `pulumi:"groupAddr"`
	// Flow ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Multicast source IP address.
	SourceAddr pulumi.StringPtrInput `pulumi:"sourceAddr"`
}

func (RouterMulticastflowFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastflowFlow)(nil)).Elem()
}

func (i RouterMulticastflowFlowArgs) ToRouterMulticastflowFlowOutput() RouterMulticastflowFlowOutput {
	return i.ToRouterMulticastflowFlowOutputWithContext(context.Background())
}

func (i RouterMulticastflowFlowArgs) ToRouterMulticastflowFlowOutputWithContext(ctx context.Context) RouterMulticastflowFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastflowFlowOutput)
}

// RouterMulticastflowFlowArrayInput is an input type that accepts RouterMulticastflowFlowArray and RouterMulticastflowFlowArrayOutput values.
// You can construct a concrete instance of `RouterMulticastflowFlowArrayInput` via:
//
//	RouterMulticastflowFlowArray{ RouterMulticastflowFlowArgs{...} }
type RouterMulticastflowFlowArrayInput interface {
	pulumi.Input

	ToRouterMulticastflowFlowArrayOutput() RouterMulticastflowFlowArrayOutput
	ToRouterMulticastflowFlowArrayOutputWithContext(context.Context) RouterMulticastflowFlowArrayOutput
}

type RouterMulticastflowFlowArray []RouterMulticastflowFlowInput

func (RouterMulticastflowFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastflowFlow)(nil)).Elem()
}

func (i RouterMulticastflowFlowArray) ToRouterMulticastflowFlowArrayOutput() RouterMulticastflowFlowArrayOutput {
	return i.ToRouterMulticastflowFlowArrayOutputWithContext(context.Background())
}

func (i RouterMulticastflowFlowArray) ToRouterMulticastflowFlowArrayOutputWithContext(ctx context.Context) RouterMulticastflowFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastflowFlowArrayOutput)
}

type RouterMulticastflowFlowOutput struct{ *pulumi.OutputState }

func (RouterMulticastflowFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastflowFlow)(nil)).Elem()
}

func (o RouterMulticastflowFlowOutput) ToRouterMulticastflowFlowOutput() RouterMulticastflowFlowOutput {
	return o
}

func (o RouterMulticastflowFlowOutput) ToRouterMulticastflowFlowOutputWithContext(ctx context.Context) RouterMulticastflowFlowOutput {
	return o
}

// Multicast group IP address.
func (o RouterMulticastflowFlowOutput) GroupAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastflowFlow) *string { return v.GroupAddr }).(pulumi.StringPtrOutput)
}

// Flow ID.
func (o RouterMulticastflowFlowOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastflowFlow) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Multicast source IP address.
func (o RouterMulticastflowFlowOutput) SourceAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastflowFlow) *string { return v.SourceAddr }).(pulumi.StringPtrOutput)
}

type RouterMulticastflowFlowArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticastflowFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastflowFlow)(nil)).Elem()
}

func (o RouterMulticastflowFlowArrayOutput) ToRouterMulticastflowFlowArrayOutput() RouterMulticastflowFlowArrayOutput {
	return o
}

func (o RouterMulticastflowFlowArrayOutput) ToRouterMulticastflowFlowArrayOutputWithContext(ctx context.Context) RouterMulticastflowFlowArrayOutput {
	return o
}

func (o RouterMulticastflowFlowArrayOutput) Index(i pulumi.IntInput) RouterMulticastflowFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticastflowFlow {
		return vs[0].([]RouterMulticastflowFlow)[vs[1].(int)]
	}).(RouterMulticastflowFlowOutput)
}

type RouterOspf6Area struct {
	// Authentication mode. Valid values: `none`, `ah`, `esp`.
	Authentication *string `pulumi:"authentication"`
	// Summary default cost of stub or NSSA area.
	DefaultCost *int `pulumi:"defaultCost"`
	// Area entry IP address.
	Id *string `pulumi:"id"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []RouterOspf6AreaIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval *int `pulumi:"keyRolloverInterval"`
	// Enable/disable originate type 7 default into NSSA area. Valid values: `enable`, `disable`.
	NssaDefaultInformationOriginate *string `pulumi:"nssaDefaultInformationOriginate"`
	// OSPFv3 default metric.
	NssaDefaultInformationOriginateMetric *int `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPFv3 metric type for default routes. Valid values: `1`, `2`.
	NssaDefaultInformationOriginateMetricType *string `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
	NssaRedistribution *string `pulumi:"nssaRedistribution"`
	// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
	NssaTranslatorRole *string `pulumi:"nssaTranslatorRole"`
	// OSPF6 area range configuration. The structure of `range` block is documented below.
	Ranges []RouterOspf6AreaRange `pulumi:"ranges"`
	// Stub summary setting. Valid values: `no-summary`, `summary`.
	StubType *string `pulumi:"stubType"`
	// Area type setting. Valid values: `regular`, `nssa`, `stub`.
	Type *string `pulumi:"type"`
	// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks []RouterOspf6AreaVirtualLink `pulumi:"virtualLinks"`
}

// RouterOspf6AreaInput is an input type that accepts RouterOspf6AreaArgs and RouterOspf6AreaOutput values.
// You can construct a concrete instance of `RouterOspf6AreaInput` via:
//
//	RouterOspf6AreaArgs{...}
type RouterOspf6AreaInput interface {
	pulumi.Input

	ToRouterOspf6AreaOutput() RouterOspf6AreaOutput
	ToRouterOspf6AreaOutputWithContext(context.Context) RouterOspf6AreaOutput
}

type RouterOspf6AreaArgs struct {
	// Authentication mode. Valid values: `none`, `ah`, `esp`.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Summary default cost of stub or NSSA area.
	DefaultCost pulumi.IntPtrInput `pulumi:"defaultCost"`
	// Area entry IP address.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys RouterOspf6AreaIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntPtrInput `pulumi:"keyRolloverInterval"`
	// Enable/disable originate type 7 default into NSSA area. Valid values: `enable`, `disable`.
	NssaDefaultInformationOriginate pulumi.StringPtrInput `pulumi:"nssaDefaultInformationOriginate"`
	// OSPFv3 default metric.
	NssaDefaultInformationOriginateMetric pulumi.IntPtrInput `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPFv3 metric type for default routes. Valid values: `1`, `2`.
	NssaDefaultInformationOriginateMetricType pulumi.StringPtrInput `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
	NssaRedistribution pulumi.StringPtrInput `pulumi:"nssaRedistribution"`
	// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
	NssaTranslatorRole pulumi.StringPtrInput `pulumi:"nssaTranslatorRole"`
	// OSPF6 area range configuration. The structure of `range` block is documented below.
	Ranges RouterOspf6AreaRangeArrayInput `pulumi:"ranges"`
	// Stub summary setting. Valid values: `no-summary`, `summary`.
	StubType pulumi.StringPtrInput `pulumi:"stubType"`
	// Area type setting. Valid values: `regular`, `nssa`, `stub`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks RouterOspf6AreaVirtualLinkArrayInput `pulumi:"virtualLinks"`
}

func (RouterOspf6AreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Area)(nil)).Elem()
}

func (i RouterOspf6AreaArgs) ToRouterOspf6AreaOutput() RouterOspf6AreaOutput {
	return i.ToRouterOspf6AreaOutputWithContext(context.Background())
}

func (i RouterOspf6AreaArgs) ToRouterOspf6AreaOutputWithContext(ctx context.Context) RouterOspf6AreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaOutput)
}

// RouterOspf6AreaArrayInput is an input type that accepts RouterOspf6AreaArray and RouterOspf6AreaArrayOutput values.
// You can construct a concrete instance of `RouterOspf6AreaArrayInput` via:
//
//	RouterOspf6AreaArray{ RouterOspf6AreaArgs{...} }
type RouterOspf6AreaArrayInput interface {
	pulumi.Input

	ToRouterOspf6AreaArrayOutput() RouterOspf6AreaArrayOutput
	ToRouterOspf6AreaArrayOutputWithContext(context.Context) RouterOspf6AreaArrayOutput
}

type RouterOspf6AreaArray []RouterOspf6AreaInput

func (RouterOspf6AreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Area)(nil)).Elem()
}

func (i RouterOspf6AreaArray) ToRouterOspf6AreaArrayOutput() RouterOspf6AreaArrayOutput {
	return i.ToRouterOspf6AreaArrayOutputWithContext(context.Background())
}

func (i RouterOspf6AreaArray) ToRouterOspf6AreaArrayOutputWithContext(ctx context.Context) RouterOspf6AreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaArrayOutput)
}

type RouterOspf6AreaOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Area)(nil)).Elem()
}

func (o RouterOspf6AreaOutput) ToRouterOspf6AreaOutput() RouterOspf6AreaOutput {
	return o
}

func (o RouterOspf6AreaOutput) ToRouterOspf6AreaOutputWithContext(ctx context.Context) RouterOspf6AreaOutput {
	return o
}

// Authentication mode. Valid values: `none`, `ah`, `esp`.
func (o RouterOspf6AreaOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Summary default cost of stub or NSSA area.
func (o RouterOspf6AreaOutput) DefaultCost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *int { return v.DefaultCost }).(pulumi.IntPtrOutput)
}

// Area entry IP address.
func (o RouterOspf6AreaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
func (o RouterOspf6AreaOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
func (o RouterOspf6AreaOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o RouterOspf6AreaOutput) IpsecKeys() RouterOspf6AreaIpsecKeyArrayOutput {
	return o.ApplyT(func(v RouterOspf6Area) []RouterOspf6AreaIpsecKey { return v.IpsecKeys }).(RouterOspf6AreaIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o RouterOspf6AreaOutput) KeyRolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *int { return v.KeyRolloverInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable originate type 7 default into NSSA area. Valid values: `enable`, `disable`.
func (o RouterOspf6AreaOutput) NssaDefaultInformationOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.NssaDefaultInformationOriginate }).(pulumi.StringPtrOutput)
}

// OSPFv3 default metric.
func (o RouterOspf6AreaOutput) NssaDefaultInformationOriginateMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *int { return v.NssaDefaultInformationOriginateMetric }).(pulumi.IntPtrOutput)
}

// OSPFv3 metric type for default routes. Valid values: `1`, `2`.
func (o RouterOspf6AreaOutput) NssaDefaultInformationOriginateMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.NssaDefaultInformationOriginateMetricType }).(pulumi.StringPtrOutput)
}

// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
func (o RouterOspf6AreaOutput) NssaRedistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.NssaRedistribution }).(pulumi.StringPtrOutput)
}

// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
func (o RouterOspf6AreaOutput) NssaTranslatorRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.NssaTranslatorRole }).(pulumi.StringPtrOutput)
}

// OSPF6 area range configuration. The structure of `range` block is documented below.
func (o RouterOspf6AreaOutput) Ranges() RouterOspf6AreaRangeArrayOutput {
	return o.ApplyT(func(v RouterOspf6Area) []RouterOspf6AreaRange { return v.Ranges }).(RouterOspf6AreaRangeArrayOutput)
}

// Stub summary setting. Valid values: `no-summary`, `summary`.
func (o RouterOspf6AreaOutput) StubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.StubType }).(pulumi.StringPtrOutput)
}

// Area type setting. Valid values: `regular`, `nssa`, `stub`.
func (o RouterOspf6AreaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// OSPF6 virtual link configuration. The structure of `virtualLink` block is documented below.
func (o RouterOspf6AreaOutput) VirtualLinks() RouterOspf6AreaVirtualLinkArrayOutput {
	return o.ApplyT(func(v RouterOspf6Area) []RouterOspf6AreaVirtualLink { return v.VirtualLinks }).(RouterOspf6AreaVirtualLinkArrayOutput)
}

type RouterOspf6AreaArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Area)(nil)).Elem()
}

func (o RouterOspf6AreaArrayOutput) ToRouterOspf6AreaArrayOutput() RouterOspf6AreaArrayOutput {
	return o
}

func (o RouterOspf6AreaArrayOutput) ToRouterOspf6AreaArrayOutputWithContext(ctx context.Context) RouterOspf6AreaArrayOutput {
	return o
}

func (o RouterOspf6AreaArrayOutput) Index(i pulumi.IntInput) RouterOspf6AreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6Area {
		return vs[0].([]RouterOspf6Area)[vs[1].(int)]
	}).(RouterOspf6AreaOutput)
}

type RouterOspf6AreaIpsecKey struct {
	// Authentication key.
	AuthKey *string `pulumi:"authKey"`
	// Encryption key.
	EncKey *string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi *int `pulumi:"spi"`
}

// RouterOspf6AreaIpsecKeyInput is an input type that accepts RouterOspf6AreaIpsecKeyArgs and RouterOspf6AreaIpsecKeyOutput values.
// You can construct a concrete instance of `RouterOspf6AreaIpsecKeyInput` via:
//
//	RouterOspf6AreaIpsecKeyArgs{...}
type RouterOspf6AreaIpsecKeyInput interface {
	pulumi.Input

	ToRouterOspf6AreaIpsecKeyOutput() RouterOspf6AreaIpsecKeyOutput
	ToRouterOspf6AreaIpsecKeyOutputWithContext(context.Context) RouterOspf6AreaIpsecKeyOutput
}

type RouterOspf6AreaIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringPtrInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntPtrInput `pulumi:"spi"`
}

func (RouterOspf6AreaIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (i RouterOspf6AreaIpsecKeyArgs) ToRouterOspf6AreaIpsecKeyOutput() RouterOspf6AreaIpsecKeyOutput {
	return i.ToRouterOspf6AreaIpsecKeyOutputWithContext(context.Background())
}

func (i RouterOspf6AreaIpsecKeyArgs) ToRouterOspf6AreaIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6AreaIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaIpsecKeyOutput)
}

// RouterOspf6AreaIpsecKeyArrayInput is an input type that accepts RouterOspf6AreaIpsecKeyArray and RouterOspf6AreaIpsecKeyArrayOutput values.
// You can construct a concrete instance of `RouterOspf6AreaIpsecKeyArrayInput` via:
//
//	RouterOspf6AreaIpsecKeyArray{ RouterOspf6AreaIpsecKeyArgs{...} }
type RouterOspf6AreaIpsecKeyArrayInput interface {
	pulumi.Input

	ToRouterOspf6AreaIpsecKeyArrayOutput() RouterOspf6AreaIpsecKeyArrayOutput
	ToRouterOspf6AreaIpsecKeyArrayOutputWithContext(context.Context) RouterOspf6AreaIpsecKeyArrayOutput
}

type RouterOspf6AreaIpsecKeyArray []RouterOspf6AreaIpsecKeyInput

func (RouterOspf6AreaIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (i RouterOspf6AreaIpsecKeyArray) ToRouterOspf6AreaIpsecKeyArrayOutput() RouterOspf6AreaIpsecKeyArrayOutput {
	return i.ToRouterOspf6AreaIpsecKeyArrayOutputWithContext(context.Background())
}

func (i RouterOspf6AreaIpsecKeyArray) ToRouterOspf6AreaIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6AreaIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaIpsecKeyArrayOutput)
}

type RouterOspf6AreaIpsecKeyOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (o RouterOspf6AreaIpsecKeyOutput) ToRouterOspf6AreaIpsecKeyOutput() RouterOspf6AreaIpsecKeyOutput {
	return o
}

func (o RouterOspf6AreaIpsecKeyOutput) ToRouterOspf6AreaIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6AreaIpsecKeyOutput {
	return o
}

// Authentication key.
func (o RouterOspf6AreaIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// Encryption key.
func (o RouterOspf6AreaIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

// Security Parameters Index.
func (o RouterOspf6AreaIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type RouterOspf6AreaIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (o RouterOspf6AreaIpsecKeyArrayOutput) ToRouterOspf6AreaIpsecKeyArrayOutput() RouterOspf6AreaIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6AreaIpsecKeyArrayOutput) ToRouterOspf6AreaIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6AreaIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6AreaIpsecKeyArrayOutput) Index(i pulumi.IntInput) RouterOspf6AreaIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6AreaIpsecKey {
		return vs[0].([]RouterOspf6AreaIpsecKey)[vs[1].(int)]
	}).(RouterOspf6AreaIpsecKeyOutput)
}

type RouterOspf6AreaRange struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise *string `pulumi:"advertise"`
	// Range entry ID.
	Id *int `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
}

// RouterOspf6AreaRangeInput is an input type that accepts RouterOspf6AreaRangeArgs and RouterOspf6AreaRangeOutput values.
// You can construct a concrete instance of `RouterOspf6AreaRangeInput` via:
//
//	RouterOspf6AreaRangeArgs{...}
type RouterOspf6AreaRangeInput interface {
	pulumi.Input

	ToRouterOspf6AreaRangeOutput() RouterOspf6AreaRangeOutput
	ToRouterOspf6AreaRangeOutputWithContext(context.Context) RouterOspf6AreaRangeOutput
}

type RouterOspf6AreaRangeArgs struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	// Range entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterOspf6AreaRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaRange)(nil)).Elem()
}

func (i RouterOspf6AreaRangeArgs) ToRouterOspf6AreaRangeOutput() RouterOspf6AreaRangeOutput {
	return i.ToRouterOspf6AreaRangeOutputWithContext(context.Background())
}

func (i RouterOspf6AreaRangeArgs) ToRouterOspf6AreaRangeOutputWithContext(ctx context.Context) RouterOspf6AreaRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaRangeOutput)
}

// RouterOspf6AreaRangeArrayInput is an input type that accepts RouterOspf6AreaRangeArray and RouterOspf6AreaRangeArrayOutput values.
// You can construct a concrete instance of `RouterOspf6AreaRangeArrayInput` via:
//
//	RouterOspf6AreaRangeArray{ RouterOspf6AreaRangeArgs{...} }
type RouterOspf6AreaRangeArrayInput interface {
	pulumi.Input

	ToRouterOspf6AreaRangeArrayOutput() RouterOspf6AreaRangeArrayOutput
	ToRouterOspf6AreaRangeArrayOutputWithContext(context.Context) RouterOspf6AreaRangeArrayOutput
}

type RouterOspf6AreaRangeArray []RouterOspf6AreaRangeInput

func (RouterOspf6AreaRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaRange)(nil)).Elem()
}

func (i RouterOspf6AreaRangeArray) ToRouterOspf6AreaRangeArrayOutput() RouterOspf6AreaRangeArrayOutput {
	return i.ToRouterOspf6AreaRangeArrayOutputWithContext(context.Background())
}

func (i RouterOspf6AreaRangeArray) ToRouterOspf6AreaRangeArrayOutputWithContext(ctx context.Context) RouterOspf6AreaRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaRangeArrayOutput)
}

type RouterOspf6AreaRangeOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaRange)(nil)).Elem()
}

func (o RouterOspf6AreaRangeOutput) ToRouterOspf6AreaRangeOutput() RouterOspf6AreaRangeOutput {
	return o
}

func (o RouterOspf6AreaRangeOutput) ToRouterOspf6AreaRangeOutputWithContext(ctx context.Context) RouterOspf6AreaRangeOutput {
	return o
}

// Enable/disable advertise status. Valid values: `disable`, `enable`.
func (o RouterOspf6AreaRangeOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaRange) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

// Range entry ID.
func (o RouterOspf6AreaRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 prefix.
func (o RouterOspf6AreaRangeOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaRange) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterOspf6AreaRangeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaRange)(nil)).Elem()
}

func (o RouterOspf6AreaRangeArrayOutput) ToRouterOspf6AreaRangeArrayOutput() RouterOspf6AreaRangeArrayOutput {
	return o
}

func (o RouterOspf6AreaRangeArrayOutput) ToRouterOspf6AreaRangeArrayOutputWithContext(ctx context.Context) RouterOspf6AreaRangeArrayOutput {
	return o
}

func (o RouterOspf6AreaRangeArrayOutput) Index(i pulumi.IntInput) RouterOspf6AreaRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6AreaRange {
		return vs[0].([]RouterOspf6AreaRange)[vs[1].(int)]
	}).(RouterOspf6AreaRangeOutput)
}

type RouterOspf6AreaVirtualLink struct {
	// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
	Authentication *string `pulumi:"authentication"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []RouterOspf6AreaVirtualLinkIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval *int `pulumi:"keyRolloverInterval"`
	// Virtual link entry name.
	Name *string `pulumi:"name"`
	// A.B.C.D, peer router ID.
	Peer *string `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
}

// RouterOspf6AreaVirtualLinkInput is an input type that accepts RouterOspf6AreaVirtualLinkArgs and RouterOspf6AreaVirtualLinkOutput values.
// You can construct a concrete instance of `RouterOspf6AreaVirtualLinkInput` via:
//
//	RouterOspf6AreaVirtualLinkArgs{...}
type RouterOspf6AreaVirtualLinkInput interface {
	pulumi.Input

	ToRouterOspf6AreaVirtualLinkOutput() RouterOspf6AreaVirtualLinkOutput
	ToRouterOspf6AreaVirtualLinkOutputWithContext(context.Context) RouterOspf6AreaVirtualLinkOutput
}

type RouterOspf6AreaVirtualLinkArgs struct {
	// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Dead interval.
	DeadInterval pulumi.IntPtrInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys RouterOspf6AreaVirtualLinkIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntPtrInput `pulumi:"keyRolloverInterval"`
	// Virtual link entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A.B.C.D, peer router ID.
	Peer pulumi.StringPtrInput `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput `pulumi:"transmitDelay"`
}

func (RouterOspf6AreaVirtualLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (i RouterOspf6AreaVirtualLinkArgs) ToRouterOspf6AreaVirtualLinkOutput() RouterOspf6AreaVirtualLinkOutput {
	return i.ToRouterOspf6AreaVirtualLinkOutputWithContext(context.Background())
}

func (i RouterOspf6AreaVirtualLinkArgs) ToRouterOspf6AreaVirtualLinkOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaVirtualLinkOutput)
}

// RouterOspf6AreaVirtualLinkArrayInput is an input type that accepts RouterOspf6AreaVirtualLinkArray and RouterOspf6AreaVirtualLinkArrayOutput values.
// You can construct a concrete instance of `RouterOspf6AreaVirtualLinkArrayInput` via:
//
//	RouterOspf6AreaVirtualLinkArray{ RouterOspf6AreaVirtualLinkArgs{...} }
type RouterOspf6AreaVirtualLinkArrayInput interface {
	pulumi.Input

	ToRouterOspf6AreaVirtualLinkArrayOutput() RouterOspf6AreaVirtualLinkArrayOutput
	ToRouterOspf6AreaVirtualLinkArrayOutputWithContext(context.Context) RouterOspf6AreaVirtualLinkArrayOutput
}

type RouterOspf6AreaVirtualLinkArray []RouterOspf6AreaVirtualLinkInput

func (RouterOspf6AreaVirtualLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (i RouterOspf6AreaVirtualLinkArray) ToRouterOspf6AreaVirtualLinkArrayOutput() RouterOspf6AreaVirtualLinkArrayOutput {
	return i.ToRouterOspf6AreaVirtualLinkArrayOutputWithContext(context.Background())
}

func (i RouterOspf6AreaVirtualLinkArray) ToRouterOspf6AreaVirtualLinkArrayOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaVirtualLinkArrayOutput)
}

type RouterOspf6AreaVirtualLinkOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaVirtualLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (o RouterOspf6AreaVirtualLinkOutput) ToRouterOspf6AreaVirtualLinkOutput() RouterOspf6AreaVirtualLinkOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkOutput) ToRouterOspf6AreaVirtualLinkOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkOutput {
	return o
}

// Authentication mode. Valid values: `none`, `ah`, `esp`, `area`.
func (o RouterOspf6AreaVirtualLinkOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Dead interval.
func (o RouterOspf6AreaVirtualLinkOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

// Hello interval.
func (o RouterOspf6AreaVirtualLinkOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
func (o RouterOspf6AreaVirtualLinkOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
func (o RouterOspf6AreaVirtualLinkOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o RouterOspf6AreaVirtualLinkOutput) IpsecKeys() RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) []RouterOspf6AreaVirtualLinkIpsecKey { return v.IpsecKeys }).(RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o RouterOspf6AreaVirtualLinkOutput) KeyRolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *int { return v.KeyRolloverInterval }).(pulumi.IntPtrOutput)
}

// Virtual link entry name.
func (o RouterOspf6AreaVirtualLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A.B.C.D, peer router ID.
func (o RouterOspf6AreaVirtualLinkOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

// Retransmit interval.
func (o RouterOspf6AreaVirtualLinkOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

// Transmit delay.
func (o RouterOspf6AreaVirtualLinkOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type RouterOspf6AreaVirtualLinkArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaVirtualLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (o RouterOspf6AreaVirtualLinkArrayOutput) ToRouterOspf6AreaVirtualLinkArrayOutput() RouterOspf6AreaVirtualLinkArrayOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkArrayOutput) ToRouterOspf6AreaVirtualLinkArrayOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkArrayOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkArrayOutput) Index(i pulumi.IntInput) RouterOspf6AreaVirtualLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6AreaVirtualLink {
		return vs[0].([]RouterOspf6AreaVirtualLink)[vs[1].(int)]
	}).(RouterOspf6AreaVirtualLinkOutput)
}

type RouterOspf6AreaVirtualLinkIpsecKey struct {
	// Authentication key.
	AuthKey *string `pulumi:"authKey"`
	// Encryption key.
	EncKey *string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi *int `pulumi:"spi"`
}

// RouterOspf6AreaVirtualLinkIpsecKeyInput is an input type that accepts RouterOspf6AreaVirtualLinkIpsecKeyArgs and RouterOspf6AreaVirtualLinkIpsecKeyOutput values.
// You can construct a concrete instance of `RouterOspf6AreaVirtualLinkIpsecKeyInput` via:
//
//	RouterOspf6AreaVirtualLinkIpsecKeyArgs{...}
type RouterOspf6AreaVirtualLinkIpsecKeyInput interface {
	pulumi.Input

	ToRouterOspf6AreaVirtualLinkIpsecKeyOutput() RouterOspf6AreaVirtualLinkIpsecKeyOutput
	ToRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(context.Context) RouterOspf6AreaVirtualLinkIpsecKeyOutput
}

type RouterOspf6AreaVirtualLinkIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringPtrInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntPtrInput `pulumi:"spi"`
}

func (RouterOspf6AreaVirtualLinkIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (i RouterOspf6AreaVirtualLinkIpsecKeyArgs) ToRouterOspf6AreaVirtualLinkIpsecKeyOutput() RouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return i.ToRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(context.Background())
}

func (i RouterOspf6AreaVirtualLinkIpsecKeyArgs) ToRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaVirtualLinkIpsecKeyOutput)
}

// RouterOspf6AreaVirtualLinkIpsecKeyArrayInput is an input type that accepts RouterOspf6AreaVirtualLinkIpsecKeyArray and RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput values.
// You can construct a concrete instance of `RouterOspf6AreaVirtualLinkIpsecKeyArrayInput` via:
//
//	RouterOspf6AreaVirtualLinkIpsecKeyArray{ RouterOspf6AreaVirtualLinkIpsecKeyArgs{...} }
type RouterOspf6AreaVirtualLinkIpsecKeyArrayInput interface {
	pulumi.Input

	ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput() RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput
	ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(context.Context) RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput
}

type RouterOspf6AreaVirtualLinkIpsecKeyArray []RouterOspf6AreaVirtualLinkIpsecKeyInput

func (RouterOspf6AreaVirtualLinkIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (i RouterOspf6AreaVirtualLinkIpsecKeyArray) ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput() RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return i.ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(context.Background())
}

func (i RouterOspf6AreaVirtualLinkIpsecKeyArray) ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput)
}

type RouterOspf6AreaVirtualLinkIpsecKeyOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaVirtualLinkIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) ToRouterOspf6AreaVirtualLinkIpsecKeyOutput() RouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) ToRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return o
}

// Authentication key.
func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLinkIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// Encryption key.
func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLinkIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

// Security Parameters Index.
func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLinkIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput() RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) Index(i pulumi.IntInput) RouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6AreaVirtualLinkIpsecKey {
		return vs[0].([]RouterOspf6AreaVirtualLinkIpsecKey)[vs[1].(int)]
	}).(RouterOspf6AreaVirtualLinkIpsecKeyOutput)
}

type RouterOspf6Ospf6InterfaceType struct {
	// A.B.C.D, in IPv4 address format.
	AreaId *string `pulumi:"areaId"`
	// Authentication mode. Valid values: `none`, `ah`, `esp`.
	Authentication *string `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface *string `pulumi:"interface"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys []RouterOspf6Ospf6InterfaceIpsecKey `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval *int `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu *int `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
	MtuIgnore *string `pulumi:"mtuIgnore"`
	// Virtual link entry name.
	Name *string `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors []RouterOspf6Ospf6InterfaceNeighbor `pulumi:"neighbors"`
	// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType *string `pulumi:"networkType"`
	// priority
	Priority *int `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
}

// RouterOspf6Ospf6InterfaceTypeInput is an input type that accepts RouterOspf6Ospf6InterfaceTypeArgs and RouterOspf6Ospf6InterfaceTypeOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceTypeInput` via:
//
//	RouterOspf6Ospf6InterfaceTypeArgs{...}
type RouterOspf6Ospf6InterfaceTypeInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceTypeOutput() RouterOspf6Ospf6InterfaceTypeOutput
	ToRouterOspf6Ospf6InterfaceTypeOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceTypeOutput
}

type RouterOspf6Ospf6InterfaceTypeArgs struct {
	// A.B.C.D, in IPv4 address format.
	AreaId pulumi.StringPtrInput `pulumi:"areaId"`
	// Authentication mode. Valid values: `none`, `ah`, `esp`.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// Dead interval.
	DeadInterval pulumi.IntPtrInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// Configuration interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
	IpsecKeys RouterOspf6Ospf6InterfaceIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	// Key roll-over interval.
	KeyRolloverInterval pulumi.IntPtrInput `pulumi:"keyRolloverInterval"`
	// MTU for OSPFv3 packets.
	Mtu pulumi.IntPtrInput `pulumi:"mtu"`
	// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
	MtuIgnore pulumi.StringPtrInput `pulumi:"mtuIgnore"`
	// Virtual link entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
	Neighbors RouterOspf6Ospf6InterfaceNeighborArrayInput `pulumi:"neighbors"`
	// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// priority
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput `pulumi:"retransmitInterval"`
	// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput `pulumi:"transmitDelay"`
}

func (RouterOspf6Ospf6InterfaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceType)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceTypeArgs) ToRouterOspf6Ospf6InterfaceTypeOutput() RouterOspf6Ospf6InterfaceTypeOutput {
	return i.ToRouterOspf6Ospf6InterfaceTypeOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceTypeArgs) ToRouterOspf6Ospf6InterfaceTypeOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceTypeOutput)
}

// RouterOspf6Ospf6InterfaceTypeArrayInput is an input type that accepts RouterOspf6Ospf6InterfaceTypeArray and RouterOspf6Ospf6InterfaceTypeArrayOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceTypeArrayInput` via:
//
//	RouterOspf6Ospf6InterfaceTypeArray{ RouterOspf6Ospf6InterfaceTypeArgs{...} }
type RouterOspf6Ospf6InterfaceTypeArrayInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceTypeArrayOutput() RouterOspf6Ospf6InterfaceTypeArrayOutput
	ToRouterOspf6Ospf6InterfaceTypeArrayOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceTypeArrayOutput
}

type RouterOspf6Ospf6InterfaceTypeArray []RouterOspf6Ospf6InterfaceTypeInput

func (RouterOspf6Ospf6InterfaceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceType)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceTypeArray) ToRouterOspf6Ospf6InterfaceTypeArrayOutput() RouterOspf6Ospf6InterfaceTypeArrayOutput {
	return i.ToRouterOspf6Ospf6InterfaceTypeArrayOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceTypeArray) ToRouterOspf6Ospf6InterfaceTypeArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceTypeArrayOutput)
}

type RouterOspf6Ospf6InterfaceTypeOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceType)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) ToRouterOspf6Ospf6InterfaceTypeOutput() RouterOspf6Ospf6InterfaceTypeOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) ToRouterOspf6Ospf6InterfaceTypeOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceTypeOutput {
	return o
}

// A.B.C.D, in IPv4 address format.
func (o RouterOspf6Ospf6InterfaceTypeOutput) AreaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.AreaId }).(pulumi.StringPtrOutput)
}

// Authentication mode. Valid values: `none`, `ah`, `esp`.
func (o RouterOspf6Ospf6InterfaceTypeOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Enable/disable Bidirectional Forwarding Detection (BFD). Valid values: `enable`, `disable`.
func (o RouterOspf6Ospf6InterfaceTypeOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o RouterOspf6Ospf6InterfaceTypeOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// Dead interval.
func (o RouterOspf6Ospf6InterfaceTypeOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

// Hello interval.
func (o RouterOspf6Ospf6InterfaceTypeOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Configuration interface name.
func (o RouterOspf6Ospf6InterfaceTypeOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Authentication algorithm. Valid values: `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
func (o RouterOspf6Ospf6InterfaceTypeOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// Encryption algorithm. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`.
func (o RouterOspf6Ospf6InterfaceTypeOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// IPsec authentication and encryption keys. The structure of `ipsecKeys` block is documented below.
func (o RouterOspf6Ospf6InterfaceTypeOutput) IpsecKeys() RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) []RouterOspf6Ospf6InterfaceIpsecKey { return v.IpsecKeys }).(RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput)
}

// Key roll-over interval.
func (o RouterOspf6Ospf6InterfaceTypeOutput) KeyRolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.KeyRolloverInterval }).(pulumi.IntPtrOutput)
}

// MTU for OSPFv3 packets.
func (o RouterOspf6Ospf6InterfaceTypeOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Enable/disable ignoring MTU field in DBD packets. Valid values: `enable`, `disable`.
func (o RouterOspf6Ospf6InterfaceTypeOutput) MtuIgnore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.MtuIgnore }).(pulumi.StringPtrOutput)
}

// Virtual link entry name.
func (o RouterOspf6Ospf6InterfaceTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
func (o RouterOspf6Ospf6InterfaceTypeOutput) Neighbors() RouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) []RouterOspf6Ospf6InterfaceNeighbor { return v.Neighbors }).(RouterOspf6Ospf6InterfaceNeighborArrayOutput)
}

// Network type. Valid values: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
func (o RouterOspf6Ospf6InterfaceTypeOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// priority
func (o RouterOspf6Ospf6InterfaceTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Retransmit interval.
func (o RouterOspf6Ospf6InterfaceTypeOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable OSPF6 routing on this interface. Valid values: `disable`, `enable`.
func (o RouterOspf6Ospf6InterfaceTypeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Transmit delay.
func (o RouterOspf6Ospf6InterfaceTypeOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type RouterOspf6Ospf6InterfaceTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceType)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceTypeArrayOutput) ToRouterOspf6Ospf6InterfaceTypeArrayOutput() RouterOspf6Ospf6InterfaceTypeArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceTypeArrayOutput) ToRouterOspf6Ospf6InterfaceTypeArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceTypeArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceTypeArrayOutput) Index(i pulumi.IntInput) RouterOspf6Ospf6InterfaceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6Ospf6InterfaceType {
		return vs[0].([]RouterOspf6Ospf6InterfaceType)[vs[1].(int)]
	}).(RouterOspf6Ospf6InterfaceTypeOutput)
}

type RouterOspf6Ospf6InterfaceIpsecKey struct {
	// Authentication key.
	AuthKey *string `pulumi:"authKey"`
	// Encryption key.
	EncKey *string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi *int `pulumi:"spi"`
}

// RouterOspf6Ospf6InterfaceIpsecKeyInput is an input type that accepts RouterOspf6Ospf6InterfaceIpsecKeyArgs and RouterOspf6Ospf6InterfaceIpsecKeyOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceIpsecKeyInput` via:
//
//	RouterOspf6Ospf6InterfaceIpsecKeyArgs{...}
type RouterOspf6Ospf6InterfaceIpsecKeyInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceIpsecKeyOutput() RouterOspf6Ospf6InterfaceIpsecKeyOutput
	ToRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceIpsecKeyOutput
}

type RouterOspf6Ospf6InterfaceIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringPtrInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntPtrInput `pulumi:"spi"`
}

func (RouterOspf6Ospf6InterfaceIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceIpsecKeyArgs) ToRouterOspf6Ospf6InterfaceIpsecKeyOutput() RouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return i.ToRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceIpsecKeyArgs) ToRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceIpsecKeyOutput)
}

// RouterOspf6Ospf6InterfaceIpsecKeyArrayInput is an input type that accepts RouterOspf6Ospf6InterfaceIpsecKeyArray and RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceIpsecKeyArrayInput` via:
//
//	RouterOspf6Ospf6InterfaceIpsecKeyArray{ RouterOspf6Ospf6InterfaceIpsecKeyArgs{...} }
type RouterOspf6Ospf6InterfaceIpsecKeyArrayInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput() RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput
	ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput
}

type RouterOspf6Ospf6InterfaceIpsecKeyArray []RouterOspf6Ospf6InterfaceIpsecKeyInput

func (RouterOspf6Ospf6InterfaceIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceIpsecKeyArray) ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput() RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return i.ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceIpsecKeyArray) ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput)
}

type RouterOspf6Ospf6InterfaceIpsecKeyOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) ToRouterOspf6Ospf6InterfaceIpsecKeyOutput() RouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) ToRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

// Authentication key.
func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// Encryption key.
func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

// Security Parameters Index.
func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput() RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) Index(i pulumi.IntInput) RouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6Ospf6InterfaceIpsecKey {
		return vs[0].([]RouterOspf6Ospf6InterfaceIpsecKey)[vs[1].(int)]
	}).(RouterOspf6Ospf6InterfaceIpsecKeyOutput)
}

type RouterOspf6Ospf6InterfaceNeighbor struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// IPv6 link local address of the neighbor.
	Ip6 *string `pulumi:"ip6"`
	// Poll interval time in seconds.
	PollInterval *int `pulumi:"pollInterval"`
	// priority
	Priority *int `pulumi:"priority"`
}

// RouterOspf6Ospf6InterfaceNeighborInput is an input type that accepts RouterOspf6Ospf6InterfaceNeighborArgs and RouterOspf6Ospf6InterfaceNeighborOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceNeighborInput` via:
//
//	RouterOspf6Ospf6InterfaceNeighborArgs{...}
type RouterOspf6Ospf6InterfaceNeighborInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceNeighborOutput() RouterOspf6Ospf6InterfaceNeighborOutput
	ToRouterOspf6Ospf6InterfaceNeighborOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceNeighborOutput
}

type RouterOspf6Ospf6InterfaceNeighborArgs struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// IPv6 link local address of the neighbor.
	Ip6 pulumi.StringPtrInput `pulumi:"ip6"`
	// Poll interval time in seconds.
	PollInterval pulumi.IntPtrInput `pulumi:"pollInterval"`
	// priority
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (RouterOspf6Ospf6InterfaceNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceNeighborArgs) ToRouterOspf6Ospf6InterfaceNeighborOutput() RouterOspf6Ospf6InterfaceNeighborOutput {
	return i.ToRouterOspf6Ospf6InterfaceNeighborOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceNeighborArgs) ToRouterOspf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceNeighborOutput)
}

// RouterOspf6Ospf6InterfaceNeighborArrayInput is an input type that accepts RouterOspf6Ospf6InterfaceNeighborArray and RouterOspf6Ospf6InterfaceNeighborArrayOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceNeighborArrayInput` via:
//
//	RouterOspf6Ospf6InterfaceNeighborArray{ RouterOspf6Ospf6InterfaceNeighborArgs{...} }
type RouterOspf6Ospf6InterfaceNeighborArrayInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceNeighborArrayOutput() RouterOspf6Ospf6InterfaceNeighborArrayOutput
	ToRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceNeighborArrayOutput
}

type RouterOspf6Ospf6InterfaceNeighborArray []RouterOspf6Ospf6InterfaceNeighborInput

func (RouterOspf6Ospf6InterfaceNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceNeighborArray) ToRouterOspf6Ospf6InterfaceNeighborArrayOutput() RouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return i.ToRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceNeighborArray) ToRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceNeighborArrayOutput)
}

type RouterOspf6Ospf6InterfaceNeighborOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceNeighborOutput) ToRouterOspf6Ospf6InterfaceNeighborOutput() RouterOspf6Ospf6InterfaceNeighborOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceNeighborOutput) ToRouterOspf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceNeighborOutput {
	return o
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o RouterOspf6Ospf6InterfaceNeighborOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceNeighbor) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// IPv6 link local address of the neighbor.
func (o RouterOspf6Ospf6InterfaceNeighborOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceNeighbor) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

// Poll interval time in seconds.
func (o RouterOspf6Ospf6InterfaceNeighborOutput) PollInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceNeighbor) *int { return v.PollInterval }).(pulumi.IntPtrOutput)
}

// priority
func (o RouterOspf6Ospf6InterfaceNeighborOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceNeighbor) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type RouterOspf6Ospf6InterfaceNeighborArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceNeighborArrayOutput) ToRouterOspf6Ospf6InterfaceNeighborArrayOutput() RouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceNeighborArrayOutput) ToRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceNeighborArrayOutput) Index(i pulumi.IntInput) RouterOspf6Ospf6InterfaceNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6Ospf6InterfaceNeighbor {
		return vs[0].([]RouterOspf6Ospf6InterfaceNeighbor)[vs[1].(int)]
	}).(RouterOspf6Ospf6InterfaceNeighborOutput)
}

type RouterOspf6PassiveInterface struct {
	// Passive interface name.
	Name *string `pulumi:"name"`
}

// RouterOspf6PassiveInterfaceInput is an input type that accepts RouterOspf6PassiveInterfaceArgs and RouterOspf6PassiveInterfaceOutput values.
// You can construct a concrete instance of `RouterOspf6PassiveInterfaceInput` via:
//
//	RouterOspf6PassiveInterfaceArgs{...}
type RouterOspf6PassiveInterfaceInput interface {
	pulumi.Input

	ToRouterOspf6PassiveInterfaceOutput() RouterOspf6PassiveInterfaceOutput
	ToRouterOspf6PassiveInterfaceOutputWithContext(context.Context) RouterOspf6PassiveInterfaceOutput
}

type RouterOspf6PassiveInterfaceArgs struct {
	// Passive interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterOspf6PassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6PassiveInterface)(nil)).Elem()
}

func (i RouterOspf6PassiveInterfaceArgs) ToRouterOspf6PassiveInterfaceOutput() RouterOspf6PassiveInterfaceOutput {
	return i.ToRouterOspf6PassiveInterfaceOutputWithContext(context.Background())
}

func (i RouterOspf6PassiveInterfaceArgs) ToRouterOspf6PassiveInterfaceOutputWithContext(ctx context.Context) RouterOspf6PassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6PassiveInterfaceOutput)
}

// RouterOspf6PassiveInterfaceArrayInput is an input type that accepts RouterOspf6PassiveInterfaceArray and RouterOspf6PassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterOspf6PassiveInterfaceArrayInput` via:
//
//	RouterOspf6PassiveInterfaceArray{ RouterOspf6PassiveInterfaceArgs{...} }
type RouterOspf6PassiveInterfaceArrayInput interface {
	pulumi.Input

	ToRouterOspf6PassiveInterfaceArrayOutput() RouterOspf6PassiveInterfaceArrayOutput
	ToRouterOspf6PassiveInterfaceArrayOutputWithContext(context.Context) RouterOspf6PassiveInterfaceArrayOutput
}

type RouterOspf6PassiveInterfaceArray []RouterOspf6PassiveInterfaceInput

func (RouterOspf6PassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6PassiveInterface)(nil)).Elem()
}

func (i RouterOspf6PassiveInterfaceArray) ToRouterOspf6PassiveInterfaceArrayOutput() RouterOspf6PassiveInterfaceArrayOutput {
	return i.ToRouterOspf6PassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterOspf6PassiveInterfaceArray) ToRouterOspf6PassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterOspf6PassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6PassiveInterfaceArrayOutput)
}

type RouterOspf6PassiveInterfaceOutput struct{ *pulumi.OutputState }

func (RouterOspf6PassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6PassiveInterface)(nil)).Elem()
}

func (o RouterOspf6PassiveInterfaceOutput) ToRouterOspf6PassiveInterfaceOutput() RouterOspf6PassiveInterfaceOutput {
	return o
}

func (o RouterOspf6PassiveInterfaceOutput) ToRouterOspf6PassiveInterfaceOutputWithContext(ctx context.Context) RouterOspf6PassiveInterfaceOutput {
	return o
}

// Passive interface name.
func (o RouterOspf6PassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6PassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterOspf6PassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6PassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6PassiveInterface)(nil)).Elem()
}

func (o RouterOspf6PassiveInterfaceArrayOutput) ToRouterOspf6PassiveInterfaceArrayOutput() RouterOspf6PassiveInterfaceArrayOutput {
	return o
}

func (o RouterOspf6PassiveInterfaceArrayOutput) ToRouterOspf6PassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterOspf6PassiveInterfaceArrayOutput {
	return o
}

func (o RouterOspf6PassiveInterfaceArrayOutput) Index(i pulumi.IntInput) RouterOspf6PassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6PassiveInterface {
		return vs[0].([]RouterOspf6PassiveInterface)[vs[1].(int)]
	}).(RouterOspf6PassiveInterfaceOutput)
}

type RouterOspf6Redistribute struct {
	// Redistribute metric setting.
	Metric *int `pulumi:"metric"`
	// Metric type. Valid values: `1`, `2`.
	MetricType *string `pulumi:"metricType"`
	// Redistribute name.
	Name *string `pulumi:"name"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterOspf6RedistributeInput is an input type that accepts RouterOspf6RedistributeArgs and RouterOspf6RedistributeOutput values.
// You can construct a concrete instance of `RouterOspf6RedistributeInput` via:
//
//	RouterOspf6RedistributeArgs{...}
type RouterOspf6RedistributeInput interface {
	pulumi.Input

	ToRouterOspf6RedistributeOutput() RouterOspf6RedistributeOutput
	ToRouterOspf6RedistributeOutputWithContext(context.Context) RouterOspf6RedistributeOutput
}

type RouterOspf6RedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Metric type. Valid values: `1`, `2`.
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	// Redistribute name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterOspf6RedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Redistribute)(nil)).Elem()
}

func (i RouterOspf6RedistributeArgs) ToRouterOspf6RedistributeOutput() RouterOspf6RedistributeOutput {
	return i.ToRouterOspf6RedistributeOutputWithContext(context.Background())
}

func (i RouterOspf6RedistributeArgs) ToRouterOspf6RedistributeOutputWithContext(ctx context.Context) RouterOspf6RedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6RedistributeOutput)
}

// RouterOspf6RedistributeArrayInput is an input type that accepts RouterOspf6RedistributeArray and RouterOspf6RedistributeArrayOutput values.
// You can construct a concrete instance of `RouterOspf6RedistributeArrayInput` via:
//
//	RouterOspf6RedistributeArray{ RouterOspf6RedistributeArgs{...} }
type RouterOspf6RedistributeArrayInput interface {
	pulumi.Input

	ToRouterOspf6RedistributeArrayOutput() RouterOspf6RedistributeArrayOutput
	ToRouterOspf6RedistributeArrayOutputWithContext(context.Context) RouterOspf6RedistributeArrayOutput
}

type RouterOspf6RedistributeArray []RouterOspf6RedistributeInput

func (RouterOspf6RedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Redistribute)(nil)).Elem()
}

func (i RouterOspf6RedistributeArray) ToRouterOspf6RedistributeArrayOutput() RouterOspf6RedistributeArrayOutput {
	return i.ToRouterOspf6RedistributeArrayOutputWithContext(context.Background())
}

func (i RouterOspf6RedistributeArray) ToRouterOspf6RedistributeArrayOutputWithContext(ctx context.Context) RouterOspf6RedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6RedistributeArrayOutput)
}

type RouterOspf6RedistributeOutput struct{ *pulumi.OutputState }

func (RouterOspf6RedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Redistribute)(nil)).Elem()
}

func (o RouterOspf6RedistributeOutput) ToRouterOspf6RedistributeOutput() RouterOspf6RedistributeOutput {
	return o
}

func (o RouterOspf6RedistributeOutput) ToRouterOspf6RedistributeOutputWithContext(ctx context.Context) RouterOspf6RedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o RouterOspf6RedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Redistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Metric type. Valid values: `1`, `2`.
func (o RouterOspf6RedistributeOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Redistribute) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

// Redistribute name.
func (o RouterOspf6RedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Redistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o RouterOspf6RedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Redistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RouterOspf6RedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Redistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterOspf6RedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6RedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Redistribute)(nil)).Elem()
}

func (o RouterOspf6RedistributeArrayOutput) ToRouterOspf6RedistributeArrayOutput() RouterOspf6RedistributeArrayOutput {
	return o
}

func (o RouterOspf6RedistributeArrayOutput) ToRouterOspf6RedistributeArrayOutputWithContext(ctx context.Context) RouterOspf6RedistributeArrayOutput {
	return o
}

func (o RouterOspf6RedistributeArrayOutput) Index(i pulumi.IntInput) RouterOspf6RedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6Redistribute {
		return vs[0].([]RouterOspf6Redistribute)[vs[1].(int)]
	}).(RouterOspf6RedistributeOutput)
}

type RouterOspf6SummaryAddress struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise *string `pulumi:"advertise"`
	// Summary address entry ID.
	Id *int `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 *string `pulumi:"prefix6"`
	// Tag value.
	Tag *int `pulumi:"tag"`
}

// RouterOspf6SummaryAddressInput is an input type that accepts RouterOspf6SummaryAddressArgs and RouterOspf6SummaryAddressOutput values.
// You can construct a concrete instance of `RouterOspf6SummaryAddressInput` via:
//
//	RouterOspf6SummaryAddressArgs{...}
type RouterOspf6SummaryAddressInput interface {
	pulumi.Input

	ToRouterOspf6SummaryAddressOutput() RouterOspf6SummaryAddressOutput
	ToRouterOspf6SummaryAddressOutputWithContext(context.Context) RouterOspf6SummaryAddressOutput
}

type RouterOspf6SummaryAddressArgs struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	// Summary address entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
	// Tag value.
	Tag pulumi.IntPtrInput `pulumi:"tag"`
}

func (RouterOspf6SummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6SummaryAddress)(nil)).Elem()
}

func (i RouterOspf6SummaryAddressArgs) ToRouterOspf6SummaryAddressOutput() RouterOspf6SummaryAddressOutput {
	return i.ToRouterOspf6SummaryAddressOutputWithContext(context.Background())
}

func (i RouterOspf6SummaryAddressArgs) ToRouterOspf6SummaryAddressOutputWithContext(ctx context.Context) RouterOspf6SummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6SummaryAddressOutput)
}

// RouterOspf6SummaryAddressArrayInput is an input type that accepts RouterOspf6SummaryAddressArray and RouterOspf6SummaryAddressArrayOutput values.
// You can construct a concrete instance of `RouterOspf6SummaryAddressArrayInput` via:
//
//	RouterOspf6SummaryAddressArray{ RouterOspf6SummaryAddressArgs{...} }
type RouterOspf6SummaryAddressArrayInput interface {
	pulumi.Input

	ToRouterOspf6SummaryAddressArrayOutput() RouterOspf6SummaryAddressArrayOutput
	ToRouterOspf6SummaryAddressArrayOutputWithContext(context.Context) RouterOspf6SummaryAddressArrayOutput
}

type RouterOspf6SummaryAddressArray []RouterOspf6SummaryAddressInput

func (RouterOspf6SummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6SummaryAddress)(nil)).Elem()
}

func (i RouterOspf6SummaryAddressArray) ToRouterOspf6SummaryAddressArrayOutput() RouterOspf6SummaryAddressArrayOutput {
	return i.ToRouterOspf6SummaryAddressArrayOutputWithContext(context.Background())
}

func (i RouterOspf6SummaryAddressArray) ToRouterOspf6SummaryAddressArrayOutputWithContext(ctx context.Context) RouterOspf6SummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6SummaryAddressArrayOutput)
}

type RouterOspf6SummaryAddressOutput struct{ *pulumi.OutputState }

func (RouterOspf6SummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6SummaryAddress)(nil)).Elem()
}

func (o RouterOspf6SummaryAddressOutput) ToRouterOspf6SummaryAddressOutput() RouterOspf6SummaryAddressOutput {
	return o
}

func (o RouterOspf6SummaryAddressOutput) ToRouterOspf6SummaryAddressOutputWithContext(ctx context.Context) RouterOspf6SummaryAddressOutput {
	return o
}

// Enable/disable advertise status. Valid values: `disable`, `enable`.
func (o RouterOspf6SummaryAddressOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6SummaryAddress) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

// Summary address entry ID.
func (o RouterOspf6SummaryAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6SummaryAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 prefix.
func (o RouterOspf6SummaryAddressOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6SummaryAddress) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

// Tag value.
func (o RouterOspf6SummaryAddressOutput) Tag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6SummaryAddress) *int { return v.Tag }).(pulumi.IntPtrOutput)
}

type RouterOspf6SummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6SummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6SummaryAddress)(nil)).Elem()
}

func (o RouterOspf6SummaryAddressArrayOutput) ToRouterOspf6SummaryAddressArrayOutput() RouterOspf6SummaryAddressArrayOutput {
	return o
}

func (o RouterOspf6SummaryAddressArrayOutput) ToRouterOspf6SummaryAddressArrayOutputWithContext(ctx context.Context) RouterOspf6SummaryAddressArrayOutput {
	return o
}

func (o RouterOspf6SummaryAddressArrayOutput) Index(i pulumi.IntInput) RouterOspf6SummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6SummaryAddress {
		return vs[0].([]RouterOspf6SummaryAddress)[vs[1].(int)]
	}).(RouterOspf6SummaryAddressOutput)
}

type RouterOspfArea struct {
	// Authentication type.
	Authentication *string `pulumi:"authentication"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Summary default cost of stub or NSSA area.
	DefaultCost *int `pulumi:"defaultCost"`
	// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
	FilterLists []RouterOspfAreaFilterList `pulumi:"filterLists"`
	// Area entry IP address.
	Id *string `pulumi:"id"`
	// Redistribute, advertise, or do not originate Type-7 default route into NSSA area. Valid values: `enable`, `always`, `disable`.
	NssaDefaultInformationOriginate *string `pulumi:"nssaDefaultInformationOriginate"`
	// OSPF default metric.
	NssaDefaultInformationOriginateMetric *int `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPF metric type for default routes. Valid values: `1`, `2`.
	NssaDefaultInformationOriginateMetricType *string `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
	NssaRedistribution *string `pulumi:"nssaRedistribution"`
	// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
	NssaTranslatorRole *string `pulumi:"nssaTranslatorRole"`
	// OSPF area range configuration. The structure of `range` block is documented below.
	Ranges []RouterOspfAreaRange `pulumi:"ranges"`
	// Enable/disable shortcut option. Valid values: `disable`, `enable`, `default`.
	Shortcut *string `pulumi:"shortcut"`
	// Stub summary setting. Valid values: `no-summary`, `summary`.
	StubType *string `pulumi:"stubType"`
	// Area type setting. Valid values: `regular`, `nssa`, `stub`.
	Type *string `pulumi:"type"`
	// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks []RouterOspfAreaVirtualLink `pulumi:"virtualLinks"`
}

// RouterOspfAreaInput is an input type that accepts RouterOspfAreaArgs and RouterOspfAreaOutput values.
// You can construct a concrete instance of `RouterOspfAreaInput` via:
//
//	RouterOspfAreaArgs{...}
type RouterOspfAreaInput interface {
	pulumi.Input

	ToRouterOspfAreaOutput() RouterOspfAreaOutput
	ToRouterOspfAreaOutputWithContext(context.Context) RouterOspfAreaOutput
}

type RouterOspfAreaArgs struct {
	// Authentication type.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Comment.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Summary default cost of stub or NSSA area.
	DefaultCost pulumi.IntPtrInput `pulumi:"defaultCost"`
	// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
	FilterLists RouterOspfAreaFilterListArrayInput `pulumi:"filterLists"`
	// Area entry IP address.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Redistribute, advertise, or do not originate Type-7 default route into NSSA area. Valid values: `enable`, `always`, `disable`.
	NssaDefaultInformationOriginate pulumi.StringPtrInput `pulumi:"nssaDefaultInformationOriginate"`
	// OSPF default metric.
	NssaDefaultInformationOriginateMetric pulumi.IntPtrInput `pulumi:"nssaDefaultInformationOriginateMetric"`
	// OSPF metric type for default routes. Valid values: `1`, `2`.
	NssaDefaultInformationOriginateMetricType pulumi.StringPtrInput `pulumi:"nssaDefaultInformationOriginateMetricType"`
	// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
	NssaRedistribution pulumi.StringPtrInput `pulumi:"nssaRedistribution"`
	// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
	NssaTranslatorRole pulumi.StringPtrInput `pulumi:"nssaTranslatorRole"`
	// OSPF area range configuration. The structure of `range` block is documented below.
	Ranges RouterOspfAreaRangeArrayInput `pulumi:"ranges"`
	// Enable/disable shortcut option. Valid values: `disable`, `enable`, `default`.
	Shortcut pulumi.StringPtrInput `pulumi:"shortcut"`
	// Stub summary setting. Valid values: `no-summary`, `summary`.
	StubType pulumi.StringPtrInput `pulumi:"stubType"`
	// Area type setting. Valid values: `regular`, `nssa`, `stub`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
	VirtualLinks RouterOspfAreaVirtualLinkArrayInput `pulumi:"virtualLinks"`
}

func (RouterOspfAreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfArea)(nil)).Elem()
}

func (i RouterOspfAreaArgs) ToRouterOspfAreaOutput() RouterOspfAreaOutput {
	return i.ToRouterOspfAreaOutputWithContext(context.Background())
}

func (i RouterOspfAreaArgs) ToRouterOspfAreaOutputWithContext(ctx context.Context) RouterOspfAreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaOutput)
}

// RouterOspfAreaArrayInput is an input type that accepts RouterOspfAreaArray and RouterOspfAreaArrayOutput values.
// You can construct a concrete instance of `RouterOspfAreaArrayInput` via:
//
//	RouterOspfAreaArray{ RouterOspfAreaArgs{...} }
type RouterOspfAreaArrayInput interface {
	pulumi.Input

	ToRouterOspfAreaArrayOutput() RouterOspfAreaArrayOutput
	ToRouterOspfAreaArrayOutputWithContext(context.Context) RouterOspfAreaArrayOutput
}

type RouterOspfAreaArray []RouterOspfAreaInput

func (RouterOspfAreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfArea)(nil)).Elem()
}

func (i RouterOspfAreaArray) ToRouterOspfAreaArrayOutput() RouterOspfAreaArrayOutput {
	return i.ToRouterOspfAreaArrayOutputWithContext(context.Background())
}

func (i RouterOspfAreaArray) ToRouterOspfAreaArrayOutputWithContext(ctx context.Context) RouterOspfAreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaArrayOutput)
}

type RouterOspfAreaOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfArea)(nil)).Elem()
}

func (o RouterOspfAreaOutput) ToRouterOspfAreaOutput() RouterOspfAreaOutput {
	return o
}

func (o RouterOspfAreaOutput) ToRouterOspfAreaOutputWithContext(ctx context.Context) RouterOspfAreaOutput {
	return o
}

// Authentication type.
func (o RouterOspfAreaOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Comment.
func (o RouterOspfAreaOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Summary default cost of stub or NSSA area.
func (o RouterOspfAreaOutput) DefaultCost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *int { return v.DefaultCost }).(pulumi.IntPtrOutput)
}

// OSPF area filter-list configuration. The structure of `filterList` block is documented below.
func (o RouterOspfAreaOutput) FilterLists() RouterOspfAreaFilterListArrayOutput {
	return o.ApplyT(func(v RouterOspfArea) []RouterOspfAreaFilterList { return v.FilterLists }).(RouterOspfAreaFilterListArrayOutput)
}

// Area entry IP address.
func (o RouterOspfAreaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Redistribute, advertise, or do not originate Type-7 default route into NSSA area. Valid values: `enable`, `always`, `disable`.
func (o RouterOspfAreaOutput) NssaDefaultInformationOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.NssaDefaultInformationOriginate }).(pulumi.StringPtrOutput)
}

// OSPF default metric.
func (o RouterOspfAreaOutput) NssaDefaultInformationOriginateMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *int { return v.NssaDefaultInformationOriginateMetric }).(pulumi.IntPtrOutput)
}

// OSPF metric type for default routes. Valid values: `1`, `2`.
func (o RouterOspfAreaOutput) NssaDefaultInformationOriginateMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.NssaDefaultInformationOriginateMetricType }).(pulumi.StringPtrOutput)
}

// Enable/disable redistribute into NSSA area. Valid values: `enable`, `disable`.
func (o RouterOspfAreaOutput) NssaRedistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.NssaRedistribution }).(pulumi.StringPtrOutput)
}

// NSSA translator role type. Valid values: `candidate`, `never`, `always`.
func (o RouterOspfAreaOutput) NssaTranslatorRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.NssaTranslatorRole }).(pulumi.StringPtrOutput)
}

// OSPF area range configuration. The structure of `range` block is documented below.
func (o RouterOspfAreaOutput) Ranges() RouterOspfAreaRangeArrayOutput {
	return o.ApplyT(func(v RouterOspfArea) []RouterOspfAreaRange { return v.Ranges }).(RouterOspfAreaRangeArrayOutput)
}

// Enable/disable shortcut option. Valid values: `disable`, `enable`, `default`.
func (o RouterOspfAreaOutput) Shortcut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.Shortcut }).(pulumi.StringPtrOutput)
}

// Stub summary setting. Valid values: `no-summary`, `summary`.
func (o RouterOspfAreaOutput) StubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.StubType }).(pulumi.StringPtrOutput)
}

// Area type setting. Valid values: `regular`, `nssa`, `stub`.
func (o RouterOspfAreaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// OSPF virtual link configuration. The structure of `virtualLink` block is documented below.
func (o RouterOspfAreaOutput) VirtualLinks() RouterOspfAreaVirtualLinkArrayOutput {
	return o.ApplyT(func(v RouterOspfArea) []RouterOspfAreaVirtualLink { return v.VirtualLinks }).(RouterOspfAreaVirtualLinkArrayOutput)
}

type RouterOspfAreaArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfArea)(nil)).Elem()
}

func (o RouterOspfAreaArrayOutput) ToRouterOspfAreaArrayOutput() RouterOspfAreaArrayOutput {
	return o
}

func (o RouterOspfAreaArrayOutput) ToRouterOspfAreaArrayOutputWithContext(ctx context.Context) RouterOspfAreaArrayOutput {
	return o
}

func (o RouterOspfAreaArrayOutput) Index(i pulumi.IntInput) RouterOspfAreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfArea {
		return vs[0].([]RouterOspfArea)[vs[1].(int)]
	}).(RouterOspfAreaOutput)
}

type RouterOspfAreaFilterList struct {
	// Direction. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// Filter list entry ID.
	Id *int `pulumi:"id"`
	// Access-list or prefix-list name.
	List *string `pulumi:"list"`
}

// RouterOspfAreaFilterListInput is an input type that accepts RouterOspfAreaFilterListArgs and RouterOspfAreaFilterListOutput values.
// You can construct a concrete instance of `RouterOspfAreaFilterListInput` via:
//
//	RouterOspfAreaFilterListArgs{...}
type RouterOspfAreaFilterListInput interface {
	pulumi.Input

	ToRouterOspfAreaFilterListOutput() RouterOspfAreaFilterListOutput
	ToRouterOspfAreaFilterListOutputWithContext(context.Context) RouterOspfAreaFilterListOutput
}

type RouterOspfAreaFilterListArgs struct {
	// Direction. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Filter list entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Access-list or prefix-list name.
	List pulumi.StringPtrInput `pulumi:"list"`
}

func (RouterOspfAreaFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaFilterList)(nil)).Elem()
}

func (i RouterOspfAreaFilterListArgs) ToRouterOspfAreaFilterListOutput() RouterOspfAreaFilterListOutput {
	return i.ToRouterOspfAreaFilterListOutputWithContext(context.Background())
}

func (i RouterOspfAreaFilterListArgs) ToRouterOspfAreaFilterListOutputWithContext(ctx context.Context) RouterOspfAreaFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaFilterListOutput)
}

// RouterOspfAreaFilterListArrayInput is an input type that accepts RouterOspfAreaFilterListArray and RouterOspfAreaFilterListArrayOutput values.
// You can construct a concrete instance of `RouterOspfAreaFilterListArrayInput` via:
//
//	RouterOspfAreaFilterListArray{ RouterOspfAreaFilterListArgs{...} }
type RouterOspfAreaFilterListArrayInput interface {
	pulumi.Input

	ToRouterOspfAreaFilterListArrayOutput() RouterOspfAreaFilterListArrayOutput
	ToRouterOspfAreaFilterListArrayOutputWithContext(context.Context) RouterOspfAreaFilterListArrayOutput
}

type RouterOspfAreaFilterListArray []RouterOspfAreaFilterListInput

func (RouterOspfAreaFilterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaFilterList)(nil)).Elem()
}

func (i RouterOspfAreaFilterListArray) ToRouterOspfAreaFilterListArrayOutput() RouterOspfAreaFilterListArrayOutput {
	return i.ToRouterOspfAreaFilterListArrayOutputWithContext(context.Background())
}

func (i RouterOspfAreaFilterListArray) ToRouterOspfAreaFilterListArrayOutputWithContext(ctx context.Context) RouterOspfAreaFilterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaFilterListArrayOutput)
}

type RouterOspfAreaFilterListOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaFilterList)(nil)).Elem()
}

func (o RouterOspfAreaFilterListOutput) ToRouterOspfAreaFilterListOutput() RouterOspfAreaFilterListOutput {
	return o
}

func (o RouterOspfAreaFilterListOutput) ToRouterOspfAreaFilterListOutputWithContext(ctx context.Context) RouterOspfAreaFilterListOutput {
	return o
}

// Direction. Valid values: `in`, `out`.
func (o RouterOspfAreaFilterListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaFilterList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Filter list entry ID.
func (o RouterOspfAreaFilterListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaFilterList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Access-list or prefix-list name.
func (o RouterOspfAreaFilterListOutput) List() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaFilterList) *string { return v.List }).(pulumi.StringPtrOutput)
}

type RouterOspfAreaFilterListArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaFilterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaFilterList)(nil)).Elem()
}

func (o RouterOspfAreaFilterListArrayOutput) ToRouterOspfAreaFilterListArrayOutput() RouterOspfAreaFilterListArrayOutput {
	return o
}

func (o RouterOspfAreaFilterListArrayOutput) ToRouterOspfAreaFilterListArrayOutputWithContext(ctx context.Context) RouterOspfAreaFilterListArrayOutput {
	return o
}

func (o RouterOspfAreaFilterListArrayOutput) Index(i pulumi.IntInput) RouterOspfAreaFilterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfAreaFilterList {
		return vs[0].([]RouterOspfAreaFilterList)[vs[1].(int)]
	}).(RouterOspfAreaFilterListOutput)
}

type RouterOspfAreaRange struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise *string `pulumi:"advertise"`
	// Range entry ID.
	Id *int `pulumi:"id"`
	// Prefix.
	Prefix *string `pulumi:"prefix"`
	// Substitute prefix.
	Substitute *string `pulumi:"substitute"`
	// Enable/disable substitute status. Valid values: `enable`, `disable`.
	SubstituteStatus *string `pulumi:"substituteStatus"`
}

// RouterOspfAreaRangeInput is an input type that accepts RouterOspfAreaRangeArgs and RouterOspfAreaRangeOutput values.
// You can construct a concrete instance of `RouterOspfAreaRangeInput` via:
//
//	RouterOspfAreaRangeArgs{...}
type RouterOspfAreaRangeInput interface {
	pulumi.Input

	ToRouterOspfAreaRangeOutput() RouterOspfAreaRangeOutput
	ToRouterOspfAreaRangeOutputWithContext(context.Context) RouterOspfAreaRangeOutput
}

type RouterOspfAreaRangeArgs struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	// Range entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Substitute prefix.
	Substitute pulumi.StringPtrInput `pulumi:"substitute"`
	// Enable/disable substitute status. Valid values: `enable`, `disable`.
	SubstituteStatus pulumi.StringPtrInput `pulumi:"substituteStatus"`
}

func (RouterOspfAreaRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaRange)(nil)).Elem()
}

func (i RouterOspfAreaRangeArgs) ToRouterOspfAreaRangeOutput() RouterOspfAreaRangeOutput {
	return i.ToRouterOspfAreaRangeOutputWithContext(context.Background())
}

func (i RouterOspfAreaRangeArgs) ToRouterOspfAreaRangeOutputWithContext(ctx context.Context) RouterOspfAreaRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaRangeOutput)
}

// RouterOspfAreaRangeArrayInput is an input type that accepts RouterOspfAreaRangeArray and RouterOspfAreaRangeArrayOutput values.
// You can construct a concrete instance of `RouterOspfAreaRangeArrayInput` via:
//
//	RouterOspfAreaRangeArray{ RouterOspfAreaRangeArgs{...} }
type RouterOspfAreaRangeArrayInput interface {
	pulumi.Input

	ToRouterOspfAreaRangeArrayOutput() RouterOspfAreaRangeArrayOutput
	ToRouterOspfAreaRangeArrayOutputWithContext(context.Context) RouterOspfAreaRangeArrayOutput
}

type RouterOspfAreaRangeArray []RouterOspfAreaRangeInput

func (RouterOspfAreaRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaRange)(nil)).Elem()
}

func (i RouterOspfAreaRangeArray) ToRouterOspfAreaRangeArrayOutput() RouterOspfAreaRangeArrayOutput {
	return i.ToRouterOspfAreaRangeArrayOutputWithContext(context.Background())
}

func (i RouterOspfAreaRangeArray) ToRouterOspfAreaRangeArrayOutputWithContext(ctx context.Context) RouterOspfAreaRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaRangeArrayOutput)
}

type RouterOspfAreaRangeOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaRange)(nil)).Elem()
}

func (o RouterOspfAreaRangeOutput) ToRouterOspfAreaRangeOutput() RouterOspfAreaRangeOutput {
	return o
}

func (o RouterOspfAreaRangeOutput) ToRouterOspfAreaRangeOutputWithContext(ctx context.Context) RouterOspfAreaRangeOutput {
	return o
}

// Enable/disable advertise status. Valid values: `disable`, `enable`.
func (o RouterOspfAreaRangeOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaRange) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

// Range entry ID.
func (o RouterOspfAreaRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Prefix.
func (o RouterOspfAreaRangeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaRange) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Substitute prefix.
func (o RouterOspfAreaRangeOutput) Substitute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaRange) *string { return v.Substitute }).(pulumi.StringPtrOutput)
}

// Enable/disable substitute status. Valid values: `enable`, `disable`.
func (o RouterOspfAreaRangeOutput) SubstituteStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaRange) *string { return v.SubstituteStatus }).(pulumi.StringPtrOutput)
}

type RouterOspfAreaRangeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaRange)(nil)).Elem()
}

func (o RouterOspfAreaRangeArrayOutput) ToRouterOspfAreaRangeArrayOutput() RouterOspfAreaRangeArrayOutput {
	return o
}

func (o RouterOspfAreaRangeArrayOutput) ToRouterOspfAreaRangeArrayOutputWithContext(ctx context.Context) RouterOspfAreaRangeArrayOutput {
	return o
}

func (o RouterOspfAreaRangeArrayOutput) Index(i pulumi.IntInput) RouterOspfAreaRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfAreaRange {
		return vs[0].([]RouterOspfAreaRange)[vs[1].(int)]
	}).(RouterOspfAreaRangeOutput)
}

type RouterOspfAreaVirtualLink struct {
	// Authentication type.
	Authentication *string `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey *string `pulumi:"authenticationKey"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Message-digest key-chain name.
	Keychain *string `pulumi:"keychain"`
	// MD5 key.
	Md5Key *string `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain *string `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	//
	// The `md5Keys` block supports:
	Md5Keys []RouterOspfAreaVirtualLinkMd5Key `pulumi:"md5Keys"`
	// Virtual link entry name.
	Name *string `pulumi:"name"`
	// Peer IP.
	Peer *string `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
}

// RouterOspfAreaVirtualLinkInput is an input type that accepts RouterOspfAreaVirtualLinkArgs and RouterOspfAreaVirtualLinkOutput values.
// You can construct a concrete instance of `RouterOspfAreaVirtualLinkInput` via:
//
//	RouterOspfAreaVirtualLinkArgs{...}
type RouterOspfAreaVirtualLinkInput interface {
	pulumi.Input

	ToRouterOspfAreaVirtualLinkOutput() RouterOspfAreaVirtualLinkOutput
	ToRouterOspfAreaVirtualLinkOutputWithContext(context.Context) RouterOspfAreaVirtualLinkOutput
}

type RouterOspfAreaVirtualLinkArgs struct {
	// Authentication type.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey pulumi.StringPtrInput `pulumi:"authenticationKey"`
	// Dead interval.
	DeadInterval pulumi.IntPtrInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// Message-digest key-chain name.
	Keychain pulumi.StringPtrInput `pulumi:"keychain"`
	// MD5 key.
	Md5Key pulumi.StringPtrInput `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringPtrInput `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	//
	// The `md5Keys` block supports:
	Md5Keys RouterOspfAreaVirtualLinkMd5KeyArrayInput `pulumi:"md5Keys"`
	// Virtual link entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Peer IP.
	Peer pulumi.StringPtrInput `pulumi:"peer"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput `pulumi:"retransmitInterval"`
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput `pulumi:"transmitDelay"`
}

func (RouterOspfAreaVirtualLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaVirtualLink)(nil)).Elem()
}

func (i RouterOspfAreaVirtualLinkArgs) ToRouterOspfAreaVirtualLinkOutput() RouterOspfAreaVirtualLinkOutput {
	return i.ToRouterOspfAreaVirtualLinkOutputWithContext(context.Background())
}

func (i RouterOspfAreaVirtualLinkArgs) ToRouterOspfAreaVirtualLinkOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaVirtualLinkOutput)
}

// RouterOspfAreaVirtualLinkArrayInput is an input type that accepts RouterOspfAreaVirtualLinkArray and RouterOspfAreaVirtualLinkArrayOutput values.
// You can construct a concrete instance of `RouterOspfAreaVirtualLinkArrayInput` via:
//
//	RouterOspfAreaVirtualLinkArray{ RouterOspfAreaVirtualLinkArgs{...} }
type RouterOspfAreaVirtualLinkArrayInput interface {
	pulumi.Input

	ToRouterOspfAreaVirtualLinkArrayOutput() RouterOspfAreaVirtualLinkArrayOutput
	ToRouterOspfAreaVirtualLinkArrayOutputWithContext(context.Context) RouterOspfAreaVirtualLinkArrayOutput
}

type RouterOspfAreaVirtualLinkArray []RouterOspfAreaVirtualLinkInput

func (RouterOspfAreaVirtualLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaVirtualLink)(nil)).Elem()
}

func (i RouterOspfAreaVirtualLinkArray) ToRouterOspfAreaVirtualLinkArrayOutput() RouterOspfAreaVirtualLinkArrayOutput {
	return i.ToRouterOspfAreaVirtualLinkArrayOutputWithContext(context.Background())
}

func (i RouterOspfAreaVirtualLinkArray) ToRouterOspfAreaVirtualLinkArrayOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaVirtualLinkArrayOutput)
}

type RouterOspfAreaVirtualLinkOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaVirtualLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaVirtualLink)(nil)).Elem()
}

func (o RouterOspfAreaVirtualLinkOutput) ToRouterOspfAreaVirtualLinkOutput() RouterOspfAreaVirtualLinkOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkOutput) ToRouterOspfAreaVirtualLinkOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkOutput {
	return o
}

// Authentication type.
func (o RouterOspfAreaVirtualLinkOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Authentication key.
func (o RouterOspfAreaVirtualLinkOutput) AuthenticationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.AuthenticationKey }).(pulumi.StringPtrOutput)
}

// Dead interval.
func (o RouterOspfAreaVirtualLinkOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

// Hello interval.
func (o RouterOspfAreaVirtualLinkOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Message-digest key-chain name.
func (o RouterOspfAreaVirtualLinkOutput) Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Keychain }).(pulumi.StringPtrOutput)
}

// MD5 key.
func (o RouterOspfAreaVirtualLinkOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

// Authentication MD5 key-chain name.
func (o RouterOspfAreaVirtualLinkOutput) Md5Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Md5Keychain }).(pulumi.StringPtrOutput)
}

// MD5 key. The structure of `md5Keys` block is documented below.
//
// The `md5Keys` block supports:
func (o RouterOspfAreaVirtualLinkOutput) Md5Keys() RouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) []RouterOspfAreaVirtualLinkMd5Key { return v.Md5Keys }).(RouterOspfAreaVirtualLinkMd5KeyArrayOutput)
}

// Virtual link entry name.
func (o RouterOspfAreaVirtualLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Peer IP.
func (o RouterOspfAreaVirtualLinkOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

// Retransmit interval.
func (o RouterOspfAreaVirtualLinkOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

// Transmit delay.
func (o RouterOspfAreaVirtualLinkOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type RouterOspfAreaVirtualLinkArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaVirtualLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaVirtualLink)(nil)).Elem()
}

func (o RouterOspfAreaVirtualLinkArrayOutput) ToRouterOspfAreaVirtualLinkArrayOutput() RouterOspfAreaVirtualLinkArrayOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkArrayOutput) ToRouterOspfAreaVirtualLinkArrayOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkArrayOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkArrayOutput) Index(i pulumi.IntInput) RouterOspfAreaVirtualLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfAreaVirtualLink {
		return vs[0].([]RouterOspfAreaVirtualLink)[vs[1].(int)]
	}).(RouterOspfAreaVirtualLinkOutput)
}

type RouterOspfAreaVirtualLinkMd5Key struct {
	// Area entry IP address.
	Id *int `pulumi:"id"`
	// Password for the key.
	KeyString *string `pulumi:"keyString"`
}

// RouterOspfAreaVirtualLinkMd5KeyInput is an input type that accepts RouterOspfAreaVirtualLinkMd5KeyArgs and RouterOspfAreaVirtualLinkMd5KeyOutput values.
// You can construct a concrete instance of `RouterOspfAreaVirtualLinkMd5KeyInput` via:
//
//	RouterOspfAreaVirtualLinkMd5KeyArgs{...}
type RouterOspfAreaVirtualLinkMd5KeyInput interface {
	pulumi.Input

	ToRouterOspfAreaVirtualLinkMd5KeyOutput() RouterOspfAreaVirtualLinkMd5KeyOutput
	ToRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(context.Context) RouterOspfAreaVirtualLinkMd5KeyOutput
}

type RouterOspfAreaVirtualLinkMd5KeyArgs struct {
	// Area entry IP address.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Password for the key.
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
}

func (RouterOspfAreaVirtualLinkMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (i RouterOspfAreaVirtualLinkMd5KeyArgs) ToRouterOspfAreaVirtualLinkMd5KeyOutput() RouterOspfAreaVirtualLinkMd5KeyOutput {
	return i.ToRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(context.Background())
}

func (i RouterOspfAreaVirtualLinkMd5KeyArgs) ToRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaVirtualLinkMd5KeyOutput)
}

// RouterOspfAreaVirtualLinkMd5KeyArrayInput is an input type that accepts RouterOspfAreaVirtualLinkMd5KeyArray and RouterOspfAreaVirtualLinkMd5KeyArrayOutput values.
// You can construct a concrete instance of `RouterOspfAreaVirtualLinkMd5KeyArrayInput` via:
//
//	RouterOspfAreaVirtualLinkMd5KeyArray{ RouterOspfAreaVirtualLinkMd5KeyArgs{...} }
type RouterOspfAreaVirtualLinkMd5KeyArrayInput interface {
	pulumi.Input

	ToRouterOspfAreaVirtualLinkMd5KeyArrayOutput() RouterOspfAreaVirtualLinkMd5KeyArrayOutput
	ToRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(context.Context) RouterOspfAreaVirtualLinkMd5KeyArrayOutput
}

type RouterOspfAreaVirtualLinkMd5KeyArray []RouterOspfAreaVirtualLinkMd5KeyInput

func (RouterOspfAreaVirtualLinkMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (i RouterOspfAreaVirtualLinkMd5KeyArray) ToRouterOspfAreaVirtualLinkMd5KeyArrayOutput() RouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return i.ToRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(context.Background())
}

func (i RouterOspfAreaVirtualLinkMd5KeyArray) ToRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaVirtualLinkMd5KeyArrayOutput)
}

type RouterOspfAreaVirtualLinkMd5KeyOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaVirtualLinkMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (o RouterOspfAreaVirtualLinkMd5KeyOutput) ToRouterOspfAreaVirtualLinkMd5KeyOutput() RouterOspfAreaVirtualLinkMd5KeyOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkMd5KeyOutput) ToRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkMd5KeyOutput {
	return o
}

// Area entry IP address.
func (o RouterOspfAreaVirtualLinkMd5KeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLinkMd5Key) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Password for the key.
func (o RouterOspfAreaVirtualLinkMd5KeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLinkMd5Key) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

type RouterOspfAreaVirtualLinkMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaVirtualLinkMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (o RouterOspfAreaVirtualLinkMd5KeyArrayOutput) ToRouterOspfAreaVirtualLinkMd5KeyArrayOutput() RouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkMd5KeyArrayOutput) ToRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkMd5KeyArrayOutput) Index(i pulumi.IntInput) RouterOspfAreaVirtualLinkMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfAreaVirtualLinkMd5Key {
		return vs[0].([]RouterOspfAreaVirtualLinkMd5Key)[vs[1].(int)]
	}).(RouterOspfAreaVirtualLinkMd5KeyOutput)
}

type RouterOspfDistributeList struct {
	// Access list name.
	AccessList *string `pulumi:"accessList"`
	// Distribute list entry ID.
	Id *int `pulumi:"id"`
	// Protocol type. Valid values: `connected`, `static`, `rip`.
	Protocol *string `pulumi:"protocol"`
}

// RouterOspfDistributeListInput is an input type that accepts RouterOspfDistributeListArgs and RouterOspfDistributeListOutput values.
// You can construct a concrete instance of `RouterOspfDistributeListInput` via:
//
//	RouterOspfDistributeListArgs{...}
type RouterOspfDistributeListInput interface {
	pulumi.Input

	ToRouterOspfDistributeListOutput() RouterOspfDistributeListOutput
	ToRouterOspfDistributeListOutputWithContext(context.Context) RouterOspfDistributeListOutput
}

type RouterOspfDistributeListArgs struct {
	// Access list name.
	AccessList pulumi.StringPtrInput `pulumi:"accessList"`
	// Distribute list entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Protocol type. Valid values: `connected`, `static`, `rip`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (RouterOspfDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfDistributeList)(nil)).Elem()
}

func (i RouterOspfDistributeListArgs) ToRouterOspfDistributeListOutput() RouterOspfDistributeListOutput {
	return i.ToRouterOspfDistributeListOutputWithContext(context.Background())
}

func (i RouterOspfDistributeListArgs) ToRouterOspfDistributeListOutputWithContext(ctx context.Context) RouterOspfDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfDistributeListOutput)
}

// RouterOspfDistributeListArrayInput is an input type that accepts RouterOspfDistributeListArray and RouterOspfDistributeListArrayOutput values.
// You can construct a concrete instance of `RouterOspfDistributeListArrayInput` via:
//
//	RouterOspfDistributeListArray{ RouterOspfDistributeListArgs{...} }
type RouterOspfDistributeListArrayInput interface {
	pulumi.Input

	ToRouterOspfDistributeListArrayOutput() RouterOspfDistributeListArrayOutput
	ToRouterOspfDistributeListArrayOutputWithContext(context.Context) RouterOspfDistributeListArrayOutput
}

type RouterOspfDistributeListArray []RouterOspfDistributeListInput

func (RouterOspfDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfDistributeList)(nil)).Elem()
}

func (i RouterOspfDistributeListArray) ToRouterOspfDistributeListArrayOutput() RouterOspfDistributeListArrayOutput {
	return i.ToRouterOspfDistributeListArrayOutputWithContext(context.Background())
}

func (i RouterOspfDistributeListArray) ToRouterOspfDistributeListArrayOutputWithContext(ctx context.Context) RouterOspfDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfDistributeListArrayOutput)
}

type RouterOspfDistributeListOutput struct{ *pulumi.OutputState }

func (RouterOspfDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfDistributeList)(nil)).Elem()
}

func (o RouterOspfDistributeListOutput) ToRouterOspfDistributeListOutput() RouterOspfDistributeListOutput {
	return o
}

func (o RouterOspfDistributeListOutput) ToRouterOspfDistributeListOutputWithContext(ctx context.Context) RouterOspfDistributeListOutput {
	return o
}

// Access list name.
func (o RouterOspfDistributeListOutput) AccessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfDistributeList) *string { return v.AccessList }).(pulumi.StringPtrOutput)
}

// Distribute list entry ID.
func (o RouterOspfDistributeListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfDistributeList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Protocol type. Valid values: `connected`, `static`, `rip`.
func (o RouterOspfDistributeListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfDistributeList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type RouterOspfDistributeListArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfDistributeList)(nil)).Elem()
}

func (o RouterOspfDistributeListArrayOutput) ToRouterOspfDistributeListArrayOutput() RouterOspfDistributeListArrayOutput {
	return o
}

func (o RouterOspfDistributeListArrayOutput) ToRouterOspfDistributeListArrayOutputWithContext(ctx context.Context) RouterOspfDistributeListArrayOutput {
	return o
}

func (o RouterOspfDistributeListArrayOutput) Index(i pulumi.IntInput) RouterOspfDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfDistributeList {
		return vs[0].([]RouterOspfDistributeList)[vs[1].(int)]
	}).(RouterOspfDistributeListOutput)
}

type RouterOspfNeighborType struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// Neighbor entry ID.
	Id *int `pulumi:"id"`
	// Interface IP address of the neighbor.
	Ip *string `pulumi:"ip"`
	// Poll interval time in seconds.
	PollInterval *int `pulumi:"pollInterval"`
	// Priority.
	Priority *int `pulumi:"priority"`
}

// RouterOspfNeighborTypeInput is an input type that accepts RouterOspfNeighborTypeArgs and RouterOspfNeighborTypeOutput values.
// You can construct a concrete instance of `RouterOspfNeighborTypeInput` via:
//
//	RouterOspfNeighborTypeArgs{...}
type RouterOspfNeighborTypeInput interface {
	pulumi.Input

	ToRouterOspfNeighborTypeOutput() RouterOspfNeighborTypeOutput
	ToRouterOspfNeighborTypeOutputWithContext(context.Context) RouterOspfNeighborTypeOutput
}

type RouterOspfNeighborTypeArgs struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// Neighbor entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface IP address of the neighbor.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Poll interval time in seconds.
	PollInterval pulumi.IntPtrInput `pulumi:"pollInterval"`
	// Priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (RouterOspfNeighborTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfNeighborType)(nil)).Elem()
}

func (i RouterOspfNeighborTypeArgs) ToRouterOspfNeighborTypeOutput() RouterOspfNeighborTypeOutput {
	return i.ToRouterOspfNeighborTypeOutputWithContext(context.Background())
}

func (i RouterOspfNeighborTypeArgs) ToRouterOspfNeighborTypeOutputWithContext(ctx context.Context) RouterOspfNeighborTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfNeighborTypeOutput)
}

// RouterOspfNeighborTypeArrayInput is an input type that accepts RouterOspfNeighborTypeArray and RouterOspfNeighborTypeArrayOutput values.
// You can construct a concrete instance of `RouterOspfNeighborTypeArrayInput` via:
//
//	RouterOspfNeighborTypeArray{ RouterOspfNeighborTypeArgs{...} }
type RouterOspfNeighborTypeArrayInput interface {
	pulumi.Input

	ToRouterOspfNeighborTypeArrayOutput() RouterOspfNeighborTypeArrayOutput
	ToRouterOspfNeighborTypeArrayOutputWithContext(context.Context) RouterOspfNeighborTypeArrayOutput
}

type RouterOspfNeighborTypeArray []RouterOspfNeighborTypeInput

func (RouterOspfNeighborTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfNeighborType)(nil)).Elem()
}

func (i RouterOspfNeighborTypeArray) ToRouterOspfNeighborTypeArrayOutput() RouterOspfNeighborTypeArrayOutput {
	return i.ToRouterOspfNeighborTypeArrayOutputWithContext(context.Background())
}

func (i RouterOspfNeighborTypeArray) ToRouterOspfNeighborTypeArrayOutputWithContext(ctx context.Context) RouterOspfNeighborTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfNeighborTypeArrayOutput)
}

type RouterOspfNeighborTypeOutput struct{ *pulumi.OutputState }

func (RouterOspfNeighborTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfNeighborType)(nil)).Elem()
}

func (o RouterOspfNeighborTypeOutput) ToRouterOspfNeighborTypeOutput() RouterOspfNeighborTypeOutput {
	return o
}

func (o RouterOspfNeighborTypeOutput) ToRouterOspfNeighborTypeOutputWithContext(ctx context.Context) RouterOspfNeighborTypeOutput {
	return o
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o RouterOspfNeighborTypeOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfNeighborType) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// Neighbor entry ID.
func (o RouterOspfNeighborTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfNeighborType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface IP address of the neighbor.
func (o RouterOspfNeighborTypeOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfNeighborType) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Poll interval time in seconds.
func (o RouterOspfNeighborTypeOutput) PollInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfNeighborType) *int { return v.PollInterval }).(pulumi.IntPtrOutput)
}

// Priority.
func (o RouterOspfNeighborTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfNeighborType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type RouterOspfNeighborTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfNeighborTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfNeighborType)(nil)).Elem()
}

func (o RouterOspfNeighborTypeArrayOutput) ToRouterOspfNeighborTypeArrayOutput() RouterOspfNeighborTypeArrayOutput {
	return o
}

func (o RouterOspfNeighborTypeArrayOutput) ToRouterOspfNeighborTypeArrayOutputWithContext(ctx context.Context) RouterOspfNeighborTypeArrayOutput {
	return o
}

func (o RouterOspfNeighborTypeArrayOutput) Index(i pulumi.IntInput) RouterOspfNeighborTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfNeighborType {
		return vs[0].([]RouterOspfNeighborType)[vs[1].(int)]
	}).(RouterOspfNeighborTypeOutput)
}

type RouterOspfNetworkType struct {
	// Attach the network to area.
	Area *string `pulumi:"area"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Network entry ID.
	Id *int `pulumi:"id"`
	// Prefix.
	Prefix *string `pulumi:"prefix"`
}

// RouterOspfNetworkTypeInput is an input type that accepts RouterOspfNetworkTypeArgs and RouterOspfNetworkTypeOutput values.
// You can construct a concrete instance of `RouterOspfNetworkTypeInput` via:
//
//	RouterOspfNetworkTypeArgs{...}
type RouterOspfNetworkTypeInput interface {
	pulumi.Input

	ToRouterOspfNetworkTypeOutput() RouterOspfNetworkTypeOutput
	ToRouterOspfNetworkTypeOutputWithContext(context.Context) RouterOspfNetworkTypeOutput
}

type RouterOspfNetworkTypeArgs struct {
	// Attach the network to area.
	Area pulumi.StringPtrInput `pulumi:"area"`
	// Comment.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Network entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterOspfNetworkTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfNetworkType)(nil)).Elem()
}

func (i RouterOspfNetworkTypeArgs) ToRouterOspfNetworkTypeOutput() RouterOspfNetworkTypeOutput {
	return i.ToRouterOspfNetworkTypeOutputWithContext(context.Background())
}

func (i RouterOspfNetworkTypeArgs) ToRouterOspfNetworkTypeOutputWithContext(ctx context.Context) RouterOspfNetworkTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfNetworkTypeOutput)
}

// RouterOspfNetworkTypeArrayInput is an input type that accepts RouterOspfNetworkTypeArray and RouterOspfNetworkTypeArrayOutput values.
// You can construct a concrete instance of `RouterOspfNetworkTypeArrayInput` via:
//
//	RouterOspfNetworkTypeArray{ RouterOspfNetworkTypeArgs{...} }
type RouterOspfNetworkTypeArrayInput interface {
	pulumi.Input

	ToRouterOspfNetworkTypeArrayOutput() RouterOspfNetworkTypeArrayOutput
	ToRouterOspfNetworkTypeArrayOutputWithContext(context.Context) RouterOspfNetworkTypeArrayOutput
}

type RouterOspfNetworkTypeArray []RouterOspfNetworkTypeInput

func (RouterOspfNetworkTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfNetworkType)(nil)).Elem()
}

func (i RouterOspfNetworkTypeArray) ToRouterOspfNetworkTypeArrayOutput() RouterOspfNetworkTypeArrayOutput {
	return i.ToRouterOspfNetworkTypeArrayOutputWithContext(context.Background())
}

func (i RouterOspfNetworkTypeArray) ToRouterOspfNetworkTypeArrayOutputWithContext(ctx context.Context) RouterOspfNetworkTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfNetworkTypeArrayOutput)
}

type RouterOspfNetworkTypeOutput struct{ *pulumi.OutputState }

func (RouterOspfNetworkTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfNetworkType)(nil)).Elem()
}

func (o RouterOspfNetworkTypeOutput) ToRouterOspfNetworkTypeOutput() RouterOspfNetworkTypeOutput {
	return o
}

func (o RouterOspfNetworkTypeOutput) ToRouterOspfNetworkTypeOutputWithContext(ctx context.Context) RouterOspfNetworkTypeOutput {
	return o
}

// Attach the network to area.
func (o RouterOspfNetworkTypeOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfNetworkType) *string { return v.Area }).(pulumi.StringPtrOutput)
}

// Comment.
func (o RouterOspfNetworkTypeOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfNetworkType) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Network entry ID.
func (o RouterOspfNetworkTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfNetworkType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Prefix.
func (o RouterOspfNetworkTypeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfNetworkType) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterOspfNetworkTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfNetworkTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfNetworkType)(nil)).Elem()
}

func (o RouterOspfNetworkTypeArrayOutput) ToRouterOspfNetworkTypeArrayOutput() RouterOspfNetworkTypeArrayOutput {
	return o
}

func (o RouterOspfNetworkTypeArrayOutput) ToRouterOspfNetworkTypeArrayOutputWithContext(ctx context.Context) RouterOspfNetworkTypeArrayOutput {
	return o
}

func (o RouterOspfNetworkTypeArrayOutput) Index(i pulumi.IntInput) RouterOspfNetworkTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfNetworkType {
		return vs[0].([]RouterOspfNetworkType)[vs[1].(int)]
	}).(RouterOspfNetworkTypeOutput)
}

type RouterOspfOspfInterfaceType struct {
	// Authentication type.
	Authentication *string `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey *string `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
	DatabaseFilterOut *string `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier *int `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface *string `pulumi:"interface"`
	// IP address.
	Ip *string `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain *string `pulumi:"keychain"`
	// MD5 key.
	Md5Key *string `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain *string `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	//
	// The `md5Keys` block supports:
	Md5Keys []RouterOspfOspfInterfaceMd5Key `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu *int `pulumi:"mtu"`
	// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
	MtuIgnore *string `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name *string `pulumi:"name"`
	// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType *string `pulumi:"networkType"`
	// Prefix length.
	PrefixLength *int `pulumi:"prefixLength"`
	// Priority.
	Priority *int `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout *int `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Enable/disable status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
}

// RouterOspfOspfInterfaceTypeInput is an input type that accepts RouterOspfOspfInterfaceTypeArgs and RouterOspfOspfInterfaceTypeOutput values.
// You can construct a concrete instance of `RouterOspfOspfInterfaceTypeInput` via:
//
//	RouterOspfOspfInterfaceTypeArgs{...}
type RouterOspfOspfInterfaceTypeInput interface {
	pulumi.Input

	ToRouterOspfOspfInterfaceTypeOutput() RouterOspfOspfInterfaceTypeOutput
	ToRouterOspfOspfInterfaceTypeOutputWithContext(context.Context) RouterOspfOspfInterfaceTypeOutput
}

type RouterOspfOspfInterfaceTypeArgs struct {
	// Authentication type.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey pulumi.StringPtrInput `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Comment.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
	DatabaseFilterOut pulumi.StringPtrInput `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval pulumi.IntPtrInput `pulumi:"deadInterval"`
	// Hello interval.
	HelloInterval pulumi.IntPtrInput `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier pulumi.IntPtrInput `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IP address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain pulumi.StringPtrInput `pulumi:"keychain"`
	// MD5 key.
	Md5Key pulumi.StringPtrInput `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringPtrInput `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	//
	// The `md5Keys` block supports:
	Md5Keys RouterOspfOspfInterfaceMd5KeyArrayInput `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu pulumi.IntPtrInput `pulumi:"mtu"`
	// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
	MtuIgnore pulumi.StringPtrInput `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// Prefix length.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// Priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout pulumi.IntPtrInput `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput `pulumi:"retransmitInterval"`
	// Enable/disable status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput `pulumi:"transmitDelay"`
}

func (RouterOspfOspfInterfaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfOspfInterfaceType)(nil)).Elem()
}

func (i RouterOspfOspfInterfaceTypeArgs) ToRouterOspfOspfInterfaceTypeOutput() RouterOspfOspfInterfaceTypeOutput {
	return i.ToRouterOspfOspfInterfaceTypeOutputWithContext(context.Background())
}

func (i RouterOspfOspfInterfaceTypeArgs) ToRouterOspfOspfInterfaceTypeOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfOspfInterfaceTypeOutput)
}

// RouterOspfOspfInterfaceTypeArrayInput is an input type that accepts RouterOspfOspfInterfaceTypeArray and RouterOspfOspfInterfaceTypeArrayOutput values.
// You can construct a concrete instance of `RouterOspfOspfInterfaceTypeArrayInput` via:
//
//	RouterOspfOspfInterfaceTypeArray{ RouterOspfOspfInterfaceTypeArgs{...} }
type RouterOspfOspfInterfaceTypeArrayInput interface {
	pulumi.Input

	ToRouterOspfOspfInterfaceTypeArrayOutput() RouterOspfOspfInterfaceTypeArrayOutput
	ToRouterOspfOspfInterfaceTypeArrayOutputWithContext(context.Context) RouterOspfOspfInterfaceTypeArrayOutput
}

type RouterOspfOspfInterfaceTypeArray []RouterOspfOspfInterfaceTypeInput

func (RouterOspfOspfInterfaceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfOspfInterfaceType)(nil)).Elem()
}

func (i RouterOspfOspfInterfaceTypeArray) ToRouterOspfOspfInterfaceTypeArrayOutput() RouterOspfOspfInterfaceTypeArrayOutput {
	return i.ToRouterOspfOspfInterfaceTypeArrayOutputWithContext(context.Background())
}

func (i RouterOspfOspfInterfaceTypeArray) ToRouterOspfOspfInterfaceTypeArrayOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfOspfInterfaceTypeArrayOutput)
}

type RouterOspfOspfInterfaceTypeOutput struct{ *pulumi.OutputState }

func (RouterOspfOspfInterfaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfOspfInterfaceType)(nil)).Elem()
}

func (o RouterOspfOspfInterfaceTypeOutput) ToRouterOspfOspfInterfaceTypeOutput() RouterOspfOspfInterfaceTypeOutput {
	return o
}

func (o RouterOspfOspfInterfaceTypeOutput) ToRouterOspfOspfInterfaceTypeOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceTypeOutput {
	return o
}

// Authentication type.
func (o RouterOspfOspfInterfaceTypeOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Authentication key.
func (o RouterOspfOspfInterfaceTypeOutput) AuthenticationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.AuthenticationKey }).(pulumi.StringPtrOutput)
}

// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
func (o RouterOspfOspfInterfaceTypeOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Comment.
func (o RouterOspfOspfInterfaceTypeOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o RouterOspfOspfInterfaceTypeOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
func (o RouterOspfOspfInterfaceTypeOutput) DatabaseFilterOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.DatabaseFilterOut }).(pulumi.StringPtrOutput)
}

// Dead interval.
func (o RouterOspfOspfInterfaceTypeOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

// Hello interval.
func (o RouterOspfOspfInterfaceTypeOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Number of hello packets within dead interval.
func (o RouterOspfOspfInterfaceTypeOutput) HelloMultiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.HelloMultiplier }).(pulumi.IntPtrOutput)
}

// Configuration interface name.
func (o RouterOspfOspfInterfaceTypeOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IP address.
func (o RouterOspfOspfInterfaceTypeOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Message-digest key-chain name.
func (o RouterOspfOspfInterfaceTypeOutput) Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Keychain }).(pulumi.StringPtrOutput)
}

// MD5 key.
func (o RouterOspfOspfInterfaceTypeOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

// Authentication MD5 key-chain name.
func (o RouterOspfOspfInterfaceTypeOutput) Md5Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Md5Keychain }).(pulumi.StringPtrOutput)
}

// MD5 key. The structure of `md5Keys` block is documented below.
//
// The `md5Keys` block supports:
func (o RouterOspfOspfInterfaceTypeOutput) Md5Keys() RouterOspfOspfInterfaceMd5KeyArrayOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) []RouterOspfOspfInterfaceMd5Key { return v.Md5Keys }).(RouterOspfOspfInterfaceMd5KeyArrayOutput)
}

// MTU for database description packets.
func (o RouterOspfOspfInterfaceTypeOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
func (o RouterOspfOspfInterfaceTypeOutput) MtuIgnore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.MtuIgnore }).(pulumi.StringPtrOutput)
}

// Interface entry name.
func (o RouterOspfOspfInterfaceTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
func (o RouterOspfOspfInterfaceTypeOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// Prefix length.
func (o RouterOspfOspfInterfaceTypeOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// Priority.
func (o RouterOspfOspfInterfaceTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Graceful restart neighbor resynchronization timeout.
func (o RouterOspfOspfInterfaceTypeOutput) ResyncTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.ResyncTimeout }).(pulumi.IntPtrOutput)
}

// Retransmit interval.
func (o RouterOspfOspfInterfaceTypeOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable status. Valid values: `disable`, `enable`.
func (o RouterOspfOspfInterfaceTypeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Transmit delay.
func (o RouterOspfOspfInterfaceTypeOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type RouterOspfOspfInterfaceTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfOspfInterfaceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfOspfInterfaceType)(nil)).Elem()
}

func (o RouterOspfOspfInterfaceTypeArrayOutput) ToRouterOspfOspfInterfaceTypeArrayOutput() RouterOspfOspfInterfaceTypeArrayOutput {
	return o
}

func (o RouterOspfOspfInterfaceTypeArrayOutput) ToRouterOspfOspfInterfaceTypeArrayOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceTypeArrayOutput {
	return o
}

func (o RouterOspfOspfInterfaceTypeArrayOutput) Index(i pulumi.IntInput) RouterOspfOspfInterfaceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfOspfInterfaceType {
		return vs[0].([]RouterOspfOspfInterfaceType)[vs[1].(int)]
	}).(RouterOspfOspfInterfaceTypeOutput)
}

type RouterOspfOspfInterfaceMd5Key struct {
	// Area entry IP address.
	Id *int `pulumi:"id"`
	// Password for the key.
	KeyString *string `pulumi:"keyString"`
}

// RouterOspfOspfInterfaceMd5KeyInput is an input type that accepts RouterOspfOspfInterfaceMd5KeyArgs and RouterOspfOspfInterfaceMd5KeyOutput values.
// You can construct a concrete instance of `RouterOspfOspfInterfaceMd5KeyInput` via:
//
//	RouterOspfOspfInterfaceMd5KeyArgs{...}
type RouterOspfOspfInterfaceMd5KeyInput interface {
	pulumi.Input

	ToRouterOspfOspfInterfaceMd5KeyOutput() RouterOspfOspfInterfaceMd5KeyOutput
	ToRouterOspfOspfInterfaceMd5KeyOutputWithContext(context.Context) RouterOspfOspfInterfaceMd5KeyOutput
}

type RouterOspfOspfInterfaceMd5KeyArgs struct {
	// Area entry IP address.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Password for the key.
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
}

func (RouterOspfOspfInterfaceMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i RouterOspfOspfInterfaceMd5KeyArgs) ToRouterOspfOspfInterfaceMd5KeyOutput() RouterOspfOspfInterfaceMd5KeyOutput {
	return i.ToRouterOspfOspfInterfaceMd5KeyOutputWithContext(context.Background())
}

func (i RouterOspfOspfInterfaceMd5KeyArgs) ToRouterOspfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfOspfInterfaceMd5KeyOutput)
}

// RouterOspfOspfInterfaceMd5KeyArrayInput is an input type that accepts RouterOspfOspfInterfaceMd5KeyArray and RouterOspfOspfInterfaceMd5KeyArrayOutput values.
// You can construct a concrete instance of `RouterOspfOspfInterfaceMd5KeyArrayInput` via:
//
//	RouterOspfOspfInterfaceMd5KeyArray{ RouterOspfOspfInterfaceMd5KeyArgs{...} }
type RouterOspfOspfInterfaceMd5KeyArrayInput interface {
	pulumi.Input

	ToRouterOspfOspfInterfaceMd5KeyArrayOutput() RouterOspfOspfInterfaceMd5KeyArrayOutput
	ToRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(context.Context) RouterOspfOspfInterfaceMd5KeyArrayOutput
}

type RouterOspfOspfInterfaceMd5KeyArray []RouterOspfOspfInterfaceMd5KeyInput

func (RouterOspfOspfInterfaceMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i RouterOspfOspfInterfaceMd5KeyArray) ToRouterOspfOspfInterfaceMd5KeyArrayOutput() RouterOspfOspfInterfaceMd5KeyArrayOutput {
	return i.ToRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(context.Background())
}

func (i RouterOspfOspfInterfaceMd5KeyArray) ToRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfOspfInterfaceMd5KeyArrayOutput)
}

type RouterOspfOspfInterfaceMd5KeyOutput struct{ *pulumi.OutputState }

func (RouterOspfOspfInterfaceMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o RouterOspfOspfInterfaceMd5KeyOutput) ToRouterOspfOspfInterfaceMd5KeyOutput() RouterOspfOspfInterfaceMd5KeyOutput {
	return o
}

func (o RouterOspfOspfInterfaceMd5KeyOutput) ToRouterOspfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceMd5KeyOutput {
	return o
}

// Area entry IP address.
func (o RouterOspfOspfInterfaceMd5KeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceMd5Key) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Password for the key.
func (o RouterOspfOspfInterfaceMd5KeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceMd5Key) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

type RouterOspfOspfInterfaceMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfOspfInterfaceMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o RouterOspfOspfInterfaceMd5KeyArrayOutput) ToRouterOspfOspfInterfaceMd5KeyArrayOutput() RouterOspfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o RouterOspfOspfInterfaceMd5KeyArrayOutput) ToRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o RouterOspfOspfInterfaceMd5KeyArrayOutput) Index(i pulumi.IntInput) RouterOspfOspfInterfaceMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfOspfInterfaceMd5Key {
		return vs[0].([]RouterOspfOspfInterfaceMd5Key)[vs[1].(int)]
	}).(RouterOspfOspfInterfaceMd5KeyOutput)
}

type RouterOspfPassiveInterface struct {
	// Passive interface name.
	Name *string `pulumi:"name"`
}

// RouterOspfPassiveInterfaceInput is an input type that accepts RouterOspfPassiveInterfaceArgs and RouterOspfPassiveInterfaceOutput values.
// You can construct a concrete instance of `RouterOspfPassiveInterfaceInput` via:
//
//	RouterOspfPassiveInterfaceArgs{...}
type RouterOspfPassiveInterfaceInput interface {
	pulumi.Input

	ToRouterOspfPassiveInterfaceOutput() RouterOspfPassiveInterfaceOutput
	ToRouterOspfPassiveInterfaceOutputWithContext(context.Context) RouterOspfPassiveInterfaceOutput
}

type RouterOspfPassiveInterfaceArgs struct {
	// Passive interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterOspfPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfPassiveInterface)(nil)).Elem()
}

func (i RouterOspfPassiveInterfaceArgs) ToRouterOspfPassiveInterfaceOutput() RouterOspfPassiveInterfaceOutput {
	return i.ToRouterOspfPassiveInterfaceOutputWithContext(context.Background())
}

func (i RouterOspfPassiveInterfaceArgs) ToRouterOspfPassiveInterfaceOutputWithContext(ctx context.Context) RouterOspfPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfPassiveInterfaceOutput)
}

// RouterOspfPassiveInterfaceArrayInput is an input type that accepts RouterOspfPassiveInterfaceArray and RouterOspfPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterOspfPassiveInterfaceArrayInput` via:
//
//	RouterOspfPassiveInterfaceArray{ RouterOspfPassiveInterfaceArgs{...} }
type RouterOspfPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToRouterOspfPassiveInterfaceArrayOutput() RouterOspfPassiveInterfaceArrayOutput
	ToRouterOspfPassiveInterfaceArrayOutputWithContext(context.Context) RouterOspfPassiveInterfaceArrayOutput
}

type RouterOspfPassiveInterfaceArray []RouterOspfPassiveInterfaceInput

func (RouterOspfPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfPassiveInterface)(nil)).Elem()
}

func (i RouterOspfPassiveInterfaceArray) ToRouterOspfPassiveInterfaceArrayOutput() RouterOspfPassiveInterfaceArrayOutput {
	return i.ToRouterOspfPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterOspfPassiveInterfaceArray) ToRouterOspfPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterOspfPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfPassiveInterfaceArrayOutput)
}

type RouterOspfPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (RouterOspfPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfPassiveInterface)(nil)).Elem()
}

func (o RouterOspfPassiveInterfaceOutput) ToRouterOspfPassiveInterfaceOutput() RouterOspfPassiveInterfaceOutput {
	return o
}

func (o RouterOspfPassiveInterfaceOutput) ToRouterOspfPassiveInterfaceOutputWithContext(ctx context.Context) RouterOspfPassiveInterfaceOutput {
	return o
}

// Passive interface name.
func (o RouterOspfPassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfPassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterOspfPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfPassiveInterface)(nil)).Elem()
}

func (o RouterOspfPassiveInterfaceArrayOutput) ToRouterOspfPassiveInterfaceArrayOutput() RouterOspfPassiveInterfaceArrayOutput {
	return o
}

func (o RouterOspfPassiveInterfaceArrayOutput) ToRouterOspfPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterOspfPassiveInterfaceArrayOutput {
	return o
}

func (o RouterOspfPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) RouterOspfPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfPassiveInterface {
		return vs[0].([]RouterOspfPassiveInterface)[vs[1].(int)]
	}).(RouterOspfPassiveInterfaceOutput)
}

type RouterOspfRedistribute struct {
	// Redistribute metric setting.
	Metric *int `pulumi:"metric"`
	// Metric type. Valid values: `1`, `2`.
	MetricType *string `pulumi:"metricType"`
	// Redistribute name.
	Name *string `pulumi:"name"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Tag value.
	Tag *int `pulumi:"tag"`
}

// RouterOspfRedistributeInput is an input type that accepts RouterOspfRedistributeArgs and RouterOspfRedistributeOutput values.
// You can construct a concrete instance of `RouterOspfRedistributeInput` via:
//
//	RouterOspfRedistributeArgs{...}
type RouterOspfRedistributeInput interface {
	pulumi.Input

	ToRouterOspfRedistributeOutput() RouterOspfRedistributeOutput
	ToRouterOspfRedistributeOutputWithContext(context.Context) RouterOspfRedistributeOutput
}

type RouterOspfRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Metric type. Valid values: `1`, `2`.
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	// Redistribute name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Tag value.
	Tag pulumi.IntPtrInput `pulumi:"tag"`
}

func (RouterOspfRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfRedistribute)(nil)).Elem()
}

func (i RouterOspfRedistributeArgs) ToRouterOspfRedistributeOutput() RouterOspfRedistributeOutput {
	return i.ToRouterOspfRedistributeOutputWithContext(context.Background())
}

func (i RouterOspfRedistributeArgs) ToRouterOspfRedistributeOutputWithContext(ctx context.Context) RouterOspfRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfRedistributeOutput)
}

// RouterOspfRedistributeArrayInput is an input type that accepts RouterOspfRedistributeArray and RouterOspfRedistributeArrayOutput values.
// You can construct a concrete instance of `RouterOspfRedistributeArrayInput` via:
//
//	RouterOspfRedistributeArray{ RouterOspfRedistributeArgs{...} }
type RouterOspfRedistributeArrayInput interface {
	pulumi.Input

	ToRouterOspfRedistributeArrayOutput() RouterOspfRedistributeArrayOutput
	ToRouterOspfRedistributeArrayOutputWithContext(context.Context) RouterOspfRedistributeArrayOutput
}

type RouterOspfRedistributeArray []RouterOspfRedistributeInput

func (RouterOspfRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfRedistribute)(nil)).Elem()
}

func (i RouterOspfRedistributeArray) ToRouterOspfRedistributeArrayOutput() RouterOspfRedistributeArrayOutput {
	return i.ToRouterOspfRedistributeArrayOutputWithContext(context.Background())
}

func (i RouterOspfRedistributeArray) ToRouterOspfRedistributeArrayOutputWithContext(ctx context.Context) RouterOspfRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfRedistributeArrayOutput)
}

type RouterOspfRedistributeOutput struct{ *pulumi.OutputState }

func (RouterOspfRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfRedistribute)(nil)).Elem()
}

func (o RouterOspfRedistributeOutput) ToRouterOspfRedistributeOutput() RouterOspfRedistributeOutput {
	return o
}

func (o RouterOspfRedistributeOutput) ToRouterOspfRedistributeOutputWithContext(ctx context.Context) RouterOspfRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o RouterOspfRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Metric type. Valid values: `1`, `2`.
func (o RouterOspfRedistributeOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

// Redistribute name.
func (o RouterOspfRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o RouterOspfRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RouterOspfRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Tag value.
func (o RouterOspfRedistributeOutput) Tag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *int { return v.Tag }).(pulumi.IntPtrOutput)
}

type RouterOspfRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfRedistribute)(nil)).Elem()
}

func (o RouterOspfRedistributeArrayOutput) ToRouterOspfRedistributeArrayOutput() RouterOspfRedistributeArrayOutput {
	return o
}

func (o RouterOspfRedistributeArrayOutput) ToRouterOspfRedistributeArrayOutputWithContext(ctx context.Context) RouterOspfRedistributeArrayOutput {
	return o
}

func (o RouterOspfRedistributeArrayOutput) Index(i pulumi.IntInput) RouterOspfRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfRedistribute {
		return vs[0].([]RouterOspfRedistribute)[vs[1].(int)]
	}).(RouterOspfRedistributeOutput)
}

type RouterOspfSummaryAddress struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise *string `pulumi:"advertise"`
	// Summary address entry ID.
	Id *int `pulumi:"id"`
	// Prefix.
	Prefix *string `pulumi:"prefix"`
	// Tag value.
	Tag *int `pulumi:"tag"`
}

// RouterOspfSummaryAddressInput is an input type that accepts RouterOspfSummaryAddressArgs and RouterOspfSummaryAddressOutput values.
// You can construct a concrete instance of `RouterOspfSummaryAddressInput` via:
//
//	RouterOspfSummaryAddressArgs{...}
type RouterOspfSummaryAddressInput interface {
	pulumi.Input

	ToRouterOspfSummaryAddressOutput() RouterOspfSummaryAddressOutput
	ToRouterOspfSummaryAddressOutputWithContext(context.Context) RouterOspfSummaryAddressOutput
}

type RouterOspfSummaryAddressArgs struct {
	// Enable/disable advertise status. Valid values: `disable`, `enable`.
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	// Summary address entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Tag value.
	Tag pulumi.IntPtrInput `pulumi:"tag"`
}

func (RouterOspfSummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfSummaryAddress)(nil)).Elem()
}

func (i RouterOspfSummaryAddressArgs) ToRouterOspfSummaryAddressOutput() RouterOspfSummaryAddressOutput {
	return i.ToRouterOspfSummaryAddressOutputWithContext(context.Background())
}

func (i RouterOspfSummaryAddressArgs) ToRouterOspfSummaryAddressOutputWithContext(ctx context.Context) RouterOspfSummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfSummaryAddressOutput)
}

// RouterOspfSummaryAddressArrayInput is an input type that accepts RouterOspfSummaryAddressArray and RouterOspfSummaryAddressArrayOutput values.
// You can construct a concrete instance of `RouterOspfSummaryAddressArrayInput` via:
//
//	RouterOspfSummaryAddressArray{ RouterOspfSummaryAddressArgs{...} }
type RouterOspfSummaryAddressArrayInput interface {
	pulumi.Input

	ToRouterOspfSummaryAddressArrayOutput() RouterOspfSummaryAddressArrayOutput
	ToRouterOspfSummaryAddressArrayOutputWithContext(context.Context) RouterOspfSummaryAddressArrayOutput
}

type RouterOspfSummaryAddressArray []RouterOspfSummaryAddressInput

func (RouterOspfSummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfSummaryAddress)(nil)).Elem()
}

func (i RouterOspfSummaryAddressArray) ToRouterOspfSummaryAddressArrayOutput() RouterOspfSummaryAddressArrayOutput {
	return i.ToRouterOspfSummaryAddressArrayOutputWithContext(context.Background())
}

func (i RouterOspfSummaryAddressArray) ToRouterOspfSummaryAddressArrayOutputWithContext(ctx context.Context) RouterOspfSummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfSummaryAddressArrayOutput)
}

type RouterOspfSummaryAddressOutput struct{ *pulumi.OutputState }

func (RouterOspfSummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfSummaryAddress)(nil)).Elem()
}

func (o RouterOspfSummaryAddressOutput) ToRouterOspfSummaryAddressOutput() RouterOspfSummaryAddressOutput {
	return o
}

func (o RouterOspfSummaryAddressOutput) ToRouterOspfSummaryAddressOutputWithContext(ctx context.Context) RouterOspfSummaryAddressOutput {
	return o
}

// Enable/disable advertise status. Valid values: `disable`, `enable`.
func (o RouterOspfSummaryAddressOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfSummaryAddress) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

// Summary address entry ID.
func (o RouterOspfSummaryAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfSummaryAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Prefix.
func (o RouterOspfSummaryAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfSummaryAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Tag value.
func (o RouterOspfSummaryAddressOutput) Tag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfSummaryAddress) *int { return v.Tag }).(pulumi.IntPtrOutput)
}

type RouterOspfSummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfSummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfSummaryAddress)(nil)).Elem()
}

func (o RouterOspfSummaryAddressArrayOutput) ToRouterOspfSummaryAddressArrayOutput() RouterOspfSummaryAddressArrayOutput {
	return o
}

func (o RouterOspfSummaryAddressArrayOutput) ToRouterOspfSummaryAddressArrayOutputWithContext(ctx context.Context) RouterOspfSummaryAddressArrayOutput {
	return o
}

func (o RouterOspfSummaryAddressArrayOutput) Index(i pulumi.IntInput) RouterOspfSummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfSummaryAddress {
		return vs[0].([]RouterOspfSummaryAddress)[vs[1].(int)]
	}).(RouterOspfSummaryAddressOutput)
}

type RouterPolicy6Dstaddr struct {
	// Address/group name.
	Name *string `pulumi:"name"`
}

// RouterPolicy6DstaddrInput is an input type that accepts RouterPolicy6DstaddrArgs and RouterPolicy6DstaddrOutput values.
// You can construct a concrete instance of `RouterPolicy6DstaddrInput` via:
//
//	RouterPolicy6DstaddrArgs{...}
type RouterPolicy6DstaddrInput interface {
	pulumi.Input

	ToRouterPolicy6DstaddrOutput() RouterPolicy6DstaddrOutput
	ToRouterPolicy6DstaddrOutputWithContext(context.Context) RouterPolicy6DstaddrOutput
}

type RouterPolicy6DstaddrArgs struct {
	// Address/group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6Dstaddr)(nil)).Elem()
}

func (i RouterPolicy6DstaddrArgs) ToRouterPolicy6DstaddrOutput() RouterPolicy6DstaddrOutput {
	return i.ToRouterPolicy6DstaddrOutputWithContext(context.Background())
}

func (i RouterPolicy6DstaddrArgs) ToRouterPolicy6DstaddrOutputWithContext(ctx context.Context) RouterPolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6DstaddrOutput)
}

// RouterPolicy6DstaddrArrayInput is an input type that accepts RouterPolicy6DstaddrArray and RouterPolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `RouterPolicy6DstaddrArrayInput` via:
//
//	RouterPolicy6DstaddrArray{ RouterPolicy6DstaddrArgs{...} }
type RouterPolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToRouterPolicy6DstaddrArrayOutput() RouterPolicy6DstaddrArrayOutput
	ToRouterPolicy6DstaddrArrayOutputWithContext(context.Context) RouterPolicy6DstaddrArrayOutput
}

type RouterPolicy6DstaddrArray []RouterPolicy6DstaddrInput

func (RouterPolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6Dstaddr)(nil)).Elem()
}

func (i RouterPolicy6DstaddrArray) ToRouterPolicy6DstaddrArrayOutput() RouterPolicy6DstaddrArrayOutput {
	return i.ToRouterPolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i RouterPolicy6DstaddrArray) ToRouterPolicy6DstaddrArrayOutputWithContext(ctx context.Context) RouterPolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6DstaddrArrayOutput)
}

type RouterPolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (RouterPolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6Dstaddr)(nil)).Elem()
}

func (o RouterPolicy6DstaddrOutput) ToRouterPolicy6DstaddrOutput() RouterPolicy6DstaddrOutput {
	return o
}

func (o RouterPolicy6DstaddrOutput) ToRouterPolicy6DstaddrOutputWithContext(ctx context.Context) RouterPolicy6DstaddrOutput {
	return o
}

// Address/group name.
func (o RouterPolicy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6Dstaddr)(nil)).Elem()
}

func (o RouterPolicy6DstaddrArrayOutput) ToRouterPolicy6DstaddrArrayOutput() RouterPolicy6DstaddrArrayOutput {
	return o
}

func (o RouterPolicy6DstaddrArrayOutput) ToRouterPolicy6DstaddrArrayOutputWithContext(ctx context.Context) RouterPolicy6DstaddrArrayOutput {
	return o
}

func (o RouterPolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) RouterPolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicy6Dstaddr {
		return vs[0].([]RouterPolicy6Dstaddr)[vs[1].(int)]
	}).(RouterPolicy6DstaddrOutput)
}

type RouterPolicy6InternetServiceCustom struct {
	// Custom Destination Internet Service name.
	Name *string `pulumi:"name"`
}

// RouterPolicy6InternetServiceCustomInput is an input type that accepts RouterPolicy6InternetServiceCustomArgs and RouterPolicy6InternetServiceCustomOutput values.
// You can construct a concrete instance of `RouterPolicy6InternetServiceCustomInput` via:
//
//	RouterPolicy6InternetServiceCustomArgs{...}
type RouterPolicy6InternetServiceCustomInput interface {
	pulumi.Input

	ToRouterPolicy6InternetServiceCustomOutput() RouterPolicy6InternetServiceCustomOutput
	ToRouterPolicy6InternetServiceCustomOutputWithContext(context.Context) RouterPolicy6InternetServiceCustomOutput
}

type RouterPolicy6InternetServiceCustomArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicy6InternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (i RouterPolicy6InternetServiceCustomArgs) ToRouterPolicy6InternetServiceCustomOutput() RouterPolicy6InternetServiceCustomOutput {
	return i.ToRouterPolicy6InternetServiceCustomOutputWithContext(context.Background())
}

func (i RouterPolicy6InternetServiceCustomArgs) ToRouterPolicy6InternetServiceCustomOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6InternetServiceCustomOutput)
}

// RouterPolicy6InternetServiceCustomArrayInput is an input type that accepts RouterPolicy6InternetServiceCustomArray and RouterPolicy6InternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `RouterPolicy6InternetServiceCustomArrayInput` via:
//
//	RouterPolicy6InternetServiceCustomArray{ RouterPolicy6InternetServiceCustomArgs{...} }
type RouterPolicy6InternetServiceCustomArrayInput interface {
	pulumi.Input

	ToRouterPolicy6InternetServiceCustomArrayOutput() RouterPolicy6InternetServiceCustomArrayOutput
	ToRouterPolicy6InternetServiceCustomArrayOutputWithContext(context.Context) RouterPolicy6InternetServiceCustomArrayOutput
}

type RouterPolicy6InternetServiceCustomArray []RouterPolicy6InternetServiceCustomInput

func (RouterPolicy6InternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (i RouterPolicy6InternetServiceCustomArray) ToRouterPolicy6InternetServiceCustomArrayOutput() RouterPolicy6InternetServiceCustomArrayOutput {
	return i.ToRouterPolicy6InternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i RouterPolicy6InternetServiceCustomArray) ToRouterPolicy6InternetServiceCustomArrayOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6InternetServiceCustomArrayOutput)
}

type RouterPolicy6InternetServiceCustomOutput struct{ *pulumi.OutputState }

func (RouterPolicy6InternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (o RouterPolicy6InternetServiceCustomOutput) ToRouterPolicy6InternetServiceCustomOutput() RouterPolicy6InternetServiceCustomOutput {
	return o
}

func (o RouterPolicy6InternetServiceCustomOutput) ToRouterPolicy6InternetServiceCustomOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceCustomOutput {
	return o
}

// Custom Destination Internet Service name.
func (o RouterPolicy6InternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicy6InternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicy6InternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicy6InternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (o RouterPolicy6InternetServiceCustomArrayOutput) ToRouterPolicy6InternetServiceCustomArrayOutput() RouterPolicy6InternetServiceCustomArrayOutput {
	return o
}

func (o RouterPolicy6InternetServiceCustomArrayOutput) ToRouterPolicy6InternetServiceCustomArrayOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceCustomArrayOutput {
	return o
}

func (o RouterPolicy6InternetServiceCustomArrayOutput) Index(i pulumi.IntInput) RouterPolicy6InternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicy6InternetServiceCustom {
		return vs[0].([]RouterPolicy6InternetServiceCustom)[vs[1].(int)]
	}).(RouterPolicy6InternetServiceCustomOutput)
}

type RouterPolicy6InternetServiceId struct {
	// Destination Internet Service ID.
	Id *int `pulumi:"id"`
}

// RouterPolicy6InternetServiceIdInput is an input type that accepts RouterPolicy6InternetServiceIdArgs and RouterPolicy6InternetServiceIdOutput values.
// You can construct a concrete instance of `RouterPolicy6InternetServiceIdInput` via:
//
//	RouterPolicy6InternetServiceIdArgs{...}
type RouterPolicy6InternetServiceIdInput interface {
	pulumi.Input

	ToRouterPolicy6InternetServiceIdOutput() RouterPolicy6InternetServiceIdOutput
	ToRouterPolicy6InternetServiceIdOutputWithContext(context.Context) RouterPolicy6InternetServiceIdOutput
}

type RouterPolicy6InternetServiceIdArgs struct {
	// Destination Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (RouterPolicy6InternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6InternetServiceId)(nil)).Elem()
}

func (i RouterPolicy6InternetServiceIdArgs) ToRouterPolicy6InternetServiceIdOutput() RouterPolicy6InternetServiceIdOutput {
	return i.ToRouterPolicy6InternetServiceIdOutputWithContext(context.Background())
}

func (i RouterPolicy6InternetServiceIdArgs) ToRouterPolicy6InternetServiceIdOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6InternetServiceIdOutput)
}

// RouterPolicy6InternetServiceIdArrayInput is an input type that accepts RouterPolicy6InternetServiceIdArray and RouterPolicy6InternetServiceIdArrayOutput values.
// You can construct a concrete instance of `RouterPolicy6InternetServiceIdArrayInput` via:
//
//	RouterPolicy6InternetServiceIdArray{ RouterPolicy6InternetServiceIdArgs{...} }
type RouterPolicy6InternetServiceIdArrayInput interface {
	pulumi.Input

	ToRouterPolicy6InternetServiceIdArrayOutput() RouterPolicy6InternetServiceIdArrayOutput
	ToRouterPolicy6InternetServiceIdArrayOutputWithContext(context.Context) RouterPolicy6InternetServiceIdArrayOutput
}

type RouterPolicy6InternetServiceIdArray []RouterPolicy6InternetServiceIdInput

func (RouterPolicy6InternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6InternetServiceId)(nil)).Elem()
}

func (i RouterPolicy6InternetServiceIdArray) ToRouterPolicy6InternetServiceIdArrayOutput() RouterPolicy6InternetServiceIdArrayOutput {
	return i.ToRouterPolicy6InternetServiceIdArrayOutputWithContext(context.Background())
}

func (i RouterPolicy6InternetServiceIdArray) ToRouterPolicy6InternetServiceIdArrayOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6InternetServiceIdArrayOutput)
}

type RouterPolicy6InternetServiceIdOutput struct{ *pulumi.OutputState }

func (RouterPolicy6InternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6InternetServiceId)(nil)).Elem()
}

func (o RouterPolicy6InternetServiceIdOutput) ToRouterPolicy6InternetServiceIdOutput() RouterPolicy6InternetServiceIdOutput {
	return o
}

func (o RouterPolicy6InternetServiceIdOutput) ToRouterPolicy6InternetServiceIdOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceIdOutput {
	return o
}

// Destination Internet Service ID.
func (o RouterPolicy6InternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPolicy6InternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type RouterPolicy6InternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicy6InternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6InternetServiceId)(nil)).Elem()
}

func (o RouterPolicy6InternetServiceIdArrayOutput) ToRouterPolicy6InternetServiceIdArrayOutput() RouterPolicy6InternetServiceIdArrayOutput {
	return o
}

func (o RouterPolicy6InternetServiceIdArrayOutput) ToRouterPolicy6InternetServiceIdArrayOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceIdArrayOutput {
	return o
}

func (o RouterPolicy6InternetServiceIdArrayOutput) Index(i pulumi.IntInput) RouterPolicy6InternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicy6InternetServiceId {
		return vs[0].([]RouterPolicy6InternetServiceId)[vs[1].(int)]
	}).(RouterPolicy6InternetServiceIdOutput)
}

type RouterPolicy6Srcaddr struct {
	// Address/group name.
	Name *string `pulumi:"name"`
}

// RouterPolicy6SrcaddrInput is an input type that accepts RouterPolicy6SrcaddrArgs and RouterPolicy6SrcaddrOutput values.
// You can construct a concrete instance of `RouterPolicy6SrcaddrInput` via:
//
//	RouterPolicy6SrcaddrArgs{...}
type RouterPolicy6SrcaddrInput interface {
	pulumi.Input

	ToRouterPolicy6SrcaddrOutput() RouterPolicy6SrcaddrOutput
	ToRouterPolicy6SrcaddrOutputWithContext(context.Context) RouterPolicy6SrcaddrOutput
}

type RouterPolicy6SrcaddrArgs struct {
	// Address/group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6Srcaddr)(nil)).Elem()
}

func (i RouterPolicy6SrcaddrArgs) ToRouterPolicy6SrcaddrOutput() RouterPolicy6SrcaddrOutput {
	return i.ToRouterPolicy6SrcaddrOutputWithContext(context.Background())
}

func (i RouterPolicy6SrcaddrArgs) ToRouterPolicy6SrcaddrOutputWithContext(ctx context.Context) RouterPolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6SrcaddrOutput)
}

// RouterPolicy6SrcaddrArrayInput is an input type that accepts RouterPolicy6SrcaddrArray and RouterPolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `RouterPolicy6SrcaddrArrayInput` via:
//
//	RouterPolicy6SrcaddrArray{ RouterPolicy6SrcaddrArgs{...} }
type RouterPolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToRouterPolicy6SrcaddrArrayOutput() RouterPolicy6SrcaddrArrayOutput
	ToRouterPolicy6SrcaddrArrayOutputWithContext(context.Context) RouterPolicy6SrcaddrArrayOutput
}

type RouterPolicy6SrcaddrArray []RouterPolicy6SrcaddrInput

func (RouterPolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6Srcaddr)(nil)).Elem()
}

func (i RouterPolicy6SrcaddrArray) ToRouterPolicy6SrcaddrArrayOutput() RouterPolicy6SrcaddrArrayOutput {
	return i.ToRouterPolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i RouterPolicy6SrcaddrArray) ToRouterPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) RouterPolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6SrcaddrArrayOutput)
}

type RouterPolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (RouterPolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6Srcaddr)(nil)).Elem()
}

func (o RouterPolicy6SrcaddrOutput) ToRouterPolicy6SrcaddrOutput() RouterPolicy6SrcaddrOutput {
	return o
}

func (o RouterPolicy6SrcaddrOutput) ToRouterPolicy6SrcaddrOutputWithContext(ctx context.Context) RouterPolicy6SrcaddrOutput {
	return o
}

// Address/group name.
func (o RouterPolicy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6Srcaddr)(nil)).Elem()
}

func (o RouterPolicy6SrcaddrArrayOutput) ToRouterPolicy6SrcaddrArrayOutput() RouterPolicy6SrcaddrArrayOutput {
	return o
}

func (o RouterPolicy6SrcaddrArrayOutput) ToRouterPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) RouterPolicy6SrcaddrArrayOutput {
	return o
}

func (o RouterPolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) RouterPolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicy6Srcaddr {
		return vs[0].([]RouterPolicy6Srcaddr)[vs[1].(int)]
	}).(RouterPolicy6SrcaddrOutput)
}

type RouterPolicyDst struct {
	// IP and mask.
	Subnet *string `pulumi:"subnet"`
}

// RouterPolicyDstInput is an input type that accepts RouterPolicyDstArgs and RouterPolicyDstOutput values.
// You can construct a concrete instance of `RouterPolicyDstInput` via:
//
//	RouterPolicyDstArgs{...}
type RouterPolicyDstInput interface {
	pulumi.Input

	ToRouterPolicyDstOutput() RouterPolicyDstOutput
	ToRouterPolicyDstOutputWithContext(context.Context) RouterPolicyDstOutput
}

type RouterPolicyDstArgs struct {
	// IP and mask.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (RouterPolicyDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyDst)(nil)).Elem()
}

func (i RouterPolicyDstArgs) ToRouterPolicyDstOutput() RouterPolicyDstOutput {
	return i.ToRouterPolicyDstOutputWithContext(context.Background())
}

func (i RouterPolicyDstArgs) ToRouterPolicyDstOutputWithContext(ctx context.Context) RouterPolicyDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyDstOutput)
}

// RouterPolicyDstArrayInput is an input type that accepts RouterPolicyDstArray and RouterPolicyDstArrayOutput values.
// You can construct a concrete instance of `RouterPolicyDstArrayInput` via:
//
//	RouterPolicyDstArray{ RouterPolicyDstArgs{...} }
type RouterPolicyDstArrayInput interface {
	pulumi.Input

	ToRouterPolicyDstArrayOutput() RouterPolicyDstArrayOutput
	ToRouterPolicyDstArrayOutputWithContext(context.Context) RouterPolicyDstArrayOutput
}

type RouterPolicyDstArray []RouterPolicyDstInput

func (RouterPolicyDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyDst)(nil)).Elem()
}

func (i RouterPolicyDstArray) ToRouterPolicyDstArrayOutput() RouterPolicyDstArrayOutput {
	return i.ToRouterPolicyDstArrayOutputWithContext(context.Background())
}

func (i RouterPolicyDstArray) ToRouterPolicyDstArrayOutputWithContext(ctx context.Context) RouterPolicyDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyDstArrayOutput)
}

type RouterPolicyDstOutput struct{ *pulumi.OutputState }

func (RouterPolicyDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyDst)(nil)).Elem()
}

func (o RouterPolicyDstOutput) ToRouterPolicyDstOutput() RouterPolicyDstOutput {
	return o
}

func (o RouterPolicyDstOutput) ToRouterPolicyDstOutputWithContext(ctx context.Context) RouterPolicyDstOutput {
	return o
}

// IP and mask.
func (o RouterPolicyDstOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicyDst) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type RouterPolicyDstArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicyDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyDst)(nil)).Elem()
}

func (o RouterPolicyDstArrayOutput) ToRouterPolicyDstArrayOutput() RouterPolicyDstArrayOutput {
	return o
}

func (o RouterPolicyDstArrayOutput) ToRouterPolicyDstArrayOutputWithContext(ctx context.Context) RouterPolicyDstArrayOutput {
	return o
}

func (o RouterPolicyDstArrayOutput) Index(i pulumi.IntInput) RouterPolicyDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicyDst {
		return vs[0].([]RouterPolicyDst)[vs[1].(int)]
	}).(RouterPolicyDstOutput)
}

type RouterPolicyDstaddr struct {
	// Address/group name.
	Name *string `pulumi:"name"`
}

// RouterPolicyDstaddrInput is an input type that accepts RouterPolicyDstaddrArgs and RouterPolicyDstaddrOutput values.
// You can construct a concrete instance of `RouterPolicyDstaddrInput` via:
//
//	RouterPolicyDstaddrArgs{...}
type RouterPolicyDstaddrInput interface {
	pulumi.Input

	ToRouterPolicyDstaddrOutput() RouterPolicyDstaddrOutput
	ToRouterPolicyDstaddrOutputWithContext(context.Context) RouterPolicyDstaddrOutput
}

type RouterPolicyDstaddrArgs struct {
	// Address/group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyDstaddr)(nil)).Elem()
}

func (i RouterPolicyDstaddrArgs) ToRouterPolicyDstaddrOutput() RouterPolicyDstaddrOutput {
	return i.ToRouterPolicyDstaddrOutputWithContext(context.Background())
}

func (i RouterPolicyDstaddrArgs) ToRouterPolicyDstaddrOutputWithContext(ctx context.Context) RouterPolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyDstaddrOutput)
}

// RouterPolicyDstaddrArrayInput is an input type that accepts RouterPolicyDstaddrArray and RouterPolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `RouterPolicyDstaddrArrayInput` via:
//
//	RouterPolicyDstaddrArray{ RouterPolicyDstaddrArgs{...} }
type RouterPolicyDstaddrArrayInput interface {
	pulumi.Input

	ToRouterPolicyDstaddrArrayOutput() RouterPolicyDstaddrArrayOutput
	ToRouterPolicyDstaddrArrayOutputWithContext(context.Context) RouterPolicyDstaddrArrayOutput
}

type RouterPolicyDstaddrArray []RouterPolicyDstaddrInput

func (RouterPolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyDstaddr)(nil)).Elem()
}

func (i RouterPolicyDstaddrArray) ToRouterPolicyDstaddrArrayOutput() RouterPolicyDstaddrArrayOutput {
	return i.ToRouterPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i RouterPolicyDstaddrArray) ToRouterPolicyDstaddrArrayOutputWithContext(ctx context.Context) RouterPolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyDstaddrArrayOutput)
}

type RouterPolicyDstaddrOutput struct{ *pulumi.OutputState }

func (RouterPolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyDstaddr)(nil)).Elem()
}

func (o RouterPolicyDstaddrOutput) ToRouterPolicyDstaddrOutput() RouterPolicyDstaddrOutput {
	return o
}

func (o RouterPolicyDstaddrOutput) ToRouterPolicyDstaddrOutputWithContext(ctx context.Context) RouterPolicyDstaddrOutput {
	return o
}

// Address/group name.
func (o RouterPolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyDstaddr)(nil)).Elem()
}

func (o RouterPolicyDstaddrArrayOutput) ToRouterPolicyDstaddrArrayOutput() RouterPolicyDstaddrArrayOutput {
	return o
}

func (o RouterPolicyDstaddrArrayOutput) ToRouterPolicyDstaddrArrayOutputWithContext(ctx context.Context) RouterPolicyDstaddrArrayOutput {
	return o
}

func (o RouterPolicyDstaddrArrayOutput) Index(i pulumi.IntInput) RouterPolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicyDstaddr {
		return vs[0].([]RouterPolicyDstaddr)[vs[1].(int)]
	}).(RouterPolicyDstaddrOutput)
}

type RouterPolicyInputDevice struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// RouterPolicyInputDeviceInput is an input type that accepts RouterPolicyInputDeviceArgs and RouterPolicyInputDeviceOutput values.
// You can construct a concrete instance of `RouterPolicyInputDeviceInput` via:
//
//	RouterPolicyInputDeviceArgs{...}
type RouterPolicyInputDeviceInput interface {
	pulumi.Input

	ToRouterPolicyInputDeviceOutput() RouterPolicyInputDeviceOutput
	ToRouterPolicyInputDeviceOutputWithContext(context.Context) RouterPolicyInputDeviceOutput
}

type RouterPolicyInputDeviceArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicyInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInputDevice)(nil)).Elem()
}

func (i RouterPolicyInputDeviceArgs) ToRouterPolicyInputDeviceOutput() RouterPolicyInputDeviceOutput {
	return i.ToRouterPolicyInputDeviceOutputWithContext(context.Background())
}

func (i RouterPolicyInputDeviceArgs) ToRouterPolicyInputDeviceOutputWithContext(ctx context.Context) RouterPolicyInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInputDeviceOutput)
}

// RouterPolicyInputDeviceArrayInput is an input type that accepts RouterPolicyInputDeviceArray and RouterPolicyInputDeviceArrayOutput values.
// You can construct a concrete instance of `RouterPolicyInputDeviceArrayInput` via:
//
//	RouterPolicyInputDeviceArray{ RouterPolicyInputDeviceArgs{...} }
type RouterPolicyInputDeviceArrayInput interface {
	pulumi.Input

	ToRouterPolicyInputDeviceArrayOutput() RouterPolicyInputDeviceArrayOutput
	ToRouterPolicyInputDeviceArrayOutputWithContext(context.Context) RouterPolicyInputDeviceArrayOutput
}

type RouterPolicyInputDeviceArray []RouterPolicyInputDeviceInput

func (RouterPolicyInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInputDevice)(nil)).Elem()
}

func (i RouterPolicyInputDeviceArray) ToRouterPolicyInputDeviceArrayOutput() RouterPolicyInputDeviceArrayOutput {
	return i.ToRouterPolicyInputDeviceArrayOutputWithContext(context.Background())
}

func (i RouterPolicyInputDeviceArray) ToRouterPolicyInputDeviceArrayOutputWithContext(ctx context.Context) RouterPolicyInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInputDeviceArrayOutput)
}

type RouterPolicyInputDeviceOutput struct{ *pulumi.OutputState }

func (RouterPolicyInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInputDevice)(nil)).Elem()
}

func (o RouterPolicyInputDeviceOutput) ToRouterPolicyInputDeviceOutput() RouterPolicyInputDeviceOutput {
	return o
}

func (o RouterPolicyInputDeviceOutput) ToRouterPolicyInputDeviceOutputWithContext(ctx context.Context) RouterPolicyInputDeviceOutput {
	return o
}

// Interface name.
func (o RouterPolicyInputDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicyInputDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicyInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicyInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInputDevice)(nil)).Elem()
}

func (o RouterPolicyInputDeviceArrayOutput) ToRouterPolicyInputDeviceArrayOutput() RouterPolicyInputDeviceArrayOutput {
	return o
}

func (o RouterPolicyInputDeviceArrayOutput) ToRouterPolicyInputDeviceArrayOutputWithContext(ctx context.Context) RouterPolicyInputDeviceArrayOutput {
	return o
}

func (o RouterPolicyInputDeviceArrayOutput) Index(i pulumi.IntInput) RouterPolicyInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicyInputDevice {
		return vs[0].([]RouterPolicyInputDevice)[vs[1].(int)]
	}).(RouterPolicyInputDeviceOutput)
}

type RouterPolicyInternetServiceCustom struct {
	// Custom Destination Internet Service name.
	Name *string `pulumi:"name"`
}

// RouterPolicyInternetServiceCustomInput is an input type that accepts RouterPolicyInternetServiceCustomArgs and RouterPolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `RouterPolicyInternetServiceCustomInput` via:
//
//	RouterPolicyInternetServiceCustomArgs{...}
type RouterPolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToRouterPolicyInternetServiceCustomOutput() RouterPolicyInternetServiceCustomOutput
	ToRouterPolicyInternetServiceCustomOutputWithContext(context.Context) RouterPolicyInternetServiceCustomOutput
}

type RouterPolicyInternetServiceCustomArgs struct {
	// Custom Destination Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (i RouterPolicyInternetServiceCustomArgs) ToRouterPolicyInternetServiceCustomOutput() RouterPolicyInternetServiceCustomOutput {
	return i.ToRouterPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i RouterPolicyInternetServiceCustomArgs) ToRouterPolicyInternetServiceCustomOutputWithContext(ctx context.Context) RouterPolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInternetServiceCustomOutput)
}

// RouterPolicyInternetServiceCustomArrayInput is an input type that accepts RouterPolicyInternetServiceCustomArray and RouterPolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `RouterPolicyInternetServiceCustomArrayInput` via:
//
//	RouterPolicyInternetServiceCustomArray{ RouterPolicyInternetServiceCustomArgs{...} }
type RouterPolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToRouterPolicyInternetServiceCustomArrayOutput() RouterPolicyInternetServiceCustomArrayOutput
	ToRouterPolicyInternetServiceCustomArrayOutputWithContext(context.Context) RouterPolicyInternetServiceCustomArrayOutput
}

type RouterPolicyInternetServiceCustomArray []RouterPolicyInternetServiceCustomInput

func (RouterPolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (i RouterPolicyInternetServiceCustomArray) ToRouterPolicyInternetServiceCustomArrayOutput() RouterPolicyInternetServiceCustomArrayOutput {
	return i.ToRouterPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i RouterPolicyInternetServiceCustomArray) ToRouterPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) RouterPolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInternetServiceCustomArrayOutput)
}

type RouterPolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (RouterPolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (o RouterPolicyInternetServiceCustomOutput) ToRouterPolicyInternetServiceCustomOutput() RouterPolicyInternetServiceCustomOutput {
	return o
}

func (o RouterPolicyInternetServiceCustomOutput) ToRouterPolicyInternetServiceCustomOutputWithContext(ctx context.Context) RouterPolicyInternetServiceCustomOutput {
	return o
}

// Custom Destination Internet Service name.
func (o RouterPolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (o RouterPolicyInternetServiceCustomArrayOutput) ToRouterPolicyInternetServiceCustomArrayOutput() RouterPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o RouterPolicyInternetServiceCustomArrayOutput) ToRouterPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) RouterPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o RouterPolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) RouterPolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicyInternetServiceCustom {
		return vs[0].([]RouterPolicyInternetServiceCustom)[vs[1].(int)]
	}).(RouterPolicyInternetServiceCustomOutput)
}

type RouterPolicyInternetServiceId struct {
	// Destination Internet Service ID.
	Id *int `pulumi:"id"`
}

// RouterPolicyInternetServiceIdInput is an input type that accepts RouterPolicyInternetServiceIdArgs and RouterPolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `RouterPolicyInternetServiceIdInput` via:
//
//	RouterPolicyInternetServiceIdArgs{...}
type RouterPolicyInternetServiceIdInput interface {
	pulumi.Input

	ToRouterPolicyInternetServiceIdOutput() RouterPolicyInternetServiceIdOutput
	ToRouterPolicyInternetServiceIdOutputWithContext(context.Context) RouterPolicyInternetServiceIdOutput
}

type RouterPolicyInternetServiceIdArgs struct {
	// Destination Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (RouterPolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInternetServiceId)(nil)).Elem()
}

func (i RouterPolicyInternetServiceIdArgs) ToRouterPolicyInternetServiceIdOutput() RouterPolicyInternetServiceIdOutput {
	return i.ToRouterPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i RouterPolicyInternetServiceIdArgs) ToRouterPolicyInternetServiceIdOutputWithContext(ctx context.Context) RouterPolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInternetServiceIdOutput)
}

// RouterPolicyInternetServiceIdArrayInput is an input type that accepts RouterPolicyInternetServiceIdArray and RouterPolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `RouterPolicyInternetServiceIdArrayInput` via:
//
//	RouterPolicyInternetServiceIdArray{ RouterPolicyInternetServiceIdArgs{...} }
type RouterPolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToRouterPolicyInternetServiceIdArrayOutput() RouterPolicyInternetServiceIdArrayOutput
	ToRouterPolicyInternetServiceIdArrayOutputWithContext(context.Context) RouterPolicyInternetServiceIdArrayOutput
}

type RouterPolicyInternetServiceIdArray []RouterPolicyInternetServiceIdInput

func (RouterPolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInternetServiceId)(nil)).Elem()
}

func (i RouterPolicyInternetServiceIdArray) ToRouterPolicyInternetServiceIdArrayOutput() RouterPolicyInternetServiceIdArrayOutput {
	return i.ToRouterPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i RouterPolicyInternetServiceIdArray) ToRouterPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) RouterPolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInternetServiceIdArrayOutput)
}

type RouterPolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (RouterPolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInternetServiceId)(nil)).Elem()
}

func (o RouterPolicyInternetServiceIdOutput) ToRouterPolicyInternetServiceIdOutput() RouterPolicyInternetServiceIdOutput {
	return o
}

func (o RouterPolicyInternetServiceIdOutput) ToRouterPolicyInternetServiceIdOutputWithContext(ctx context.Context) RouterPolicyInternetServiceIdOutput {
	return o
}

// Destination Internet Service ID.
func (o RouterPolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type RouterPolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInternetServiceId)(nil)).Elem()
}

func (o RouterPolicyInternetServiceIdArrayOutput) ToRouterPolicyInternetServiceIdArrayOutput() RouterPolicyInternetServiceIdArrayOutput {
	return o
}

func (o RouterPolicyInternetServiceIdArrayOutput) ToRouterPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) RouterPolicyInternetServiceIdArrayOutput {
	return o
}

func (o RouterPolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) RouterPolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicyInternetServiceId {
		return vs[0].([]RouterPolicyInternetServiceId)[vs[1].(int)]
	}).(RouterPolicyInternetServiceIdOutput)
}

type RouterPolicySrc struct {
	// IP and mask.
	Subnet *string `pulumi:"subnet"`
}

// RouterPolicySrcInput is an input type that accepts RouterPolicySrcArgs and RouterPolicySrcOutput values.
// You can construct a concrete instance of `RouterPolicySrcInput` via:
//
//	RouterPolicySrcArgs{...}
type RouterPolicySrcInput interface {
	pulumi.Input

	ToRouterPolicySrcOutput() RouterPolicySrcOutput
	ToRouterPolicySrcOutputWithContext(context.Context) RouterPolicySrcOutput
}

type RouterPolicySrcArgs struct {
	// IP and mask.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (RouterPolicySrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicySrc)(nil)).Elem()
}

func (i RouterPolicySrcArgs) ToRouterPolicySrcOutput() RouterPolicySrcOutput {
	return i.ToRouterPolicySrcOutputWithContext(context.Background())
}

func (i RouterPolicySrcArgs) ToRouterPolicySrcOutputWithContext(ctx context.Context) RouterPolicySrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicySrcOutput)
}

// RouterPolicySrcArrayInput is an input type that accepts RouterPolicySrcArray and RouterPolicySrcArrayOutput values.
// You can construct a concrete instance of `RouterPolicySrcArrayInput` via:
//
//	RouterPolicySrcArray{ RouterPolicySrcArgs{...} }
type RouterPolicySrcArrayInput interface {
	pulumi.Input

	ToRouterPolicySrcArrayOutput() RouterPolicySrcArrayOutput
	ToRouterPolicySrcArrayOutputWithContext(context.Context) RouterPolicySrcArrayOutput
}

type RouterPolicySrcArray []RouterPolicySrcInput

func (RouterPolicySrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicySrc)(nil)).Elem()
}

func (i RouterPolicySrcArray) ToRouterPolicySrcArrayOutput() RouterPolicySrcArrayOutput {
	return i.ToRouterPolicySrcArrayOutputWithContext(context.Background())
}

func (i RouterPolicySrcArray) ToRouterPolicySrcArrayOutputWithContext(ctx context.Context) RouterPolicySrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicySrcArrayOutput)
}

type RouterPolicySrcOutput struct{ *pulumi.OutputState }

func (RouterPolicySrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicySrc)(nil)).Elem()
}

func (o RouterPolicySrcOutput) ToRouterPolicySrcOutput() RouterPolicySrcOutput {
	return o
}

func (o RouterPolicySrcOutput) ToRouterPolicySrcOutputWithContext(ctx context.Context) RouterPolicySrcOutput {
	return o
}

// IP and mask.
func (o RouterPolicySrcOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicySrc) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type RouterPolicySrcArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicySrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicySrc)(nil)).Elem()
}

func (o RouterPolicySrcArrayOutput) ToRouterPolicySrcArrayOutput() RouterPolicySrcArrayOutput {
	return o
}

func (o RouterPolicySrcArrayOutput) ToRouterPolicySrcArrayOutputWithContext(ctx context.Context) RouterPolicySrcArrayOutput {
	return o
}

func (o RouterPolicySrcArrayOutput) Index(i pulumi.IntInput) RouterPolicySrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicySrc {
		return vs[0].([]RouterPolicySrc)[vs[1].(int)]
	}).(RouterPolicySrcOutput)
}

type RouterPolicySrcaddr struct {
	// Address/group name.
	Name *string `pulumi:"name"`
}

// RouterPolicySrcaddrInput is an input type that accepts RouterPolicySrcaddrArgs and RouterPolicySrcaddrOutput values.
// You can construct a concrete instance of `RouterPolicySrcaddrInput` via:
//
//	RouterPolicySrcaddrArgs{...}
type RouterPolicySrcaddrInput interface {
	pulumi.Input

	ToRouterPolicySrcaddrOutput() RouterPolicySrcaddrOutput
	ToRouterPolicySrcaddrOutputWithContext(context.Context) RouterPolicySrcaddrOutput
}

type RouterPolicySrcaddrArgs struct {
	// Address/group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicySrcaddr)(nil)).Elem()
}

func (i RouterPolicySrcaddrArgs) ToRouterPolicySrcaddrOutput() RouterPolicySrcaddrOutput {
	return i.ToRouterPolicySrcaddrOutputWithContext(context.Background())
}

func (i RouterPolicySrcaddrArgs) ToRouterPolicySrcaddrOutputWithContext(ctx context.Context) RouterPolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicySrcaddrOutput)
}

// RouterPolicySrcaddrArrayInput is an input type that accepts RouterPolicySrcaddrArray and RouterPolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `RouterPolicySrcaddrArrayInput` via:
//
//	RouterPolicySrcaddrArray{ RouterPolicySrcaddrArgs{...} }
type RouterPolicySrcaddrArrayInput interface {
	pulumi.Input

	ToRouterPolicySrcaddrArrayOutput() RouterPolicySrcaddrArrayOutput
	ToRouterPolicySrcaddrArrayOutputWithContext(context.Context) RouterPolicySrcaddrArrayOutput
}

type RouterPolicySrcaddrArray []RouterPolicySrcaddrInput

func (RouterPolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicySrcaddr)(nil)).Elem()
}

func (i RouterPolicySrcaddrArray) ToRouterPolicySrcaddrArrayOutput() RouterPolicySrcaddrArrayOutput {
	return i.ToRouterPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i RouterPolicySrcaddrArray) ToRouterPolicySrcaddrArrayOutputWithContext(ctx context.Context) RouterPolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicySrcaddrArrayOutput)
}

type RouterPolicySrcaddrOutput struct{ *pulumi.OutputState }

func (RouterPolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicySrcaddr)(nil)).Elem()
}

func (o RouterPolicySrcaddrOutput) ToRouterPolicySrcaddrOutput() RouterPolicySrcaddrOutput {
	return o
}

func (o RouterPolicySrcaddrOutput) ToRouterPolicySrcaddrOutputWithContext(ctx context.Context) RouterPolicySrcaddrOutput {
	return o
}

// Address/group name.
func (o RouterPolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicySrcaddr)(nil)).Elem()
}

func (o RouterPolicySrcaddrArrayOutput) ToRouterPolicySrcaddrArrayOutput() RouterPolicySrcaddrArrayOutput {
	return o
}

func (o RouterPolicySrcaddrArrayOutput) ToRouterPolicySrcaddrArrayOutputWithContext(ctx context.Context) RouterPolicySrcaddrArrayOutput {
	return o
}

func (o RouterPolicySrcaddrArrayOutput) Index(i pulumi.IntInput) RouterPolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicySrcaddr {
		return vs[0].([]RouterPolicySrcaddr)[vs[1].(int)]
	}).(RouterPolicySrcaddrOutput)
}

type RouterPrefixlist6Rule struct {
	// Permit or deny packets that match this rule. Valid values: `permit`, `deny`.
	Action *string `pulumi:"action"`
	// Flags.
	Flags *int `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 128).
	Ge *int `pulumi:"ge"`
	// Rule ID.
	Id *int `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 128).
	Le *int `pulumi:"le"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 *string `pulumi:"prefix6"`
}

// RouterPrefixlist6RuleInput is an input type that accepts RouterPrefixlist6RuleArgs and RouterPrefixlist6RuleOutput values.
// You can construct a concrete instance of `RouterPrefixlist6RuleInput` via:
//
//	RouterPrefixlist6RuleArgs{...}
type RouterPrefixlist6RuleInput interface {
	pulumi.Input

	ToRouterPrefixlist6RuleOutput() RouterPrefixlist6RuleOutput
	ToRouterPrefixlist6RuleOutputWithContext(context.Context) RouterPrefixlist6RuleOutput
}

type RouterPrefixlist6RuleArgs struct {
	// Permit or deny packets that match this rule. Valid values: `permit`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 128).
	Ge pulumi.IntPtrInput `pulumi:"ge"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 128).
	Le pulumi.IntPtrInput `pulumi:"le"`
	// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterPrefixlist6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPrefixlist6Rule)(nil)).Elem()
}

func (i RouterPrefixlist6RuleArgs) ToRouterPrefixlist6RuleOutput() RouterPrefixlist6RuleOutput {
	return i.ToRouterPrefixlist6RuleOutputWithContext(context.Background())
}

func (i RouterPrefixlist6RuleArgs) ToRouterPrefixlist6RuleOutputWithContext(ctx context.Context) RouterPrefixlist6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixlist6RuleOutput)
}

// RouterPrefixlist6RuleArrayInput is an input type that accepts RouterPrefixlist6RuleArray and RouterPrefixlist6RuleArrayOutput values.
// You can construct a concrete instance of `RouterPrefixlist6RuleArrayInput` via:
//
//	RouterPrefixlist6RuleArray{ RouterPrefixlist6RuleArgs{...} }
type RouterPrefixlist6RuleArrayInput interface {
	pulumi.Input

	ToRouterPrefixlist6RuleArrayOutput() RouterPrefixlist6RuleArrayOutput
	ToRouterPrefixlist6RuleArrayOutputWithContext(context.Context) RouterPrefixlist6RuleArrayOutput
}

type RouterPrefixlist6RuleArray []RouterPrefixlist6RuleInput

func (RouterPrefixlist6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPrefixlist6Rule)(nil)).Elem()
}

func (i RouterPrefixlist6RuleArray) ToRouterPrefixlist6RuleArrayOutput() RouterPrefixlist6RuleArrayOutput {
	return i.ToRouterPrefixlist6RuleArrayOutputWithContext(context.Background())
}

func (i RouterPrefixlist6RuleArray) ToRouterPrefixlist6RuleArrayOutputWithContext(ctx context.Context) RouterPrefixlist6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixlist6RuleArrayOutput)
}

type RouterPrefixlist6RuleOutput struct{ *pulumi.OutputState }

func (RouterPrefixlist6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPrefixlist6Rule)(nil)).Elem()
}

func (o RouterPrefixlist6RuleOutput) ToRouterPrefixlist6RuleOutput() RouterPrefixlist6RuleOutput {
	return o
}

func (o RouterPrefixlist6RuleOutput) ToRouterPrefixlist6RuleOutputWithContext(ctx context.Context) RouterPrefixlist6RuleOutput {
	return o
}

// Permit or deny packets that match this rule. Valid values: `permit`, `deny`.
func (o RouterPrefixlist6RuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPrefixlist6Rule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Flags.
func (o RouterPrefixlist6RuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixlist6Rule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Minimum prefix length to be matched (0 - 128).
func (o RouterPrefixlist6RuleOutput) Ge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixlist6Rule) *int { return v.Ge }).(pulumi.IntPtrOutput)
}

// Rule ID.
func (o RouterPrefixlist6RuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixlist6Rule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Maximum prefix length to be matched (0 - 128).
func (o RouterPrefixlist6RuleOutput) Le() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixlist6Rule) *int { return v.Le }).(pulumi.IntPtrOutput)
}

// IPv6 prefix to define regular filter criteria, such as "any" or subnets.
func (o RouterPrefixlist6RuleOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPrefixlist6Rule) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterPrefixlist6RuleArrayOutput struct{ *pulumi.OutputState }

func (RouterPrefixlist6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPrefixlist6Rule)(nil)).Elem()
}

func (o RouterPrefixlist6RuleArrayOutput) ToRouterPrefixlist6RuleArrayOutput() RouterPrefixlist6RuleArrayOutput {
	return o
}

func (o RouterPrefixlist6RuleArrayOutput) ToRouterPrefixlist6RuleArrayOutputWithContext(ctx context.Context) RouterPrefixlist6RuleArrayOutput {
	return o
}

func (o RouterPrefixlist6RuleArrayOutput) Index(i pulumi.IntInput) RouterPrefixlist6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPrefixlist6Rule {
		return vs[0].([]RouterPrefixlist6Rule)[vs[1].(int)]
	}).(RouterPrefixlist6RuleOutput)
}

type RouterPrefixlistRule struct {
	// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
	Action *string `pulumi:"action"`
	// Flags.
	Flags *int `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 32).
	Ge *int `pulumi:"ge"`
	// Rule ID.
	Id *int `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 32).
	Le *int `pulumi:"le"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix *string `pulumi:"prefix"`
}

// RouterPrefixlistRuleInput is an input type that accepts RouterPrefixlistRuleArgs and RouterPrefixlistRuleOutput values.
// You can construct a concrete instance of `RouterPrefixlistRuleInput` via:
//
//	RouterPrefixlistRuleArgs{...}
type RouterPrefixlistRuleInput interface {
	pulumi.Input

	ToRouterPrefixlistRuleOutput() RouterPrefixlistRuleOutput
	ToRouterPrefixlistRuleOutputWithContext(context.Context) RouterPrefixlistRuleOutput
}

type RouterPrefixlistRuleArgs struct {
	// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Minimum prefix length to be matched (0 - 32).
	Ge pulumi.IntPtrInput `pulumi:"ge"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Maximum prefix length to be matched (0 - 32).
	Le pulumi.IntPtrInput `pulumi:"le"`
	// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterPrefixlistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPrefixlistRule)(nil)).Elem()
}

func (i RouterPrefixlistRuleArgs) ToRouterPrefixlistRuleOutput() RouterPrefixlistRuleOutput {
	return i.ToRouterPrefixlistRuleOutputWithContext(context.Background())
}

func (i RouterPrefixlistRuleArgs) ToRouterPrefixlistRuleOutputWithContext(ctx context.Context) RouterPrefixlistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixlistRuleOutput)
}

// RouterPrefixlistRuleArrayInput is an input type that accepts RouterPrefixlistRuleArray and RouterPrefixlistRuleArrayOutput values.
// You can construct a concrete instance of `RouterPrefixlistRuleArrayInput` via:
//
//	RouterPrefixlistRuleArray{ RouterPrefixlistRuleArgs{...} }
type RouterPrefixlistRuleArrayInput interface {
	pulumi.Input

	ToRouterPrefixlistRuleArrayOutput() RouterPrefixlistRuleArrayOutput
	ToRouterPrefixlistRuleArrayOutputWithContext(context.Context) RouterPrefixlistRuleArrayOutput
}

type RouterPrefixlistRuleArray []RouterPrefixlistRuleInput

func (RouterPrefixlistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPrefixlistRule)(nil)).Elem()
}

func (i RouterPrefixlistRuleArray) ToRouterPrefixlistRuleArrayOutput() RouterPrefixlistRuleArrayOutput {
	return i.ToRouterPrefixlistRuleArrayOutputWithContext(context.Background())
}

func (i RouterPrefixlistRuleArray) ToRouterPrefixlistRuleArrayOutputWithContext(ctx context.Context) RouterPrefixlistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixlistRuleArrayOutput)
}

type RouterPrefixlistRuleOutput struct{ *pulumi.OutputState }

func (RouterPrefixlistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPrefixlistRule)(nil)).Elem()
}

func (o RouterPrefixlistRuleOutput) ToRouterPrefixlistRuleOutput() RouterPrefixlistRuleOutput {
	return o
}

func (o RouterPrefixlistRuleOutput) ToRouterPrefixlistRuleOutputWithContext(ctx context.Context) RouterPrefixlistRuleOutput {
	return o
}

// Permit or deny this IP address and netmask prefix. Valid values: `permit`, `deny`.
func (o RouterPrefixlistRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPrefixlistRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Flags.
func (o RouterPrefixlistRuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixlistRule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Minimum prefix length to be matched (0 - 32).
func (o RouterPrefixlistRuleOutput) Ge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixlistRule) *int { return v.Ge }).(pulumi.IntPtrOutput)
}

// Rule ID.
func (o RouterPrefixlistRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixlistRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Maximum prefix length to be matched (0 - 32).
func (o RouterPrefixlistRuleOutput) Le() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixlistRule) *int { return v.Le }).(pulumi.IntPtrOutput)
}

// IPv4 prefix to define regular filter criteria, such as "any" or subnets.
func (o RouterPrefixlistRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPrefixlistRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterPrefixlistRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterPrefixlistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPrefixlistRule)(nil)).Elem()
}

func (o RouterPrefixlistRuleArrayOutput) ToRouterPrefixlistRuleArrayOutput() RouterPrefixlistRuleArrayOutput {
	return o
}

func (o RouterPrefixlistRuleArrayOutput) ToRouterPrefixlistRuleArrayOutputWithContext(ctx context.Context) RouterPrefixlistRuleArrayOutput {
	return o
}

func (o RouterPrefixlistRuleArrayOutput) Index(i pulumi.IntInput) RouterPrefixlistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPrefixlistRule {
		return vs[0].([]RouterPrefixlistRule)[vs[1].(int)]
	}).(RouterPrefixlistRuleOutput)
}

type RouterRipDistance struct {
	// Access list for route destination.
	AccessList *string `pulumi:"accessList"`
	// Distance (1 - 255).
	Distance *int `pulumi:"distance"`
	// Distance ID.
	Id *int `pulumi:"id"`
	// Distance prefix.
	Prefix *string `pulumi:"prefix"`
}

// RouterRipDistanceInput is an input type that accepts RouterRipDistanceArgs and RouterRipDistanceOutput values.
// You can construct a concrete instance of `RouterRipDistanceInput` via:
//
//	RouterRipDistanceArgs{...}
type RouterRipDistanceInput interface {
	pulumi.Input

	ToRouterRipDistanceOutput() RouterRipDistanceOutput
	ToRouterRipDistanceOutputWithContext(context.Context) RouterRipDistanceOutput
}

type RouterRipDistanceArgs struct {
	// Access list for route destination.
	AccessList pulumi.StringPtrInput `pulumi:"accessList"`
	// Distance (1 - 255).
	Distance pulumi.IntPtrInput `pulumi:"distance"`
	// Distance ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Distance prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterRipDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipDistance)(nil)).Elem()
}

func (i RouterRipDistanceArgs) ToRouterRipDistanceOutput() RouterRipDistanceOutput {
	return i.ToRouterRipDistanceOutputWithContext(context.Background())
}

func (i RouterRipDistanceArgs) ToRouterRipDistanceOutputWithContext(ctx context.Context) RouterRipDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipDistanceOutput)
}

// RouterRipDistanceArrayInput is an input type that accepts RouterRipDistanceArray and RouterRipDistanceArrayOutput values.
// You can construct a concrete instance of `RouterRipDistanceArrayInput` via:
//
//	RouterRipDistanceArray{ RouterRipDistanceArgs{...} }
type RouterRipDistanceArrayInput interface {
	pulumi.Input

	ToRouterRipDistanceArrayOutput() RouterRipDistanceArrayOutput
	ToRouterRipDistanceArrayOutputWithContext(context.Context) RouterRipDistanceArrayOutput
}

type RouterRipDistanceArray []RouterRipDistanceInput

func (RouterRipDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipDistance)(nil)).Elem()
}

func (i RouterRipDistanceArray) ToRouterRipDistanceArrayOutput() RouterRipDistanceArrayOutput {
	return i.ToRouterRipDistanceArrayOutputWithContext(context.Background())
}

func (i RouterRipDistanceArray) ToRouterRipDistanceArrayOutputWithContext(ctx context.Context) RouterRipDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipDistanceArrayOutput)
}

type RouterRipDistanceOutput struct{ *pulumi.OutputState }

func (RouterRipDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipDistance)(nil)).Elem()
}

func (o RouterRipDistanceOutput) ToRouterRipDistanceOutput() RouterRipDistanceOutput {
	return o
}

func (o RouterRipDistanceOutput) ToRouterRipDistanceOutputWithContext(ctx context.Context) RouterRipDistanceOutput {
	return o
}

// Access list for route destination.
func (o RouterRipDistanceOutput) AccessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistance) *string { return v.AccessList }).(pulumi.StringPtrOutput)
}

// Distance (1 - 255).
func (o RouterRipDistanceOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipDistance) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

// Distance ID.
func (o RouterRipDistanceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipDistance) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Distance prefix.
func (o RouterRipDistanceOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistance) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterRipDistanceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipDistance)(nil)).Elem()
}

func (o RouterRipDistanceArrayOutput) ToRouterRipDistanceArrayOutput() RouterRipDistanceArrayOutput {
	return o
}

func (o RouterRipDistanceArrayOutput) ToRouterRipDistanceArrayOutputWithContext(ctx context.Context) RouterRipDistanceArrayOutput {
	return o
}

func (o RouterRipDistanceArrayOutput) Index(i pulumi.IntInput) RouterRipDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipDistance {
		return vs[0].([]RouterRipDistance)[vs[1].(int)]
	}).(RouterRipDistanceOutput)
}

type RouterRipDistributeList struct {
	// Distribute list direction. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// Distribute list ID.
	Id *int `pulumi:"id"`
	// Distribute list interface name.
	Interface *string `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname *string `pulumi:"listname"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterRipDistributeListInput is an input type that accepts RouterRipDistributeListArgs and RouterRipDistributeListOutput values.
// You can construct a concrete instance of `RouterRipDistributeListInput` via:
//
//	RouterRipDistributeListArgs{...}
type RouterRipDistributeListInput interface {
	pulumi.Input

	ToRouterRipDistributeListOutput() RouterRipDistributeListOutput
	ToRouterRipDistributeListOutputWithContext(context.Context) RouterRipDistributeListOutput
}

type RouterRipDistributeListArgs struct {
	// Distribute list direction. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Distribute list ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Distribute list interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname pulumi.StringPtrInput `pulumi:"listname"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipDistributeList)(nil)).Elem()
}

func (i RouterRipDistributeListArgs) ToRouterRipDistributeListOutput() RouterRipDistributeListOutput {
	return i.ToRouterRipDistributeListOutputWithContext(context.Background())
}

func (i RouterRipDistributeListArgs) ToRouterRipDistributeListOutputWithContext(ctx context.Context) RouterRipDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipDistributeListOutput)
}

// RouterRipDistributeListArrayInput is an input type that accepts RouterRipDistributeListArray and RouterRipDistributeListArrayOutput values.
// You can construct a concrete instance of `RouterRipDistributeListArrayInput` via:
//
//	RouterRipDistributeListArray{ RouterRipDistributeListArgs{...} }
type RouterRipDistributeListArrayInput interface {
	pulumi.Input

	ToRouterRipDistributeListArrayOutput() RouterRipDistributeListArrayOutput
	ToRouterRipDistributeListArrayOutputWithContext(context.Context) RouterRipDistributeListArrayOutput
}

type RouterRipDistributeListArray []RouterRipDistributeListInput

func (RouterRipDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipDistributeList)(nil)).Elem()
}

func (i RouterRipDistributeListArray) ToRouterRipDistributeListArrayOutput() RouterRipDistributeListArrayOutput {
	return i.ToRouterRipDistributeListArrayOutputWithContext(context.Background())
}

func (i RouterRipDistributeListArray) ToRouterRipDistributeListArrayOutputWithContext(ctx context.Context) RouterRipDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipDistributeListArrayOutput)
}

type RouterRipDistributeListOutput struct{ *pulumi.OutputState }

func (RouterRipDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipDistributeList)(nil)).Elem()
}

func (o RouterRipDistributeListOutput) ToRouterRipDistributeListOutput() RouterRipDistributeListOutput {
	return o
}

func (o RouterRipDistributeListOutput) ToRouterRipDistributeListOutputWithContext(ctx context.Context) RouterRipDistributeListOutput {
	return o
}

// Distribute list direction. Valid values: `in`, `out`.
func (o RouterRipDistributeListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistributeList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Distribute list ID.
func (o RouterRipDistributeListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipDistributeList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Distribute list interface name.
func (o RouterRipDistributeListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistributeList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Distribute access/prefix list name.
func (o RouterRipDistributeListOutput) Listname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistributeList) *string { return v.Listname }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RouterRipDistributeListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistributeList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipDistributeListArrayOutput struct{ *pulumi.OutputState }

func (RouterRipDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipDistributeList)(nil)).Elem()
}

func (o RouterRipDistributeListArrayOutput) ToRouterRipDistributeListArrayOutput() RouterRipDistributeListArrayOutput {
	return o
}

func (o RouterRipDistributeListArrayOutput) ToRouterRipDistributeListArrayOutputWithContext(ctx context.Context) RouterRipDistributeListArrayOutput {
	return o
}

func (o RouterRipDistributeListArrayOutput) Index(i pulumi.IntInput) RouterRipDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipDistributeList {
		return vs[0].([]RouterRipDistributeList)[vs[1].(int)]
	}).(RouterRipDistributeListOutput)
}

type RouterRipInterface struct {
	// Authentication key-chain name.
	AuthKeychain *string `pulumi:"authKeychain"`
	// Authentication mode. Valid values: `none`, `text`, `md5`.
	AuthMode *string `pulumi:"authMode"`
	// Authentication string/password.
	AuthString *string `pulumi:"authString"`
	// flags
	Flags *int `pulumi:"flags"`
	// Interface name.
	Name *string `pulumi:"name"`
	// Receive version. Valid values: `1`, `2`.
	ReceiveVersion *string `pulumi:"receiveVersion"`
	// Send version. Valid values: `1`, `2`.
	SendVersion *string `pulumi:"sendVersion"`
	// Enable/disable broadcast version 1 compatible packets. Valid values: `disable`, `enable`.
	SendVersion2Broadcast *string `pulumi:"sendVersion2Broadcast"`
	// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
	SplitHorizon *string `pulumi:"splitHorizon"`
	// Enable/disable split horizon. Valid values: `enable`, `disable`.
	SplitHorizonStatus *string `pulumi:"splitHorizonStatus"`
}

// RouterRipInterfaceInput is an input type that accepts RouterRipInterfaceArgs and RouterRipInterfaceOutput values.
// You can construct a concrete instance of `RouterRipInterfaceInput` via:
//
//	RouterRipInterfaceArgs{...}
type RouterRipInterfaceInput interface {
	pulumi.Input

	ToRouterRipInterfaceOutput() RouterRipInterfaceOutput
	ToRouterRipInterfaceOutputWithContext(context.Context) RouterRipInterfaceOutput
}

type RouterRipInterfaceArgs struct {
	// Authentication key-chain name.
	AuthKeychain pulumi.StringPtrInput `pulumi:"authKeychain"`
	// Authentication mode. Valid values: `none`, `text`, `md5`.
	AuthMode pulumi.StringPtrInput `pulumi:"authMode"`
	// Authentication string/password.
	AuthString pulumi.StringPtrInput `pulumi:"authString"`
	// flags
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Receive version. Valid values: `1`, `2`.
	ReceiveVersion pulumi.StringPtrInput `pulumi:"receiveVersion"`
	// Send version. Valid values: `1`, `2`.
	SendVersion pulumi.StringPtrInput `pulumi:"sendVersion"`
	// Enable/disable broadcast version 1 compatible packets. Valid values: `disable`, `enable`.
	SendVersion2Broadcast pulumi.StringPtrInput `pulumi:"sendVersion2Broadcast"`
	// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
	SplitHorizon pulumi.StringPtrInput `pulumi:"splitHorizon"`
	// Enable/disable split horizon. Valid values: `enable`, `disable`.
	SplitHorizonStatus pulumi.StringPtrInput `pulumi:"splitHorizonStatus"`
}

func (RouterRipInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipInterface)(nil)).Elem()
}

func (i RouterRipInterfaceArgs) ToRouterRipInterfaceOutput() RouterRipInterfaceOutput {
	return i.ToRouterRipInterfaceOutputWithContext(context.Background())
}

func (i RouterRipInterfaceArgs) ToRouterRipInterfaceOutputWithContext(ctx context.Context) RouterRipInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipInterfaceOutput)
}

// RouterRipInterfaceArrayInput is an input type that accepts RouterRipInterfaceArray and RouterRipInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterRipInterfaceArrayInput` via:
//
//	RouterRipInterfaceArray{ RouterRipInterfaceArgs{...} }
type RouterRipInterfaceArrayInput interface {
	pulumi.Input

	ToRouterRipInterfaceArrayOutput() RouterRipInterfaceArrayOutput
	ToRouterRipInterfaceArrayOutputWithContext(context.Context) RouterRipInterfaceArrayOutput
}

type RouterRipInterfaceArray []RouterRipInterfaceInput

func (RouterRipInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipInterface)(nil)).Elem()
}

func (i RouterRipInterfaceArray) ToRouterRipInterfaceArrayOutput() RouterRipInterfaceArrayOutput {
	return i.ToRouterRipInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterRipInterfaceArray) ToRouterRipInterfaceArrayOutputWithContext(ctx context.Context) RouterRipInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipInterfaceArrayOutput)
}

type RouterRipInterfaceOutput struct{ *pulumi.OutputState }

func (RouterRipInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipInterface)(nil)).Elem()
}

func (o RouterRipInterfaceOutput) ToRouterRipInterfaceOutput() RouterRipInterfaceOutput {
	return o
}

func (o RouterRipInterfaceOutput) ToRouterRipInterfaceOutputWithContext(ctx context.Context) RouterRipInterfaceOutput {
	return o
}

// Authentication key-chain name.
func (o RouterRipInterfaceOutput) AuthKeychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.AuthKeychain }).(pulumi.StringPtrOutput)
}

// Authentication mode. Valid values: `none`, `text`, `md5`.
func (o RouterRipInterfaceOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// Authentication string/password.
func (o RouterRipInterfaceOutput) AuthString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.AuthString }).(pulumi.StringPtrOutput)
}

// flags
func (o RouterRipInterfaceOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RouterRipInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Receive version. Valid values: `1`, `2`.
func (o RouterRipInterfaceOutput) ReceiveVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.ReceiveVersion }).(pulumi.StringPtrOutput)
}

// Send version. Valid values: `1`, `2`.
func (o RouterRipInterfaceOutput) SendVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.SendVersion }).(pulumi.StringPtrOutput)
}

// Enable/disable broadcast version 1 compatible packets. Valid values: `disable`, `enable`.
func (o RouterRipInterfaceOutput) SendVersion2Broadcast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.SendVersion2Broadcast }).(pulumi.StringPtrOutput)
}

// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
func (o RouterRipInterfaceOutput) SplitHorizon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.SplitHorizon }).(pulumi.StringPtrOutput)
}

// Enable/disable split horizon. Valid values: `enable`, `disable`.
func (o RouterRipInterfaceOutput) SplitHorizonStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.SplitHorizonStatus }).(pulumi.StringPtrOutput)
}

type RouterRipInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipInterface)(nil)).Elem()
}

func (o RouterRipInterfaceArrayOutput) ToRouterRipInterfaceArrayOutput() RouterRipInterfaceArrayOutput {
	return o
}

func (o RouterRipInterfaceArrayOutput) ToRouterRipInterfaceArrayOutputWithContext(ctx context.Context) RouterRipInterfaceArrayOutput {
	return o
}

func (o RouterRipInterfaceArrayOutput) Index(i pulumi.IntInput) RouterRipInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipInterface {
		return vs[0].([]RouterRipInterface)[vs[1].(int)]
	}).(RouterRipInterfaceOutput)
}

type RouterRipNeighbor struct {
	// Neighbor entry ID.
	Id *int `pulumi:"id"`
	// IP address.
	Ip *string `pulumi:"ip"`
}

// RouterRipNeighborInput is an input type that accepts RouterRipNeighborArgs and RouterRipNeighborOutput values.
// You can construct a concrete instance of `RouterRipNeighborInput` via:
//
//	RouterRipNeighborArgs{...}
type RouterRipNeighborInput interface {
	pulumi.Input

	ToRouterRipNeighborOutput() RouterRipNeighborOutput
	ToRouterRipNeighborOutputWithContext(context.Context) RouterRipNeighborOutput
}

type RouterRipNeighborArgs struct {
	// Neighbor entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IP address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (RouterRipNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipNeighbor)(nil)).Elem()
}

func (i RouterRipNeighborArgs) ToRouterRipNeighborOutput() RouterRipNeighborOutput {
	return i.ToRouterRipNeighborOutputWithContext(context.Background())
}

func (i RouterRipNeighborArgs) ToRouterRipNeighborOutputWithContext(ctx context.Context) RouterRipNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipNeighborOutput)
}

// RouterRipNeighborArrayInput is an input type that accepts RouterRipNeighborArray and RouterRipNeighborArrayOutput values.
// You can construct a concrete instance of `RouterRipNeighborArrayInput` via:
//
//	RouterRipNeighborArray{ RouterRipNeighborArgs{...} }
type RouterRipNeighborArrayInput interface {
	pulumi.Input

	ToRouterRipNeighborArrayOutput() RouterRipNeighborArrayOutput
	ToRouterRipNeighborArrayOutputWithContext(context.Context) RouterRipNeighborArrayOutput
}

type RouterRipNeighborArray []RouterRipNeighborInput

func (RouterRipNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipNeighbor)(nil)).Elem()
}

func (i RouterRipNeighborArray) ToRouterRipNeighborArrayOutput() RouterRipNeighborArrayOutput {
	return i.ToRouterRipNeighborArrayOutputWithContext(context.Background())
}

func (i RouterRipNeighborArray) ToRouterRipNeighborArrayOutputWithContext(ctx context.Context) RouterRipNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipNeighborArrayOutput)
}

type RouterRipNeighborOutput struct{ *pulumi.OutputState }

func (RouterRipNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipNeighbor)(nil)).Elem()
}

func (o RouterRipNeighborOutput) ToRouterRipNeighborOutput() RouterRipNeighborOutput {
	return o
}

func (o RouterRipNeighborOutput) ToRouterRipNeighborOutputWithContext(ctx context.Context) RouterRipNeighborOutput {
	return o
}

// Neighbor entry ID.
func (o RouterRipNeighborOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipNeighbor) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IP address.
func (o RouterRipNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type RouterRipNeighborArrayOutput struct{ *pulumi.OutputState }

func (RouterRipNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipNeighbor)(nil)).Elem()
}

func (o RouterRipNeighborArrayOutput) ToRouterRipNeighborArrayOutput() RouterRipNeighborArrayOutput {
	return o
}

func (o RouterRipNeighborArrayOutput) ToRouterRipNeighborArrayOutputWithContext(ctx context.Context) RouterRipNeighborArrayOutput {
	return o
}

func (o RouterRipNeighborArrayOutput) Index(i pulumi.IntInput) RouterRipNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipNeighbor {
		return vs[0].([]RouterRipNeighbor)[vs[1].(int)]
	}).(RouterRipNeighborOutput)
}

type RouterRipNetwork struct {
	// Network entry ID.
	Id *int `pulumi:"id"`
	// Network prefix.
	Prefix *string `pulumi:"prefix"`
}

// RouterRipNetworkInput is an input type that accepts RouterRipNetworkArgs and RouterRipNetworkOutput values.
// You can construct a concrete instance of `RouterRipNetworkInput` via:
//
//	RouterRipNetworkArgs{...}
type RouterRipNetworkInput interface {
	pulumi.Input

	ToRouterRipNetworkOutput() RouterRipNetworkOutput
	ToRouterRipNetworkOutputWithContext(context.Context) RouterRipNetworkOutput
}

type RouterRipNetworkArgs struct {
	// Network entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Network prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterRipNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipNetwork)(nil)).Elem()
}

func (i RouterRipNetworkArgs) ToRouterRipNetworkOutput() RouterRipNetworkOutput {
	return i.ToRouterRipNetworkOutputWithContext(context.Background())
}

func (i RouterRipNetworkArgs) ToRouterRipNetworkOutputWithContext(ctx context.Context) RouterRipNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipNetworkOutput)
}

// RouterRipNetworkArrayInput is an input type that accepts RouterRipNetworkArray and RouterRipNetworkArrayOutput values.
// You can construct a concrete instance of `RouterRipNetworkArrayInput` via:
//
//	RouterRipNetworkArray{ RouterRipNetworkArgs{...} }
type RouterRipNetworkArrayInput interface {
	pulumi.Input

	ToRouterRipNetworkArrayOutput() RouterRipNetworkArrayOutput
	ToRouterRipNetworkArrayOutputWithContext(context.Context) RouterRipNetworkArrayOutput
}

type RouterRipNetworkArray []RouterRipNetworkInput

func (RouterRipNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipNetwork)(nil)).Elem()
}

func (i RouterRipNetworkArray) ToRouterRipNetworkArrayOutput() RouterRipNetworkArrayOutput {
	return i.ToRouterRipNetworkArrayOutputWithContext(context.Background())
}

func (i RouterRipNetworkArray) ToRouterRipNetworkArrayOutputWithContext(ctx context.Context) RouterRipNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipNetworkArrayOutput)
}

type RouterRipNetworkOutput struct{ *pulumi.OutputState }

func (RouterRipNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipNetwork)(nil)).Elem()
}

func (o RouterRipNetworkOutput) ToRouterRipNetworkOutput() RouterRipNetworkOutput {
	return o
}

func (o RouterRipNetworkOutput) ToRouterRipNetworkOutputWithContext(ctx context.Context) RouterRipNetworkOutput {
	return o
}

// Network entry ID.
func (o RouterRipNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Network prefix.
func (o RouterRipNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterRipNetworkArrayOutput struct{ *pulumi.OutputState }

func (RouterRipNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipNetwork)(nil)).Elem()
}

func (o RouterRipNetworkArrayOutput) ToRouterRipNetworkArrayOutput() RouterRipNetworkArrayOutput {
	return o
}

func (o RouterRipNetworkArrayOutput) ToRouterRipNetworkArrayOutputWithContext(ctx context.Context) RouterRipNetworkArrayOutput {
	return o
}

func (o RouterRipNetworkArrayOutput) Index(i pulumi.IntInput) RouterRipNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipNetwork {
		return vs[0].([]RouterRipNetwork)[vs[1].(int)]
	}).(RouterRipNetworkOutput)
}

type RouterRipOffsetList struct {
	// Access list name.
	AccessList *string `pulumi:"accessList"`
	// Offset list direction. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// Offset-list ID.
	Id *int `pulumi:"id"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// offset
	Offset *int `pulumi:"offset"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterRipOffsetListInput is an input type that accepts RouterRipOffsetListArgs and RouterRipOffsetListOutput values.
// You can construct a concrete instance of `RouterRipOffsetListInput` via:
//
//	RouterRipOffsetListArgs{...}
type RouterRipOffsetListInput interface {
	pulumi.Input

	ToRouterRipOffsetListOutput() RouterRipOffsetListOutput
	ToRouterRipOffsetListOutputWithContext(context.Context) RouterRipOffsetListOutput
}

type RouterRipOffsetListArgs struct {
	// Access list name.
	AccessList pulumi.StringPtrInput `pulumi:"accessList"`
	// Offset list direction. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// offset
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipOffsetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipOffsetList)(nil)).Elem()
}

func (i RouterRipOffsetListArgs) ToRouterRipOffsetListOutput() RouterRipOffsetListOutput {
	return i.ToRouterRipOffsetListOutputWithContext(context.Background())
}

func (i RouterRipOffsetListArgs) ToRouterRipOffsetListOutputWithContext(ctx context.Context) RouterRipOffsetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipOffsetListOutput)
}

// RouterRipOffsetListArrayInput is an input type that accepts RouterRipOffsetListArray and RouterRipOffsetListArrayOutput values.
// You can construct a concrete instance of `RouterRipOffsetListArrayInput` via:
//
//	RouterRipOffsetListArray{ RouterRipOffsetListArgs{...} }
type RouterRipOffsetListArrayInput interface {
	pulumi.Input

	ToRouterRipOffsetListArrayOutput() RouterRipOffsetListArrayOutput
	ToRouterRipOffsetListArrayOutputWithContext(context.Context) RouterRipOffsetListArrayOutput
}

type RouterRipOffsetListArray []RouterRipOffsetListInput

func (RouterRipOffsetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipOffsetList)(nil)).Elem()
}

func (i RouterRipOffsetListArray) ToRouterRipOffsetListArrayOutput() RouterRipOffsetListArrayOutput {
	return i.ToRouterRipOffsetListArrayOutputWithContext(context.Background())
}

func (i RouterRipOffsetListArray) ToRouterRipOffsetListArrayOutputWithContext(ctx context.Context) RouterRipOffsetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipOffsetListArrayOutput)
}

type RouterRipOffsetListOutput struct{ *pulumi.OutputState }

func (RouterRipOffsetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipOffsetList)(nil)).Elem()
}

func (o RouterRipOffsetListOutput) ToRouterRipOffsetListOutput() RouterRipOffsetListOutput {
	return o
}

func (o RouterRipOffsetListOutput) ToRouterRipOffsetListOutputWithContext(ctx context.Context) RouterRipOffsetListOutput {
	return o
}

// Access list name.
func (o RouterRipOffsetListOutput) AccessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *string { return v.AccessList }).(pulumi.StringPtrOutput)
}

// Offset list direction. Valid values: `in`, `out`.
func (o RouterRipOffsetListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Offset-list ID.
func (o RouterRipOffsetListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RouterRipOffsetListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// offset
func (o RouterRipOffsetListOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RouterRipOffsetListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipOffsetListArrayOutput struct{ *pulumi.OutputState }

func (RouterRipOffsetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipOffsetList)(nil)).Elem()
}

func (o RouterRipOffsetListArrayOutput) ToRouterRipOffsetListArrayOutput() RouterRipOffsetListArrayOutput {
	return o
}

func (o RouterRipOffsetListArrayOutput) ToRouterRipOffsetListArrayOutputWithContext(ctx context.Context) RouterRipOffsetListArrayOutput {
	return o
}

func (o RouterRipOffsetListArrayOutput) Index(i pulumi.IntInput) RouterRipOffsetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipOffsetList {
		return vs[0].([]RouterRipOffsetList)[vs[1].(int)]
	}).(RouterRipOffsetListOutput)
}

type RouterRipPassiveInterface struct {
	// Passive interface name.
	Name *string `pulumi:"name"`
}

// RouterRipPassiveInterfaceInput is an input type that accepts RouterRipPassiveInterfaceArgs and RouterRipPassiveInterfaceOutput values.
// You can construct a concrete instance of `RouterRipPassiveInterfaceInput` via:
//
//	RouterRipPassiveInterfaceArgs{...}
type RouterRipPassiveInterfaceInput interface {
	pulumi.Input

	ToRouterRipPassiveInterfaceOutput() RouterRipPassiveInterfaceOutput
	ToRouterRipPassiveInterfaceOutputWithContext(context.Context) RouterRipPassiveInterfaceOutput
}

type RouterRipPassiveInterfaceArgs struct {
	// Passive interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterRipPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipPassiveInterface)(nil)).Elem()
}

func (i RouterRipPassiveInterfaceArgs) ToRouterRipPassiveInterfaceOutput() RouterRipPassiveInterfaceOutput {
	return i.ToRouterRipPassiveInterfaceOutputWithContext(context.Background())
}

func (i RouterRipPassiveInterfaceArgs) ToRouterRipPassiveInterfaceOutputWithContext(ctx context.Context) RouterRipPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipPassiveInterfaceOutput)
}

// RouterRipPassiveInterfaceArrayInput is an input type that accepts RouterRipPassiveInterfaceArray and RouterRipPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterRipPassiveInterfaceArrayInput` via:
//
//	RouterRipPassiveInterfaceArray{ RouterRipPassiveInterfaceArgs{...} }
type RouterRipPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToRouterRipPassiveInterfaceArrayOutput() RouterRipPassiveInterfaceArrayOutput
	ToRouterRipPassiveInterfaceArrayOutputWithContext(context.Context) RouterRipPassiveInterfaceArrayOutput
}

type RouterRipPassiveInterfaceArray []RouterRipPassiveInterfaceInput

func (RouterRipPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipPassiveInterface)(nil)).Elem()
}

func (i RouterRipPassiveInterfaceArray) ToRouterRipPassiveInterfaceArrayOutput() RouterRipPassiveInterfaceArrayOutput {
	return i.ToRouterRipPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterRipPassiveInterfaceArray) ToRouterRipPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterRipPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipPassiveInterfaceArrayOutput)
}

type RouterRipPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (RouterRipPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipPassiveInterface)(nil)).Elem()
}

func (o RouterRipPassiveInterfaceOutput) ToRouterRipPassiveInterfaceOutput() RouterRipPassiveInterfaceOutput {
	return o
}

func (o RouterRipPassiveInterfaceOutput) ToRouterRipPassiveInterfaceOutputWithContext(ctx context.Context) RouterRipPassiveInterfaceOutput {
	return o
}

// Passive interface name.
func (o RouterRipPassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipPassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterRipPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipPassiveInterface)(nil)).Elem()
}

func (o RouterRipPassiveInterfaceArrayOutput) ToRouterRipPassiveInterfaceArrayOutput() RouterRipPassiveInterfaceArrayOutput {
	return o
}

func (o RouterRipPassiveInterfaceArrayOutput) ToRouterRipPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterRipPassiveInterfaceArrayOutput {
	return o
}

func (o RouterRipPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) RouterRipPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipPassiveInterface {
		return vs[0].([]RouterRipPassiveInterface)[vs[1].(int)]
	}).(RouterRipPassiveInterfaceOutput)
}

type RouterRipRedistribute struct {
	// Redistribute metric setting.
	Metric *int `pulumi:"metric"`
	// Redistribute name.
	Name *string `pulumi:"name"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterRipRedistributeInput is an input type that accepts RouterRipRedistributeArgs and RouterRipRedistributeOutput values.
// You can construct a concrete instance of `RouterRipRedistributeInput` via:
//
//	RouterRipRedistributeArgs{...}
type RouterRipRedistributeInput interface {
	pulumi.Input

	ToRouterRipRedistributeOutput() RouterRipRedistributeOutput
	ToRouterRipRedistributeOutputWithContext(context.Context) RouterRipRedistributeOutput
}

type RouterRipRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Redistribute name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipRedistribute)(nil)).Elem()
}

func (i RouterRipRedistributeArgs) ToRouterRipRedistributeOutput() RouterRipRedistributeOutput {
	return i.ToRouterRipRedistributeOutputWithContext(context.Background())
}

func (i RouterRipRedistributeArgs) ToRouterRipRedistributeOutputWithContext(ctx context.Context) RouterRipRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipRedistributeOutput)
}

// RouterRipRedistributeArrayInput is an input type that accepts RouterRipRedistributeArray and RouterRipRedistributeArrayOutput values.
// You can construct a concrete instance of `RouterRipRedistributeArrayInput` via:
//
//	RouterRipRedistributeArray{ RouterRipRedistributeArgs{...} }
type RouterRipRedistributeArrayInput interface {
	pulumi.Input

	ToRouterRipRedistributeArrayOutput() RouterRipRedistributeArrayOutput
	ToRouterRipRedistributeArrayOutputWithContext(context.Context) RouterRipRedistributeArrayOutput
}

type RouterRipRedistributeArray []RouterRipRedistributeInput

func (RouterRipRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipRedistribute)(nil)).Elem()
}

func (i RouterRipRedistributeArray) ToRouterRipRedistributeArrayOutput() RouterRipRedistributeArrayOutput {
	return i.ToRouterRipRedistributeArrayOutputWithContext(context.Background())
}

func (i RouterRipRedistributeArray) ToRouterRipRedistributeArrayOutputWithContext(ctx context.Context) RouterRipRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipRedistributeArrayOutput)
}

type RouterRipRedistributeOutput struct{ *pulumi.OutputState }

func (RouterRipRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipRedistribute)(nil)).Elem()
}

func (o RouterRipRedistributeOutput) ToRouterRipRedistributeOutput() RouterRipRedistributeOutput {
	return o
}

func (o RouterRipRedistributeOutput) ToRouterRipRedistributeOutputWithContext(ctx context.Context) RouterRipRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o RouterRipRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Redistribute name.
func (o RouterRipRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o RouterRipRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RouterRipRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterRipRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipRedistribute)(nil)).Elem()
}

func (o RouterRipRedistributeArrayOutput) ToRouterRipRedistributeArrayOutput() RouterRipRedistributeArrayOutput {
	return o
}

func (o RouterRipRedistributeArrayOutput) ToRouterRipRedistributeArrayOutputWithContext(ctx context.Context) RouterRipRedistributeArrayOutput {
	return o
}

func (o RouterRipRedistributeArrayOutput) Index(i pulumi.IntInput) RouterRipRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipRedistribute {
		return vs[0].([]RouterRipRedistribute)[vs[1].(int)]
	}).(RouterRipRedistributeOutput)
}

type RouterRipngAggregateAddress struct {
	// Aggregate address entry ID.
	Id *int `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 *string `pulumi:"prefix6"`
}

// RouterRipngAggregateAddressInput is an input type that accepts RouterRipngAggregateAddressArgs and RouterRipngAggregateAddressOutput values.
// You can construct a concrete instance of `RouterRipngAggregateAddressInput` via:
//
//	RouterRipngAggregateAddressArgs{...}
type RouterRipngAggregateAddressInput interface {
	pulumi.Input

	ToRouterRipngAggregateAddressOutput() RouterRipngAggregateAddressOutput
	ToRouterRipngAggregateAddressOutputWithContext(context.Context) RouterRipngAggregateAddressOutput
}

type RouterRipngAggregateAddressArgs struct {
	// Aggregate address entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Aggregate address prefix.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterRipngAggregateAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngAggregateAddress)(nil)).Elem()
}

func (i RouterRipngAggregateAddressArgs) ToRouterRipngAggregateAddressOutput() RouterRipngAggregateAddressOutput {
	return i.ToRouterRipngAggregateAddressOutputWithContext(context.Background())
}

func (i RouterRipngAggregateAddressArgs) ToRouterRipngAggregateAddressOutputWithContext(ctx context.Context) RouterRipngAggregateAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngAggregateAddressOutput)
}

// RouterRipngAggregateAddressArrayInput is an input type that accepts RouterRipngAggregateAddressArray and RouterRipngAggregateAddressArrayOutput values.
// You can construct a concrete instance of `RouterRipngAggregateAddressArrayInput` via:
//
//	RouterRipngAggregateAddressArray{ RouterRipngAggregateAddressArgs{...} }
type RouterRipngAggregateAddressArrayInput interface {
	pulumi.Input

	ToRouterRipngAggregateAddressArrayOutput() RouterRipngAggregateAddressArrayOutput
	ToRouterRipngAggregateAddressArrayOutputWithContext(context.Context) RouterRipngAggregateAddressArrayOutput
}

type RouterRipngAggregateAddressArray []RouterRipngAggregateAddressInput

func (RouterRipngAggregateAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngAggregateAddress)(nil)).Elem()
}

func (i RouterRipngAggregateAddressArray) ToRouterRipngAggregateAddressArrayOutput() RouterRipngAggregateAddressArrayOutput {
	return i.ToRouterRipngAggregateAddressArrayOutputWithContext(context.Background())
}

func (i RouterRipngAggregateAddressArray) ToRouterRipngAggregateAddressArrayOutputWithContext(ctx context.Context) RouterRipngAggregateAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngAggregateAddressArrayOutput)
}

type RouterRipngAggregateAddressOutput struct{ *pulumi.OutputState }

func (RouterRipngAggregateAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngAggregateAddress)(nil)).Elem()
}

func (o RouterRipngAggregateAddressOutput) ToRouterRipngAggregateAddressOutput() RouterRipngAggregateAddressOutput {
	return o
}

func (o RouterRipngAggregateAddressOutput) ToRouterRipngAggregateAddressOutputWithContext(ctx context.Context) RouterRipngAggregateAddressOutput {
	return o
}

// Aggregate address entry ID.
func (o RouterRipngAggregateAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngAggregateAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Aggregate address prefix.
func (o RouterRipngAggregateAddressOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngAggregateAddress) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterRipngAggregateAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngAggregateAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngAggregateAddress)(nil)).Elem()
}

func (o RouterRipngAggregateAddressArrayOutput) ToRouterRipngAggregateAddressArrayOutput() RouterRipngAggregateAddressArrayOutput {
	return o
}

func (o RouterRipngAggregateAddressArrayOutput) ToRouterRipngAggregateAddressArrayOutputWithContext(ctx context.Context) RouterRipngAggregateAddressArrayOutput {
	return o
}

func (o RouterRipngAggregateAddressArrayOutput) Index(i pulumi.IntInput) RouterRipngAggregateAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngAggregateAddress {
		return vs[0].([]RouterRipngAggregateAddress)[vs[1].(int)]
	}).(RouterRipngAggregateAddressOutput)
}

type RouterRipngDistance struct {
	// Access list for route destination.
	AccessList6 *string `pulumi:"accessList6"`
	// Distance (1 - 255).
	Distance *int `pulumi:"distance"`
	// Distance ID.
	Id *int `pulumi:"id"`
	// Distance prefix6.
	Prefix6 *string `pulumi:"prefix6"`
}

// RouterRipngDistanceInput is an input type that accepts RouterRipngDistanceArgs and RouterRipngDistanceOutput values.
// You can construct a concrete instance of `RouterRipngDistanceInput` via:
//
//	RouterRipngDistanceArgs{...}
type RouterRipngDistanceInput interface {
	pulumi.Input

	ToRouterRipngDistanceOutput() RouterRipngDistanceOutput
	ToRouterRipngDistanceOutputWithContext(context.Context) RouterRipngDistanceOutput
}

type RouterRipngDistanceArgs struct {
	// Access list for route destination.
	AccessList6 pulumi.StringPtrInput `pulumi:"accessList6"`
	// Distance (1 - 255).
	Distance pulumi.IntPtrInput `pulumi:"distance"`
	// Distance ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Distance prefix6.
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterRipngDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngDistance)(nil)).Elem()
}

func (i RouterRipngDistanceArgs) ToRouterRipngDistanceOutput() RouterRipngDistanceOutput {
	return i.ToRouterRipngDistanceOutputWithContext(context.Background())
}

func (i RouterRipngDistanceArgs) ToRouterRipngDistanceOutputWithContext(ctx context.Context) RouterRipngDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngDistanceOutput)
}

// RouterRipngDistanceArrayInput is an input type that accepts RouterRipngDistanceArray and RouterRipngDistanceArrayOutput values.
// You can construct a concrete instance of `RouterRipngDistanceArrayInput` via:
//
//	RouterRipngDistanceArray{ RouterRipngDistanceArgs{...} }
type RouterRipngDistanceArrayInput interface {
	pulumi.Input

	ToRouterRipngDistanceArrayOutput() RouterRipngDistanceArrayOutput
	ToRouterRipngDistanceArrayOutputWithContext(context.Context) RouterRipngDistanceArrayOutput
}

type RouterRipngDistanceArray []RouterRipngDistanceInput

func (RouterRipngDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngDistance)(nil)).Elem()
}

func (i RouterRipngDistanceArray) ToRouterRipngDistanceArrayOutput() RouterRipngDistanceArrayOutput {
	return i.ToRouterRipngDistanceArrayOutputWithContext(context.Background())
}

func (i RouterRipngDistanceArray) ToRouterRipngDistanceArrayOutputWithContext(ctx context.Context) RouterRipngDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngDistanceArrayOutput)
}

type RouterRipngDistanceOutput struct{ *pulumi.OutputState }

func (RouterRipngDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngDistance)(nil)).Elem()
}

func (o RouterRipngDistanceOutput) ToRouterRipngDistanceOutput() RouterRipngDistanceOutput {
	return o
}

func (o RouterRipngDistanceOutput) ToRouterRipngDistanceOutputWithContext(ctx context.Context) RouterRipngDistanceOutput {
	return o
}

// Access list for route destination.
func (o RouterRipngDistanceOutput) AccessList6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistance) *string { return v.AccessList6 }).(pulumi.StringPtrOutput)
}

// Distance (1 - 255).
func (o RouterRipngDistanceOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngDistance) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

// Distance ID.
func (o RouterRipngDistanceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngDistance) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Distance prefix6.
func (o RouterRipngDistanceOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistance) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterRipngDistanceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngDistance)(nil)).Elem()
}

func (o RouterRipngDistanceArrayOutput) ToRouterRipngDistanceArrayOutput() RouterRipngDistanceArrayOutput {
	return o
}

func (o RouterRipngDistanceArrayOutput) ToRouterRipngDistanceArrayOutputWithContext(ctx context.Context) RouterRipngDistanceArrayOutput {
	return o
}

func (o RouterRipngDistanceArrayOutput) Index(i pulumi.IntInput) RouterRipngDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngDistance {
		return vs[0].([]RouterRipngDistance)[vs[1].(int)]
	}).(RouterRipngDistanceOutput)
}

type RouterRipngDistributeList struct {
	// Distribute list direction. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// Distribute list ID.
	Id *int `pulumi:"id"`
	// Distribute list interface name.
	Interface *string `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname *string `pulumi:"listname"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterRipngDistributeListInput is an input type that accepts RouterRipngDistributeListArgs and RouterRipngDistributeListOutput values.
// You can construct a concrete instance of `RouterRipngDistributeListInput` via:
//
//	RouterRipngDistributeListArgs{...}
type RouterRipngDistributeListInput interface {
	pulumi.Input

	ToRouterRipngDistributeListOutput() RouterRipngDistributeListOutput
	ToRouterRipngDistributeListOutputWithContext(context.Context) RouterRipngDistributeListOutput
}

type RouterRipngDistributeListArgs struct {
	// Distribute list direction. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Distribute list ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Distribute list interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Distribute access/prefix list name.
	Listname pulumi.StringPtrInput `pulumi:"listname"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipngDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngDistributeList)(nil)).Elem()
}

func (i RouterRipngDistributeListArgs) ToRouterRipngDistributeListOutput() RouterRipngDistributeListOutput {
	return i.ToRouterRipngDistributeListOutputWithContext(context.Background())
}

func (i RouterRipngDistributeListArgs) ToRouterRipngDistributeListOutputWithContext(ctx context.Context) RouterRipngDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngDistributeListOutput)
}

// RouterRipngDistributeListArrayInput is an input type that accepts RouterRipngDistributeListArray and RouterRipngDistributeListArrayOutput values.
// You can construct a concrete instance of `RouterRipngDistributeListArrayInput` via:
//
//	RouterRipngDistributeListArray{ RouterRipngDistributeListArgs{...} }
type RouterRipngDistributeListArrayInput interface {
	pulumi.Input

	ToRouterRipngDistributeListArrayOutput() RouterRipngDistributeListArrayOutput
	ToRouterRipngDistributeListArrayOutputWithContext(context.Context) RouterRipngDistributeListArrayOutput
}

type RouterRipngDistributeListArray []RouterRipngDistributeListInput

func (RouterRipngDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngDistributeList)(nil)).Elem()
}

func (i RouterRipngDistributeListArray) ToRouterRipngDistributeListArrayOutput() RouterRipngDistributeListArrayOutput {
	return i.ToRouterRipngDistributeListArrayOutputWithContext(context.Background())
}

func (i RouterRipngDistributeListArray) ToRouterRipngDistributeListArrayOutputWithContext(ctx context.Context) RouterRipngDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngDistributeListArrayOutput)
}

type RouterRipngDistributeListOutput struct{ *pulumi.OutputState }

func (RouterRipngDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngDistributeList)(nil)).Elem()
}

func (o RouterRipngDistributeListOutput) ToRouterRipngDistributeListOutput() RouterRipngDistributeListOutput {
	return o
}

func (o RouterRipngDistributeListOutput) ToRouterRipngDistributeListOutputWithContext(ctx context.Context) RouterRipngDistributeListOutput {
	return o
}

// Distribute list direction. Valid values: `in`, `out`.
func (o RouterRipngDistributeListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistributeList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Distribute list ID.
func (o RouterRipngDistributeListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngDistributeList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Distribute list interface name.
func (o RouterRipngDistributeListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistributeList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Distribute access/prefix list name.
func (o RouterRipngDistributeListOutput) Listname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistributeList) *string { return v.Listname }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RouterRipngDistributeListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistributeList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipngDistributeListArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngDistributeList)(nil)).Elem()
}

func (o RouterRipngDistributeListArrayOutput) ToRouterRipngDistributeListArrayOutput() RouterRipngDistributeListArrayOutput {
	return o
}

func (o RouterRipngDistributeListArrayOutput) ToRouterRipngDistributeListArrayOutputWithContext(ctx context.Context) RouterRipngDistributeListArrayOutput {
	return o
}

func (o RouterRipngDistributeListArrayOutput) Index(i pulumi.IntInput) RouterRipngDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngDistributeList {
		return vs[0].([]RouterRipngDistributeList)[vs[1].(int)]
	}).(RouterRipngDistributeListOutput)
}

type RouterRipngInterface struct {
	// Flags.
	Flags *int `pulumi:"flags"`
	// Interface name.
	Name *string `pulumi:"name"`
	// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
	SplitHorizon *string `pulumi:"splitHorizon"`
	// Enable/disable split horizon. Valid values: `enable`, `disable`.
	SplitHorizonStatus *string `pulumi:"splitHorizonStatus"`
}

// RouterRipngInterfaceInput is an input type that accepts RouterRipngInterfaceArgs and RouterRipngInterfaceOutput values.
// You can construct a concrete instance of `RouterRipngInterfaceInput` via:
//
//	RouterRipngInterfaceArgs{...}
type RouterRipngInterfaceInput interface {
	pulumi.Input

	ToRouterRipngInterfaceOutput() RouterRipngInterfaceOutput
	ToRouterRipngInterfaceOutputWithContext(context.Context) RouterRipngInterfaceOutput
}

type RouterRipngInterfaceArgs struct {
	// Flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
	SplitHorizon pulumi.StringPtrInput `pulumi:"splitHorizon"`
	// Enable/disable split horizon. Valid values: `enable`, `disable`.
	SplitHorizonStatus pulumi.StringPtrInput `pulumi:"splitHorizonStatus"`
}

func (RouterRipngInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngInterface)(nil)).Elem()
}

func (i RouterRipngInterfaceArgs) ToRouterRipngInterfaceOutput() RouterRipngInterfaceOutput {
	return i.ToRouterRipngInterfaceOutputWithContext(context.Background())
}

func (i RouterRipngInterfaceArgs) ToRouterRipngInterfaceOutputWithContext(ctx context.Context) RouterRipngInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngInterfaceOutput)
}

// RouterRipngInterfaceArrayInput is an input type that accepts RouterRipngInterfaceArray and RouterRipngInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterRipngInterfaceArrayInput` via:
//
//	RouterRipngInterfaceArray{ RouterRipngInterfaceArgs{...} }
type RouterRipngInterfaceArrayInput interface {
	pulumi.Input

	ToRouterRipngInterfaceArrayOutput() RouterRipngInterfaceArrayOutput
	ToRouterRipngInterfaceArrayOutputWithContext(context.Context) RouterRipngInterfaceArrayOutput
}

type RouterRipngInterfaceArray []RouterRipngInterfaceInput

func (RouterRipngInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngInterface)(nil)).Elem()
}

func (i RouterRipngInterfaceArray) ToRouterRipngInterfaceArrayOutput() RouterRipngInterfaceArrayOutput {
	return i.ToRouterRipngInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterRipngInterfaceArray) ToRouterRipngInterfaceArrayOutputWithContext(ctx context.Context) RouterRipngInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngInterfaceArrayOutput)
}

type RouterRipngInterfaceOutput struct{ *pulumi.OutputState }

func (RouterRipngInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngInterface)(nil)).Elem()
}

func (o RouterRipngInterfaceOutput) ToRouterRipngInterfaceOutput() RouterRipngInterfaceOutput {
	return o
}

func (o RouterRipngInterfaceOutput) ToRouterRipngInterfaceOutputWithContext(ctx context.Context) RouterRipngInterfaceOutput {
	return o
}

// Flags.
func (o RouterRipngInterfaceOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngInterface) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RouterRipngInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Enable/disable split horizon. Valid values: `poisoned`, `regular`.
func (o RouterRipngInterfaceOutput) SplitHorizon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngInterface) *string { return v.SplitHorizon }).(pulumi.StringPtrOutput)
}

// Enable/disable split horizon. Valid values: `enable`, `disable`.
func (o RouterRipngInterfaceOutput) SplitHorizonStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngInterface) *string { return v.SplitHorizonStatus }).(pulumi.StringPtrOutput)
}

type RouterRipngInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngInterface)(nil)).Elem()
}

func (o RouterRipngInterfaceArrayOutput) ToRouterRipngInterfaceArrayOutput() RouterRipngInterfaceArrayOutput {
	return o
}

func (o RouterRipngInterfaceArrayOutput) ToRouterRipngInterfaceArrayOutputWithContext(ctx context.Context) RouterRipngInterfaceArrayOutput {
	return o
}

func (o RouterRipngInterfaceArrayOutput) Index(i pulumi.IntInput) RouterRipngInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngInterface {
		return vs[0].([]RouterRipngInterface)[vs[1].(int)]
	}).(RouterRipngInterfaceOutput)
}

type RouterRipngNeighbor struct {
	// Neighbor entry ID.
	Id *int `pulumi:"id"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// IPv6 link-local address.
	Ip6 *string `pulumi:"ip6"`
}

// RouterRipngNeighborInput is an input type that accepts RouterRipngNeighborArgs and RouterRipngNeighborOutput values.
// You can construct a concrete instance of `RouterRipngNeighborInput` via:
//
//	RouterRipngNeighborArgs{...}
type RouterRipngNeighborInput interface {
	pulumi.Input

	ToRouterRipngNeighborOutput() RouterRipngNeighborOutput
	ToRouterRipngNeighborOutputWithContext(context.Context) RouterRipngNeighborOutput
}

type RouterRipngNeighborArgs struct {
	// Neighbor entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// IPv6 link-local address.
	Ip6 pulumi.StringPtrInput `pulumi:"ip6"`
}

func (RouterRipngNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngNeighbor)(nil)).Elem()
}

func (i RouterRipngNeighborArgs) ToRouterRipngNeighborOutput() RouterRipngNeighborOutput {
	return i.ToRouterRipngNeighborOutputWithContext(context.Background())
}

func (i RouterRipngNeighborArgs) ToRouterRipngNeighborOutputWithContext(ctx context.Context) RouterRipngNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngNeighborOutput)
}

// RouterRipngNeighborArrayInput is an input type that accepts RouterRipngNeighborArray and RouterRipngNeighborArrayOutput values.
// You can construct a concrete instance of `RouterRipngNeighborArrayInput` via:
//
//	RouterRipngNeighborArray{ RouterRipngNeighborArgs{...} }
type RouterRipngNeighborArrayInput interface {
	pulumi.Input

	ToRouterRipngNeighborArrayOutput() RouterRipngNeighborArrayOutput
	ToRouterRipngNeighborArrayOutputWithContext(context.Context) RouterRipngNeighborArrayOutput
}

type RouterRipngNeighborArray []RouterRipngNeighborInput

func (RouterRipngNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngNeighbor)(nil)).Elem()
}

func (i RouterRipngNeighborArray) ToRouterRipngNeighborArrayOutput() RouterRipngNeighborArrayOutput {
	return i.ToRouterRipngNeighborArrayOutputWithContext(context.Background())
}

func (i RouterRipngNeighborArray) ToRouterRipngNeighborArrayOutputWithContext(ctx context.Context) RouterRipngNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngNeighborArrayOutput)
}

type RouterRipngNeighborOutput struct{ *pulumi.OutputState }

func (RouterRipngNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngNeighbor)(nil)).Elem()
}

func (o RouterRipngNeighborOutput) ToRouterRipngNeighborOutput() RouterRipngNeighborOutput {
	return o
}

func (o RouterRipngNeighborOutput) ToRouterRipngNeighborOutputWithContext(ctx context.Context) RouterRipngNeighborOutput {
	return o
}

// Neighbor entry ID.
func (o RouterRipngNeighborOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngNeighbor) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RouterRipngNeighborOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngNeighbor) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// IPv6 link-local address.
func (o RouterRipngNeighborOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngNeighbor) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

type RouterRipngNeighborArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngNeighbor)(nil)).Elem()
}

func (o RouterRipngNeighborArrayOutput) ToRouterRipngNeighborArrayOutput() RouterRipngNeighborArrayOutput {
	return o
}

func (o RouterRipngNeighborArrayOutput) ToRouterRipngNeighborArrayOutputWithContext(ctx context.Context) RouterRipngNeighborArrayOutput {
	return o
}

func (o RouterRipngNeighborArrayOutput) Index(i pulumi.IntInput) RouterRipngNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngNeighbor {
		return vs[0].([]RouterRipngNeighbor)[vs[1].(int)]
	}).(RouterRipngNeighborOutput)
}

type RouterRipngNetwork struct {
	// Network entry ID.
	Id *int `pulumi:"id"`
	// Network IPv6 link-local prefix.
	Prefix *string `pulumi:"prefix"`
}

// RouterRipngNetworkInput is an input type that accepts RouterRipngNetworkArgs and RouterRipngNetworkOutput values.
// You can construct a concrete instance of `RouterRipngNetworkInput` via:
//
//	RouterRipngNetworkArgs{...}
type RouterRipngNetworkInput interface {
	pulumi.Input

	ToRouterRipngNetworkOutput() RouterRipngNetworkOutput
	ToRouterRipngNetworkOutputWithContext(context.Context) RouterRipngNetworkOutput
}

type RouterRipngNetworkArgs struct {
	// Network entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Network IPv6 link-local prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterRipngNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngNetwork)(nil)).Elem()
}

func (i RouterRipngNetworkArgs) ToRouterRipngNetworkOutput() RouterRipngNetworkOutput {
	return i.ToRouterRipngNetworkOutputWithContext(context.Background())
}

func (i RouterRipngNetworkArgs) ToRouterRipngNetworkOutputWithContext(ctx context.Context) RouterRipngNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngNetworkOutput)
}

// RouterRipngNetworkArrayInput is an input type that accepts RouterRipngNetworkArray and RouterRipngNetworkArrayOutput values.
// You can construct a concrete instance of `RouterRipngNetworkArrayInput` via:
//
//	RouterRipngNetworkArray{ RouterRipngNetworkArgs{...} }
type RouterRipngNetworkArrayInput interface {
	pulumi.Input

	ToRouterRipngNetworkArrayOutput() RouterRipngNetworkArrayOutput
	ToRouterRipngNetworkArrayOutputWithContext(context.Context) RouterRipngNetworkArrayOutput
}

type RouterRipngNetworkArray []RouterRipngNetworkInput

func (RouterRipngNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngNetwork)(nil)).Elem()
}

func (i RouterRipngNetworkArray) ToRouterRipngNetworkArrayOutput() RouterRipngNetworkArrayOutput {
	return i.ToRouterRipngNetworkArrayOutputWithContext(context.Background())
}

func (i RouterRipngNetworkArray) ToRouterRipngNetworkArrayOutputWithContext(ctx context.Context) RouterRipngNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngNetworkArrayOutput)
}

type RouterRipngNetworkOutput struct{ *pulumi.OutputState }

func (RouterRipngNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngNetwork)(nil)).Elem()
}

func (o RouterRipngNetworkOutput) ToRouterRipngNetworkOutput() RouterRipngNetworkOutput {
	return o
}

func (o RouterRipngNetworkOutput) ToRouterRipngNetworkOutputWithContext(ctx context.Context) RouterRipngNetworkOutput {
	return o
}

// Network entry ID.
func (o RouterRipngNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Network IPv6 link-local prefix.
func (o RouterRipngNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterRipngNetworkArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngNetwork)(nil)).Elem()
}

func (o RouterRipngNetworkArrayOutput) ToRouterRipngNetworkArrayOutput() RouterRipngNetworkArrayOutput {
	return o
}

func (o RouterRipngNetworkArrayOutput) ToRouterRipngNetworkArrayOutputWithContext(ctx context.Context) RouterRipngNetworkArrayOutput {
	return o
}

func (o RouterRipngNetworkArrayOutput) Index(i pulumi.IntInput) RouterRipngNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngNetwork {
		return vs[0].([]RouterRipngNetwork)[vs[1].(int)]
	}).(RouterRipngNetworkOutput)
}

type RouterRipngOffsetList struct {
	// IPv6 access list name.
	AccessList6 *string `pulumi:"accessList6"`
	// Offset list direction. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// Offset-list ID.
	Id *int `pulumi:"id"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// offset
	Offset *int `pulumi:"offset"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterRipngOffsetListInput is an input type that accepts RouterRipngOffsetListArgs and RouterRipngOffsetListOutput values.
// You can construct a concrete instance of `RouterRipngOffsetListInput` via:
//
//	RouterRipngOffsetListArgs{...}
type RouterRipngOffsetListInput interface {
	pulumi.Input

	ToRouterRipngOffsetListOutput() RouterRipngOffsetListOutput
	ToRouterRipngOffsetListOutputWithContext(context.Context) RouterRipngOffsetListOutput
}

type RouterRipngOffsetListArgs struct {
	// IPv6 access list name.
	AccessList6 pulumi.StringPtrInput `pulumi:"accessList6"`
	// Offset list direction. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Offset-list ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// offset
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipngOffsetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngOffsetList)(nil)).Elem()
}

func (i RouterRipngOffsetListArgs) ToRouterRipngOffsetListOutput() RouterRipngOffsetListOutput {
	return i.ToRouterRipngOffsetListOutputWithContext(context.Background())
}

func (i RouterRipngOffsetListArgs) ToRouterRipngOffsetListOutputWithContext(ctx context.Context) RouterRipngOffsetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngOffsetListOutput)
}

// RouterRipngOffsetListArrayInput is an input type that accepts RouterRipngOffsetListArray and RouterRipngOffsetListArrayOutput values.
// You can construct a concrete instance of `RouterRipngOffsetListArrayInput` via:
//
//	RouterRipngOffsetListArray{ RouterRipngOffsetListArgs{...} }
type RouterRipngOffsetListArrayInput interface {
	pulumi.Input

	ToRouterRipngOffsetListArrayOutput() RouterRipngOffsetListArrayOutput
	ToRouterRipngOffsetListArrayOutputWithContext(context.Context) RouterRipngOffsetListArrayOutput
}

type RouterRipngOffsetListArray []RouterRipngOffsetListInput

func (RouterRipngOffsetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngOffsetList)(nil)).Elem()
}

func (i RouterRipngOffsetListArray) ToRouterRipngOffsetListArrayOutput() RouterRipngOffsetListArrayOutput {
	return i.ToRouterRipngOffsetListArrayOutputWithContext(context.Background())
}

func (i RouterRipngOffsetListArray) ToRouterRipngOffsetListArrayOutputWithContext(ctx context.Context) RouterRipngOffsetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngOffsetListArrayOutput)
}

type RouterRipngOffsetListOutput struct{ *pulumi.OutputState }

func (RouterRipngOffsetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngOffsetList)(nil)).Elem()
}

func (o RouterRipngOffsetListOutput) ToRouterRipngOffsetListOutput() RouterRipngOffsetListOutput {
	return o
}

func (o RouterRipngOffsetListOutput) ToRouterRipngOffsetListOutputWithContext(ctx context.Context) RouterRipngOffsetListOutput {
	return o
}

// IPv6 access list name.
func (o RouterRipngOffsetListOutput) AccessList6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *string { return v.AccessList6 }).(pulumi.StringPtrOutput)
}

// Offset list direction. Valid values: `in`, `out`.
func (o RouterRipngOffsetListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Offset-list ID.
func (o RouterRipngOffsetListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o RouterRipngOffsetListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// offset
func (o RouterRipngOffsetListOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RouterRipngOffsetListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipngOffsetListArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngOffsetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngOffsetList)(nil)).Elem()
}

func (o RouterRipngOffsetListArrayOutput) ToRouterRipngOffsetListArrayOutput() RouterRipngOffsetListArrayOutput {
	return o
}

func (o RouterRipngOffsetListArrayOutput) ToRouterRipngOffsetListArrayOutputWithContext(ctx context.Context) RouterRipngOffsetListArrayOutput {
	return o
}

func (o RouterRipngOffsetListArrayOutput) Index(i pulumi.IntInput) RouterRipngOffsetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngOffsetList {
		return vs[0].([]RouterRipngOffsetList)[vs[1].(int)]
	}).(RouterRipngOffsetListOutput)
}

type RouterRipngPassiveInterface struct {
	// Passive interface name.
	Name *string `pulumi:"name"`
}

// RouterRipngPassiveInterfaceInput is an input type that accepts RouterRipngPassiveInterfaceArgs and RouterRipngPassiveInterfaceOutput values.
// You can construct a concrete instance of `RouterRipngPassiveInterfaceInput` via:
//
//	RouterRipngPassiveInterfaceArgs{...}
type RouterRipngPassiveInterfaceInput interface {
	pulumi.Input

	ToRouterRipngPassiveInterfaceOutput() RouterRipngPassiveInterfaceOutput
	ToRouterRipngPassiveInterfaceOutputWithContext(context.Context) RouterRipngPassiveInterfaceOutput
}

type RouterRipngPassiveInterfaceArgs struct {
	// Passive interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterRipngPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngPassiveInterface)(nil)).Elem()
}

func (i RouterRipngPassiveInterfaceArgs) ToRouterRipngPassiveInterfaceOutput() RouterRipngPassiveInterfaceOutput {
	return i.ToRouterRipngPassiveInterfaceOutputWithContext(context.Background())
}

func (i RouterRipngPassiveInterfaceArgs) ToRouterRipngPassiveInterfaceOutputWithContext(ctx context.Context) RouterRipngPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngPassiveInterfaceOutput)
}

// RouterRipngPassiveInterfaceArrayInput is an input type that accepts RouterRipngPassiveInterfaceArray and RouterRipngPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterRipngPassiveInterfaceArrayInput` via:
//
//	RouterRipngPassiveInterfaceArray{ RouterRipngPassiveInterfaceArgs{...} }
type RouterRipngPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToRouterRipngPassiveInterfaceArrayOutput() RouterRipngPassiveInterfaceArrayOutput
	ToRouterRipngPassiveInterfaceArrayOutputWithContext(context.Context) RouterRipngPassiveInterfaceArrayOutput
}

type RouterRipngPassiveInterfaceArray []RouterRipngPassiveInterfaceInput

func (RouterRipngPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngPassiveInterface)(nil)).Elem()
}

func (i RouterRipngPassiveInterfaceArray) ToRouterRipngPassiveInterfaceArrayOutput() RouterRipngPassiveInterfaceArrayOutput {
	return i.ToRouterRipngPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterRipngPassiveInterfaceArray) ToRouterRipngPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterRipngPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngPassiveInterfaceArrayOutput)
}

type RouterRipngPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (RouterRipngPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngPassiveInterface)(nil)).Elem()
}

func (o RouterRipngPassiveInterfaceOutput) ToRouterRipngPassiveInterfaceOutput() RouterRipngPassiveInterfaceOutput {
	return o
}

func (o RouterRipngPassiveInterfaceOutput) ToRouterRipngPassiveInterfaceOutputWithContext(ctx context.Context) RouterRipngPassiveInterfaceOutput {
	return o
}

// Passive interface name.
func (o RouterRipngPassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngPassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterRipngPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngPassiveInterface)(nil)).Elem()
}

func (o RouterRipngPassiveInterfaceArrayOutput) ToRouterRipngPassiveInterfaceArrayOutput() RouterRipngPassiveInterfaceArrayOutput {
	return o
}

func (o RouterRipngPassiveInterfaceArrayOutput) ToRouterRipngPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterRipngPassiveInterfaceArrayOutput {
	return o
}

func (o RouterRipngPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) RouterRipngPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngPassiveInterface {
		return vs[0].([]RouterRipngPassiveInterface)[vs[1].(int)]
	}).(RouterRipngPassiveInterfaceOutput)
}

type RouterRipngRedistribute struct {
	// Redistribute metric setting.
	Metric *int `pulumi:"metric"`
	// Redistribute name.
	Name *string `pulumi:"name"`
	// Route map name.
	Routemap *string `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// RouterRipngRedistributeInput is an input type that accepts RouterRipngRedistributeArgs and RouterRipngRedistributeOutput values.
// You can construct a concrete instance of `RouterRipngRedistributeInput` via:
//
//	RouterRipngRedistributeArgs{...}
type RouterRipngRedistributeInput interface {
	pulumi.Input

	ToRouterRipngRedistributeOutput() RouterRipngRedistributeOutput
	ToRouterRipngRedistributeOutputWithContext(context.Context) RouterRipngRedistributeOutput
}

type RouterRipngRedistributeArgs struct {
	// Redistribute metric setting.
	Metric pulumi.IntPtrInput `pulumi:"metric"`
	// Redistribute name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route map name.
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	// status Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipngRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngRedistribute)(nil)).Elem()
}

func (i RouterRipngRedistributeArgs) ToRouterRipngRedistributeOutput() RouterRipngRedistributeOutput {
	return i.ToRouterRipngRedistributeOutputWithContext(context.Background())
}

func (i RouterRipngRedistributeArgs) ToRouterRipngRedistributeOutputWithContext(ctx context.Context) RouterRipngRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngRedistributeOutput)
}

// RouterRipngRedistributeArrayInput is an input type that accepts RouterRipngRedistributeArray and RouterRipngRedistributeArrayOutput values.
// You can construct a concrete instance of `RouterRipngRedistributeArrayInput` via:
//
//	RouterRipngRedistributeArray{ RouterRipngRedistributeArgs{...} }
type RouterRipngRedistributeArrayInput interface {
	pulumi.Input

	ToRouterRipngRedistributeArrayOutput() RouterRipngRedistributeArrayOutput
	ToRouterRipngRedistributeArrayOutputWithContext(context.Context) RouterRipngRedistributeArrayOutput
}

type RouterRipngRedistributeArray []RouterRipngRedistributeInput

func (RouterRipngRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngRedistribute)(nil)).Elem()
}

func (i RouterRipngRedistributeArray) ToRouterRipngRedistributeArrayOutput() RouterRipngRedistributeArrayOutput {
	return i.ToRouterRipngRedistributeArrayOutputWithContext(context.Background())
}

func (i RouterRipngRedistributeArray) ToRouterRipngRedistributeArrayOutputWithContext(ctx context.Context) RouterRipngRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngRedistributeArrayOutput)
}

type RouterRipngRedistributeOutput struct{ *pulumi.OutputState }

func (RouterRipngRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngRedistribute)(nil)).Elem()
}

func (o RouterRipngRedistributeOutput) ToRouterRipngRedistributeOutput() RouterRipngRedistributeOutput {
	return o
}

func (o RouterRipngRedistributeOutput) ToRouterRipngRedistributeOutputWithContext(ctx context.Context) RouterRipngRedistributeOutput {
	return o
}

// Redistribute metric setting.
func (o RouterRipngRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// Redistribute name.
func (o RouterRipngRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route map name.
func (o RouterRipngRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

// status Valid values: `enable`, `disable`.
func (o RouterRipngRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipngRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngRedistribute)(nil)).Elem()
}

func (o RouterRipngRedistributeArrayOutput) ToRouterRipngRedistributeArrayOutput() RouterRipngRedistributeArrayOutput {
	return o
}

func (o RouterRipngRedistributeArrayOutput) ToRouterRipngRedistributeArrayOutputWithContext(ctx context.Context) RouterRipngRedistributeArrayOutput {
	return o
}

func (o RouterRipngRedistributeArrayOutput) Index(i pulumi.IntInput) RouterRipngRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngRedistribute {
		return vs[0].([]RouterRipngRedistribute)[vs[1].(int)]
	}).(RouterRipngRedistributeOutput)
}

type RouterRoutemapRule struct {
	// Action. Valid values: `permit`, `deny`.
	Action *string `pulumi:"action"`
	// Rule ID.
	Id *int `pulumi:"id"`
	// Match BGP AS path list.
	MatchAsPath *string `pulumi:"matchAsPath"`
	// Match BGP community list.
	MatchCommunity *string `pulumi:"matchCommunity"`
	// Enable/disable exact matching of communities. Valid values: `enable`, `disable`.
	MatchCommunityExact *string `pulumi:"matchCommunityExact"`
	// BGP flag value to match (0 - 65535)
	MatchFlags *int `pulumi:"matchFlags"`
	// Match interface configuration.
	MatchInterface *string `pulumi:"matchInterface"`
	// Match IPv6 address permitted by access-list6 or prefix-list6.
	MatchIp6Address *string `pulumi:"matchIp6Address"`
	// Match next hop IPv6 address passed by access-list6 or prefix-list6.
	MatchIp6Nexthop *string `pulumi:"matchIp6Nexthop"`
	// Match IP address permitted by access-list or prefix-list.
	MatchIpAddress *string `pulumi:"matchIpAddress"`
	// Match next hop IP address passed by access-list or prefix-list.
	MatchIpNexthop *string `pulumi:"matchIpNexthop"`
	// Match metric for redistribute routes.
	MatchMetric *int `pulumi:"matchMetric"`
	// Match BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
	MatchOrigin *string `pulumi:"matchOrigin"`
	// Match route type.
	MatchRouteType *string `pulumi:"matchRouteType"`
	// Match tag.
	MatchTag *int `pulumi:"matchTag"`
	// Match VRF ID.
	MatchVrf *int `pulumi:"matchVrf"`
	// BGP aggregator AS.
	SetAggregatorAs *int `pulumi:"setAggregatorAs"`
	// BGP aggregator IP.
	SetAggregatorIp *string `pulumi:"setAggregatorIp"`
	// Specify preferred action of set-aspath. Valid values: `prepend`, `replace`.
	SetAspathAction *string `pulumi:"setAspathAction"`
	// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
	SetAspaths []RouterRoutemapRuleSetAspath `pulumi:"setAspaths"`
	// Enable/disable BGP atomic aggregate attribute. Valid values: `enable`, `disable`.
	SetAtomicAggregate *string `pulumi:"setAtomicAggregate"`
	// BGP community attribute. The structure of `setCommunity` block is documented below.
	SetCommunities []RouterRoutemapRuleSetCommunity `pulumi:"setCommunities"`
	// Enable/disable adding set-community to existing community. Valid values: `enable`, `disable`.
	SetCommunityAdditive *string `pulumi:"setCommunityAdditive"`
	// Delete communities matching community list.
	SetCommunityDelete *string `pulumi:"setCommunityDelete"`
	// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
	SetDampeningMaxSuppress *int `pulumi:"setDampeningMaxSuppress"`
	// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
	SetDampeningReachabilityHalfLife *int `pulumi:"setDampeningReachabilityHalfLife"`
	// Value to start reusing a route (1 - 20000, 0 = unset).
	SetDampeningReuse *int `pulumi:"setDampeningReuse"`
	// Value to start suppressing a route (1 - 20000, 0 = unset).
	SetDampeningSuppress *int `pulumi:"setDampeningSuppress"`
	// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
	SetDampeningUnreachabilityHalfLife *int `pulumi:"setDampeningUnreachabilityHalfLife"`
	// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
	SetExtcommunityRts []RouterRoutemapRuleSetExtcommunityRt `pulumi:"setExtcommunityRts"`
	// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
	SetExtcommunitySoos []RouterRoutemapRuleSetExtcommunitySoo `pulumi:"setExtcommunitySoos"`
	// BGP flags value (0 - 65535)
	SetFlags *int `pulumi:"setFlags"`
	// IPv6 global address of next hop.
	SetIp6Nexthop *string `pulumi:"setIp6Nexthop"`
	// IPv6 local address of next hop.
	SetIp6NexthopLocal *string `pulumi:"setIp6NexthopLocal"`
	// IP address of next hop.
	SetIpNexthop *string `pulumi:"setIpNexthop"`
	// BGP local preference path attribute.
	SetLocalPreference *int `pulumi:"setLocalPreference"`
	// Metric value.
	SetMetric *int `pulumi:"setMetric"`
	// Metric type.
	SetMetricType *string `pulumi:"setMetricType"`
	// BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
	SetOrigin *string `pulumi:"setOrigin"`
	// BGP originator ID attribute.
	SetOriginatorId *string `pulumi:"setOriginatorId"`
	// Priority for routing table.
	SetPriority *int `pulumi:"setPriority"`
	// Route tag for routing table.
	SetRouteTag *int `pulumi:"setRouteTag"`
	// Tag value.
	SetTag *int `pulumi:"setTag"`
	// BGP weight for routing table.
	SetWeight *int `pulumi:"setWeight"`
}

// RouterRoutemapRuleInput is an input type that accepts RouterRoutemapRuleArgs and RouterRoutemapRuleOutput values.
// You can construct a concrete instance of `RouterRoutemapRuleInput` via:
//
//	RouterRoutemapRuleArgs{...}
type RouterRoutemapRuleInput interface {
	pulumi.Input

	ToRouterRoutemapRuleOutput() RouterRoutemapRuleOutput
	ToRouterRoutemapRuleOutputWithContext(context.Context) RouterRoutemapRuleOutput
}

type RouterRoutemapRuleArgs struct {
	// Action. Valid values: `permit`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Match BGP AS path list.
	MatchAsPath pulumi.StringPtrInput `pulumi:"matchAsPath"`
	// Match BGP community list.
	MatchCommunity pulumi.StringPtrInput `pulumi:"matchCommunity"`
	// Enable/disable exact matching of communities. Valid values: `enable`, `disable`.
	MatchCommunityExact pulumi.StringPtrInput `pulumi:"matchCommunityExact"`
	// BGP flag value to match (0 - 65535)
	MatchFlags pulumi.IntPtrInput `pulumi:"matchFlags"`
	// Match interface configuration.
	MatchInterface pulumi.StringPtrInput `pulumi:"matchInterface"`
	// Match IPv6 address permitted by access-list6 or prefix-list6.
	MatchIp6Address pulumi.StringPtrInput `pulumi:"matchIp6Address"`
	// Match next hop IPv6 address passed by access-list6 or prefix-list6.
	MatchIp6Nexthop pulumi.StringPtrInput `pulumi:"matchIp6Nexthop"`
	// Match IP address permitted by access-list or prefix-list.
	MatchIpAddress pulumi.StringPtrInput `pulumi:"matchIpAddress"`
	// Match next hop IP address passed by access-list or prefix-list.
	MatchIpNexthop pulumi.StringPtrInput `pulumi:"matchIpNexthop"`
	// Match metric for redistribute routes.
	MatchMetric pulumi.IntPtrInput `pulumi:"matchMetric"`
	// Match BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
	MatchOrigin pulumi.StringPtrInput `pulumi:"matchOrigin"`
	// Match route type.
	MatchRouteType pulumi.StringPtrInput `pulumi:"matchRouteType"`
	// Match tag.
	MatchTag pulumi.IntPtrInput `pulumi:"matchTag"`
	// Match VRF ID.
	MatchVrf pulumi.IntPtrInput `pulumi:"matchVrf"`
	// BGP aggregator AS.
	SetAggregatorAs pulumi.IntPtrInput `pulumi:"setAggregatorAs"`
	// BGP aggregator IP.
	SetAggregatorIp pulumi.StringPtrInput `pulumi:"setAggregatorIp"`
	// Specify preferred action of set-aspath. Valid values: `prepend`, `replace`.
	SetAspathAction pulumi.StringPtrInput `pulumi:"setAspathAction"`
	// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
	SetAspaths RouterRoutemapRuleSetAspathArrayInput `pulumi:"setAspaths"`
	// Enable/disable BGP atomic aggregate attribute. Valid values: `enable`, `disable`.
	SetAtomicAggregate pulumi.StringPtrInput `pulumi:"setAtomicAggregate"`
	// BGP community attribute. The structure of `setCommunity` block is documented below.
	SetCommunities RouterRoutemapRuleSetCommunityArrayInput `pulumi:"setCommunities"`
	// Enable/disable adding set-community to existing community. Valid values: `enable`, `disable`.
	SetCommunityAdditive pulumi.StringPtrInput `pulumi:"setCommunityAdditive"`
	// Delete communities matching community list.
	SetCommunityDelete pulumi.StringPtrInput `pulumi:"setCommunityDelete"`
	// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
	SetDampeningMaxSuppress pulumi.IntPtrInput `pulumi:"setDampeningMaxSuppress"`
	// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
	SetDampeningReachabilityHalfLife pulumi.IntPtrInput `pulumi:"setDampeningReachabilityHalfLife"`
	// Value to start reusing a route (1 - 20000, 0 = unset).
	SetDampeningReuse pulumi.IntPtrInput `pulumi:"setDampeningReuse"`
	// Value to start suppressing a route (1 - 20000, 0 = unset).
	SetDampeningSuppress pulumi.IntPtrInput `pulumi:"setDampeningSuppress"`
	// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
	SetDampeningUnreachabilityHalfLife pulumi.IntPtrInput `pulumi:"setDampeningUnreachabilityHalfLife"`
	// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
	SetExtcommunityRts RouterRoutemapRuleSetExtcommunityRtArrayInput `pulumi:"setExtcommunityRts"`
	// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
	SetExtcommunitySoos RouterRoutemapRuleSetExtcommunitySooArrayInput `pulumi:"setExtcommunitySoos"`
	// BGP flags value (0 - 65535)
	SetFlags pulumi.IntPtrInput `pulumi:"setFlags"`
	// IPv6 global address of next hop.
	SetIp6Nexthop pulumi.StringPtrInput `pulumi:"setIp6Nexthop"`
	// IPv6 local address of next hop.
	SetIp6NexthopLocal pulumi.StringPtrInput `pulumi:"setIp6NexthopLocal"`
	// IP address of next hop.
	SetIpNexthop pulumi.StringPtrInput `pulumi:"setIpNexthop"`
	// BGP local preference path attribute.
	SetLocalPreference pulumi.IntPtrInput `pulumi:"setLocalPreference"`
	// Metric value.
	SetMetric pulumi.IntPtrInput `pulumi:"setMetric"`
	// Metric type.
	SetMetricType pulumi.StringPtrInput `pulumi:"setMetricType"`
	// BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
	SetOrigin pulumi.StringPtrInput `pulumi:"setOrigin"`
	// BGP originator ID attribute.
	SetOriginatorId pulumi.StringPtrInput `pulumi:"setOriginatorId"`
	// Priority for routing table.
	SetPriority pulumi.IntPtrInput `pulumi:"setPriority"`
	// Route tag for routing table.
	SetRouteTag pulumi.IntPtrInput `pulumi:"setRouteTag"`
	// Tag value.
	SetTag pulumi.IntPtrInput `pulumi:"setTag"`
	// BGP weight for routing table.
	SetWeight pulumi.IntPtrInput `pulumi:"setWeight"`
}

func (RouterRoutemapRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRoutemapRule)(nil)).Elem()
}

func (i RouterRoutemapRuleArgs) ToRouterRoutemapRuleOutput() RouterRoutemapRuleOutput {
	return i.ToRouterRoutemapRuleOutputWithContext(context.Background())
}

func (i RouterRoutemapRuleArgs) ToRouterRoutemapRuleOutputWithContext(ctx context.Context) RouterRoutemapRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRoutemapRuleOutput)
}

// RouterRoutemapRuleArrayInput is an input type that accepts RouterRoutemapRuleArray and RouterRoutemapRuleArrayOutput values.
// You can construct a concrete instance of `RouterRoutemapRuleArrayInput` via:
//
//	RouterRoutemapRuleArray{ RouterRoutemapRuleArgs{...} }
type RouterRoutemapRuleArrayInput interface {
	pulumi.Input

	ToRouterRoutemapRuleArrayOutput() RouterRoutemapRuleArrayOutput
	ToRouterRoutemapRuleArrayOutputWithContext(context.Context) RouterRoutemapRuleArrayOutput
}

type RouterRoutemapRuleArray []RouterRoutemapRuleInput

func (RouterRoutemapRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRoutemapRule)(nil)).Elem()
}

func (i RouterRoutemapRuleArray) ToRouterRoutemapRuleArrayOutput() RouterRoutemapRuleArrayOutput {
	return i.ToRouterRoutemapRuleArrayOutputWithContext(context.Background())
}

func (i RouterRoutemapRuleArray) ToRouterRoutemapRuleArrayOutputWithContext(ctx context.Context) RouterRoutemapRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRoutemapRuleArrayOutput)
}

type RouterRoutemapRuleOutput struct{ *pulumi.OutputState }

func (RouterRoutemapRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRoutemapRule)(nil)).Elem()
}

func (o RouterRoutemapRuleOutput) ToRouterRoutemapRuleOutput() RouterRoutemapRuleOutput {
	return o
}

func (o RouterRoutemapRuleOutput) ToRouterRoutemapRuleOutputWithContext(ctx context.Context) RouterRoutemapRuleOutput {
	return o
}

// Action. Valid values: `permit`, `deny`.
func (o RouterRoutemapRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Rule ID.
func (o RouterRoutemapRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Match BGP AS path list.
func (o RouterRoutemapRuleOutput) MatchAsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.MatchAsPath }).(pulumi.StringPtrOutput)
}

// Match BGP community list.
func (o RouterRoutemapRuleOutput) MatchCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.MatchCommunity }).(pulumi.StringPtrOutput)
}

// Enable/disable exact matching of communities. Valid values: `enable`, `disable`.
func (o RouterRoutemapRuleOutput) MatchCommunityExact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.MatchCommunityExact }).(pulumi.StringPtrOutput)
}

// BGP flag value to match (0 - 65535)
func (o RouterRoutemapRuleOutput) MatchFlags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.MatchFlags }).(pulumi.IntPtrOutput)
}

// Match interface configuration.
func (o RouterRoutemapRuleOutput) MatchInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.MatchInterface }).(pulumi.StringPtrOutput)
}

// Match IPv6 address permitted by access-list6 or prefix-list6.
func (o RouterRoutemapRuleOutput) MatchIp6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.MatchIp6Address }).(pulumi.StringPtrOutput)
}

// Match next hop IPv6 address passed by access-list6 or prefix-list6.
func (o RouterRoutemapRuleOutput) MatchIp6Nexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.MatchIp6Nexthop }).(pulumi.StringPtrOutput)
}

// Match IP address permitted by access-list or prefix-list.
func (o RouterRoutemapRuleOutput) MatchIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.MatchIpAddress }).(pulumi.StringPtrOutput)
}

// Match next hop IP address passed by access-list or prefix-list.
func (o RouterRoutemapRuleOutput) MatchIpNexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.MatchIpNexthop }).(pulumi.StringPtrOutput)
}

// Match metric for redistribute routes.
func (o RouterRoutemapRuleOutput) MatchMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.MatchMetric }).(pulumi.IntPtrOutput)
}

// Match BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
func (o RouterRoutemapRuleOutput) MatchOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.MatchOrigin }).(pulumi.StringPtrOutput)
}

// Match route type.
func (o RouterRoutemapRuleOutput) MatchRouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.MatchRouteType }).(pulumi.StringPtrOutput)
}

// Match tag.
func (o RouterRoutemapRuleOutput) MatchTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.MatchTag }).(pulumi.IntPtrOutput)
}

// Match VRF ID.
func (o RouterRoutemapRuleOutput) MatchVrf() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.MatchVrf }).(pulumi.IntPtrOutput)
}

// BGP aggregator AS.
func (o RouterRoutemapRuleOutput) SetAggregatorAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetAggregatorAs }).(pulumi.IntPtrOutput)
}

// BGP aggregator IP.
func (o RouterRoutemapRuleOutput) SetAggregatorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetAggregatorIp }).(pulumi.StringPtrOutput)
}

// Specify preferred action of set-aspath. Valid values: `prepend`, `replace`.
func (o RouterRoutemapRuleOutput) SetAspathAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetAspathAction }).(pulumi.StringPtrOutput)
}

// Prepend BGP AS path attribute. The structure of `setAspath` block is documented below.
func (o RouterRoutemapRuleOutput) SetAspaths() RouterRoutemapRuleSetAspathArrayOutput {
	return o.ApplyT(func(v RouterRoutemapRule) []RouterRoutemapRuleSetAspath { return v.SetAspaths }).(RouterRoutemapRuleSetAspathArrayOutput)
}

// Enable/disable BGP atomic aggregate attribute. Valid values: `enable`, `disable`.
func (o RouterRoutemapRuleOutput) SetAtomicAggregate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetAtomicAggregate }).(pulumi.StringPtrOutput)
}

// BGP community attribute. The structure of `setCommunity` block is documented below.
func (o RouterRoutemapRuleOutput) SetCommunities() RouterRoutemapRuleSetCommunityArrayOutput {
	return o.ApplyT(func(v RouterRoutemapRule) []RouterRoutemapRuleSetCommunity { return v.SetCommunities }).(RouterRoutemapRuleSetCommunityArrayOutput)
}

// Enable/disable adding set-community to existing community. Valid values: `enable`, `disable`.
func (o RouterRoutemapRuleOutput) SetCommunityAdditive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetCommunityAdditive }).(pulumi.StringPtrOutput)
}

// Delete communities matching community list.
func (o RouterRoutemapRuleOutput) SetCommunityDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetCommunityDelete }).(pulumi.StringPtrOutput)
}

// Maximum duration to suppress a route (1 - 255 min, 0 = unset).
func (o RouterRoutemapRuleOutput) SetDampeningMaxSuppress() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetDampeningMaxSuppress }).(pulumi.IntPtrOutput)
}

// Reachability half-life time for the penalty (1 - 45 min, 0 = unset).
func (o RouterRoutemapRuleOutput) SetDampeningReachabilityHalfLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetDampeningReachabilityHalfLife }).(pulumi.IntPtrOutput)
}

// Value to start reusing a route (1 - 20000, 0 = unset).
func (o RouterRoutemapRuleOutput) SetDampeningReuse() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetDampeningReuse }).(pulumi.IntPtrOutput)
}

// Value to start suppressing a route (1 - 20000, 0 = unset).
func (o RouterRoutemapRuleOutput) SetDampeningSuppress() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetDampeningSuppress }).(pulumi.IntPtrOutput)
}

// Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)
func (o RouterRoutemapRuleOutput) SetDampeningUnreachabilityHalfLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetDampeningUnreachabilityHalfLife }).(pulumi.IntPtrOutput)
}

// Route Target extended community. The structure of `setExtcommunityRt` block is documented below.
func (o RouterRoutemapRuleOutput) SetExtcommunityRts() RouterRoutemapRuleSetExtcommunityRtArrayOutput {
	return o.ApplyT(func(v RouterRoutemapRule) []RouterRoutemapRuleSetExtcommunityRt { return v.SetExtcommunityRts }).(RouterRoutemapRuleSetExtcommunityRtArrayOutput)
}

// Site-of-Origin extended community. The structure of `setExtcommunitySoo` block is documented below.
func (o RouterRoutemapRuleOutput) SetExtcommunitySoos() RouterRoutemapRuleSetExtcommunitySooArrayOutput {
	return o.ApplyT(func(v RouterRoutemapRule) []RouterRoutemapRuleSetExtcommunitySoo { return v.SetExtcommunitySoos }).(RouterRoutemapRuleSetExtcommunitySooArrayOutput)
}

// BGP flags value (0 - 65535)
func (o RouterRoutemapRuleOutput) SetFlags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetFlags }).(pulumi.IntPtrOutput)
}

// IPv6 global address of next hop.
func (o RouterRoutemapRuleOutput) SetIp6Nexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetIp6Nexthop }).(pulumi.StringPtrOutput)
}

// IPv6 local address of next hop.
func (o RouterRoutemapRuleOutput) SetIp6NexthopLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetIp6NexthopLocal }).(pulumi.StringPtrOutput)
}

// IP address of next hop.
func (o RouterRoutemapRuleOutput) SetIpNexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetIpNexthop }).(pulumi.StringPtrOutput)
}

// BGP local preference path attribute.
func (o RouterRoutemapRuleOutput) SetLocalPreference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetLocalPreference }).(pulumi.IntPtrOutput)
}

// Metric value.
func (o RouterRoutemapRuleOutput) SetMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetMetric }).(pulumi.IntPtrOutput)
}

// Metric type.
func (o RouterRoutemapRuleOutput) SetMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetMetricType }).(pulumi.StringPtrOutput)
}

// BGP origin code. Valid values: `none`, `egp`, `igp`, `incomplete`.
func (o RouterRoutemapRuleOutput) SetOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetOrigin }).(pulumi.StringPtrOutput)
}

// BGP originator ID attribute.
func (o RouterRoutemapRuleOutput) SetOriginatorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *string { return v.SetOriginatorId }).(pulumi.StringPtrOutput)
}

// Priority for routing table.
func (o RouterRoutemapRuleOutput) SetPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetPriority }).(pulumi.IntPtrOutput)
}

// Route tag for routing table.
func (o RouterRoutemapRuleOutput) SetRouteTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetRouteTag }).(pulumi.IntPtrOutput)
}

// Tag value.
func (o RouterRoutemapRuleOutput) SetTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetTag }).(pulumi.IntPtrOutput)
}

// BGP weight for routing table.
func (o RouterRoutemapRuleOutput) SetWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRule) *int { return v.SetWeight }).(pulumi.IntPtrOutput)
}

type RouterRoutemapRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterRoutemapRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRoutemapRule)(nil)).Elem()
}

func (o RouterRoutemapRuleArrayOutput) ToRouterRoutemapRuleArrayOutput() RouterRoutemapRuleArrayOutput {
	return o
}

func (o RouterRoutemapRuleArrayOutput) ToRouterRoutemapRuleArrayOutputWithContext(ctx context.Context) RouterRoutemapRuleArrayOutput {
	return o
}

func (o RouterRoutemapRuleArrayOutput) Index(i pulumi.IntInput) RouterRoutemapRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRoutemapRule {
		return vs[0].([]RouterRoutemapRule)[vs[1].(int)]
	}).(RouterRoutemapRuleOutput)
}

type RouterRoutemapRuleSetAspath struct {
	// AS number (0 - 42949672). NOTE: Use quotes for repeating numbers, e.g.: "1 1 2"
	As *string `pulumi:"as"`
}

// RouterRoutemapRuleSetAspathInput is an input type that accepts RouterRoutemapRuleSetAspathArgs and RouterRoutemapRuleSetAspathOutput values.
// You can construct a concrete instance of `RouterRoutemapRuleSetAspathInput` via:
//
//	RouterRoutemapRuleSetAspathArgs{...}
type RouterRoutemapRuleSetAspathInput interface {
	pulumi.Input

	ToRouterRoutemapRuleSetAspathOutput() RouterRoutemapRuleSetAspathOutput
	ToRouterRoutemapRuleSetAspathOutputWithContext(context.Context) RouterRoutemapRuleSetAspathOutput
}

type RouterRoutemapRuleSetAspathArgs struct {
	// AS number (0 - 42949672). NOTE: Use quotes for repeating numbers, e.g.: "1 1 2"
	As pulumi.StringPtrInput `pulumi:"as"`
}

func (RouterRoutemapRuleSetAspathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRoutemapRuleSetAspath)(nil)).Elem()
}

func (i RouterRoutemapRuleSetAspathArgs) ToRouterRoutemapRuleSetAspathOutput() RouterRoutemapRuleSetAspathOutput {
	return i.ToRouterRoutemapRuleSetAspathOutputWithContext(context.Background())
}

func (i RouterRoutemapRuleSetAspathArgs) ToRouterRoutemapRuleSetAspathOutputWithContext(ctx context.Context) RouterRoutemapRuleSetAspathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRoutemapRuleSetAspathOutput)
}

// RouterRoutemapRuleSetAspathArrayInput is an input type that accepts RouterRoutemapRuleSetAspathArray and RouterRoutemapRuleSetAspathArrayOutput values.
// You can construct a concrete instance of `RouterRoutemapRuleSetAspathArrayInput` via:
//
//	RouterRoutemapRuleSetAspathArray{ RouterRoutemapRuleSetAspathArgs{...} }
type RouterRoutemapRuleSetAspathArrayInput interface {
	pulumi.Input

	ToRouterRoutemapRuleSetAspathArrayOutput() RouterRoutemapRuleSetAspathArrayOutput
	ToRouterRoutemapRuleSetAspathArrayOutputWithContext(context.Context) RouterRoutemapRuleSetAspathArrayOutput
}

type RouterRoutemapRuleSetAspathArray []RouterRoutemapRuleSetAspathInput

func (RouterRoutemapRuleSetAspathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRoutemapRuleSetAspath)(nil)).Elem()
}

func (i RouterRoutemapRuleSetAspathArray) ToRouterRoutemapRuleSetAspathArrayOutput() RouterRoutemapRuleSetAspathArrayOutput {
	return i.ToRouterRoutemapRuleSetAspathArrayOutputWithContext(context.Background())
}

func (i RouterRoutemapRuleSetAspathArray) ToRouterRoutemapRuleSetAspathArrayOutputWithContext(ctx context.Context) RouterRoutemapRuleSetAspathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRoutemapRuleSetAspathArrayOutput)
}

type RouterRoutemapRuleSetAspathOutput struct{ *pulumi.OutputState }

func (RouterRoutemapRuleSetAspathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRoutemapRuleSetAspath)(nil)).Elem()
}

func (o RouterRoutemapRuleSetAspathOutput) ToRouterRoutemapRuleSetAspathOutput() RouterRoutemapRuleSetAspathOutput {
	return o
}

func (o RouterRoutemapRuleSetAspathOutput) ToRouterRoutemapRuleSetAspathOutputWithContext(ctx context.Context) RouterRoutemapRuleSetAspathOutput {
	return o
}

// AS number (0 - 42949672). NOTE: Use quotes for repeating numbers, e.g.: "1 1 2"
func (o RouterRoutemapRuleSetAspathOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRuleSetAspath) *string { return v.As }).(pulumi.StringPtrOutput)
}

type RouterRoutemapRuleSetAspathArrayOutput struct{ *pulumi.OutputState }

func (RouterRoutemapRuleSetAspathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRoutemapRuleSetAspath)(nil)).Elem()
}

func (o RouterRoutemapRuleSetAspathArrayOutput) ToRouterRoutemapRuleSetAspathArrayOutput() RouterRoutemapRuleSetAspathArrayOutput {
	return o
}

func (o RouterRoutemapRuleSetAspathArrayOutput) ToRouterRoutemapRuleSetAspathArrayOutputWithContext(ctx context.Context) RouterRoutemapRuleSetAspathArrayOutput {
	return o
}

func (o RouterRoutemapRuleSetAspathArrayOutput) Index(i pulumi.IntInput) RouterRoutemapRuleSetAspathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRoutemapRuleSetAspath {
		return vs[0].([]RouterRoutemapRuleSetAspath)[vs[1].(int)]
	}).(RouterRoutemapRuleSetAspathOutput)
}

type RouterRoutemapRuleSetCommunity struct {
	// Attribute: AA|AA:NN|internet|local-AS|no-advertise|no-export.
	Community *string `pulumi:"community"`
}

// RouterRoutemapRuleSetCommunityInput is an input type that accepts RouterRoutemapRuleSetCommunityArgs and RouterRoutemapRuleSetCommunityOutput values.
// You can construct a concrete instance of `RouterRoutemapRuleSetCommunityInput` via:
//
//	RouterRoutemapRuleSetCommunityArgs{...}
type RouterRoutemapRuleSetCommunityInput interface {
	pulumi.Input

	ToRouterRoutemapRuleSetCommunityOutput() RouterRoutemapRuleSetCommunityOutput
	ToRouterRoutemapRuleSetCommunityOutputWithContext(context.Context) RouterRoutemapRuleSetCommunityOutput
}

type RouterRoutemapRuleSetCommunityArgs struct {
	// Attribute: AA|AA:NN|internet|local-AS|no-advertise|no-export.
	Community pulumi.StringPtrInput `pulumi:"community"`
}

func (RouterRoutemapRuleSetCommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRoutemapRuleSetCommunity)(nil)).Elem()
}

func (i RouterRoutemapRuleSetCommunityArgs) ToRouterRoutemapRuleSetCommunityOutput() RouterRoutemapRuleSetCommunityOutput {
	return i.ToRouterRoutemapRuleSetCommunityOutputWithContext(context.Background())
}

func (i RouterRoutemapRuleSetCommunityArgs) ToRouterRoutemapRuleSetCommunityOutputWithContext(ctx context.Context) RouterRoutemapRuleSetCommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRoutemapRuleSetCommunityOutput)
}

// RouterRoutemapRuleSetCommunityArrayInput is an input type that accepts RouterRoutemapRuleSetCommunityArray and RouterRoutemapRuleSetCommunityArrayOutput values.
// You can construct a concrete instance of `RouterRoutemapRuleSetCommunityArrayInput` via:
//
//	RouterRoutemapRuleSetCommunityArray{ RouterRoutemapRuleSetCommunityArgs{...} }
type RouterRoutemapRuleSetCommunityArrayInput interface {
	pulumi.Input

	ToRouterRoutemapRuleSetCommunityArrayOutput() RouterRoutemapRuleSetCommunityArrayOutput
	ToRouterRoutemapRuleSetCommunityArrayOutputWithContext(context.Context) RouterRoutemapRuleSetCommunityArrayOutput
}

type RouterRoutemapRuleSetCommunityArray []RouterRoutemapRuleSetCommunityInput

func (RouterRoutemapRuleSetCommunityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRoutemapRuleSetCommunity)(nil)).Elem()
}

func (i RouterRoutemapRuleSetCommunityArray) ToRouterRoutemapRuleSetCommunityArrayOutput() RouterRoutemapRuleSetCommunityArrayOutput {
	return i.ToRouterRoutemapRuleSetCommunityArrayOutputWithContext(context.Background())
}

func (i RouterRoutemapRuleSetCommunityArray) ToRouterRoutemapRuleSetCommunityArrayOutputWithContext(ctx context.Context) RouterRoutemapRuleSetCommunityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRoutemapRuleSetCommunityArrayOutput)
}

type RouterRoutemapRuleSetCommunityOutput struct{ *pulumi.OutputState }

func (RouterRoutemapRuleSetCommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRoutemapRuleSetCommunity)(nil)).Elem()
}

func (o RouterRoutemapRuleSetCommunityOutput) ToRouterRoutemapRuleSetCommunityOutput() RouterRoutemapRuleSetCommunityOutput {
	return o
}

func (o RouterRoutemapRuleSetCommunityOutput) ToRouterRoutemapRuleSetCommunityOutputWithContext(ctx context.Context) RouterRoutemapRuleSetCommunityOutput {
	return o
}

// Attribute: AA|AA:NN|internet|local-AS|no-advertise|no-export.
func (o RouterRoutemapRuleSetCommunityOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRuleSetCommunity) *string { return v.Community }).(pulumi.StringPtrOutput)
}

type RouterRoutemapRuleSetCommunityArrayOutput struct{ *pulumi.OutputState }

func (RouterRoutemapRuleSetCommunityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRoutemapRuleSetCommunity)(nil)).Elem()
}

func (o RouterRoutemapRuleSetCommunityArrayOutput) ToRouterRoutemapRuleSetCommunityArrayOutput() RouterRoutemapRuleSetCommunityArrayOutput {
	return o
}

func (o RouterRoutemapRuleSetCommunityArrayOutput) ToRouterRoutemapRuleSetCommunityArrayOutputWithContext(ctx context.Context) RouterRoutemapRuleSetCommunityArrayOutput {
	return o
}

func (o RouterRoutemapRuleSetCommunityArrayOutput) Index(i pulumi.IntInput) RouterRoutemapRuleSetCommunityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRoutemapRuleSetCommunity {
		return vs[0].([]RouterRoutemapRuleSetCommunity)[vs[1].(int)]
	}).(RouterRoutemapRuleSetCommunityOutput)
}

type RouterRoutemapRuleSetExtcommunityRt struct {
	// AA:NN.
	Community *string `pulumi:"community"`
}

// RouterRoutemapRuleSetExtcommunityRtInput is an input type that accepts RouterRoutemapRuleSetExtcommunityRtArgs and RouterRoutemapRuleSetExtcommunityRtOutput values.
// You can construct a concrete instance of `RouterRoutemapRuleSetExtcommunityRtInput` via:
//
//	RouterRoutemapRuleSetExtcommunityRtArgs{...}
type RouterRoutemapRuleSetExtcommunityRtInput interface {
	pulumi.Input

	ToRouterRoutemapRuleSetExtcommunityRtOutput() RouterRoutemapRuleSetExtcommunityRtOutput
	ToRouterRoutemapRuleSetExtcommunityRtOutputWithContext(context.Context) RouterRoutemapRuleSetExtcommunityRtOutput
}

type RouterRoutemapRuleSetExtcommunityRtArgs struct {
	// AA:NN.
	Community pulumi.StringPtrInput `pulumi:"community"`
}

func (RouterRoutemapRuleSetExtcommunityRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (i RouterRoutemapRuleSetExtcommunityRtArgs) ToRouterRoutemapRuleSetExtcommunityRtOutput() RouterRoutemapRuleSetExtcommunityRtOutput {
	return i.ToRouterRoutemapRuleSetExtcommunityRtOutputWithContext(context.Background())
}

func (i RouterRoutemapRuleSetExtcommunityRtArgs) ToRouterRoutemapRuleSetExtcommunityRtOutputWithContext(ctx context.Context) RouterRoutemapRuleSetExtcommunityRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRoutemapRuleSetExtcommunityRtOutput)
}

// RouterRoutemapRuleSetExtcommunityRtArrayInput is an input type that accepts RouterRoutemapRuleSetExtcommunityRtArray and RouterRoutemapRuleSetExtcommunityRtArrayOutput values.
// You can construct a concrete instance of `RouterRoutemapRuleSetExtcommunityRtArrayInput` via:
//
//	RouterRoutemapRuleSetExtcommunityRtArray{ RouterRoutemapRuleSetExtcommunityRtArgs{...} }
type RouterRoutemapRuleSetExtcommunityRtArrayInput interface {
	pulumi.Input

	ToRouterRoutemapRuleSetExtcommunityRtArrayOutput() RouterRoutemapRuleSetExtcommunityRtArrayOutput
	ToRouterRoutemapRuleSetExtcommunityRtArrayOutputWithContext(context.Context) RouterRoutemapRuleSetExtcommunityRtArrayOutput
}

type RouterRoutemapRuleSetExtcommunityRtArray []RouterRoutemapRuleSetExtcommunityRtInput

func (RouterRoutemapRuleSetExtcommunityRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (i RouterRoutemapRuleSetExtcommunityRtArray) ToRouterRoutemapRuleSetExtcommunityRtArrayOutput() RouterRoutemapRuleSetExtcommunityRtArrayOutput {
	return i.ToRouterRoutemapRuleSetExtcommunityRtArrayOutputWithContext(context.Background())
}

func (i RouterRoutemapRuleSetExtcommunityRtArray) ToRouterRoutemapRuleSetExtcommunityRtArrayOutputWithContext(ctx context.Context) RouterRoutemapRuleSetExtcommunityRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRoutemapRuleSetExtcommunityRtArrayOutput)
}

type RouterRoutemapRuleSetExtcommunityRtOutput struct{ *pulumi.OutputState }

func (RouterRoutemapRuleSetExtcommunityRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (o RouterRoutemapRuleSetExtcommunityRtOutput) ToRouterRoutemapRuleSetExtcommunityRtOutput() RouterRoutemapRuleSetExtcommunityRtOutput {
	return o
}

func (o RouterRoutemapRuleSetExtcommunityRtOutput) ToRouterRoutemapRuleSetExtcommunityRtOutputWithContext(ctx context.Context) RouterRoutemapRuleSetExtcommunityRtOutput {
	return o
}

// AA:NN.
func (o RouterRoutemapRuleSetExtcommunityRtOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRuleSetExtcommunityRt) *string { return v.Community }).(pulumi.StringPtrOutput)
}

type RouterRoutemapRuleSetExtcommunityRtArrayOutput struct{ *pulumi.OutputState }

func (RouterRoutemapRuleSetExtcommunityRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRoutemapRuleSetExtcommunityRt)(nil)).Elem()
}

func (o RouterRoutemapRuleSetExtcommunityRtArrayOutput) ToRouterRoutemapRuleSetExtcommunityRtArrayOutput() RouterRoutemapRuleSetExtcommunityRtArrayOutput {
	return o
}

func (o RouterRoutemapRuleSetExtcommunityRtArrayOutput) ToRouterRoutemapRuleSetExtcommunityRtArrayOutputWithContext(ctx context.Context) RouterRoutemapRuleSetExtcommunityRtArrayOutput {
	return o
}

func (o RouterRoutemapRuleSetExtcommunityRtArrayOutput) Index(i pulumi.IntInput) RouterRoutemapRuleSetExtcommunityRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRoutemapRuleSetExtcommunityRt {
		return vs[0].([]RouterRoutemapRuleSetExtcommunityRt)[vs[1].(int)]
	}).(RouterRoutemapRuleSetExtcommunityRtOutput)
}

type RouterRoutemapRuleSetExtcommunitySoo struct {
	// AA:NN
	Community *string `pulumi:"community"`
}

// RouterRoutemapRuleSetExtcommunitySooInput is an input type that accepts RouterRoutemapRuleSetExtcommunitySooArgs and RouterRoutemapRuleSetExtcommunitySooOutput values.
// You can construct a concrete instance of `RouterRoutemapRuleSetExtcommunitySooInput` via:
//
//	RouterRoutemapRuleSetExtcommunitySooArgs{...}
type RouterRoutemapRuleSetExtcommunitySooInput interface {
	pulumi.Input

	ToRouterRoutemapRuleSetExtcommunitySooOutput() RouterRoutemapRuleSetExtcommunitySooOutput
	ToRouterRoutemapRuleSetExtcommunitySooOutputWithContext(context.Context) RouterRoutemapRuleSetExtcommunitySooOutput
}

type RouterRoutemapRuleSetExtcommunitySooArgs struct {
	// AA:NN
	Community pulumi.StringPtrInput `pulumi:"community"`
}

func (RouterRoutemapRuleSetExtcommunitySooArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (i RouterRoutemapRuleSetExtcommunitySooArgs) ToRouterRoutemapRuleSetExtcommunitySooOutput() RouterRoutemapRuleSetExtcommunitySooOutput {
	return i.ToRouterRoutemapRuleSetExtcommunitySooOutputWithContext(context.Background())
}

func (i RouterRoutemapRuleSetExtcommunitySooArgs) ToRouterRoutemapRuleSetExtcommunitySooOutputWithContext(ctx context.Context) RouterRoutemapRuleSetExtcommunitySooOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRoutemapRuleSetExtcommunitySooOutput)
}

// RouterRoutemapRuleSetExtcommunitySooArrayInput is an input type that accepts RouterRoutemapRuleSetExtcommunitySooArray and RouterRoutemapRuleSetExtcommunitySooArrayOutput values.
// You can construct a concrete instance of `RouterRoutemapRuleSetExtcommunitySooArrayInput` via:
//
//	RouterRoutemapRuleSetExtcommunitySooArray{ RouterRoutemapRuleSetExtcommunitySooArgs{...} }
type RouterRoutemapRuleSetExtcommunitySooArrayInput interface {
	pulumi.Input

	ToRouterRoutemapRuleSetExtcommunitySooArrayOutput() RouterRoutemapRuleSetExtcommunitySooArrayOutput
	ToRouterRoutemapRuleSetExtcommunitySooArrayOutputWithContext(context.Context) RouterRoutemapRuleSetExtcommunitySooArrayOutput
}

type RouterRoutemapRuleSetExtcommunitySooArray []RouterRoutemapRuleSetExtcommunitySooInput

func (RouterRoutemapRuleSetExtcommunitySooArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (i RouterRoutemapRuleSetExtcommunitySooArray) ToRouterRoutemapRuleSetExtcommunitySooArrayOutput() RouterRoutemapRuleSetExtcommunitySooArrayOutput {
	return i.ToRouterRoutemapRuleSetExtcommunitySooArrayOutputWithContext(context.Background())
}

func (i RouterRoutemapRuleSetExtcommunitySooArray) ToRouterRoutemapRuleSetExtcommunitySooArrayOutputWithContext(ctx context.Context) RouterRoutemapRuleSetExtcommunitySooArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRoutemapRuleSetExtcommunitySooArrayOutput)
}

type RouterRoutemapRuleSetExtcommunitySooOutput struct{ *pulumi.OutputState }

func (RouterRoutemapRuleSetExtcommunitySooOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (o RouterRoutemapRuleSetExtcommunitySooOutput) ToRouterRoutemapRuleSetExtcommunitySooOutput() RouterRoutemapRuleSetExtcommunitySooOutput {
	return o
}

func (o RouterRoutemapRuleSetExtcommunitySooOutput) ToRouterRoutemapRuleSetExtcommunitySooOutputWithContext(ctx context.Context) RouterRoutemapRuleSetExtcommunitySooOutput {
	return o
}

// AA:NN
func (o RouterRoutemapRuleSetExtcommunitySooOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRoutemapRuleSetExtcommunitySoo) *string { return v.Community }).(pulumi.StringPtrOutput)
}

type RouterRoutemapRuleSetExtcommunitySooArrayOutput struct{ *pulumi.OutputState }

func (RouterRoutemapRuleSetExtcommunitySooArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRoutemapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (o RouterRoutemapRuleSetExtcommunitySooArrayOutput) ToRouterRoutemapRuleSetExtcommunitySooArrayOutput() RouterRoutemapRuleSetExtcommunitySooArrayOutput {
	return o
}

func (o RouterRoutemapRuleSetExtcommunitySooArrayOutput) ToRouterRoutemapRuleSetExtcommunitySooArrayOutputWithContext(ctx context.Context) RouterRoutemapRuleSetExtcommunitySooArrayOutput {
	return o
}

func (o RouterRoutemapRuleSetExtcommunitySooArrayOutput) Index(i pulumi.IntInput) RouterRoutemapRuleSetExtcommunitySooOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRoutemapRuleSetExtcommunitySoo {
		return vs[0].([]RouterRoutemapRuleSetExtcommunitySoo)[vs[1].(int)]
	}).(RouterRoutemapRuleSetExtcommunitySooOutput)
}

type RouterStatic6SdwanZone struct {
	// SD-WAN zone name.
	Name *string `pulumi:"name"`
}

// RouterStatic6SdwanZoneInput is an input type that accepts RouterStatic6SdwanZoneArgs and RouterStatic6SdwanZoneOutput values.
// You can construct a concrete instance of `RouterStatic6SdwanZoneInput` via:
//
//	RouterStatic6SdwanZoneArgs{...}
type RouterStatic6SdwanZoneInput interface {
	pulumi.Input

	ToRouterStatic6SdwanZoneOutput() RouterStatic6SdwanZoneOutput
	ToRouterStatic6SdwanZoneOutputWithContext(context.Context) RouterStatic6SdwanZoneOutput
}

type RouterStatic6SdwanZoneArgs struct {
	// SD-WAN zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterStatic6SdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterStatic6SdwanZone)(nil)).Elem()
}

func (i RouterStatic6SdwanZoneArgs) ToRouterStatic6SdwanZoneOutput() RouterStatic6SdwanZoneOutput {
	return i.ToRouterStatic6SdwanZoneOutputWithContext(context.Background())
}

func (i RouterStatic6SdwanZoneArgs) ToRouterStatic6SdwanZoneOutputWithContext(ctx context.Context) RouterStatic6SdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterStatic6SdwanZoneOutput)
}

// RouterStatic6SdwanZoneArrayInput is an input type that accepts RouterStatic6SdwanZoneArray and RouterStatic6SdwanZoneArrayOutput values.
// You can construct a concrete instance of `RouterStatic6SdwanZoneArrayInput` via:
//
//	RouterStatic6SdwanZoneArray{ RouterStatic6SdwanZoneArgs{...} }
type RouterStatic6SdwanZoneArrayInput interface {
	pulumi.Input

	ToRouterStatic6SdwanZoneArrayOutput() RouterStatic6SdwanZoneArrayOutput
	ToRouterStatic6SdwanZoneArrayOutputWithContext(context.Context) RouterStatic6SdwanZoneArrayOutput
}

type RouterStatic6SdwanZoneArray []RouterStatic6SdwanZoneInput

func (RouterStatic6SdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterStatic6SdwanZone)(nil)).Elem()
}

func (i RouterStatic6SdwanZoneArray) ToRouterStatic6SdwanZoneArrayOutput() RouterStatic6SdwanZoneArrayOutput {
	return i.ToRouterStatic6SdwanZoneArrayOutputWithContext(context.Background())
}

func (i RouterStatic6SdwanZoneArray) ToRouterStatic6SdwanZoneArrayOutputWithContext(ctx context.Context) RouterStatic6SdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterStatic6SdwanZoneArrayOutput)
}

type RouterStatic6SdwanZoneOutput struct{ *pulumi.OutputState }

func (RouterStatic6SdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterStatic6SdwanZone)(nil)).Elem()
}

func (o RouterStatic6SdwanZoneOutput) ToRouterStatic6SdwanZoneOutput() RouterStatic6SdwanZoneOutput {
	return o
}

func (o RouterStatic6SdwanZoneOutput) ToRouterStatic6SdwanZoneOutputWithContext(ctx context.Context) RouterStatic6SdwanZoneOutput {
	return o
}

// SD-WAN zone name.
func (o RouterStatic6SdwanZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterStatic6SdwanZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterStatic6SdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (RouterStatic6SdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterStatic6SdwanZone)(nil)).Elem()
}

func (o RouterStatic6SdwanZoneArrayOutput) ToRouterStatic6SdwanZoneArrayOutput() RouterStatic6SdwanZoneArrayOutput {
	return o
}

func (o RouterStatic6SdwanZoneArrayOutput) ToRouterStatic6SdwanZoneArrayOutputWithContext(ctx context.Context) RouterStatic6SdwanZoneArrayOutput {
	return o
}

func (o RouterStatic6SdwanZoneArrayOutput) Index(i pulumi.IntInput) RouterStatic6SdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterStatic6SdwanZone {
		return vs[0].([]RouterStatic6SdwanZone)[vs[1].(int)]
	}).(RouterStatic6SdwanZoneOutput)
}

type RouterStaticSdwanZone struct {
	// SD-WAN zone name.
	Name *string `pulumi:"name"`
}

// RouterStaticSdwanZoneInput is an input type that accepts RouterStaticSdwanZoneArgs and RouterStaticSdwanZoneOutput values.
// You can construct a concrete instance of `RouterStaticSdwanZoneInput` via:
//
//	RouterStaticSdwanZoneArgs{...}
type RouterStaticSdwanZoneInput interface {
	pulumi.Input

	ToRouterStaticSdwanZoneOutput() RouterStaticSdwanZoneOutput
	ToRouterStaticSdwanZoneOutputWithContext(context.Context) RouterStaticSdwanZoneOutput
}

type RouterStaticSdwanZoneArgs struct {
	// SD-WAN zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterStaticSdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterStaticSdwanZone)(nil)).Elem()
}

func (i RouterStaticSdwanZoneArgs) ToRouterStaticSdwanZoneOutput() RouterStaticSdwanZoneOutput {
	return i.ToRouterStaticSdwanZoneOutputWithContext(context.Background())
}

func (i RouterStaticSdwanZoneArgs) ToRouterStaticSdwanZoneOutputWithContext(ctx context.Context) RouterStaticSdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterStaticSdwanZoneOutput)
}

// RouterStaticSdwanZoneArrayInput is an input type that accepts RouterStaticSdwanZoneArray and RouterStaticSdwanZoneArrayOutput values.
// You can construct a concrete instance of `RouterStaticSdwanZoneArrayInput` via:
//
//	RouterStaticSdwanZoneArray{ RouterStaticSdwanZoneArgs{...} }
type RouterStaticSdwanZoneArrayInput interface {
	pulumi.Input

	ToRouterStaticSdwanZoneArrayOutput() RouterStaticSdwanZoneArrayOutput
	ToRouterStaticSdwanZoneArrayOutputWithContext(context.Context) RouterStaticSdwanZoneArrayOutput
}

type RouterStaticSdwanZoneArray []RouterStaticSdwanZoneInput

func (RouterStaticSdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterStaticSdwanZone)(nil)).Elem()
}

func (i RouterStaticSdwanZoneArray) ToRouterStaticSdwanZoneArrayOutput() RouterStaticSdwanZoneArrayOutput {
	return i.ToRouterStaticSdwanZoneArrayOutputWithContext(context.Background())
}

func (i RouterStaticSdwanZoneArray) ToRouterStaticSdwanZoneArrayOutputWithContext(ctx context.Context) RouterStaticSdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterStaticSdwanZoneArrayOutput)
}

type RouterStaticSdwanZoneOutput struct{ *pulumi.OutputState }

func (RouterStaticSdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterStaticSdwanZone)(nil)).Elem()
}

func (o RouterStaticSdwanZoneOutput) ToRouterStaticSdwanZoneOutput() RouterStaticSdwanZoneOutput {
	return o
}

func (o RouterStaticSdwanZoneOutput) ToRouterStaticSdwanZoneOutputWithContext(ctx context.Context) RouterStaticSdwanZoneOutput {
	return o
}

// SD-WAN zone name.
func (o RouterStaticSdwanZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterStaticSdwanZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterStaticSdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (RouterStaticSdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterStaticSdwanZone)(nil)).Elem()
}

func (o RouterStaticSdwanZoneArrayOutput) ToRouterStaticSdwanZoneArrayOutput() RouterStaticSdwanZoneArrayOutput {
	return o
}

func (o RouterStaticSdwanZoneArrayOutput) ToRouterStaticSdwanZoneArrayOutputWithContext(ctx context.Context) RouterStaticSdwanZoneArrayOutput {
	return o
}

func (o RouterStaticSdwanZoneArrayOutput) Index(i pulumi.IntInput) RouterStaticSdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterStaticSdwanZone {
		return vs[0].([]RouterStaticSdwanZone)[vs[1].(int)]
	}).(RouterStaticSdwanZoneOutput)
}

type RouterbgpNeighborConditionalAdvertise6 struct {
	// Name of advertising route map.
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	//
	// The `conditionalAdvertise6` block supports:
	ConditionType *string `pulumi:"conditionType"`
}

// RouterbgpNeighborConditionalAdvertise6Input is an input type that accepts RouterbgpNeighborConditionalAdvertise6Args and RouterbgpNeighborConditionalAdvertise6Output values.
// You can construct a concrete instance of `RouterbgpNeighborConditionalAdvertise6Input` via:
//
//	RouterbgpNeighborConditionalAdvertise6Args{...}
type RouterbgpNeighborConditionalAdvertise6Input interface {
	pulumi.Input

	ToRouterbgpNeighborConditionalAdvertise6Output() RouterbgpNeighborConditionalAdvertise6Output
	ToRouterbgpNeighborConditionalAdvertise6OutputWithContext(context.Context) RouterbgpNeighborConditionalAdvertise6Output
}

type RouterbgpNeighborConditionalAdvertise6Args struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	//
	// The `conditionalAdvertise6` block supports:
	ConditionType pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (RouterbgpNeighborConditionalAdvertise6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i RouterbgpNeighborConditionalAdvertise6Args) ToRouterbgpNeighborConditionalAdvertise6Output() RouterbgpNeighborConditionalAdvertise6Output {
	return i.ToRouterbgpNeighborConditionalAdvertise6OutputWithContext(context.Background())
}

func (i RouterbgpNeighborConditionalAdvertise6Args) ToRouterbgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertise6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterbgpNeighborConditionalAdvertise6Output)
}

// RouterbgpNeighborConditionalAdvertise6ArrayInput is an input type that accepts RouterbgpNeighborConditionalAdvertise6Array and RouterbgpNeighborConditionalAdvertise6ArrayOutput values.
// You can construct a concrete instance of `RouterbgpNeighborConditionalAdvertise6ArrayInput` via:
//
//	RouterbgpNeighborConditionalAdvertise6Array{ RouterbgpNeighborConditionalAdvertise6Args{...} }
type RouterbgpNeighborConditionalAdvertise6ArrayInput interface {
	pulumi.Input

	ToRouterbgpNeighborConditionalAdvertise6ArrayOutput() RouterbgpNeighborConditionalAdvertise6ArrayOutput
	ToRouterbgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Context) RouterbgpNeighborConditionalAdvertise6ArrayOutput
}

type RouterbgpNeighborConditionalAdvertise6Array []RouterbgpNeighborConditionalAdvertise6Input

func (RouterbgpNeighborConditionalAdvertise6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterbgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i RouterbgpNeighborConditionalAdvertise6Array) ToRouterbgpNeighborConditionalAdvertise6ArrayOutput() RouterbgpNeighborConditionalAdvertise6ArrayOutput {
	return i.ToRouterbgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Background())
}

func (i RouterbgpNeighborConditionalAdvertise6Array) ToRouterbgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertise6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterbgpNeighborConditionalAdvertise6ArrayOutput)
}

type RouterbgpNeighborConditionalAdvertise6Output struct{ *pulumi.OutputState }

func (RouterbgpNeighborConditionalAdvertise6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o RouterbgpNeighborConditionalAdvertise6Output) ToRouterbgpNeighborConditionalAdvertise6Output() RouterbgpNeighborConditionalAdvertise6Output {
	return o
}

func (o RouterbgpNeighborConditionalAdvertise6Output) ToRouterbgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertise6Output {
	return o
}

// Name of advertising route map.
func (o RouterbgpNeighborConditionalAdvertise6Output) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise6) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

// Name of condition route map.
func (o RouterbgpNeighborConditionalAdvertise6Output) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise6) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

// Type of condition. Valid values: `exist`, `non-exist`.
//
// The `conditionalAdvertise6` block supports:
func (o RouterbgpNeighborConditionalAdvertise6Output) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise6) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type RouterbgpNeighborConditionalAdvertise6ArrayOutput struct{ *pulumi.OutputState }

func (RouterbgpNeighborConditionalAdvertise6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterbgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o RouterbgpNeighborConditionalAdvertise6ArrayOutput) ToRouterbgpNeighborConditionalAdvertise6ArrayOutput() RouterbgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertise6ArrayOutput) ToRouterbgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertise6ArrayOutput) Index(i pulumi.IntInput) RouterbgpNeighborConditionalAdvertise6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterbgpNeighborConditionalAdvertise6 {
		return vs[0].([]RouterbgpNeighborConditionalAdvertise6)[vs[1].(int)]
	}).(RouterbgpNeighborConditionalAdvertise6Output)
}

type RouterbgpNeighborConditionalAdvertise struct {
	// Name of advertising route map.
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	ConditionType *string `pulumi:"conditionType"`
}

// RouterbgpNeighborConditionalAdvertiseInput is an input type that accepts RouterbgpNeighborConditionalAdvertiseArgs and RouterbgpNeighborConditionalAdvertiseOutput values.
// You can construct a concrete instance of `RouterbgpNeighborConditionalAdvertiseInput` via:
//
//	RouterbgpNeighborConditionalAdvertiseArgs{...}
type RouterbgpNeighborConditionalAdvertiseInput interface {
	pulumi.Input

	ToRouterbgpNeighborConditionalAdvertiseOutput() RouterbgpNeighborConditionalAdvertiseOutput
	ToRouterbgpNeighborConditionalAdvertiseOutputWithContext(context.Context) RouterbgpNeighborConditionalAdvertiseOutput
}

type RouterbgpNeighborConditionalAdvertiseArgs struct {
	// Name of advertising route map.
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	// Name of condition route map.
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	// Type of condition. Valid values: `exist`, `non-exist`.
	ConditionType pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (RouterbgpNeighborConditionalAdvertiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i RouterbgpNeighborConditionalAdvertiseArgs) ToRouterbgpNeighborConditionalAdvertiseOutput() RouterbgpNeighborConditionalAdvertiseOutput {
	return i.ToRouterbgpNeighborConditionalAdvertiseOutputWithContext(context.Background())
}

func (i RouterbgpNeighborConditionalAdvertiseArgs) ToRouterbgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterbgpNeighborConditionalAdvertiseOutput)
}

// RouterbgpNeighborConditionalAdvertiseArrayInput is an input type that accepts RouterbgpNeighborConditionalAdvertiseArray and RouterbgpNeighborConditionalAdvertiseArrayOutput values.
// You can construct a concrete instance of `RouterbgpNeighborConditionalAdvertiseArrayInput` via:
//
//	RouterbgpNeighborConditionalAdvertiseArray{ RouterbgpNeighborConditionalAdvertiseArgs{...} }
type RouterbgpNeighborConditionalAdvertiseArrayInput interface {
	pulumi.Input

	ToRouterbgpNeighborConditionalAdvertiseArrayOutput() RouterbgpNeighborConditionalAdvertiseArrayOutput
	ToRouterbgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Context) RouterbgpNeighborConditionalAdvertiseArrayOutput
}

type RouterbgpNeighborConditionalAdvertiseArray []RouterbgpNeighborConditionalAdvertiseInput

func (RouterbgpNeighborConditionalAdvertiseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterbgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i RouterbgpNeighborConditionalAdvertiseArray) ToRouterbgpNeighborConditionalAdvertiseArrayOutput() RouterbgpNeighborConditionalAdvertiseArrayOutput {
	return i.ToRouterbgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Background())
}

func (i RouterbgpNeighborConditionalAdvertiseArray) ToRouterbgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertiseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterbgpNeighborConditionalAdvertiseArrayOutput)
}

type RouterbgpNeighborConditionalAdvertiseOutput struct{ *pulumi.OutputState }

func (RouterbgpNeighborConditionalAdvertiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o RouterbgpNeighborConditionalAdvertiseOutput) ToRouterbgpNeighborConditionalAdvertiseOutput() RouterbgpNeighborConditionalAdvertiseOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertiseOutput) ToRouterbgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertiseOutput {
	return o
}

// Name of advertising route map.
func (o RouterbgpNeighborConditionalAdvertiseOutput) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

// Name of condition route map.
func (o RouterbgpNeighborConditionalAdvertiseOutput) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

// Type of condition. Valid values: `exist`, `non-exist`.
func (o RouterbgpNeighborConditionalAdvertiseOutput) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type RouterbgpNeighborConditionalAdvertiseArrayOutput struct{ *pulumi.OutputState }

func (RouterbgpNeighborConditionalAdvertiseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterbgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o RouterbgpNeighborConditionalAdvertiseArrayOutput) ToRouterbgpNeighborConditionalAdvertiseArrayOutput() RouterbgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertiseArrayOutput) ToRouterbgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertiseArrayOutput) Index(i pulumi.IntInput) RouterbgpNeighborConditionalAdvertiseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterbgpNeighborConditionalAdvertise {
		return vs[0].([]RouterbgpNeighborConditionalAdvertise)[vs[1].(int)]
	}).(RouterbgpNeighborConditionalAdvertiseOutput)
}

type Routerospf6Ospf6interfaceIpsecKey struct {
	// Authentication key.
	AuthKey *string `pulumi:"authKey"`
	// Encryption key.
	EncKey *string `pulumi:"encKey"`
	// Security Parameters Index.
	Spi *int `pulumi:"spi"`
}

// Routerospf6Ospf6interfaceIpsecKeyInput is an input type that accepts Routerospf6Ospf6interfaceIpsecKeyArgs and Routerospf6Ospf6interfaceIpsecKeyOutput values.
// You can construct a concrete instance of `Routerospf6Ospf6interfaceIpsecKeyInput` via:
//
//	Routerospf6Ospf6interfaceIpsecKeyArgs{...}
type Routerospf6Ospf6interfaceIpsecKeyInput interface {
	pulumi.Input

	ToRouterospf6Ospf6interfaceIpsecKeyOutput() Routerospf6Ospf6interfaceIpsecKeyOutput
	ToRouterospf6Ospf6interfaceIpsecKeyOutputWithContext(context.Context) Routerospf6Ospf6interfaceIpsecKeyOutput
}

type Routerospf6Ospf6interfaceIpsecKeyArgs struct {
	// Authentication key.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// Encryption key.
	EncKey pulumi.StringPtrInput `pulumi:"encKey"`
	// Security Parameters Index.
	Spi pulumi.IntPtrInput `pulumi:"spi"`
}

func (Routerospf6Ospf6interfaceIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Routerospf6Ospf6interfaceIpsecKey)(nil)).Elem()
}

func (i Routerospf6Ospf6interfaceIpsecKeyArgs) ToRouterospf6Ospf6interfaceIpsecKeyOutput() Routerospf6Ospf6interfaceIpsecKeyOutput {
	return i.ToRouterospf6Ospf6interfaceIpsecKeyOutputWithContext(context.Background())
}

func (i Routerospf6Ospf6interfaceIpsecKeyArgs) ToRouterospf6Ospf6interfaceIpsecKeyOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6interfaceIpsecKeyOutput)
}

// Routerospf6Ospf6interfaceIpsecKeyArrayInput is an input type that accepts Routerospf6Ospf6interfaceIpsecKeyArray and Routerospf6Ospf6interfaceIpsecKeyArrayOutput values.
// You can construct a concrete instance of `Routerospf6Ospf6interfaceIpsecKeyArrayInput` via:
//
//	Routerospf6Ospf6interfaceIpsecKeyArray{ Routerospf6Ospf6interfaceIpsecKeyArgs{...} }
type Routerospf6Ospf6interfaceIpsecKeyArrayInput interface {
	pulumi.Input

	ToRouterospf6Ospf6interfaceIpsecKeyArrayOutput() Routerospf6Ospf6interfaceIpsecKeyArrayOutput
	ToRouterospf6Ospf6interfaceIpsecKeyArrayOutputWithContext(context.Context) Routerospf6Ospf6interfaceIpsecKeyArrayOutput
}

type Routerospf6Ospf6interfaceIpsecKeyArray []Routerospf6Ospf6interfaceIpsecKeyInput

func (Routerospf6Ospf6interfaceIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Routerospf6Ospf6interfaceIpsecKey)(nil)).Elem()
}

func (i Routerospf6Ospf6interfaceIpsecKeyArray) ToRouterospf6Ospf6interfaceIpsecKeyArrayOutput() Routerospf6Ospf6interfaceIpsecKeyArrayOutput {
	return i.ToRouterospf6Ospf6interfaceIpsecKeyArrayOutputWithContext(context.Background())
}

func (i Routerospf6Ospf6interfaceIpsecKeyArray) ToRouterospf6Ospf6interfaceIpsecKeyArrayOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6interfaceIpsecKeyArrayOutput)
}

type Routerospf6Ospf6interfaceIpsecKeyOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6interfaceIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Routerospf6Ospf6interfaceIpsecKey)(nil)).Elem()
}

func (o Routerospf6Ospf6interfaceIpsecKeyOutput) ToRouterospf6Ospf6interfaceIpsecKeyOutput() Routerospf6Ospf6interfaceIpsecKeyOutput {
	return o
}

func (o Routerospf6Ospf6interfaceIpsecKeyOutput) ToRouterospf6Ospf6interfaceIpsecKeyOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceIpsecKeyOutput {
	return o
}

// Authentication key.
func (o Routerospf6Ospf6interfaceIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6interfaceIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// Encryption key.
func (o Routerospf6Ospf6interfaceIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6interfaceIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

// Security Parameters Index.
func (o Routerospf6Ospf6interfaceIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6interfaceIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type Routerospf6Ospf6interfaceIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6interfaceIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Routerospf6Ospf6interfaceIpsecKey)(nil)).Elem()
}

func (o Routerospf6Ospf6interfaceIpsecKeyArrayOutput) ToRouterospf6Ospf6interfaceIpsecKeyArrayOutput() Routerospf6Ospf6interfaceIpsecKeyArrayOutput {
	return o
}

func (o Routerospf6Ospf6interfaceIpsecKeyArrayOutput) ToRouterospf6Ospf6interfaceIpsecKeyArrayOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceIpsecKeyArrayOutput {
	return o
}

func (o Routerospf6Ospf6interfaceIpsecKeyArrayOutput) Index(i pulumi.IntInput) Routerospf6Ospf6interfaceIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Routerospf6Ospf6interfaceIpsecKey {
		return vs[0].([]Routerospf6Ospf6interfaceIpsecKey)[vs[1].(int)]
	}).(Routerospf6Ospf6interfaceIpsecKeyOutput)
}

type Routerospf6Ospf6interfaceNeighbor struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// IPv6 link local address of the neighbor.
	Ip6 *string `pulumi:"ip6"`
	// Poll interval time in seconds.
	PollInterval *int `pulumi:"pollInterval"`
	// priority
	Priority *int `pulumi:"priority"`
}

// Routerospf6Ospf6interfaceNeighborInput is an input type that accepts Routerospf6Ospf6interfaceNeighborArgs and Routerospf6Ospf6interfaceNeighborOutput values.
// You can construct a concrete instance of `Routerospf6Ospf6interfaceNeighborInput` via:
//
//	Routerospf6Ospf6interfaceNeighborArgs{...}
type Routerospf6Ospf6interfaceNeighborInput interface {
	pulumi.Input

	ToRouterospf6Ospf6interfaceNeighborOutput() Routerospf6Ospf6interfaceNeighborOutput
	ToRouterospf6Ospf6interfaceNeighborOutputWithContext(context.Context) Routerospf6Ospf6interfaceNeighborOutput
}

type Routerospf6Ospf6interfaceNeighborArgs struct {
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// IPv6 link local address of the neighbor.
	Ip6 pulumi.StringPtrInput `pulumi:"ip6"`
	// Poll interval time in seconds.
	PollInterval pulumi.IntPtrInput `pulumi:"pollInterval"`
	// priority
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (Routerospf6Ospf6interfaceNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Routerospf6Ospf6interfaceNeighbor)(nil)).Elem()
}

func (i Routerospf6Ospf6interfaceNeighborArgs) ToRouterospf6Ospf6interfaceNeighborOutput() Routerospf6Ospf6interfaceNeighborOutput {
	return i.ToRouterospf6Ospf6interfaceNeighborOutputWithContext(context.Background())
}

func (i Routerospf6Ospf6interfaceNeighborArgs) ToRouterospf6Ospf6interfaceNeighborOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6interfaceNeighborOutput)
}

// Routerospf6Ospf6interfaceNeighborArrayInput is an input type that accepts Routerospf6Ospf6interfaceNeighborArray and Routerospf6Ospf6interfaceNeighborArrayOutput values.
// You can construct a concrete instance of `Routerospf6Ospf6interfaceNeighborArrayInput` via:
//
//	Routerospf6Ospf6interfaceNeighborArray{ Routerospf6Ospf6interfaceNeighborArgs{...} }
type Routerospf6Ospf6interfaceNeighborArrayInput interface {
	pulumi.Input

	ToRouterospf6Ospf6interfaceNeighborArrayOutput() Routerospf6Ospf6interfaceNeighborArrayOutput
	ToRouterospf6Ospf6interfaceNeighborArrayOutputWithContext(context.Context) Routerospf6Ospf6interfaceNeighborArrayOutput
}

type Routerospf6Ospf6interfaceNeighborArray []Routerospf6Ospf6interfaceNeighborInput

func (Routerospf6Ospf6interfaceNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Routerospf6Ospf6interfaceNeighbor)(nil)).Elem()
}

func (i Routerospf6Ospf6interfaceNeighborArray) ToRouterospf6Ospf6interfaceNeighborArrayOutput() Routerospf6Ospf6interfaceNeighborArrayOutput {
	return i.ToRouterospf6Ospf6interfaceNeighborArrayOutputWithContext(context.Background())
}

func (i Routerospf6Ospf6interfaceNeighborArray) ToRouterospf6Ospf6interfaceNeighborArrayOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6interfaceNeighborArrayOutput)
}

type Routerospf6Ospf6interfaceNeighborOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6interfaceNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Routerospf6Ospf6interfaceNeighbor)(nil)).Elem()
}

func (o Routerospf6Ospf6interfaceNeighborOutput) ToRouterospf6Ospf6interfaceNeighborOutput() Routerospf6Ospf6interfaceNeighborOutput {
	return o
}

func (o Routerospf6Ospf6interfaceNeighborOutput) ToRouterospf6Ospf6interfaceNeighborOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceNeighborOutput {
	return o
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o Routerospf6Ospf6interfaceNeighborOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6interfaceNeighbor) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// IPv6 link local address of the neighbor.
func (o Routerospf6Ospf6interfaceNeighborOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6interfaceNeighbor) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

// Poll interval time in seconds.
func (o Routerospf6Ospf6interfaceNeighborOutput) PollInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6interfaceNeighbor) *int { return v.PollInterval }).(pulumi.IntPtrOutput)
}

// priority
func (o Routerospf6Ospf6interfaceNeighborOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6interfaceNeighbor) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type Routerospf6Ospf6interfaceNeighborArrayOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6interfaceNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Routerospf6Ospf6interfaceNeighbor)(nil)).Elem()
}

func (o Routerospf6Ospf6interfaceNeighborArrayOutput) ToRouterospf6Ospf6interfaceNeighborArrayOutput() Routerospf6Ospf6interfaceNeighborArrayOutput {
	return o
}

func (o Routerospf6Ospf6interfaceNeighborArrayOutput) ToRouterospf6Ospf6interfaceNeighborArrayOutputWithContext(ctx context.Context) Routerospf6Ospf6interfaceNeighborArrayOutput {
	return o
}

func (o Routerospf6Ospf6interfaceNeighborArrayOutput) Index(i pulumi.IntInput) Routerospf6Ospf6interfaceNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Routerospf6Ospf6interfaceNeighbor {
		return vs[0].([]Routerospf6Ospf6interfaceNeighbor)[vs[1].(int)]
	}).(Routerospf6Ospf6interfaceNeighborOutput)
}

type RouterospfOspfinterfaceMd5Key struct {
	// Key ID (1 - 255).
	Id *int `pulumi:"id"`
	// Password for the key.
	KeyString *string `pulumi:"keyString"`
}

// RouterospfOspfinterfaceMd5KeyInput is an input type that accepts RouterospfOspfinterfaceMd5KeyArgs and RouterospfOspfinterfaceMd5KeyOutput values.
// You can construct a concrete instance of `RouterospfOspfinterfaceMd5KeyInput` via:
//
//	RouterospfOspfinterfaceMd5KeyArgs{...}
type RouterospfOspfinterfaceMd5KeyInput interface {
	pulumi.Input

	ToRouterospfOspfinterfaceMd5KeyOutput() RouterospfOspfinterfaceMd5KeyOutput
	ToRouterospfOspfinterfaceMd5KeyOutputWithContext(context.Context) RouterospfOspfinterfaceMd5KeyOutput
}

type RouterospfOspfinterfaceMd5KeyArgs struct {
	// Key ID (1 - 255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Password for the key.
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
}

func (RouterospfOspfinterfaceMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterospfOspfinterfaceMd5Key)(nil)).Elem()
}

func (i RouterospfOspfinterfaceMd5KeyArgs) ToRouterospfOspfinterfaceMd5KeyOutput() RouterospfOspfinterfaceMd5KeyOutput {
	return i.ToRouterospfOspfinterfaceMd5KeyOutputWithContext(context.Background())
}

func (i RouterospfOspfinterfaceMd5KeyArgs) ToRouterospfOspfinterfaceMd5KeyOutputWithContext(ctx context.Context) RouterospfOspfinterfaceMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterospfOspfinterfaceMd5KeyOutput)
}

// RouterospfOspfinterfaceMd5KeyArrayInput is an input type that accepts RouterospfOspfinterfaceMd5KeyArray and RouterospfOspfinterfaceMd5KeyArrayOutput values.
// You can construct a concrete instance of `RouterospfOspfinterfaceMd5KeyArrayInput` via:
//
//	RouterospfOspfinterfaceMd5KeyArray{ RouterospfOspfinterfaceMd5KeyArgs{...} }
type RouterospfOspfinterfaceMd5KeyArrayInput interface {
	pulumi.Input

	ToRouterospfOspfinterfaceMd5KeyArrayOutput() RouterospfOspfinterfaceMd5KeyArrayOutput
	ToRouterospfOspfinterfaceMd5KeyArrayOutputWithContext(context.Context) RouterospfOspfinterfaceMd5KeyArrayOutput
}

type RouterospfOspfinterfaceMd5KeyArray []RouterospfOspfinterfaceMd5KeyInput

func (RouterospfOspfinterfaceMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterospfOspfinterfaceMd5Key)(nil)).Elem()
}

func (i RouterospfOspfinterfaceMd5KeyArray) ToRouterospfOspfinterfaceMd5KeyArrayOutput() RouterospfOspfinterfaceMd5KeyArrayOutput {
	return i.ToRouterospfOspfinterfaceMd5KeyArrayOutputWithContext(context.Background())
}

func (i RouterospfOspfinterfaceMd5KeyArray) ToRouterospfOspfinterfaceMd5KeyArrayOutputWithContext(ctx context.Context) RouterospfOspfinterfaceMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterospfOspfinterfaceMd5KeyArrayOutput)
}

type RouterospfOspfinterfaceMd5KeyOutput struct{ *pulumi.OutputState }

func (RouterospfOspfinterfaceMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterospfOspfinterfaceMd5Key)(nil)).Elem()
}

func (o RouterospfOspfinterfaceMd5KeyOutput) ToRouterospfOspfinterfaceMd5KeyOutput() RouterospfOspfinterfaceMd5KeyOutput {
	return o
}

func (o RouterospfOspfinterfaceMd5KeyOutput) ToRouterospfOspfinterfaceMd5KeyOutputWithContext(ctx context.Context) RouterospfOspfinterfaceMd5KeyOutput {
	return o
}

// Key ID (1 - 255).
func (o RouterospfOspfinterfaceMd5KeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterospfOspfinterfaceMd5Key) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Password for the key.
func (o RouterospfOspfinterfaceMd5KeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterospfOspfinterfaceMd5Key) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

type RouterospfOspfinterfaceMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (RouterospfOspfinterfaceMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterospfOspfinterfaceMd5Key)(nil)).Elem()
}

func (o RouterospfOspfinterfaceMd5KeyArrayOutput) ToRouterospfOspfinterfaceMd5KeyArrayOutput() RouterospfOspfinterfaceMd5KeyArrayOutput {
	return o
}

func (o RouterospfOspfinterfaceMd5KeyArrayOutput) ToRouterospfOspfinterfaceMd5KeyArrayOutputWithContext(ctx context.Context) RouterospfOspfinterfaceMd5KeyArrayOutput {
	return o
}

func (o RouterospfOspfinterfaceMd5KeyArrayOutput) Index(i pulumi.IntInput) RouterospfOspfinterfaceMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterospfOspfinterfaceMd5Key {
		return vs[0].([]RouterospfOspfinterfaceMd5Key)[vs[1].(int)]
	}).(RouterospfOspfinterfaceMd5KeyOutput)
}

type SctpfilterProfilePpidFilter struct {
	// Action taken when PPID is matched. Valid values: `pass`, `reset`, `replace`.
	Action *string `pulumi:"action"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// ID.
	Id *int `pulumi:"id"`
	// Payload protocol identifier.
	Ppid *int `pulumi:"ppid"`
}

// SctpfilterProfilePpidFilterInput is an input type that accepts SctpfilterProfilePpidFilterArgs and SctpfilterProfilePpidFilterOutput values.
// You can construct a concrete instance of `SctpfilterProfilePpidFilterInput` via:
//
//	SctpfilterProfilePpidFilterArgs{...}
type SctpfilterProfilePpidFilterInput interface {
	pulumi.Input

	ToSctpfilterProfilePpidFilterOutput() SctpfilterProfilePpidFilterOutput
	ToSctpfilterProfilePpidFilterOutputWithContext(context.Context) SctpfilterProfilePpidFilterOutput
}

type SctpfilterProfilePpidFilterArgs struct {
	// Action taken when PPID is matched. Valid values: `pass`, `reset`, `replace`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Payload protocol identifier.
	Ppid pulumi.IntPtrInput `pulumi:"ppid"`
}

func (SctpfilterProfilePpidFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SctpfilterProfilePpidFilter)(nil)).Elem()
}

func (i SctpfilterProfilePpidFilterArgs) ToSctpfilterProfilePpidFilterOutput() SctpfilterProfilePpidFilterOutput {
	return i.ToSctpfilterProfilePpidFilterOutputWithContext(context.Background())
}

func (i SctpfilterProfilePpidFilterArgs) ToSctpfilterProfilePpidFilterOutputWithContext(ctx context.Context) SctpfilterProfilePpidFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SctpfilterProfilePpidFilterOutput)
}

// SctpfilterProfilePpidFilterArrayInput is an input type that accepts SctpfilterProfilePpidFilterArray and SctpfilterProfilePpidFilterArrayOutput values.
// You can construct a concrete instance of `SctpfilterProfilePpidFilterArrayInput` via:
//
//	SctpfilterProfilePpidFilterArray{ SctpfilterProfilePpidFilterArgs{...} }
type SctpfilterProfilePpidFilterArrayInput interface {
	pulumi.Input

	ToSctpfilterProfilePpidFilterArrayOutput() SctpfilterProfilePpidFilterArrayOutput
	ToSctpfilterProfilePpidFilterArrayOutputWithContext(context.Context) SctpfilterProfilePpidFilterArrayOutput
}

type SctpfilterProfilePpidFilterArray []SctpfilterProfilePpidFilterInput

func (SctpfilterProfilePpidFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SctpfilterProfilePpidFilter)(nil)).Elem()
}

func (i SctpfilterProfilePpidFilterArray) ToSctpfilterProfilePpidFilterArrayOutput() SctpfilterProfilePpidFilterArrayOutput {
	return i.ToSctpfilterProfilePpidFilterArrayOutputWithContext(context.Background())
}

func (i SctpfilterProfilePpidFilterArray) ToSctpfilterProfilePpidFilterArrayOutputWithContext(ctx context.Context) SctpfilterProfilePpidFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SctpfilterProfilePpidFilterArrayOutput)
}

type SctpfilterProfilePpidFilterOutput struct{ *pulumi.OutputState }

func (SctpfilterProfilePpidFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SctpfilterProfilePpidFilter)(nil)).Elem()
}

func (o SctpfilterProfilePpidFilterOutput) ToSctpfilterProfilePpidFilterOutput() SctpfilterProfilePpidFilterOutput {
	return o
}

func (o SctpfilterProfilePpidFilterOutput) ToSctpfilterProfilePpidFilterOutputWithContext(ctx context.Context) SctpfilterProfilePpidFilterOutput {
	return o
}

// Action taken when PPID is matched. Valid values: `pass`, `reset`, `replace`.
func (o SctpfilterProfilePpidFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SctpfilterProfilePpidFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Comment.
func (o SctpfilterProfilePpidFilterOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SctpfilterProfilePpidFilter) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// ID.
func (o SctpfilterProfilePpidFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SctpfilterProfilePpidFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Payload protocol identifier.
func (o SctpfilterProfilePpidFilterOutput) Ppid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SctpfilterProfilePpidFilter) *int { return v.Ppid }).(pulumi.IntPtrOutput)
}

type SctpfilterProfilePpidFilterArrayOutput struct{ *pulumi.OutputState }

func (SctpfilterProfilePpidFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SctpfilterProfilePpidFilter)(nil)).Elem()
}

func (o SctpfilterProfilePpidFilterArrayOutput) ToSctpfilterProfilePpidFilterArrayOutput() SctpfilterProfilePpidFilterArrayOutput {
	return o
}

func (o SctpfilterProfilePpidFilterArrayOutput) ToSctpfilterProfilePpidFilterArrayOutputWithContext(ctx context.Context) SctpfilterProfilePpidFilterArrayOutput {
	return o
}

func (o SctpfilterProfilePpidFilterArrayOutput) Index(i pulumi.IntInput) SctpfilterProfilePpidFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SctpfilterProfilePpidFilter {
		return vs[0].([]SctpfilterProfilePpidFilter)[vs[1].(int)]
	}).(SctpfilterProfilePpidFilterOutput)
}

type SpamfilterBwlEntry struct {
	// Reject, mark as spam or good email. Valid values: `reject`, `spam`, `clear`.
	Action *string `pulumi:"action"`
	// IP address type. Valid values: `ipv4`, `ipv6`.
	AddrType *string `pulumi:"addrType"`
	// Email address pattern.
	EmailPattern *string `pulumi:"emailPattern"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// IPv4 network address/subnet mask bits.
	Ip4Subnet *string `pulumi:"ip4Subnet"`
	// IPv6 network address/subnet mask bits.
	Ip6Subnet *string `pulumi:"ip6Subnet"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType *string `pulumi:"patternType"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Entry type. Valid values: `ip`, `email`.
	Type *string `pulumi:"type"`
}

// SpamfilterBwlEntryInput is an input type that accepts SpamfilterBwlEntryArgs and SpamfilterBwlEntryOutput values.
// You can construct a concrete instance of `SpamfilterBwlEntryInput` via:
//
//	SpamfilterBwlEntryArgs{...}
type SpamfilterBwlEntryInput interface {
	pulumi.Input

	ToSpamfilterBwlEntryOutput() SpamfilterBwlEntryOutput
	ToSpamfilterBwlEntryOutputWithContext(context.Context) SpamfilterBwlEntryOutput
}

type SpamfilterBwlEntryArgs struct {
	// Reject, mark as spam or good email. Valid values: `reject`, `spam`, `clear`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP address type. Valid values: `ipv4`, `ipv6`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Email address pattern.
	EmailPattern pulumi.StringPtrInput `pulumi:"emailPattern"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 network address/subnet mask bits.
	Ip4Subnet pulumi.StringPtrInput `pulumi:"ip4Subnet"`
	// IPv6 network address/subnet mask bits.
	Ip6Subnet pulumi.StringPtrInput `pulumi:"ip6Subnet"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Entry type. Valid values: `ip`, `email`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SpamfilterBwlEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterBwlEntry)(nil)).Elem()
}

func (i SpamfilterBwlEntryArgs) ToSpamfilterBwlEntryOutput() SpamfilterBwlEntryOutput {
	return i.ToSpamfilterBwlEntryOutputWithContext(context.Background())
}

func (i SpamfilterBwlEntryArgs) ToSpamfilterBwlEntryOutputWithContext(ctx context.Context) SpamfilterBwlEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterBwlEntryOutput)
}

// SpamfilterBwlEntryArrayInput is an input type that accepts SpamfilterBwlEntryArray and SpamfilterBwlEntryArrayOutput values.
// You can construct a concrete instance of `SpamfilterBwlEntryArrayInput` via:
//
//	SpamfilterBwlEntryArray{ SpamfilterBwlEntryArgs{...} }
type SpamfilterBwlEntryArrayInput interface {
	pulumi.Input

	ToSpamfilterBwlEntryArrayOutput() SpamfilterBwlEntryArrayOutput
	ToSpamfilterBwlEntryArrayOutputWithContext(context.Context) SpamfilterBwlEntryArrayOutput
}

type SpamfilterBwlEntryArray []SpamfilterBwlEntryInput

func (SpamfilterBwlEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterBwlEntry)(nil)).Elem()
}

func (i SpamfilterBwlEntryArray) ToSpamfilterBwlEntryArrayOutput() SpamfilterBwlEntryArrayOutput {
	return i.ToSpamfilterBwlEntryArrayOutputWithContext(context.Background())
}

func (i SpamfilterBwlEntryArray) ToSpamfilterBwlEntryArrayOutputWithContext(ctx context.Context) SpamfilterBwlEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterBwlEntryArrayOutput)
}

type SpamfilterBwlEntryOutput struct{ *pulumi.OutputState }

func (SpamfilterBwlEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterBwlEntry)(nil)).Elem()
}

func (o SpamfilterBwlEntryOutput) ToSpamfilterBwlEntryOutput() SpamfilterBwlEntryOutput {
	return o
}

func (o SpamfilterBwlEntryOutput) ToSpamfilterBwlEntryOutputWithContext(ctx context.Context) SpamfilterBwlEntryOutput {
	return o
}

// Reject, mark as spam or good email. Valid values: `reject`, `spam`, `clear`.
func (o SpamfilterBwlEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP address type. Valid values: `ipv4`, `ipv6`.
func (o SpamfilterBwlEntryOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Email address pattern.
func (o SpamfilterBwlEntryOutput) EmailPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.EmailPattern }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o SpamfilterBwlEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 network address/subnet mask bits.
func (o SpamfilterBwlEntryOutput) Ip4Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.Ip4Subnet }).(pulumi.StringPtrOutput)
}

// IPv6 network address/subnet mask bits.
func (o SpamfilterBwlEntryOutput) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.Ip6Subnet }).(pulumi.StringPtrOutput)
}

// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
func (o SpamfilterBwlEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o SpamfilterBwlEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Entry type. Valid values: `ip`, `email`.
func (o SpamfilterBwlEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SpamfilterBwlEntryArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterBwlEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterBwlEntry)(nil)).Elem()
}

func (o SpamfilterBwlEntryArrayOutput) ToSpamfilterBwlEntryArrayOutput() SpamfilterBwlEntryArrayOutput {
	return o
}

func (o SpamfilterBwlEntryArrayOutput) ToSpamfilterBwlEntryArrayOutputWithContext(ctx context.Context) SpamfilterBwlEntryArrayOutput {
	return o
}

func (o SpamfilterBwlEntryArrayOutput) Index(i pulumi.IntInput) SpamfilterBwlEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpamfilterBwlEntry {
		return vs[0].([]SpamfilterBwlEntry)[vs[1].(int)]
	}).(SpamfilterBwlEntryOutput)
}

type SpamfilterBwordEntry struct {
	// Mark spam or good. Valid values: `spam`, `clear`.
	Action *string `pulumi:"action"`
	// Banned word entry ID.
	Id *int `pulumi:"id"`
	// Language for the banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`.
	Language *string `pulumi:"language"`
	// Pattern for the banned word.
	Pattern *string `pulumi:"pattern"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType *string `pulumi:"patternType"`
	// Score value.
	Score *int `pulumi:"score"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Component of the email to be scanned. Valid values: `subject`, `body`, `all`.
	Where *string `pulumi:"where"`
}

// SpamfilterBwordEntryInput is an input type that accepts SpamfilterBwordEntryArgs and SpamfilterBwordEntryOutput values.
// You can construct a concrete instance of `SpamfilterBwordEntryInput` via:
//
//	SpamfilterBwordEntryArgs{...}
type SpamfilterBwordEntryInput interface {
	pulumi.Input

	ToSpamfilterBwordEntryOutput() SpamfilterBwordEntryOutput
	ToSpamfilterBwordEntryOutputWithContext(context.Context) SpamfilterBwordEntryOutput
}

type SpamfilterBwordEntryArgs struct {
	// Mark spam or good. Valid values: `spam`, `clear`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Banned word entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Language for the banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`.
	Language pulumi.StringPtrInput `pulumi:"language"`
	// Pattern for the banned word.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Score value.
	Score pulumi.IntPtrInput `pulumi:"score"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Component of the email to be scanned. Valid values: `subject`, `body`, `all`.
	Where pulumi.StringPtrInput `pulumi:"where"`
}

func (SpamfilterBwordEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterBwordEntry)(nil)).Elem()
}

func (i SpamfilterBwordEntryArgs) ToSpamfilterBwordEntryOutput() SpamfilterBwordEntryOutput {
	return i.ToSpamfilterBwordEntryOutputWithContext(context.Background())
}

func (i SpamfilterBwordEntryArgs) ToSpamfilterBwordEntryOutputWithContext(ctx context.Context) SpamfilterBwordEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterBwordEntryOutput)
}

// SpamfilterBwordEntryArrayInput is an input type that accepts SpamfilterBwordEntryArray and SpamfilterBwordEntryArrayOutput values.
// You can construct a concrete instance of `SpamfilterBwordEntryArrayInput` via:
//
//	SpamfilterBwordEntryArray{ SpamfilterBwordEntryArgs{...} }
type SpamfilterBwordEntryArrayInput interface {
	pulumi.Input

	ToSpamfilterBwordEntryArrayOutput() SpamfilterBwordEntryArrayOutput
	ToSpamfilterBwordEntryArrayOutputWithContext(context.Context) SpamfilterBwordEntryArrayOutput
}

type SpamfilterBwordEntryArray []SpamfilterBwordEntryInput

func (SpamfilterBwordEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterBwordEntry)(nil)).Elem()
}

func (i SpamfilterBwordEntryArray) ToSpamfilterBwordEntryArrayOutput() SpamfilterBwordEntryArrayOutput {
	return i.ToSpamfilterBwordEntryArrayOutputWithContext(context.Background())
}

func (i SpamfilterBwordEntryArray) ToSpamfilterBwordEntryArrayOutputWithContext(ctx context.Context) SpamfilterBwordEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterBwordEntryArrayOutput)
}

type SpamfilterBwordEntryOutput struct{ *pulumi.OutputState }

func (SpamfilterBwordEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterBwordEntry)(nil)).Elem()
}

func (o SpamfilterBwordEntryOutput) ToSpamfilterBwordEntryOutput() SpamfilterBwordEntryOutput {
	return o
}

func (o SpamfilterBwordEntryOutput) ToSpamfilterBwordEntryOutputWithContext(ctx context.Context) SpamfilterBwordEntryOutput {
	return o
}

// Mark spam or good. Valid values: `spam`, `clear`.
func (o SpamfilterBwordEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Banned word entry ID.
func (o SpamfilterBwordEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Language for the banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`.
func (o SpamfilterBwordEntryOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// Pattern for the banned word.
func (o SpamfilterBwordEntryOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
func (o SpamfilterBwordEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Score value.
func (o SpamfilterBwordEntryOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *int { return v.Score }).(pulumi.IntPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o SpamfilterBwordEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Component of the email to be scanned. Valid values: `subject`, `body`, `all`.
func (o SpamfilterBwordEntryOutput) Where() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.Where }).(pulumi.StringPtrOutput)
}

type SpamfilterBwordEntryArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterBwordEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterBwordEntry)(nil)).Elem()
}

func (o SpamfilterBwordEntryArrayOutput) ToSpamfilterBwordEntryArrayOutput() SpamfilterBwordEntryArrayOutput {
	return o
}

func (o SpamfilterBwordEntryArrayOutput) ToSpamfilterBwordEntryArrayOutputWithContext(ctx context.Context) SpamfilterBwordEntryArrayOutput {
	return o
}

func (o SpamfilterBwordEntryArrayOutput) Index(i pulumi.IntInput) SpamfilterBwordEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpamfilterBwordEntry {
		return vs[0].([]SpamfilterBwordEntry)[vs[1].(int)]
	}).(SpamfilterBwordEntryOutput)
}

type SpamfilterDnsblEntry struct {
	// Reject connection or mark as spam email. Valid values: `reject`, `spam`.
	Action *string `pulumi:"action"`
	// DNSBL/ORBL entry ID.
	Id *int `pulumi:"id"`
	// DNSBL or ORBL server name.
	Server *string `pulumi:"server"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// SpamfilterDnsblEntryInput is an input type that accepts SpamfilterDnsblEntryArgs and SpamfilterDnsblEntryOutput values.
// You can construct a concrete instance of `SpamfilterDnsblEntryInput` via:
//
//	SpamfilterDnsblEntryArgs{...}
type SpamfilterDnsblEntryInput interface {
	pulumi.Input

	ToSpamfilterDnsblEntryOutput() SpamfilterDnsblEntryOutput
	ToSpamfilterDnsblEntryOutputWithContext(context.Context) SpamfilterDnsblEntryOutput
}

type SpamfilterDnsblEntryArgs struct {
	// Reject connection or mark as spam email. Valid values: `reject`, `spam`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// DNSBL/ORBL entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// DNSBL or ORBL server name.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SpamfilterDnsblEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterDnsblEntry)(nil)).Elem()
}

func (i SpamfilterDnsblEntryArgs) ToSpamfilterDnsblEntryOutput() SpamfilterDnsblEntryOutput {
	return i.ToSpamfilterDnsblEntryOutputWithContext(context.Background())
}

func (i SpamfilterDnsblEntryArgs) ToSpamfilterDnsblEntryOutputWithContext(ctx context.Context) SpamfilterDnsblEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterDnsblEntryOutput)
}

// SpamfilterDnsblEntryArrayInput is an input type that accepts SpamfilterDnsblEntryArray and SpamfilterDnsblEntryArrayOutput values.
// You can construct a concrete instance of `SpamfilterDnsblEntryArrayInput` via:
//
//	SpamfilterDnsblEntryArray{ SpamfilterDnsblEntryArgs{...} }
type SpamfilterDnsblEntryArrayInput interface {
	pulumi.Input

	ToSpamfilterDnsblEntryArrayOutput() SpamfilterDnsblEntryArrayOutput
	ToSpamfilterDnsblEntryArrayOutputWithContext(context.Context) SpamfilterDnsblEntryArrayOutput
}

type SpamfilterDnsblEntryArray []SpamfilterDnsblEntryInput

func (SpamfilterDnsblEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterDnsblEntry)(nil)).Elem()
}

func (i SpamfilterDnsblEntryArray) ToSpamfilterDnsblEntryArrayOutput() SpamfilterDnsblEntryArrayOutput {
	return i.ToSpamfilterDnsblEntryArrayOutputWithContext(context.Background())
}

func (i SpamfilterDnsblEntryArray) ToSpamfilterDnsblEntryArrayOutputWithContext(ctx context.Context) SpamfilterDnsblEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterDnsblEntryArrayOutput)
}

type SpamfilterDnsblEntryOutput struct{ *pulumi.OutputState }

func (SpamfilterDnsblEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterDnsblEntry)(nil)).Elem()
}

func (o SpamfilterDnsblEntryOutput) ToSpamfilterDnsblEntryOutput() SpamfilterDnsblEntryOutput {
	return o
}

func (o SpamfilterDnsblEntryOutput) ToSpamfilterDnsblEntryOutputWithContext(ctx context.Context) SpamfilterDnsblEntryOutput {
	return o
}

// Reject connection or mark as spam email. Valid values: `reject`, `spam`.
func (o SpamfilterDnsblEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterDnsblEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// DNSBL/ORBL entry ID.
func (o SpamfilterDnsblEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterDnsblEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// DNSBL or ORBL server name.
func (o SpamfilterDnsblEntryOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterDnsblEntry) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o SpamfilterDnsblEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterDnsblEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SpamfilterDnsblEntryArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterDnsblEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterDnsblEntry)(nil)).Elem()
}

func (o SpamfilterDnsblEntryArrayOutput) ToSpamfilterDnsblEntryArrayOutput() SpamfilterDnsblEntryArrayOutput {
	return o
}

func (o SpamfilterDnsblEntryArrayOutput) ToSpamfilterDnsblEntryArrayOutputWithContext(ctx context.Context) SpamfilterDnsblEntryArrayOutput {
	return o
}

func (o SpamfilterDnsblEntryArrayOutput) Index(i pulumi.IntInput) SpamfilterDnsblEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpamfilterDnsblEntry {
		return vs[0].([]SpamfilterDnsblEntry)[vs[1].(int)]
	}).(SpamfilterDnsblEntryOutput)
}

type SpamfilterIptrustEntry struct {
	// Type of address. Valid values: `ipv4`, `ipv6`.
	AddrType *string `pulumi:"addrType"`
	// Trusted IP entry ID.
	Id *int `pulumi:"id"`
	// IPv4 network address or network address/subnet mask bits.
	Ip4Subnet *string `pulumi:"ip4Subnet"`
	// IPv6 network address/subnet mask bits.
	Ip6Subnet *string `pulumi:"ip6Subnet"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// SpamfilterIptrustEntryInput is an input type that accepts SpamfilterIptrustEntryArgs and SpamfilterIptrustEntryOutput values.
// You can construct a concrete instance of `SpamfilterIptrustEntryInput` via:
//
//	SpamfilterIptrustEntryArgs{...}
type SpamfilterIptrustEntryInput interface {
	pulumi.Input

	ToSpamfilterIptrustEntryOutput() SpamfilterIptrustEntryOutput
	ToSpamfilterIptrustEntryOutputWithContext(context.Context) SpamfilterIptrustEntryOutput
}

type SpamfilterIptrustEntryArgs struct {
	// Type of address. Valid values: `ipv4`, `ipv6`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Trusted IP entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 network address or network address/subnet mask bits.
	Ip4Subnet pulumi.StringPtrInput `pulumi:"ip4Subnet"`
	// IPv6 network address/subnet mask bits.
	Ip6Subnet pulumi.StringPtrInput `pulumi:"ip6Subnet"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SpamfilterIptrustEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterIptrustEntry)(nil)).Elem()
}

func (i SpamfilterIptrustEntryArgs) ToSpamfilterIptrustEntryOutput() SpamfilterIptrustEntryOutput {
	return i.ToSpamfilterIptrustEntryOutputWithContext(context.Background())
}

func (i SpamfilterIptrustEntryArgs) ToSpamfilterIptrustEntryOutputWithContext(ctx context.Context) SpamfilterIptrustEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterIptrustEntryOutput)
}

// SpamfilterIptrustEntryArrayInput is an input type that accepts SpamfilterIptrustEntryArray and SpamfilterIptrustEntryArrayOutput values.
// You can construct a concrete instance of `SpamfilterIptrustEntryArrayInput` via:
//
//	SpamfilterIptrustEntryArray{ SpamfilterIptrustEntryArgs{...} }
type SpamfilterIptrustEntryArrayInput interface {
	pulumi.Input

	ToSpamfilterIptrustEntryArrayOutput() SpamfilterIptrustEntryArrayOutput
	ToSpamfilterIptrustEntryArrayOutputWithContext(context.Context) SpamfilterIptrustEntryArrayOutput
}

type SpamfilterIptrustEntryArray []SpamfilterIptrustEntryInput

func (SpamfilterIptrustEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterIptrustEntry)(nil)).Elem()
}

func (i SpamfilterIptrustEntryArray) ToSpamfilterIptrustEntryArrayOutput() SpamfilterIptrustEntryArrayOutput {
	return i.ToSpamfilterIptrustEntryArrayOutputWithContext(context.Background())
}

func (i SpamfilterIptrustEntryArray) ToSpamfilterIptrustEntryArrayOutputWithContext(ctx context.Context) SpamfilterIptrustEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterIptrustEntryArrayOutput)
}

type SpamfilterIptrustEntryOutput struct{ *pulumi.OutputState }

func (SpamfilterIptrustEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterIptrustEntry)(nil)).Elem()
}

func (o SpamfilterIptrustEntryOutput) ToSpamfilterIptrustEntryOutput() SpamfilterIptrustEntryOutput {
	return o
}

func (o SpamfilterIptrustEntryOutput) ToSpamfilterIptrustEntryOutputWithContext(ctx context.Context) SpamfilterIptrustEntryOutput {
	return o
}

// Type of address. Valid values: `ipv4`, `ipv6`.
func (o SpamfilterIptrustEntryOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterIptrustEntry) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Trusted IP entry ID.
func (o SpamfilterIptrustEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterIptrustEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 network address or network address/subnet mask bits.
func (o SpamfilterIptrustEntryOutput) Ip4Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterIptrustEntry) *string { return v.Ip4Subnet }).(pulumi.StringPtrOutput)
}

// IPv6 network address/subnet mask bits.
func (o SpamfilterIptrustEntryOutput) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterIptrustEntry) *string { return v.Ip6Subnet }).(pulumi.StringPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o SpamfilterIptrustEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterIptrustEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SpamfilterIptrustEntryArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterIptrustEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterIptrustEntry)(nil)).Elem()
}

func (o SpamfilterIptrustEntryArrayOutput) ToSpamfilterIptrustEntryArrayOutput() SpamfilterIptrustEntryArrayOutput {
	return o
}

func (o SpamfilterIptrustEntryArrayOutput) ToSpamfilterIptrustEntryArrayOutputWithContext(ctx context.Context) SpamfilterIptrustEntryArrayOutput {
	return o
}

func (o SpamfilterIptrustEntryArrayOutput) Index(i pulumi.IntInput) SpamfilterIptrustEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpamfilterIptrustEntry {
		return vs[0].([]SpamfilterIptrustEntry)[vs[1].(int)]
	}).(SpamfilterIptrustEntryOutput)
}

type SpamfilterMheaderEntry struct {
	// Mark spam or good. Valid values: `spam`, `clear`.
	Action *string `pulumi:"action"`
	// Pattern for the header field body.
	Fieldbody *string `pulumi:"fieldbody"`
	// Pattern for header field name.
	Fieldname *string `pulumi:"fieldname"`
	// Mime header entry ID.
	Id *int `pulumi:"id"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType *string `pulumi:"patternType"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// SpamfilterMheaderEntryInput is an input type that accepts SpamfilterMheaderEntryArgs and SpamfilterMheaderEntryOutput values.
// You can construct a concrete instance of `SpamfilterMheaderEntryInput` via:
//
//	SpamfilterMheaderEntryArgs{...}
type SpamfilterMheaderEntryInput interface {
	pulumi.Input

	ToSpamfilterMheaderEntryOutput() SpamfilterMheaderEntryOutput
	ToSpamfilterMheaderEntryOutputWithContext(context.Context) SpamfilterMheaderEntryOutput
}

type SpamfilterMheaderEntryArgs struct {
	// Mark spam or good. Valid values: `spam`, `clear`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Pattern for the header field body.
	Fieldbody pulumi.StringPtrInput `pulumi:"fieldbody"`
	// Pattern for header field name.
	Fieldname pulumi.StringPtrInput `pulumi:"fieldname"`
	// Mime header entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SpamfilterMheaderEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterMheaderEntry)(nil)).Elem()
}

func (i SpamfilterMheaderEntryArgs) ToSpamfilterMheaderEntryOutput() SpamfilterMheaderEntryOutput {
	return i.ToSpamfilterMheaderEntryOutputWithContext(context.Background())
}

func (i SpamfilterMheaderEntryArgs) ToSpamfilterMheaderEntryOutputWithContext(ctx context.Context) SpamfilterMheaderEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterMheaderEntryOutput)
}

// SpamfilterMheaderEntryArrayInput is an input type that accepts SpamfilterMheaderEntryArray and SpamfilterMheaderEntryArrayOutput values.
// You can construct a concrete instance of `SpamfilterMheaderEntryArrayInput` via:
//
//	SpamfilterMheaderEntryArray{ SpamfilterMheaderEntryArgs{...} }
type SpamfilterMheaderEntryArrayInput interface {
	pulumi.Input

	ToSpamfilterMheaderEntryArrayOutput() SpamfilterMheaderEntryArrayOutput
	ToSpamfilterMheaderEntryArrayOutputWithContext(context.Context) SpamfilterMheaderEntryArrayOutput
}

type SpamfilterMheaderEntryArray []SpamfilterMheaderEntryInput

func (SpamfilterMheaderEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterMheaderEntry)(nil)).Elem()
}

func (i SpamfilterMheaderEntryArray) ToSpamfilterMheaderEntryArrayOutput() SpamfilterMheaderEntryArrayOutput {
	return i.ToSpamfilterMheaderEntryArrayOutputWithContext(context.Background())
}

func (i SpamfilterMheaderEntryArray) ToSpamfilterMheaderEntryArrayOutputWithContext(ctx context.Context) SpamfilterMheaderEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterMheaderEntryArrayOutput)
}

type SpamfilterMheaderEntryOutput struct{ *pulumi.OutputState }

func (SpamfilterMheaderEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterMheaderEntry)(nil)).Elem()
}

func (o SpamfilterMheaderEntryOutput) ToSpamfilterMheaderEntryOutput() SpamfilterMheaderEntryOutput {
	return o
}

func (o SpamfilterMheaderEntryOutput) ToSpamfilterMheaderEntryOutputWithContext(ctx context.Context) SpamfilterMheaderEntryOutput {
	return o
}

// Mark spam or good. Valid values: `spam`, `clear`.
func (o SpamfilterMheaderEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Pattern for the header field body.
func (o SpamfilterMheaderEntryOutput) Fieldbody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *string { return v.Fieldbody }).(pulumi.StringPtrOutput)
}

// Pattern for header field name.
func (o SpamfilterMheaderEntryOutput) Fieldname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *string { return v.Fieldname }).(pulumi.StringPtrOutput)
}

// Mime header entry ID.
func (o SpamfilterMheaderEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
func (o SpamfilterMheaderEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o SpamfilterMheaderEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SpamfilterMheaderEntryArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterMheaderEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterMheaderEntry)(nil)).Elem()
}

func (o SpamfilterMheaderEntryArrayOutput) ToSpamfilterMheaderEntryArrayOutput() SpamfilterMheaderEntryArrayOutput {
	return o
}

func (o SpamfilterMheaderEntryArrayOutput) ToSpamfilterMheaderEntryArrayOutputWithContext(ctx context.Context) SpamfilterMheaderEntryArrayOutput {
	return o
}

func (o SpamfilterMheaderEntryArrayOutput) Index(i pulumi.IntInput) SpamfilterMheaderEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpamfilterMheaderEntry {
		return vs[0].([]SpamfilterMheaderEntry)[vs[1].(int)]
	}).(SpamfilterMheaderEntryOutput)
}

type SpamfilterProfileGmail struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
}

// SpamfilterProfileGmailInput is an input type that accepts SpamfilterProfileGmailArgs and SpamfilterProfileGmailOutput values.
// You can construct a concrete instance of `SpamfilterProfileGmailInput` via:
//
//	SpamfilterProfileGmailArgs{...}
type SpamfilterProfileGmailInput interface {
	pulumi.Input

	ToSpamfilterProfileGmailOutput() SpamfilterProfileGmailOutput
	ToSpamfilterProfileGmailOutputWithContext(context.Context) SpamfilterProfileGmailOutput
}

type SpamfilterProfileGmailArgs struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (SpamfilterProfileGmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileGmail)(nil)).Elem()
}

func (i SpamfilterProfileGmailArgs) ToSpamfilterProfileGmailOutput() SpamfilterProfileGmailOutput {
	return i.ToSpamfilterProfileGmailOutputWithContext(context.Background())
}

func (i SpamfilterProfileGmailArgs) ToSpamfilterProfileGmailOutputWithContext(ctx context.Context) SpamfilterProfileGmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileGmailOutput)
}

func (i SpamfilterProfileGmailArgs) ToSpamfilterProfileGmailPtrOutput() SpamfilterProfileGmailPtrOutput {
	return i.ToSpamfilterProfileGmailPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileGmailArgs) ToSpamfilterProfileGmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileGmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileGmailOutput).ToSpamfilterProfileGmailPtrOutputWithContext(ctx)
}

// SpamfilterProfileGmailPtrInput is an input type that accepts SpamfilterProfileGmailArgs, SpamfilterProfileGmailPtr and SpamfilterProfileGmailPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileGmailPtrInput` via:
//
//	        SpamfilterProfileGmailArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileGmailPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileGmailPtrOutput() SpamfilterProfileGmailPtrOutput
	ToSpamfilterProfileGmailPtrOutputWithContext(context.Context) SpamfilterProfileGmailPtrOutput
}

type spamfilterProfileGmailPtrType SpamfilterProfileGmailArgs

func SpamfilterProfileGmailPtr(v *SpamfilterProfileGmailArgs) SpamfilterProfileGmailPtrInput {
	return (*spamfilterProfileGmailPtrType)(v)
}

func (*spamfilterProfileGmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileGmail)(nil)).Elem()
}

func (i *spamfilterProfileGmailPtrType) ToSpamfilterProfileGmailPtrOutput() SpamfilterProfileGmailPtrOutput {
	return i.ToSpamfilterProfileGmailPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileGmailPtrType) ToSpamfilterProfileGmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileGmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileGmailPtrOutput)
}

type SpamfilterProfileGmailOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileGmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileGmail)(nil)).Elem()
}

func (o SpamfilterProfileGmailOutput) ToSpamfilterProfileGmailOutput() SpamfilterProfileGmailOutput {
	return o
}

func (o SpamfilterProfileGmailOutput) ToSpamfilterProfileGmailOutputWithContext(ctx context.Context) SpamfilterProfileGmailOutput {
	return o
}

func (o SpamfilterProfileGmailOutput) ToSpamfilterProfileGmailPtrOutput() SpamfilterProfileGmailPtrOutput {
	return o.ToSpamfilterProfileGmailPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileGmailOutput) ToSpamfilterProfileGmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileGmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileGmail) *SpamfilterProfileGmail {
		return &v
	}).(SpamfilterProfileGmailPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileGmailOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileGmail) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileGmailPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileGmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileGmail)(nil)).Elem()
}

func (o SpamfilterProfileGmailPtrOutput) ToSpamfilterProfileGmailPtrOutput() SpamfilterProfileGmailPtrOutput {
	return o
}

func (o SpamfilterProfileGmailPtrOutput) ToSpamfilterProfileGmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileGmailPtrOutput {
	return o
}

func (o SpamfilterProfileGmailPtrOutput) Elem() SpamfilterProfileGmailOutput {
	return o.ApplyT(func(v *SpamfilterProfileGmail) SpamfilterProfileGmail {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileGmail
		return ret
	}).(SpamfilterProfileGmailOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileGmailPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileGmail) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfileImap struct {
	// Action for spam email. Valid values: `pass`, `tag`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Subject text or header added to spam email.
	TagMsg *string `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType *string `pulumi:"tagType"`
}

// SpamfilterProfileImapInput is an input type that accepts SpamfilterProfileImapArgs and SpamfilterProfileImapOutput values.
// You can construct a concrete instance of `SpamfilterProfileImapInput` via:
//
//	SpamfilterProfileImapArgs{...}
type SpamfilterProfileImapInput interface {
	pulumi.Input

	ToSpamfilterProfileImapOutput() SpamfilterProfileImapOutput
	ToSpamfilterProfileImapOutputWithContext(context.Context) SpamfilterProfileImapOutput
}

type SpamfilterProfileImapArgs struct {
	// Action for spam email. Valid values: `pass`, `tag`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Subject text or header added to spam email.
	TagMsg pulumi.StringPtrInput `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType pulumi.StringPtrInput `pulumi:"tagType"`
}

func (SpamfilterProfileImapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileImap)(nil)).Elem()
}

func (i SpamfilterProfileImapArgs) ToSpamfilterProfileImapOutput() SpamfilterProfileImapOutput {
	return i.ToSpamfilterProfileImapOutputWithContext(context.Background())
}

func (i SpamfilterProfileImapArgs) ToSpamfilterProfileImapOutputWithContext(ctx context.Context) SpamfilterProfileImapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileImapOutput)
}

func (i SpamfilterProfileImapArgs) ToSpamfilterProfileImapPtrOutput() SpamfilterProfileImapPtrOutput {
	return i.ToSpamfilterProfileImapPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileImapArgs) ToSpamfilterProfileImapPtrOutputWithContext(ctx context.Context) SpamfilterProfileImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileImapOutput).ToSpamfilterProfileImapPtrOutputWithContext(ctx)
}

// SpamfilterProfileImapPtrInput is an input type that accepts SpamfilterProfileImapArgs, SpamfilterProfileImapPtr and SpamfilterProfileImapPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileImapPtrInput` via:
//
//	        SpamfilterProfileImapArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileImapPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileImapPtrOutput() SpamfilterProfileImapPtrOutput
	ToSpamfilterProfileImapPtrOutputWithContext(context.Context) SpamfilterProfileImapPtrOutput
}

type spamfilterProfileImapPtrType SpamfilterProfileImapArgs

func SpamfilterProfileImapPtr(v *SpamfilterProfileImapArgs) SpamfilterProfileImapPtrInput {
	return (*spamfilterProfileImapPtrType)(v)
}

func (*spamfilterProfileImapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileImap)(nil)).Elem()
}

func (i *spamfilterProfileImapPtrType) ToSpamfilterProfileImapPtrOutput() SpamfilterProfileImapPtrOutput {
	return i.ToSpamfilterProfileImapPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileImapPtrType) ToSpamfilterProfileImapPtrOutputWithContext(ctx context.Context) SpamfilterProfileImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileImapPtrOutput)
}

type SpamfilterProfileImapOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileImapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileImap)(nil)).Elem()
}

func (o SpamfilterProfileImapOutput) ToSpamfilterProfileImapOutput() SpamfilterProfileImapOutput {
	return o
}

func (o SpamfilterProfileImapOutput) ToSpamfilterProfileImapOutputWithContext(ctx context.Context) SpamfilterProfileImapOutput {
	return o
}

func (o SpamfilterProfileImapOutput) ToSpamfilterProfileImapPtrOutput() SpamfilterProfileImapPtrOutput {
	return o.ToSpamfilterProfileImapPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileImapOutput) ToSpamfilterProfileImapPtrOutputWithContext(ctx context.Context) SpamfilterProfileImapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileImap) *SpamfilterProfileImap {
		return &v
	}).(SpamfilterProfileImapPtrOutput)
}

// Action for spam email. Valid values: `pass`, `tag`.
func (o SpamfilterProfileImapOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileImap) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileImapOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileImap) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
func (o SpamfilterProfileImapOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileImap) *string { return v.TagMsg }).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o SpamfilterProfileImapOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileImap) *string { return v.TagType }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileImapPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileImapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileImap)(nil)).Elem()
}

func (o SpamfilterProfileImapPtrOutput) ToSpamfilterProfileImapPtrOutput() SpamfilterProfileImapPtrOutput {
	return o
}

func (o SpamfilterProfileImapPtrOutput) ToSpamfilterProfileImapPtrOutputWithContext(ctx context.Context) SpamfilterProfileImapPtrOutput {
	return o
}

func (o SpamfilterProfileImapPtrOutput) Elem() SpamfilterProfileImapOutput {
	return o.ApplyT(func(v *SpamfilterProfileImap) SpamfilterProfileImap {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileImap
		return ret
	}).(SpamfilterProfileImapOutput)
}

// Action for spam email. Valid values: `pass`, `tag`.
func (o SpamfilterProfileImapPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileImapPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
func (o SpamfilterProfileImapPtrOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.TagMsg
	}).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o SpamfilterProfileImapPtrOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.TagType
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfileMapi struct {
	// Action for spam email. Valid values: `pass`, `discard`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
}

// SpamfilterProfileMapiInput is an input type that accepts SpamfilterProfileMapiArgs and SpamfilterProfileMapiOutput values.
// You can construct a concrete instance of `SpamfilterProfileMapiInput` via:
//
//	SpamfilterProfileMapiArgs{...}
type SpamfilterProfileMapiInput interface {
	pulumi.Input

	ToSpamfilterProfileMapiOutput() SpamfilterProfileMapiOutput
	ToSpamfilterProfileMapiOutputWithContext(context.Context) SpamfilterProfileMapiOutput
}

type SpamfilterProfileMapiArgs struct {
	// Action for spam email. Valid values: `pass`, `discard`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (SpamfilterProfileMapiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileMapi)(nil)).Elem()
}

func (i SpamfilterProfileMapiArgs) ToSpamfilterProfileMapiOutput() SpamfilterProfileMapiOutput {
	return i.ToSpamfilterProfileMapiOutputWithContext(context.Background())
}

func (i SpamfilterProfileMapiArgs) ToSpamfilterProfileMapiOutputWithContext(ctx context.Context) SpamfilterProfileMapiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMapiOutput)
}

func (i SpamfilterProfileMapiArgs) ToSpamfilterProfileMapiPtrOutput() SpamfilterProfileMapiPtrOutput {
	return i.ToSpamfilterProfileMapiPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileMapiArgs) ToSpamfilterProfileMapiPtrOutputWithContext(ctx context.Context) SpamfilterProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMapiOutput).ToSpamfilterProfileMapiPtrOutputWithContext(ctx)
}

// SpamfilterProfileMapiPtrInput is an input type that accepts SpamfilterProfileMapiArgs, SpamfilterProfileMapiPtr and SpamfilterProfileMapiPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileMapiPtrInput` via:
//
//	        SpamfilterProfileMapiArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileMapiPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileMapiPtrOutput() SpamfilterProfileMapiPtrOutput
	ToSpamfilterProfileMapiPtrOutputWithContext(context.Context) SpamfilterProfileMapiPtrOutput
}

type spamfilterProfileMapiPtrType SpamfilterProfileMapiArgs

func SpamfilterProfileMapiPtr(v *SpamfilterProfileMapiArgs) SpamfilterProfileMapiPtrInput {
	return (*spamfilterProfileMapiPtrType)(v)
}

func (*spamfilterProfileMapiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileMapi)(nil)).Elem()
}

func (i *spamfilterProfileMapiPtrType) ToSpamfilterProfileMapiPtrOutput() SpamfilterProfileMapiPtrOutput {
	return i.ToSpamfilterProfileMapiPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileMapiPtrType) ToSpamfilterProfileMapiPtrOutputWithContext(ctx context.Context) SpamfilterProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMapiPtrOutput)
}

type SpamfilterProfileMapiOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileMapiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileMapi)(nil)).Elem()
}

func (o SpamfilterProfileMapiOutput) ToSpamfilterProfileMapiOutput() SpamfilterProfileMapiOutput {
	return o
}

func (o SpamfilterProfileMapiOutput) ToSpamfilterProfileMapiOutputWithContext(ctx context.Context) SpamfilterProfileMapiOutput {
	return o
}

func (o SpamfilterProfileMapiOutput) ToSpamfilterProfileMapiPtrOutput() SpamfilterProfileMapiPtrOutput {
	return o.ToSpamfilterProfileMapiPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileMapiOutput) ToSpamfilterProfileMapiPtrOutputWithContext(ctx context.Context) SpamfilterProfileMapiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileMapi) *SpamfilterProfileMapi {
		return &v
	}).(SpamfilterProfileMapiPtrOutput)
}

// Action for spam email. Valid values: `pass`, `discard`.
func (o SpamfilterProfileMapiOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileMapi) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileMapiOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileMapi) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileMapiPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileMapiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileMapi)(nil)).Elem()
}

func (o SpamfilterProfileMapiPtrOutput) ToSpamfilterProfileMapiPtrOutput() SpamfilterProfileMapiPtrOutput {
	return o
}

func (o SpamfilterProfileMapiPtrOutput) ToSpamfilterProfileMapiPtrOutputWithContext(ctx context.Context) SpamfilterProfileMapiPtrOutput {
	return o
}

func (o SpamfilterProfileMapiPtrOutput) Elem() SpamfilterProfileMapiOutput {
	return o.ApplyT(func(v *SpamfilterProfileMapi) SpamfilterProfileMapi {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileMapi
		return ret
	}).(SpamfilterProfileMapiOutput)
}

// Action for spam email. Valid values: `pass`, `discard`.
func (o SpamfilterProfileMapiPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileMapiPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfileMsnHotmail struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
}

// SpamfilterProfileMsnHotmailInput is an input type that accepts SpamfilterProfileMsnHotmailArgs and SpamfilterProfileMsnHotmailOutput values.
// You can construct a concrete instance of `SpamfilterProfileMsnHotmailInput` via:
//
//	SpamfilterProfileMsnHotmailArgs{...}
type SpamfilterProfileMsnHotmailInput interface {
	pulumi.Input

	ToSpamfilterProfileMsnHotmailOutput() SpamfilterProfileMsnHotmailOutput
	ToSpamfilterProfileMsnHotmailOutputWithContext(context.Context) SpamfilterProfileMsnHotmailOutput
}

type SpamfilterProfileMsnHotmailArgs struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (SpamfilterProfileMsnHotmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileMsnHotmail)(nil)).Elem()
}

func (i SpamfilterProfileMsnHotmailArgs) ToSpamfilterProfileMsnHotmailOutput() SpamfilterProfileMsnHotmailOutput {
	return i.ToSpamfilterProfileMsnHotmailOutputWithContext(context.Background())
}

func (i SpamfilterProfileMsnHotmailArgs) ToSpamfilterProfileMsnHotmailOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMsnHotmailOutput)
}

func (i SpamfilterProfileMsnHotmailArgs) ToSpamfilterProfileMsnHotmailPtrOutput() SpamfilterProfileMsnHotmailPtrOutput {
	return i.ToSpamfilterProfileMsnHotmailPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileMsnHotmailArgs) ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMsnHotmailOutput).ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx)
}

// SpamfilterProfileMsnHotmailPtrInput is an input type that accepts SpamfilterProfileMsnHotmailArgs, SpamfilterProfileMsnHotmailPtr and SpamfilterProfileMsnHotmailPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileMsnHotmailPtrInput` via:
//
//	        SpamfilterProfileMsnHotmailArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileMsnHotmailPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileMsnHotmailPtrOutput() SpamfilterProfileMsnHotmailPtrOutput
	ToSpamfilterProfileMsnHotmailPtrOutputWithContext(context.Context) SpamfilterProfileMsnHotmailPtrOutput
}

type spamfilterProfileMsnHotmailPtrType SpamfilterProfileMsnHotmailArgs

func SpamfilterProfileMsnHotmailPtr(v *SpamfilterProfileMsnHotmailArgs) SpamfilterProfileMsnHotmailPtrInput {
	return (*spamfilterProfileMsnHotmailPtrType)(v)
}

func (*spamfilterProfileMsnHotmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileMsnHotmail)(nil)).Elem()
}

func (i *spamfilterProfileMsnHotmailPtrType) ToSpamfilterProfileMsnHotmailPtrOutput() SpamfilterProfileMsnHotmailPtrOutput {
	return i.ToSpamfilterProfileMsnHotmailPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileMsnHotmailPtrType) ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMsnHotmailPtrOutput)
}

type SpamfilterProfileMsnHotmailOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileMsnHotmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileMsnHotmail)(nil)).Elem()
}

func (o SpamfilterProfileMsnHotmailOutput) ToSpamfilterProfileMsnHotmailOutput() SpamfilterProfileMsnHotmailOutput {
	return o
}

func (o SpamfilterProfileMsnHotmailOutput) ToSpamfilterProfileMsnHotmailOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailOutput {
	return o
}

func (o SpamfilterProfileMsnHotmailOutput) ToSpamfilterProfileMsnHotmailPtrOutput() SpamfilterProfileMsnHotmailPtrOutput {
	return o.ToSpamfilterProfileMsnHotmailPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileMsnHotmailOutput) ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileMsnHotmail) *SpamfilterProfileMsnHotmail {
		return &v
	}).(SpamfilterProfileMsnHotmailPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileMsnHotmailOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileMsnHotmail) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileMsnHotmailPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileMsnHotmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileMsnHotmail)(nil)).Elem()
}

func (o SpamfilterProfileMsnHotmailPtrOutput) ToSpamfilterProfileMsnHotmailPtrOutput() SpamfilterProfileMsnHotmailPtrOutput {
	return o
}

func (o SpamfilterProfileMsnHotmailPtrOutput) ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailPtrOutput {
	return o
}

func (o SpamfilterProfileMsnHotmailPtrOutput) Elem() SpamfilterProfileMsnHotmailOutput {
	return o.ApplyT(func(v *SpamfilterProfileMsnHotmail) SpamfilterProfileMsnHotmail {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileMsnHotmail
		return ret
	}).(SpamfilterProfileMsnHotmailOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileMsnHotmailPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileMsnHotmail) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfilePop3 struct {
	// Action for spam email. Valid values: `pass`, `tag`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Subject text or header added to spam email.
	//
	// The `pop3` block supports:
	TagMsg *string `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType *string `pulumi:"tagType"`
}

// SpamfilterProfilePop3Input is an input type that accepts SpamfilterProfilePop3Args and SpamfilterProfilePop3Output values.
// You can construct a concrete instance of `SpamfilterProfilePop3Input` via:
//
//	SpamfilterProfilePop3Args{...}
type SpamfilterProfilePop3Input interface {
	pulumi.Input

	ToSpamfilterProfilePop3Output() SpamfilterProfilePop3Output
	ToSpamfilterProfilePop3OutputWithContext(context.Context) SpamfilterProfilePop3Output
}

type SpamfilterProfilePop3Args struct {
	// Action for spam email. Valid values: `pass`, `tag`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Subject text or header added to spam email.
	//
	// The `pop3` block supports:
	TagMsg pulumi.StringPtrInput `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType pulumi.StringPtrInput `pulumi:"tagType"`
}

func (SpamfilterProfilePop3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfilePop3)(nil)).Elem()
}

func (i SpamfilterProfilePop3Args) ToSpamfilterProfilePop3Output() SpamfilterProfilePop3Output {
	return i.ToSpamfilterProfilePop3OutputWithContext(context.Background())
}

func (i SpamfilterProfilePop3Args) ToSpamfilterProfilePop3OutputWithContext(ctx context.Context) SpamfilterProfilePop3Output {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfilePop3Output)
}

func (i SpamfilterProfilePop3Args) ToSpamfilterProfilePop3PtrOutput() SpamfilterProfilePop3PtrOutput {
	return i.ToSpamfilterProfilePop3PtrOutputWithContext(context.Background())
}

func (i SpamfilterProfilePop3Args) ToSpamfilterProfilePop3PtrOutputWithContext(ctx context.Context) SpamfilterProfilePop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfilePop3Output).ToSpamfilterProfilePop3PtrOutputWithContext(ctx)
}

// SpamfilterProfilePop3PtrInput is an input type that accepts SpamfilterProfilePop3Args, SpamfilterProfilePop3Ptr and SpamfilterProfilePop3PtrOutput values.
// You can construct a concrete instance of `SpamfilterProfilePop3PtrInput` via:
//
//	        SpamfilterProfilePop3Args{...}
//
//	or:
//
//	        nil
type SpamfilterProfilePop3PtrInput interface {
	pulumi.Input

	ToSpamfilterProfilePop3PtrOutput() SpamfilterProfilePop3PtrOutput
	ToSpamfilterProfilePop3PtrOutputWithContext(context.Context) SpamfilterProfilePop3PtrOutput
}

type spamfilterProfilePop3PtrType SpamfilterProfilePop3Args

func SpamfilterProfilePop3Ptr(v *SpamfilterProfilePop3Args) SpamfilterProfilePop3PtrInput {
	return (*spamfilterProfilePop3PtrType)(v)
}

func (*spamfilterProfilePop3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfilePop3)(nil)).Elem()
}

func (i *spamfilterProfilePop3PtrType) ToSpamfilterProfilePop3PtrOutput() SpamfilterProfilePop3PtrOutput {
	return i.ToSpamfilterProfilePop3PtrOutputWithContext(context.Background())
}

func (i *spamfilterProfilePop3PtrType) ToSpamfilterProfilePop3PtrOutputWithContext(ctx context.Context) SpamfilterProfilePop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfilePop3PtrOutput)
}

type SpamfilterProfilePop3Output struct{ *pulumi.OutputState }

func (SpamfilterProfilePop3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfilePop3)(nil)).Elem()
}

func (o SpamfilterProfilePop3Output) ToSpamfilterProfilePop3Output() SpamfilterProfilePop3Output {
	return o
}

func (o SpamfilterProfilePop3Output) ToSpamfilterProfilePop3OutputWithContext(ctx context.Context) SpamfilterProfilePop3Output {
	return o
}

func (o SpamfilterProfilePop3Output) ToSpamfilterProfilePop3PtrOutput() SpamfilterProfilePop3PtrOutput {
	return o.ToSpamfilterProfilePop3PtrOutputWithContext(context.Background())
}

func (o SpamfilterProfilePop3Output) ToSpamfilterProfilePop3PtrOutputWithContext(ctx context.Context) SpamfilterProfilePop3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfilePop3) *SpamfilterProfilePop3 {
		return &v
	}).(SpamfilterProfilePop3PtrOutput)
}

// Action for spam email. Valid values: `pass`, `tag`.
func (o SpamfilterProfilePop3Output) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfilePop3) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfilePop3Output) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfilePop3) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
//
// The `pop3` block supports:
func (o SpamfilterProfilePop3Output) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfilePop3) *string { return v.TagMsg }).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o SpamfilterProfilePop3Output) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfilePop3) *string { return v.TagType }).(pulumi.StringPtrOutput)
}

type SpamfilterProfilePop3PtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfilePop3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfilePop3)(nil)).Elem()
}

func (o SpamfilterProfilePop3PtrOutput) ToSpamfilterProfilePop3PtrOutput() SpamfilterProfilePop3PtrOutput {
	return o
}

func (o SpamfilterProfilePop3PtrOutput) ToSpamfilterProfilePop3PtrOutputWithContext(ctx context.Context) SpamfilterProfilePop3PtrOutput {
	return o
}

func (o SpamfilterProfilePop3PtrOutput) Elem() SpamfilterProfilePop3Output {
	return o.ApplyT(func(v *SpamfilterProfilePop3) SpamfilterProfilePop3 {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfilePop3
		return ret
	}).(SpamfilterProfilePop3Output)
}

// Action for spam email. Valid values: `pass`, `tag`.
func (o SpamfilterProfilePop3PtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfilePop3PtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
//
// The `pop3` block supports:
func (o SpamfilterProfilePop3PtrOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.TagMsg
	}).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o SpamfilterProfilePop3PtrOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.TagType
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfileSmtp struct {
	// Action for spam email. Valid values: `pass`, `tag`, `discard`.
	Action *string `pulumi:"action"`
	// Enable/disable SMTP email header IP checks for spamfsip, spamrbl and spambwl filters. Valid values: `disable`, `enable`.
	Hdrip *string `pulumi:"hdrip"`
	// Enable/disable local filter to override SMTP remote check result. Valid values: `disable`, `enable`.
	LocalOverride *string `pulumi:"localOverride"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Subject text or header added to spam email.
	TagMsg *string `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType *string `pulumi:"tagType"`
}

// SpamfilterProfileSmtpInput is an input type that accepts SpamfilterProfileSmtpArgs and SpamfilterProfileSmtpOutput values.
// You can construct a concrete instance of `SpamfilterProfileSmtpInput` via:
//
//	SpamfilterProfileSmtpArgs{...}
type SpamfilterProfileSmtpInput interface {
	pulumi.Input

	ToSpamfilterProfileSmtpOutput() SpamfilterProfileSmtpOutput
	ToSpamfilterProfileSmtpOutputWithContext(context.Context) SpamfilterProfileSmtpOutput
}

type SpamfilterProfileSmtpArgs struct {
	// Action for spam email. Valid values: `pass`, `tag`, `discard`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable SMTP email header IP checks for spamfsip, spamrbl and spambwl filters. Valid values: `disable`, `enable`.
	Hdrip pulumi.StringPtrInput `pulumi:"hdrip"`
	// Enable/disable local filter to override SMTP remote check result. Valid values: `disable`, `enable`.
	LocalOverride pulumi.StringPtrInput `pulumi:"localOverride"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Subject text or header added to spam email.
	TagMsg pulumi.StringPtrInput `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType pulumi.StringPtrInput `pulumi:"tagType"`
}

func (SpamfilterProfileSmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileSmtp)(nil)).Elem()
}

func (i SpamfilterProfileSmtpArgs) ToSpamfilterProfileSmtpOutput() SpamfilterProfileSmtpOutput {
	return i.ToSpamfilterProfileSmtpOutputWithContext(context.Background())
}

func (i SpamfilterProfileSmtpArgs) ToSpamfilterProfileSmtpOutputWithContext(ctx context.Context) SpamfilterProfileSmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileSmtpOutput)
}

func (i SpamfilterProfileSmtpArgs) ToSpamfilterProfileSmtpPtrOutput() SpamfilterProfileSmtpPtrOutput {
	return i.ToSpamfilterProfileSmtpPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileSmtpArgs) ToSpamfilterProfileSmtpPtrOutputWithContext(ctx context.Context) SpamfilterProfileSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileSmtpOutput).ToSpamfilterProfileSmtpPtrOutputWithContext(ctx)
}

// SpamfilterProfileSmtpPtrInput is an input type that accepts SpamfilterProfileSmtpArgs, SpamfilterProfileSmtpPtr and SpamfilterProfileSmtpPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileSmtpPtrInput` via:
//
//	        SpamfilterProfileSmtpArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileSmtpPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileSmtpPtrOutput() SpamfilterProfileSmtpPtrOutput
	ToSpamfilterProfileSmtpPtrOutputWithContext(context.Context) SpamfilterProfileSmtpPtrOutput
}

type spamfilterProfileSmtpPtrType SpamfilterProfileSmtpArgs

func SpamfilterProfileSmtpPtr(v *SpamfilterProfileSmtpArgs) SpamfilterProfileSmtpPtrInput {
	return (*spamfilterProfileSmtpPtrType)(v)
}

func (*spamfilterProfileSmtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileSmtp)(nil)).Elem()
}

func (i *spamfilterProfileSmtpPtrType) ToSpamfilterProfileSmtpPtrOutput() SpamfilterProfileSmtpPtrOutput {
	return i.ToSpamfilterProfileSmtpPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileSmtpPtrType) ToSpamfilterProfileSmtpPtrOutputWithContext(ctx context.Context) SpamfilterProfileSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileSmtpPtrOutput)
}

type SpamfilterProfileSmtpOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileSmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileSmtp)(nil)).Elem()
}

func (o SpamfilterProfileSmtpOutput) ToSpamfilterProfileSmtpOutput() SpamfilterProfileSmtpOutput {
	return o
}

func (o SpamfilterProfileSmtpOutput) ToSpamfilterProfileSmtpOutputWithContext(ctx context.Context) SpamfilterProfileSmtpOutput {
	return o
}

func (o SpamfilterProfileSmtpOutput) ToSpamfilterProfileSmtpPtrOutput() SpamfilterProfileSmtpPtrOutput {
	return o.ToSpamfilterProfileSmtpPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileSmtpOutput) ToSpamfilterProfileSmtpPtrOutputWithContext(ctx context.Context) SpamfilterProfileSmtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileSmtp) *SpamfilterProfileSmtp {
		return &v
	}).(SpamfilterProfileSmtpPtrOutput)
}

// Action for spam email. Valid values: `pass`, `tag`, `discard`.
func (o SpamfilterProfileSmtpOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP email header IP checks for spamfsip, spamrbl and spambwl filters. Valid values: `disable`, `enable`.
func (o SpamfilterProfileSmtpOutput) Hdrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.Hdrip }).(pulumi.StringPtrOutput)
}

// Enable/disable local filter to override SMTP remote check result. Valid values: `disable`, `enable`.
func (o SpamfilterProfileSmtpOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileSmtpOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
func (o SpamfilterProfileSmtpOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.TagMsg }).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o SpamfilterProfileSmtpOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.TagType }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileSmtpPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileSmtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileSmtp)(nil)).Elem()
}

func (o SpamfilterProfileSmtpPtrOutput) ToSpamfilterProfileSmtpPtrOutput() SpamfilterProfileSmtpPtrOutput {
	return o
}

func (o SpamfilterProfileSmtpPtrOutput) ToSpamfilterProfileSmtpPtrOutputWithContext(ctx context.Context) SpamfilterProfileSmtpPtrOutput {
	return o
}

func (o SpamfilterProfileSmtpPtrOutput) Elem() SpamfilterProfileSmtpOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) SpamfilterProfileSmtp {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileSmtp
		return ret
	}).(SpamfilterProfileSmtpOutput)
}

// Action for spam email. Valid values: `pass`, `tag`, `discard`.
func (o SpamfilterProfileSmtpPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP email header IP checks for spamfsip, spamrbl and spambwl filters. Valid values: `disable`, `enable`.
func (o SpamfilterProfileSmtpPtrOutput) Hdrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Hdrip
	}).(pulumi.StringPtrOutput)
}

// Enable/disable local filter to override SMTP remote check result. Valid values: `disable`, `enable`.
func (o SpamfilterProfileSmtpPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileSmtpPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
func (o SpamfilterProfileSmtpPtrOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.TagMsg
	}).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o SpamfilterProfileSmtpPtrOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.TagType
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfileYahooMail struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
}

// SpamfilterProfileYahooMailInput is an input type that accepts SpamfilterProfileYahooMailArgs and SpamfilterProfileYahooMailOutput values.
// You can construct a concrete instance of `SpamfilterProfileYahooMailInput` via:
//
//	SpamfilterProfileYahooMailArgs{...}
type SpamfilterProfileYahooMailInput interface {
	pulumi.Input

	ToSpamfilterProfileYahooMailOutput() SpamfilterProfileYahooMailOutput
	ToSpamfilterProfileYahooMailOutputWithContext(context.Context) SpamfilterProfileYahooMailOutput
}

type SpamfilterProfileYahooMailArgs struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (SpamfilterProfileYahooMailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileYahooMail)(nil)).Elem()
}

func (i SpamfilterProfileYahooMailArgs) ToSpamfilterProfileYahooMailOutput() SpamfilterProfileYahooMailOutput {
	return i.ToSpamfilterProfileYahooMailOutputWithContext(context.Background())
}

func (i SpamfilterProfileYahooMailArgs) ToSpamfilterProfileYahooMailOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileYahooMailOutput)
}

func (i SpamfilterProfileYahooMailArgs) ToSpamfilterProfileYahooMailPtrOutput() SpamfilterProfileYahooMailPtrOutput {
	return i.ToSpamfilterProfileYahooMailPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileYahooMailArgs) ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileYahooMailOutput).ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx)
}

// SpamfilterProfileYahooMailPtrInput is an input type that accepts SpamfilterProfileYahooMailArgs, SpamfilterProfileYahooMailPtr and SpamfilterProfileYahooMailPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileYahooMailPtrInput` via:
//
//	        SpamfilterProfileYahooMailArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileYahooMailPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileYahooMailPtrOutput() SpamfilterProfileYahooMailPtrOutput
	ToSpamfilterProfileYahooMailPtrOutputWithContext(context.Context) SpamfilterProfileYahooMailPtrOutput
}

type spamfilterProfileYahooMailPtrType SpamfilterProfileYahooMailArgs

func SpamfilterProfileYahooMailPtr(v *SpamfilterProfileYahooMailArgs) SpamfilterProfileYahooMailPtrInput {
	return (*spamfilterProfileYahooMailPtrType)(v)
}

func (*spamfilterProfileYahooMailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileYahooMail)(nil)).Elem()
}

func (i *spamfilterProfileYahooMailPtrType) ToSpamfilterProfileYahooMailPtrOutput() SpamfilterProfileYahooMailPtrOutput {
	return i.ToSpamfilterProfileYahooMailPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileYahooMailPtrType) ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileYahooMailPtrOutput)
}

type SpamfilterProfileYahooMailOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileYahooMailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileYahooMail)(nil)).Elem()
}

func (o SpamfilterProfileYahooMailOutput) ToSpamfilterProfileYahooMailOutput() SpamfilterProfileYahooMailOutput {
	return o
}

func (o SpamfilterProfileYahooMailOutput) ToSpamfilterProfileYahooMailOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailOutput {
	return o
}

func (o SpamfilterProfileYahooMailOutput) ToSpamfilterProfileYahooMailPtrOutput() SpamfilterProfileYahooMailPtrOutput {
	return o.ToSpamfilterProfileYahooMailPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileYahooMailOutput) ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileYahooMail) *SpamfilterProfileYahooMail {
		return &v
	}).(SpamfilterProfileYahooMailPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileYahooMailOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileYahooMail) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileYahooMailPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileYahooMailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileYahooMail)(nil)).Elem()
}

func (o SpamfilterProfileYahooMailPtrOutput) ToSpamfilterProfileYahooMailPtrOutput() SpamfilterProfileYahooMailPtrOutput {
	return o
}

func (o SpamfilterProfileYahooMailPtrOutput) ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailPtrOutput {
	return o
}

func (o SpamfilterProfileYahooMailPtrOutput) Elem() SpamfilterProfileYahooMailOutput {
	return o.ApplyT(func(v *SpamfilterProfileYahooMail) SpamfilterProfileYahooMail {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileYahooMail
		return ret
	}).(SpamfilterProfileYahooMailOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SpamfilterProfileYahooMailPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileYahooMail) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

type SshfilterProfileFileFilter struct {
	// File filter entries. The structure of `entries` block is documented below.
	Entries []SshfilterProfileFileFilterEntry `pulumi:"entries"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
	ScanArchiveContents *string `pulumi:"scanArchiveContents"`
	// Enable/disable file filter. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// SshfilterProfileFileFilterInput is an input type that accepts SshfilterProfileFileFilterArgs and SshfilterProfileFileFilterOutput values.
// You can construct a concrete instance of `SshfilterProfileFileFilterInput` via:
//
//	SshfilterProfileFileFilterArgs{...}
type SshfilterProfileFileFilterInput interface {
	pulumi.Input

	ToSshfilterProfileFileFilterOutput() SshfilterProfileFileFilterOutput
	ToSshfilterProfileFileFilterOutputWithContext(context.Context) SshfilterProfileFileFilterOutput
}

type SshfilterProfileFileFilterArgs struct {
	// File filter entries. The structure of `entries` block is documented below.
	Entries SshfilterProfileFileFilterEntryArrayInput `pulumi:"entries"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
	ScanArchiveContents pulumi.StringPtrInput `pulumi:"scanArchiveContents"`
	// Enable/disable file filter. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SshfilterProfileFileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshfilterProfileFileFilter)(nil)).Elem()
}

func (i SshfilterProfileFileFilterArgs) ToSshfilterProfileFileFilterOutput() SshfilterProfileFileFilterOutput {
	return i.ToSshfilterProfileFileFilterOutputWithContext(context.Background())
}

func (i SshfilterProfileFileFilterArgs) ToSshfilterProfileFileFilterOutputWithContext(ctx context.Context) SshfilterProfileFileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileFileFilterOutput)
}

func (i SshfilterProfileFileFilterArgs) ToSshfilterProfileFileFilterPtrOutput() SshfilterProfileFileFilterPtrOutput {
	return i.ToSshfilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i SshfilterProfileFileFilterArgs) ToSshfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) SshfilterProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileFileFilterOutput).ToSshfilterProfileFileFilterPtrOutputWithContext(ctx)
}

// SshfilterProfileFileFilterPtrInput is an input type that accepts SshfilterProfileFileFilterArgs, SshfilterProfileFileFilterPtr and SshfilterProfileFileFilterPtrOutput values.
// You can construct a concrete instance of `SshfilterProfileFileFilterPtrInput` via:
//
//	        SshfilterProfileFileFilterArgs{...}
//
//	or:
//
//	        nil
type SshfilterProfileFileFilterPtrInput interface {
	pulumi.Input

	ToSshfilterProfileFileFilterPtrOutput() SshfilterProfileFileFilterPtrOutput
	ToSshfilterProfileFileFilterPtrOutputWithContext(context.Context) SshfilterProfileFileFilterPtrOutput
}

type sshfilterProfileFileFilterPtrType SshfilterProfileFileFilterArgs

func SshfilterProfileFileFilterPtr(v *SshfilterProfileFileFilterArgs) SshfilterProfileFileFilterPtrInput {
	return (*sshfilterProfileFileFilterPtrType)(v)
}

func (*sshfilterProfileFileFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SshfilterProfileFileFilter)(nil)).Elem()
}

func (i *sshfilterProfileFileFilterPtrType) ToSshfilterProfileFileFilterPtrOutput() SshfilterProfileFileFilterPtrOutput {
	return i.ToSshfilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i *sshfilterProfileFileFilterPtrType) ToSshfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) SshfilterProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileFileFilterPtrOutput)
}

type SshfilterProfileFileFilterOutput struct{ *pulumi.OutputState }

func (SshfilterProfileFileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshfilterProfileFileFilter)(nil)).Elem()
}

func (o SshfilterProfileFileFilterOutput) ToSshfilterProfileFileFilterOutput() SshfilterProfileFileFilterOutput {
	return o
}

func (o SshfilterProfileFileFilterOutput) ToSshfilterProfileFileFilterOutputWithContext(ctx context.Context) SshfilterProfileFileFilterOutput {
	return o
}

func (o SshfilterProfileFileFilterOutput) ToSshfilterProfileFileFilterPtrOutput() SshfilterProfileFileFilterPtrOutput {
	return o.ToSshfilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (o SshfilterProfileFileFilterOutput) ToSshfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) SshfilterProfileFileFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SshfilterProfileFileFilter) *SshfilterProfileFileFilter {
		return &v
	}).(SshfilterProfileFileFilterPtrOutput)
}

// File filter entries. The structure of `entries` block is documented below.
func (o SshfilterProfileFileFilterOutput) Entries() SshfilterProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilter) []SshfilterProfileFileFilterEntry { return v.Entries }).(SshfilterProfileFileFilterEntryArrayOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o SshfilterProfileFileFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
func (o SshfilterProfileFileFilterOutput) ScanArchiveContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilter) *string { return v.ScanArchiveContents }).(pulumi.StringPtrOutput)
}

// Enable/disable file filter. Valid values: `enable`, `disable`.
func (o SshfilterProfileFileFilterOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilter) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SshfilterProfileFileFilterPtrOutput struct{ *pulumi.OutputState }

func (SshfilterProfileFileFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshfilterProfileFileFilter)(nil)).Elem()
}

func (o SshfilterProfileFileFilterPtrOutput) ToSshfilterProfileFileFilterPtrOutput() SshfilterProfileFileFilterPtrOutput {
	return o
}

func (o SshfilterProfileFileFilterPtrOutput) ToSshfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) SshfilterProfileFileFilterPtrOutput {
	return o
}

func (o SshfilterProfileFileFilterPtrOutput) Elem() SshfilterProfileFileFilterOutput {
	return o.ApplyT(func(v *SshfilterProfileFileFilter) SshfilterProfileFileFilter {
		if v != nil {
			return *v
		}
		var ret SshfilterProfileFileFilter
		return ret
	}).(SshfilterProfileFileFilterOutput)
}

// File filter entries. The structure of `entries` block is documented below.
func (o SshfilterProfileFileFilterPtrOutput) Entries() SshfilterProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v *SshfilterProfileFileFilter) []SshfilterProfileFileFilterEntry {
		if v == nil {
			return nil
		}
		return v.Entries
	}).(SshfilterProfileFileFilterEntryArrayOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o SshfilterProfileFileFilterPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshfilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
func (o SshfilterProfileFileFilterPtrOutput) ScanArchiveContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshfilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.ScanArchiveContents
	}).(pulumi.StringPtrOutput)
}

// Enable/disable file filter. Valid values: `enable`, `disable`.
func (o SshfilterProfileFileFilterPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshfilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SshfilterProfileFileFilterEntry struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action *string `pulumi:"action"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
	Direction *string `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes []SshfilterProfileFileFilterEntryFileType `pulumi:"fileTypes"`
	// Add a file filter.
	Filter *string `pulumi:"filter"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected *string `pulumi:"passwordProtected"`
}

// SshfilterProfileFileFilterEntryInput is an input type that accepts SshfilterProfileFileFilterEntryArgs and SshfilterProfileFileFilterEntryOutput values.
// You can construct a concrete instance of `SshfilterProfileFileFilterEntryInput` via:
//
//	SshfilterProfileFileFilterEntryArgs{...}
type SshfilterProfileFileFilterEntryInput interface {
	pulumi.Input

	ToSshfilterProfileFileFilterEntryOutput() SshfilterProfileFileFilterEntryOutput
	ToSshfilterProfileFileFilterEntryOutputWithContext(context.Context) SshfilterProfileFileFilterEntryOutput
}

type SshfilterProfileFileFilterEntryArgs struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes SshfilterProfileFileFilterEntryFileTypeArrayInput `pulumi:"fileTypes"`
	// Add a file filter.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected pulumi.StringPtrInput `pulumi:"passwordProtected"`
}

func (SshfilterProfileFileFilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshfilterProfileFileFilterEntry)(nil)).Elem()
}

func (i SshfilterProfileFileFilterEntryArgs) ToSshfilterProfileFileFilterEntryOutput() SshfilterProfileFileFilterEntryOutput {
	return i.ToSshfilterProfileFileFilterEntryOutputWithContext(context.Background())
}

func (i SshfilterProfileFileFilterEntryArgs) ToSshfilterProfileFileFilterEntryOutputWithContext(ctx context.Context) SshfilterProfileFileFilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileFileFilterEntryOutput)
}

// SshfilterProfileFileFilterEntryArrayInput is an input type that accepts SshfilterProfileFileFilterEntryArray and SshfilterProfileFileFilterEntryArrayOutput values.
// You can construct a concrete instance of `SshfilterProfileFileFilterEntryArrayInput` via:
//
//	SshfilterProfileFileFilterEntryArray{ SshfilterProfileFileFilterEntryArgs{...} }
type SshfilterProfileFileFilterEntryArrayInput interface {
	pulumi.Input

	ToSshfilterProfileFileFilterEntryArrayOutput() SshfilterProfileFileFilterEntryArrayOutput
	ToSshfilterProfileFileFilterEntryArrayOutputWithContext(context.Context) SshfilterProfileFileFilterEntryArrayOutput
}

type SshfilterProfileFileFilterEntryArray []SshfilterProfileFileFilterEntryInput

func (SshfilterProfileFileFilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshfilterProfileFileFilterEntry)(nil)).Elem()
}

func (i SshfilterProfileFileFilterEntryArray) ToSshfilterProfileFileFilterEntryArrayOutput() SshfilterProfileFileFilterEntryArrayOutput {
	return i.ToSshfilterProfileFileFilterEntryArrayOutputWithContext(context.Background())
}

func (i SshfilterProfileFileFilterEntryArray) ToSshfilterProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) SshfilterProfileFileFilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileFileFilterEntryArrayOutput)
}

type SshfilterProfileFileFilterEntryOutput struct{ *pulumi.OutputState }

func (SshfilterProfileFileFilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshfilterProfileFileFilterEntry)(nil)).Elem()
}

func (o SshfilterProfileFileFilterEntryOutput) ToSshfilterProfileFileFilterEntryOutput() SshfilterProfileFileFilterEntryOutput {
	return o
}

func (o SshfilterProfileFileFilterEntryOutput) ToSshfilterProfileFileFilterEntryOutputWithContext(ctx context.Context) SshfilterProfileFileFilterEntryOutput {
	return o
}

// Action taken for matched file. Valid values: `log`, `block`.
func (o SshfilterProfileFileFilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Comment.
func (o SshfilterProfileFileFilterEntryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilterEntry) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
func (o SshfilterProfileFileFilterEntryOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilterEntry) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Select file type. The structure of `fileType` block is documented below.
func (o SshfilterProfileFileFilterEntryOutput) FileTypes() SshfilterProfileFileFilterEntryFileTypeArrayOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilterEntry) []SshfilterProfileFileFilterEntryFileType { return v.FileTypes }).(SshfilterProfileFileFilterEntryFileTypeArrayOutput)
}

// Add a file filter.
func (o SshfilterProfileFileFilterEntryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilterEntry) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Match password-protected files. Valid values: `yes`, `any`.
func (o SshfilterProfileFileFilterEntryOutput) PasswordProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilterEntry) *string { return v.PasswordProtected }).(pulumi.StringPtrOutput)
}

type SshfilterProfileFileFilterEntryArrayOutput struct{ *pulumi.OutputState }

func (SshfilterProfileFileFilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshfilterProfileFileFilterEntry)(nil)).Elem()
}

func (o SshfilterProfileFileFilterEntryArrayOutput) ToSshfilterProfileFileFilterEntryArrayOutput() SshfilterProfileFileFilterEntryArrayOutput {
	return o
}

func (o SshfilterProfileFileFilterEntryArrayOutput) ToSshfilterProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) SshfilterProfileFileFilterEntryArrayOutput {
	return o
}

func (o SshfilterProfileFileFilterEntryArrayOutput) Index(i pulumi.IntInput) SshfilterProfileFileFilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshfilterProfileFileFilterEntry {
		return vs[0].([]SshfilterProfileFileFilterEntry)[vs[1].(int)]
	}).(SshfilterProfileFileFilterEntryOutput)
}

type SshfilterProfileFileFilterEntryFileType struct {
	// File type name.
	Name *string `pulumi:"name"`
}

// SshfilterProfileFileFilterEntryFileTypeInput is an input type that accepts SshfilterProfileFileFilterEntryFileTypeArgs and SshfilterProfileFileFilterEntryFileTypeOutput values.
// You can construct a concrete instance of `SshfilterProfileFileFilterEntryFileTypeInput` via:
//
//	SshfilterProfileFileFilterEntryFileTypeArgs{...}
type SshfilterProfileFileFilterEntryFileTypeInput interface {
	pulumi.Input

	ToSshfilterProfileFileFilterEntryFileTypeOutput() SshfilterProfileFileFilterEntryFileTypeOutput
	ToSshfilterProfileFileFilterEntryFileTypeOutputWithContext(context.Context) SshfilterProfileFileFilterEntryFileTypeOutput
}

type SshfilterProfileFileFilterEntryFileTypeArgs struct {
	// File type name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SshfilterProfileFileFilterEntryFileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i SshfilterProfileFileFilterEntryFileTypeArgs) ToSshfilterProfileFileFilterEntryFileTypeOutput() SshfilterProfileFileFilterEntryFileTypeOutput {
	return i.ToSshfilterProfileFileFilterEntryFileTypeOutputWithContext(context.Background())
}

func (i SshfilterProfileFileFilterEntryFileTypeArgs) ToSshfilterProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) SshfilterProfileFileFilterEntryFileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileFileFilterEntryFileTypeOutput)
}

// SshfilterProfileFileFilterEntryFileTypeArrayInput is an input type that accepts SshfilterProfileFileFilterEntryFileTypeArray and SshfilterProfileFileFilterEntryFileTypeArrayOutput values.
// You can construct a concrete instance of `SshfilterProfileFileFilterEntryFileTypeArrayInput` via:
//
//	SshfilterProfileFileFilterEntryFileTypeArray{ SshfilterProfileFileFilterEntryFileTypeArgs{...} }
type SshfilterProfileFileFilterEntryFileTypeArrayInput interface {
	pulumi.Input

	ToSshfilterProfileFileFilterEntryFileTypeArrayOutput() SshfilterProfileFileFilterEntryFileTypeArrayOutput
	ToSshfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Context) SshfilterProfileFileFilterEntryFileTypeArrayOutput
}

type SshfilterProfileFileFilterEntryFileTypeArray []SshfilterProfileFileFilterEntryFileTypeInput

func (SshfilterProfileFileFilterEntryFileTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i SshfilterProfileFileFilterEntryFileTypeArray) ToSshfilterProfileFileFilterEntryFileTypeArrayOutput() SshfilterProfileFileFilterEntryFileTypeArrayOutput {
	return i.ToSshfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Background())
}

func (i SshfilterProfileFileFilterEntryFileTypeArray) ToSshfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) SshfilterProfileFileFilterEntryFileTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileFileFilterEntryFileTypeArrayOutput)
}

type SshfilterProfileFileFilterEntryFileTypeOutput struct{ *pulumi.OutputState }

func (SshfilterProfileFileFilterEntryFileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o SshfilterProfileFileFilterEntryFileTypeOutput) ToSshfilterProfileFileFilterEntryFileTypeOutput() SshfilterProfileFileFilterEntryFileTypeOutput {
	return o
}

func (o SshfilterProfileFileFilterEntryFileTypeOutput) ToSshfilterProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) SshfilterProfileFileFilterEntryFileTypeOutput {
	return o
}

// File type name.
func (o SshfilterProfileFileFilterEntryFileTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileFileFilterEntryFileType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SshfilterProfileFileFilterEntryFileTypeArrayOutput struct{ *pulumi.OutputState }

func (SshfilterProfileFileFilterEntryFileTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o SshfilterProfileFileFilterEntryFileTypeArrayOutput) ToSshfilterProfileFileFilterEntryFileTypeArrayOutput() SshfilterProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o SshfilterProfileFileFilterEntryFileTypeArrayOutput) ToSshfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) SshfilterProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o SshfilterProfileFileFilterEntryFileTypeArrayOutput) Index(i pulumi.IntInput) SshfilterProfileFileFilterEntryFileTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshfilterProfileFileFilterEntryFileType {
		return vs[0].([]SshfilterProfileFileFilterEntryFileType)[vs[1].(int)]
	}).(SshfilterProfileFileFilterEntryFileTypeOutput)
}

type SshfilterProfileShellCommand struct {
	// Action to take for URL filter matches. Valid values: `block`, `allow`.
	Action *string `pulumi:"action"`
	// Enable/disable alert. Valid values: `enable`, `disable`.
	Alert *string `pulumi:"alert"`
	// Id.
	Id *int `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// SSH shell command pattern.
	Pattern *string `pulumi:"pattern"`
	// Log severity. Valid values: `low`, `medium`, `high`, `critical`.
	Severity *string `pulumi:"severity"`
	// Matching type. Valid values: `simple`, `regex`.
	Type *string `pulumi:"type"`
}

// SshfilterProfileShellCommandInput is an input type that accepts SshfilterProfileShellCommandArgs and SshfilterProfileShellCommandOutput values.
// You can construct a concrete instance of `SshfilterProfileShellCommandInput` via:
//
//	SshfilterProfileShellCommandArgs{...}
type SshfilterProfileShellCommandInput interface {
	pulumi.Input

	ToSshfilterProfileShellCommandOutput() SshfilterProfileShellCommandOutput
	ToSshfilterProfileShellCommandOutputWithContext(context.Context) SshfilterProfileShellCommandOutput
}

type SshfilterProfileShellCommandArgs struct {
	// Action to take for URL filter matches. Valid values: `block`, `allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable alert. Valid values: `enable`, `disable`.
	Alert pulumi.StringPtrInput `pulumi:"alert"`
	// Id.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// SSH shell command pattern.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Log severity. Valid values: `low`, `medium`, `high`, `critical`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Matching type. Valid values: `simple`, `regex`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SshfilterProfileShellCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshfilterProfileShellCommand)(nil)).Elem()
}

func (i SshfilterProfileShellCommandArgs) ToSshfilterProfileShellCommandOutput() SshfilterProfileShellCommandOutput {
	return i.ToSshfilterProfileShellCommandOutputWithContext(context.Background())
}

func (i SshfilterProfileShellCommandArgs) ToSshfilterProfileShellCommandOutputWithContext(ctx context.Context) SshfilterProfileShellCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileShellCommandOutput)
}

// SshfilterProfileShellCommandArrayInput is an input type that accepts SshfilterProfileShellCommandArray and SshfilterProfileShellCommandArrayOutput values.
// You can construct a concrete instance of `SshfilterProfileShellCommandArrayInput` via:
//
//	SshfilterProfileShellCommandArray{ SshfilterProfileShellCommandArgs{...} }
type SshfilterProfileShellCommandArrayInput interface {
	pulumi.Input

	ToSshfilterProfileShellCommandArrayOutput() SshfilterProfileShellCommandArrayOutput
	ToSshfilterProfileShellCommandArrayOutputWithContext(context.Context) SshfilterProfileShellCommandArrayOutput
}

type SshfilterProfileShellCommandArray []SshfilterProfileShellCommandInput

func (SshfilterProfileShellCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshfilterProfileShellCommand)(nil)).Elem()
}

func (i SshfilterProfileShellCommandArray) ToSshfilterProfileShellCommandArrayOutput() SshfilterProfileShellCommandArrayOutput {
	return i.ToSshfilterProfileShellCommandArrayOutputWithContext(context.Background())
}

func (i SshfilterProfileShellCommandArray) ToSshfilterProfileShellCommandArrayOutputWithContext(ctx context.Context) SshfilterProfileShellCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileShellCommandArrayOutput)
}

type SshfilterProfileShellCommandOutput struct{ *pulumi.OutputState }

func (SshfilterProfileShellCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshfilterProfileShellCommand)(nil)).Elem()
}

func (o SshfilterProfileShellCommandOutput) ToSshfilterProfileShellCommandOutput() SshfilterProfileShellCommandOutput {
	return o
}

func (o SshfilterProfileShellCommandOutput) ToSshfilterProfileShellCommandOutputWithContext(ctx context.Context) SshfilterProfileShellCommandOutput {
	return o
}

// Action to take for URL filter matches. Valid values: `block`, `allow`.
func (o SshfilterProfileShellCommandOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileShellCommand) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable alert. Valid values: `enable`, `disable`.
func (o SshfilterProfileShellCommandOutput) Alert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileShellCommand) *string { return v.Alert }).(pulumi.StringPtrOutput)
}

// Id.
func (o SshfilterProfileShellCommandOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SshfilterProfileShellCommand) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o SshfilterProfileShellCommandOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileShellCommand) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// SSH shell command pattern.
func (o SshfilterProfileShellCommandOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileShellCommand) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Log severity. Valid values: `low`, `medium`, `high`, `critical`.
func (o SshfilterProfileShellCommandOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileShellCommand) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Matching type. Valid values: `simple`, `regex`.
func (o SshfilterProfileShellCommandOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshfilterProfileShellCommand) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SshfilterProfileShellCommandArrayOutput struct{ *pulumi.OutputState }

func (SshfilterProfileShellCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshfilterProfileShellCommand)(nil)).Elem()
}

func (o SshfilterProfileShellCommandArrayOutput) ToSshfilterProfileShellCommandArrayOutput() SshfilterProfileShellCommandArrayOutput {
	return o
}

func (o SshfilterProfileShellCommandArrayOutput) ToSshfilterProfileShellCommandArrayOutputWithContext(ctx context.Context) SshfilterProfileShellCommandArrayOutput {
	return o
}

func (o SshfilterProfileShellCommandArrayOutput) Index(i pulumi.IntInput) SshfilterProfileShellCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshfilterProfileShellCommand {
		return vs[0].([]SshfilterProfileShellCommand)[vs[1].(int)]
	}).(SshfilterProfileShellCommandOutput)
}

type SwitchcontrollerDynamicportpolicyPolicy struct {
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where this policy is applied. Helps to clear and reassign VLAN from lldp-profile. Valid values: `disable`, `enable`.
	BouncePortLink *string `pulumi:"bouncePortLink"`
	// Category of Dynamic port policy. Valid values: `device`, `interface-tag`.
	Category *string `pulumi:"category"`
	// Description for the policy.
	Description *string `pulumi:"description"`
	// Policy matching family.
	Family *string `pulumi:"family"`
	// Policy matching host.
	Host *string `pulumi:"host"`
	// Match policy based on hardware vendor.
	HwVendor *string `pulumi:"hwVendor"`
	// Policy matching the FortiSwitch interface object tags. The structure of `interfaceTags` block is documented below.
	InterfaceTags []SwitchcontrollerDynamicportpolicyPolicyInterfaceTag `pulumi:"interfaceTags"`
	// LLDP profile to be applied when using this policy.
	LldpProfile *string `pulumi:"lldpProfile"`
	// Policy matching MAC address.
	Mac *string `pulumi:"mac"`
	// 802.1x security policy to be applied when using this policy.
	N8021x *string `pulumi:"n8021x"`
	// Policy name.
	Name *string `pulumi:"name"`
	// QoS policy to be applied when using this policy.
	QosPolicy *string `pulumi:"qosPolicy"`
	// Enable/disable policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Policy matching type.
	Type *string `pulumi:"type"`
	// VLAN policy to be applied when using this policy.
	VlanPolicy *string `pulumi:"vlanPolicy"`
}

// SwitchcontrollerDynamicportpolicyPolicyInput is an input type that accepts SwitchcontrollerDynamicportpolicyPolicyArgs and SwitchcontrollerDynamicportpolicyPolicyOutput values.
// You can construct a concrete instance of `SwitchcontrollerDynamicportpolicyPolicyInput` via:
//
//	SwitchcontrollerDynamicportpolicyPolicyArgs{...}
type SwitchcontrollerDynamicportpolicyPolicyInput interface {
	pulumi.Input

	ToSwitchcontrollerDynamicportpolicyPolicyOutput() SwitchcontrollerDynamicportpolicyPolicyOutput
	ToSwitchcontrollerDynamicportpolicyPolicyOutputWithContext(context.Context) SwitchcontrollerDynamicportpolicyPolicyOutput
}

type SwitchcontrollerDynamicportpolicyPolicyArgs struct {
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where this policy is applied. Helps to clear and reassign VLAN from lldp-profile. Valid values: `disable`, `enable`.
	BouncePortLink pulumi.StringPtrInput `pulumi:"bouncePortLink"`
	// Category of Dynamic port policy. Valid values: `device`, `interface-tag`.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Description for the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Policy matching family.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Policy matching host.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Match policy based on hardware vendor.
	HwVendor pulumi.StringPtrInput `pulumi:"hwVendor"`
	// Policy matching the FortiSwitch interface object tags. The structure of `interfaceTags` block is documented below.
	InterfaceTags SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayInput `pulumi:"interfaceTags"`
	// LLDP profile to be applied when using this policy.
	LldpProfile pulumi.StringPtrInput `pulumi:"lldpProfile"`
	// Policy matching MAC address.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// 802.1x security policy to be applied when using this policy.
	N8021x pulumi.StringPtrInput `pulumi:"n8021x"`
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// QoS policy to be applied when using this policy.
	QosPolicy pulumi.StringPtrInput `pulumi:"qosPolicy"`
	// Enable/disable policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Policy matching type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// VLAN policy to be applied when using this policy.
	VlanPolicy pulumi.StringPtrInput `pulumi:"vlanPolicy"`
}

func (SwitchcontrollerDynamicportpolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerDynamicportpolicyPolicy)(nil)).Elem()
}

func (i SwitchcontrollerDynamicportpolicyPolicyArgs) ToSwitchcontrollerDynamicportpolicyPolicyOutput() SwitchcontrollerDynamicportpolicyPolicyOutput {
	return i.ToSwitchcontrollerDynamicportpolicyPolicyOutputWithContext(context.Background())
}

func (i SwitchcontrollerDynamicportpolicyPolicyArgs) ToSwitchcontrollerDynamicportpolicyPolicyOutputWithContext(ctx context.Context) SwitchcontrollerDynamicportpolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerDynamicportpolicyPolicyOutput)
}

// SwitchcontrollerDynamicportpolicyPolicyArrayInput is an input type that accepts SwitchcontrollerDynamicportpolicyPolicyArray and SwitchcontrollerDynamicportpolicyPolicyArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerDynamicportpolicyPolicyArrayInput` via:
//
//	SwitchcontrollerDynamicportpolicyPolicyArray{ SwitchcontrollerDynamicportpolicyPolicyArgs{...} }
type SwitchcontrollerDynamicportpolicyPolicyArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerDynamicportpolicyPolicyArrayOutput() SwitchcontrollerDynamicportpolicyPolicyArrayOutput
	ToSwitchcontrollerDynamicportpolicyPolicyArrayOutputWithContext(context.Context) SwitchcontrollerDynamicportpolicyPolicyArrayOutput
}

type SwitchcontrollerDynamicportpolicyPolicyArray []SwitchcontrollerDynamicportpolicyPolicyInput

func (SwitchcontrollerDynamicportpolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerDynamicportpolicyPolicy)(nil)).Elem()
}

func (i SwitchcontrollerDynamicportpolicyPolicyArray) ToSwitchcontrollerDynamicportpolicyPolicyArrayOutput() SwitchcontrollerDynamicportpolicyPolicyArrayOutput {
	return i.ToSwitchcontrollerDynamicportpolicyPolicyArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerDynamicportpolicyPolicyArray) ToSwitchcontrollerDynamicportpolicyPolicyArrayOutputWithContext(ctx context.Context) SwitchcontrollerDynamicportpolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerDynamicportpolicyPolicyArrayOutput)
}

type SwitchcontrollerDynamicportpolicyPolicyOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerDynamicportpolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerDynamicportpolicyPolicy)(nil)).Elem()
}

func (o SwitchcontrollerDynamicportpolicyPolicyOutput) ToSwitchcontrollerDynamicportpolicyPolicyOutput() SwitchcontrollerDynamicportpolicyPolicyOutput {
	return o
}

func (o SwitchcontrollerDynamicportpolicyPolicyOutput) ToSwitchcontrollerDynamicportpolicyPolicyOutputWithContext(ctx context.Context) SwitchcontrollerDynamicportpolicyPolicyOutput {
	return o
}

// Enable/disable bouncing (administratively bring the link down, up) of a switch port where this policy is applied. Helps to clear and reassign VLAN from lldp-profile. Valid values: `disable`, `enable`.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) BouncePortLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.BouncePortLink }).(pulumi.StringPtrOutput)
}

// Category of Dynamic port policy. Valid values: `device`, `interface-tag`.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Description for the policy.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Policy matching family.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Policy matching host.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Match policy based on hardware vendor.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) HwVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.HwVendor }).(pulumi.StringPtrOutput)
}

// Policy matching the FortiSwitch interface object tags. The structure of `interfaceTags` block is documented below.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) InterfaceTags() SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) []SwitchcontrollerDynamicportpolicyPolicyInterfaceTag {
		return v.InterfaceTags
	}).(SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput)
}

// LLDP profile to be applied when using this policy.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) LldpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.LldpProfile }).(pulumi.StringPtrOutput)
}

// Policy matching MAC address.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// 802.1x security policy to be applied when using this policy.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) N8021x() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.N8021x }).(pulumi.StringPtrOutput)
}

// Policy name.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// QoS policy to be applied when using this policy.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) QosPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.QosPolicy }).(pulumi.StringPtrOutput)
}

// Enable/disable policy. Valid values: `enable`, `disable`.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Policy matching type.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// VLAN policy to be applied when using this policy.
func (o SwitchcontrollerDynamicportpolicyPolicyOutput) VlanPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicy) *string { return v.VlanPolicy }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerDynamicportpolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerDynamicportpolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerDynamicportpolicyPolicy)(nil)).Elem()
}

func (o SwitchcontrollerDynamicportpolicyPolicyArrayOutput) ToSwitchcontrollerDynamicportpolicyPolicyArrayOutput() SwitchcontrollerDynamicportpolicyPolicyArrayOutput {
	return o
}

func (o SwitchcontrollerDynamicportpolicyPolicyArrayOutput) ToSwitchcontrollerDynamicportpolicyPolicyArrayOutputWithContext(ctx context.Context) SwitchcontrollerDynamicportpolicyPolicyArrayOutput {
	return o
}

func (o SwitchcontrollerDynamicportpolicyPolicyArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerDynamicportpolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerDynamicportpolicyPolicy {
		return vs[0].([]SwitchcontrollerDynamicportpolicyPolicy)[vs[1].(int)]
	}).(SwitchcontrollerDynamicportpolicyPolicyOutput)
}

type SwitchcontrollerDynamicportpolicyPolicyInterfaceTag struct {
	// FortiSwitch port tag name.
	TagName *string `pulumi:"tagName"`
}

// SwitchcontrollerDynamicportpolicyPolicyInterfaceTagInput is an input type that accepts SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArgs and SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput values.
// You can construct a concrete instance of `SwitchcontrollerDynamicportpolicyPolicyInterfaceTagInput` via:
//
//	SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArgs{...}
type SwitchcontrollerDynamicportpolicyPolicyInterfaceTagInput interface {
	pulumi.Input

	ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput() SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput
	ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutputWithContext(context.Context) SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput
}

type SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArgs struct {
	// FortiSwitch port tag name.
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerDynamicportpolicyPolicyInterfaceTag)(nil)).Elem()
}

func (i SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArgs) ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput() SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput {
	return i.ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutputWithContext(context.Background())
}

func (i SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArgs) ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutputWithContext(ctx context.Context) SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput)
}

// SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayInput is an input type that accepts SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArray and SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayInput` via:
//
//	SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArray{ SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArgs{...} }
type SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput() SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput
	ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutputWithContext(context.Context) SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput
}

type SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArray []SwitchcontrollerDynamicportpolicyPolicyInterfaceTagInput

func (SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerDynamicportpolicyPolicyInterfaceTag)(nil)).Elem()
}

func (i SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArray) ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput() SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput {
	return i.ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArray) ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutputWithContext(ctx context.Context) SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput)
}

type SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerDynamicportpolicyPolicyInterfaceTag)(nil)).Elem()
}

func (o SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput) ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput() SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput {
	return o
}

func (o SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput) ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutputWithContext(ctx context.Context) SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput {
	return o
}

// FortiSwitch port tag name.
func (o SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerDynamicportpolicyPolicyInterfaceTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerDynamicportpolicyPolicyInterfaceTag)(nil)).Elem()
}

func (o SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput) ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput() SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput {
	return o
}

func (o SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput) ToSwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutputWithContext(ctx context.Context) SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput {
	return o
}

func (o SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerDynamicportpolicyPolicyInterfaceTag {
		return vs[0].([]SwitchcontrollerDynamicportpolicyPolicyInterfaceTag)[vs[1].(int)]
	}).(SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput)
}

type SwitchcontrollerFlowtrackingAggregate struct {
	// Aggregate id.
	Id *int `pulumi:"id"`
	// IP address to group all matching traffic sessions to a flow.
	Ip *string `pulumi:"ip"`
}

// SwitchcontrollerFlowtrackingAggregateInput is an input type that accepts SwitchcontrollerFlowtrackingAggregateArgs and SwitchcontrollerFlowtrackingAggregateOutput values.
// You can construct a concrete instance of `SwitchcontrollerFlowtrackingAggregateInput` via:
//
//	SwitchcontrollerFlowtrackingAggregateArgs{...}
type SwitchcontrollerFlowtrackingAggregateInput interface {
	pulumi.Input

	ToSwitchcontrollerFlowtrackingAggregateOutput() SwitchcontrollerFlowtrackingAggregateOutput
	ToSwitchcontrollerFlowtrackingAggregateOutputWithContext(context.Context) SwitchcontrollerFlowtrackingAggregateOutput
}

type SwitchcontrollerFlowtrackingAggregateArgs struct {
	// Aggregate id.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IP address to group all matching traffic sessions to a flow.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SwitchcontrollerFlowtrackingAggregateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerFlowtrackingAggregate)(nil)).Elem()
}

func (i SwitchcontrollerFlowtrackingAggregateArgs) ToSwitchcontrollerFlowtrackingAggregateOutput() SwitchcontrollerFlowtrackingAggregateOutput {
	return i.ToSwitchcontrollerFlowtrackingAggregateOutputWithContext(context.Background())
}

func (i SwitchcontrollerFlowtrackingAggregateArgs) ToSwitchcontrollerFlowtrackingAggregateOutputWithContext(ctx context.Context) SwitchcontrollerFlowtrackingAggregateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerFlowtrackingAggregateOutput)
}

// SwitchcontrollerFlowtrackingAggregateArrayInput is an input type that accepts SwitchcontrollerFlowtrackingAggregateArray and SwitchcontrollerFlowtrackingAggregateArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerFlowtrackingAggregateArrayInput` via:
//
//	SwitchcontrollerFlowtrackingAggregateArray{ SwitchcontrollerFlowtrackingAggregateArgs{...} }
type SwitchcontrollerFlowtrackingAggregateArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerFlowtrackingAggregateArrayOutput() SwitchcontrollerFlowtrackingAggregateArrayOutput
	ToSwitchcontrollerFlowtrackingAggregateArrayOutputWithContext(context.Context) SwitchcontrollerFlowtrackingAggregateArrayOutput
}

type SwitchcontrollerFlowtrackingAggregateArray []SwitchcontrollerFlowtrackingAggregateInput

func (SwitchcontrollerFlowtrackingAggregateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerFlowtrackingAggregate)(nil)).Elem()
}

func (i SwitchcontrollerFlowtrackingAggregateArray) ToSwitchcontrollerFlowtrackingAggregateArrayOutput() SwitchcontrollerFlowtrackingAggregateArrayOutput {
	return i.ToSwitchcontrollerFlowtrackingAggregateArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerFlowtrackingAggregateArray) ToSwitchcontrollerFlowtrackingAggregateArrayOutputWithContext(ctx context.Context) SwitchcontrollerFlowtrackingAggregateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerFlowtrackingAggregateArrayOutput)
}

type SwitchcontrollerFlowtrackingAggregateOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerFlowtrackingAggregateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerFlowtrackingAggregate)(nil)).Elem()
}

func (o SwitchcontrollerFlowtrackingAggregateOutput) ToSwitchcontrollerFlowtrackingAggregateOutput() SwitchcontrollerFlowtrackingAggregateOutput {
	return o
}

func (o SwitchcontrollerFlowtrackingAggregateOutput) ToSwitchcontrollerFlowtrackingAggregateOutputWithContext(ctx context.Context) SwitchcontrollerFlowtrackingAggregateOutput {
	return o
}

// Aggregate id.
func (o SwitchcontrollerFlowtrackingAggregateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFlowtrackingAggregate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IP address to group all matching traffic sessions to a flow.
func (o SwitchcontrollerFlowtrackingAggregateOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFlowtrackingAggregate) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerFlowtrackingAggregateArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerFlowtrackingAggregateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerFlowtrackingAggregate)(nil)).Elem()
}

func (o SwitchcontrollerFlowtrackingAggregateArrayOutput) ToSwitchcontrollerFlowtrackingAggregateArrayOutput() SwitchcontrollerFlowtrackingAggregateArrayOutput {
	return o
}

func (o SwitchcontrollerFlowtrackingAggregateArrayOutput) ToSwitchcontrollerFlowtrackingAggregateArrayOutputWithContext(ctx context.Context) SwitchcontrollerFlowtrackingAggregateArrayOutput {
	return o
}

func (o SwitchcontrollerFlowtrackingAggregateArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerFlowtrackingAggregateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerFlowtrackingAggregate {
		return vs[0].([]SwitchcontrollerFlowtrackingAggregate)[vs[1].(int)]
	}).(SwitchcontrollerFlowtrackingAggregateOutput)
}

type SwitchcontrollerFlowtrackingCollector struct {
	// Collector IP address.
	Ip *string `pulumi:"ip"`
	// Collector name.
	Name *string `pulumi:"name"`
	// Collector port number(0-65535, default:0, netflow:2055, ipfix:4739).
	Port *int `pulumi:"port"`
	// Collector L4 transport protocol for exporting packets. Valid values: `udp`, `tcp`, `sctp`.
	Transport *string `pulumi:"transport"`
}

// SwitchcontrollerFlowtrackingCollectorInput is an input type that accepts SwitchcontrollerFlowtrackingCollectorArgs and SwitchcontrollerFlowtrackingCollectorOutput values.
// You can construct a concrete instance of `SwitchcontrollerFlowtrackingCollectorInput` via:
//
//	SwitchcontrollerFlowtrackingCollectorArgs{...}
type SwitchcontrollerFlowtrackingCollectorInput interface {
	pulumi.Input

	ToSwitchcontrollerFlowtrackingCollectorOutput() SwitchcontrollerFlowtrackingCollectorOutput
	ToSwitchcontrollerFlowtrackingCollectorOutputWithContext(context.Context) SwitchcontrollerFlowtrackingCollectorOutput
}

type SwitchcontrollerFlowtrackingCollectorArgs struct {
	// Collector IP address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Collector name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Collector port number(0-65535, default:0, netflow:2055, ipfix:4739).
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Collector L4 transport protocol for exporting packets. Valid values: `udp`, `tcp`, `sctp`.
	Transport pulumi.StringPtrInput `pulumi:"transport"`
}

func (SwitchcontrollerFlowtrackingCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerFlowtrackingCollector)(nil)).Elem()
}

func (i SwitchcontrollerFlowtrackingCollectorArgs) ToSwitchcontrollerFlowtrackingCollectorOutput() SwitchcontrollerFlowtrackingCollectorOutput {
	return i.ToSwitchcontrollerFlowtrackingCollectorOutputWithContext(context.Background())
}

func (i SwitchcontrollerFlowtrackingCollectorArgs) ToSwitchcontrollerFlowtrackingCollectorOutputWithContext(ctx context.Context) SwitchcontrollerFlowtrackingCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerFlowtrackingCollectorOutput)
}

// SwitchcontrollerFlowtrackingCollectorArrayInput is an input type that accepts SwitchcontrollerFlowtrackingCollectorArray and SwitchcontrollerFlowtrackingCollectorArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerFlowtrackingCollectorArrayInput` via:
//
//	SwitchcontrollerFlowtrackingCollectorArray{ SwitchcontrollerFlowtrackingCollectorArgs{...} }
type SwitchcontrollerFlowtrackingCollectorArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerFlowtrackingCollectorArrayOutput() SwitchcontrollerFlowtrackingCollectorArrayOutput
	ToSwitchcontrollerFlowtrackingCollectorArrayOutputWithContext(context.Context) SwitchcontrollerFlowtrackingCollectorArrayOutput
}

type SwitchcontrollerFlowtrackingCollectorArray []SwitchcontrollerFlowtrackingCollectorInput

func (SwitchcontrollerFlowtrackingCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerFlowtrackingCollector)(nil)).Elem()
}

func (i SwitchcontrollerFlowtrackingCollectorArray) ToSwitchcontrollerFlowtrackingCollectorArrayOutput() SwitchcontrollerFlowtrackingCollectorArrayOutput {
	return i.ToSwitchcontrollerFlowtrackingCollectorArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerFlowtrackingCollectorArray) ToSwitchcontrollerFlowtrackingCollectorArrayOutputWithContext(ctx context.Context) SwitchcontrollerFlowtrackingCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerFlowtrackingCollectorArrayOutput)
}

type SwitchcontrollerFlowtrackingCollectorOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerFlowtrackingCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerFlowtrackingCollector)(nil)).Elem()
}

func (o SwitchcontrollerFlowtrackingCollectorOutput) ToSwitchcontrollerFlowtrackingCollectorOutput() SwitchcontrollerFlowtrackingCollectorOutput {
	return o
}

func (o SwitchcontrollerFlowtrackingCollectorOutput) ToSwitchcontrollerFlowtrackingCollectorOutputWithContext(ctx context.Context) SwitchcontrollerFlowtrackingCollectorOutput {
	return o
}

// Collector IP address.
func (o SwitchcontrollerFlowtrackingCollectorOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFlowtrackingCollector) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Collector name.
func (o SwitchcontrollerFlowtrackingCollectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFlowtrackingCollector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Collector port number(0-65535, default:0, netflow:2055, ipfix:4739).
func (o SwitchcontrollerFlowtrackingCollectorOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFlowtrackingCollector) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Collector L4 transport protocol for exporting packets. Valid values: `udp`, `tcp`, `sctp`.
func (o SwitchcontrollerFlowtrackingCollectorOutput) Transport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFlowtrackingCollector) *string { return v.Transport }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerFlowtrackingCollectorArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerFlowtrackingCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerFlowtrackingCollector)(nil)).Elem()
}

func (o SwitchcontrollerFlowtrackingCollectorArrayOutput) ToSwitchcontrollerFlowtrackingCollectorArrayOutput() SwitchcontrollerFlowtrackingCollectorArrayOutput {
	return o
}

func (o SwitchcontrollerFlowtrackingCollectorArrayOutput) ToSwitchcontrollerFlowtrackingCollectorArrayOutputWithContext(ctx context.Context) SwitchcontrollerFlowtrackingCollectorArrayOutput {
	return o
}

func (o SwitchcontrollerFlowtrackingCollectorArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerFlowtrackingCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerFlowtrackingCollector {
		return vs[0].([]SwitchcontrollerFlowtrackingCollector)[vs[1].(int)]
	}).(SwitchcontrollerFlowtrackingCollectorOutput)
}

type SwitchcontrollerFortilinksettingsNacPorts struct {
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port when NAC mode is configured on the port. Helps to re-initiate the DHCP process for a device. Valid values: `disable`, `enable`.
	BounceNacPort *string `pulumi:"bounceNacPort"`
	// Enable/disable LAN segment feature on the FortiLink interface. Valid values: `enabled`, `disabled`.
	LanSegment *string `pulumi:"lanSegment"`
	// Member change flag.
	MemberChange *int `pulumi:"memberChange"`
	// Configure NAC LAN interface.
	NacLanInterface *string `pulumi:"nacLanInterface"`
	// Configure NAC segment VLANs. The structure of `nacSegmentVlans` block is documented below.
	NacSegmentVlans []SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan `pulumi:"nacSegmentVlans"`
	// Default NAC Onboarding VLAN when NAC devices are discovered.
	OnboardingVlan *string `pulumi:"onboardingVlan"`
	// Parent key name.
	ParentKey *string `pulumi:"parentKey"`
}

// SwitchcontrollerFortilinksettingsNacPortsInput is an input type that accepts SwitchcontrollerFortilinksettingsNacPortsArgs and SwitchcontrollerFortilinksettingsNacPortsOutput values.
// You can construct a concrete instance of `SwitchcontrollerFortilinksettingsNacPortsInput` via:
//
//	SwitchcontrollerFortilinksettingsNacPortsArgs{...}
type SwitchcontrollerFortilinksettingsNacPortsInput interface {
	pulumi.Input

	ToSwitchcontrollerFortilinksettingsNacPortsOutput() SwitchcontrollerFortilinksettingsNacPortsOutput
	ToSwitchcontrollerFortilinksettingsNacPortsOutputWithContext(context.Context) SwitchcontrollerFortilinksettingsNacPortsOutput
}

type SwitchcontrollerFortilinksettingsNacPortsArgs struct {
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port when NAC mode is configured on the port. Helps to re-initiate the DHCP process for a device. Valid values: `disable`, `enable`.
	BounceNacPort pulumi.StringPtrInput `pulumi:"bounceNacPort"`
	// Enable/disable LAN segment feature on the FortiLink interface. Valid values: `enabled`, `disabled`.
	LanSegment pulumi.StringPtrInput `pulumi:"lanSegment"`
	// Member change flag.
	MemberChange pulumi.IntPtrInput `pulumi:"memberChange"`
	// Configure NAC LAN interface.
	NacLanInterface pulumi.StringPtrInput `pulumi:"nacLanInterface"`
	// Configure NAC segment VLANs. The structure of `nacSegmentVlans` block is documented below.
	NacSegmentVlans SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayInput `pulumi:"nacSegmentVlans"`
	// Default NAC Onboarding VLAN when NAC devices are discovered.
	OnboardingVlan pulumi.StringPtrInput `pulumi:"onboardingVlan"`
	// Parent key name.
	ParentKey pulumi.StringPtrInput `pulumi:"parentKey"`
}

func (SwitchcontrollerFortilinksettingsNacPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerFortilinksettingsNacPorts)(nil)).Elem()
}

func (i SwitchcontrollerFortilinksettingsNacPortsArgs) ToSwitchcontrollerFortilinksettingsNacPortsOutput() SwitchcontrollerFortilinksettingsNacPortsOutput {
	return i.ToSwitchcontrollerFortilinksettingsNacPortsOutputWithContext(context.Background())
}

func (i SwitchcontrollerFortilinksettingsNacPortsArgs) ToSwitchcontrollerFortilinksettingsNacPortsOutputWithContext(ctx context.Context) SwitchcontrollerFortilinksettingsNacPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerFortilinksettingsNacPortsOutput)
}

func (i SwitchcontrollerFortilinksettingsNacPortsArgs) ToSwitchcontrollerFortilinksettingsNacPortsPtrOutput() SwitchcontrollerFortilinksettingsNacPortsPtrOutput {
	return i.ToSwitchcontrollerFortilinksettingsNacPortsPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerFortilinksettingsNacPortsArgs) ToSwitchcontrollerFortilinksettingsNacPortsPtrOutputWithContext(ctx context.Context) SwitchcontrollerFortilinksettingsNacPortsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerFortilinksettingsNacPortsOutput).ToSwitchcontrollerFortilinksettingsNacPortsPtrOutputWithContext(ctx)
}

// SwitchcontrollerFortilinksettingsNacPortsPtrInput is an input type that accepts SwitchcontrollerFortilinksettingsNacPortsArgs, SwitchcontrollerFortilinksettingsNacPortsPtr and SwitchcontrollerFortilinksettingsNacPortsPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerFortilinksettingsNacPortsPtrInput` via:
//
//	        SwitchcontrollerFortilinksettingsNacPortsArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerFortilinksettingsNacPortsPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerFortilinksettingsNacPortsPtrOutput() SwitchcontrollerFortilinksettingsNacPortsPtrOutput
	ToSwitchcontrollerFortilinksettingsNacPortsPtrOutputWithContext(context.Context) SwitchcontrollerFortilinksettingsNacPortsPtrOutput
}

type switchcontrollerFortilinksettingsNacPortsPtrType SwitchcontrollerFortilinksettingsNacPortsArgs

func SwitchcontrollerFortilinksettingsNacPortsPtr(v *SwitchcontrollerFortilinksettingsNacPortsArgs) SwitchcontrollerFortilinksettingsNacPortsPtrInput {
	return (*switchcontrollerFortilinksettingsNacPortsPtrType)(v)
}

func (*switchcontrollerFortilinksettingsNacPortsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerFortilinksettingsNacPorts)(nil)).Elem()
}

func (i *switchcontrollerFortilinksettingsNacPortsPtrType) ToSwitchcontrollerFortilinksettingsNacPortsPtrOutput() SwitchcontrollerFortilinksettingsNacPortsPtrOutput {
	return i.ToSwitchcontrollerFortilinksettingsNacPortsPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerFortilinksettingsNacPortsPtrType) ToSwitchcontrollerFortilinksettingsNacPortsPtrOutputWithContext(ctx context.Context) SwitchcontrollerFortilinksettingsNacPortsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerFortilinksettingsNacPortsPtrOutput)
}

type SwitchcontrollerFortilinksettingsNacPortsOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerFortilinksettingsNacPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerFortilinksettingsNacPorts)(nil)).Elem()
}

func (o SwitchcontrollerFortilinksettingsNacPortsOutput) ToSwitchcontrollerFortilinksettingsNacPortsOutput() SwitchcontrollerFortilinksettingsNacPortsOutput {
	return o
}

func (o SwitchcontrollerFortilinksettingsNacPortsOutput) ToSwitchcontrollerFortilinksettingsNacPortsOutputWithContext(ctx context.Context) SwitchcontrollerFortilinksettingsNacPortsOutput {
	return o
}

func (o SwitchcontrollerFortilinksettingsNacPortsOutput) ToSwitchcontrollerFortilinksettingsNacPortsPtrOutput() SwitchcontrollerFortilinksettingsNacPortsPtrOutput {
	return o.ToSwitchcontrollerFortilinksettingsNacPortsPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerFortilinksettingsNacPortsOutput) ToSwitchcontrollerFortilinksettingsNacPortsPtrOutputWithContext(ctx context.Context) SwitchcontrollerFortilinksettingsNacPortsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerFortilinksettingsNacPorts) *SwitchcontrollerFortilinksettingsNacPorts {
		return &v
	}).(SwitchcontrollerFortilinksettingsNacPortsPtrOutput)
}

// Enable/disable bouncing (administratively bring the link down, up) of a switch port when NAC mode is configured on the port. Helps to re-initiate the DHCP process for a device. Valid values: `disable`, `enable`.
func (o SwitchcontrollerFortilinksettingsNacPortsOutput) BounceNacPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFortilinksettingsNacPorts) *string { return v.BounceNacPort }).(pulumi.StringPtrOutput)
}

// Enable/disable LAN segment feature on the FortiLink interface. Valid values: `enabled`, `disabled`.
func (o SwitchcontrollerFortilinksettingsNacPortsOutput) LanSegment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFortilinksettingsNacPorts) *string { return v.LanSegment }).(pulumi.StringPtrOutput)
}

// Member change flag.
func (o SwitchcontrollerFortilinksettingsNacPortsOutput) MemberChange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFortilinksettingsNacPorts) *int { return v.MemberChange }).(pulumi.IntPtrOutput)
}

// Configure NAC LAN interface.
func (o SwitchcontrollerFortilinksettingsNacPortsOutput) NacLanInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFortilinksettingsNacPorts) *string { return v.NacLanInterface }).(pulumi.StringPtrOutput)
}

// Configure NAC segment VLANs. The structure of `nacSegmentVlans` block is documented below.
func (o SwitchcontrollerFortilinksettingsNacPortsOutput) NacSegmentVlans() SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerFortilinksettingsNacPorts) []SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan {
		return v.NacSegmentVlans
	}).(SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput)
}

// Default NAC Onboarding VLAN when NAC devices are discovered.
func (o SwitchcontrollerFortilinksettingsNacPortsOutput) OnboardingVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFortilinksettingsNacPorts) *string { return v.OnboardingVlan }).(pulumi.StringPtrOutput)
}

// Parent key name.
func (o SwitchcontrollerFortilinksettingsNacPortsOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFortilinksettingsNacPorts) *string { return v.ParentKey }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerFortilinksettingsNacPortsPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerFortilinksettingsNacPortsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerFortilinksettingsNacPorts)(nil)).Elem()
}

func (o SwitchcontrollerFortilinksettingsNacPortsPtrOutput) ToSwitchcontrollerFortilinksettingsNacPortsPtrOutput() SwitchcontrollerFortilinksettingsNacPortsPtrOutput {
	return o
}

func (o SwitchcontrollerFortilinksettingsNacPortsPtrOutput) ToSwitchcontrollerFortilinksettingsNacPortsPtrOutputWithContext(ctx context.Context) SwitchcontrollerFortilinksettingsNacPortsPtrOutput {
	return o
}

func (o SwitchcontrollerFortilinksettingsNacPortsPtrOutput) Elem() SwitchcontrollerFortilinksettingsNacPortsOutput {
	return o.ApplyT(func(v *SwitchcontrollerFortilinksettingsNacPorts) SwitchcontrollerFortilinksettingsNacPorts {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerFortilinksettingsNacPorts
		return ret
	}).(SwitchcontrollerFortilinksettingsNacPortsOutput)
}

// Enable/disable bouncing (administratively bring the link down, up) of a switch port when NAC mode is configured on the port. Helps to re-initiate the DHCP process for a device. Valid values: `disable`, `enable`.
func (o SwitchcontrollerFortilinksettingsNacPortsPtrOutput) BounceNacPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerFortilinksettingsNacPorts) *string {
		if v == nil {
			return nil
		}
		return v.BounceNacPort
	}).(pulumi.StringPtrOutput)
}

// Enable/disable LAN segment feature on the FortiLink interface. Valid values: `enabled`, `disabled`.
func (o SwitchcontrollerFortilinksettingsNacPortsPtrOutput) LanSegment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerFortilinksettingsNacPorts) *string {
		if v == nil {
			return nil
		}
		return v.LanSegment
	}).(pulumi.StringPtrOutput)
}

// Member change flag.
func (o SwitchcontrollerFortilinksettingsNacPortsPtrOutput) MemberChange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerFortilinksettingsNacPorts) *int {
		if v == nil {
			return nil
		}
		return v.MemberChange
	}).(pulumi.IntPtrOutput)
}

// Configure NAC LAN interface.
func (o SwitchcontrollerFortilinksettingsNacPortsPtrOutput) NacLanInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerFortilinksettingsNacPorts) *string {
		if v == nil {
			return nil
		}
		return v.NacLanInterface
	}).(pulumi.StringPtrOutput)
}

// Configure NAC segment VLANs. The structure of `nacSegmentVlans` block is documented below.
func (o SwitchcontrollerFortilinksettingsNacPortsPtrOutput) NacSegmentVlans() SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput {
	return o.ApplyT(func(v *SwitchcontrollerFortilinksettingsNacPorts) []SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan {
		if v == nil {
			return nil
		}
		return v.NacSegmentVlans
	}).(SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput)
}

// Default NAC Onboarding VLAN when NAC devices are discovered.
func (o SwitchcontrollerFortilinksettingsNacPortsPtrOutput) OnboardingVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerFortilinksettingsNacPorts) *string {
		if v == nil {
			return nil
		}
		return v.OnboardingVlan
	}).(pulumi.StringPtrOutput)
}

// Parent key name.
func (o SwitchcontrollerFortilinksettingsNacPortsPtrOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerFortilinksettingsNacPorts) *string {
		if v == nil {
			return nil
		}
		return v.ParentKey
	}).(pulumi.StringPtrOutput)
}

type SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan struct {
	// VLAN interface name.
	VlanName *string `pulumi:"vlanName"`
}

// SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanInput is an input type that accepts SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArgs and SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput values.
// You can construct a concrete instance of `SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanInput` via:
//
//	SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArgs{...}
type SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanInput interface {
	pulumi.Input

	ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput() SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput
	ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutputWithContext(context.Context) SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput
}

type SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArgs struct {
	// VLAN interface name.
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan)(nil)).Elem()
}

func (i SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArgs) ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput() SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput {
	return i.ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutputWithContext(context.Background())
}

func (i SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArgs) ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutputWithContext(ctx context.Context) SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput)
}

// SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayInput is an input type that accepts SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArray and SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayInput` via:
//
//	SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArray{ SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArgs{...} }
type SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput() SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput
	ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutputWithContext(context.Context) SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput
}

type SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArray []SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanInput

func (SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan)(nil)).Elem()
}

func (i SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArray) ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput() SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput {
	return i.ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArray) ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput)
}

type SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan)(nil)).Elem()
}

func (o SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput) ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput() SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput {
	return o
}

func (o SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput) ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutputWithContext(ctx context.Context) SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput {
	return o
}

// VLAN interface name.
func (o SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan)(nil)).Elem()
}

func (o SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput) ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput() SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput {
	return o
}

func (o SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput) ToSwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput {
	return o
}

func (o SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan {
		return vs[0].([]SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlan)[vs[1].(int)]
	}).(SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput)
}

type SwitchcontrollerGlobalCustomCommand struct {
	// List of FortiSwitch commands.
	CommandEntry *string `pulumi:"commandEntry"`
	// Name of custom command to push to all FortiSwitches in VDOM.
	CommandName *string `pulumi:"commandName"`
}

// SwitchcontrollerGlobalCustomCommandInput is an input type that accepts SwitchcontrollerGlobalCustomCommandArgs and SwitchcontrollerGlobalCustomCommandOutput values.
// You can construct a concrete instance of `SwitchcontrollerGlobalCustomCommandInput` via:
//
//	SwitchcontrollerGlobalCustomCommandArgs{...}
type SwitchcontrollerGlobalCustomCommandInput interface {
	pulumi.Input

	ToSwitchcontrollerGlobalCustomCommandOutput() SwitchcontrollerGlobalCustomCommandOutput
	ToSwitchcontrollerGlobalCustomCommandOutputWithContext(context.Context) SwitchcontrollerGlobalCustomCommandOutput
}

type SwitchcontrollerGlobalCustomCommandArgs struct {
	// List of FortiSwitch commands.
	CommandEntry pulumi.StringPtrInput `pulumi:"commandEntry"`
	// Name of custom command to push to all FortiSwitches in VDOM.
	CommandName pulumi.StringPtrInput `pulumi:"commandName"`
}

func (SwitchcontrollerGlobalCustomCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerGlobalCustomCommand)(nil)).Elem()
}

func (i SwitchcontrollerGlobalCustomCommandArgs) ToSwitchcontrollerGlobalCustomCommandOutput() SwitchcontrollerGlobalCustomCommandOutput {
	return i.ToSwitchcontrollerGlobalCustomCommandOutputWithContext(context.Background())
}

func (i SwitchcontrollerGlobalCustomCommandArgs) ToSwitchcontrollerGlobalCustomCommandOutputWithContext(ctx context.Context) SwitchcontrollerGlobalCustomCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerGlobalCustomCommandOutput)
}

// SwitchcontrollerGlobalCustomCommandArrayInput is an input type that accepts SwitchcontrollerGlobalCustomCommandArray and SwitchcontrollerGlobalCustomCommandArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerGlobalCustomCommandArrayInput` via:
//
//	SwitchcontrollerGlobalCustomCommandArray{ SwitchcontrollerGlobalCustomCommandArgs{...} }
type SwitchcontrollerGlobalCustomCommandArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerGlobalCustomCommandArrayOutput() SwitchcontrollerGlobalCustomCommandArrayOutput
	ToSwitchcontrollerGlobalCustomCommandArrayOutputWithContext(context.Context) SwitchcontrollerGlobalCustomCommandArrayOutput
}

type SwitchcontrollerGlobalCustomCommandArray []SwitchcontrollerGlobalCustomCommandInput

func (SwitchcontrollerGlobalCustomCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerGlobalCustomCommand)(nil)).Elem()
}

func (i SwitchcontrollerGlobalCustomCommandArray) ToSwitchcontrollerGlobalCustomCommandArrayOutput() SwitchcontrollerGlobalCustomCommandArrayOutput {
	return i.ToSwitchcontrollerGlobalCustomCommandArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerGlobalCustomCommandArray) ToSwitchcontrollerGlobalCustomCommandArrayOutputWithContext(ctx context.Context) SwitchcontrollerGlobalCustomCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerGlobalCustomCommandArrayOutput)
}

type SwitchcontrollerGlobalCustomCommandOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerGlobalCustomCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerGlobalCustomCommand)(nil)).Elem()
}

func (o SwitchcontrollerGlobalCustomCommandOutput) ToSwitchcontrollerGlobalCustomCommandOutput() SwitchcontrollerGlobalCustomCommandOutput {
	return o
}

func (o SwitchcontrollerGlobalCustomCommandOutput) ToSwitchcontrollerGlobalCustomCommandOutputWithContext(ctx context.Context) SwitchcontrollerGlobalCustomCommandOutput {
	return o
}

// List of FortiSwitch commands.
func (o SwitchcontrollerGlobalCustomCommandOutput) CommandEntry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerGlobalCustomCommand) *string { return v.CommandEntry }).(pulumi.StringPtrOutput)
}

// Name of custom command to push to all FortiSwitches in VDOM.
func (o SwitchcontrollerGlobalCustomCommandOutput) CommandName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerGlobalCustomCommand) *string { return v.CommandName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerGlobalCustomCommandArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerGlobalCustomCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerGlobalCustomCommand)(nil)).Elem()
}

func (o SwitchcontrollerGlobalCustomCommandArrayOutput) ToSwitchcontrollerGlobalCustomCommandArrayOutput() SwitchcontrollerGlobalCustomCommandArrayOutput {
	return o
}

func (o SwitchcontrollerGlobalCustomCommandArrayOutput) ToSwitchcontrollerGlobalCustomCommandArrayOutputWithContext(ctx context.Context) SwitchcontrollerGlobalCustomCommandArrayOutput {
	return o
}

func (o SwitchcontrollerGlobalCustomCommandArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerGlobalCustomCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerGlobalCustomCommand {
		return vs[0].([]SwitchcontrollerGlobalCustomCommand)[vs[1].(int)]
	}).(SwitchcontrollerGlobalCustomCommandOutput)
}

type SwitchcontrollerGlobalDisableDiscovery struct {
	// Managed device ID.
	Name *string `pulumi:"name"`
}

// SwitchcontrollerGlobalDisableDiscoveryInput is an input type that accepts SwitchcontrollerGlobalDisableDiscoveryArgs and SwitchcontrollerGlobalDisableDiscoveryOutput values.
// You can construct a concrete instance of `SwitchcontrollerGlobalDisableDiscoveryInput` via:
//
//	SwitchcontrollerGlobalDisableDiscoveryArgs{...}
type SwitchcontrollerGlobalDisableDiscoveryInput interface {
	pulumi.Input

	ToSwitchcontrollerGlobalDisableDiscoveryOutput() SwitchcontrollerGlobalDisableDiscoveryOutput
	ToSwitchcontrollerGlobalDisableDiscoveryOutputWithContext(context.Context) SwitchcontrollerGlobalDisableDiscoveryOutput
}

type SwitchcontrollerGlobalDisableDiscoveryArgs struct {
	// Managed device ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchcontrollerGlobalDisableDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerGlobalDisableDiscovery)(nil)).Elem()
}

func (i SwitchcontrollerGlobalDisableDiscoveryArgs) ToSwitchcontrollerGlobalDisableDiscoveryOutput() SwitchcontrollerGlobalDisableDiscoveryOutput {
	return i.ToSwitchcontrollerGlobalDisableDiscoveryOutputWithContext(context.Background())
}

func (i SwitchcontrollerGlobalDisableDiscoveryArgs) ToSwitchcontrollerGlobalDisableDiscoveryOutputWithContext(ctx context.Context) SwitchcontrollerGlobalDisableDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerGlobalDisableDiscoveryOutput)
}

// SwitchcontrollerGlobalDisableDiscoveryArrayInput is an input type that accepts SwitchcontrollerGlobalDisableDiscoveryArray and SwitchcontrollerGlobalDisableDiscoveryArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerGlobalDisableDiscoveryArrayInput` via:
//
//	SwitchcontrollerGlobalDisableDiscoveryArray{ SwitchcontrollerGlobalDisableDiscoveryArgs{...} }
type SwitchcontrollerGlobalDisableDiscoveryArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerGlobalDisableDiscoveryArrayOutput() SwitchcontrollerGlobalDisableDiscoveryArrayOutput
	ToSwitchcontrollerGlobalDisableDiscoveryArrayOutputWithContext(context.Context) SwitchcontrollerGlobalDisableDiscoveryArrayOutput
}

type SwitchcontrollerGlobalDisableDiscoveryArray []SwitchcontrollerGlobalDisableDiscoveryInput

func (SwitchcontrollerGlobalDisableDiscoveryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerGlobalDisableDiscovery)(nil)).Elem()
}

func (i SwitchcontrollerGlobalDisableDiscoveryArray) ToSwitchcontrollerGlobalDisableDiscoveryArrayOutput() SwitchcontrollerGlobalDisableDiscoveryArrayOutput {
	return i.ToSwitchcontrollerGlobalDisableDiscoveryArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerGlobalDisableDiscoveryArray) ToSwitchcontrollerGlobalDisableDiscoveryArrayOutputWithContext(ctx context.Context) SwitchcontrollerGlobalDisableDiscoveryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerGlobalDisableDiscoveryArrayOutput)
}

type SwitchcontrollerGlobalDisableDiscoveryOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerGlobalDisableDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerGlobalDisableDiscovery)(nil)).Elem()
}

func (o SwitchcontrollerGlobalDisableDiscoveryOutput) ToSwitchcontrollerGlobalDisableDiscoveryOutput() SwitchcontrollerGlobalDisableDiscoveryOutput {
	return o
}

func (o SwitchcontrollerGlobalDisableDiscoveryOutput) ToSwitchcontrollerGlobalDisableDiscoveryOutputWithContext(ctx context.Context) SwitchcontrollerGlobalDisableDiscoveryOutput {
	return o
}

// Managed device ID.
func (o SwitchcontrollerGlobalDisableDiscoveryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerGlobalDisableDiscovery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerGlobalDisableDiscoveryArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerGlobalDisableDiscoveryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerGlobalDisableDiscovery)(nil)).Elem()
}

func (o SwitchcontrollerGlobalDisableDiscoveryArrayOutput) ToSwitchcontrollerGlobalDisableDiscoveryArrayOutput() SwitchcontrollerGlobalDisableDiscoveryArrayOutput {
	return o
}

func (o SwitchcontrollerGlobalDisableDiscoveryArrayOutput) ToSwitchcontrollerGlobalDisableDiscoveryArrayOutputWithContext(ctx context.Context) SwitchcontrollerGlobalDisableDiscoveryArrayOutput {
	return o
}

func (o SwitchcontrollerGlobalDisableDiscoveryArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerGlobalDisableDiscoveryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerGlobalDisableDiscovery {
		return vs[0].([]SwitchcontrollerGlobalDisableDiscovery)[vs[1].(int)]
	}).(SwitchcontrollerGlobalDisableDiscoveryOutput)
}

type SwitchcontrollerLldpprofileCustomTlv struct {
	// Organizationally defined information string (0 - 507 hexadecimal bytes).
	InformationString *string `pulumi:"informationString"`
	// TLV name (not sent).
	Name *string `pulumi:"name"`
	// Organizationally unique identifier (OUI), a 3-byte hexadecimal number, for this TLV.
	Oui *string `pulumi:"oui"`
	// Organizationally defined subtype (0 - 255).
	Subtype *int `pulumi:"subtype"`
}

// SwitchcontrollerLldpprofileCustomTlvInput is an input type that accepts SwitchcontrollerLldpprofileCustomTlvArgs and SwitchcontrollerLldpprofileCustomTlvOutput values.
// You can construct a concrete instance of `SwitchcontrollerLldpprofileCustomTlvInput` via:
//
//	SwitchcontrollerLldpprofileCustomTlvArgs{...}
type SwitchcontrollerLldpprofileCustomTlvInput interface {
	pulumi.Input

	ToSwitchcontrollerLldpprofileCustomTlvOutput() SwitchcontrollerLldpprofileCustomTlvOutput
	ToSwitchcontrollerLldpprofileCustomTlvOutputWithContext(context.Context) SwitchcontrollerLldpprofileCustomTlvOutput
}

type SwitchcontrollerLldpprofileCustomTlvArgs struct {
	// Organizationally defined information string (0 - 507 hexadecimal bytes).
	InformationString pulumi.StringPtrInput `pulumi:"informationString"`
	// TLV name (not sent).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Organizationally unique identifier (OUI), a 3-byte hexadecimal number, for this TLV.
	Oui pulumi.StringPtrInput `pulumi:"oui"`
	// Organizationally defined subtype (0 - 255).
	Subtype pulumi.IntPtrInput `pulumi:"subtype"`
}

func (SwitchcontrollerLldpprofileCustomTlvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLldpprofileCustomTlv)(nil)).Elem()
}

func (i SwitchcontrollerLldpprofileCustomTlvArgs) ToSwitchcontrollerLldpprofileCustomTlvOutput() SwitchcontrollerLldpprofileCustomTlvOutput {
	return i.ToSwitchcontrollerLldpprofileCustomTlvOutputWithContext(context.Background())
}

func (i SwitchcontrollerLldpprofileCustomTlvArgs) ToSwitchcontrollerLldpprofileCustomTlvOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileCustomTlvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLldpprofileCustomTlvOutput)
}

// SwitchcontrollerLldpprofileCustomTlvArrayInput is an input type that accepts SwitchcontrollerLldpprofileCustomTlvArray and SwitchcontrollerLldpprofileCustomTlvArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerLldpprofileCustomTlvArrayInput` via:
//
//	SwitchcontrollerLldpprofileCustomTlvArray{ SwitchcontrollerLldpprofileCustomTlvArgs{...} }
type SwitchcontrollerLldpprofileCustomTlvArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerLldpprofileCustomTlvArrayOutput() SwitchcontrollerLldpprofileCustomTlvArrayOutput
	ToSwitchcontrollerLldpprofileCustomTlvArrayOutputWithContext(context.Context) SwitchcontrollerLldpprofileCustomTlvArrayOutput
}

type SwitchcontrollerLldpprofileCustomTlvArray []SwitchcontrollerLldpprofileCustomTlvInput

func (SwitchcontrollerLldpprofileCustomTlvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerLldpprofileCustomTlv)(nil)).Elem()
}

func (i SwitchcontrollerLldpprofileCustomTlvArray) ToSwitchcontrollerLldpprofileCustomTlvArrayOutput() SwitchcontrollerLldpprofileCustomTlvArrayOutput {
	return i.ToSwitchcontrollerLldpprofileCustomTlvArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerLldpprofileCustomTlvArray) ToSwitchcontrollerLldpprofileCustomTlvArrayOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileCustomTlvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLldpprofileCustomTlvArrayOutput)
}

type SwitchcontrollerLldpprofileCustomTlvOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLldpprofileCustomTlvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLldpprofileCustomTlv)(nil)).Elem()
}

func (o SwitchcontrollerLldpprofileCustomTlvOutput) ToSwitchcontrollerLldpprofileCustomTlvOutput() SwitchcontrollerLldpprofileCustomTlvOutput {
	return o
}

func (o SwitchcontrollerLldpprofileCustomTlvOutput) ToSwitchcontrollerLldpprofileCustomTlvOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileCustomTlvOutput {
	return o
}

// Organizationally defined information string (0 - 507 hexadecimal bytes).
func (o SwitchcontrollerLldpprofileCustomTlvOutput) InformationString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileCustomTlv) *string { return v.InformationString }).(pulumi.StringPtrOutput)
}

// TLV name (not sent).
func (o SwitchcontrollerLldpprofileCustomTlvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileCustomTlv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Organizationally unique identifier (OUI), a 3-byte hexadecimal number, for this TLV.
func (o SwitchcontrollerLldpprofileCustomTlvOutput) Oui() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileCustomTlv) *string { return v.Oui }).(pulumi.StringPtrOutput)
}

// Organizationally defined subtype (0 - 255).
func (o SwitchcontrollerLldpprofileCustomTlvOutput) Subtype() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileCustomTlv) *int { return v.Subtype }).(pulumi.IntPtrOutput)
}

type SwitchcontrollerLldpprofileCustomTlvArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLldpprofileCustomTlvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerLldpprofileCustomTlv)(nil)).Elem()
}

func (o SwitchcontrollerLldpprofileCustomTlvArrayOutput) ToSwitchcontrollerLldpprofileCustomTlvArrayOutput() SwitchcontrollerLldpprofileCustomTlvArrayOutput {
	return o
}

func (o SwitchcontrollerLldpprofileCustomTlvArrayOutput) ToSwitchcontrollerLldpprofileCustomTlvArrayOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileCustomTlvArrayOutput {
	return o
}

func (o SwitchcontrollerLldpprofileCustomTlvArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerLldpprofileCustomTlvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerLldpprofileCustomTlv {
		return vs[0].([]SwitchcontrollerLldpprofileCustomTlv)[vs[1].(int)]
	}).(SwitchcontrollerLldpprofileCustomTlvOutput)
}

type SwitchcontrollerLldpprofileMedLocationService struct {
	// Location service type name.
	Name *string `pulumi:"name"`
	// Enable or disable this TLV. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Location service ID.
	SysLocationId *string `pulumi:"sysLocationId"`
}

// SwitchcontrollerLldpprofileMedLocationServiceInput is an input type that accepts SwitchcontrollerLldpprofileMedLocationServiceArgs and SwitchcontrollerLldpprofileMedLocationServiceOutput values.
// You can construct a concrete instance of `SwitchcontrollerLldpprofileMedLocationServiceInput` via:
//
//	SwitchcontrollerLldpprofileMedLocationServiceArgs{...}
type SwitchcontrollerLldpprofileMedLocationServiceInput interface {
	pulumi.Input

	ToSwitchcontrollerLldpprofileMedLocationServiceOutput() SwitchcontrollerLldpprofileMedLocationServiceOutput
	ToSwitchcontrollerLldpprofileMedLocationServiceOutputWithContext(context.Context) SwitchcontrollerLldpprofileMedLocationServiceOutput
}

type SwitchcontrollerLldpprofileMedLocationServiceArgs struct {
	// Location service type name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Enable or disable this TLV. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Location service ID.
	SysLocationId pulumi.StringPtrInput `pulumi:"sysLocationId"`
}

func (SwitchcontrollerLldpprofileMedLocationServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLldpprofileMedLocationService)(nil)).Elem()
}

func (i SwitchcontrollerLldpprofileMedLocationServiceArgs) ToSwitchcontrollerLldpprofileMedLocationServiceOutput() SwitchcontrollerLldpprofileMedLocationServiceOutput {
	return i.ToSwitchcontrollerLldpprofileMedLocationServiceOutputWithContext(context.Background())
}

func (i SwitchcontrollerLldpprofileMedLocationServiceArgs) ToSwitchcontrollerLldpprofileMedLocationServiceOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileMedLocationServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLldpprofileMedLocationServiceOutput)
}

// SwitchcontrollerLldpprofileMedLocationServiceArrayInput is an input type that accepts SwitchcontrollerLldpprofileMedLocationServiceArray and SwitchcontrollerLldpprofileMedLocationServiceArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerLldpprofileMedLocationServiceArrayInput` via:
//
//	SwitchcontrollerLldpprofileMedLocationServiceArray{ SwitchcontrollerLldpprofileMedLocationServiceArgs{...} }
type SwitchcontrollerLldpprofileMedLocationServiceArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerLldpprofileMedLocationServiceArrayOutput() SwitchcontrollerLldpprofileMedLocationServiceArrayOutput
	ToSwitchcontrollerLldpprofileMedLocationServiceArrayOutputWithContext(context.Context) SwitchcontrollerLldpprofileMedLocationServiceArrayOutput
}

type SwitchcontrollerLldpprofileMedLocationServiceArray []SwitchcontrollerLldpprofileMedLocationServiceInput

func (SwitchcontrollerLldpprofileMedLocationServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerLldpprofileMedLocationService)(nil)).Elem()
}

func (i SwitchcontrollerLldpprofileMedLocationServiceArray) ToSwitchcontrollerLldpprofileMedLocationServiceArrayOutput() SwitchcontrollerLldpprofileMedLocationServiceArrayOutput {
	return i.ToSwitchcontrollerLldpprofileMedLocationServiceArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerLldpprofileMedLocationServiceArray) ToSwitchcontrollerLldpprofileMedLocationServiceArrayOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileMedLocationServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLldpprofileMedLocationServiceArrayOutput)
}

type SwitchcontrollerLldpprofileMedLocationServiceOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLldpprofileMedLocationServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLldpprofileMedLocationService)(nil)).Elem()
}

func (o SwitchcontrollerLldpprofileMedLocationServiceOutput) ToSwitchcontrollerLldpprofileMedLocationServiceOutput() SwitchcontrollerLldpprofileMedLocationServiceOutput {
	return o
}

func (o SwitchcontrollerLldpprofileMedLocationServiceOutput) ToSwitchcontrollerLldpprofileMedLocationServiceOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileMedLocationServiceOutput {
	return o
}

// Location service type name.
func (o SwitchcontrollerLldpprofileMedLocationServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileMedLocationService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Enable or disable this TLV. Valid values: `disable`, `enable`.
func (o SwitchcontrollerLldpprofileMedLocationServiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileMedLocationService) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Location service ID.
func (o SwitchcontrollerLldpprofileMedLocationServiceOutput) SysLocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileMedLocationService) *string { return v.SysLocationId }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerLldpprofileMedLocationServiceArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLldpprofileMedLocationServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerLldpprofileMedLocationService)(nil)).Elem()
}

func (o SwitchcontrollerLldpprofileMedLocationServiceArrayOutput) ToSwitchcontrollerLldpprofileMedLocationServiceArrayOutput() SwitchcontrollerLldpprofileMedLocationServiceArrayOutput {
	return o
}

func (o SwitchcontrollerLldpprofileMedLocationServiceArrayOutput) ToSwitchcontrollerLldpprofileMedLocationServiceArrayOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileMedLocationServiceArrayOutput {
	return o
}

func (o SwitchcontrollerLldpprofileMedLocationServiceArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerLldpprofileMedLocationServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerLldpprofileMedLocationService {
		return vs[0].([]SwitchcontrollerLldpprofileMedLocationService)[vs[1].(int)]
	}).(SwitchcontrollerLldpprofileMedLocationServiceOutput)
}

type SwitchcontrollerLldpprofileMedNetworkPolicy struct {
	// Enable/disable VLAN assignment when this profile is applied on managed FortiSwitch port. Valid values: `disable`, `enable`.
	AssignVlan *string `pulumi:"assignVlan"`
	// Advertised Differentiated Services Code Point (DSCP) value, a packet header value indicating the level of service requested for traffic, such as high priority or best effort delivery.
	Dscp *int `pulumi:"dscp"`
	// Policy type name.
	Name *string `pulumi:"name"`
	// Advertised Layer 2 priority (0 - 7; from lowest to highest priority).
	Priority *int `pulumi:"priority"`
	// Enable or disable this TLV. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// ID of VLAN to advertise, if configured on port (0 - 4094, 0 = priority tag).
	Vlan *int `pulumi:"vlan"`
	// VLAN interface to advertise; if configured on port.
	VlanIntf *string `pulumi:"vlanIntf"`
}

// SwitchcontrollerLldpprofileMedNetworkPolicyInput is an input type that accepts SwitchcontrollerLldpprofileMedNetworkPolicyArgs and SwitchcontrollerLldpprofileMedNetworkPolicyOutput values.
// You can construct a concrete instance of `SwitchcontrollerLldpprofileMedNetworkPolicyInput` via:
//
//	SwitchcontrollerLldpprofileMedNetworkPolicyArgs{...}
type SwitchcontrollerLldpprofileMedNetworkPolicyInput interface {
	pulumi.Input

	ToSwitchcontrollerLldpprofileMedNetworkPolicyOutput() SwitchcontrollerLldpprofileMedNetworkPolicyOutput
	ToSwitchcontrollerLldpprofileMedNetworkPolicyOutputWithContext(context.Context) SwitchcontrollerLldpprofileMedNetworkPolicyOutput
}

type SwitchcontrollerLldpprofileMedNetworkPolicyArgs struct {
	// Enable/disable VLAN assignment when this profile is applied on managed FortiSwitch port. Valid values: `disable`, `enable`.
	AssignVlan pulumi.StringPtrInput `pulumi:"assignVlan"`
	// Advertised Differentiated Services Code Point (DSCP) value, a packet header value indicating the level of service requested for traffic, such as high priority or best effort delivery.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// Policy type name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Advertised Layer 2 priority (0 - 7; from lowest to highest priority).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Enable or disable this TLV. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// ID of VLAN to advertise, if configured on port (0 - 4094, 0 = priority tag).
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
	// VLAN interface to advertise; if configured on port.
	VlanIntf pulumi.StringPtrInput `pulumi:"vlanIntf"`
}

func (SwitchcontrollerLldpprofileMedNetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLldpprofileMedNetworkPolicy)(nil)).Elem()
}

func (i SwitchcontrollerLldpprofileMedNetworkPolicyArgs) ToSwitchcontrollerLldpprofileMedNetworkPolicyOutput() SwitchcontrollerLldpprofileMedNetworkPolicyOutput {
	return i.ToSwitchcontrollerLldpprofileMedNetworkPolicyOutputWithContext(context.Background())
}

func (i SwitchcontrollerLldpprofileMedNetworkPolicyArgs) ToSwitchcontrollerLldpprofileMedNetworkPolicyOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileMedNetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLldpprofileMedNetworkPolicyOutput)
}

// SwitchcontrollerLldpprofileMedNetworkPolicyArrayInput is an input type that accepts SwitchcontrollerLldpprofileMedNetworkPolicyArray and SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerLldpprofileMedNetworkPolicyArrayInput` via:
//
//	SwitchcontrollerLldpprofileMedNetworkPolicyArray{ SwitchcontrollerLldpprofileMedNetworkPolicyArgs{...} }
type SwitchcontrollerLldpprofileMedNetworkPolicyArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput() SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput
	ToSwitchcontrollerLldpprofileMedNetworkPolicyArrayOutputWithContext(context.Context) SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput
}

type SwitchcontrollerLldpprofileMedNetworkPolicyArray []SwitchcontrollerLldpprofileMedNetworkPolicyInput

func (SwitchcontrollerLldpprofileMedNetworkPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerLldpprofileMedNetworkPolicy)(nil)).Elem()
}

func (i SwitchcontrollerLldpprofileMedNetworkPolicyArray) ToSwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput() SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput {
	return i.ToSwitchcontrollerLldpprofileMedNetworkPolicyArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerLldpprofileMedNetworkPolicyArray) ToSwitchcontrollerLldpprofileMedNetworkPolicyArrayOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput)
}

type SwitchcontrollerLldpprofileMedNetworkPolicyOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLldpprofileMedNetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLldpprofileMedNetworkPolicy)(nil)).Elem()
}

func (o SwitchcontrollerLldpprofileMedNetworkPolicyOutput) ToSwitchcontrollerLldpprofileMedNetworkPolicyOutput() SwitchcontrollerLldpprofileMedNetworkPolicyOutput {
	return o
}

func (o SwitchcontrollerLldpprofileMedNetworkPolicyOutput) ToSwitchcontrollerLldpprofileMedNetworkPolicyOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileMedNetworkPolicyOutput {
	return o
}

// Enable/disable VLAN assignment when this profile is applied on managed FortiSwitch port. Valid values: `disable`, `enable`.
func (o SwitchcontrollerLldpprofileMedNetworkPolicyOutput) AssignVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileMedNetworkPolicy) *string { return v.AssignVlan }).(pulumi.StringPtrOutput)
}

// Advertised Differentiated Services Code Point (DSCP) value, a packet header value indicating the level of service requested for traffic, such as high priority or best effort delivery.
func (o SwitchcontrollerLldpprofileMedNetworkPolicyOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileMedNetworkPolicy) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// Policy type name.
func (o SwitchcontrollerLldpprofileMedNetworkPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileMedNetworkPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Advertised Layer 2 priority (0 - 7; from lowest to highest priority).
func (o SwitchcontrollerLldpprofileMedNetworkPolicyOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileMedNetworkPolicy) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Enable or disable this TLV. Valid values: `disable`, `enable`.
func (o SwitchcontrollerLldpprofileMedNetworkPolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileMedNetworkPolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// ID of VLAN to advertise, if configured on port (0 - 4094, 0 = priority tag).
func (o SwitchcontrollerLldpprofileMedNetworkPolicyOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileMedNetworkPolicy) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

// VLAN interface to advertise; if configured on port.
func (o SwitchcontrollerLldpprofileMedNetworkPolicyOutput) VlanIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLldpprofileMedNetworkPolicy) *string { return v.VlanIntf }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerLldpprofileMedNetworkPolicy)(nil)).Elem()
}

func (o SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput) ToSwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput() SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput {
	return o
}

func (o SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput) ToSwitchcontrollerLldpprofileMedNetworkPolicyArrayOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput {
	return o
}

func (o SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerLldpprofileMedNetworkPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerLldpprofileMedNetworkPolicy {
		return vs[0].([]SwitchcontrollerLldpprofileMedNetworkPolicy)[vs[1].(int)]
	}).(SwitchcontrollerLldpprofileMedNetworkPolicyOutput)
}

type SwitchcontrollerLocationAddressCivic struct {
	// Location additional details.
	Additional *string `pulumi:"additional"`
	// Location additional code details.
	AdditionalCode *string `pulumi:"additionalCode"`
	// Location block details.
	Block *string `pulumi:"block"`
	// Location branch road details.
	BranchRoad *string `pulumi:"branchRoad"`
	// Location building details.
	Building *string `pulumi:"building"`
	// Location city details.
	City *string `pulumi:"city"`
	// Location city division details.
	CityDivision *string `pulumi:"cityDivision"`
	// The two-letter ISO 3166 country code in capital ASCII letters eg. US, CA, DK, DE.
	Country *string `pulumi:"country"`
	// National subdivisions (state, canton, region, province, or prefecture).
	CountrySubdivision *string `pulumi:"countrySubdivision"`
	// County, parish, gun (JP), or district (IN).
	County *string `pulumi:"county"`
	// Leading street direction.
	Direction *string `pulumi:"direction"`
	// Floor.
	Floor *string `pulumi:"floor"`
	// Landmark or vanity address.
	Landmark *string `pulumi:"landmark"`
	// Language.
	Language *string `pulumi:"language"`
	// Name (residence and office occupant).
	Name *string `pulumi:"name"`
	// House number.
	Number *string `pulumi:"number"`
	// House number suffix.
	NumberSuffix *string `pulumi:"numberSuffix"`
	// Parent key name.
	ParentKey *string `pulumi:"parentKey"`
	// Placetype.
	PlaceType *string `pulumi:"placeType"`
	// Post office box (P.O. box).
	PostOfficeBox *string `pulumi:"postOfficeBox"`
	// Postal community name.
	PostalCommunity *string `pulumi:"postalCommunity"`
	// Primary road name.
	PrimaryRoad *string `pulumi:"primaryRoad"`
	// Road section.
	RoadSection *string `pulumi:"roadSection"`
	// Room number.
	Room *string `pulumi:"room"`
	// Script used to present the address information.
	Script *string `pulumi:"script"`
	// Seat number.
	Seat *string `pulumi:"seat"`
	// Street.
	Street *string `pulumi:"street"`
	// Street name post modifier.
	StreetNamePostMod *string `pulumi:"streetNamePostMod"`
	// Street name pre modifier.
	StreetNamePreMod *string `pulumi:"streetNamePreMod"`
	// Street suffix.
	StreetSuffix *string `pulumi:"streetSuffix"`
	// Sub branch road name.
	SubBranchRoad *string `pulumi:"subBranchRoad"`
	// Trailing street suffix.
	TrailingStrSuffix *string `pulumi:"trailingStrSuffix"`
	// Unit (apartment, suite).
	Unit *string `pulumi:"unit"`
	// Postal/zip code.
	Zip *string `pulumi:"zip"`
}

// SwitchcontrollerLocationAddressCivicInput is an input type that accepts SwitchcontrollerLocationAddressCivicArgs and SwitchcontrollerLocationAddressCivicOutput values.
// You can construct a concrete instance of `SwitchcontrollerLocationAddressCivicInput` via:
//
//	SwitchcontrollerLocationAddressCivicArgs{...}
type SwitchcontrollerLocationAddressCivicInput interface {
	pulumi.Input

	ToSwitchcontrollerLocationAddressCivicOutput() SwitchcontrollerLocationAddressCivicOutput
	ToSwitchcontrollerLocationAddressCivicOutputWithContext(context.Context) SwitchcontrollerLocationAddressCivicOutput
}

type SwitchcontrollerLocationAddressCivicArgs struct {
	// Location additional details.
	Additional pulumi.StringPtrInput `pulumi:"additional"`
	// Location additional code details.
	AdditionalCode pulumi.StringPtrInput `pulumi:"additionalCode"`
	// Location block details.
	Block pulumi.StringPtrInput `pulumi:"block"`
	// Location branch road details.
	BranchRoad pulumi.StringPtrInput `pulumi:"branchRoad"`
	// Location building details.
	Building pulumi.StringPtrInput `pulumi:"building"`
	// Location city details.
	City pulumi.StringPtrInput `pulumi:"city"`
	// Location city division details.
	CityDivision pulumi.StringPtrInput `pulumi:"cityDivision"`
	// The two-letter ISO 3166 country code in capital ASCII letters eg. US, CA, DK, DE.
	Country pulumi.StringPtrInput `pulumi:"country"`
	// National subdivisions (state, canton, region, province, or prefecture).
	CountrySubdivision pulumi.StringPtrInput `pulumi:"countrySubdivision"`
	// County, parish, gun (JP), or district (IN).
	County pulumi.StringPtrInput `pulumi:"county"`
	// Leading street direction.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Floor.
	Floor pulumi.StringPtrInput `pulumi:"floor"`
	// Landmark or vanity address.
	Landmark pulumi.StringPtrInput `pulumi:"landmark"`
	// Language.
	Language pulumi.StringPtrInput `pulumi:"language"`
	// Name (residence and office occupant).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// House number.
	Number pulumi.StringPtrInput `pulumi:"number"`
	// House number suffix.
	NumberSuffix pulumi.StringPtrInput `pulumi:"numberSuffix"`
	// Parent key name.
	ParentKey pulumi.StringPtrInput `pulumi:"parentKey"`
	// Placetype.
	PlaceType pulumi.StringPtrInput `pulumi:"placeType"`
	// Post office box (P.O. box).
	PostOfficeBox pulumi.StringPtrInput `pulumi:"postOfficeBox"`
	// Postal community name.
	PostalCommunity pulumi.StringPtrInput `pulumi:"postalCommunity"`
	// Primary road name.
	PrimaryRoad pulumi.StringPtrInput `pulumi:"primaryRoad"`
	// Road section.
	RoadSection pulumi.StringPtrInput `pulumi:"roadSection"`
	// Room number.
	Room pulumi.StringPtrInput `pulumi:"room"`
	// Script used to present the address information.
	Script pulumi.StringPtrInput `pulumi:"script"`
	// Seat number.
	Seat pulumi.StringPtrInput `pulumi:"seat"`
	// Street.
	Street pulumi.StringPtrInput `pulumi:"street"`
	// Street name post modifier.
	StreetNamePostMod pulumi.StringPtrInput `pulumi:"streetNamePostMod"`
	// Street name pre modifier.
	StreetNamePreMod pulumi.StringPtrInput `pulumi:"streetNamePreMod"`
	// Street suffix.
	StreetSuffix pulumi.StringPtrInput `pulumi:"streetSuffix"`
	// Sub branch road name.
	SubBranchRoad pulumi.StringPtrInput `pulumi:"subBranchRoad"`
	// Trailing street suffix.
	TrailingStrSuffix pulumi.StringPtrInput `pulumi:"trailingStrSuffix"`
	// Unit (apartment, suite).
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Postal/zip code.
	Zip pulumi.StringPtrInput `pulumi:"zip"`
}

func (SwitchcontrollerLocationAddressCivicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLocationAddressCivic)(nil)).Elem()
}

func (i SwitchcontrollerLocationAddressCivicArgs) ToSwitchcontrollerLocationAddressCivicOutput() SwitchcontrollerLocationAddressCivicOutput {
	return i.ToSwitchcontrollerLocationAddressCivicOutputWithContext(context.Background())
}

func (i SwitchcontrollerLocationAddressCivicArgs) ToSwitchcontrollerLocationAddressCivicOutputWithContext(ctx context.Context) SwitchcontrollerLocationAddressCivicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLocationAddressCivicOutput)
}

func (i SwitchcontrollerLocationAddressCivicArgs) ToSwitchcontrollerLocationAddressCivicPtrOutput() SwitchcontrollerLocationAddressCivicPtrOutput {
	return i.ToSwitchcontrollerLocationAddressCivicPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerLocationAddressCivicArgs) ToSwitchcontrollerLocationAddressCivicPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationAddressCivicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLocationAddressCivicOutput).ToSwitchcontrollerLocationAddressCivicPtrOutputWithContext(ctx)
}

// SwitchcontrollerLocationAddressCivicPtrInput is an input type that accepts SwitchcontrollerLocationAddressCivicArgs, SwitchcontrollerLocationAddressCivicPtr and SwitchcontrollerLocationAddressCivicPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerLocationAddressCivicPtrInput` via:
//
//	        SwitchcontrollerLocationAddressCivicArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerLocationAddressCivicPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerLocationAddressCivicPtrOutput() SwitchcontrollerLocationAddressCivicPtrOutput
	ToSwitchcontrollerLocationAddressCivicPtrOutputWithContext(context.Context) SwitchcontrollerLocationAddressCivicPtrOutput
}

type switchcontrollerLocationAddressCivicPtrType SwitchcontrollerLocationAddressCivicArgs

func SwitchcontrollerLocationAddressCivicPtr(v *SwitchcontrollerLocationAddressCivicArgs) SwitchcontrollerLocationAddressCivicPtrInput {
	return (*switchcontrollerLocationAddressCivicPtrType)(v)
}

func (*switchcontrollerLocationAddressCivicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerLocationAddressCivic)(nil)).Elem()
}

func (i *switchcontrollerLocationAddressCivicPtrType) ToSwitchcontrollerLocationAddressCivicPtrOutput() SwitchcontrollerLocationAddressCivicPtrOutput {
	return i.ToSwitchcontrollerLocationAddressCivicPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerLocationAddressCivicPtrType) ToSwitchcontrollerLocationAddressCivicPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationAddressCivicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLocationAddressCivicPtrOutput)
}

type SwitchcontrollerLocationAddressCivicOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLocationAddressCivicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLocationAddressCivic)(nil)).Elem()
}

func (o SwitchcontrollerLocationAddressCivicOutput) ToSwitchcontrollerLocationAddressCivicOutput() SwitchcontrollerLocationAddressCivicOutput {
	return o
}

func (o SwitchcontrollerLocationAddressCivicOutput) ToSwitchcontrollerLocationAddressCivicOutputWithContext(ctx context.Context) SwitchcontrollerLocationAddressCivicOutput {
	return o
}

func (o SwitchcontrollerLocationAddressCivicOutput) ToSwitchcontrollerLocationAddressCivicPtrOutput() SwitchcontrollerLocationAddressCivicPtrOutput {
	return o.ToSwitchcontrollerLocationAddressCivicPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerLocationAddressCivicOutput) ToSwitchcontrollerLocationAddressCivicPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationAddressCivicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerLocationAddressCivic) *SwitchcontrollerLocationAddressCivic {
		return &v
	}).(SwitchcontrollerLocationAddressCivicPtrOutput)
}

// Location additional details.
func (o SwitchcontrollerLocationAddressCivicOutput) Additional() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Additional }).(pulumi.StringPtrOutput)
}

// Location additional code details.
func (o SwitchcontrollerLocationAddressCivicOutput) AdditionalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.AdditionalCode }).(pulumi.StringPtrOutput)
}

// Location block details.
func (o SwitchcontrollerLocationAddressCivicOutput) Block() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Block }).(pulumi.StringPtrOutput)
}

// Location branch road details.
func (o SwitchcontrollerLocationAddressCivicOutput) BranchRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.BranchRoad }).(pulumi.StringPtrOutput)
}

// Location building details.
func (o SwitchcontrollerLocationAddressCivicOutput) Building() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Building }).(pulumi.StringPtrOutput)
}

// Location city details.
func (o SwitchcontrollerLocationAddressCivicOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Location city division details.
func (o SwitchcontrollerLocationAddressCivicOutput) CityDivision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.CityDivision }).(pulumi.StringPtrOutput)
}

// The two-letter ISO 3166 country code in capital ASCII letters eg. US, CA, DK, DE.
func (o SwitchcontrollerLocationAddressCivicOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// National subdivisions (state, canton, region, province, or prefecture).
func (o SwitchcontrollerLocationAddressCivicOutput) CountrySubdivision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.CountrySubdivision }).(pulumi.StringPtrOutput)
}

// County, parish, gun (JP), or district (IN).
func (o SwitchcontrollerLocationAddressCivicOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.County }).(pulumi.StringPtrOutput)
}

// Leading street direction.
func (o SwitchcontrollerLocationAddressCivicOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Floor.
func (o SwitchcontrollerLocationAddressCivicOutput) Floor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Floor }).(pulumi.StringPtrOutput)
}

// Landmark or vanity address.
func (o SwitchcontrollerLocationAddressCivicOutput) Landmark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Landmark }).(pulumi.StringPtrOutput)
}

// Language.
func (o SwitchcontrollerLocationAddressCivicOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// Name (residence and office occupant).
func (o SwitchcontrollerLocationAddressCivicOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// House number.
func (o SwitchcontrollerLocationAddressCivicOutput) Number() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Number }).(pulumi.StringPtrOutput)
}

// House number suffix.
func (o SwitchcontrollerLocationAddressCivicOutput) NumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.NumberSuffix }).(pulumi.StringPtrOutput)
}

// Parent key name.
func (o SwitchcontrollerLocationAddressCivicOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.ParentKey }).(pulumi.StringPtrOutput)
}

// Placetype.
func (o SwitchcontrollerLocationAddressCivicOutput) PlaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.PlaceType }).(pulumi.StringPtrOutput)
}

// Post office box (P.O. box).
func (o SwitchcontrollerLocationAddressCivicOutput) PostOfficeBox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.PostOfficeBox }).(pulumi.StringPtrOutput)
}

// Postal community name.
func (o SwitchcontrollerLocationAddressCivicOutput) PostalCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.PostalCommunity }).(pulumi.StringPtrOutput)
}

// Primary road name.
func (o SwitchcontrollerLocationAddressCivicOutput) PrimaryRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.PrimaryRoad }).(pulumi.StringPtrOutput)
}

// Road section.
func (o SwitchcontrollerLocationAddressCivicOutput) RoadSection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.RoadSection }).(pulumi.StringPtrOutput)
}

// Room number.
func (o SwitchcontrollerLocationAddressCivicOutput) Room() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Room }).(pulumi.StringPtrOutput)
}

// Script used to present the address information.
func (o SwitchcontrollerLocationAddressCivicOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Script }).(pulumi.StringPtrOutput)
}

// Seat number.
func (o SwitchcontrollerLocationAddressCivicOutput) Seat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Seat }).(pulumi.StringPtrOutput)
}

// Street.
func (o SwitchcontrollerLocationAddressCivicOutput) Street() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Street }).(pulumi.StringPtrOutput)
}

// Street name post modifier.
func (o SwitchcontrollerLocationAddressCivicOutput) StreetNamePostMod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.StreetNamePostMod }).(pulumi.StringPtrOutput)
}

// Street name pre modifier.
func (o SwitchcontrollerLocationAddressCivicOutput) StreetNamePreMod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.StreetNamePreMod }).(pulumi.StringPtrOutput)
}

// Street suffix.
func (o SwitchcontrollerLocationAddressCivicOutput) StreetSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.StreetSuffix }).(pulumi.StringPtrOutput)
}

// Sub branch road name.
func (o SwitchcontrollerLocationAddressCivicOutput) SubBranchRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.SubBranchRoad }).(pulumi.StringPtrOutput)
}

// Trailing street suffix.
func (o SwitchcontrollerLocationAddressCivicOutput) TrailingStrSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.TrailingStrSuffix }).(pulumi.StringPtrOutput)
}

// Unit (apartment, suite).
func (o SwitchcontrollerLocationAddressCivicOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Postal/zip code.
func (o SwitchcontrollerLocationAddressCivicOutput) Zip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationAddressCivic) *string { return v.Zip }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerLocationAddressCivicPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLocationAddressCivicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerLocationAddressCivic)(nil)).Elem()
}

func (o SwitchcontrollerLocationAddressCivicPtrOutput) ToSwitchcontrollerLocationAddressCivicPtrOutput() SwitchcontrollerLocationAddressCivicPtrOutput {
	return o
}

func (o SwitchcontrollerLocationAddressCivicPtrOutput) ToSwitchcontrollerLocationAddressCivicPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationAddressCivicPtrOutput {
	return o
}

func (o SwitchcontrollerLocationAddressCivicPtrOutput) Elem() SwitchcontrollerLocationAddressCivicOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) SwitchcontrollerLocationAddressCivic {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerLocationAddressCivic
		return ret
	}).(SwitchcontrollerLocationAddressCivicOutput)
}

// Location additional details.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Additional() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Additional
	}).(pulumi.StringPtrOutput)
}

// Location additional code details.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) AdditionalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalCode
	}).(pulumi.StringPtrOutput)
}

// Location block details.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Block() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Block
	}).(pulumi.StringPtrOutput)
}

// Location branch road details.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) BranchRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.BranchRoad
	}).(pulumi.StringPtrOutput)
}

// Location building details.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Building() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Building
	}).(pulumi.StringPtrOutput)
}

// Location city details.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Location city division details.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) CityDivision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.CityDivision
	}).(pulumi.StringPtrOutput)
}

// The two-letter ISO 3166 country code in capital ASCII letters eg. US, CA, DK, DE.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// National subdivisions (state, canton, region, province, or prefecture).
func (o SwitchcontrollerLocationAddressCivicPtrOutput) CountrySubdivision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.CountrySubdivision
	}).(pulumi.StringPtrOutput)
}

// County, parish, gun (JP), or district (IN).
func (o SwitchcontrollerLocationAddressCivicPtrOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.County
	}).(pulumi.StringPtrOutput)
}

// Leading street direction.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Direction
	}).(pulumi.StringPtrOutput)
}

// Floor.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Floor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Floor
	}).(pulumi.StringPtrOutput)
}

// Landmark or vanity address.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Landmark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Landmark
	}).(pulumi.StringPtrOutput)
}

// Language.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

// Name (residence and office occupant).
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// House number.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Number() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.StringPtrOutput)
}

// House number suffix.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) NumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.NumberSuffix
	}).(pulumi.StringPtrOutput)
}

// Parent key name.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.ParentKey
	}).(pulumi.StringPtrOutput)
}

// Placetype.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) PlaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.PlaceType
	}).(pulumi.StringPtrOutput)
}

// Post office box (P.O. box).
func (o SwitchcontrollerLocationAddressCivicPtrOutput) PostOfficeBox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.PostOfficeBox
	}).(pulumi.StringPtrOutput)
}

// Postal community name.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) PostalCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.PostalCommunity
	}).(pulumi.StringPtrOutput)
}

// Primary road name.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) PrimaryRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryRoad
	}).(pulumi.StringPtrOutput)
}

// Road section.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) RoadSection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.RoadSection
	}).(pulumi.StringPtrOutput)
}

// Room number.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Room() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Room
	}).(pulumi.StringPtrOutput)
}

// Script used to present the address information.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Script
	}).(pulumi.StringPtrOutput)
}

// Seat number.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Seat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Seat
	}).(pulumi.StringPtrOutput)
}

// Street.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Street() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Street
	}).(pulumi.StringPtrOutput)
}

// Street name post modifier.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) StreetNamePostMod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.StreetNamePostMod
	}).(pulumi.StringPtrOutput)
}

// Street name pre modifier.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) StreetNamePreMod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.StreetNamePreMod
	}).(pulumi.StringPtrOutput)
}

// Street suffix.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) StreetSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.StreetSuffix
	}).(pulumi.StringPtrOutput)
}

// Sub branch road name.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) SubBranchRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.SubBranchRoad
	}).(pulumi.StringPtrOutput)
}

// Trailing street suffix.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) TrailingStrSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.TrailingStrSuffix
	}).(pulumi.StringPtrOutput)
}

// Unit (apartment, suite).
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// Postal/zip code.
func (o SwitchcontrollerLocationAddressCivicPtrOutput) Zip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Zip
	}).(pulumi.StringPtrOutput)
}

type SwitchcontrollerLocationCoordinates struct {
	// +/- Floating point no. eg. 117.47.
	Altitude *string `pulumi:"altitude"`
	// m ( meters), f ( floors). Valid values: `m`, `f`.
	AltitudeUnit *string `pulumi:"altitudeUnit"`
	// WGS84, NAD83, NAD83/MLLW. Valid values: `WGS84`, `NAD83`, `NAD83/MLLW`.
	Datum *string `pulumi:"datum"`
	// Floating point start with ( +/- )  or end with ( N or S ) eg. +/-16.67 or 16.67N.
	Latitude *string `pulumi:"latitude"`
	// Floating point start with ( +/- )  or end with ( E or W ) eg. +/-26.789 or 26.789E.
	Longitude *string `pulumi:"longitude"`
	// Parent key name.
	ParentKey *string `pulumi:"parentKey"`
}

// SwitchcontrollerLocationCoordinatesInput is an input type that accepts SwitchcontrollerLocationCoordinatesArgs and SwitchcontrollerLocationCoordinatesOutput values.
// You can construct a concrete instance of `SwitchcontrollerLocationCoordinatesInput` via:
//
//	SwitchcontrollerLocationCoordinatesArgs{...}
type SwitchcontrollerLocationCoordinatesInput interface {
	pulumi.Input

	ToSwitchcontrollerLocationCoordinatesOutput() SwitchcontrollerLocationCoordinatesOutput
	ToSwitchcontrollerLocationCoordinatesOutputWithContext(context.Context) SwitchcontrollerLocationCoordinatesOutput
}

type SwitchcontrollerLocationCoordinatesArgs struct {
	// +/- Floating point no. eg. 117.47.
	Altitude pulumi.StringPtrInput `pulumi:"altitude"`
	// m ( meters), f ( floors). Valid values: `m`, `f`.
	AltitudeUnit pulumi.StringPtrInput `pulumi:"altitudeUnit"`
	// WGS84, NAD83, NAD83/MLLW. Valid values: `WGS84`, `NAD83`, `NAD83/MLLW`.
	Datum pulumi.StringPtrInput `pulumi:"datum"`
	// Floating point start with ( +/- )  or end with ( N or S ) eg. +/-16.67 or 16.67N.
	Latitude pulumi.StringPtrInput `pulumi:"latitude"`
	// Floating point start with ( +/- )  or end with ( E or W ) eg. +/-26.789 or 26.789E.
	Longitude pulumi.StringPtrInput `pulumi:"longitude"`
	// Parent key name.
	ParentKey pulumi.StringPtrInput `pulumi:"parentKey"`
}

func (SwitchcontrollerLocationCoordinatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLocationCoordinates)(nil)).Elem()
}

func (i SwitchcontrollerLocationCoordinatesArgs) ToSwitchcontrollerLocationCoordinatesOutput() SwitchcontrollerLocationCoordinatesOutput {
	return i.ToSwitchcontrollerLocationCoordinatesOutputWithContext(context.Background())
}

func (i SwitchcontrollerLocationCoordinatesArgs) ToSwitchcontrollerLocationCoordinatesOutputWithContext(ctx context.Context) SwitchcontrollerLocationCoordinatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLocationCoordinatesOutput)
}

func (i SwitchcontrollerLocationCoordinatesArgs) ToSwitchcontrollerLocationCoordinatesPtrOutput() SwitchcontrollerLocationCoordinatesPtrOutput {
	return i.ToSwitchcontrollerLocationCoordinatesPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerLocationCoordinatesArgs) ToSwitchcontrollerLocationCoordinatesPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationCoordinatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLocationCoordinatesOutput).ToSwitchcontrollerLocationCoordinatesPtrOutputWithContext(ctx)
}

// SwitchcontrollerLocationCoordinatesPtrInput is an input type that accepts SwitchcontrollerLocationCoordinatesArgs, SwitchcontrollerLocationCoordinatesPtr and SwitchcontrollerLocationCoordinatesPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerLocationCoordinatesPtrInput` via:
//
//	        SwitchcontrollerLocationCoordinatesArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerLocationCoordinatesPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerLocationCoordinatesPtrOutput() SwitchcontrollerLocationCoordinatesPtrOutput
	ToSwitchcontrollerLocationCoordinatesPtrOutputWithContext(context.Context) SwitchcontrollerLocationCoordinatesPtrOutput
}

type switchcontrollerLocationCoordinatesPtrType SwitchcontrollerLocationCoordinatesArgs

func SwitchcontrollerLocationCoordinatesPtr(v *SwitchcontrollerLocationCoordinatesArgs) SwitchcontrollerLocationCoordinatesPtrInput {
	return (*switchcontrollerLocationCoordinatesPtrType)(v)
}

func (*switchcontrollerLocationCoordinatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerLocationCoordinates)(nil)).Elem()
}

func (i *switchcontrollerLocationCoordinatesPtrType) ToSwitchcontrollerLocationCoordinatesPtrOutput() SwitchcontrollerLocationCoordinatesPtrOutput {
	return i.ToSwitchcontrollerLocationCoordinatesPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerLocationCoordinatesPtrType) ToSwitchcontrollerLocationCoordinatesPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationCoordinatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLocationCoordinatesPtrOutput)
}

type SwitchcontrollerLocationCoordinatesOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLocationCoordinatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLocationCoordinates)(nil)).Elem()
}

func (o SwitchcontrollerLocationCoordinatesOutput) ToSwitchcontrollerLocationCoordinatesOutput() SwitchcontrollerLocationCoordinatesOutput {
	return o
}

func (o SwitchcontrollerLocationCoordinatesOutput) ToSwitchcontrollerLocationCoordinatesOutputWithContext(ctx context.Context) SwitchcontrollerLocationCoordinatesOutput {
	return o
}

func (o SwitchcontrollerLocationCoordinatesOutput) ToSwitchcontrollerLocationCoordinatesPtrOutput() SwitchcontrollerLocationCoordinatesPtrOutput {
	return o.ToSwitchcontrollerLocationCoordinatesPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerLocationCoordinatesOutput) ToSwitchcontrollerLocationCoordinatesPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationCoordinatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerLocationCoordinates) *SwitchcontrollerLocationCoordinates {
		return &v
	}).(SwitchcontrollerLocationCoordinatesPtrOutput)
}

// +/- Floating point no. eg. 117.47.
func (o SwitchcontrollerLocationCoordinatesOutput) Altitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationCoordinates) *string { return v.Altitude }).(pulumi.StringPtrOutput)
}

// m ( meters), f ( floors). Valid values: `m`, `f`.
func (o SwitchcontrollerLocationCoordinatesOutput) AltitudeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationCoordinates) *string { return v.AltitudeUnit }).(pulumi.StringPtrOutput)
}

// WGS84, NAD83, NAD83/MLLW. Valid values: `WGS84`, `NAD83`, `NAD83/MLLW`.
func (o SwitchcontrollerLocationCoordinatesOutput) Datum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationCoordinates) *string { return v.Datum }).(pulumi.StringPtrOutput)
}

// Floating point start with ( +/- )  or end with ( N or S ) eg. +/-16.67 or 16.67N.
func (o SwitchcontrollerLocationCoordinatesOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationCoordinates) *string { return v.Latitude }).(pulumi.StringPtrOutput)
}

// Floating point start with ( +/- )  or end with ( E or W ) eg. +/-26.789 or 26.789E.
func (o SwitchcontrollerLocationCoordinatesOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationCoordinates) *string { return v.Longitude }).(pulumi.StringPtrOutput)
}

// Parent key name.
func (o SwitchcontrollerLocationCoordinatesOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationCoordinates) *string { return v.ParentKey }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerLocationCoordinatesPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLocationCoordinatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerLocationCoordinates)(nil)).Elem()
}

func (o SwitchcontrollerLocationCoordinatesPtrOutput) ToSwitchcontrollerLocationCoordinatesPtrOutput() SwitchcontrollerLocationCoordinatesPtrOutput {
	return o
}

func (o SwitchcontrollerLocationCoordinatesPtrOutput) ToSwitchcontrollerLocationCoordinatesPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationCoordinatesPtrOutput {
	return o
}

func (o SwitchcontrollerLocationCoordinatesPtrOutput) Elem() SwitchcontrollerLocationCoordinatesOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationCoordinates) SwitchcontrollerLocationCoordinates {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerLocationCoordinates
		return ret
	}).(SwitchcontrollerLocationCoordinatesOutput)
}

// +/- Floating point no. eg. 117.47.
func (o SwitchcontrollerLocationCoordinatesPtrOutput) Altitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.Altitude
	}).(pulumi.StringPtrOutput)
}

// m ( meters), f ( floors). Valid values: `m`, `f`.
func (o SwitchcontrollerLocationCoordinatesPtrOutput) AltitudeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.AltitudeUnit
	}).(pulumi.StringPtrOutput)
}

// WGS84, NAD83, NAD83/MLLW. Valid values: `WGS84`, `NAD83`, `NAD83/MLLW`.
func (o SwitchcontrollerLocationCoordinatesPtrOutput) Datum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.Datum
	}).(pulumi.StringPtrOutput)
}

// Floating point start with ( +/- )  or end with ( N or S ) eg. +/-16.67 or 16.67N.
func (o SwitchcontrollerLocationCoordinatesPtrOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.Latitude
	}).(pulumi.StringPtrOutput)
}

// Floating point start with ( +/- )  or end with ( E or W ) eg. +/-26.789 or 26.789E.
func (o SwitchcontrollerLocationCoordinatesPtrOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.Longitude
	}).(pulumi.StringPtrOutput)
}

// Parent key name.
func (o SwitchcontrollerLocationCoordinatesPtrOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.ParentKey
	}).(pulumi.StringPtrOutput)
}

type SwitchcontrollerLocationElinNumber struct {
	// Configure ELIN callback number.
	ElinNum *string `pulumi:"elinNum"`
	// Parent key name.
	ParentKey *string `pulumi:"parentKey"`
}

// SwitchcontrollerLocationElinNumberInput is an input type that accepts SwitchcontrollerLocationElinNumberArgs and SwitchcontrollerLocationElinNumberOutput values.
// You can construct a concrete instance of `SwitchcontrollerLocationElinNumberInput` via:
//
//	SwitchcontrollerLocationElinNumberArgs{...}
type SwitchcontrollerLocationElinNumberInput interface {
	pulumi.Input

	ToSwitchcontrollerLocationElinNumberOutput() SwitchcontrollerLocationElinNumberOutput
	ToSwitchcontrollerLocationElinNumberOutputWithContext(context.Context) SwitchcontrollerLocationElinNumberOutput
}

type SwitchcontrollerLocationElinNumberArgs struct {
	// Configure ELIN callback number.
	ElinNum pulumi.StringPtrInput `pulumi:"elinNum"`
	// Parent key name.
	ParentKey pulumi.StringPtrInput `pulumi:"parentKey"`
}

func (SwitchcontrollerLocationElinNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLocationElinNumber)(nil)).Elem()
}

func (i SwitchcontrollerLocationElinNumberArgs) ToSwitchcontrollerLocationElinNumberOutput() SwitchcontrollerLocationElinNumberOutput {
	return i.ToSwitchcontrollerLocationElinNumberOutputWithContext(context.Background())
}

func (i SwitchcontrollerLocationElinNumberArgs) ToSwitchcontrollerLocationElinNumberOutputWithContext(ctx context.Context) SwitchcontrollerLocationElinNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLocationElinNumberOutput)
}

func (i SwitchcontrollerLocationElinNumberArgs) ToSwitchcontrollerLocationElinNumberPtrOutput() SwitchcontrollerLocationElinNumberPtrOutput {
	return i.ToSwitchcontrollerLocationElinNumberPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerLocationElinNumberArgs) ToSwitchcontrollerLocationElinNumberPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationElinNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLocationElinNumberOutput).ToSwitchcontrollerLocationElinNumberPtrOutputWithContext(ctx)
}

// SwitchcontrollerLocationElinNumberPtrInput is an input type that accepts SwitchcontrollerLocationElinNumberArgs, SwitchcontrollerLocationElinNumberPtr and SwitchcontrollerLocationElinNumberPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerLocationElinNumberPtrInput` via:
//
//	        SwitchcontrollerLocationElinNumberArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerLocationElinNumberPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerLocationElinNumberPtrOutput() SwitchcontrollerLocationElinNumberPtrOutput
	ToSwitchcontrollerLocationElinNumberPtrOutputWithContext(context.Context) SwitchcontrollerLocationElinNumberPtrOutput
}

type switchcontrollerLocationElinNumberPtrType SwitchcontrollerLocationElinNumberArgs

func SwitchcontrollerLocationElinNumberPtr(v *SwitchcontrollerLocationElinNumberArgs) SwitchcontrollerLocationElinNumberPtrInput {
	return (*switchcontrollerLocationElinNumberPtrType)(v)
}

func (*switchcontrollerLocationElinNumberPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerLocationElinNumber)(nil)).Elem()
}

func (i *switchcontrollerLocationElinNumberPtrType) ToSwitchcontrollerLocationElinNumberPtrOutput() SwitchcontrollerLocationElinNumberPtrOutput {
	return i.ToSwitchcontrollerLocationElinNumberPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerLocationElinNumberPtrType) ToSwitchcontrollerLocationElinNumberPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationElinNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLocationElinNumberPtrOutput)
}

type SwitchcontrollerLocationElinNumberOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLocationElinNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerLocationElinNumber)(nil)).Elem()
}

func (o SwitchcontrollerLocationElinNumberOutput) ToSwitchcontrollerLocationElinNumberOutput() SwitchcontrollerLocationElinNumberOutput {
	return o
}

func (o SwitchcontrollerLocationElinNumberOutput) ToSwitchcontrollerLocationElinNumberOutputWithContext(ctx context.Context) SwitchcontrollerLocationElinNumberOutput {
	return o
}

func (o SwitchcontrollerLocationElinNumberOutput) ToSwitchcontrollerLocationElinNumberPtrOutput() SwitchcontrollerLocationElinNumberPtrOutput {
	return o.ToSwitchcontrollerLocationElinNumberPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerLocationElinNumberOutput) ToSwitchcontrollerLocationElinNumberPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationElinNumberPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerLocationElinNumber) *SwitchcontrollerLocationElinNumber {
		return &v
	}).(SwitchcontrollerLocationElinNumberPtrOutput)
}

// Configure ELIN callback number.
func (o SwitchcontrollerLocationElinNumberOutput) ElinNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationElinNumber) *string { return v.ElinNum }).(pulumi.StringPtrOutput)
}

// Parent key name.
func (o SwitchcontrollerLocationElinNumberOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerLocationElinNumber) *string { return v.ParentKey }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerLocationElinNumberPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLocationElinNumberPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerLocationElinNumber)(nil)).Elem()
}

func (o SwitchcontrollerLocationElinNumberPtrOutput) ToSwitchcontrollerLocationElinNumberPtrOutput() SwitchcontrollerLocationElinNumberPtrOutput {
	return o
}

func (o SwitchcontrollerLocationElinNumberPtrOutput) ToSwitchcontrollerLocationElinNumberPtrOutputWithContext(ctx context.Context) SwitchcontrollerLocationElinNumberPtrOutput {
	return o
}

func (o SwitchcontrollerLocationElinNumberPtrOutput) Elem() SwitchcontrollerLocationElinNumberOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationElinNumber) SwitchcontrollerLocationElinNumber {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerLocationElinNumber
		return ret
	}).(SwitchcontrollerLocationElinNumberOutput)
}

// Configure ELIN callback number.
func (o SwitchcontrollerLocationElinNumberPtrOutput) ElinNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationElinNumber) *string {
		if v == nil {
			return nil
		}
		return v.ElinNum
	}).(pulumi.StringPtrOutput)
}

// Parent key name.
func (o SwitchcontrollerLocationElinNumberPtrOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLocationElinNumber) *string {
		if v == nil {
			return nil
		}
		return v.ParentKey
	}).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchCustomCommand struct {
	// List of FortiSwitch commands.
	CommandEntry *string `pulumi:"commandEntry"`
	// Names of commands to be pushed to this FortiSwitch device, as configured under config switch-controller custom-command.
	CommandName *string `pulumi:"commandName"`
}

// SwitchcontrollerManagedswitchCustomCommandInput is an input type that accepts SwitchcontrollerManagedswitchCustomCommandArgs and SwitchcontrollerManagedswitchCustomCommandOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchCustomCommandInput` via:
//
//	SwitchcontrollerManagedswitchCustomCommandArgs{...}
type SwitchcontrollerManagedswitchCustomCommandInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchCustomCommandOutput() SwitchcontrollerManagedswitchCustomCommandOutput
	ToSwitchcontrollerManagedswitchCustomCommandOutputWithContext(context.Context) SwitchcontrollerManagedswitchCustomCommandOutput
}

type SwitchcontrollerManagedswitchCustomCommandArgs struct {
	// List of FortiSwitch commands.
	CommandEntry pulumi.StringPtrInput `pulumi:"commandEntry"`
	// Names of commands to be pushed to this FortiSwitch device, as configured under config switch-controller custom-command.
	CommandName pulumi.StringPtrInput `pulumi:"commandName"`
}

func (SwitchcontrollerManagedswitchCustomCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchCustomCommand)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchCustomCommandArgs) ToSwitchcontrollerManagedswitchCustomCommandOutput() SwitchcontrollerManagedswitchCustomCommandOutput {
	return i.ToSwitchcontrollerManagedswitchCustomCommandOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchCustomCommandArgs) ToSwitchcontrollerManagedswitchCustomCommandOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchCustomCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchCustomCommandOutput)
}

// SwitchcontrollerManagedswitchCustomCommandArrayInput is an input type that accepts SwitchcontrollerManagedswitchCustomCommandArray and SwitchcontrollerManagedswitchCustomCommandArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchCustomCommandArrayInput` via:
//
//	SwitchcontrollerManagedswitchCustomCommandArray{ SwitchcontrollerManagedswitchCustomCommandArgs{...} }
type SwitchcontrollerManagedswitchCustomCommandArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchCustomCommandArrayOutput() SwitchcontrollerManagedswitchCustomCommandArrayOutput
	ToSwitchcontrollerManagedswitchCustomCommandArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchCustomCommandArrayOutput
}

type SwitchcontrollerManagedswitchCustomCommandArray []SwitchcontrollerManagedswitchCustomCommandInput

func (SwitchcontrollerManagedswitchCustomCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchCustomCommand)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchCustomCommandArray) ToSwitchcontrollerManagedswitchCustomCommandArrayOutput() SwitchcontrollerManagedswitchCustomCommandArrayOutput {
	return i.ToSwitchcontrollerManagedswitchCustomCommandArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchCustomCommandArray) ToSwitchcontrollerManagedswitchCustomCommandArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchCustomCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchCustomCommandArrayOutput)
}

type SwitchcontrollerManagedswitchCustomCommandOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchCustomCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchCustomCommand)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchCustomCommandOutput) ToSwitchcontrollerManagedswitchCustomCommandOutput() SwitchcontrollerManagedswitchCustomCommandOutput {
	return o
}

func (o SwitchcontrollerManagedswitchCustomCommandOutput) ToSwitchcontrollerManagedswitchCustomCommandOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchCustomCommandOutput {
	return o
}

// List of FortiSwitch commands.
func (o SwitchcontrollerManagedswitchCustomCommandOutput) CommandEntry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchCustomCommand) *string { return v.CommandEntry }).(pulumi.StringPtrOutput)
}

// Names of commands to be pushed to this FortiSwitch device, as configured under config switch-controller custom-command.
func (o SwitchcontrollerManagedswitchCustomCommandOutput) CommandName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchCustomCommand) *string { return v.CommandName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchCustomCommandArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchCustomCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchCustomCommand)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchCustomCommandArrayOutput) ToSwitchcontrollerManagedswitchCustomCommandArrayOutput() SwitchcontrollerManagedswitchCustomCommandArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchCustomCommandArrayOutput) ToSwitchcontrollerManagedswitchCustomCommandArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchCustomCommandArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchCustomCommandArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchCustomCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchCustomCommand {
		return vs[0].([]SwitchcontrollerManagedswitchCustomCommand)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchCustomCommandOutput)
}

type SwitchcontrollerManagedswitchIgmpSnooping struct {
	// Maximum time to retain a multicast snooping entry for which no packets have been seen (15 - 3600 sec, default = 300).
	AgingTime *int `pulumi:"agingTime"`
	// Enable/disable unknown multicast flooding. Valid values: `enable`, `disable`.
	FloodUnknownMulticast *string `pulumi:"floodUnknownMulticast"`
	// Enable/disable overriding the global IGMP snooping configuration. Valid values: `enable`, `disable`.
	LocalOverride *string `pulumi:"localOverride"`
	// Configure IGMP snooping VLAN. The structure of `vlans` block is documented below.
	Vlans []SwitchcontrollerManagedswitchIgmpSnoopingVlan `pulumi:"vlans"`
}

// SwitchcontrollerManagedswitchIgmpSnoopingInput is an input type that accepts SwitchcontrollerManagedswitchIgmpSnoopingArgs and SwitchcontrollerManagedswitchIgmpSnoopingOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchIgmpSnoopingInput` via:
//
//	SwitchcontrollerManagedswitchIgmpSnoopingArgs{...}
type SwitchcontrollerManagedswitchIgmpSnoopingInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchIgmpSnoopingOutput() SwitchcontrollerManagedswitchIgmpSnoopingOutput
	ToSwitchcontrollerManagedswitchIgmpSnoopingOutputWithContext(context.Context) SwitchcontrollerManagedswitchIgmpSnoopingOutput
}

type SwitchcontrollerManagedswitchIgmpSnoopingArgs struct {
	// Maximum time to retain a multicast snooping entry for which no packets have been seen (15 - 3600 sec, default = 300).
	AgingTime pulumi.IntPtrInput `pulumi:"agingTime"`
	// Enable/disable unknown multicast flooding. Valid values: `enable`, `disable`.
	FloodUnknownMulticast pulumi.StringPtrInput `pulumi:"floodUnknownMulticast"`
	// Enable/disable overriding the global IGMP snooping configuration. Valid values: `enable`, `disable`.
	LocalOverride pulumi.StringPtrInput `pulumi:"localOverride"`
	// Configure IGMP snooping VLAN. The structure of `vlans` block is documented below.
	Vlans SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayInput `pulumi:"vlans"`
}

func (SwitchcontrollerManagedswitchIgmpSnoopingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchIgmpSnooping)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchIgmpSnoopingArgs) ToSwitchcontrollerManagedswitchIgmpSnoopingOutput() SwitchcontrollerManagedswitchIgmpSnoopingOutput {
	return i.ToSwitchcontrollerManagedswitchIgmpSnoopingOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchIgmpSnoopingArgs) ToSwitchcontrollerManagedswitchIgmpSnoopingOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIgmpSnoopingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchIgmpSnoopingOutput)
}

func (i SwitchcontrollerManagedswitchIgmpSnoopingArgs) ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutput() SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput {
	return i.ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchIgmpSnoopingArgs) ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchIgmpSnoopingOutput).ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutputWithContext(ctx)
}

// SwitchcontrollerManagedswitchIgmpSnoopingPtrInput is an input type that accepts SwitchcontrollerManagedswitchIgmpSnoopingArgs, SwitchcontrollerManagedswitchIgmpSnoopingPtr and SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchIgmpSnoopingPtrInput` via:
//
//	        SwitchcontrollerManagedswitchIgmpSnoopingArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerManagedswitchIgmpSnoopingPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutput() SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput
	ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutputWithContext(context.Context) SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput
}

type switchcontrollerManagedswitchIgmpSnoopingPtrType SwitchcontrollerManagedswitchIgmpSnoopingArgs

func SwitchcontrollerManagedswitchIgmpSnoopingPtr(v *SwitchcontrollerManagedswitchIgmpSnoopingArgs) SwitchcontrollerManagedswitchIgmpSnoopingPtrInput {
	return (*switchcontrollerManagedswitchIgmpSnoopingPtrType)(v)
}

func (*switchcontrollerManagedswitchIgmpSnoopingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchIgmpSnooping)(nil)).Elem()
}

func (i *switchcontrollerManagedswitchIgmpSnoopingPtrType) ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutput() SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput {
	return i.ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerManagedswitchIgmpSnoopingPtrType) ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput)
}

type SwitchcontrollerManagedswitchIgmpSnoopingOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchIgmpSnoopingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchIgmpSnooping)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingOutput) ToSwitchcontrollerManagedswitchIgmpSnoopingOutput() SwitchcontrollerManagedswitchIgmpSnoopingOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingOutput) ToSwitchcontrollerManagedswitchIgmpSnoopingOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIgmpSnoopingOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingOutput) ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutput() SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput {
	return o.ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingOutput) ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerManagedswitchIgmpSnooping) *SwitchcontrollerManagedswitchIgmpSnooping {
		return &v
	}).(SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput)
}

// Maximum time to retain a multicast snooping entry for which no packets have been seen (15 - 3600 sec, default = 300).
func (o SwitchcontrollerManagedswitchIgmpSnoopingOutput) AgingTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIgmpSnooping) *int { return v.AgingTime }).(pulumi.IntPtrOutput)
}

// Enable/disable unknown multicast flooding. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchIgmpSnoopingOutput) FloodUnknownMulticast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIgmpSnooping) *string { return v.FloodUnknownMulticast }).(pulumi.StringPtrOutput)
}

// Enable/disable overriding the global IGMP snooping configuration. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchIgmpSnoopingOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIgmpSnooping) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

// Configure IGMP snooping VLAN. The structure of `vlans` block is documented below.
func (o SwitchcontrollerManagedswitchIgmpSnoopingOutput) Vlans() SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIgmpSnooping) []SwitchcontrollerManagedswitchIgmpSnoopingVlan {
		return v.Vlans
	}).(SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput)
}

type SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchIgmpSnooping)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput) ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutput() SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput) ToSwitchcontrollerManagedswitchIgmpSnoopingPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput) Elem() SwitchcontrollerManagedswitchIgmpSnoopingOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchIgmpSnooping) SwitchcontrollerManagedswitchIgmpSnooping {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerManagedswitchIgmpSnooping
		return ret
	}).(SwitchcontrollerManagedswitchIgmpSnoopingOutput)
}

// Maximum time to retain a multicast snooping entry for which no packets have been seen (15 - 3600 sec, default = 300).
func (o SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput) AgingTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchIgmpSnooping) *int {
		if v == nil {
			return nil
		}
		return v.AgingTime
	}).(pulumi.IntPtrOutput)
}

// Enable/disable unknown multicast flooding. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput) FloodUnknownMulticast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchIgmpSnooping) *string {
		if v == nil {
			return nil
		}
		return v.FloodUnknownMulticast
	}).(pulumi.StringPtrOutput)
}

// Enable/disable overriding the global IGMP snooping configuration. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchIgmpSnooping) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

// Configure IGMP snooping VLAN. The structure of `vlans` block is documented below.
func (o SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput) Vlans() SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchIgmpSnooping) []SwitchcontrollerManagedswitchIgmpSnoopingVlan {
		if v == nil {
			return nil
		}
		return v.Vlans
	}).(SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput)
}

type SwitchcontrollerManagedswitchIgmpSnoopingVlan struct {
	// IGMP snooping proxy for the VLAN interface. Valid values: `disable`, `enable`, `global`.
	Proxy *string `pulumi:"proxy"`
	// Enable/disable IGMP snooping querier for the VLAN interface. Valid values: `disable`, `enable`.
	Querier *string `pulumi:"querier"`
	// IGMP snooping querier address.
	QuerierAddr *string `pulumi:"querierAddr"`
	// IGMP snooping querier version.
	//
	// The `n8021xSettings` block supports:
	Version *int `pulumi:"version"`
	// List of FortiSwitch VLANs.
	VlanName *string `pulumi:"vlanName"`
}

// SwitchcontrollerManagedswitchIgmpSnoopingVlanInput is an input type that accepts SwitchcontrollerManagedswitchIgmpSnoopingVlanArgs and SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchIgmpSnoopingVlanInput` via:
//
//	SwitchcontrollerManagedswitchIgmpSnoopingVlanArgs{...}
type SwitchcontrollerManagedswitchIgmpSnoopingVlanInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchIgmpSnoopingVlanOutput() SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput
	ToSwitchcontrollerManagedswitchIgmpSnoopingVlanOutputWithContext(context.Context) SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput
}

type SwitchcontrollerManagedswitchIgmpSnoopingVlanArgs struct {
	// IGMP snooping proxy for the VLAN interface. Valid values: `disable`, `enable`, `global`.
	Proxy pulumi.StringPtrInput `pulumi:"proxy"`
	// Enable/disable IGMP snooping querier for the VLAN interface. Valid values: `disable`, `enable`.
	Querier pulumi.StringPtrInput `pulumi:"querier"`
	// IGMP snooping querier address.
	QuerierAddr pulumi.StringPtrInput `pulumi:"querierAddr"`
	// IGMP snooping querier version.
	//
	// The `n8021xSettings` block supports:
	Version pulumi.IntPtrInput `pulumi:"version"`
	// List of FortiSwitch VLANs.
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchcontrollerManagedswitchIgmpSnoopingVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchIgmpSnoopingVlan)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchIgmpSnoopingVlanArgs) ToSwitchcontrollerManagedswitchIgmpSnoopingVlanOutput() SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput {
	return i.ToSwitchcontrollerManagedswitchIgmpSnoopingVlanOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchIgmpSnoopingVlanArgs) ToSwitchcontrollerManagedswitchIgmpSnoopingVlanOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput)
}

// SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayInput is an input type that accepts SwitchcontrollerManagedswitchIgmpSnoopingVlanArray and SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayInput` via:
//
//	SwitchcontrollerManagedswitchIgmpSnoopingVlanArray{ SwitchcontrollerManagedswitchIgmpSnoopingVlanArgs{...} }
type SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput() SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput
	ToSwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput
}

type SwitchcontrollerManagedswitchIgmpSnoopingVlanArray []SwitchcontrollerManagedswitchIgmpSnoopingVlanInput

func (SwitchcontrollerManagedswitchIgmpSnoopingVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchIgmpSnoopingVlan)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchIgmpSnoopingVlanArray) ToSwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput() SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput {
	return i.ToSwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchIgmpSnoopingVlanArray) ToSwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput)
}

type SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchIgmpSnoopingVlan)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput) ToSwitchcontrollerManagedswitchIgmpSnoopingVlanOutput() SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput) ToSwitchcontrollerManagedswitchIgmpSnoopingVlanOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput {
	return o
}

// IGMP snooping proxy for the VLAN interface. Valid values: `disable`, `enable`, `global`.
func (o SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIgmpSnoopingVlan) *string { return v.Proxy }).(pulumi.StringPtrOutput)
}

// Enable/disable IGMP snooping querier for the VLAN interface. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput) Querier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIgmpSnoopingVlan) *string { return v.Querier }).(pulumi.StringPtrOutput)
}

// IGMP snooping querier address.
func (o SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput) QuerierAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIgmpSnoopingVlan) *string { return v.QuerierAddr }).(pulumi.StringPtrOutput)
}

// IGMP snooping querier version.
//
// The `n8021xSettings` block supports:
func (o SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIgmpSnoopingVlan) *int { return v.Version }).(pulumi.IntPtrOutput)
}

// List of FortiSwitch VLANs.
func (o SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIgmpSnoopingVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchIgmpSnoopingVlan)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput) ToSwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput() SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput) ToSwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchIgmpSnoopingVlan {
		return vs[0].([]SwitchcontrollerManagedswitchIgmpSnoopingVlan)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput)
}

type SwitchcontrollerManagedswitchIpSourceGuard struct {
	// IP and MAC address configuration. The structure of `bindingEntry` block is documented below.
	BindingEntries []SwitchcontrollerManagedswitchIpSourceGuardBindingEntry `pulumi:"bindingEntries"`
	// Description.
	Description *string `pulumi:"description"`
	// Ingress interface to which source guard is bound.
	Port *string `pulumi:"port"`
}

// SwitchcontrollerManagedswitchIpSourceGuardInput is an input type that accepts SwitchcontrollerManagedswitchIpSourceGuardArgs and SwitchcontrollerManagedswitchIpSourceGuardOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchIpSourceGuardInput` via:
//
//	SwitchcontrollerManagedswitchIpSourceGuardArgs{...}
type SwitchcontrollerManagedswitchIpSourceGuardInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchIpSourceGuardOutput() SwitchcontrollerManagedswitchIpSourceGuardOutput
	ToSwitchcontrollerManagedswitchIpSourceGuardOutputWithContext(context.Context) SwitchcontrollerManagedswitchIpSourceGuardOutput
}

type SwitchcontrollerManagedswitchIpSourceGuardArgs struct {
	// IP and MAC address configuration. The structure of `bindingEntry` block is documented below.
	BindingEntries SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayInput `pulumi:"bindingEntries"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Ingress interface to which source guard is bound.
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (SwitchcontrollerManagedswitchIpSourceGuardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchIpSourceGuard)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchIpSourceGuardArgs) ToSwitchcontrollerManagedswitchIpSourceGuardOutput() SwitchcontrollerManagedswitchIpSourceGuardOutput {
	return i.ToSwitchcontrollerManagedswitchIpSourceGuardOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchIpSourceGuardArgs) ToSwitchcontrollerManagedswitchIpSourceGuardOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIpSourceGuardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchIpSourceGuardOutput)
}

// SwitchcontrollerManagedswitchIpSourceGuardArrayInput is an input type that accepts SwitchcontrollerManagedswitchIpSourceGuardArray and SwitchcontrollerManagedswitchIpSourceGuardArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchIpSourceGuardArrayInput` via:
//
//	SwitchcontrollerManagedswitchIpSourceGuardArray{ SwitchcontrollerManagedswitchIpSourceGuardArgs{...} }
type SwitchcontrollerManagedswitchIpSourceGuardArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchIpSourceGuardArrayOutput() SwitchcontrollerManagedswitchIpSourceGuardArrayOutput
	ToSwitchcontrollerManagedswitchIpSourceGuardArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchIpSourceGuardArrayOutput
}

type SwitchcontrollerManagedswitchIpSourceGuardArray []SwitchcontrollerManagedswitchIpSourceGuardInput

func (SwitchcontrollerManagedswitchIpSourceGuardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchIpSourceGuard)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchIpSourceGuardArray) ToSwitchcontrollerManagedswitchIpSourceGuardArrayOutput() SwitchcontrollerManagedswitchIpSourceGuardArrayOutput {
	return i.ToSwitchcontrollerManagedswitchIpSourceGuardArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchIpSourceGuardArray) ToSwitchcontrollerManagedswitchIpSourceGuardArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIpSourceGuardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchIpSourceGuardArrayOutput)
}

type SwitchcontrollerManagedswitchIpSourceGuardOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchIpSourceGuardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchIpSourceGuard)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchIpSourceGuardOutput) ToSwitchcontrollerManagedswitchIpSourceGuardOutput() SwitchcontrollerManagedswitchIpSourceGuardOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIpSourceGuardOutput) ToSwitchcontrollerManagedswitchIpSourceGuardOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIpSourceGuardOutput {
	return o
}

// IP and MAC address configuration. The structure of `bindingEntry` block is documented below.
func (o SwitchcontrollerManagedswitchIpSourceGuardOutput) BindingEntries() SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIpSourceGuard) []SwitchcontrollerManagedswitchIpSourceGuardBindingEntry {
		return v.BindingEntries
	}).(SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput)
}

// Description.
func (o SwitchcontrollerManagedswitchIpSourceGuardOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIpSourceGuard) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Ingress interface to which source guard is bound.
func (o SwitchcontrollerManagedswitchIpSourceGuardOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIpSourceGuard) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchIpSourceGuardArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchIpSourceGuardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchIpSourceGuard)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchIpSourceGuardArrayOutput) ToSwitchcontrollerManagedswitchIpSourceGuardArrayOutput() SwitchcontrollerManagedswitchIpSourceGuardArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIpSourceGuardArrayOutput) ToSwitchcontrollerManagedswitchIpSourceGuardArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIpSourceGuardArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIpSourceGuardArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchIpSourceGuardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchIpSourceGuard {
		return vs[0].([]SwitchcontrollerManagedswitchIpSourceGuard)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchIpSourceGuardOutput)
}

type SwitchcontrollerManagedswitchIpSourceGuardBindingEntry struct {
	// Configure binding pair.
	EntryName *string `pulumi:"entryName"`
	// Source IP for this rule.
	Ip *string `pulumi:"ip"`
	// MAC address for this rule.
	Mac *string `pulumi:"mac"`
}

// SwitchcontrollerManagedswitchIpSourceGuardBindingEntryInput is an input type that accepts SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArgs and SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchIpSourceGuardBindingEntryInput` via:
//
//	SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArgs{...}
type SwitchcontrollerManagedswitchIpSourceGuardBindingEntryInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput() SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput
	ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutputWithContext(context.Context) SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput
}

type SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArgs struct {
	// Configure binding pair.
	EntryName pulumi.StringPtrInput `pulumi:"entryName"`
	// Source IP for this rule.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// MAC address for this rule.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
}

func (SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchIpSourceGuardBindingEntry)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArgs) ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput() SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput {
	return i.ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArgs) ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput)
}

// SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayInput is an input type that accepts SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArray and SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayInput` via:
//
//	SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArray{ SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArgs{...} }
type SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput() SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput
	ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput
}

type SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArray []SwitchcontrollerManagedswitchIpSourceGuardBindingEntryInput

func (SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchIpSourceGuardBindingEntry)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArray) ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput() SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput {
	return i.ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArray) ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput)
}

type SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchIpSourceGuardBindingEntry)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput) ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput() SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput) ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput {
	return o
}

// Configure binding pair.
func (o SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput) EntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIpSourceGuardBindingEntry) *string { return v.EntryName }).(pulumi.StringPtrOutput)
}

// Source IP for this rule.
func (o SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIpSourceGuardBindingEntry) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// MAC address for this rule.
func (o SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchIpSourceGuardBindingEntry) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchIpSourceGuardBindingEntry)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput) ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput() SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput) ToSwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchIpSourceGuardBindingEntry {
		return vs[0].([]SwitchcontrollerManagedswitchIpSourceGuardBindingEntry)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput)
}

type SwitchcontrollerManagedswitchMirror struct {
	// Destination port.
	Dst *string `pulumi:"dst"`
	// Mirror name.
	Name *string `pulumi:"name"`
	// Source egress interfaces. The structure of `srcEgress` block is documented below.
	SrcEgresses []SwitchcontrollerManagedswitchMirrorSrcEgress `pulumi:"srcEgresses"`
	// Source ingress interfaces. The structure of `srcIngress` block is documented below.
	SrcIngresses []SwitchcontrollerManagedswitchMirrorSrcIngress `pulumi:"srcIngresses"`
	// Active/inactive mirror configuration. Valid values: `active`, `inactive`.
	Status *string `pulumi:"status"`
	// Enable/disable switching functionality when mirroring. Valid values: `enable`, `disable`.
	SwitchingPacket *string `pulumi:"switchingPacket"`
}

// SwitchcontrollerManagedswitchMirrorInput is an input type that accepts SwitchcontrollerManagedswitchMirrorArgs and SwitchcontrollerManagedswitchMirrorOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchMirrorInput` via:
//
//	SwitchcontrollerManagedswitchMirrorArgs{...}
type SwitchcontrollerManagedswitchMirrorInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchMirrorOutput() SwitchcontrollerManagedswitchMirrorOutput
	ToSwitchcontrollerManagedswitchMirrorOutputWithContext(context.Context) SwitchcontrollerManagedswitchMirrorOutput
}

type SwitchcontrollerManagedswitchMirrorArgs struct {
	// Destination port.
	Dst pulumi.StringPtrInput `pulumi:"dst"`
	// Mirror name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Source egress interfaces. The structure of `srcEgress` block is documented below.
	SrcEgresses SwitchcontrollerManagedswitchMirrorSrcEgressArrayInput `pulumi:"srcEgresses"`
	// Source ingress interfaces. The structure of `srcIngress` block is documented below.
	SrcIngresses SwitchcontrollerManagedswitchMirrorSrcIngressArrayInput `pulumi:"srcIngresses"`
	// Active/inactive mirror configuration. Valid values: `active`, `inactive`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable/disable switching functionality when mirroring. Valid values: `enable`, `disable`.
	SwitchingPacket pulumi.StringPtrInput `pulumi:"switchingPacket"`
}

func (SwitchcontrollerManagedswitchMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchMirror)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchMirrorArgs) ToSwitchcontrollerManagedswitchMirrorOutput() SwitchcontrollerManagedswitchMirrorOutput {
	return i.ToSwitchcontrollerManagedswitchMirrorOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchMirrorArgs) ToSwitchcontrollerManagedswitchMirrorOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchMirrorOutput)
}

// SwitchcontrollerManagedswitchMirrorArrayInput is an input type that accepts SwitchcontrollerManagedswitchMirrorArray and SwitchcontrollerManagedswitchMirrorArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchMirrorArrayInput` via:
//
//	SwitchcontrollerManagedswitchMirrorArray{ SwitchcontrollerManagedswitchMirrorArgs{...} }
type SwitchcontrollerManagedswitchMirrorArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchMirrorArrayOutput() SwitchcontrollerManagedswitchMirrorArrayOutput
	ToSwitchcontrollerManagedswitchMirrorArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchMirrorArrayOutput
}

type SwitchcontrollerManagedswitchMirrorArray []SwitchcontrollerManagedswitchMirrorInput

func (SwitchcontrollerManagedswitchMirrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchMirror)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchMirrorArray) ToSwitchcontrollerManagedswitchMirrorArrayOutput() SwitchcontrollerManagedswitchMirrorArrayOutput {
	return i.ToSwitchcontrollerManagedswitchMirrorArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchMirrorArray) ToSwitchcontrollerManagedswitchMirrorArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchMirrorArrayOutput)
}

type SwitchcontrollerManagedswitchMirrorOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchMirror)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchMirrorOutput) ToSwitchcontrollerManagedswitchMirrorOutput() SwitchcontrollerManagedswitchMirrorOutput {
	return o
}

func (o SwitchcontrollerManagedswitchMirrorOutput) ToSwitchcontrollerManagedswitchMirrorOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorOutput {
	return o
}

// Destination port.
func (o SwitchcontrollerManagedswitchMirrorOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchMirror) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

// Mirror name.
func (o SwitchcontrollerManagedswitchMirrorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchMirror) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Source egress interfaces. The structure of `srcEgress` block is documented below.
func (o SwitchcontrollerManagedswitchMirrorOutput) SrcEgresses() SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchMirror) []SwitchcontrollerManagedswitchMirrorSrcEgress {
		return v.SrcEgresses
	}).(SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput)
}

// Source ingress interfaces. The structure of `srcIngress` block is documented below.
func (o SwitchcontrollerManagedswitchMirrorOutput) SrcIngresses() SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchMirror) []SwitchcontrollerManagedswitchMirrorSrcIngress {
		return v.SrcIngresses
	}).(SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput)
}

// Active/inactive mirror configuration. Valid values: `active`, `inactive`.
func (o SwitchcontrollerManagedswitchMirrorOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchMirror) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable/disable switching functionality when mirroring. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchMirrorOutput) SwitchingPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchMirror) *string { return v.SwitchingPacket }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchMirrorArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchMirrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchMirror)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchMirrorArrayOutput) ToSwitchcontrollerManagedswitchMirrorArrayOutput() SwitchcontrollerManagedswitchMirrorArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchMirrorArrayOutput) ToSwitchcontrollerManagedswitchMirrorArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchMirrorArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchMirrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchMirror {
		return vs[0].([]SwitchcontrollerManagedswitchMirror)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchMirrorOutput)
}

type SwitchcontrollerManagedswitchMirrorSrcEgress struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SwitchcontrollerManagedswitchMirrorSrcEgressInput is an input type that accepts SwitchcontrollerManagedswitchMirrorSrcEgressArgs and SwitchcontrollerManagedswitchMirrorSrcEgressOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchMirrorSrcEgressInput` via:
//
//	SwitchcontrollerManagedswitchMirrorSrcEgressArgs{...}
type SwitchcontrollerManagedswitchMirrorSrcEgressInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchMirrorSrcEgressOutput() SwitchcontrollerManagedswitchMirrorSrcEgressOutput
	ToSwitchcontrollerManagedswitchMirrorSrcEgressOutputWithContext(context.Context) SwitchcontrollerManagedswitchMirrorSrcEgressOutput
}

type SwitchcontrollerManagedswitchMirrorSrcEgressArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchcontrollerManagedswitchMirrorSrcEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchMirrorSrcEgress)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchMirrorSrcEgressArgs) ToSwitchcontrollerManagedswitchMirrorSrcEgressOutput() SwitchcontrollerManagedswitchMirrorSrcEgressOutput {
	return i.ToSwitchcontrollerManagedswitchMirrorSrcEgressOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchMirrorSrcEgressArgs) ToSwitchcontrollerManagedswitchMirrorSrcEgressOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorSrcEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchMirrorSrcEgressOutput)
}

// SwitchcontrollerManagedswitchMirrorSrcEgressArrayInput is an input type that accepts SwitchcontrollerManagedswitchMirrorSrcEgressArray and SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchMirrorSrcEgressArrayInput` via:
//
//	SwitchcontrollerManagedswitchMirrorSrcEgressArray{ SwitchcontrollerManagedswitchMirrorSrcEgressArgs{...} }
type SwitchcontrollerManagedswitchMirrorSrcEgressArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput() SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput
	ToSwitchcontrollerManagedswitchMirrorSrcEgressArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput
}

type SwitchcontrollerManagedswitchMirrorSrcEgressArray []SwitchcontrollerManagedswitchMirrorSrcEgressInput

func (SwitchcontrollerManagedswitchMirrorSrcEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchMirrorSrcEgress)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchMirrorSrcEgressArray) ToSwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput() SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput {
	return i.ToSwitchcontrollerManagedswitchMirrorSrcEgressArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchMirrorSrcEgressArray) ToSwitchcontrollerManagedswitchMirrorSrcEgressArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput)
}

type SwitchcontrollerManagedswitchMirrorSrcEgressOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchMirrorSrcEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchMirrorSrcEgress)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchMirrorSrcEgressOutput) ToSwitchcontrollerManagedswitchMirrorSrcEgressOutput() SwitchcontrollerManagedswitchMirrorSrcEgressOutput {
	return o
}

func (o SwitchcontrollerManagedswitchMirrorSrcEgressOutput) ToSwitchcontrollerManagedswitchMirrorSrcEgressOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorSrcEgressOutput {
	return o
}

// Interface name.
func (o SwitchcontrollerManagedswitchMirrorSrcEgressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchMirrorSrcEgress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchMirrorSrcEgress)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput) ToSwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput() SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput) ToSwitchcontrollerManagedswitchMirrorSrcEgressArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchMirrorSrcEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchMirrorSrcEgress {
		return vs[0].([]SwitchcontrollerManagedswitchMirrorSrcEgress)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchMirrorSrcEgressOutput)
}

type SwitchcontrollerManagedswitchMirrorSrcIngress struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SwitchcontrollerManagedswitchMirrorSrcIngressInput is an input type that accepts SwitchcontrollerManagedswitchMirrorSrcIngressArgs and SwitchcontrollerManagedswitchMirrorSrcIngressOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchMirrorSrcIngressInput` via:
//
//	SwitchcontrollerManagedswitchMirrorSrcIngressArgs{...}
type SwitchcontrollerManagedswitchMirrorSrcIngressInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchMirrorSrcIngressOutput() SwitchcontrollerManagedswitchMirrorSrcIngressOutput
	ToSwitchcontrollerManagedswitchMirrorSrcIngressOutputWithContext(context.Context) SwitchcontrollerManagedswitchMirrorSrcIngressOutput
}

type SwitchcontrollerManagedswitchMirrorSrcIngressArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchcontrollerManagedswitchMirrorSrcIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchMirrorSrcIngress)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchMirrorSrcIngressArgs) ToSwitchcontrollerManagedswitchMirrorSrcIngressOutput() SwitchcontrollerManagedswitchMirrorSrcIngressOutput {
	return i.ToSwitchcontrollerManagedswitchMirrorSrcIngressOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchMirrorSrcIngressArgs) ToSwitchcontrollerManagedswitchMirrorSrcIngressOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorSrcIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchMirrorSrcIngressOutput)
}

// SwitchcontrollerManagedswitchMirrorSrcIngressArrayInput is an input type that accepts SwitchcontrollerManagedswitchMirrorSrcIngressArray and SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchMirrorSrcIngressArrayInput` via:
//
//	SwitchcontrollerManagedswitchMirrorSrcIngressArray{ SwitchcontrollerManagedswitchMirrorSrcIngressArgs{...} }
type SwitchcontrollerManagedswitchMirrorSrcIngressArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput() SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput
	ToSwitchcontrollerManagedswitchMirrorSrcIngressArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput
}

type SwitchcontrollerManagedswitchMirrorSrcIngressArray []SwitchcontrollerManagedswitchMirrorSrcIngressInput

func (SwitchcontrollerManagedswitchMirrorSrcIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchMirrorSrcIngress)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchMirrorSrcIngressArray) ToSwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput() SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput {
	return i.ToSwitchcontrollerManagedswitchMirrorSrcIngressArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchMirrorSrcIngressArray) ToSwitchcontrollerManagedswitchMirrorSrcIngressArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput)
}

type SwitchcontrollerManagedswitchMirrorSrcIngressOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchMirrorSrcIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchMirrorSrcIngress)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchMirrorSrcIngressOutput) ToSwitchcontrollerManagedswitchMirrorSrcIngressOutput() SwitchcontrollerManagedswitchMirrorSrcIngressOutput {
	return o
}

func (o SwitchcontrollerManagedswitchMirrorSrcIngressOutput) ToSwitchcontrollerManagedswitchMirrorSrcIngressOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorSrcIngressOutput {
	return o
}

// Interface name.
func (o SwitchcontrollerManagedswitchMirrorSrcIngressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchMirrorSrcIngress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchMirrorSrcIngress)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput) ToSwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput() SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput) ToSwitchcontrollerManagedswitchMirrorSrcIngressArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchMirrorSrcIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchMirrorSrcIngress {
		return vs[0].([]SwitchcontrollerManagedswitchMirrorSrcIngress)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchMirrorSrcIngressOutput)
}

type SwitchcontrollerManagedswitchN8021xSettings struct {
	// Authentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
	LinkDownAuth *string `pulumi:"linkDownAuth"`
	// Enable to configure local STP settings that override global STP settings. Valid values: `enable`, `disable`.
	LocalOverride *string `pulumi:"localOverride"`
	// Enable or disable MAB reauthentication settings. Valid values: `disable`, `enable`.
	MabReauth *string `pulumi:"mabReauth"`
	// Maximum number of authentication attempts (0 - 15, default = 3).
	MaxReauthAttempt *int `pulumi:"maxReauthAttempt"`
	// Reauthentication time interval (1 - 1440 min, default = 60, 0 = disable).
	ReauthPeriod *int `pulumi:"reauthPeriod"`
	// 802.1X Tx period (seconds, default=30).
	TxPeriod *int `pulumi:"txPeriod"`
}

// SwitchcontrollerManagedswitchN8021xSettingsInput is an input type that accepts SwitchcontrollerManagedswitchN8021xSettingsArgs and SwitchcontrollerManagedswitchN8021xSettingsOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchN8021xSettingsInput` via:
//
//	SwitchcontrollerManagedswitchN8021xSettingsArgs{...}
type SwitchcontrollerManagedswitchN8021xSettingsInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchN8021xSettingsOutput() SwitchcontrollerManagedswitchN8021xSettingsOutput
	ToSwitchcontrollerManagedswitchN8021xSettingsOutputWithContext(context.Context) SwitchcontrollerManagedswitchN8021xSettingsOutput
}

type SwitchcontrollerManagedswitchN8021xSettingsArgs struct {
	// Authentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
	LinkDownAuth pulumi.StringPtrInput `pulumi:"linkDownAuth"`
	// Enable to configure local STP settings that override global STP settings. Valid values: `enable`, `disable`.
	LocalOverride pulumi.StringPtrInput `pulumi:"localOverride"`
	// Enable or disable MAB reauthentication settings. Valid values: `disable`, `enable`.
	MabReauth pulumi.StringPtrInput `pulumi:"mabReauth"`
	// Maximum number of authentication attempts (0 - 15, default = 3).
	MaxReauthAttempt pulumi.IntPtrInput `pulumi:"maxReauthAttempt"`
	// Reauthentication time interval (1 - 1440 min, default = 60, 0 = disable).
	ReauthPeriod pulumi.IntPtrInput `pulumi:"reauthPeriod"`
	// 802.1X Tx period (seconds, default=30).
	TxPeriod pulumi.IntPtrInput `pulumi:"txPeriod"`
}

func (SwitchcontrollerManagedswitchN8021xSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchN8021xSettings)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchN8021xSettingsArgs) ToSwitchcontrollerManagedswitchN8021xSettingsOutput() SwitchcontrollerManagedswitchN8021xSettingsOutput {
	return i.ToSwitchcontrollerManagedswitchN8021xSettingsOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchN8021xSettingsArgs) ToSwitchcontrollerManagedswitchN8021xSettingsOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchN8021xSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchN8021xSettingsOutput)
}

func (i SwitchcontrollerManagedswitchN8021xSettingsArgs) ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutput() SwitchcontrollerManagedswitchN8021xSettingsPtrOutput {
	return i.ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchN8021xSettingsArgs) ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchN8021xSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchN8021xSettingsOutput).ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutputWithContext(ctx)
}

// SwitchcontrollerManagedswitchN8021xSettingsPtrInput is an input type that accepts SwitchcontrollerManagedswitchN8021xSettingsArgs, SwitchcontrollerManagedswitchN8021xSettingsPtr and SwitchcontrollerManagedswitchN8021xSettingsPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchN8021xSettingsPtrInput` via:
//
//	        SwitchcontrollerManagedswitchN8021xSettingsArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerManagedswitchN8021xSettingsPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutput() SwitchcontrollerManagedswitchN8021xSettingsPtrOutput
	ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutputWithContext(context.Context) SwitchcontrollerManagedswitchN8021xSettingsPtrOutput
}

type switchcontrollerManagedswitchN8021xSettingsPtrType SwitchcontrollerManagedswitchN8021xSettingsArgs

func SwitchcontrollerManagedswitchN8021xSettingsPtr(v *SwitchcontrollerManagedswitchN8021xSettingsArgs) SwitchcontrollerManagedswitchN8021xSettingsPtrInput {
	return (*switchcontrollerManagedswitchN8021xSettingsPtrType)(v)
}

func (*switchcontrollerManagedswitchN8021xSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchN8021xSettings)(nil)).Elem()
}

func (i *switchcontrollerManagedswitchN8021xSettingsPtrType) ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutput() SwitchcontrollerManagedswitchN8021xSettingsPtrOutput {
	return i.ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerManagedswitchN8021xSettingsPtrType) ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchN8021xSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchN8021xSettingsPtrOutput)
}

type SwitchcontrollerManagedswitchN8021xSettingsOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchN8021xSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchN8021xSettings)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchN8021xSettingsOutput) ToSwitchcontrollerManagedswitchN8021xSettingsOutput() SwitchcontrollerManagedswitchN8021xSettingsOutput {
	return o
}

func (o SwitchcontrollerManagedswitchN8021xSettingsOutput) ToSwitchcontrollerManagedswitchN8021xSettingsOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchN8021xSettingsOutput {
	return o
}

func (o SwitchcontrollerManagedswitchN8021xSettingsOutput) ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutput() SwitchcontrollerManagedswitchN8021xSettingsPtrOutput {
	return o.ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerManagedswitchN8021xSettingsOutput) ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchN8021xSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerManagedswitchN8021xSettings) *SwitchcontrollerManagedswitchN8021xSettings {
		return &v
	}).(SwitchcontrollerManagedswitchN8021xSettingsPtrOutput)
}

// Authentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
func (o SwitchcontrollerManagedswitchN8021xSettingsOutput) LinkDownAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchN8021xSettings) *string { return v.LinkDownAuth }).(pulumi.StringPtrOutput)
}

// Enable to configure local STP settings that override global STP settings. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchN8021xSettingsOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchN8021xSettings) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

// Enable or disable MAB reauthentication settings. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchN8021xSettingsOutput) MabReauth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchN8021xSettings) *string { return v.MabReauth }).(pulumi.StringPtrOutput)
}

// Maximum number of authentication attempts (0 - 15, default = 3).
func (o SwitchcontrollerManagedswitchN8021xSettingsOutput) MaxReauthAttempt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchN8021xSettings) *int { return v.MaxReauthAttempt }).(pulumi.IntPtrOutput)
}

// Reauthentication time interval (1 - 1440 min, default = 60, 0 = disable).
func (o SwitchcontrollerManagedswitchN8021xSettingsOutput) ReauthPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchN8021xSettings) *int { return v.ReauthPeriod }).(pulumi.IntPtrOutput)
}

// 802.1X Tx period (seconds, default=30).
func (o SwitchcontrollerManagedswitchN8021xSettingsOutput) TxPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchN8021xSettings) *int { return v.TxPeriod }).(pulumi.IntPtrOutput)
}

type SwitchcontrollerManagedswitchN8021xSettingsPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchN8021xSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchN8021xSettings)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchN8021xSettingsPtrOutput) ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutput() SwitchcontrollerManagedswitchN8021xSettingsPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchN8021xSettingsPtrOutput) ToSwitchcontrollerManagedswitchN8021xSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchN8021xSettingsPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchN8021xSettingsPtrOutput) Elem() SwitchcontrollerManagedswitchN8021xSettingsOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchN8021xSettings) SwitchcontrollerManagedswitchN8021xSettings {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerManagedswitchN8021xSettings
		return ret
	}).(SwitchcontrollerManagedswitchN8021xSettingsOutput)
}

// Authentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
func (o SwitchcontrollerManagedswitchN8021xSettingsPtrOutput) LinkDownAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchN8021xSettings) *string {
		if v == nil {
			return nil
		}
		return v.LinkDownAuth
	}).(pulumi.StringPtrOutput)
}

// Enable to configure local STP settings that override global STP settings. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchN8021xSettingsPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchN8021xSettings) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

// Enable or disable MAB reauthentication settings. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchN8021xSettingsPtrOutput) MabReauth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchN8021xSettings) *string {
		if v == nil {
			return nil
		}
		return v.MabReauth
	}).(pulumi.StringPtrOutput)
}

// Maximum number of authentication attempts (0 - 15, default = 3).
func (o SwitchcontrollerManagedswitchN8021xSettingsPtrOutput) MaxReauthAttempt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchN8021xSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxReauthAttempt
	}).(pulumi.IntPtrOutput)
}

// Reauthentication time interval (1 - 1440 min, default = 60, 0 = disable).
func (o SwitchcontrollerManagedswitchN8021xSettingsPtrOutput) ReauthPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchN8021xSettings) *int {
		if v == nil {
			return nil
		}
		return v.ReauthPeriod
	}).(pulumi.IntPtrOutput)
}

// 802.1X Tx period (seconds, default=30).
func (o SwitchcontrollerManagedswitchN8021xSettingsPtrOutput) TxPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchN8021xSettings) *int {
		if v == nil {
			return nil
		}
		return v.TxPeriod
	}).(pulumi.IntPtrOutput)
}

type SwitchcontrollerManagedswitchPort struct {
	// Access mode of the port.
	AccessMode *string `pulumi:"accessMode"`
	// LACP member select mode. Valid values: `bandwidth`, `count`.
	AggregatorMode *string `pulumi:"aggregatorMode"`
	// Configure switch port tagged vlans The structure of `allowedVlans` block is documented below.
	AllowedVlans []SwitchcontrollerManagedswitchPortAllowedVlan `pulumi:"allowedVlans"`
	// Enable/disable all defined vlans on this port. Valid values: `enable`, `disable`.
	AllowedVlansAll *string `pulumi:"allowedVlansAll"`
	// Trusted or untrusted dynamic ARP inspection. Valid values: `untrusted`, `trusted`.
	ArpInspectionTrust *string `pulumi:"arpInspectionTrust"`
	// Enable/disable Link Aggregation Group (LAG) bundling for non-FortiLink interfaces. Valid values: `enable`, `disable`.
	Bundle *string `pulumi:"bundle"`
	// Description for port.
	Description *string `pulumi:"description"`
	// Enable/disable allowance of DHCP with option-82 on untrusted interface. Valid values: `enable`, `disable`.
	DhcpSnoopOption82Trust *string `pulumi:"dhcpSnoopOption82Trust"`
	// Trusted or untrusted DHCP-snooping interface. Valid values: `untrusted`, `trusted`.
	DhcpSnooping *string `pulumi:"dhcpSnooping"`
	// Configure discard mode for port. Valid values: `none`, `all-untagged`, `all-tagged`.
	DiscardMode *string `pulumi:"discardMode"`
	// Enable/disable this interface as an edge port, bridging connections between workstations and/or computers. Valid values: `enable`, `disable`.
	EdgePort *string `pulumi:"edgePort"`
	// Switch controller export tag name. The structure of `exportTags` block is documented below.
	ExportTags []SwitchcontrollerManagedswitchPortExportTag `pulumi:"exportTags"`
	// Export managed-switch port to a tenant VDOM.
	ExportTo *string `pulumi:"exportTo"`
	// Switch controller export port to pool-list.
	ExportToPool *string `pulumi:"exportToPool"`
	// Switch controller export port to pool-list.
	ExportToPoolFlag *int `pulumi:"exportToPoolFlag"`
	// FEC capable.
	FecCapable *int `pulumi:"fecCapable"`
	// State of forward error correction. Valid values: `disabled`, `cl74`, `cl91`.
	FecState *string `pulumi:"fecState"`
	// FGT peer device name.
	FgtPeerDeviceName *string `pulumi:"fgtPeerDeviceName"`
	// FGT peer port name.
	FgtPeerPortName *string `pulumi:"fgtPeerPortName"`
	// Fiber-port.
	FiberPort *int `pulumi:"fiberPort"`
	// Port properties flags.
	Flags *int `pulumi:"flags"`
	// Period over which flap events are calculated (seconds).
	FlapDuration *int `pulumi:"flapDuration"`
	// Number of stage change events needed within flap-duration.
	FlapRate *int `pulumi:"flapRate"`
	// Flap guard disabling protection (min).
	FlapTimeout *int `pulumi:"flapTimeout"`
	// Enable/disable flap guard. Valid values: `enable`, `disable`.
	Flapguard *string `pulumi:"flapguard"`
	// Flow control direction. Valid values: `disable`, `tx`, `rx`, `both`.
	FlowControl *string `pulumi:"flowControl"`
	// FortiLink uplink port.
	FortilinkPort *int `pulumi:"fortilinkPort"`
	// Set IGMP snooping mode for the physical port interface. Valid values: `enable`, `disable`.
	IgmpSnooping *string `pulumi:"igmpSnooping"`
	// Enable/disable flooding of IGMP reports to this interface when igmp-snooping enabled. Valid values: `enable`, `disable`.
	IgmpSnoopingFloodReports *string `pulumi:"igmpSnoopingFloodReports"`
	// Enable/disable flooding of IGMP reports to this interface when igmp-snooping enabled. Valid values: `enable`, `disable`.
	IgmpsFloodReports *string `pulumi:"igmpsFloodReports"`
	// Enable/disable flooding of IGMP snooping traffic to this interface. Valid values: `enable`, `disable`.
	IgmpsFloodTraffic *string `pulumi:"igmpsFloodTraffic"`
	// Tag(s) associated with the interface for various features including virtual port pool, dynamic port policy. The structure of `interfaceTags` block is documented below.
	InterfaceTags []SwitchcontrollerManagedswitchPortInterfaceTag `pulumi:"interfaceTags"`
	// Enable/disable IP source guard. Valid values: `disable`, `enable`.
	IpSourceGuard *string `pulumi:"ipSourceGuard"`
	// ISL local trunk name.
	IslLocalTrunkName *string `pulumi:"islLocalTrunkName"`
	// ISL peer device name.
	IslPeerDeviceName *string `pulumi:"islPeerDeviceName"`
	// ISL peer port name.
	IslPeerPortName *string `pulumi:"islPeerPortName"`
	// end Link Aggregation Control Protocol (LACP) messages every 30 seconds (slow) or every second (fast). Valid values: `slow`, `fast`.
	LacpSpeed *string `pulumi:"lacpSpeed"`
	// Limit the number of dynamic MAC addresses on this Port (1 - 128, 0 = no limit, default).
	LearningLimit *int `pulumi:"learningLimit"`
	// LLDP port TLV profile.
	LldpProfile *string `pulumi:"lldpProfile"`
	// LLDP transmit and receive status. Valid values: `disable`, `rx-only`, `tx-only`, `tx-rx`.
	LldpStatus *string `pulumi:"lldpStatus"`
	// Enable/disable loop-guard on this interface, an STP optimization used to prevent network loops. Valid values: `enabled`, `disabled`.
	LoopGuard *string `pulumi:"loopGuard"`
	// Loop-guard timeout (0 - 120 min, default = 45).
	LoopGuardTimeout *int `pulumi:"loopGuardTimeout"`
	// Port/Trunk MAC.
	MacAddr *string `pulumi:"macAddr"`
	// Matched interface tags in the dynamic port policy.
	MatchedDppIntfTags *string `pulumi:"matchedDppIntfTags"`
	// Matched child policy in the dynamic port policy.
	MatchedDppPolicy *string `pulumi:"matchedDppPolicy"`
	// Maximum size of LAG bundle (1 - 24, default = 24)
	MaxBundle *int `pulumi:"maxBundle"`
	// Enable/disable flooding of IGMP snooping traffic to this interface. Valid values: `enable`, `disable`.
	McastSnoopingFloodTraffic *string `pulumi:"mcastSnoopingFloodTraffic"`
	// Enable/disable multi-chassis link aggregation (MCLAG). Valid values: `enable`, `disable`.
	Mclag *string `pulumi:"mclag"`
	// MCLAG-ICL port.
	MclagIclPort *int `pulumi:"mclagIclPort"`
	// Media type.
	MediaType *string `pulumi:"mediaType"`
	// Port behavior after it withdraws because of loss of control packets. Valid values: `forward`, `block`.
	MemberWithdrawalBehavior *string `pulumi:"memberWithdrawalBehavior"`
	// Aggregated LAG bundle interfaces. The structure of `members` block is documented below.
	Members []SwitchcontrollerManagedswitchPortMember `pulumi:"members"`
	// Minimum size of LAG bundle (1 - 24, default = 1)
	MinBundle *int `pulumi:"minBundle"`
	// LACP mode: ignore and do not send control messages, or negotiate 802.3ad aggregation passively or actively. Valid values: `static`, `lacp-passive`, `lacp-active`.
	Mode *string `pulumi:"mode"`
	// General peer to peer tunnel port.
	P2pPort *int `pulumi:"p2pPort"`
	// Packet sampling rate (0 - 99999 p/sec).
	PacketSampleRate *int `pulumi:"packetSampleRate"`
	// Enable/disable packet sampling on this interface. Valid values: `enabled`, `disabled`.
	PacketSampler *string `pulumi:"packetSampler"`
	// Configure ingress pause metering rate, in kbps (default = 0, disabled).
	PauseMeter *int `pulumi:"pauseMeter"`
	// Resume threshold for resuming traffic on ingress port. Valid values: `75%`, `50%`, `25%`.
	PauseMeterResume *string `pulumi:"pauseMeterResume"`
	// PoE capable.
	PoeCapable *int `pulumi:"poeCapable"`
	// PoE maximum power.
	PoeMaxPower *string `pulumi:"poeMaxPower"`
	// Enable/disable PoE pre-standard detection. Valid values: `enable`, `disable`.
	PoePreStandardDetection *string `pulumi:"poePreStandardDetection"`
	// PoE standard supported.
	PoeStandard *string `pulumi:"poeStandard"`
	// Enable/disable PoE status. Valid values: `enable`, `disable`.
	PoeStatus *string `pulumi:"poeStatus"`
	// Switch port name.
	PortName *string `pulumi:"portName"`
	// Port number.
	PortNumber *int `pulumi:"portNumber"`
	// Switch port name.
	PortOwner *string `pulumi:"portOwner"`
	// Switch controller dynamic port policy from available options.
	PortPolicy *string `pulumi:"portPolicy"`
	// Port prefix type.
	PortPrefixType *int `pulumi:"portPrefixType"`
	// Switch controller authentication policy to apply to this managed switch from available options.
	PortSecurityPolicy *string `pulumi:"portSecurityPolicy"`
	// Algorithm for aggregate port selection. Valid values: `src-mac`, `dst-mac`, `src-dst-mac`, `src-ip`, `dst-ip`, `src-dst-ip`.
	PortSelectionCriteria *string `pulumi:"portSelectionCriteria"`
	// PTP policy configuration.
	PtpPolicy *string `pulumi:"ptpPolicy"`
	// Switch controller QoS policy from available options.
	QosPolicy *string `pulumi:"qosPolicy"`
	// Enable/disable inter-operability with rapid PVST on this interface. Valid values: `disabled`, `enabled`.
	RpvstPort *string `pulumi:"rpvstPort"`
	// sFlow sample direction. Valid values: `tx`, `rx`, `both`.
	SampleDirection *string `pulumi:"sampleDirection"`
	// sFlow sampler counter polling interval (1 - 255 sec).
	SflowCounterInterval *int `pulumi:"sflowCounterInterval"`
	// sFlow sampler sample rate (0 - 99999 p/sec).
	SflowSampleRate *int `pulumi:"sflowSampleRate"`
	// Enable/disable sFlow protocol on this interface. Valid values: `enabled`, `disabled`.
	SflowSampler *string `pulumi:"sflowSampler"`
	// Switch port speed; default and available settings depend on hardware.
	Speed *string `pulumi:"speed"`
	// Switch port speed mask.
	SpeedMask *int `pulumi:"speedMask"`
	// Stacking port.
	StackingPort *int `pulumi:"stackingPort"`
	// Switch port admin status: up or down. Valid values: `up`, `down`.
	Status *string `pulumi:"status"`
	// Enable or disable sticky-mac on the interface. Valid values: `enable`, `disable`.
	StickyMac *string `pulumi:"stickyMac"`
	// Switch controller storm control policy from available options.
	StormControlPolicy *string `pulumi:"stormControlPolicy"`
	// Enable/disable STP BPDU guard on this interface. Valid values: `enabled`, `disabled`.
	StpBpduGuard *string `pulumi:"stpBpduGuard"`
	// BPDU Guard disabling protection (0 - 120 min).
	StpBpduGuardTimeout *int `pulumi:"stpBpduGuardTimeout"`
	// Enable/disable STP root guard on this interface. Valid values: `enabled`, `disabled`.
	StpRootGuard *string `pulumi:"stpRootGuard"`
	// Enable/disable Spanning Tree Protocol (STP) on this interface. Valid values: `enabled`, `disabled`.
	StpState *string `pulumi:"stpState"`
	// Switch id.
	SwitchId *string `pulumi:"switchId"`
	// Interface type: physical or trunk port. Valid values: `physical`, `trunk`.
	Type *string `pulumi:"type"`
	// Configure switch port untagged vlans The structure of `untaggedVlans` block is documented below.
	UntaggedVlans []SwitchcontrollerManagedswitchPortUntaggedVlan `pulumi:"untaggedVlans"`
	// Virtualized switch port.
	VirtualPort *int `pulumi:"virtualPort"`
	// Assign switch ports to a VLAN.
	Vlan *string `pulumi:"vlan"`
}

// SwitchcontrollerManagedswitchPortInput is an input type that accepts SwitchcontrollerManagedswitchPortArgs and SwitchcontrollerManagedswitchPortOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortInput` via:
//
//	SwitchcontrollerManagedswitchPortArgs{...}
type SwitchcontrollerManagedswitchPortInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortOutput() SwitchcontrollerManagedswitchPortOutput
	ToSwitchcontrollerManagedswitchPortOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortOutput
}

type SwitchcontrollerManagedswitchPortArgs struct {
	// Access mode of the port.
	AccessMode pulumi.StringPtrInput `pulumi:"accessMode"`
	// LACP member select mode. Valid values: `bandwidth`, `count`.
	AggregatorMode pulumi.StringPtrInput `pulumi:"aggregatorMode"`
	// Configure switch port tagged vlans The structure of `allowedVlans` block is documented below.
	AllowedVlans SwitchcontrollerManagedswitchPortAllowedVlanArrayInput `pulumi:"allowedVlans"`
	// Enable/disable all defined vlans on this port. Valid values: `enable`, `disable`.
	AllowedVlansAll pulumi.StringPtrInput `pulumi:"allowedVlansAll"`
	// Trusted or untrusted dynamic ARP inspection. Valid values: `untrusted`, `trusted`.
	ArpInspectionTrust pulumi.StringPtrInput `pulumi:"arpInspectionTrust"`
	// Enable/disable Link Aggregation Group (LAG) bundling for non-FortiLink interfaces. Valid values: `enable`, `disable`.
	Bundle pulumi.StringPtrInput `pulumi:"bundle"`
	// Description for port.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enable/disable allowance of DHCP with option-82 on untrusted interface. Valid values: `enable`, `disable`.
	DhcpSnoopOption82Trust pulumi.StringPtrInput `pulumi:"dhcpSnoopOption82Trust"`
	// Trusted or untrusted DHCP-snooping interface. Valid values: `untrusted`, `trusted`.
	DhcpSnooping pulumi.StringPtrInput `pulumi:"dhcpSnooping"`
	// Configure discard mode for port. Valid values: `none`, `all-untagged`, `all-tagged`.
	DiscardMode pulumi.StringPtrInput `pulumi:"discardMode"`
	// Enable/disable this interface as an edge port, bridging connections between workstations and/or computers. Valid values: `enable`, `disable`.
	EdgePort pulumi.StringPtrInput `pulumi:"edgePort"`
	// Switch controller export tag name. The structure of `exportTags` block is documented below.
	ExportTags SwitchcontrollerManagedswitchPortExportTagArrayInput `pulumi:"exportTags"`
	// Export managed-switch port to a tenant VDOM.
	ExportTo pulumi.StringPtrInput `pulumi:"exportTo"`
	// Switch controller export port to pool-list.
	ExportToPool pulumi.StringPtrInput `pulumi:"exportToPool"`
	// Switch controller export port to pool-list.
	ExportToPoolFlag pulumi.IntPtrInput `pulumi:"exportToPoolFlag"`
	// FEC capable.
	FecCapable pulumi.IntPtrInput `pulumi:"fecCapable"`
	// State of forward error correction. Valid values: `disabled`, `cl74`, `cl91`.
	FecState pulumi.StringPtrInput `pulumi:"fecState"`
	// FGT peer device name.
	FgtPeerDeviceName pulumi.StringPtrInput `pulumi:"fgtPeerDeviceName"`
	// FGT peer port name.
	FgtPeerPortName pulumi.StringPtrInput `pulumi:"fgtPeerPortName"`
	// Fiber-port.
	FiberPort pulumi.IntPtrInput `pulumi:"fiberPort"`
	// Port properties flags.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Period over which flap events are calculated (seconds).
	FlapDuration pulumi.IntPtrInput `pulumi:"flapDuration"`
	// Number of stage change events needed within flap-duration.
	FlapRate pulumi.IntPtrInput `pulumi:"flapRate"`
	// Flap guard disabling protection (min).
	FlapTimeout pulumi.IntPtrInput `pulumi:"flapTimeout"`
	// Enable/disable flap guard. Valid values: `enable`, `disable`.
	Flapguard pulumi.StringPtrInput `pulumi:"flapguard"`
	// Flow control direction. Valid values: `disable`, `tx`, `rx`, `both`.
	FlowControl pulumi.StringPtrInput `pulumi:"flowControl"`
	// FortiLink uplink port.
	FortilinkPort pulumi.IntPtrInput `pulumi:"fortilinkPort"`
	// Set IGMP snooping mode for the physical port interface. Valid values: `enable`, `disable`.
	IgmpSnooping pulumi.StringPtrInput `pulumi:"igmpSnooping"`
	// Enable/disable flooding of IGMP reports to this interface when igmp-snooping enabled. Valid values: `enable`, `disable`.
	IgmpSnoopingFloodReports pulumi.StringPtrInput `pulumi:"igmpSnoopingFloodReports"`
	// Enable/disable flooding of IGMP reports to this interface when igmp-snooping enabled. Valid values: `enable`, `disable`.
	IgmpsFloodReports pulumi.StringPtrInput `pulumi:"igmpsFloodReports"`
	// Enable/disable flooding of IGMP snooping traffic to this interface. Valid values: `enable`, `disable`.
	IgmpsFloodTraffic pulumi.StringPtrInput `pulumi:"igmpsFloodTraffic"`
	// Tag(s) associated with the interface for various features including virtual port pool, dynamic port policy. The structure of `interfaceTags` block is documented below.
	InterfaceTags SwitchcontrollerManagedswitchPortInterfaceTagArrayInput `pulumi:"interfaceTags"`
	// Enable/disable IP source guard. Valid values: `disable`, `enable`.
	IpSourceGuard pulumi.StringPtrInput `pulumi:"ipSourceGuard"`
	// ISL local trunk name.
	IslLocalTrunkName pulumi.StringPtrInput `pulumi:"islLocalTrunkName"`
	// ISL peer device name.
	IslPeerDeviceName pulumi.StringPtrInput `pulumi:"islPeerDeviceName"`
	// ISL peer port name.
	IslPeerPortName pulumi.StringPtrInput `pulumi:"islPeerPortName"`
	// end Link Aggregation Control Protocol (LACP) messages every 30 seconds (slow) or every second (fast). Valid values: `slow`, `fast`.
	LacpSpeed pulumi.StringPtrInput `pulumi:"lacpSpeed"`
	// Limit the number of dynamic MAC addresses on this Port (1 - 128, 0 = no limit, default).
	LearningLimit pulumi.IntPtrInput `pulumi:"learningLimit"`
	// LLDP port TLV profile.
	LldpProfile pulumi.StringPtrInput `pulumi:"lldpProfile"`
	// LLDP transmit and receive status. Valid values: `disable`, `rx-only`, `tx-only`, `tx-rx`.
	LldpStatus pulumi.StringPtrInput `pulumi:"lldpStatus"`
	// Enable/disable loop-guard on this interface, an STP optimization used to prevent network loops. Valid values: `enabled`, `disabled`.
	LoopGuard pulumi.StringPtrInput `pulumi:"loopGuard"`
	// Loop-guard timeout (0 - 120 min, default = 45).
	LoopGuardTimeout pulumi.IntPtrInput `pulumi:"loopGuardTimeout"`
	// Port/Trunk MAC.
	MacAddr pulumi.StringPtrInput `pulumi:"macAddr"`
	// Matched interface tags in the dynamic port policy.
	MatchedDppIntfTags pulumi.StringPtrInput `pulumi:"matchedDppIntfTags"`
	// Matched child policy in the dynamic port policy.
	MatchedDppPolicy pulumi.StringPtrInput `pulumi:"matchedDppPolicy"`
	// Maximum size of LAG bundle (1 - 24, default = 24)
	MaxBundle pulumi.IntPtrInput `pulumi:"maxBundle"`
	// Enable/disable flooding of IGMP snooping traffic to this interface. Valid values: `enable`, `disable`.
	McastSnoopingFloodTraffic pulumi.StringPtrInput `pulumi:"mcastSnoopingFloodTraffic"`
	// Enable/disable multi-chassis link aggregation (MCLAG). Valid values: `enable`, `disable`.
	Mclag pulumi.StringPtrInput `pulumi:"mclag"`
	// MCLAG-ICL port.
	MclagIclPort pulumi.IntPtrInput `pulumi:"mclagIclPort"`
	// Media type.
	MediaType pulumi.StringPtrInput `pulumi:"mediaType"`
	// Port behavior after it withdraws because of loss of control packets. Valid values: `forward`, `block`.
	MemberWithdrawalBehavior pulumi.StringPtrInput `pulumi:"memberWithdrawalBehavior"`
	// Aggregated LAG bundle interfaces. The structure of `members` block is documented below.
	Members SwitchcontrollerManagedswitchPortMemberArrayInput `pulumi:"members"`
	// Minimum size of LAG bundle (1 - 24, default = 1)
	MinBundle pulumi.IntPtrInput `pulumi:"minBundle"`
	// LACP mode: ignore and do not send control messages, or negotiate 802.3ad aggregation passively or actively. Valid values: `static`, `lacp-passive`, `lacp-active`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// General peer to peer tunnel port.
	P2pPort pulumi.IntPtrInput `pulumi:"p2pPort"`
	// Packet sampling rate (0 - 99999 p/sec).
	PacketSampleRate pulumi.IntPtrInput `pulumi:"packetSampleRate"`
	// Enable/disable packet sampling on this interface. Valid values: `enabled`, `disabled`.
	PacketSampler pulumi.StringPtrInput `pulumi:"packetSampler"`
	// Configure ingress pause metering rate, in kbps (default = 0, disabled).
	PauseMeter pulumi.IntPtrInput `pulumi:"pauseMeter"`
	// Resume threshold for resuming traffic on ingress port. Valid values: `75%`, `50%`, `25%`.
	PauseMeterResume pulumi.StringPtrInput `pulumi:"pauseMeterResume"`
	// PoE capable.
	PoeCapable pulumi.IntPtrInput `pulumi:"poeCapable"`
	// PoE maximum power.
	PoeMaxPower pulumi.StringPtrInput `pulumi:"poeMaxPower"`
	// Enable/disable PoE pre-standard detection. Valid values: `enable`, `disable`.
	PoePreStandardDetection pulumi.StringPtrInput `pulumi:"poePreStandardDetection"`
	// PoE standard supported.
	PoeStandard pulumi.StringPtrInput `pulumi:"poeStandard"`
	// Enable/disable PoE status. Valid values: `enable`, `disable`.
	PoeStatus pulumi.StringPtrInput `pulumi:"poeStatus"`
	// Switch port name.
	PortName pulumi.StringPtrInput `pulumi:"portName"`
	// Port number.
	PortNumber pulumi.IntPtrInput `pulumi:"portNumber"`
	// Switch port name.
	PortOwner pulumi.StringPtrInput `pulumi:"portOwner"`
	// Switch controller dynamic port policy from available options.
	PortPolicy pulumi.StringPtrInput `pulumi:"portPolicy"`
	// Port prefix type.
	PortPrefixType pulumi.IntPtrInput `pulumi:"portPrefixType"`
	// Switch controller authentication policy to apply to this managed switch from available options.
	PortSecurityPolicy pulumi.StringPtrInput `pulumi:"portSecurityPolicy"`
	// Algorithm for aggregate port selection. Valid values: `src-mac`, `dst-mac`, `src-dst-mac`, `src-ip`, `dst-ip`, `src-dst-ip`.
	PortSelectionCriteria pulumi.StringPtrInput `pulumi:"portSelectionCriteria"`
	// PTP policy configuration.
	PtpPolicy pulumi.StringPtrInput `pulumi:"ptpPolicy"`
	// Switch controller QoS policy from available options.
	QosPolicy pulumi.StringPtrInput `pulumi:"qosPolicy"`
	// Enable/disable inter-operability with rapid PVST on this interface. Valid values: `disabled`, `enabled`.
	RpvstPort pulumi.StringPtrInput `pulumi:"rpvstPort"`
	// sFlow sample direction. Valid values: `tx`, `rx`, `both`.
	SampleDirection pulumi.StringPtrInput `pulumi:"sampleDirection"`
	// sFlow sampler counter polling interval (1 - 255 sec).
	SflowCounterInterval pulumi.IntPtrInput `pulumi:"sflowCounterInterval"`
	// sFlow sampler sample rate (0 - 99999 p/sec).
	SflowSampleRate pulumi.IntPtrInput `pulumi:"sflowSampleRate"`
	// Enable/disable sFlow protocol on this interface. Valid values: `enabled`, `disabled`.
	SflowSampler pulumi.StringPtrInput `pulumi:"sflowSampler"`
	// Switch port speed; default and available settings depend on hardware.
	Speed pulumi.StringPtrInput `pulumi:"speed"`
	// Switch port speed mask.
	SpeedMask pulumi.IntPtrInput `pulumi:"speedMask"`
	// Stacking port.
	StackingPort pulumi.IntPtrInput `pulumi:"stackingPort"`
	// Switch port admin status: up or down. Valid values: `up`, `down`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Enable or disable sticky-mac on the interface. Valid values: `enable`, `disable`.
	StickyMac pulumi.StringPtrInput `pulumi:"stickyMac"`
	// Switch controller storm control policy from available options.
	StormControlPolicy pulumi.StringPtrInput `pulumi:"stormControlPolicy"`
	// Enable/disable STP BPDU guard on this interface. Valid values: `enabled`, `disabled`.
	StpBpduGuard pulumi.StringPtrInput `pulumi:"stpBpduGuard"`
	// BPDU Guard disabling protection (0 - 120 min).
	StpBpduGuardTimeout pulumi.IntPtrInput `pulumi:"stpBpduGuardTimeout"`
	// Enable/disable STP root guard on this interface. Valid values: `enabled`, `disabled`.
	StpRootGuard pulumi.StringPtrInput `pulumi:"stpRootGuard"`
	// Enable/disable Spanning Tree Protocol (STP) on this interface. Valid values: `enabled`, `disabled`.
	StpState pulumi.StringPtrInput `pulumi:"stpState"`
	// Switch id.
	SwitchId pulumi.StringPtrInput `pulumi:"switchId"`
	// Interface type: physical or trunk port. Valid values: `physical`, `trunk`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Configure switch port untagged vlans The structure of `untaggedVlans` block is documented below.
	UntaggedVlans SwitchcontrollerManagedswitchPortUntaggedVlanArrayInput `pulumi:"untaggedVlans"`
	// Virtualized switch port.
	VirtualPort pulumi.IntPtrInput `pulumi:"virtualPort"`
	// Assign switch ports to a VLAN.
	Vlan pulumi.StringPtrInput `pulumi:"vlan"`
}

func (SwitchcontrollerManagedswitchPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPort)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortArgs) ToSwitchcontrollerManagedswitchPortOutput() SwitchcontrollerManagedswitchPortOutput {
	return i.ToSwitchcontrollerManagedswitchPortOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortArgs) ToSwitchcontrollerManagedswitchPortOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortOutput)
}

// SwitchcontrollerManagedswitchPortArrayInput is an input type that accepts SwitchcontrollerManagedswitchPortArray and SwitchcontrollerManagedswitchPortArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortArrayInput` via:
//
//	SwitchcontrollerManagedswitchPortArray{ SwitchcontrollerManagedswitchPortArgs{...} }
type SwitchcontrollerManagedswitchPortArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortArrayOutput() SwitchcontrollerManagedswitchPortArrayOutput
	ToSwitchcontrollerManagedswitchPortArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortArrayOutput
}

type SwitchcontrollerManagedswitchPortArray []SwitchcontrollerManagedswitchPortInput

func (SwitchcontrollerManagedswitchPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPort)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortArray) ToSwitchcontrollerManagedswitchPortArrayOutput() SwitchcontrollerManagedswitchPortArrayOutput {
	return i.ToSwitchcontrollerManagedswitchPortArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortArray) ToSwitchcontrollerManagedswitchPortArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortArrayOutput)
}

type SwitchcontrollerManagedswitchPortOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPort)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortOutput) ToSwitchcontrollerManagedswitchPortOutput() SwitchcontrollerManagedswitchPortOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortOutput) ToSwitchcontrollerManagedswitchPortOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortOutput {
	return o
}

// Access mode of the port.
func (o SwitchcontrollerManagedswitchPortOutput) AccessMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.AccessMode }).(pulumi.StringPtrOutput)
}

// LACP member select mode. Valid values: `bandwidth`, `count`.
func (o SwitchcontrollerManagedswitchPortOutput) AggregatorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.AggregatorMode }).(pulumi.StringPtrOutput)
}

// Configure switch port tagged vlans The structure of `allowedVlans` block is documented below.
func (o SwitchcontrollerManagedswitchPortOutput) AllowedVlans() SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) []SwitchcontrollerManagedswitchPortAllowedVlan {
		return v.AllowedVlans
	}).(SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput)
}

// Enable/disable all defined vlans on this port. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) AllowedVlansAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.AllowedVlansAll }).(pulumi.StringPtrOutput)
}

// Trusted or untrusted dynamic ARP inspection. Valid values: `untrusted`, `trusted`.
func (o SwitchcontrollerManagedswitchPortOutput) ArpInspectionTrust() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.ArpInspectionTrust }).(pulumi.StringPtrOutput)
}

// Enable/disable Link Aggregation Group (LAG) bundling for non-FortiLink interfaces. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) Bundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.Bundle }).(pulumi.StringPtrOutput)
}

// Description for port.
func (o SwitchcontrollerManagedswitchPortOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable/disable allowance of DHCP with option-82 on untrusted interface. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) DhcpSnoopOption82Trust() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.DhcpSnoopOption82Trust }).(pulumi.StringPtrOutput)
}

// Trusted or untrusted DHCP-snooping interface. Valid values: `untrusted`, `trusted`.
func (o SwitchcontrollerManagedswitchPortOutput) DhcpSnooping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.DhcpSnooping }).(pulumi.StringPtrOutput)
}

// Configure discard mode for port. Valid values: `none`, `all-untagged`, `all-tagged`.
func (o SwitchcontrollerManagedswitchPortOutput) DiscardMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.DiscardMode }).(pulumi.StringPtrOutput)
}

// Enable/disable this interface as an edge port, bridging connections between workstations and/or computers. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) EdgePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.EdgePort }).(pulumi.StringPtrOutput)
}

// Switch controller export tag name. The structure of `exportTags` block is documented below.
func (o SwitchcontrollerManagedswitchPortOutput) ExportTags() SwitchcontrollerManagedswitchPortExportTagArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) []SwitchcontrollerManagedswitchPortExportTag {
		return v.ExportTags
	}).(SwitchcontrollerManagedswitchPortExportTagArrayOutput)
}

// Export managed-switch port to a tenant VDOM.
func (o SwitchcontrollerManagedswitchPortOutput) ExportTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.ExportTo }).(pulumi.StringPtrOutput)
}

// Switch controller export port to pool-list.
func (o SwitchcontrollerManagedswitchPortOutput) ExportToPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.ExportToPool }).(pulumi.StringPtrOutput)
}

// Switch controller export port to pool-list.
func (o SwitchcontrollerManagedswitchPortOutput) ExportToPoolFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.ExportToPoolFlag }).(pulumi.IntPtrOutput)
}

// FEC capable.
func (o SwitchcontrollerManagedswitchPortOutput) FecCapable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.FecCapable }).(pulumi.IntPtrOutput)
}

// State of forward error correction. Valid values: `disabled`, `cl74`, `cl91`.
func (o SwitchcontrollerManagedswitchPortOutput) FecState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.FecState }).(pulumi.StringPtrOutput)
}

// FGT peer device name.
func (o SwitchcontrollerManagedswitchPortOutput) FgtPeerDeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.FgtPeerDeviceName }).(pulumi.StringPtrOutput)
}

// FGT peer port name.
func (o SwitchcontrollerManagedswitchPortOutput) FgtPeerPortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.FgtPeerPortName }).(pulumi.StringPtrOutput)
}

// Fiber-port.
func (o SwitchcontrollerManagedswitchPortOutput) FiberPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.FiberPort }).(pulumi.IntPtrOutput)
}

// Port properties flags.
func (o SwitchcontrollerManagedswitchPortOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Period over which flap events are calculated (seconds).
func (o SwitchcontrollerManagedswitchPortOutput) FlapDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.FlapDuration }).(pulumi.IntPtrOutput)
}

// Number of stage change events needed within flap-duration.
func (o SwitchcontrollerManagedswitchPortOutput) FlapRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.FlapRate }).(pulumi.IntPtrOutput)
}

// Flap guard disabling protection (min).
func (o SwitchcontrollerManagedswitchPortOutput) FlapTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.FlapTimeout }).(pulumi.IntPtrOutput)
}

// Enable/disable flap guard. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) Flapguard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.Flapguard }).(pulumi.StringPtrOutput)
}

// Flow control direction. Valid values: `disable`, `tx`, `rx`, `both`.
func (o SwitchcontrollerManagedswitchPortOutput) FlowControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.FlowControl }).(pulumi.StringPtrOutput)
}

// FortiLink uplink port.
func (o SwitchcontrollerManagedswitchPortOutput) FortilinkPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.FortilinkPort }).(pulumi.IntPtrOutput)
}

// Set IGMP snooping mode for the physical port interface. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) IgmpSnooping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.IgmpSnooping }).(pulumi.StringPtrOutput)
}

// Enable/disable flooding of IGMP reports to this interface when igmp-snooping enabled. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) IgmpSnoopingFloodReports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.IgmpSnoopingFloodReports }).(pulumi.StringPtrOutput)
}

// Enable/disable flooding of IGMP reports to this interface when igmp-snooping enabled. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) IgmpsFloodReports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.IgmpsFloodReports }).(pulumi.StringPtrOutput)
}

// Enable/disable flooding of IGMP snooping traffic to this interface. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) IgmpsFloodTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.IgmpsFloodTraffic }).(pulumi.StringPtrOutput)
}

// Tag(s) associated with the interface for various features including virtual port pool, dynamic port policy. The structure of `interfaceTags` block is documented below.
func (o SwitchcontrollerManagedswitchPortOutput) InterfaceTags() SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) []SwitchcontrollerManagedswitchPortInterfaceTag {
		return v.InterfaceTags
	}).(SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput)
}

// Enable/disable IP source guard. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchPortOutput) IpSourceGuard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.IpSourceGuard }).(pulumi.StringPtrOutput)
}

// ISL local trunk name.
func (o SwitchcontrollerManagedswitchPortOutput) IslLocalTrunkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.IslLocalTrunkName }).(pulumi.StringPtrOutput)
}

// ISL peer device name.
func (o SwitchcontrollerManagedswitchPortOutput) IslPeerDeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.IslPeerDeviceName }).(pulumi.StringPtrOutput)
}

// ISL peer port name.
func (o SwitchcontrollerManagedswitchPortOutput) IslPeerPortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.IslPeerPortName }).(pulumi.StringPtrOutput)
}

// end Link Aggregation Control Protocol (LACP) messages every 30 seconds (slow) or every second (fast). Valid values: `slow`, `fast`.
func (o SwitchcontrollerManagedswitchPortOutput) LacpSpeed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.LacpSpeed }).(pulumi.StringPtrOutput)
}

// Limit the number of dynamic MAC addresses on this Port (1 - 128, 0 = no limit, default).
func (o SwitchcontrollerManagedswitchPortOutput) LearningLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.LearningLimit }).(pulumi.IntPtrOutput)
}

// LLDP port TLV profile.
func (o SwitchcontrollerManagedswitchPortOutput) LldpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.LldpProfile }).(pulumi.StringPtrOutput)
}

// LLDP transmit and receive status. Valid values: `disable`, `rx-only`, `tx-only`, `tx-rx`.
func (o SwitchcontrollerManagedswitchPortOutput) LldpStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.LldpStatus }).(pulumi.StringPtrOutput)
}

// Enable/disable loop-guard on this interface, an STP optimization used to prevent network loops. Valid values: `enabled`, `disabled`.
func (o SwitchcontrollerManagedswitchPortOutput) LoopGuard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.LoopGuard }).(pulumi.StringPtrOutput)
}

// Loop-guard timeout (0 - 120 min, default = 45).
func (o SwitchcontrollerManagedswitchPortOutput) LoopGuardTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.LoopGuardTimeout }).(pulumi.IntPtrOutput)
}

// Port/Trunk MAC.
func (o SwitchcontrollerManagedswitchPortOutput) MacAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.MacAddr }).(pulumi.StringPtrOutput)
}

// Matched interface tags in the dynamic port policy.
func (o SwitchcontrollerManagedswitchPortOutput) MatchedDppIntfTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.MatchedDppIntfTags }).(pulumi.StringPtrOutput)
}

// Matched child policy in the dynamic port policy.
func (o SwitchcontrollerManagedswitchPortOutput) MatchedDppPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.MatchedDppPolicy }).(pulumi.StringPtrOutput)
}

// Maximum size of LAG bundle (1 - 24, default = 24)
func (o SwitchcontrollerManagedswitchPortOutput) MaxBundle() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.MaxBundle }).(pulumi.IntPtrOutput)
}

// Enable/disable flooding of IGMP snooping traffic to this interface. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) McastSnoopingFloodTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.McastSnoopingFloodTraffic }).(pulumi.StringPtrOutput)
}

// Enable/disable multi-chassis link aggregation (MCLAG). Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) Mclag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.Mclag }).(pulumi.StringPtrOutput)
}

// MCLAG-ICL port.
func (o SwitchcontrollerManagedswitchPortOutput) MclagIclPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.MclagIclPort }).(pulumi.IntPtrOutput)
}

// Media type.
func (o SwitchcontrollerManagedswitchPortOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.MediaType }).(pulumi.StringPtrOutput)
}

// Port behavior after it withdraws because of loss of control packets. Valid values: `forward`, `block`.
func (o SwitchcontrollerManagedswitchPortOutput) MemberWithdrawalBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.MemberWithdrawalBehavior }).(pulumi.StringPtrOutput)
}

// Aggregated LAG bundle interfaces. The structure of `members` block is documented below.
func (o SwitchcontrollerManagedswitchPortOutput) Members() SwitchcontrollerManagedswitchPortMemberArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) []SwitchcontrollerManagedswitchPortMember { return v.Members }).(SwitchcontrollerManagedswitchPortMemberArrayOutput)
}

// Minimum size of LAG bundle (1 - 24, default = 1)
func (o SwitchcontrollerManagedswitchPortOutput) MinBundle() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.MinBundle }).(pulumi.IntPtrOutput)
}

// LACP mode: ignore and do not send control messages, or negotiate 802.3ad aggregation passively or actively. Valid values: `static`, `lacp-passive`, `lacp-active`.
func (o SwitchcontrollerManagedswitchPortOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// General peer to peer tunnel port.
func (o SwitchcontrollerManagedswitchPortOutput) P2pPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.P2pPort }).(pulumi.IntPtrOutput)
}

// Packet sampling rate (0 - 99999 p/sec).
func (o SwitchcontrollerManagedswitchPortOutput) PacketSampleRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.PacketSampleRate }).(pulumi.IntPtrOutput)
}

// Enable/disable packet sampling on this interface. Valid values: `enabled`, `disabled`.
func (o SwitchcontrollerManagedswitchPortOutput) PacketSampler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PacketSampler }).(pulumi.StringPtrOutput)
}

// Configure ingress pause metering rate, in kbps (default = 0, disabled).
func (o SwitchcontrollerManagedswitchPortOutput) PauseMeter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.PauseMeter }).(pulumi.IntPtrOutput)
}

// Resume threshold for resuming traffic on ingress port. Valid values: `75%`, `50%`, `25%`.
func (o SwitchcontrollerManagedswitchPortOutput) PauseMeterResume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PauseMeterResume }).(pulumi.StringPtrOutput)
}

// PoE capable.
func (o SwitchcontrollerManagedswitchPortOutput) PoeCapable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.PoeCapable }).(pulumi.IntPtrOutput)
}

// PoE maximum power.
func (o SwitchcontrollerManagedswitchPortOutput) PoeMaxPower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PoeMaxPower }).(pulumi.StringPtrOutput)
}

// Enable/disable PoE pre-standard detection. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) PoePreStandardDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PoePreStandardDetection }).(pulumi.StringPtrOutput)
}

// PoE standard supported.
func (o SwitchcontrollerManagedswitchPortOutput) PoeStandard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PoeStandard }).(pulumi.StringPtrOutput)
}

// Enable/disable PoE status. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) PoeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PoeStatus }).(pulumi.StringPtrOutput)
}

// Switch port name.
func (o SwitchcontrollerManagedswitchPortOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PortName }).(pulumi.StringPtrOutput)
}

// Port number.
func (o SwitchcontrollerManagedswitchPortOutput) PortNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.PortNumber }).(pulumi.IntPtrOutput)
}

// Switch port name.
func (o SwitchcontrollerManagedswitchPortOutput) PortOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PortOwner }).(pulumi.StringPtrOutput)
}

// Switch controller dynamic port policy from available options.
func (o SwitchcontrollerManagedswitchPortOutput) PortPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PortPolicy }).(pulumi.StringPtrOutput)
}

// Port prefix type.
func (o SwitchcontrollerManagedswitchPortOutput) PortPrefixType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.PortPrefixType }).(pulumi.IntPtrOutput)
}

// Switch controller authentication policy to apply to this managed switch from available options.
func (o SwitchcontrollerManagedswitchPortOutput) PortSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PortSecurityPolicy }).(pulumi.StringPtrOutput)
}

// Algorithm for aggregate port selection. Valid values: `src-mac`, `dst-mac`, `src-dst-mac`, `src-ip`, `dst-ip`, `src-dst-ip`.
func (o SwitchcontrollerManagedswitchPortOutput) PortSelectionCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PortSelectionCriteria }).(pulumi.StringPtrOutput)
}

// PTP policy configuration.
func (o SwitchcontrollerManagedswitchPortOutput) PtpPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.PtpPolicy }).(pulumi.StringPtrOutput)
}

// Switch controller QoS policy from available options.
func (o SwitchcontrollerManagedswitchPortOutput) QosPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.QosPolicy }).(pulumi.StringPtrOutput)
}

// Enable/disable inter-operability with rapid PVST on this interface. Valid values: `disabled`, `enabled`.
func (o SwitchcontrollerManagedswitchPortOutput) RpvstPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.RpvstPort }).(pulumi.StringPtrOutput)
}

// sFlow sample direction. Valid values: `tx`, `rx`, `both`.
func (o SwitchcontrollerManagedswitchPortOutput) SampleDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.SampleDirection }).(pulumi.StringPtrOutput)
}

// sFlow sampler counter polling interval (1 - 255 sec).
func (o SwitchcontrollerManagedswitchPortOutput) SflowCounterInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.SflowCounterInterval }).(pulumi.IntPtrOutput)
}

// sFlow sampler sample rate (0 - 99999 p/sec).
func (o SwitchcontrollerManagedswitchPortOutput) SflowSampleRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.SflowSampleRate }).(pulumi.IntPtrOutput)
}

// Enable/disable sFlow protocol on this interface. Valid values: `enabled`, `disabled`.
func (o SwitchcontrollerManagedswitchPortOutput) SflowSampler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.SflowSampler }).(pulumi.StringPtrOutput)
}

// Switch port speed; default and available settings depend on hardware.
func (o SwitchcontrollerManagedswitchPortOutput) Speed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.Speed }).(pulumi.StringPtrOutput)
}

// Switch port speed mask.
func (o SwitchcontrollerManagedswitchPortOutput) SpeedMask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.SpeedMask }).(pulumi.IntPtrOutput)
}

// Stacking port.
func (o SwitchcontrollerManagedswitchPortOutput) StackingPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.StackingPort }).(pulumi.IntPtrOutput)
}

// Switch port admin status: up or down. Valid values: `up`, `down`.
func (o SwitchcontrollerManagedswitchPortOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Enable or disable sticky-mac on the interface. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchPortOutput) StickyMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.StickyMac }).(pulumi.StringPtrOutput)
}

// Switch controller storm control policy from available options.
func (o SwitchcontrollerManagedswitchPortOutput) StormControlPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.StormControlPolicy }).(pulumi.StringPtrOutput)
}

// Enable/disable STP BPDU guard on this interface. Valid values: `enabled`, `disabled`.
func (o SwitchcontrollerManagedswitchPortOutput) StpBpduGuard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.StpBpduGuard }).(pulumi.StringPtrOutput)
}

// BPDU Guard disabling protection (0 - 120 min).
func (o SwitchcontrollerManagedswitchPortOutput) StpBpduGuardTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.StpBpduGuardTimeout }).(pulumi.IntPtrOutput)
}

// Enable/disable STP root guard on this interface. Valid values: `enabled`, `disabled`.
func (o SwitchcontrollerManagedswitchPortOutput) StpRootGuard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.StpRootGuard }).(pulumi.StringPtrOutput)
}

// Enable/disable Spanning Tree Protocol (STP) on this interface. Valid values: `enabled`, `disabled`.
func (o SwitchcontrollerManagedswitchPortOutput) StpState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.StpState }).(pulumi.StringPtrOutput)
}

// Switch id.
func (o SwitchcontrollerManagedswitchPortOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

// Interface type: physical or trunk port. Valid values: `physical`, `trunk`.
func (o SwitchcontrollerManagedswitchPortOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Configure switch port untagged vlans The structure of `untaggedVlans` block is documented below.
func (o SwitchcontrollerManagedswitchPortOutput) UntaggedVlans() SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) []SwitchcontrollerManagedswitchPortUntaggedVlan {
		return v.UntaggedVlans
	}).(SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput)
}

// Virtualized switch port.
func (o SwitchcontrollerManagedswitchPortOutput) VirtualPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *int { return v.VirtualPort }).(pulumi.IntPtrOutput)
}

// Assign switch ports to a VLAN.
func (o SwitchcontrollerManagedswitchPortOutput) Vlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPort) *string { return v.Vlan }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchPortArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPort)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortArrayOutput) ToSwitchcontrollerManagedswitchPortArrayOutput() SwitchcontrollerManagedswitchPortArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortArrayOutput) ToSwitchcontrollerManagedswitchPortArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchPort {
		return vs[0].([]SwitchcontrollerManagedswitchPort)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchPortOutput)
}

type SwitchcontrollerManagedswitchPortAllowedVlan struct {
	// VLAN name.
	VlanName *string `pulumi:"vlanName"`
}

// SwitchcontrollerManagedswitchPortAllowedVlanInput is an input type that accepts SwitchcontrollerManagedswitchPortAllowedVlanArgs and SwitchcontrollerManagedswitchPortAllowedVlanOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortAllowedVlanInput` via:
//
//	SwitchcontrollerManagedswitchPortAllowedVlanArgs{...}
type SwitchcontrollerManagedswitchPortAllowedVlanInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortAllowedVlanOutput() SwitchcontrollerManagedswitchPortAllowedVlanOutput
	ToSwitchcontrollerManagedswitchPortAllowedVlanOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortAllowedVlanOutput
}

type SwitchcontrollerManagedswitchPortAllowedVlanArgs struct {
	// VLAN name.
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchcontrollerManagedswitchPortAllowedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPortAllowedVlan)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortAllowedVlanArgs) ToSwitchcontrollerManagedswitchPortAllowedVlanOutput() SwitchcontrollerManagedswitchPortAllowedVlanOutput {
	return i.ToSwitchcontrollerManagedswitchPortAllowedVlanOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortAllowedVlanArgs) ToSwitchcontrollerManagedswitchPortAllowedVlanOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortAllowedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortAllowedVlanOutput)
}

// SwitchcontrollerManagedswitchPortAllowedVlanArrayInput is an input type that accepts SwitchcontrollerManagedswitchPortAllowedVlanArray and SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortAllowedVlanArrayInput` via:
//
//	SwitchcontrollerManagedswitchPortAllowedVlanArray{ SwitchcontrollerManagedswitchPortAllowedVlanArgs{...} }
type SwitchcontrollerManagedswitchPortAllowedVlanArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortAllowedVlanArrayOutput() SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput
	ToSwitchcontrollerManagedswitchPortAllowedVlanArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput
}

type SwitchcontrollerManagedswitchPortAllowedVlanArray []SwitchcontrollerManagedswitchPortAllowedVlanInput

func (SwitchcontrollerManagedswitchPortAllowedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPortAllowedVlan)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortAllowedVlanArray) ToSwitchcontrollerManagedswitchPortAllowedVlanArrayOutput() SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput {
	return i.ToSwitchcontrollerManagedswitchPortAllowedVlanArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortAllowedVlanArray) ToSwitchcontrollerManagedswitchPortAllowedVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput)
}

type SwitchcontrollerManagedswitchPortAllowedVlanOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortAllowedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPortAllowedVlan)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortAllowedVlanOutput) ToSwitchcontrollerManagedswitchPortAllowedVlanOutput() SwitchcontrollerManagedswitchPortAllowedVlanOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortAllowedVlanOutput) ToSwitchcontrollerManagedswitchPortAllowedVlanOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortAllowedVlanOutput {
	return o
}

// VLAN name.
func (o SwitchcontrollerManagedswitchPortAllowedVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPortAllowedVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPortAllowedVlan)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput) ToSwitchcontrollerManagedswitchPortAllowedVlanArrayOutput() SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput) ToSwitchcontrollerManagedswitchPortAllowedVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchPortAllowedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchPortAllowedVlan {
		return vs[0].([]SwitchcontrollerManagedswitchPortAllowedVlan)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchPortAllowedVlanOutput)
}

type SwitchcontrollerManagedswitchPortExportTag struct {
	// Switch tag name.
	TagName *string `pulumi:"tagName"`
}

// SwitchcontrollerManagedswitchPortExportTagInput is an input type that accepts SwitchcontrollerManagedswitchPortExportTagArgs and SwitchcontrollerManagedswitchPortExportTagOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortExportTagInput` via:
//
//	SwitchcontrollerManagedswitchPortExportTagArgs{...}
type SwitchcontrollerManagedswitchPortExportTagInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortExportTagOutput() SwitchcontrollerManagedswitchPortExportTagOutput
	ToSwitchcontrollerManagedswitchPortExportTagOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortExportTagOutput
}

type SwitchcontrollerManagedswitchPortExportTagArgs struct {
	// Switch tag name.
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (SwitchcontrollerManagedswitchPortExportTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPortExportTag)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortExportTagArgs) ToSwitchcontrollerManagedswitchPortExportTagOutput() SwitchcontrollerManagedswitchPortExportTagOutput {
	return i.ToSwitchcontrollerManagedswitchPortExportTagOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortExportTagArgs) ToSwitchcontrollerManagedswitchPortExportTagOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortExportTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortExportTagOutput)
}

// SwitchcontrollerManagedswitchPortExportTagArrayInput is an input type that accepts SwitchcontrollerManagedswitchPortExportTagArray and SwitchcontrollerManagedswitchPortExportTagArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortExportTagArrayInput` via:
//
//	SwitchcontrollerManagedswitchPortExportTagArray{ SwitchcontrollerManagedswitchPortExportTagArgs{...} }
type SwitchcontrollerManagedswitchPortExportTagArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortExportTagArrayOutput() SwitchcontrollerManagedswitchPortExportTagArrayOutput
	ToSwitchcontrollerManagedswitchPortExportTagArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortExportTagArrayOutput
}

type SwitchcontrollerManagedswitchPortExportTagArray []SwitchcontrollerManagedswitchPortExportTagInput

func (SwitchcontrollerManagedswitchPortExportTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPortExportTag)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortExportTagArray) ToSwitchcontrollerManagedswitchPortExportTagArrayOutput() SwitchcontrollerManagedswitchPortExportTagArrayOutput {
	return i.ToSwitchcontrollerManagedswitchPortExportTagArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortExportTagArray) ToSwitchcontrollerManagedswitchPortExportTagArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortExportTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortExportTagArrayOutput)
}

type SwitchcontrollerManagedswitchPortExportTagOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortExportTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPortExportTag)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortExportTagOutput) ToSwitchcontrollerManagedswitchPortExportTagOutput() SwitchcontrollerManagedswitchPortExportTagOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortExportTagOutput) ToSwitchcontrollerManagedswitchPortExportTagOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortExportTagOutput {
	return o
}

// Switch tag name.
func (o SwitchcontrollerManagedswitchPortExportTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPortExportTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchPortExportTagArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortExportTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPortExportTag)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortExportTagArrayOutput) ToSwitchcontrollerManagedswitchPortExportTagArrayOutput() SwitchcontrollerManagedswitchPortExportTagArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortExportTagArrayOutput) ToSwitchcontrollerManagedswitchPortExportTagArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortExportTagArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortExportTagArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchPortExportTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchPortExportTag {
		return vs[0].([]SwitchcontrollerManagedswitchPortExportTag)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchPortExportTagOutput)
}

type SwitchcontrollerManagedswitchPortInterfaceTag struct {
	// FortiSwitch port tag name when exported to a virtual port pool or matched to dynamic port policy.
	TagName *string `pulumi:"tagName"`
}

// SwitchcontrollerManagedswitchPortInterfaceTagInput is an input type that accepts SwitchcontrollerManagedswitchPortInterfaceTagArgs and SwitchcontrollerManagedswitchPortInterfaceTagOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortInterfaceTagInput` via:
//
//	SwitchcontrollerManagedswitchPortInterfaceTagArgs{...}
type SwitchcontrollerManagedswitchPortInterfaceTagInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortInterfaceTagOutput() SwitchcontrollerManagedswitchPortInterfaceTagOutput
	ToSwitchcontrollerManagedswitchPortInterfaceTagOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortInterfaceTagOutput
}

type SwitchcontrollerManagedswitchPortInterfaceTagArgs struct {
	// FortiSwitch port tag name when exported to a virtual port pool or matched to dynamic port policy.
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (SwitchcontrollerManagedswitchPortInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPortInterfaceTag)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortInterfaceTagArgs) ToSwitchcontrollerManagedswitchPortInterfaceTagOutput() SwitchcontrollerManagedswitchPortInterfaceTagOutput {
	return i.ToSwitchcontrollerManagedswitchPortInterfaceTagOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortInterfaceTagArgs) ToSwitchcontrollerManagedswitchPortInterfaceTagOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortInterfaceTagOutput)
}

// SwitchcontrollerManagedswitchPortInterfaceTagArrayInput is an input type that accepts SwitchcontrollerManagedswitchPortInterfaceTagArray and SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortInterfaceTagArrayInput` via:
//
//	SwitchcontrollerManagedswitchPortInterfaceTagArray{ SwitchcontrollerManagedswitchPortInterfaceTagArgs{...} }
type SwitchcontrollerManagedswitchPortInterfaceTagArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortInterfaceTagArrayOutput() SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput
	ToSwitchcontrollerManagedswitchPortInterfaceTagArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput
}

type SwitchcontrollerManagedswitchPortInterfaceTagArray []SwitchcontrollerManagedswitchPortInterfaceTagInput

func (SwitchcontrollerManagedswitchPortInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPortInterfaceTag)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortInterfaceTagArray) ToSwitchcontrollerManagedswitchPortInterfaceTagArrayOutput() SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput {
	return i.ToSwitchcontrollerManagedswitchPortInterfaceTagArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortInterfaceTagArray) ToSwitchcontrollerManagedswitchPortInterfaceTagArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput)
}

type SwitchcontrollerManagedswitchPortInterfaceTagOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPortInterfaceTag)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortInterfaceTagOutput) ToSwitchcontrollerManagedswitchPortInterfaceTagOutput() SwitchcontrollerManagedswitchPortInterfaceTagOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortInterfaceTagOutput) ToSwitchcontrollerManagedswitchPortInterfaceTagOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortInterfaceTagOutput {
	return o
}

// FortiSwitch port tag name when exported to a virtual port pool or matched to dynamic port policy.
func (o SwitchcontrollerManagedswitchPortInterfaceTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPortInterfaceTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPortInterfaceTag)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput) ToSwitchcontrollerManagedswitchPortInterfaceTagArrayOutput() SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput) ToSwitchcontrollerManagedswitchPortInterfaceTagArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchPortInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchPortInterfaceTag {
		return vs[0].([]SwitchcontrollerManagedswitchPortInterfaceTag)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchPortInterfaceTagOutput)
}

type SwitchcontrollerManagedswitchPortMember struct {
	// Interface name from available options.
	MemberName *string `pulumi:"memberName"`
}

// SwitchcontrollerManagedswitchPortMemberInput is an input type that accepts SwitchcontrollerManagedswitchPortMemberArgs and SwitchcontrollerManagedswitchPortMemberOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortMemberInput` via:
//
//	SwitchcontrollerManagedswitchPortMemberArgs{...}
type SwitchcontrollerManagedswitchPortMemberInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortMemberOutput() SwitchcontrollerManagedswitchPortMemberOutput
	ToSwitchcontrollerManagedswitchPortMemberOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortMemberOutput
}

type SwitchcontrollerManagedswitchPortMemberArgs struct {
	// Interface name from available options.
	MemberName pulumi.StringPtrInput `pulumi:"memberName"`
}

func (SwitchcontrollerManagedswitchPortMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPortMember)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortMemberArgs) ToSwitchcontrollerManagedswitchPortMemberOutput() SwitchcontrollerManagedswitchPortMemberOutput {
	return i.ToSwitchcontrollerManagedswitchPortMemberOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortMemberArgs) ToSwitchcontrollerManagedswitchPortMemberOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortMemberOutput)
}

// SwitchcontrollerManagedswitchPortMemberArrayInput is an input type that accepts SwitchcontrollerManagedswitchPortMemberArray and SwitchcontrollerManagedswitchPortMemberArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortMemberArrayInput` via:
//
//	SwitchcontrollerManagedswitchPortMemberArray{ SwitchcontrollerManagedswitchPortMemberArgs{...} }
type SwitchcontrollerManagedswitchPortMemberArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortMemberArrayOutput() SwitchcontrollerManagedswitchPortMemberArrayOutput
	ToSwitchcontrollerManagedswitchPortMemberArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortMemberArrayOutput
}

type SwitchcontrollerManagedswitchPortMemberArray []SwitchcontrollerManagedswitchPortMemberInput

func (SwitchcontrollerManagedswitchPortMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPortMember)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortMemberArray) ToSwitchcontrollerManagedswitchPortMemberArrayOutput() SwitchcontrollerManagedswitchPortMemberArrayOutput {
	return i.ToSwitchcontrollerManagedswitchPortMemberArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortMemberArray) ToSwitchcontrollerManagedswitchPortMemberArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortMemberArrayOutput)
}

type SwitchcontrollerManagedswitchPortMemberOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPortMember)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortMemberOutput) ToSwitchcontrollerManagedswitchPortMemberOutput() SwitchcontrollerManagedswitchPortMemberOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortMemberOutput) ToSwitchcontrollerManagedswitchPortMemberOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortMemberOutput {
	return o
}

// Interface name from available options.
func (o SwitchcontrollerManagedswitchPortMemberOutput) MemberName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPortMember) *string { return v.MemberName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchPortMemberArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPortMember)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortMemberArrayOutput) ToSwitchcontrollerManagedswitchPortMemberArrayOutput() SwitchcontrollerManagedswitchPortMemberArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortMemberArrayOutput) ToSwitchcontrollerManagedswitchPortMemberArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortMemberArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortMemberArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchPortMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchPortMember {
		return vs[0].([]SwitchcontrollerManagedswitchPortMember)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchPortMemberOutput)
}

type SwitchcontrollerManagedswitchPortUntaggedVlan struct {
	// VLAN name.
	VlanName *string `pulumi:"vlanName"`
}

// SwitchcontrollerManagedswitchPortUntaggedVlanInput is an input type that accepts SwitchcontrollerManagedswitchPortUntaggedVlanArgs and SwitchcontrollerManagedswitchPortUntaggedVlanOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortUntaggedVlanInput` via:
//
//	SwitchcontrollerManagedswitchPortUntaggedVlanArgs{...}
type SwitchcontrollerManagedswitchPortUntaggedVlanInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortUntaggedVlanOutput() SwitchcontrollerManagedswitchPortUntaggedVlanOutput
	ToSwitchcontrollerManagedswitchPortUntaggedVlanOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortUntaggedVlanOutput
}

type SwitchcontrollerManagedswitchPortUntaggedVlanArgs struct {
	// VLAN name.
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchcontrollerManagedswitchPortUntaggedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPortUntaggedVlan)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortUntaggedVlanArgs) ToSwitchcontrollerManagedswitchPortUntaggedVlanOutput() SwitchcontrollerManagedswitchPortUntaggedVlanOutput {
	return i.ToSwitchcontrollerManagedswitchPortUntaggedVlanOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortUntaggedVlanArgs) ToSwitchcontrollerManagedswitchPortUntaggedVlanOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortUntaggedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortUntaggedVlanOutput)
}

// SwitchcontrollerManagedswitchPortUntaggedVlanArrayInput is an input type that accepts SwitchcontrollerManagedswitchPortUntaggedVlanArray and SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchPortUntaggedVlanArrayInput` via:
//
//	SwitchcontrollerManagedswitchPortUntaggedVlanArray{ SwitchcontrollerManagedswitchPortUntaggedVlanArgs{...} }
type SwitchcontrollerManagedswitchPortUntaggedVlanArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput() SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput
	ToSwitchcontrollerManagedswitchPortUntaggedVlanArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput
}

type SwitchcontrollerManagedswitchPortUntaggedVlanArray []SwitchcontrollerManagedswitchPortUntaggedVlanInput

func (SwitchcontrollerManagedswitchPortUntaggedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPortUntaggedVlan)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchPortUntaggedVlanArray) ToSwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput() SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput {
	return i.ToSwitchcontrollerManagedswitchPortUntaggedVlanArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchPortUntaggedVlanArray) ToSwitchcontrollerManagedswitchPortUntaggedVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput)
}

type SwitchcontrollerManagedswitchPortUntaggedVlanOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortUntaggedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchPortUntaggedVlan)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortUntaggedVlanOutput) ToSwitchcontrollerManagedswitchPortUntaggedVlanOutput() SwitchcontrollerManagedswitchPortUntaggedVlanOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortUntaggedVlanOutput) ToSwitchcontrollerManagedswitchPortUntaggedVlanOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortUntaggedVlanOutput {
	return o
}

// VLAN name.
func (o SwitchcontrollerManagedswitchPortUntaggedVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchPortUntaggedVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchPortUntaggedVlan)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput) ToSwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput() SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput) ToSwitchcontrollerManagedswitchPortUntaggedVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchPortUntaggedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchPortUntaggedVlan {
		return vs[0].([]SwitchcontrollerManagedswitchPortUntaggedVlan)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchPortUntaggedVlanOutput)
}

type SwitchcontrollerManagedswitchRemoteLog struct {
	// Enable/disable comma-separated value (CSV) strings. Valid values: `enable`, `disable`.
	Csv *string `pulumi:"csv"`
	// Facility to log to remote syslog server. Valid values: `kernel`, `user`, `mail`, `daemon`, `auth`, `syslog`, `lpr`, `news`, `uucp`, `cron`, `authpriv`, `ftp`, `ntp`, `audit`, `alert`, `clock`, `local0`, `local1`, `local2`, `local3`, `local4`, `local5`, `local6`, `local7`.
	Facility *string `pulumi:"facility"`
	// Remote log name.
	Name *string `pulumi:"name"`
	// Remote syslog server listening port.
	Port *int `pulumi:"port"`
	// IPv4 address of the remote syslog server.
	Server *string `pulumi:"server"`
	// Severity of logs to be transferred to remote log server. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable logging by FortiSwitch device to a remote syslog server. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// SwitchcontrollerManagedswitchRemoteLogInput is an input type that accepts SwitchcontrollerManagedswitchRemoteLogArgs and SwitchcontrollerManagedswitchRemoteLogOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchRemoteLogInput` via:
//
//	SwitchcontrollerManagedswitchRemoteLogArgs{...}
type SwitchcontrollerManagedswitchRemoteLogInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchRemoteLogOutput() SwitchcontrollerManagedswitchRemoteLogOutput
	ToSwitchcontrollerManagedswitchRemoteLogOutputWithContext(context.Context) SwitchcontrollerManagedswitchRemoteLogOutput
}

type SwitchcontrollerManagedswitchRemoteLogArgs struct {
	// Enable/disable comma-separated value (CSV) strings. Valid values: `enable`, `disable`.
	Csv pulumi.StringPtrInput `pulumi:"csv"`
	// Facility to log to remote syslog server. Valid values: `kernel`, `user`, `mail`, `daemon`, `auth`, `syslog`, `lpr`, `news`, `uucp`, `cron`, `authpriv`, `ftp`, `ntp`, `audit`, `alert`, `clock`, `local0`, `local1`, `local2`, `local3`, `local4`, `local5`, `local6`, `local7`.
	Facility pulumi.StringPtrInput `pulumi:"facility"`
	// Remote log name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Remote syslog server listening port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// IPv4 address of the remote syslog server.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// Severity of logs to be transferred to remote log server. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable logging by FortiSwitch device to a remote syslog server. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SwitchcontrollerManagedswitchRemoteLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchRemoteLog)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchRemoteLogArgs) ToSwitchcontrollerManagedswitchRemoteLogOutput() SwitchcontrollerManagedswitchRemoteLogOutput {
	return i.ToSwitchcontrollerManagedswitchRemoteLogOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchRemoteLogArgs) ToSwitchcontrollerManagedswitchRemoteLogOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchRemoteLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchRemoteLogOutput)
}

// SwitchcontrollerManagedswitchRemoteLogArrayInput is an input type that accepts SwitchcontrollerManagedswitchRemoteLogArray and SwitchcontrollerManagedswitchRemoteLogArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchRemoteLogArrayInput` via:
//
//	SwitchcontrollerManagedswitchRemoteLogArray{ SwitchcontrollerManagedswitchRemoteLogArgs{...} }
type SwitchcontrollerManagedswitchRemoteLogArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchRemoteLogArrayOutput() SwitchcontrollerManagedswitchRemoteLogArrayOutput
	ToSwitchcontrollerManagedswitchRemoteLogArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchRemoteLogArrayOutput
}

type SwitchcontrollerManagedswitchRemoteLogArray []SwitchcontrollerManagedswitchRemoteLogInput

func (SwitchcontrollerManagedswitchRemoteLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchRemoteLog)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchRemoteLogArray) ToSwitchcontrollerManagedswitchRemoteLogArrayOutput() SwitchcontrollerManagedswitchRemoteLogArrayOutput {
	return i.ToSwitchcontrollerManagedswitchRemoteLogArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchRemoteLogArray) ToSwitchcontrollerManagedswitchRemoteLogArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchRemoteLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchRemoteLogArrayOutput)
}

type SwitchcontrollerManagedswitchRemoteLogOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchRemoteLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchRemoteLog)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchRemoteLogOutput) ToSwitchcontrollerManagedswitchRemoteLogOutput() SwitchcontrollerManagedswitchRemoteLogOutput {
	return o
}

func (o SwitchcontrollerManagedswitchRemoteLogOutput) ToSwitchcontrollerManagedswitchRemoteLogOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchRemoteLogOutput {
	return o
}

// Enable/disable comma-separated value (CSV) strings. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchRemoteLogOutput) Csv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchRemoteLog) *string { return v.Csv }).(pulumi.StringPtrOutput)
}

// Facility to log to remote syslog server. Valid values: `kernel`, `user`, `mail`, `daemon`, `auth`, `syslog`, `lpr`, `news`, `uucp`, `cron`, `authpriv`, `ftp`, `ntp`, `audit`, `alert`, `clock`, `local0`, `local1`, `local2`, `local3`, `local4`, `local5`, `local6`, `local7`.
func (o SwitchcontrollerManagedswitchRemoteLogOutput) Facility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchRemoteLog) *string { return v.Facility }).(pulumi.StringPtrOutput)
}

// Remote log name.
func (o SwitchcontrollerManagedswitchRemoteLogOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchRemoteLog) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Remote syslog server listening port.
func (o SwitchcontrollerManagedswitchRemoteLogOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchRemoteLog) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// IPv4 address of the remote syslog server.
func (o SwitchcontrollerManagedswitchRemoteLogOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchRemoteLog) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Severity of logs to be transferred to remote log server. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
func (o SwitchcontrollerManagedswitchRemoteLogOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchRemoteLog) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable logging by FortiSwitch device to a remote syslog server. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchRemoteLogOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchRemoteLog) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchRemoteLogArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchRemoteLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchRemoteLog)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchRemoteLogArrayOutput) ToSwitchcontrollerManagedswitchRemoteLogArrayOutput() SwitchcontrollerManagedswitchRemoteLogArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchRemoteLogArrayOutput) ToSwitchcontrollerManagedswitchRemoteLogArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchRemoteLogArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchRemoteLogArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchRemoteLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchRemoteLog {
		return vs[0].([]SwitchcontrollerManagedswitchRemoteLog)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchRemoteLogOutput)
}

type SwitchcontrollerManagedswitchSnmpCommunity struct {
	// SNMP notifications (traps) to send. Valid values: `cpu-high`, `mem-low`, `log-full`, `intf-ip`, `ent-conf-change`.
	Events *string `pulumi:"events"`
	// Configure IPv4 SNMP managers (hosts). The structure of `hosts` block is documented below.
	Hosts []SwitchcontrollerManagedswitchSnmpCommunityHost `pulumi:"hosts"`
	// SNMP community ID.
	Id *int `pulumi:"id"`
	// SNMP community name.
	Name *string `pulumi:"name"`
	// SNMP v1 query port (default = 161).
	QueryV1Port *int `pulumi:"queryV1Port"`
	// Enable/disable SNMP v1 queries. Valid values: `disable`, `enable`.
	QueryV1Status *string `pulumi:"queryV1Status"`
	// SNMP v2c query port (default = 161).
	QueryV2cPort *int `pulumi:"queryV2cPort"`
	// Enable/disable SNMP v2c queries. Valid values: `disable`, `enable`.
	QueryV2cStatus *string `pulumi:"queryV2cStatus"`
	// Enable/disable this SNMP community. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// SNMP v2c trap local port (default = 162).
	TrapV1Lport *int `pulumi:"trapV1Lport"`
	// SNMP v2c trap remote port (default = 162).
	TrapV1Rport *int `pulumi:"trapV1Rport"`
	// Enable/disable SNMP v1 traps. Valid values: `disable`, `enable`.
	TrapV1Status *string `pulumi:"trapV1Status"`
	// SNMP v2c trap local port (default = 162).
	TrapV2cLport *int `pulumi:"trapV2cLport"`
	// SNMP v2c trap remote port (default = 162).
	TrapV2cRport *int `pulumi:"trapV2cRport"`
	// Enable/disable SNMP v2c traps. Valid values: `disable`, `enable`.
	TrapV2cStatus *string `pulumi:"trapV2cStatus"`
}

// SwitchcontrollerManagedswitchSnmpCommunityInput is an input type that accepts SwitchcontrollerManagedswitchSnmpCommunityArgs and SwitchcontrollerManagedswitchSnmpCommunityOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSnmpCommunityInput` via:
//
//	SwitchcontrollerManagedswitchSnmpCommunityArgs{...}
type SwitchcontrollerManagedswitchSnmpCommunityInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSnmpCommunityOutput() SwitchcontrollerManagedswitchSnmpCommunityOutput
	ToSwitchcontrollerManagedswitchSnmpCommunityOutputWithContext(context.Context) SwitchcontrollerManagedswitchSnmpCommunityOutput
}

type SwitchcontrollerManagedswitchSnmpCommunityArgs struct {
	// SNMP notifications (traps) to send. Valid values: `cpu-high`, `mem-low`, `log-full`, `intf-ip`, `ent-conf-change`.
	Events pulumi.StringPtrInput `pulumi:"events"`
	// Configure IPv4 SNMP managers (hosts). The structure of `hosts` block is documented below.
	Hosts SwitchcontrollerManagedswitchSnmpCommunityHostArrayInput `pulumi:"hosts"`
	// SNMP community ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// SNMP community name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SNMP v1 query port (default = 161).
	QueryV1Port pulumi.IntPtrInput `pulumi:"queryV1Port"`
	// Enable/disable SNMP v1 queries. Valid values: `disable`, `enable`.
	QueryV1Status pulumi.StringPtrInput `pulumi:"queryV1Status"`
	// SNMP v2c query port (default = 161).
	QueryV2cPort pulumi.IntPtrInput `pulumi:"queryV2cPort"`
	// Enable/disable SNMP v2c queries. Valid values: `disable`, `enable`.
	QueryV2cStatus pulumi.StringPtrInput `pulumi:"queryV2cStatus"`
	// Enable/disable this SNMP community. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// SNMP v2c trap local port (default = 162).
	TrapV1Lport pulumi.IntPtrInput `pulumi:"trapV1Lport"`
	// SNMP v2c trap remote port (default = 162).
	TrapV1Rport pulumi.IntPtrInput `pulumi:"trapV1Rport"`
	// Enable/disable SNMP v1 traps. Valid values: `disable`, `enable`.
	TrapV1Status pulumi.StringPtrInput `pulumi:"trapV1Status"`
	// SNMP v2c trap local port (default = 162).
	TrapV2cLport pulumi.IntPtrInput `pulumi:"trapV2cLport"`
	// SNMP v2c trap remote port (default = 162).
	TrapV2cRport pulumi.IntPtrInput `pulumi:"trapV2cRport"`
	// Enable/disable SNMP v2c traps. Valid values: `disable`, `enable`.
	TrapV2cStatus pulumi.StringPtrInput `pulumi:"trapV2cStatus"`
}

func (SwitchcontrollerManagedswitchSnmpCommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpCommunity)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchSnmpCommunityArgs) ToSwitchcontrollerManagedswitchSnmpCommunityOutput() SwitchcontrollerManagedswitchSnmpCommunityOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpCommunityOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSnmpCommunityArgs) ToSwitchcontrollerManagedswitchSnmpCommunityOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpCommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpCommunityOutput)
}

// SwitchcontrollerManagedswitchSnmpCommunityArrayInput is an input type that accepts SwitchcontrollerManagedswitchSnmpCommunityArray and SwitchcontrollerManagedswitchSnmpCommunityArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSnmpCommunityArrayInput` via:
//
//	SwitchcontrollerManagedswitchSnmpCommunityArray{ SwitchcontrollerManagedswitchSnmpCommunityArgs{...} }
type SwitchcontrollerManagedswitchSnmpCommunityArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSnmpCommunityArrayOutput() SwitchcontrollerManagedswitchSnmpCommunityArrayOutput
	ToSwitchcontrollerManagedswitchSnmpCommunityArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchSnmpCommunityArrayOutput
}

type SwitchcontrollerManagedswitchSnmpCommunityArray []SwitchcontrollerManagedswitchSnmpCommunityInput

func (SwitchcontrollerManagedswitchSnmpCommunityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchSnmpCommunity)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchSnmpCommunityArray) ToSwitchcontrollerManagedswitchSnmpCommunityArrayOutput() SwitchcontrollerManagedswitchSnmpCommunityArrayOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpCommunityArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSnmpCommunityArray) ToSwitchcontrollerManagedswitchSnmpCommunityArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpCommunityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpCommunityArrayOutput)
}

type SwitchcontrollerManagedswitchSnmpCommunityOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSnmpCommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpCommunity)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) ToSwitchcontrollerManagedswitchSnmpCommunityOutput() SwitchcontrollerManagedswitchSnmpCommunityOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) ToSwitchcontrollerManagedswitchSnmpCommunityOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpCommunityOutput {
	return o
}

// SNMP notifications (traps) to send. Valid values: `cpu-high`, `mem-low`, `log-full`, `intf-ip`, `ent-conf-change`.
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) Events() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *string { return v.Events }).(pulumi.StringPtrOutput)
}

// Configure IPv4 SNMP managers (hosts). The structure of `hosts` block is documented below.
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) Hosts() SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) []SwitchcontrollerManagedswitchSnmpCommunityHost {
		return v.Hosts
	}).(SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput)
}

// SNMP community ID.
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// SNMP community name.
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SNMP v1 query port (default = 161).
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) QueryV1Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *int { return v.QueryV1Port }).(pulumi.IntPtrOutput)
}

// Enable/disable SNMP v1 queries. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) QueryV1Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *string { return v.QueryV1Status }).(pulumi.StringPtrOutput)
}

// SNMP v2c query port (default = 161).
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) QueryV2cPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *int { return v.QueryV2cPort }).(pulumi.IntPtrOutput)
}

// Enable/disable SNMP v2c queries. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) QueryV2cStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *string { return v.QueryV2cStatus }).(pulumi.StringPtrOutput)
}

// Enable/disable this SNMP community. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// SNMP v2c trap local port (default = 162).
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) TrapV1Lport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *int { return v.TrapV1Lport }).(pulumi.IntPtrOutput)
}

// SNMP v2c trap remote port (default = 162).
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) TrapV1Rport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *int { return v.TrapV1Rport }).(pulumi.IntPtrOutput)
}

// Enable/disable SNMP v1 traps. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) TrapV1Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *string { return v.TrapV1Status }).(pulumi.StringPtrOutput)
}

// SNMP v2c trap local port (default = 162).
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) TrapV2cLport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *int { return v.TrapV2cLport }).(pulumi.IntPtrOutput)
}

// SNMP v2c trap remote port (default = 162).
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) TrapV2cRport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *int { return v.TrapV2cRport }).(pulumi.IntPtrOutput)
}

// Enable/disable SNMP v2c traps. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchSnmpCommunityOutput) TrapV2cStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunity) *string { return v.TrapV2cStatus }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchSnmpCommunityArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSnmpCommunityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchSnmpCommunity)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSnmpCommunityArrayOutput) ToSwitchcontrollerManagedswitchSnmpCommunityArrayOutput() SwitchcontrollerManagedswitchSnmpCommunityArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpCommunityArrayOutput) ToSwitchcontrollerManagedswitchSnmpCommunityArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpCommunityArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpCommunityArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchSnmpCommunityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchSnmpCommunity {
		return vs[0].([]SwitchcontrollerManagedswitchSnmpCommunity)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchSnmpCommunityOutput)
}

type SwitchcontrollerManagedswitchSnmpCommunityHost struct {
	// Host entry ID.
	Id *int `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip *string `pulumi:"ip"`
}

// SwitchcontrollerManagedswitchSnmpCommunityHostInput is an input type that accepts SwitchcontrollerManagedswitchSnmpCommunityHostArgs and SwitchcontrollerManagedswitchSnmpCommunityHostOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSnmpCommunityHostInput` via:
//
//	SwitchcontrollerManagedswitchSnmpCommunityHostArgs{...}
type SwitchcontrollerManagedswitchSnmpCommunityHostInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSnmpCommunityHostOutput() SwitchcontrollerManagedswitchSnmpCommunityHostOutput
	ToSwitchcontrollerManagedswitchSnmpCommunityHostOutputWithContext(context.Context) SwitchcontrollerManagedswitchSnmpCommunityHostOutput
}

type SwitchcontrollerManagedswitchSnmpCommunityHostArgs struct {
	// Host entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SwitchcontrollerManagedswitchSnmpCommunityHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpCommunityHost)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchSnmpCommunityHostArgs) ToSwitchcontrollerManagedswitchSnmpCommunityHostOutput() SwitchcontrollerManagedswitchSnmpCommunityHostOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpCommunityHostOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSnmpCommunityHostArgs) ToSwitchcontrollerManagedswitchSnmpCommunityHostOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpCommunityHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpCommunityHostOutput)
}

// SwitchcontrollerManagedswitchSnmpCommunityHostArrayInput is an input type that accepts SwitchcontrollerManagedswitchSnmpCommunityHostArray and SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSnmpCommunityHostArrayInput` via:
//
//	SwitchcontrollerManagedswitchSnmpCommunityHostArray{ SwitchcontrollerManagedswitchSnmpCommunityHostArgs{...} }
type SwitchcontrollerManagedswitchSnmpCommunityHostArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput() SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput
	ToSwitchcontrollerManagedswitchSnmpCommunityHostArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput
}

type SwitchcontrollerManagedswitchSnmpCommunityHostArray []SwitchcontrollerManagedswitchSnmpCommunityHostInput

func (SwitchcontrollerManagedswitchSnmpCommunityHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchSnmpCommunityHost)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchSnmpCommunityHostArray) ToSwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput() SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpCommunityHostArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSnmpCommunityHostArray) ToSwitchcontrollerManagedswitchSnmpCommunityHostArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput)
}

type SwitchcontrollerManagedswitchSnmpCommunityHostOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSnmpCommunityHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpCommunityHost)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSnmpCommunityHostOutput) ToSwitchcontrollerManagedswitchSnmpCommunityHostOutput() SwitchcontrollerManagedswitchSnmpCommunityHostOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpCommunityHostOutput) ToSwitchcontrollerManagedswitchSnmpCommunityHostOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpCommunityHostOutput {
	return o
}

// Host entry ID.
func (o SwitchcontrollerManagedswitchSnmpCommunityHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunityHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 address of the SNMP manager (host).
func (o SwitchcontrollerManagedswitchSnmpCommunityHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpCommunityHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchSnmpCommunityHost)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput) ToSwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput() SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput) ToSwitchcontrollerManagedswitchSnmpCommunityHostArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchSnmpCommunityHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchSnmpCommunityHost {
		return vs[0].([]SwitchcontrollerManagedswitchSnmpCommunityHost)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchSnmpCommunityHostOutput)
}

type SwitchcontrollerManagedswitchSnmpSysinfo struct {
	// Contact information.
	ContactInfo *string `pulumi:"contactInfo"`
	// System description.
	Description *string `pulumi:"description"`
	// Local SNMP engine ID string (max 24 char).
	EngineId *string `pulumi:"engineId"`
	// System location.
	Location *string `pulumi:"location"`
	// Enable/disable SNMP. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// SwitchcontrollerManagedswitchSnmpSysinfoInput is an input type that accepts SwitchcontrollerManagedswitchSnmpSysinfoArgs and SwitchcontrollerManagedswitchSnmpSysinfoOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSnmpSysinfoInput` via:
//
//	SwitchcontrollerManagedswitchSnmpSysinfoArgs{...}
type SwitchcontrollerManagedswitchSnmpSysinfoInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSnmpSysinfoOutput() SwitchcontrollerManagedswitchSnmpSysinfoOutput
	ToSwitchcontrollerManagedswitchSnmpSysinfoOutputWithContext(context.Context) SwitchcontrollerManagedswitchSnmpSysinfoOutput
}

type SwitchcontrollerManagedswitchSnmpSysinfoArgs struct {
	// Contact information.
	ContactInfo pulumi.StringPtrInput `pulumi:"contactInfo"`
	// System description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Local SNMP engine ID string (max 24 char).
	EngineId pulumi.StringPtrInput `pulumi:"engineId"`
	// System location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Enable/disable SNMP. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SwitchcontrollerManagedswitchSnmpSysinfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpSysinfo)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchSnmpSysinfoArgs) ToSwitchcontrollerManagedswitchSnmpSysinfoOutput() SwitchcontrollerManagedswitchSnmpSysinfoOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpSysinfoOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSnmpSysinfoArgs) ToSwitchcontrollerManagedswitchSnmpSysinfoOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpSysinfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpSysinfoOutput)
}

func (i SwitchcontrollerManagedswitchSnmpSysinfoArgs) ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutput() SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSnmpSysinfoArgs) ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpSysinfoOutput).ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutputWithContext(ctx)
}

// SwitchcontrollerManagedswitchSnmpSysinfoPtrInput is an input type that accepts SwitchcontrollerManagedswitchSnmpSysinfoArgs, SwitchcontrollerManagedswitchSnmpSysinfoPtr and SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSnmpSysinfoPtrInput` via:
//
//	        SwitchcontrollerManagedswitchSnmpSysinfoArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerManagedswitchSnmpSysinfoPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutput() SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput
	ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutputWithContext(context.Context) SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput
}

type switchcontrollerManagedswitchSnmpSysinfoPtrType SwitchcontrollerManagedswitchSnmpSysinfoArgs

func SwitchcontrollerManagedswitchSnmpSysinfoPtr(v *SwitchcontrollerManagedswitchSnmpSysinfoArgs) SwitchcontrollerManagedswitchSnmpSysinfoPtrInput {
	return (*switchcontrollerManagedswitchSnmpSysinfoPtrType)(v)
}

func (*switchcontrollerManagedswitchSnmpSysinfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchSnmpSysinfo)(nil)).Elem()
}

func (i *switchcontrollerManagedswitchSnmpSysinfoPtrType) ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutput() SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerManagedswitchSnmpSysinfoPtrType) ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput)
}

type SwitchcontrollerManagedswitchSnmpSysinfoOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSnmpSysinfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpSysinfo)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSnmpSysinfoOutput) ToSwitchcontrollerManagedswitchSnmpSysinfoOutput() SwitchcontrollerManagedswitchSnmpSysinfoOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpSysinfoOutput) ToSwitchcontrollerManagedswitchSnmpSysinfoOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpSysinfoOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpSysinfoOutput) ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutput() SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput {
	return o.ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerManagedswitchSnmpSysinfoOutput) ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerManagedswitchSnmpSysinfo) *SwitchcontrollerManagedswitchSnmpSysinfo {
		return &v
	}).(SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput)
}

// Contact information.
func (o SwitchcontrollerManagedswitchSnmpSysinfoOutput) ContactInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpSysinfo) *string { return v.ContactInfo }).(pulumi.StringPtrOutput)
}

// System description.
func (o SwitchcontrollerManagedswitchSnmpSysinfoOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpSysinfo) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Local SNMP engine ID string (max 24 char).
func (o SwitchcontrollerManagedswitchSnmpSysinfoOutput) EngineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpSysinfo) *string { return v.EngineId }).(pulumi.StringPtrOutput)
}

// System location.
func (o SwitchcontrollerManagedswitchSnmpSysinfoOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpSysinfo) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Enable/disable SNMP. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchSnmpSysinfoOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpSysinfo) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchSnmpSysinfo)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput) ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutput() SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput) ToSwitchcontrollerManagedswitchSnmpSysinfoPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput) Elem() SwitchcontrollerManagedswitchSnmpSysinfoOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSnmpSysinfo) SwitchcontrollerManagedswitchSnmpSysinfo {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerManagedswitchSnmpSysinfo
		return ret
	}).(SwitchcontrollerManagedswitchSnmpSysinfoOutput)
}

// Contact information.
func (o SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput) ContactInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSnmpSysinfo) *string {
		if v == nil {
			return nil
		}
		return v.ContactInfo
	}).(pulumi.StringPtrOutput)
}

// System description.
func (o SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSnmpSysinfo) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Local SNMP engine ID string (max 24 char).
func (o SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput) EngineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSnmpSysinfo) *string {
		if v == nil {
			return nil
		}
		return v.EngineId
	}).(pulumi.StringPtrOutput)
}

// System location.
func (o SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSnmpSysinfo) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SNMP. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSnmpSysinfo) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchSnmpTrapThreshold struct {
	// CPU usage when trap is sent.
	TrapHighCpuThreshold *int `pulumi:"trapHighCpuThreshold"`
	// Log disk usage when trap is sent.
	TrapLogFullThreshold *int `pulumi:"trapLogFullThreshold"`
	// Memory usage when trap is sent.
	TrapLowMemoryThreshold *int `pulumi:"trapLowMemoryThreshold"`
}

// SwitchcontrollerManagedswitchSnmpTrapThresholdInput is an input type that accepts SwitchcontrollerManagedswitchSnmpTrapThresholdArgs and SwitchcontrollerManagedswitchSnmpTrapThresholdOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSnmpTrapThresholdInput` via:
//
//	SwitchcontrollerManagedswitchSnmpTrapThresholdArgs{...}
type SwitchcontrollerManagedswitchSnmpTrapThresholdInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSnmpTrapThresholdOutput() SwitchcontrollerManagedswitchSnmpTrapThresholdOutput
	ToSwitchcontrollerManagedswitchSnmpTrapThresholdOutputWithContext(context.Context) SwitchcontrollerManagedswitchSnmpTrapThresholdOutput
}

type SwitchcontrollerManagedswitchSnmpTrapThresholdArgs struct {
	// CPU usage when trap is sent.
	TrapHighCpuThreshold pulumi.IntPtrInput `pulumi:"trapHighCpuThreshold"`
	// Log disk usage when trap is sent.
	TrapLogFullThreshold pulumi.IntPtrInput `pulumi:"trapLogFullThreshold"`
	// Memory usage when trap is sent.
	TrapLowMemoryThreshold pulumi.IntPtrInput `pulumi:"trapLowMemoryThreshold"`
}

func (SwitchcontrollerManagedswitchSnmpTrapThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpTrapThreshold)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchSnmpTrapThresholdArgs) ToSwitchcontrollerManagedswitchSnmpTrapThresholdOutput() SwitchcontrollerManagedswitchSnmpTrapThresholdOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpTrapThresholdOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSnmpTrapThresholdArgs) ToSwitchcontrollerManagedswitchSnmpTrapThresholdOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpTrapThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpTrapThresholdOutput)
}

func (i SwitchcontrollerManagedswitchSnmpTrapThresholdArgs) ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput() SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSnmpTrapThresholdArgs) ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpTrapThresholdOutput).ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutputWithContext(ctx)
}

// SwitchcontrollerManagedswitchSnmpTrapThresholdPtrInput is an input type that accepts SwitchcontrollerManagedswitchSnmpTrapThresholdArgs, SwitchcontrollerManagedswitchSnmpTrapThresholdPtr and SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSnmpTrapThresholdPtrInput` via:
//
//	        SwitchcontrollerManagedswitchSnmpTrapThresholdArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerManagedswitchSnmpTrapThresholdPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput() SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput
	ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutputWithContext(context.Context) SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput
}

type switchcontrollerManagedswitchSnmpTrapThresholdPtrType SwitchcontrollerManagedswitchSnmpTrapThresholdArgs

func SwitchcontrollerManagedswitchSnmpTrapThresholdPtr(v *SwitchcontrollerManagedswitchSnmpTrapThresholdArgs) SwitchcontrollerManagedswitchSnmpTrapThresholdPtrInput {
	return (*switchcontrollerManagedswitchSnmpTrapThresholdPtrType)(v)
}

func (*switchcontrollerManagedswitchSnmpTrapThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchSnmpTrapThreshold)(nil)).Elem()
}

func (i *switchcontrollerManagedswitchSnmpTrapThresholdPtrType) ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput() SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerManagedswitchSnmpTrapThresholdPtrType) ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput)
}

type SwitchcontrollerManagedswitchSnmpTrapThresholdOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSnmpTrapThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpTrapThreshold)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSnmpTrapThresholdOutput) ToSwitchcontrollerManagedswitchSnmpTrapThresholdOutput() SwitchcontrollerManagedswitchSnmpTrapThresholdOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpTrapThresholdOutput) ToSwitchcontrollerManagedswitchSnmpTrapThresholdOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpTrapThresholdOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpTrapThresholdOutput) ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput() SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput {
	return o.ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerManagedswitchSnmpTrapThresholdOutput) ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerManagedswitchSnmpTrapThreshold) *SwitchcontrollerManagedswitchSnmpTrapThreshold {
		return &v
	}).(SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput)
}

// CPU usage when trap is sent.
func (o SwitchcontrollerManagedswitchSnmpTrapThresholdOutput) TrapHighCpuThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpTrapThreshold) *int { return v.TrapHighCpuThreshold }).(pulumi.IntPtrOutput)
}

// Log disk usage when trap is sent.
func (o SwitchcontrollerManagedswitchSnmpTrapThresholdOutput) TrapLogFullThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpTrapThreshold) *int { return v.TrapLogFullThreshold }).(pulumi.IntPtrOutput)
}

// Memory usage when trap is sent.
func (o SwitchcontrollerManagedswitchSnmpTrapThresholdOutput) TrapLowMemoryThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpTrapThreshold) *int { return v.TrapLowMemoryThreshold }).(pulumi.IntPtrOutput)
}

type SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchSnmpTrapThreshold)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput) ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput() SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput) ToSwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput) Elem() SwitchcontrollerManagedswitchSnmpTrapThresholdOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSnmpTrapThreshold) SwitchcontrollerManagedswitchSnmpTrapThreshold {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerManagedswitchSnmpTrapThreshold
		return ret
	}).(SwitchcontrollerManagedswitchSnmpTrapThresholdOutput)
}

// CPU usage when trap is sent.
func (o SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput) TrapHighCpuThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSnmpTrapThreshold) *int {
		if v == nil {
			return nil
		}
		return v.TrapHighCpuThreshold
	}).(pulumi.IntPtrOutput)
}

// Log disk usage when trap is sent.
func (o SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput) TrapLogFullThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSnmpTrapThreshold) *int {
		if v == nil {
			return nil
		}
		return v.TrapLogFullThreshold
	}).(pulumi.IntPtrOutput)
}

// Memory usage when trap is sent.
func (o SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput) TrapLowMemoryThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSnmpTrapThreshold) *int {
		if v == nil {
			return nil
		}
		return v.TrapLowMemoryThreshold
	}).(pulumi.IntPtrOutput)
}

type SwitchcontrollerManagedswitchSnmpUser struct {
	// Authentication protocol.
	AuthProto *string `pulumi:"authProto"`
	// Password for authentication protocol.
	AuthPwd *string `pulumi:"authPwd"`
	// SNMP user name.
	Name *string `pulumi:"name"`
	// Privacy (encryption) protocol.
	PrivProto *string `pulumi:"privProto"`
	// Password for privacy (encryption) protocol.
	PrivPwd *string `pulumi:"privPwd"`
	// Enable/disable SNMP queries for this user. Valid values: `disable`, `enable`.
	Queries *string `pulumi:"queries"`
	// SNMPv3 query port (default = 161).
	QueryPort *int `pulumi:"queryPort"`
	// Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`.
	SecurityLevel *string `pulumi:"securityLevel"`
}

// SwitchcontrollerManagedswitchSnmpUserInput is an input type that accepts SwitchcontrollerManagedswitchSnmpUserArgs and SwitchcontrollerManagedswitchSnmpUserOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSnmpUserInput` via:
//
//	SwitchcontrollerManagedswitchSnmpUserArgs{...}
type SwitchcontrollerManagedswitchSnmpUserInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSnmpUserOutput() SwitchcontrollerManagedswitchSnmpUserOutput
	ToSwitchcontrollerManagedswitchSnmpUserOutputWithContext(context.Context) SwitchcontrollerManagedswitchSnmpUserOutput
}

type SwitchcontrollerManagedswitchSnmpUserArgs struct {
	// Authentication protocol.
	AuthProto pulumi.StringPtrInput `pulumi:"authProto"`
	// Password for authentication protocol.
	AuthPwd pulumi.StringPtrInput `pulumi:"authPwd"`
	// SNMP user name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Privacy (encryption) protocol.
	PrivProto pulumi.StringPtrInput `pulumi:"privProto"`
	// Password for privacy (encryption) protocol.
	PrivPwd pulumi.StringPtrInput `pulumi:"privPwd"`
	// Enable/disable SNMP queries for this user. Valid values: `disable`, `enable`.
	Queries pulumi.StringPtrInput `pulumi:"queries"`
	// SNMPv3 query port (default = 161).
	QueryPort pulumi.IntPtrInput `pulumi:"queryPort"`
	// Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`.
	SecurityLevel pulumi.StringPtrInput `pulumi:"securityLevel"`
}

func (SwitchcontrollerManagedswitchSnmpUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpUser)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchSnmpUserArgs) ToSwitchcontrollerManagedswitchSnmpUserOutput() SwitchcontrollerManagedswitchSnmpUserOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpUserOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSnmpUserArgs) ToSwitchcontrollerManagedswitchSnmpUserOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpUserOutput)
}

// SwitchcontrollerManagedswitchSnmpUserArrayInput is an input type that accepts SwitchcontrollerManagedswitchSnmpUserArray and SwitchcontrollerManagedswitchSnmpUserArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSnmpUserArrayInput` via:
//
//	SwitchcontrollerManagedswitchSnmpUserArray{ SwitchcontrollerManagedswitchSnmpUserArgs{...} }
type SwitchcontrollerManagedswitchSnmpUserArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSnmpUserArrayOutput() SwitchcontrollerManagedswitchSnmpUserArrayOutput
	ToSwitchcontrollerManagedswitchSnmpUserArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchSnmpUserArrayOutput
}

type SwitchcontrollerManagedswitchSnmpUserArray []SwitchcontrollerManagedswitchSnmpUserInput

func (SwitchcontrollerManagedswitchSnmpUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchSnmpUser)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchSnmpUserArray) ToSwitchcontrollerManagedswitchSnmpUserArrayOutput() SwitchcontrollerManagedswitchSnmpUserArrayOutput {
	return i.ToSwitchcontrollerManagedswitchSnmpUserArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSnmpUserArray) ToSwitchcontrollerManagedswitchSnmpUserArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSnmpUserArrayOutput)
}

type SwitchcontrollerManagedswitchSnmpUserOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSnmpUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpUser)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSnmpUserOutput) ToSwitchcontrollerManagedswitchSnmpUserOutput() SwitchcontrollerManagedswitchSnmpUserOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpUserOutput) ToSwitchcontrollerManagedswitchSnmpUserOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpUserOutput {
	return o
}

// Authentication protocol.
func (o SwitchcontrollerManagedswitchSnmpUserOutput) AuthProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpUser) *string { return v.AuthProto }).(pulumi.StringPtrOutput)
}

// Password for authentication protocol.
func (o SwitchcontrollerManagedswitchSnmpUserOutput) AuthPwd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpUser) *string { return v.AuthPwd }).(pulumi.StringPtrOutput)
}

// SNMP user name.
func (o SwitchcontrollerManagedswitchSnmpUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Privacy (encryption) protocol.
func (o SwitchcontrollerManagedswitchSnmpUserOutput) PrivProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpUser) *string { return v.PrivProto }).(pulumi.StringPtrOutput)
}

// Password for privacy (encryption) protocol.
func (o SwitchcontrollerManagedswitchSnmpUserOutput) PrivPwd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpUser) *string { return v.PrivPwd }).(pulumi.StringPtrOutput)
}

// Enable/disable SNMP queries for this user. Valid values: `disable`, `enable`.
func (o SwitchcontrollerManagedswitchSnmpUserOutput) Queries() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpUser) *string { return v.Queries }).(pulumi.StringPtrOutput)
}

// SNMPv3 query port (default = 161).
func (o SwitchcontrollerManagedswitchSnmpUserOutput) QueryPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpUser) *int { return v.QueryPort }).(pulumi.IntPtrOutput)
}

// Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`.
func (o SwitchcontrollerManagedswitchSnmpUserOutput) SecurityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSnmpUser) *string { return v.SecurityLevel }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchSnmpUserArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSnmpUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchSnmpUser)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSnmpUserArrayOutput) ToSwitchcontrollerManagedswitchSnmpUserArrayOutput() SwitchcontrollerManagedswitchSnmpUserArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpUserArrayOutput) ToSwitchcontrollerManagedswitchSnmpUserArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSnmpUserArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSnmpUserArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchSnmpUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchSnmpUser {
		return vs[0].([]SwitchcontrollerManagedswitchSnmpUser)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchSnmpUserOutput)
}

type SwitchcontrollerManagedswitchStaticMac struct {
	// Description.
	Description *string `pulumi:"description"`
	// Id
	Id *int `pulumi:"id"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// MAC address.
	Mac *string `pulumi:"mac"`
	// Type. Valid values: `static`, `sticky`.
	Type *string `pulumi:"type"`
	// Vlan.
	Vlan *string `pulumi:"vlan"`
}

// SwitchcontrollerManagedswitchStaticMacInput is an input type that accepts SwitchcontrollerManagedswitchStaticMacArgs and SwitchcontrollerManagedswitchStaticMacOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchStaticMacInput` via:
//
//	SwitchcontrollerManagedswitchStaticMacArgs{...}
type SwitchcontrollerManagedswitchStaticMacInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchStaticMacOutput() SwitchcontrollerManagedswitchStaticMacOutput
	ToSwitchcontrollerManagedswitchStaticMacOutputWithContext(context.Context) SwitchcontrollerManagedswitchStaticMacOutput
}

type SwitchcontrollerManagedswitchStaticMacArgs struct {
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Id
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// MAC address.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Type. Valid values: `static`, `sticky`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Vlan.
	Vlan pulumi.StringPtrInput `pulumi:"vlan"`
}

func (SwitchcontrollerManagedswitchStaticMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchStaticMac)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchStaticMacArgs) ToSwitchcontrollerManagedswitchStaticMacOutput() SwitchcontrollerManagedswitchStaticMacOutput {
	return i.ToSwitchcontrollerManagedswitchStaticMacOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchStaticMacArgs) ToSwitchcontrollerManagedswitchStaticMacOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStaticMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchStaticMacOutput)
}

// SwitchcontrollerManagedswitchStaticMacArrayInput is an input type that accepts SwitchcontrollerManagedswitchStaticMacArray and SwitchcontrollerManagedswitchStaticMacArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchStaticMacArrayInput` via:
//
//	SwitchcontrollerManagedswitchStaticMacArray{ SwitchcontrollerManagedswitchStaticMacArgs{...} }
type SwitchcontrollerManagedswitchStaticMacArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchStaticMacArrayOutput() SwitchcontrollerManagedswitchStaticMacArrayOutput
	ToSwitchcontrollerManagedswitchStaticMacArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchStaticMacArrayOutput
}

type SwitchcontrollerManagedswitchStaticMacArray []SwitchcontrollerManagedswitchStaticMacInput

func (SwitchcontrollerManagedswitchStaticMacArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchStaticMac)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchStaticMacArray) ToSwitchcontrollerManagedswitchStaticMacArrayOutput() SwitchcontrollerManagedswitchStaticMacArrayOutput {
	return i.ToSwitchcontrollerManagedswitchStaticMacArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchStaticMacArray) ToSwitchcontrollerManagedswitchStaticMacArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStaticMacArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchStaticMacArrayOutput)
}

type SwitchcontrollerManagedswitchStaticMacOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchStaticMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchStaticMac)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchStaticMacOutput) ToSwitchcontrollerManagedswitchStaticMacOutput() SwitchcontrollerManagedswitchStaticMacOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStaticMacOutput) ToSwitchcontrollerManagedswitchStaticMacOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStaticMacOutput {
	return o
}

// Description.
func (o SwitchcontrollerManagedswitchStaticMacOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStaticMac) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Id
func (o SwitchcontrollerManagedswitchStaticMacOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStaticMac) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o SwitchcontrollerManagedswitchStaticMacOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStaticMac) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// MAC address.
func (o SwitchcontrollerManagedswitchStaticMacOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStaticMac) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Type. Valid values: `static`, `sticky`.
func (o SwitchcontrollerManagedswitchStaticMacOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStaticMac) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Vlan.
func (o SwitchcontrollerManagedswitchStaticMacOutput) Vlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStaticMac) *string { return v.Vlan }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchStaticMacArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchStaticMacArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchStaticMac)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchStaticMacArrayOutput) ToSwitchcontrollerManagedswitchStaticMacArrayOutput() SwitchcontrollerManagedswitchStaticMacArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStaticMacArrayOutput) ToSwitchcontrollerManagedswitchStaticMacArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStaticMacArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStaticMacArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchStaticMacOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchStaticMac {
		return vs[0].([]SwitchcontrollerManagedswitchStaticMac)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchStaticMacOutput)
}

type SwitchcontrollerManagedswitchStormControl struct {
	// Enable/disable storm control to drop broadcast traffic. Valid values: `enable`, `disable`.
	Broadcast *string `pulumi:"broadcast"`
	// Enable to override global FortiSwitch storm control settings for this FortiSwitch. Valid values: `enable`, `disable`.
	LocalOverride *string `pulumi:"localOverride"`
	// Rate in packets per second at which storm traffic is controlled (1 - 10000000, default = 500). Storm control drops excess traffic data rates beyond this threshold.
	Rate *int `pulumi:"rate"`
	// Enable/disable storm control to drop unknown multicast traffic. Valid values: `enable`, `disable`.
	UnknownMulticast *string `pulumi:"unknownMulticast"`
	// Enable/disable storm control to drop unknown unicast traffic. Valid values: `enable`, `disable`.
	UnknownUnicast *string `pulumi:"unknownUnicast"`
}

// SwitchcontrollerManagedswitchStormControlInput is an input type that accepts SwitchcontrollerManagedswitchStormControlArgs and SwitchcontrollerManagedswitchStormControlOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchStormControlInput` via:
//
//	SwitchcontrollerManagedswitchStormControlArgs{...}
type SwitchcontrollerManagedswitchStormControlInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchStormControlOutput() SwitchcontrollerManagedswitchStormControlOutput
	ToSwitchcontrollerManagedswitchStormControlOutputWithContext(context.Context) SwitchcontrollerManagedswitchStormControlOutput
}

type SwitchcontrollerManagedswitchStormControlArgs struct {
	// Enable/disable storm control to drop broadcast traffic. Valid values: `enable`, `disable`.
	Broadcast pulumi.StringPtrInput `pulumi:"broadcast"`
	// Enable to override global FortiSwitch storm control settings for this FortiSwitch. Valid values: `enable`, `disable`.
	LocalOverride pulumi.StringPtrInput `pulumi:"localOverride"`
	// Rate in packets per second at which storm traffic is controlled (1 - 10000000, default = 500). Storm control drops excess traffic data rates beyond this threshold.
	Rate pulumi.IntPtrInput `pulumi:"rate"`
	// Enable/disable storm control to drop unknown multicast traffic. Valid values: `enable`, `disable`.
	UnknownMulticast pulumi.StringPtrInput `pulumi:"unknownMulticast"`
	// Enable/disable storm control to drop unknown unicast traffic. Valid values: `enable`, `disable`.
	UnknownUnicast pulumi.StringPtrInput `pulumi:"unknownUnicast"`
}

func (SwitchcontrollerManagedswitchStormControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchStormControl)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchStormControlArgs) ToSwitchcontrollerManagedswitchStormControlOutput() SwitchcontrollerManagedswitchStormControlOutput {
	return i.ToSwitchcontrollerManagedswitchStormControlOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchStormControlArgs) ToSwitchcontrollerManagedswitchStormControlOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStormControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchStormControlOutput)
}

func (i SwitchcontrollerManagedswitchStormControlArgs) ToSwitchcontrollerManagedswitchStormControlPtrOutput() SwitchcontrollerManagedswitchStormControlPtrOutput {
	return i.ToSwitchcontrollerManagedswitchStormControlPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchStormControlArgs) ToSwitchcontrollerManagedswitchStormControlPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStormControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchStormControlOutput).ToSwitchcontrollerManagedswitchStormControlPtrOutputWithContext(ctx)
}

// SwitchcontrollerManagedswitchStormControlPtrInput is an input type that accepts SwitchcontrollerManagedswitchStormControlArgs, SwitchcontrollerManagedswitchStormControlPtr and SwitchcontrollerManagedswitchStormControlPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchStormControlPtrInput` via:
//
//	        SwitchcontrollerManagedswitchStormControlArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerManagedswitchStormControlPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchStormControlPtrOutput() SwitchcontrollerManagedswitchStormControlPtrOutput
	ToSwitchcontrollerManagedswitchStormControlPtrOutputWithContext(context.Context) SwitchcontrollerManagedswitchStormControlPtrOutput
}

type switchcontrollerManagedswitchStormControlPtrType SwitchcontrollerManagedswitchStormControlArgs

func SwitchcontrollerManagedswitchStormControlPtr(v *SwitchcontrollerManagedswitchStormControlArgs) SwitchcontrollerManagedswitchStormControlPtrInput {
	return (*switchcontrollerManagedswitchStormControlPtrType)(v)
}

func (*switchcontrollerManagedswitchStormControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchStormControl)(nil)).Elem()
}

func (i *switchcontrollerManagedswitchStormControlPtrType) ToSwitchcontrollerManagedswitchStormControlPtrOutput() SwitchcontrollerManagedswitchStormControlPtrOutput {
	return i.ToSwitchcontrollerManagedswitchStormControlPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerManagedswitchStormControlPtrType) ToSwitchcontrollerManagedswitchStormControlPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStormControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchStormControlPtrOutput)
}

type SwitchcontrollerManagedswitchStormControlOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchStormControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchStormControl)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchStormControlOutput) ToSwitchcontrollerManagedswitchStormControlOutput() SwitchcontrollerManagedswitchStormControlOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStormControlOutput) ToSwitchcontrollerManagedswitchStormControlOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStormControlOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStormControlOutput) ToSwitchcontrollerManagedswitchStormControlPtrOutput() SwitchcontrollerManagedswitchStormControlPtrOutput {
	return o.ToSwitchcontrollerManagedswitchStormControlPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerManagedswitchStormControlOutput) ToSwitchcontrollerManagedswitchStormControlPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStormControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerManagedswitchStormControl) *SwitchcontrollerManagedswitchStormControl {
		return &v
	}).(SwitchcontrollerManagedswitchStormControlPtrOutput)
}

// Enable/disable storm control to drop broadcast traffic. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStormControlOutput) Broadcast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStormControl) *string { return v.Broadcast }).(pulumi.StringPtrOutput)
}

// Enable to override global FortiSwitch storm control settings for this FortiSwitch. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStormControlOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStormControl) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

// Rate in packets per second at which storm traffic is controlled (1 - 10000000, default = 500). Storm control drops excess traffic data rates beyond this threshold.
func (o SwitchcontrollerManagedswitchStormControlOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStormControl) *int { return v.Rate }).(pulumi.IntPtrOutput)
}

// Enable/disable storm control to drop unknown multicast traffic. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStormControlOutput) UnknownMulticast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStormControl) *string { return v.UnknownMulticast }).(pulumi.StringPtrOutput)
}

// Enable/disable storm control to drop unknown unicast traffic. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStormControlOutput) UnknownUnicast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStormControl) *string { return v.UnknownUnicast }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchStormControlPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchStormControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchStormControl)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchStormControlPtrOutput) ToSwitchcontrollerManagedswitchStormControlPtrOutput() SwitchcontrollerManagedswitchStormControlPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStormControlPtrOutput) ToSwitchcontrollerManagedswitchStormControlPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStormControlPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStormControlPtrOutput) Elem() SwitchcontrollerManagedswitchStormControlOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStormControl) SwitchcontrollerManagedswitchStormControl {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerManagedswitchStormControl
		return ret
	}).(SwitchcontrollerManagedswitchStormControlOutput)
}

// Enable/disable storm control to drop broadcast traffic. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStormControlPtrOutput) Broadcast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStormControl) *string {
		if v == nil {
			return nil
		}
		return v.Broadcast
	}).(pulumi.StringPtrOutput)
}

// Enable to override global FortiSwitch storm control settings for this FortiSwitch. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStormControlPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStormControl) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

// Rate in packets per second at which storm traffic is controlled (1 - 10000000, default = 500). Storm control drops excess traffic data rates beyond this threshold.
func (o SwitchcontrollerManagedswitchStormControlPtrOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStormControl) *int {
		if v == nil {
			return nil
		}
		return v.Rate
	}).(pulumi.IntPtrOutput)
}

// Enable/disable storm control to drop unknown multicast traffic. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStormControlPtrOutput) UnknownMulticast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStormControl) *string {
		if v == nil {
			return nil
		}
		return v.UnknownMulticast
	}).(pulumi.StringPtrOutput)
}

// Enable/disable storm control to drop unknown unicast traffic. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStormControlPtrOutput) UnknownUnicast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStormControl) *string {
		if v == nil {
			return nil
		}
		return v.UnknownUnicast
	}).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchStpInstance struct {
	// Instance ID.
	Id *string `pulumi:"id"`
	// Priority. Valid values: `0`, `4096`, `8192`, `12288`, `16384`, `20480`, `24576`, `28672`, `32768`, `36864`, `40960`, `45056`, `49152`, `53248`, `57344`, `61440`.
	Priority *string `pulumi:"priority"`
}

// SwitchcontrollerManagedswitchStpInstanceInput is an input type that accepts SwitchcontrollerManagedswitchStpInstanceArgs and SwitchcontrollerManagedswitchStpInstanceOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchStpInstanceInput` via:
//
//	SwitchcontrollerManagedswitchStpInstanceArgs{...}
type SwitchcontrollerManagedswitchStpInstanceInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchStpInstanceOutput() SwitchcontrollerManagedswitchStpInstanceOutput
	ToSwitchcontrollerManagedswitchStpInstanceOutputWithContext(context.Context) SwitchcontrollerManagedswitchStpInstanceOutput
}

type SwitchcontrollerManagedswitchStpInstanceArgs struct {
	// Instance ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Priority. Valid values: `0`, `4096`, `8192`, `12288`, `16384`, `20480`, `24576`, `28672`, `32768`, `36864`, `40960`, `45056`, `49152`, `53248`, `57344`, `61440`.
	Priority pulumi.StringPtrInput `pulumi:"priority"`
}

func (SwitchcontrollerManagedswitchStpInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchStpInstance)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchStpInstanceArgs) ToSwitchcontrollerManagedswitchStpInstanceOutput() SwitchcontrollerManagedswitchStpInstanceOutput {
	return i.ToSwitchcontrollerManagedswitchStpInstanceOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchStpInstanceArgs) ToSwitchcontrollerManagedswitchStpInstanceOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStpInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchStpInstanceOutput)
}

// SwitchcontrollerManagedswitchStpInstanceArrayInput is an input type that accepts SwitchcontrollerManagedswitchStpInstanceArray and SwitchcontrollerManagedswitchStpInstanceArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchStpInstanceArrayInput` via:
//
//	SwitchcontrollerManagedswitchStpInstanceArray{ SwitchcontrollerManagedswitchStpInstanceArgs{...} }
type SwitchcontrollerManagedswitchStpInstanceArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchStpInstanceArrayOutput() SwitchcontrollerManagedswitchStpInstanceArrayOutput
	ToSwitchcontrollerManagedswitchStpInstanceArrayOutputWithContext(context.Context) SwitchcontrollerManagedswitchStpInstanceArrayOutput
}

type SwitchcontrollerManagedswitchStpInstanceArray []SwitchcontrollerManagedswitchStpInstanceInput

func (SwitchcontrollerManagedswitchStpInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchStpInstance)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchStpInstanceArray) ToSwitchcontrollerManagedswitchStpInstanceArrayOutput() SwitchcontrollerManagedswitchStpInstanceArrayOutput {
	return i.ToSwitchcontrollerManagedswitchStpInstanceArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchStpInstanceArray) ToSwitchcontrollerManagedswitchStpInstanceArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStpInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchStpInstanceArrayOutput)
}

type SwitchcontrollerManagedswitchStpInstanceOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchStpInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchStpInstance)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchStpInstanceOutput) ToSwitchcontrollerManagedswitchStpInstanceOutput() SwitchcontrollerManagedswitchStpInstanceOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStpInstanceOutput) ToSwitchcontrollerManagedswitchStpInstanceOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStpInstanceOutput {
	return o
}

// Instance ID.
func (o SwitchcontrollerManagedswitchStpInstanceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpInstance) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Priority. Valid values: `0`, `4096`, `8192`, `12288`, `16384`, `20480`, `24576`, `28672`, `32768`, `36864`, `40960`, `45056`, `49152`, `53248`, `57344`, `61440`.
func (o SwitchcontrollerManagedswitchStpInstanceOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpInstance) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchStpInstanceArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchStpInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerManagedswitchStpInstance)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchStpInstanceArrayOutput) ToSwitchcontrollerManagedswitchStpInstanceArrayOutput() SwitchcontrollerManagedswitchStpInstanceArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStpInstanceArrayOutput) ToSwitchcontrollerManagedswitchStpInstanceArrayOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStpInstanceArrayOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStpInstanceArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerManagedswitchStpInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerManagedswitchStpInstance {
		return vs[0].([]SwitchcontrollerManagedswitchStpInstance)[vs[1].(int)]
	}).(SwitchcontrollerManagedswitchStpInstanceOutput)
}

type SwitchcontrollerManagedswitchStpSettings struct {
	// Period of time a port is in listening and learning state (4 - 30 sec, default = 15).
	ForwardTime *int `pulumi:"forwardTime"`
	// Period of time between successive STP frame Bridge Protocol Data Units (BPDUs) sent on a port (1 - 10 sec, default = 2).
	HelloTime *int `pulumi:"helloTime"`
	// Enable to configure local STP settings that override global STP settings. Valid values: `enable`, `disable`.
	LocalOverride *string `pulumi:"localOverride"`
	// Maximum time before a bridge port saves its configuration BPDU information (6 - 40 sec, default = 20).
	MaxAge *int `pulumi:"maxAge"`
	// Maximum number of hops between the root bridge and the furthest bridge (1- 40, default = 20).
	MaxHops *int `pulumi:"maxHops"`
	// Name of local STP settings configuration.
	Name *string `pulumi:"name"`
	// Pending time (1 - 15 sec, default = 4).
	PendingTimer *int `pulumi:"pendingTimer"`
	// STP revision number (0 - 65535).
	Revision *int `pulumi:"revision"`
	// Enable/disable STP. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// SwitchcontrollerManagedswitchStpSettingsInput is an input type that accepts SwitchcontrollerManagedswitchStpSettingsArgs and SwitchcontrollerManagedswitchStpSettingsOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchStpSettingsInput` via:
//
//	SwitchcontrollerManagedswitchStpSettingsArgs{...}
type SwitchcontrollerManagedswitchStpSettingsInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchStpSettingsOutput() SwitchcontrollerManagedswitchStpSettingsOutput
	ToSwitchcontrollerManagedswitchStpSettingsOutputWithContext(context.Context) SwitchcontrollerManagedswitchStpSettingsOutput
}

type SwitchcontrollerManagedswitchStpSettingsArgs struct {
	// Period of time a port is in listening and learning state (4 - 30 sec, default = 15).
	ForwardTime pulumi.IntPtrInput `pulumi:"forwardTime"`
	// Period of time between successive STP frame Bridge Protocol Data Units (BPDUs) sent on a port (1 - 10 sec, default = 2).
	HelloTime pulumi.IntPtrInput `pulumi:"helloTime"`
	// Enable to configure local STP settings that override global STP settings. Valid values: `enable`, `disable`.
	LocalOverride pulumi.StringPtrInput `pulumi:"localOverride"`
	// Maximum time before a bridge port saves its configuration BPDU information (6 - 40 sec, default = 20).
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
	// Maximum number of hops between the root bridge and the furthest bridge (1- 40, default = 20).
	MaxHops pulumi.IntPtrInput `pulumi:"maxHops"`
	// Name of local STP settings configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pending time (1 - 15 sec, default = 4).
	PendingTimer pulumi.IntPtrInput `pulumi:"pendingTimer"`
	// STP revision number (0 - 65535).
	Revision pulumi.IntPtrInput `pulumi:"revision"`
	// Enable/disable STP. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SwitchcontrollerManagedswitchStpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchStpSettings)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchStpSettingsArgs) ToSwitchcontrollerManagedswitchStpSettingsOutput() SwitchcontrollerManagedswitchStpSettingsOutput {
	return i.ToSwitchcontrollerManagedswitchStpSettingsOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchStpSettingsArgs) ToSwitchcontrollerManagedswitchStpSettingsOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchStpSettingsOutput)
}

func (i SwitchcontrollerManagedswitchStpSettingsArgs) ToSwitchcontrollerManagedswitchStpSettingsPtrOutput() SwitchcontrollerManagedswitchStpSettingsPtrOutput {
	return i.ToSwitchcontrollerManagedswitchStpSettingsPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchStpSettingsArgs) ToSwitchcontrollerManagedswitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchStpSettingsOutput).ToSwitchcontrollerManagedswitchStpSettingsPtrOutputWithContext(ctx)
}

// SwitchcontrollerManagedswitchStpSettingsPtrInput is an input type that accepts SwitchcontrollerManagedswitchStpSettingsArgs, SwitchcontrollerManagedswitchStpSettingsPtr and SwitchcontrollerManagedswitchStpSettingsPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchStpSettingsPtrInput` via:
//
//	        SwitchcontrollerManagedswitchStpSettingsArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerManagedswitchStpSettingsPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchStpSettingsPtrOutput() SwitchcontrollerManagedswitchStpSettingsPtrOutput
	ToSwitchcontrollerManagedswitchStpSettingsPtrOutputWithContext(context.Context) SwitchcontrollerManagedswitchStpSettingsPtrOutput
}

type switchcontrollerManagedswitchStpSettingsPtrType SwitchcontrollerManagedswitchStpSettingsArgs

func SwitchcontrollerManagedswitchStpSettingsPtr(v *SwitchcontrollerManagedswitchStpSettingsArgs) SwitchcontrollerManagedswitchStpSettingsPtrInput {
	return (*switchcontrollerManagedswitchStpSettingsPtrType)(v)
}

func (*switchcontrollerManagedswitchStpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchStpSettings)(nil)).Elem()
}

func (i *switchcontrollerManagedswitchStpSettingsPtrType) ToSwitchcontrollerManagedswitchStpSettingsPtrOutput() SwitchcontrollerManagedswitchStpSettingsPtrOutput {
	return i.ToSwitchcontrollerManagedswitchStpSettingsPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerManagedswitchStpSettingsPtrType) ToSwitchcontrollerManagedswitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchStpSettingsPtrOutput)
}

type SwitchcontrollerManagedswitchStpSettingsOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchStpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchStpSettings)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchStpSettingsOutput) ToSwitchcontrollerManagedswitchStpSettingsOutput() SwitchcontrollerManagedswitchStpSettingsOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStpSettingsOutput) ToSwitchcontrollerManagedswitchStpSettingsOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStpSettingsOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStpSettingsOutput) ToSwitchcontrollerManagedswitchStpSettingsPtrOutput() SwitchcontrollerManagedswitchStpSettingsPtrOutput {
	return o.ToSwitchcontrollerManagedswitchStpSettingsPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerManagedswitchStpSettingsOutput) ToSwitchcontrollerManagedswitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerManagedswitchStpSettings) *SwitchcontrollerManagedswitchStpSettings {
		return &v
	}).(SwitchcontrollerManagedswitchStpSettingsPtrOutput)
}

// Period of time a port is in listening and learning state (4 - 30 sec, default = 15).
func (o SwitchcontrollerManagedswitchStpSettingsOutput) ForwardTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpSettings) *int { return v.ForwardTime }).(pulumi.IntPtrOutput)
}

// Period of time between successive STP frame Bridge Protocol Data Units (BPDUs) sent on a port (1 - 10 sec, default = 2).
func (o SwitchcontrollerManagedswitchStpSettingsOutput) HelloTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpSettings) *int { return v.HelloTime }).(pulumi.IntPtrOutput)
}

// Enable to configure local STP settings that override global STP settings. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStpSettingsOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpSettings) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

// Maximum time before a bridge port saves its configuration BPDU information (6 - 40 sec, default = 20).
func (o SwitchcontrollerManagedswitchStpSettingsOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpSettings) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

// Maximum number of hops between the root bridge and the furthest bridge (1- 40, default = 20).
func (o SwitchcontrollerManagedswitchStpSettingsOutput) MaxHops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpSettings) *int { return v.MaxHops }).(pulumi.IntPtrOutput)
}

// Name of local STP settings configuration.
func (o SwitchcontrollerManagedswitchStpSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pending time (1 - 15 sec, default = 4).
func (o SwitchcontrollerManagedswitchStpSettingsOutput) PendingTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpSettings) *int { return v.PendingTimer }).(pulumi.IntPtrOutput)
}

// STP revision number (0 - 65535).
func (o SwitchcontrollerManagedswitchStpSettingsOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpSettings) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

// Enable/disable STP. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStpSettingsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchStpSettings) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchStpSettingsPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchStpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchStpSettings)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) ToSwitchcontrollerManagedswitchStpSettingsPtrOutput() SwitchcontrollerManagedswitchStpSettingsPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) ToSwitchcontrollerManagedswitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchStpSettingsPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) Elem() SwitchcontrollerManagedswitchStpSettingsOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStpSettings) SwitchcontrollerManagedswitchStpSettings {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerManagedswitchStpSettings
		return ret
	}).(SwitchcontrollerManagedswitchStpSettingsOutput)
}

// Period of time a port is in listening and learning state (4 - 30 sec, default = 15).
func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) ForwardTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.ForwardTime
	}).(pulumi.IntPtrOutput)
}

// Period of time between successive STP frame Bridge Protocol Data Units (BPDUs) sent on a port (1 - 10 sec, default = 2).
func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) HelloTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.HelloTime
	}).(pulumi.IntPtrOutput)
}

// Enable to configure local STP settings that override global STP settings. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStpSettings) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

// Maximum time before a bridge port saves its configuration BPDU information (6 - 40 sec, default = 20).
func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

// Maximum number of hops between the root bridge and the furthest bridge (1- 40, default = 20).
func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) MaxHops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxHops
	}).(pulumi.IntPtrOutput)
}

// Name of local STP settings configuration.
func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStpSettings) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Pending time (1 - 15 sec, default = 4).
func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) PendingTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.PendingTimer
	}).(pulumi.IntPtrOutput)
}

// STP revision number (0 - 65535).
func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

// Enable/disable STP. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchStpSettingsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchStpSettings) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchSwitchLog struct {
	// Enable to configure local logging settings that override global logging settings. Valid values: `enable`, `disable`.
	LocalOverride *string `pulumi:"localOverride"`
	// Severity of FortiSwitch logs that are added to the FortiGate event log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable adding FortiSwitch logs to the FortiGate event log. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// SwitchcontrollerManagedswitchSwitchLogInput is an input type that accepts SwitchcontrollerManagedswitchSwitchLogArgs and SwitchcontrollerManagedswitchSwitchLogOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSwitchLogInput` via:
//
//	SwitchcontrollerManagedswitchSwitchLogArgs{...}
type SwitchcontrollerManagedswitchSwitchLogInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSwitchLogOutput() SwitchcontrollerManagedswitchSwitchLogOutput
	ToSwitchcontrollerManagedswitchSwitchLogOutputWithContext(context.Context) SwitchcontrollerManagedswitchSwitchLogOutput
}

type SwitchcontrollerManagedswitchSwitchLogArgs struct {
	// Enable to configure local logging settings that override global logging settings. Valid values: `enable`, `disable`.
	LocalOverride pulumi.StringPtrInput `pulumi:"localOverride"`
	// Severity of FortiSwitch logs that are added to the FortiGate event log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Enable/disable adding FortiSwitch logs to the FortiGate event log. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SwitchcontrollerManagedswitchSwitchLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSwitchLog)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchSwitchLogArgs) ToSwitchcontrollerManagedswitchSwitchLogOutput() SwitchcontrollerManagedswitchSwitchLogOutput {
	return i.ToSwitchcontrollerManagedswitchSwitchLogOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSwitchLogArgs) ToSwitchcontrollerManagedswitchSwitchLogOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSwitchLogOutput)
}

func (i SwitchcontrollerManagedswitchSwitchLogArgs) ToSwitchcontrollerManagedswitchSwitchLogPtrOutput() SwitchcontrollerManagedswitchSwitchLogPtrOutput {
	return i.ToSwitchcontrollerManagedswitchSwitchLogPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSwitchLogArgs) ToSwitchcontrollerManagedswitchSwitchLogPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSwitchLogOutput).ToSwitchcontrollerManagedswitchSwitchLogPtrOutputWithContext(ctx)
}

// SwitchcontrollerManagedswitchSwitchLogPtrInput is an input type that accepts SwitchcontrollerManagedswitchSwitchLogArgs, SwitchcontrollerManagedswitchSwitchLogPtr and SwitchcontrollerManagedswitchSwitchLogPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSwitchLogPtrInput` via:
//
//	        SwitchcontrollerManagedswitchSwitchLogArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerManagedswitchSwitchLogPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSwitchLogPtrOutput() SwitchcontrollerManagedswitchSwitchLogPtrOutput
	ToSwitchcontrollerManagedswitchSwitchLogPtrOutputWithContext(context.Context) SwitchcontrollerManagedswitchSwitchLogPtrOutput
}

type switchcontrollerManagedswitchSwitchLogPtrType SwitchcontrollerManagedswitchSwitchLogArgs

func SwitchcontrollerManagedswitchSwitchLogPtr(v *SwitchcontrollerManagedswitchSwitchLogArgs) SwitchcontrollerManagedswitchSwitchLogPtrInput {
	return (*switchcontrollerManagedswitchSwitchLogPtrType)(v)
}

func (*switchcontrollerManagedswitchSwitchLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchSwitchLog)(nil)).Elem()
}

func (i *switchcontrollerManagedswitchSwitchLogPtrType) ToSwitchcontrollerManagedswitchSwitchLogPtrOutput() SwitchcontrollerManagedswitchSwitchLogPtrOutput {
	return i.ToSwitchcontrollerManagedswitchSwitchLogPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerManagedswitchSwitchLogPtrType) ToSwitchcontrollerManagedswitchSwitchLogPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSwitchLogPtrOutput)
}

type SwitchcontrollerManagedswitchSwitchLogOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSwitchLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSwitchLog)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSwitchLogOutput) ToSwitchcontrollerManagedswitchSwitchLogOutput() SwitchcontrollerManagedswitchSwitchLogOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSwitchLogOutput) ToSwitchcontrollerManagedswitchSwitchLogOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchLogOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSwitchLogOutput) ToSwitchcontrollerManagedswitchSwitchLogPtrOutput() SwitchcontrollerManagedswitchSwitchLogPtrOutput {
	return o.ToSwitchcontrollerManagedswitchSwitchLogPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerManagedswitchSwitchLogOutput) ToSwitchcontrollerManagedswitchSwitchLogPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerManagedswitchSwitchLog) *SwitchcontrollerManagedswitchSwitchLog {
		return &v
	}).(SwitchcontrollerManagedswitchSwitchLogPtrOutput)
}

// Enable to configure local logging settings that override global logging settings. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchSwitchLogOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSwitchLog) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

// Severity of FortiSwitch logs that are added to the FortiGate event log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
func (o SwitchcontrollerManagedswitchSwitchLogOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSwitchLog) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Enable/disable adding FortiSwitch logs to the FortiGate event log. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchSwitchLogOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSwitchLog) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchSwitchLogPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSwitchLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchSwitchLog)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSwitchLogPtrOutput) ToSwitchcontrollerManagedswitchSwitchLogPtrOutput() SwitchcontrollerManagedswitchSwitchLogPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSwitchLogPtrOutput) ToSwitchcontrollerManagedswitchSwitchLogPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchLogPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSwitchLogPtrOutput) Elem() SwitchcontrollerManagedswitchSwitchLogOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSwitchLog) SwitchcontrollerManagedswitchSwitchLog {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerManagedswitchSwitchLog
		return ret
	}).(SwitchcontrollerManagedswitchSwitchLogOutput)
}

// Enable to configure local logging settings that override global logging settings. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchSwitchLogPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSwitchLog) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

// Severity of FortiSwitch logs that are added to the FortiGate event log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
func (o SwitchcontrollerManagedswitchSwitchLogPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSwitchLog) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// Enable/disable adding FortiSwitch logs to the FortiGate event log. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchSwitchLogPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSwitchLog) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchSwitchStpSettings struct {
	// Enable/disable STP. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// SwitchcontrollerManagedswitchSwitchStpSettingsInput is an input type that accepts SwitchcontrollerManagedswitchSwitchStpSettingsArgs and SwitchcontrollerManagedswitchSwitchStpSettingsOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSwitchStpSettingsInput` via:
//
//	SwitchcontrollerManagedswitchSwitchStpSettingsArgs{...}
type SwitchcontrollerManagedswitchSwitchStpSettingsInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSwitchStpSettingsOutput() SwitchcontrollerManagedswitchSwitchStpSettingsOutput
	ToSwitchcontrollerManagedswitchSwitchStpSettingsOutputWithContext(context.Context) SwitchcontrollerManagedswitchSwitchStpSettingsOutput
}

type SwitchcontrollerManagedswitchSwitchStpSettingsArgs struct {
	// Enable/disable STP. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SwitchcontrollerManagedswitchSwitchStpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSwitchStpSettings)(nil)).Elem()
}

func (i SwitchcontrollerManagedswitchSwitchStpSettingsArgs) ToSwitchcontrollerManagedswitchSwitchStpSettingsOutput() SwitchcontrollerManagedswitchSwitchStpSettingsOutput {
	return i.ToSwitchcontrollerManagedswitchSwitchStpSettingsOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSwitchStpSettingsArgs) ToSwitchcontrollerManagedswitchSwitchStpSettingsOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchStpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSwitchStpSettingsOutput)
}

func (i SwitchcontrollerManagedswitchSwitchStpSettingsArgs) ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput() SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput {
	return i.ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerManagedswitchSwitchStpSettingsArgs) ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSwitchStpSettingsOutput).ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutputWithContext(ctx)
}

// SwitchcontrollerManagedswitchSwitchStpSettingsPtrInput is an input type that accepts SwitchcontrollerManagedswitchSwitchStpSettingsArgs, SwitchcontrollerManagedswitchSwitchStpSettingsPtr and SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerManagedswitchSwitchStpSettingsPtrInput` via:
//
//	        SwitchcontrollerManagedswitchSwitchStpSettingsArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerManagedswitchSwitchStpSettingsPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput() SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput
	ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutputWithContext(context.Context) SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput
}

type switchcontrollerManagedswitchSwitchStpSettingsPtrType SwitchcontrollerManagedswitchSwitchStpSettingsArgs

func SwitchcontrollerManagedswitchSwitchStpSettingsPtr(v *SwitchcontrollerManagedswitchSwitchStpSettingsArgs) SwitchcontrollerManagedswitchSwitchStpSettingsPtrInput {
	return (*switchcontrollerManagedswitchSwitchStpSettingsPtrType)(v)
}

func (*switchcontrollerManagedswitchSwitchStpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchSwitchStpSettings)(nil)).Elem()
}

func (i *switchcontrollerManagedswitchSwitchStpSettingsPtrType) ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput() SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput {
	return i.ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerManagedswitchSwitchStpSettingsPtrType) ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput)
}

type SwitchcontrollerManagedswitchSwitchStpSettingsOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSwitchStpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerManagedswitchSwitchStpSettings)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSwitchStpSettingsOutput) ToSwitchcontrollerManagedswitchSwitchStpSettingsOutput() SwitchcontrollerManagedswitchSwitchStpSettingsOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSwitchStpSettingsOutput) ToSwitchcontrollerManagedswitchSwitchStpSettingsOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchStpSettingsOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSwitchStpSettingsOutput) ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput() SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput {
	return o.ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerManagedswitchSwitchStpSettingsOutput) ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerManagedswitchSwitchStpSettings) *SwitchcontrollerManagedswitchSwitchStpSettings {
		return &v
	}).(SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput)
}

// Enable/disable STP. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchSwitchStpSettingsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerManagedswitchSwitchStpSettings) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerManagedswitchSwitchStpSettings)(nil)).Elem()
}

func (o SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput) ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput() SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput) ToSwitchcontrollerManagedswitchSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput {
	return o
}

func (o SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput) Elem() SwitchcontrollerManagedswitchSwitchStpSettingsOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSwitchStpSettings) SwitchcontrollerManagedswitchSwitchStpSettings {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerManagedswitchSwitchStpSettings
		return ret
	}).(SwitchcontrollerManagedswitchSwitchStpSettingsOutput)
}

// Enable/disable STP. Valid values: `enable`, `disable`.
func (o SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerManagedswitchSwitchStpSettings) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SwitchcontrollerQuarantineTarget struct {
	// Description for the quarantine MAC.
	Description *string `pulumi:"description"`
	// FSW entry id for the quarantine MAC.
	EntryId *int `pulumi:"entryId"`
	// Quarantine MAC.
	Mac *string `pulumi:"mac"`
	// Tags for the quarantine MAC. The structure of `tag` block is documented below.
	Tags []SwitchcontrollerQuarantineTargetTag `pulumi:"tags"`
}

// SwitchcontrollerQuarantineTargetInput is an input type that accepts SwitchcontrollerQuarantineTargetArgs and SwitchcontrollerQuarantineTargetOutput values.
// You can construct a concrete instance of `SwitchcontrollerQuarantineTargetInput` via:
//
//	SwitchcontrollerQuarantineTargetArgs{...}
type SwitchcontrollerQuarantineTargetInput interface {
	pulumi.Input

	ToSwitchcontrollerQuarantineTargetOutput() SwitchcontrollerQuarantineTargetOutput
	ToSwitchcontrollerQuarantineTargetOutputWithContext(context.Context) SwitchcontrollerQuarantineTargetOutput
}

type SwitchcontrollerQuarantineTargetArgs struct {
	// Description for the quarantine MAC.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// FSW entry id for the quarantine MAC.
	EntryId pulumi.IntPtrInput `pulumi:"entryId"`
	// Quarantine MAC.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Tags for the quarantine MAC. The structure of `tag` block is documented below.
	Tags SwitchcontrollerQuarantineTargetTagArrayInput `pulumi:"tags"`
}

func (SwitchcontrollerQuarantineTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerQuarantineTarget)(nil)).Elem()
}

func (i SwitchcontrollerQuarantineTargetArgs) ToSwitchcontrollerQuarantineTargetOutput() SwitchcontrollerQuarantineTargetOutput {
	return i.ToSwitchcontrollerQuarantineTargetOutputWithContext(context.Background())
}

func (i SwitchcontrollerQuarantineTargetArgs) ToSwitchcontrollerQuarantineTargetOutputWithContext(ctx context.Context) SwitchcontrollerQuarantineTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerQuarantineTargetOutput)
}

// SwitchcontrollerQuarantineTargetArrayInput is an input type that accepts SwitchcontrollerQuarantineTargetArray and SwitchcontrollerQuarantineTargetArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerQuarantineTargetArrayInput` via:
//
//	SwitchcontrollerQuarantineTargetArray{ SwitchcontrollerQuarantineTargetArgs{...} }
type SwitchcontrollerQuarantineTargetArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerQuarantineTargetArrayOutput() SwitchcontrollerQuarantineTargetArrayOutput
	ToSwitchcontrollerQuarantineTargetArrayOutputWithContext(context.Context) SwitchcontrollerQuarantineTargetArrayOutput
}

type SwitchcontrollerQuarantineTargetArray []SwitchcontrollerQuarantineTargetInput

func (SwitchcontrollerQuarantineTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerQuarantineTarget)(nil)).Elem()
}

func (i SwitchcontrollerQuarantineTargetArray) ToSwitchcontrollerQuarantineTargetArrayOutput() SwitchcontrollerQuarantineTargetArrayOutput {
	return i.ToSwitchcontrollerQuarantineTargetArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerQuarantineTargetArray) ToSwitchcontrollerQuarantineTargetArrayOutputWithContext(ctx context.Context) SwitchcontrollerQuarantineTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerQuarantineTargetArrayOutput)
}

type SwitchcontrollerQuarantineTargetOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerQuarantineTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerQuarantineTarget)(nil)).Elem()
}

func (o SwitchcontrollerQuarantineTargetOutput) ToSwitchcontrollerQuarantineTargetOutput() SwitchcontrollerQuarantineTargetOutput {
	return o
}

func (o SwitchcontrollerQuarantineTargetOutput) ToSwitchcontrollerQuarantineTargetOutputWithContext(ctx context.Context) SwitchcontrollerQuarantineTargetOutput {
	return o
}

// Description for the quarantine MAC.
func (o SwitchcontrollerQuarantineTargetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerQuarantineTarget) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// FSW entry id for the quarantine MAC.
func (o SwitchcontrollerQuarantineTargetOutput) EntryId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerQuarantineTarget) *int { return v.EntryId }).(pulumi.IntPtrOutput)
}

// Quarantine MAC.
func (o SwitchcontrollerQuarantineTargetOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerQuarantineTarget) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Tags for the quarantine MAC. The structure of `tag` block is documented below.
func (o SwitchcontrollerQuarantineTargetOutput) Tags() SwitchcontrollerQuarantineTargetTagArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerQuarantineTarget) []SwitchcontrollerQuarantineTargetTag { return v.Tags }).(SwitchcontrollerQuarantineTargetTagArrayOutput)
}

type SwitchcontrollerQuarantineTargetArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerQuarantineTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerQuarantineTarget)(nil)).Elem()
}

func (o SwitchcontrollerQuarantineTargetArrayOutput) ToSwitchcontrollerQuarantineTargetArrayOutput() SwitchcontrollerQuarantineTargetArrayOutput {
	return o
}

func (o SwitchcontrollerQuarantineTargetArrayOutput) ToSwitchcontrollerQuarantineTargetArrayOutputWithContext(ctx context.Context) SwitchcontrollerQuarantineTargetArrayOutput {
	return o
}

func (o SwitchcontrollerQuarantineTargetArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerQuarantineTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerQuarantineTarget {
		return vs[0].([]SwitchcontrollerQuarantineTarget)[vs[1].(int)]
	}).(SwitchcontrollerQuarantineTargetOutput)
}

type SwitchcontrollerQuarantineTargetTag struct {
	// Tag string(eg. string1 string2 string3).
	Tags *string `pulumi:"tags"`
}

// SwitchcontrollerQuarantineTargetTagInput is an input type that accepts SwitchcontrollerQuarantineTargetTagArgs and SwitchcontrollerQuarantineTargetTagOutput values.
// You can construct a concrete instance of `SwitchcontrollerQuarantineTargetTagInput` via:
//
//	SwitchcontrollerQuarantineTargetTagArgs{...}
type SwitchcontrollerQuarantineTargetTagInput interface {
	pulumi.Input

	ToSwitchcontrollerQuarantineTargetTagOutput() SwitchcontrollerQuarantineTargetTagOutput
	ToSwitchcontrollerQuarantineTargetTagOutputWithContext(context.Context) SwitchcontrollerQuarantineTargetTagOutput
}

type SwitchcontrollerQuarantineTargetTagArgs struct {
	// Tag string(eg. string1 string2 string3).
	Tags pulumi.StringPtrInput `pulumi:"tags"`
}

func (SwitchcontrollerQuarantineTargetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerQuarantineTargetTag)(nil)).Elem()
}

func (i SwitchcontrollerQuarantineTargetTagArgs) ToSwitchcontrollerQuarantineTargetTagOutput() SwitchcontrollerQuarantineTargetTagOutput {
	return i.ToSwitchcontrollerQuarantineTargetTagOutputWithContext(context.Background())
}

func (i SwitchcontrollerQuarantineTargetTagArgs) ToSwitchcontrollerQuarantineTargetTagOutputWithContext(ctx context.Context) SwitchcontrollerQuarantineTargetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerQuarantineTargetTagOutput)
}

// SwitchcontrollerQuarantineTargetTagArrayInput is an input type that accepts SwitchcontrollerQuarantineTargetTagArray and SwitchcontrollerQuarantineTargetTagArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerQuarantineTargetTagArrayInput` via:
//
//	SwitchcontrollerQuarantineTargetTagArray{ SwitchcontrollerQuarantineTargetTagArgs{...} }
type SwitchcontrollerQuarantineTargetTagArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerQuarantineTargetTagArrayOutput() SwitchcontrollerQuarantineTargetTagArrayOutput
	ToSwitchcontrollerQuarantineTargetTagArrayOutputWithContext(context.Context) SwitchcontrollerQuarantineTargetTagArrayOutput
}

type SwitchcontrollerQuarantineTargetTagArray []SwitchcontrollerQuarantineTargetTagInput

func (SwitchcontrollerQuarantineTargetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerQuarantineTargetTag)(nil)).Elem()
}

func (i SwitchcontrollerQuarantineTargetTagArray) ToSwitchcontrollerQuarantineTargetTagArrayOutput() SwitchcontrollerQuarantineTargetTagArrayOutput {
	return i.ToSwitchcontrollerQuarantineTargetTagArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerQuarantineTargetTagArray) ToSwitchcontrollerQuarantineTargetTagArrayOutputWithContext(ctx context.Context) SwitchcontrollerQuarantineTargetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerQuarantineTargetTagArrayOutput)
}

type SwitchcontrollerQuarantineTargetTagOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerQuarantineTargetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerQuarantineTargetTag)(nil)).Elem()
}

func (o SwitchcontrollerQuarantineTargetTagOutput) ToSwitchcontrollerQuarantineTargetTagOutput() SwitchcontrollerQuarantineTargetTagOutput {
	return o
}

func (o SwitchcontrollerQuarantineTargetTagOutput) ToSwitchcontrollerQuarantineTargetTagOutputWithContext(ctx context.Context) SwitchcontrollerQuarantineTargetTagOutput {
	return o
}

// Tag string(eg. string1 string2 string3).
func (o SwitchcontrollerQuarantineTargetTagOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerQuarantineTargetTag) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerQuarantineTargetTagArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerQuarantineTargetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerQuarantineTargetTag)(nil)).Elem()
}

func (o SwitchcontrollerQuarantineTargetTagArrayOutput) ToSwitchcontrollerQuarantineTargetTagArrayOutput() SwitchcontrollerQuarantineTargetTagArrayOutput {
	return o
}

func (o SwitchcontrollerQuarantineTargetTagArrayOutput) ToSwitchcontrollerQuarantineTargetTagArrayOutputWithContext(ctx context.Context) SwitchcontrollerQuarantineTargetTagArrayOutput {
	return o
}

func (o SwitchcontrollerQuarantineTargetTagArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerQuarantineTargetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerQuarantineTargetTag {
		return vs[0].([]SwitchcontrollerQuarantineTargetTag)[vs[1].(int)]
	}).(SwitchcontrollerQuarantineTargetTagOutput)
}

type SwitchcontrollerSnmpcommunityHost struct {
	// Host entry ID.
	Id *int `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip *string `pulumi:"ip"`
}

// SwitchcontrollerSnmpcommunityHostInput is an input type that accepts SwitchcontrollerSnmpcommunityHostArgs and SwitchcontrollerSnmpcommunityHostOutput values.
// You can construct a concrete instance of `SwitchcontrollerSnmpcommunityHostInput` via:
//
//	SwitchcontrollerSnmpcommunityHostArgs{...}
type SwitchcontrollerSnmpcommunityHostInput interface {
	pulumi.Input

	ToSwitchcontrollerSnmpcommunityHostOutput() SwitchcontrollerSnmpcommunityHostOutput
	ToSwitchcontrollerSnmpcommunityHostOutputWithContext(context.Context) SwitchcontrollerSnmpcommunityHostOutput
}

type SwitchcontrollerSnmpcommunityHostArgs struct {
	// Host entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SwitchcontrollerSnmpcommunityHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerSnmpcommunityHost)(nil)).Elem()
}

func (i SwitchcontrollerSnmpcommunityHostArgs) ToSwitchcontrollerSnmpcommunityHostOutput() SwitchcontrollerSnmpcommunityHostOutput {
	return i.ToSwitchcontrollerSnmpcommunityHostOutputWithContext(context.Background())
}

func (i SwitchcontrollerSnmpcommunityHostArgs) ToSwitchcontrollerSnmpcommunityHostOutputWithContext(ctx context.Context) SwitchcontrollerSnmpcommunityHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerSnmpcommunityHostOutput)
}

// SwitchcontrollerSnmpcommunityHostArrayInput is an input type that accepts SwitchcontrollerSnmpcommunityHostArray and SwitchcontrollerSnmpcommunityHostArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerSnmpcommunityHostArrayInput` via:
//
//	SwitchcontrollerSnmpcommunityHostArray{ SwitchcontrollerSnmpcommunityHostArgs{...} }
type SwitchcontrollerSnmpcommunityHostArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerSnmpcommunityHostArrayOutput() SwitchcontrollerSnmpcommunityHostArrayOutput
	ToSwitchcontrollerSnmpcommunityHostArrayOutputWithContext(context.Context) SwitchcontrollerSnmpcommunityHostArrayOutput
}

type SwitchcontrollerSnmpcommunityHostArray []SwitchcontrollerSnmpcommunityHostInput

func (SwitchcontrollerSnmpcommunityHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerSnmpcommunityHost)(nil)).Elem()
}

func (i SwitchcontrollerSnmpcommunityHostArray) ToSwitchcontrollerSnmpcommunityHostArrayOutput() SwitchcontrollerSnmpcommunityHostArrayOutput {
	return i.ToSwitchcontrollerSnmpcommunityHostArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerSnmpcommunityHostArray) ToSwitchcontrollerSnmpcommunityHostArrayOutputWithContext(ctx context.Context) SwitchcontrollerSnmpcommunityHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerSnmpcommunityHostArrayOutput)
}

type SwitchcontrollerSnmpcommunityHostOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerSnmpcommunityHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerSnmpcommunityHost)(nil)).Elem()
}

func (o SwitchcontrollerSnmpcommunityHostOutput) ToSwitchcontrollerSnmpcommunityHostOutput() SwitchcontrollerSnmpcommunityHostOutput {
	return o
}

func (o SwitchcontrollerSnmpcommunityHostOutput) ToSwitchcontrollerSnmpcommunityHostOutputWithContext(ctx context.Context) SwitchcontrollerSnmpcommunityHostOutput {
	return o
}

// Host entry ID.
func (o SwitchcontrollerSnmpcommunityHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerSnmpcommunityHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 address of the SNMP manager (host).
func (o SwitchcontrollerSnmpcommunityHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerSnmpcommunityHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerSnmpcommunityHostArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerSnmpcommunityHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerSnmpcommunityHost)(nil)).Elem()
}

func (o SwitchcontrollerSnmpcommunityHostArrayOutput) ToSwitchcontrollerSnmpcommunityHostArrayOutput() SwitchcontrollerSnmpcommunityHostArrayOutput {
	return o
}

func (o SwitchcontrollerSnmpcommunityHostArrayOutput) ToSwitchcontrollerSnmpcommunityHostArrayOutputWithContext(ctx context.Context) SwitchcontrollerSnmpcommunityHostArrayOutput {
	return o
}

func (o SwitchcontrollerSnmpcommunityHostArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerSnmpcommunityHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerSnmpcommunityHost {
		return vs[0].([]SwitchcontrollerSnmpcommunityHost)[vs[1].(int)]
	}).(SwitchcontrollerSnmpcommunityHostOutput)
}

type SwitchcontrollerStpinstanceVlanRange struct {
	// VLAN name.
	VlanName *string `pulumi:"vlanName"`
}

// SwitchcontrollerStpinstanceVlanRangeInput is an input type that accepts SwitchcontrollerStpinstanceVlanRangeArgs and SwitchcontrollerStpinstanceVlanRangeOutput values.
// You can construct a concrete instance of `SwitchcontrollerStpinstanceVlanRangeInput` via:
//
//	SwitchcontrollerStpinstanceVlanRangeArgs{...}
type SwitchcontrollerStpinstanceVlanRangeInput interface {
	pulumi.Input

	ToSwitchcontrollerStpinstanceVlanRangeOutput() SwitchcontrollerStpinstanceVlanRangeOutput
	ToSwitchcontrollerStpinstanceVlanRangeOutputWithContext(context.Context) SwitchcontrollerStpinstanceVlanRangeOutput
}

type SwitchcontrollerStpinstanceVlanRangeArgs struct {
	// VLAN name.
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchcontrollerStpinstanceVlanRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerStpinstanceVlanRange)(nil)).Elem()
}

func (i SwitchcontrollerStpinstanceVlanRangeArgs) ToSwitchcontrollerStpinstanceVlanRangeOutput() SwitchcontrollerStpinstanceVlanRangeOutput {
	return i.ToSwitchcontrollerStpinstanceVlanRangeOutputWithContext(context.Background())
}

func (i SwitchcontrollerStpinstanceVlanRangeArgs) ToSwitchcontrollerStpinstanceVlanRangeOutputWithContext(ctx context.Context) SwitchcontrollerStpinstanceVlanRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerStpinstanceVlanRangeOutput)
}

// SwitchcontrollerStpinstanceVlanRangeArrayInput is an input type that accepts SwitchcontrollerStpinstanceVlanRangeArray and SwitchcontrollerStpinstanceVlanRangeArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerStpinstanceVlanRangeArrayInput` via:
//
//	SwitchcontrollerStpinstanceVlanRangeArray{ SwitchcontrollerStpinstanceVlanRangeArgs{...} }
type SwitchcontrollerStpinstanceVlanRangeArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerStpinstanceVlanRangeArrayOutput() SwitchcontrollerStpinstanceVlanRangeArrayOutput
	ToSwitchcontrollerStpinstanceVlanRangeArrayOutputWithContext(context.Context) SwitchcontrollerStpinstanceVlanRangeArrayOutput
}

type SwitchcontrollerStpinstanceVlanRangeArray []SwitchcontrollerStpinstanceVlanRangeInput

func (SwitchcontrollerStpinstanceVlanRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerStpinstanceVlanRange)(nil)).Elem()
}

func (i SwitchcontrollerStpinstanceVlanRangeArray) ToSwitchcontrollerStpinstanceVlanRangeArrayOutput() SwitchcontrollerStpinstanceVlanRangeArrayOutput {
	return i.ToSwitchcontrollerStpinstanceVlanRangeArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerStpinstanceVlanRangeArray) ToSwitchcontrollerStpinstanceVlanRangeArrayOutputWithContext(ctx context.Context) SwitchcontrollerStpinstanceVlanRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerStpinstanceVlanRangeArrayOutput)
}

type SwitchcontrollerStpinstanceVlanRangeOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerStpinstanceVlanRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerStpinstanceVlanRange)(nil)).Elem()
}

func (o SwitchcontrollerStpinstanceVlanRangeOutput) ToSwitchcontrollerStpinstanceVlanRangeOutput() SwitchcontrollerStpinstanceVlanRangeOutput {
	return o
}

func (o SwitchcontrollerStpinstanceVlanRangeOutput) ToSwitchcontrollerStpinstanceVlanRangeOutputWithContext(ctx context.Context) SwitchcontrollerStpinstanceVlanRangeOutput {
	return o
}

// VLAN name.
func (o SwitchcontrollerStpinstanceVlanRangeOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerStpinstanceVlanRange) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerStpinstanceVlanRangeArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerStpinstanceVlanRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerStpinstanceVlanRange)(nil)).Elem()
}

func (o SwitchcontrollerStpinstanceVlanRangeArrayOutput) ToSwitchcontrollerStpinstanceVlanRangeArrayOutput() SwitchcontrollerStpinstanceVlanRangeArrayOutput {
	return o
}

func (o SwitchcontrollerStpinstanceVlanRangeArrayOutput) ToSwitchcontrollerStpinstanceVlanRangeArrayOutputWithContext(ctx context.Context) SwitchcontrollerStpinstanceVlanRangeArrayOutput {
	return o
}

func (o SwitchcontrollerStpinstanceVlanRangeArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerStpinstanceVlanRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerStpinstanceVlanRange {
		return vs[0].([]SwitchcontrollerStpinstanceVlanRange)[vs[1].(int)]
	}).(SwitchcontrollerStpinstanceVlanRangeOutput)
}

type SwitchcontrollerSwitchgroupMember struct {
	// Managed device ID.
	Name *string `pulumi:"name"`
	// Managed device ID.
	SwitchId *string `pulumi:"switchId"`
}

// SwitchcontrollerSwitchgroupMemberInput is an input type that accepts SwitchcontrollerSwitchgroupMemberArgs and SwitchcontrollerSwitchgroupMemberOutput values.
// You can construct a concrete instance of `SwitchcontrollerSwitchgroupMemberInput` via:
//
//	SwitchcontrollerSwitchgroupMemberArgs{...}
type SwitchcontrollerSwitchgroupMemberInput interface {
	pulumi.Input

	ToSwitchcontrollerSwitchgroupMemberOutput() SwitchcontrollerSwitchgroupMemberOutput
	ToSwitchcontrollerSwitchgroupMemberOutputWithContext(context.Context) SwitchcontrollerSwitchgroupMemberOutput
}

type SwitchcontrollerSwitchgroupMemberArgs struct {
	// Managed device ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Managed device ID.
	SwitchId pulumi.StringPtrInput `pulumi:"switchId"`
}

func (SwitchcontrollerSwitchgroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerSwitchgroupMember)(nil)).Elem()
}

func (i SwitchcontrollerSwitchgroupMemberArgs) ToSwitchcontrollerSwitchgroupMemberOutput() SwitchcontrollerSwitchgroupMemberOutput {
	return i.ToSwitchcontrollerSwitchgroupMemberOutputWithContext(context.Background())
}

func (i SwitchcontrollerSwitchgroupMemberArgs) ToSwitchcontrollerSwitchgroupMemberOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerSwitchgroupMemberOutput)
}

// SwitchcontrollerSwitchgroupMemberArrayInput is an input type that accepts SwitchcontrollerSwitchgroupMemberArray and SwitchcontrollerSwitchgroupMemberArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerSwitchgroupMemberArrayInput` via:
//
//	SwitchcontrollerSwitchgroupMemberArray{ SwitchcontrollerSwitchgroupMemberArgs{...} }
type SwitchcontrollerSwitchgroupMemberArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerSwitchgroupMemberArrayOutput() SwitchcontrollerSwitchgroupMemberArrayOutput
	ToSwitchcontrollerSwitchgroupMemberArrayOutputWithContext(context.Context) SwitchcontrollerSwitchgroupMemberArrayOutput
}

type SwitchcontrollerSwitchgroupMemberArray []SwitchcontrollerSwitchgroupMemberInput

func (SwitchcontrollerSwitchgroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerSwitchgroupMember)(nil)).Elem()
}

func (i SwitchcontrollerSwitchgroupMemberArray) ToSwitchcontrollerSwitchgroupMemberArrayOutput() SwitchcontrollerSwitchgroupMemberArrayOutput {
	return i.ToSwitchcontrollerSwitchgroupMemberArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerSwitchgroupMemberArray) ToSwitchcontrollerSwitchgroupMemberArrayOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerSwitchgroupMemberArrayOutput)
}

type SwitchcontrollerSwitchgroupMemberOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerSwitchgroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerSwitchgroupMember)(nil)).Elem()
}

func (o SwitchcontrollerSwitchgroupMemberOutput) ToSwitchcontrollerSwitchgroupMemberOutput() SwitchcontrollerSwitchgroupMemberOutput {
	return o
}

func (o SwitchcontrollerSwitchgroupMemberOutput) ToSwitchcontrollerSwitchgroupMemberOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupMemberOutput {
	return o
}

// Managed device ID.
func (o SwitchcontrollerSwitchgroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerSwitchgroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Managed device ID.
func (o SwitchcontrollerSwitchgroupMemberOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerSwitchgroupMember) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerSwitchgroupMemberArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerSwitchgroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerSwitchgroupMember)(nil)).Elem()
}

func (o SwitchcontrollerSwitchgroupMemberArrayOutput) ToSwitchcontrollerSwitchgroupMemberArrayOutput() SwitchcontrollerSwitchgroupMemberArrayOutput {
	return o
}

func (o SwitchcontrollerSwitchgroupMemberArrayOutput) ToSwitchcontrollerSwitchgroupMemberArrayOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupMemberArrayOutput {
	return o
}

func (o SwitchcontrollerSwitchgroupMemberArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerSwitchgroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerSwitchgroupMember {
		return vs[0].([]SwitchcontrollerSwitchgroupMember)[vs[1].(int)]
	}).(SwitchcontrollerSwitchgroupMemberOutput)
}

type SwitchcontrollerTrafficsnifferTargetIp struct {
	// Description for the sniffer IP.
	Description *string `pulumi:"description"`
	// Sniffer IP.
	Ip *string `pulumi:"ip"`
}

// SwitchcontrollerTrafficsnifferTargetIpInput is an input type that accepts SwitchcontrollerTrafficsnifferTargetIpArgs and SwitchcontrollerTrafficsnifferTargetIpOutput values.
// You can construct a concrete instance of `SwitchcontrollerTrafficsnifferTargetIpInput` via:
//
//	SwitchcontrollerTrafficsnifferTargetIpArgs{...}
type SwitchcontrollerTrafficsnifferTargetIpInput interface {
	pulumi.Input

	ToSwitchcontrollerTrafficsnifferTargetIpOutput() SwitchcontrollerTrafficsnifferTargetIpOutput
	ToSwitchcontrollerTrafficsnifferTargetIpOutputWithContext(context.Context) SwitchcontrollerTrafficsnifferTargetIpOutput
}

type SwitchcontrollerTrafficsnifferTargetIpArgs struct {
	// Description for the sniffer IP.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Sniffer IP.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SwitchcontrollerTrafficsnifferTargetIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetIp)(nil)).Elem()
}

func (i SwitchcontrollerTrafficsnifferTargetIpArgs) ToSwitchcontrollerTrafficsnifferTargetIpOutput() SwitchcontrollerTrafficsnifferTargetIpOutput {
	return i.ToSwitchcontrollerTrafficsnifferTargetIpOutputWithContext(context.Background())
}

func (i SwitchcontrollerTrafficsnifferTargetIpArgs) ToSwitchcontrollerTrafficsnifferTargetIpOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerTrafficsnifferTargetIpOutput)
}

// SwitchcontrollerTrafficsnifferTargetIpArrayInput is an input type that accepts SwitchcontrollerTrafficsnifferTargetIpArray and SwitchcontrollerTrafficsnifferTargetIpArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerTrafficsnifferTargetIpArrayInput` via:
//
//	SwitchcontrollerTrafficsnifferTargetIpArray{ SwitchcontrollerTrafficsnifferTargetIpArgs{...} }
type SwitchcontrollerTrafficsnifferTargetIpArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerTrafficsnifferTargetIpArrayOutput() SwitchcontrollerTrafficsnifferTargetIpArrayOutput
	ToSwitchcontrollerTrafficsnifferTargetIpArrayOutputWithContext(context.Context) SwitchcontrollerTrafficsnifferTargetIpArrayOutput
}

type SwitchcontrollerTrafficsnifferTargetIpArray []SwitchcontrollerTrafficsnifferTargetIpInput

func (SwitchcontrollerTrafficsnifferTargetIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerTrafficsnifferTargetIp)(nil)).Elem()
}

func (i SwitchcontrollerTrafficsnifferTargetIpArray) ToSwitchcontrollerTrafficsnifferTargetIpArrayOutput() SwitchcontrollerTrafficsnifferTargetIpArrayOutput {
	return i.ToSwitchcontrollerTrafficsnifferTargetIpArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerTrafficsnifferTargetIpArray) ToSwitchcontrollerTrafficsnifferTargetIpArrayOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerTrafficsnifferTargetIpArrayOutput)
}

type SwitchcontrollerTrafficsnifferTargetIpOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerTrafficsnifferTargetIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetIp)(nil)).Elem()
}

func (o SwitchcontrollerTrafficsnifferTargetIpOutput) ToSwitchcontrollerTrafficsnifferTargetIpOutput() SwitchcontrollerTrafficsnifferTargetIpOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetIpOutput) ToSwitchcontrollerTrafficsnifferTargetIpOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetIpOutput {
	return o
}

// Description for the sniffer IP.
func (o SwitchcontrollerTrafficsnifferTargetIpOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerTrafficsnifferTargetIp) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Sniffer IP.
func (o SwitchcontrollerTrafficsnifferTargetIpOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerTrafficsnifferTargetIp) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerTrafficsnifferTargetIpArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerTrafficsnifferTargetIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerTrafficsnifferTargetIp)(nil)).Elem()
}

func (o SwitchcontrollerTrafficsnifferTargetIpArrayOutput) ToSwitchcontrollerTrafficsnifferTargetIpArrayOutput() SwitchcontrollerTrafficsnifferTargetIpArrayOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetIpArrayOutput) ToSwitchcontrollerTrafficsnifferTargetIpArrayOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetIpArrayOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetIpArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerTrafficsnifferTargetIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerTrafficsnifferTargetIp {
		return vs[0].([]SwitchcontrollerTrafficsnifferTargetIp)[vs[1].(int)]
	}).(SwitchcontrollerTrafficsnifferTargetIpOutput)
}

type SwitchcontrollerTrafficsnifferTargetMac struct {
	// Description for the sniffer MAC.
	Description *string `pulumi:"description"`
	// Sniffer MAC.
	Mac *string `pulumi:"mac"`
}

// SwitchcontrollerTrafficsnifferTargetMacInput is an input type that accepts SwitchcontrollerTrafficsnifferTargetMacArgs and SwitchcontrollerTrafficsnifferTargetMacOutput values.
// You can construct a concrete instance of `SwitchcontrollerTrafficsnifferTargetMacInput` via:
//
//	SwitchcontrollerTrafficsnifferTargetMacArgs{...}
type SwitchcontrollerTrafficsnifferTargetMacInput interface {
	pulumi.Input

	ToSwitchcontrollerTrafficsnifferTargetMacOutput() SwitchcontrollerTrafficsnifferTargetMacOutput
	ToSwitchcontrollerTrafficsnifferTargetMacOutputWithContext(context.Context) SwitchcontrollerTrafficsnifferTargetMacOutput
}

type SwitchcontrollerTrafficsnifferTargetMacArgs struct {
	// Description for the sniffer MAC.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Sniffer MAC.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
}

func (SwitchcontrollerTrafficsnifferTargetMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetMac)(nil)).Elem()
}

func (i SwitchcontrollerTrafficsnifferTargetMacArgs) ToSwitchcontrollerTrafficsnifferTargetMacOutput() SwitchcontrollerTrafficsnifferTargetMacOutput {
	return i.ToSwitchcontrollerTrafficsnifferTargetMacOutputWithContext(context.Background())
}

func (i SwitchcontrollerTrafficsnifferTargetMacArgs) ToSwitchcontrollerTrafficsnifferTargetMacOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerTrafficsnifferTargetMacOutput)
}

// SwitchcontrollerTrafficsnifferTargetMacArrayInput is an input type that accepts SwitchcontrollerTrafficsnifferTargetMacArray and SwitchcontrollerTrafficsnifferTargetMacArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerTrafficsnifferTargetMacArrayInput` via:
//
//	SwitchcontrollerTrafficsnifferTargetMacArray{ SwitchcontrollerTrafficsnifferTargetMacArgs{...} }
type SwitchcontrollerTrafficsnifferTargetMacArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerTrafficsnifferTargetMacArrayOutput() SwitchcontrollerTrafficsnifferTargetMacArrayOutput
	ToSwitchcontrollerTrafficsnifferTargetMacArrayOutputWithContext(context.Context) SwitchcontrollerTrafficsnifferTargetMacArrayOutput
}

type SwitchcontrollerTrafficsnifferTargetMacArray []SwitchcontrollerTrafficsnifferTargetMacInput

func (SwitchcontrollerTrafficsnifferTargetMacArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerTrafficsnifferTargetMac)(nil)).Elem()
}

func (i SwitchcontrollerTrafficsnifferTargetMacArray) ToSwitchcontrollerTrafficsnifferTargetMacArrayOutput() SwitchcontrollerTrafficsnifferTargetMacArrayOutput {
	return i.ToSwitchcontrollerTrafficsnifferTargetMacArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerTrafficsnifferTargetMacArray) ToSwitchcontrollerTrafficsnifferTargetMacArrayOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetMacArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerTrafficsnifferTargetMacArrayOutput)
}

type SwitchcontrollerTrafficsnifferTargetMacOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerTrafficsnifferTargetMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetMac)(nil)).Elem()
}

func (o SwitchcontrollerTrafficsnifferTargetMacOutput) ToSwitchcontrollerTrafficsnifferTargetMacOutput() SwitchcontrollerTrafficsnifferTargetMacOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetMacOutput) ToSwitchcontrollerTrafficsnifferTargetMacOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetMacOutput {
	return o
}

// Description for the sniffer MAC.
func (o SwitchcontrollerTrafficsnifferTargetMacOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerTrafficsnifferTargetMac) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Sniffer MAC.
func (o SwitchcontrollerTrafficsnifferTargetMacOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerTrafficsnifferTargetMac) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerTrafficsnifferTargetMacArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerTrafficsnifferTargetMacArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerTrafficsnifferTargetMac)(nil)).Elem()
}

func (o SwitchcontrollerTrafficsnifferTargetMacArrayOutput) ToSwitchcontrollerTrafficsnifferTargetMacArrayOutput() SwitchcontrollerTrafficsnifferTargetMacArrayOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetMacArrayOutput) ToSwitchcontrollerTrafficsnifferTargetMacArrayOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetMacArrayOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetMacArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerTrafficsnifferTargetMacOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerTrafficsnifferTargetMac {
		return vs[0].([]SwitchcontrollerTrafficsnifferTargetMac)[vs[1].(int)]
	}).(SwitchcontrollerTrafficsnifferTargetMacOutput)
}

type SwitchcontrollerTrafficsnifferTargetPort struct {
	// Description for the sniffer port entry.
	Description *string `pulumi:"description"`
	// Configure source ingress port interfaces. The structure of `inPorts` block is documented below.
	InPorts []SwitchcontrollerTrafficsnifferTargetPortInPort `pulumi:"inPorts"`
	// Configure source egress port interfaces. The structure of `outPorts` block is documented below.
	OutPorts []SwitchcontrollerTrafficsnifferTargetPortOutPort `pulumi:"outPorts"`
	// Managed-switch ID.
	SwitchId *string `pulumi:"switchId"`
}

// SwitchcontrollerTrafficsnifferTargetPortInput is an input type that accepts SwitchcontrollerTrafficsnifferTargetPortArgs and SwitchcontrollerTrafficsnifferTargetPortOutput values.
// You can construct a concrete instance of `SwitchcontrollerTrafficsnifferTargetPortInput` via:
//
//	SwitchcontrollerTrafficsnifferTargetPortArgs{...}
type SwitchcontrollerTrafficsnifferTargetPortInput interface {
	pulumi.Input

	ToSwitchcontrollerTrafficsnifferTargetPortOutput() SwitchcontrollerTrafficsnifferTargetPortOutput
	ToSwitchcontrollerTrafficsnifferTargetPortOutputWithContext(context.Context) SwitchcontrollerTrafficsnifferTargetPortOutput
}

type SwitchcontrollerTrafficsnifferTargetPortArgs struct {
	// Description for the sniffer port entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Configure source ingress port interfaces. The structure of `inPorts` block is documented below.
	InPorts SwitchcontrollerTrafficsnifferTargetPortInPortArrayInput `pulumi:"inPorts"`
	// Configure source egress port interfaces. The structure of `outPorts` block is documented below.
	OutPorts SwitchcontrollerTrafficsnifferTargetPortOutPortArrayInput `pulumi:"outPorts"`
	// Managed-switch ID.
	SwitchId pulumi.StringPtrInput `pulumi:"switchId"`
}

func (SwitchcontrollerTrafficsnifferTargetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPort)(nil)).Elem()
}

func (i SwitchcontrollerTrafficsnifferTargetPortArgs) ToSwitchcontrollerTrafficsnifferTargetPortOutput() SwitchcontrollerTrafficsnifferTargetPortOutput {
	return i.ToSwitchcontrollerTrafficsnifferTargetPortOutputWithContext(context.Background())
}

func (i SwitchcontrollerTrafficsnifferTargetPortArgs) ToSwitchcontrollerTrafficsnifferTargetPortOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerTrafficsnifferTargetPortOutput)
}

// SwitchcontrollerTrafficsnifferTargetPortArrayInput is an input type that accepts SwitchcontrollerTrafficsnifferTargetPortArray and SwitchcontrollerTrafficsnifferTargetPortArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerTrafficsnifferTargetPortArrayInput` via:
//
//	SwitchcontrollerTrafficsnifferTargetPortArray{ SwitchcontrollerTrafficsnifferTargetPortArgs{...} }
type SwitchcontrollerTrafficsnifferTargetPortArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerTrafficsnifferTargetPortArrayOutput() SwitchcontrollerTrafficsnifferTargetPortArrayOutput
	ToSwitchcontrollerTrafficsnifferTargetPortArrayOutputWithContext(context.Context) SwitchcontrollerTrafficsnifferTargetPortArrayOutput
}

type SwitchcontrollerTrafficsnifferTargetPortArray []SwitchcontrollerTrafficsnifferTargetPortInput

func (SwitchcontrollerTrafficsnifferTargetPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerTrafficsnifferTargetPort)(nil)).Elem()
}

func (i SwitchcontrollerTrafficsnifferTargetPortArray) ToSwitchcontrollerTrafficsnifferTargetPortArrayOutput() SwitchcontrollerTrafficsnifferTargetPortArrayOutput {
	return i.ToSwitchcontrollerTrafficsnifferTargetPortArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerTrafficsnifferTargetPortArray) ToSwitchcontrollerTrafficsnifferTargetPortArrayOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerTrafficsnifferTargetPortArrayOutput)
}

type SwitchcontrollerTrafficsnifferTargetPortOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerTrafficsnifferTargetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPort)(nil)).Elem()
}

func (o SwitchcontrollerTrafficsnifferTargetPortOutput) ToSwitchcontrollerTrafficsnifferTargetPortOutput() SwitchcontrollerTrafficsnifferTargetPortOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetPortOutput) ToSwitchcontrollerTrafficsnifferTargetPortOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortOutput {
	return o
}

// Description for the sniffer port entry.
func (o SwitchcontrollerTrafficsnifferTargetPortOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerTrafficsnifferTargetPort) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Configure source ingress port interfaces. The structure of `inPorts` block is documented below.
func (o SwitchcontrollerTrafficsnifferTargetPortOutput) InPorts() SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerTrafficsnifferTargetPort) []SwitchcontrollerTrafficsnifferTargetPortInPort {
		return v.InPorts
	}).(SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput)
}

// Configure source egress port interfaces. The structure of `outPorts` block is documented below.
func (o SwitchcontrollerTrafficsnifferTargetPortOutput) OutPorts() SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput {
	return o.ApplyT(func(v SwitchcontrollerTrafficsnifferTargetPort) []SwitchcontrollerTrafficsnifferTargetPortOutPort {
		return v.OutPorts
	}).(SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput)
}

// Managed-switch ID.
func (o SwitchcontrollerTrafficsnifferTargetPortOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerTrafficsnifferTargetPort) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerTrafficsnifferTargetPortArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerTrafficsnifferTargetPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerTrafficsnifferTargetPort)(nil)).Elem()
}

func (o SwitchcontrollerTrafficsnifferTargetPortArrayOutput) ToSwitchcontrollerTrafficsnifferTargetPortArrayOutput() SwitchcontrollerTrafficsnifferTargetPortArrayOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetPortArrayOutput) ToSwitchcontrollerTrafficsnifferTargetPortArrayOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortArrayOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetPortArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerTrafficsnifferTargetPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerTrafficsnifferTargetPort {
		return vs[0].([]SwitchcontrollerTrafficsnifferTargetPort)[vs[1].(int)]
	}).(SwitchcontrollerTrafficsnifferTargetPortOutput)
}

type SwitchcontrollerTrafficsnifferTargetPortInPort struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SwitchcontrollerTrafficsnifferTargetPortInPortInput is an input type that accepts SwitchcontrollerTrafficsnifferTargetPortInPortArgs and SwitchcontrollerTrafficsnifferTargetPortInPortOutput values.
// You can construct a concrete instance of `SwitchcontrollerTrafficsnifferTargetPortInPortInput` via:
//
//	SwitchcontrollerTrafficsnifferTargetPortInPortArgs{...}
type SwitchcontrollerTrafficsnifferTargetPortInPortInput interface {
	pulumi.Input

	ToSwitchcontrollerTrafficsnifferTargetPortInPortOutput() SwitchcontrollerTrafficsnifferTargetPortInPortOutput
	ToSwitchcontrollerTrafficsnifferTargetPortInPortOutputWithContext(context.Context) SwitchcontrollerTrafficsnifferTargetPortInPortOutput
}

type SwitchcontrollerTrafficsnifferTargetPortInPortArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchcontrollerTrafficsnifferTargetPortInPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPortInPort)(nil)).Elem()
}

func (i SwitchcontrollerTrafficsnifferTargetPortInPortArgs) ToSwitchcontrollerTrafficsnifferTargetPortInPortOutput() SwitchcontrollerTrafficsnifferTargetPortInPortOutput {
	return i.ToSwitchcontrollerTrafficsnifferTargetPortInPortOutputWithContext(context.Background())
}

func (i SwitchcontrollerTrafficsnifferTargetPortInPortArgs) ToSwitchcontrollerTrafficsnifferTargetPortInPortOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortInPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerTrafficsnifferTargetPortInPortOutput)
}

// SwitchcontrollerTrafficsnifferTargetPortInPortArrayInput is an input type that accepts SwitchcontrollerTrafficsnifferTargetPortInPortArray and SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerTrafficsnifferTargetPortInPortArrayInput` via:
//
//	SwitchcontrollerTrafficsnifferTargetPortInPortArray{ SwitchcontrollerTrafficsnifferTargetPortInPortArgs{...} }
type SwitchcontrollerTrafficsnifferTargetPortInPortArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput() SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput
	ToSwitchcontrollerTrafficsnifferTargetPortInPortArrayOutputWithContext(context.Context) SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput
}

type SwitchcontrollerTrafficsnifferTargetPortInPortArray []SwitchcontrollerTrafficsnifferTargetPortInPortInput

func (SwitchcontrollerTrafficsnifferTargetPortInPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerTrafficsnifferTargetPortInPort)(nil)).Elem()
}

func (i SwitchcontrollerTrafficsnifferTargetPortInPortArray) ToSwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput() SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput {
	return i.ToSwitchcontrollerTrafficsnifferTargetPortInPortArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerTrafficsnifferTargetPortInPortArray) ToSwitchcontrollerTrafficsnifferTargetPortInPortArrayOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput)
}

type SwitchcontrollerTrafficsnifferTargetPortInPortOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerTrafficsnifferTargetPortInPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPortInPort)(nil)).Elem()
}

func (o SwitchcontrollerTrafficsnifferTargetPortInPortOutput) ToSwitchcontrollerTrafficsnifferTargetPortInPortOutput() SwitchcontrollerTrafficsnifferTargetPortInPortOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetPortInPortOutput) ToSwitchcontrollerTrafficsnifferTargetPortInPortOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortInPortOutput {
	return o
}

// Interface name.
func (o SwitchcontrollerTrafficsnifferTargetPortInPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerTrafficsnifferTargetPortInPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerTrafficsnifferTargetPortInPort)(nil)).Elem()
}

func (o SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput) ToSwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput() SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput) ToSwitchcontrollerTrafficsnifferTargetPortInPortArrayOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerTrafficsnifferTargetPortInPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerTrafficsnifferTargetPortInPort {
		return vs[0].([]SwitchcontrollerTrafficsnifferTargetPortInPort)[vs[1].(int)]
	}).(SwitchcontrollerTrafficsnifferTargetPortInPortOutput)
}

type SwitchcontrollerTrafficsnifferTargetPortOutPort struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SwitchcontrollerTrafficsnifferTargetPortOutPortInput is an input type that accepts SwitchcontrollerTrafficsnifferTargetPortOutPortArgs and SwitchcontrollerTrafficsnifferTargetPortOutPortOutput values.
// You can construct a concrete instance of `SwitchcontrollerTrafficsnifferTargetPortOutPortInput` via:
//
//	SwitchcontrollerTrafficsnifferTargetPortOutPortArgs{...}
type SwitchcontrollerTrafficsnifferTargetPortOutPortInput interface {
	pulumi.Input

	ToSwitchcontrollerTrafficsnifferTargetPortOutPortOutput() SwitchcontrollerTrafficsnifferTargetPortOutPortOutput
	ToSwitchcontrollerTrafficsnifferTargetPortOutPortOutputWithContext(context.Context) SwitchcontrollerTrafficsnifferTargetPortOutPortOutput
}

type SwitchcontrollerTrafficsnifferTargetPortOutPortArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchcontrollerTrafficsnifferTargetPortOutPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPortOutPort)(nil)).Elem()
}

func (i SwitchcontrollerTrafficsnifferTargetPortOutPortArgs) ToSwitchcontrollerTrafficsnifferTargetPortOutPortOutput() SwitchcontrollerTrafficsnifferTargetPortOutPortOutput {
	return i.ToSwitchcontrollerTrafficsnifferTargetPortOutPortOutputWithContext(context.Background())
}

func (i SwitchcontrollerTrafficsnifferTargetPortOutPortArgs) ToSwitchcontrollerTrafficsnifferTargetPortOutPortOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortOutPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerTrafficsnifferTargetPortOutPortOutput)
}

// SwitchcontrollerTrafficsnifferTargetPortOutPortArrayInput is an input type that accepts SwitchcontrollerTrafficsnifferTargetPortOutPortArray and SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerTrafficsnifferTargetPortOutPortArrayInput` via:
//
//	SwitchcontrollerTrafficsnifferTargetPortOutPortArray{ SwitchcontrollerTrafficsnifferTargetPortOutPortArgs{...} }
type SwitchcontrollerTrafficsnifferTargetPortOutPortArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput() SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput
	ToSwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutputWithContext(context.Context) SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput
}

type SwitchcontrollerTrafficsnifferTargetPortOutPortArray []SwitchcontrollerTrafficsnifferTargetPortOutPortInput

func (SwitchcontrollerTrafficsnifferTargetPortOutPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerTrafficsnifferTargetPortOutPort)(nil)).Elem()
}

func (i SwitchcontrollerTrafficsnifferTargetPortOutPortArray) ToSwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput() SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput {
	return i.ToSwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerTrafficsnifferTargetPortOutPortArray) ToSwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput)
}

type SwitchcontrollerTrafficsnifferTargetPortOutPortOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerTrafficsnifferTargetPortOutPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPortOutPort)(nil)).Elem()
}

func (o SwitchcontrollerTrafficsnifferTargetPortOutPortOutput) ToSwitchcontrollerTrafficsnifferTargetPortOutPortOutput() SwitchcontrollerTrafficsnifferTargetPortOutPortOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetPortOutPortOutput) ToSwitchcontrollerTrafficsnifferTargetPortOutPortOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortOutPortOutput {
	return o
}

// Interface name.
func (o SwitchcontrollerTrafficsnifferTargetPortOutPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerTrafficsnifferTargetPortOutPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerTrafficsnifferTargetPortOutPort)(nil)).Elem()
}

func (o SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput) ToSwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput() SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput) ToSwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutputWithContext(ctx context.Context) SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput {
	return o
}

func (o SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerTrafficsnifferTargetPortOutPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerTrafficsnifferTargetPortOutPort {
		return vs[0].([]SwitchcontrollerTrafficsnifferTargetPortOutPort)[vs[1].(int)]
	}).(SwitchcontrollerTrafficsnifferTargetPortOutPortOutput)
}

type SwitchcontrollerVlanPortalMessageOverrides struct {
	// Override auth-disclaimer-page message with message from portal-message-overrides group.
	AuthDisclaimerPage *string `pulumi:"authDisclaimerPage"`
	// Override auth-login-failed-page message with message from portal-message-overrides group.
	AuthLoginFailedPage *string `pulumi:"authLoginFailedPage"`
	// Override auth-login-page message with message from portal-message-overrides group.
	AuthLoginPage *string `pulumi:"authLoginPage"`
	// Override auth-reject-page message with message from portal-message-overrides group.
	AuthRejectPage *string `pulumi:"authRejectPage"`
}

// SwitchcontrollerVlanPortalMessageOverridesInput is an input type that accepts SwitchcontrollerVlanPortalMessageOverridesArgs and SwitchcontrollerVlanPortalMessageOverridesOutput values.
// You can construct a concrete instance of `SwitchcontrollerVlanPortalMessageOverridesInput` via:
//
//	SwitchcontrollerVlanPortalMessageOverridesArgs{...}
type SwitchcontrollerVlanPortalMessageOverridesInput interface {
	pulumi.Input

	ToSwitchcontrollerVlanPortalMessageOverridesOutput() SwitchcontrollerVlanPortalMessageOverridesOutput
	ToSwitchcontrollerVlanPortalMessageOverridesOutputWithContext(context.Context) SwitchcontrollerVlanPortalMessageOverridesOutput
}

type SwitchcontrollerVlanPortalMessageOverridesArgs struct {
	// Override auth-disclaimer-page message with message from portal-message-overrides group.
	AuthDisclaimerPage pulumi.StringPtrInput `pulumi:"authDisclaimerPage"`
	// Override auth-login-failed-page message with message from portal-message-overrides group.
	AuthLoginFailedPage pulumi.StringPtrInput `pulumi:"authLoginFailedPage"`
	// Override auth-login-page message with message from portal-message-overrides group.
	AuthLoginPage pulumi.StringPtrInput `pulumi:"authLoginPage"`
	// Override auth-reject-page message with message from portal-message-overrides group.
	AuthRejectPage pulumi.StringPtrInput `pulumi:"authRejectPage"`
}

func (SwitchcontrollerVlanPortalMessageOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerVlanPortalMessageOverrides)(nil)).Elem()
}

func (i SwitchcontrollerVlanPortalMessageOverridesArgs) ToSwitchcontrollerVlanPortalMessageOverridesOutput() SwitchcontrollerVlanPortalMessageOverridesOutput {
	return i.ToSwitchcontrollerVlanPortalMessageOverridesOutputWithContext(context.Background())
}

func (i SwitchcontrollerVlanPortalMessageOverridesArgs) ToSwitchcontrollerVlanPortalMessageOverridesOutputWithContext(ctx context.Context) SwitchcontrollerVlanPortalMessageOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVlanPortalMessageOverridesOutput)
}

func (i SwitchcontrollerVlanPortalMessageOverridesArgs) ToSwitchcontrollerVlanPortalMessageOverridesPtrOutput() SwitchcontrollerVlanPortalMessageOverridesPtrOutput {
	return i.ToSwitchcontrollerVlanPortalMessageOverridesPtrOutputWithContext(context.Background())
}

func (i SwitchcontrollerVlanPortalMessageOverridesArgs) ToSwitchcontrollerVlanPortalMessageOverridesPtrOutputWithContext(ctx context.Context) SwitchcontrollerVlanPortalMessageOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVlanPortalMessageOverridesOutput).ToSwitchcontrollerVlanPortalMessageOverridesPtrOutputWithContext(ctx)
}

// SwitchcontrollerVlanPortalMessageOverridesPtrInput is an input type that accepts SwitchcontrollerVlanPortalMessageOverridesArgs, SwitchcontrollerVlanPortalMessageOverridesPtr and SwitchcontrollerVlanPortalMessageOverridesPtrOutput values.
// You can construct a concrete instance of `SwitchcontrollerVlanPortalMessageOverridesPtrInput` via:
//
//	        SwitchcontrollerVlanPortalMessageOverridesArgs{...}
//
//	or:
//
//	        nil
type SwitchcontrollerVlanPortalMessageOverridesPtrInput interface {
	pulumi.Input

	ToSwitchcontrollerVlanPortalMessageOverridesPtrOutput() SwitchcontrollerVlanPortalMessageOverridesPtrOutput
	ToSwitchcontrollerVlanPortalMessageOverridesPtrOutputWithContext(context.Context) SwitchcontrollerVlanPortalMessageOverridesPtrOutput
}

type switchcontrollerVlanPortalMessageOverridesPtrType SwitchcontrollerVlanPortalMessageOverridesArgs

func SwitchcontrollerVlanPortalMessageOverridesPtr(v *SwitchcontrollerVlanPortalMessageOverridesArgs) SwitchcontrollerVlanPortalMessageOverridesPtrInput {
	return (*switchcontrollerVlanPortalMessageOverridesPtrType)(v)
}

func (*switchcontrollerVlanPortalMessageOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerVlanPortalMessageOverrides)(nil)).Elem()
}

func (i *switchcontrollerVlanPortalMessageOverridesPtrType) ToSwitchcontrollerVlanPortalMessageOverridesPtrOutput() SwitchcontrollerVlanPortalMessageOverridesPtrOutput {
	return i.ToSwitchcontrollerVlanPortalMessageOverridesPtrOutputWithContext(context.Background())
}

func (i *switchcontrollerVlanPortalMessageOverridesPtrType) ToSwitchcontrollerVlanPortalMessageOverridesPtrOutputWithContext(ctx context.Context) SwitchcontrollerVlanPortalMessageOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVlanPortalMessageOverridesPtrOutput)
}

type SwitchcontrollerVlanPortalMessageOverridesOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVlanPortalMessageOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerVlanPortalMessageOverrides)(nil)).Elem()
}

func (o SwitchcontrollerVlanPortalMessageOverridesOutput) ToSwitchcontrollerVlanPortalMessageOverridesOutput() SwitchcontrollerVlanPortalMessageOverridesOutput {
	return o
}

func (o SwitchcontrollerVlanPortalMessageOverridesOutput) ToSwitchcontrollerVlanPortalMessageOverridesOutputWithContext(ctx context.Context) SwitchcontrollerVlanPortalMessageOverridesOutput {
	return o
}

func (o SwitchcontrollerVlanPortalMessageOverridesOutput) ToSwitchcontrollerVlanPortalMessageOverridesPtrOutput() SwitchcontrollerVlanPortalMessageOverridesPtrOutput {
	return o.ToSwitchcontrollerVlanPortalMessageOverridesPtrOutputWithContext(context.Background())
}

func (o SwitchcontrollerVlanPortalMessageOverridesOutput) ToSwitchcontrollerVlanPortalMessageOverridesPtrOutputWithContext(ctx context.Context) SwitchcontrollerVlanPortalMessageOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchcontrollerVlanPortalMessageOverrides) *SwitchcontrollerVlanPortalMessageOverrides {
		return &v
	}).(SwitchcontrollerVlanPortalMessageOverridesPtrOutput)
}

// Override auth-disclaimer-page message with message from portal-message-overrides group.
func (o SwitchcontrollerVlanPortalMessageOverridesOutput) AuthDisclaimerPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerVlanPortalMessageOverrides) *string { return v.AuthDisclaimerPage }).(pulumi.StringPtrOutput)
}

// Override auth-login-failed-page message with message from portal-message-overrides group.
func (o SwitchcontrollerVlanPortalMessageOverridesOutput) AuthLoginFailedPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerVlanPortalMessageOverrides) *string { return v.AuthLoginFailedPage }).(pulumi.StringPtrOutput)
}

// Override auth-login-page message with message from portal-message-overrides group.
func (o SwitchcontrollerVlanPortalMessageOverridesOutput) AuthLoginPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerVlanPortalMessageOverrides) *string { return v.AuthLoginPage }).(pulumi.StringPtrOutput)
}

// Override auth-reject-page message with message from portal-message-overrides group.
func (o SwitchcontrollerVlanPortalMessageOverridesOutput) AuthRejectPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerVlanPortalMessageOverrides) *string { return v.AuthRejectPage }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerVlanPortalMessageOverridesPtrOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVlanPortalMessageOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerVlanPortalMessageOverrides)(nil)).Elem()
}

func (o SwitchcontrollerVlanPortalMessageOverridesPtrOutput) ToSwitchcontrollerVlanPortalMessageOverridesPtrOutput() SwitchcontrollerVlanPortalMessageOverridesPtrOutput {
	return o
}

func (o SwitchcontrollerVlanPortalMessageOverridesPtrOutput) ToSwitchcontrollerVlanPortalMessageOverridesPtrOutputWithContext(ctx context.Context) SwitchcontrollerVlanPortalMessageOverridesPtrOutput {
	return o
}

func (o SwitchcontrollerVlanPortalMessageOverridesPtrOutput) Elem() SwitchcontrollerVlanPortalMessageOverridesOutput {
	return o.ApplyT(func(v *SwitchcontrollerVlanPortalMessageOverrides) SwitchcontrollerVlanPortalMessageOverrides {
		if v != nil {
			return *v
		}
		var ret SwitchcontrollerVlanPortalMessageOverrides
		return ret
	}).(SwitchcontrollerVlanPortalMessageOverridesOutput)
}

// Override auth-disclaimer-page message with message from portal-message-overrides group.
func (o SwitchcontrollerVlanPortalMessageOverridesPtrOutput) AuthDisclaimerPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerVlanPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthDisclaimerPage
	}).(pulumi.StringPtrOutput)
}

// Override auth-login-failed-page message with message from portal-message-overrides group.
func (o SwitchcontrollerVlanPortalMessageOverridesPtrOutput) AuthLoginFailedPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerVlanPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthLoginFailedPage
	}).(pulumi.StringPtrOutput)
}

// Override auth-login-page message with message from portal-message-overrides group.
func (o SwitchcontrollerVlanPortalMessageOverridesPtrOutput) AuthLoginPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerVlanPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthLoginPage
	}).(pulumi.StringPtrOutput)
}

// Override auth-reject-page message with message from portal-message-overrides group.
func (o SwitchcontrollerVlanPortalMessageOverridesPtrOutput) AuthRejectPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerVlanPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthRejectPage
	}).(pulumi.StringPtrOutput)
}

type SwitchcontrollerVlanSelectedUsergroup struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// SwitchcontrollerVlanSelectedUsergroupInput is an input type that accepts SwitchcontrollerVlanSelectedUsergroupArgs and SwitchcontrollerVlanSelectedUsergroupOutput values.
// You can construct a concrete instance of `SwitchcontrollerVlanSelectedUsergroupInput` via:
//
//	SwitchcontrollerVlanSelectedUsergroupArgs{...}
type SwitchcontrollerVlanSelectedUsergroupInput interface {
	pulumi.Input

	ToSwitchcontrollerVlanSelectedUsergroupOutput() SwitchcontrollerVlanSelectedUsergroupOutput
	ToSwitchcontrollerVlanSelectedUsergroupOutputWithContext(context.Context) SwitchcontrollerVlanSelectedUsergroupOutput
}

type SwitchcontrollerVlanSelectedUsergroupArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchcontrollerVlanSelectedUsergroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerVlanSelectedUsergroup)(nil)).Elem()
}

func (i SwitchcontrollerVlanSelectedUsergroupArgs) ToSwitchcontrollerVlanSelectedUsergroupOutput() SwitchcontrollerVlanSelectedUsergroupOutput {
	return i.ToSwitchcontrollerVlanSelectedUsergroupOutputWithContext(context.Background())
}

func (i SwitchcontrollerVlanSelectedUsergroupArgs) ToSwitchcontrollerVlanSelectedUsergroupOutputWithContext(ctx context.Context) SwitchcontrollerVlanSelectedUsergroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVlanSelectedUsergroupOutput)
}

// SwitchcontrollerVlanSelectedUsergroupArrayInput is an input type that accepts SwitchcontrollerVlanSelectedUsergroupArray and SwitchcontrollerVlanSelectedUsergroupArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerVlanSelectedUsergroupArrayInput` via:
//
//	SwitchcontrollerVlanSelectedUsergroupArray{ SwitchcontrollerVlanSelectedUsergroupArgs{...} }
type SwitchcontrollerVlanSelectedUsergroupArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerVlanSelectedUsergroupArrayOutput() SwitchcontrollerVlanSelectedUsergroupArrayOutput
	ToSwitchcontrollerVlanSelectedUsergroupArrayOutputWithContext(context.Context) SwitchcontrollerVlanSelectedUsergroupArrayOutput
}

type SwitchcontrollerVlanSelectedUsergroupArray []SwitchcontrollerVlanSelectedUsergroupInput

func (SwitchcontrollerVlanSelectedUsergroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerVlanSelectedUsergroup)(nil)).Elem()
}

func (i SwitchcontrollerVlanSelectedUsergroupArray) ToSwitchcontrollerVlanSelectedUsergroupArrayOutput() SwitchcontrollerVlanSelectedUsergroupArrayOutput {
	return i.ToSwitchcontrollerVlanSelectedUsergroupArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerVlanSelectedUsergroupArray) ToSwitchcontrollerVlanSelectedUsergroupArrayOutputWithContext(ctx context.Context) SwitchcontrollerVlanSelectedUsergroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVlanSelectedUsergroupArrayOutput)
}

type SwitchcontrollerVlanSelectedUsergroupOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVlanSelectedUsergroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerVlanSelectedUsergroup)(nil)).Elem()
}

func (o SwitchcontrollerVlanSelectedUsergroupOutput) ToSwitchcontrollerVlanSelectedUsergroupOutput() SwitchcontrollerVlanSelectedUsergroupOutput {
	return o
}

func (o SwitchcontrollerVlanSelectedUsergroupOutput) ToSwitchcontrollerVlanSelectedUsergroupOutputWithContext(ctx context.Context) SwitchcontrollerVlanSelectedUsergroupOutput {
	return o
}

// User group name.
func (o SwitchcontrollerVlanSelectedUsergroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerVlanSelectedUsergroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerVlanSelectedUsergroupArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVlanSelectedUsergroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerVlanSelectedUsergroup)(nil)).Elem()
}

func (o SwitchcontrollerVlanSelectedUsergroupArrayOutput) ToSwitchcontrollerVlanSelectedUsergroupArrayOutput() SwitchcontrollerVlanSelectedUsergroupArrayOutput {
	return o
}

func (o SwitchcontrollerVlanSelectedUsergroupArrayOutput) ToSwitchcontrollerVlanSelectedUsergroupArrayOutputWithContext(ctx context.Context) SwitchcontrollerVlanSelectedUsergroupArrayOutput {
	return o
}

func (o SwitchcontrollerVlanSelectedUsergroupArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerVlanSelectedUsergroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerVlanSelectedUsergroup {
		return vs[0].([]SwitchcontrollerVlanSelectedUsergroup)[vs[1].(int)]
	}).(SwitchcontrollerVlanSelectedUsergroupOutput)
}

type SwitchcontrollerVlanpolicyAllowedVlan struct {
	// VLAN name.
	VlanName *string `pulumi:"vlanName"`
}

// SwitchcontrollerVlanpolicyAllowedVlanInput is an input type that accepts SwitchcontrollerVlanpolicyAllowedVlanArgs and SwitchcontrollerVlanpolicyAllowedVlanOutput values.
// You can construct a concrete instance of `SwitchcontrollerVlanpolicyAllowedVlanInput` via:
//
//	SwitchcontrollerVlanpolicyAllowedVlanArgs{...}
type SwitchcontrollerVlanpolicyAllowedVlanInput interface {
	pulumi.Input

	ToSwitchcontrollerVlanpolicyAllowedVlanOutput() SwitchcontrollerVlanpolicyAllowedVlanOutput
	ToSwitchcontrollerVlanpolicyAllowedVlanOutputWithContext(context.Context) SwitchcontrollerVlanpolicyAllowedVlanOutput
}

type SwitchcontrollerVlanpolicyAllowedVlanArgs struct {
	// VLAN name.
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchcontrollerVlanpolicyAllowedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerVlanpolicyAllowedVlan)(nil)).Elem()
}

func (i SwitchcontrollerVlanpolicyAllowedVlanArgs) ToSwitchcontrollerVlanpolicyAllowedVlanOutput() SwitchcontrollerVlanpolicyAllowedVlanOutput {
	return i.ToSwitchcontrollerVlanpolicyAllowedVlanOutputWithContext(context.Background())
}

func (i SwitchcontrollerVlanpolicyAllowedVlanArgs) ToSwitchcontrollerVlanpolicyAllowedVlanOutputWithContext(ctx context.Context) SwitchcontrollerVlanpolicyAllowedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVlanpolicyAllowedVlanOutput)
}

// SwitchcontrollerVlanpolicyAllowedVlanArrayInput is an input type that accepts SwitchcontrollerVlanpolicyAllowedVlanArray and SwitchcontrollerVlanpolicyAllowedVlanArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerVlanpolicyAllowedVlanArrayInput` via:
//
//	SwitchcontrollerVlanpolicyAllowedVlanArray{ SwitchcontrollerVlanpolicyAllowedVlanArgs{...} }
type SwitchcontrollerVlanpolicyAllowedVlanArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerVlanpolicyAllowedVlanArrayOutput() SwitchcontrollerVlanpolicyAllowedVlanArrayOutput
	ToSwitchcontrollerVlanpolicyAllowedVlanArrayOutputWithContext(context.Context) SwitchcontrollerVlanpolicyAllowedVlanArrayOutput
}

type SwitchcontrollerVlanpolicyAllowedVlanArray []SwitchcontrollerVlanpolicyAllowedVlanInput

func (SwitchcontrollerVlanpolicyAllowedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerVlanpolicyAllowedVlan)(nil)).Elem()
}

func (i SwitchcontrollerVlanpolicyAllowedVlanArray) ToSwitchcontrollerVlanpolicyAllowedVlanArrayOutput() SwitchcontrollerVlanpolicyAllowedVlanArrayOutput {
	return i.ToSwitchcontrollerVlanpolicyAllowedVlanArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerVlanpolicyAllowedVlanArray) ToSwitchcontrollerVlanpolicyAllowedVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerVlanpolicyAllowedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVlanpolicyAllowedVlanArrayOutput)
}

type SwitchcontrollerVlanpolicyAllowedVlanOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVlanpolicyAllowedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerVlanpolicyAllowedVlan)(nil)).Elem()
}

func (o SwitchcontrollerVlanpolicyAllowedVlanOutput) ToSwitchcontrollerVlanpolicyAllowedVlanOutput() SwitchcontrollerVlanpolicyAllowedVlanOutput {
	return o
}

func (o SwitchcontrollerVlanpolicyAllowedVlanOutput) ToSwitchcontrollerVlanpolicyAllowedVlanOutputWithContext(ctx context.Context) SwitchcontrollerVlanpolicyAllowedVlanOutput {
	return o
}

// VLAN name.
func (o SwitchcontrollerVlanpolicyAllowedVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerVlanpolicyAllowedVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerVlanpolicyAllowedVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVlanpolicyAllowedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerVlanpolicyAllowedVlan)(nil)).Elem()
}

func (o SwitchcontrollerVlanpolicyAllowedVlanArrayOutput) ToSwitchcontrollerVlanpolicyAllowedVlanArrayOutput() SwitchcontrollerVlanpolicyAllowedVlanArrayOutput {
	return o
}

func (o SwitchcontrollerVlanpolicyAllowedVlanArrayOutput) ToSwitchcontrollerVlanpolicyAllowedVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerVlanpolicyAllowedVlanArrayOutput {
	return o
}

func (o SwitchcontrollerVlanpolicyAllowedVlanArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerVlanpolicyAllowedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerVlanpolicyAllowedVlan {
		return vs[0].([]SwitchcontrollerVlanpolicyAllowedVlan)[vs[1].(int)]
	}).(SwitchcontrollerVlanpolicyAllowedVlanOutput)
}

type SwitchcontrollerVlanpolicyUntaggedVlan struct {
	// VLAN name.
	VlanName *string `pulumi:"vlanName"`
}

// SwitchcontrollerVlanpolicyUntaggedVlanInput is an input type that accepts SwitchcontrollerVlanpolicyUntaggedVlanArgs and SwitchcontrollerVlanpolicyUntaggedVlanOutput values.
// You can construct a concrete instance of `SwitchcontrollerVlanpolicyUntaggedVlanInput` via:
//
//	SwitchcontrollerVlanpolicyUntaggedVlanArgs{...}
type SwitchcontrollerVlanpolicyUntaggedVlanInput interface {
	pulumi.Input

	ToSwitchcontrollerVlanpolicyUntaggedVlanOutput() SwitchcontrollerVlanpolicyUntaggedVlanOutput
	ToSwitchcontrollerVlanpolicyUntaggedVlanOutputWithContext(context.Context) SwitchcontrollerVlanpolicyUntaggedVlanOutput
}

type SwitchcontrollerVlanpolicyUntaggedVlanArgs struct {
	// VLAN name.
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchcontrollerVlanpolicyUntaggedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerVlanpolicyUntaggedVlan)(nil)).Elem()
}

func (i SwitchcontrollerVlanpolicyUntaggedVlanArgs) ToSwitchcontrollerVlanpolicyUntaggedVlanOutput() SwitchcontrollerVlanpolicyUntaggedVlanOutput {
	return i.ToSwitchcontrollerVlanpolicyUntaggedVlanOutputWithContext(context.Background())
}

func (i SwitchcontrollerVlanpolicyUntaggedVlanArgs) ToSwitchcontrollerVlanpolicyUntaggedVlanOutputWithContext(ctx context.Context) SwitchcontrollerVlanpolicyUntaggedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVlanpolicyUntaggedVlanOutput)
}

// SwitchcontrollerVlanpolicyUntaggedVlanArrayInput is an input type that accepts SwitchcontrollerVlanpolicyUntaggedVlanArray and SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerVlanpolicyUntaggedVlanArrayInput` via:
//
//	SwitchcontrollerVlanpolicyUntaggedVlanArray{ SwitchcontrollerVlanpolicyUntaggedVlanArgs{...} }
type SwitchcontrollerVlanpolicyUntaggedVlanArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerVlanpolicyUntaggedVlanArrayOutput() SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput
	ToSwitchcontrollerVlanpolicyUntaggedVlanArrayOutputWithContext(context.Context) SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput
}

type SwitchcontrollerVlanpolicyUntaggedVlanArray []SwitchcontrollerVlanpolicyUntaggedVlanInput

func (SwitchcontrollerVlanpolicyUntaggedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerVlanpolicyUntaggedVlan)(nil)).Elem()
}

func (i SwitchcontrollerVlanpolicyUntaggedVlanArray) ToSwitchcontrollerVlanpolicyUntaggedVlanArrayOutput() SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput {
	return i.ToSwitchcontrollerVlanpolicyUntaggedVlanArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerVlanpolicyUntaggedVlanArray) ToSwitchcontrollerVlanpolicyUntaggedVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput)
}

type SwitchcontrollerVlanpolicyUntaggedVlanOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVlanpolicyUntaggedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerVlanpolicyUntaggedVlan)(nil)).Elem()
}

func (o SwitchcontrollerVlanpolicyUntaggedVlanOutput) ToSwitchcontrollerVlanpolicyUntaggedVlanOutput() SwitchcontrollerVlanpolicyUntaggedVlanOutput {
	return o
}

func (o SwitchcontrollerVlanpolicyUntaggedVlanOutput) ToSwitchcontrollerVlanpolicyUntaggedVlanOutputWithContext(ctx context.Context) SwitchcontrollerVlanpolicyUntaggedVlanOutput {
	return o
}

// VLAN name.
func (o SwitchcontrollerVlanpolicyUntaggedVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerVlanpolicyUntaggedVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerVlanpolicyUntaggedVlan)(nil)).Elem()
}

func (o SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput) ToSwitchcontrollerVlanpolicyUntaggedVlanArrayOutput() SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput {
	return o
}

func (o SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput) ToSwitchcontrollerVlanpolicyUntaggedVlanArrayOutputWithContext(ctx context.Context) SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput {
	return o
}

func (o SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerVlanpolicyUntaggedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerVlanpolicyUntaggedVlan {
		return vs[0].([]SwitchcontrollerVlanpolicyUntaggedVlan)[vs[1].(int)]
	}).(SwitchcontrollerVlanpolicyUntaggedVlanOutput)
}

type SwitchcontrollerautoconfigCustomSwitchBinding struct {
	// Custom auto-config policy.
	Policy *string `pulumi:"policy"`
	// Switch name.
	SwitchId *string `pulumi:"switchId"`
}

// SwitchcontrollerautoconfigCustomSwitchBindingInput is an input type that accepts SwitchcontrollerautoconfigCustomSwitchBindingArgs and SwitchcontrollerautoconfigCustomSwitchBindingOutput values.
// You can construct a concrete instance of `SwitchcontrollerautoconfigCustomSwitchBindingInput` via:
//
//	SwitchcontrollerautoconfigCustomSwitchBindingArgs{...}
type SwitchcontrollerautoconfigCustomSwitchBindingInput interface {
	pulumi.Input

	ToSwitchcontrollerautoconfigCustomSwitchBindingOutput() SwitchcontrollerautoconfigCustomSwitchBindingOutput
	ToSwitchcontrollerautoconfigCustomSwitchBindingOutputWithContext(context.Context) SwitchcontrollerautoconfigCustomSwitchBindingOutput
}

type SwitchcontrollerautoconfigCustomSwitchBindingArgs struct {
	// Custom auto-config policy.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// Switch name.
	SwitchId pulumi.StringPtrInput `pulumi:"switchId"`
}

func (SwitchcontrollerautoconfigCustomSwitchBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerautoconfigCustomSwitchBinding)(nil)).Elem()
}

func (i SwitchcontrollerautoconfigCustomSwitchBindingArgs) ToSwitchcontrollerautoconfigCustomSwitchBindingOutput() SwitchcontrollerautoconfigCustomSwitchBindingOutput {
	return i.ToSwitchcontrollerautoconfigCustomSwitchBindingOutputWithContext(context.Background())
}

func (i SwitchcontrollerautoconfigCustomSwitchBindingArgs) ToSwitchcontrollerautoconfigCustomSwitchBindingOutputWithContext(ctx context.Context) SwitchcontrollerautoconfigCustomSwitchBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerautoconfigCustomSwitchBindingOutput)
}

// SwitchcontrollerautoconfigCustomSwitchBindingArrayInput is an input type that accepts SwitchcontrollerautoconfigCustomSwitchBindingArray and SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerautoconfigCustomSwitchBindingArrayInput` via:
//
//	SwitchcontrollerautoconfigCustomSwitchBindingArray{ SwitchcontrollerautoconfigCustomSwitchBindingArgs{...} }
type SwitchcontrollerautoconfigCustomSwitchBindingArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerautoconfigCustomSwitchBindingArrayOutput() SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput
	ToSwitchcontrollerautoconfigCustomSwitchBindingArrayOutputWithContext(context.Context) SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput
}

type SwitchcontrollerautoconfigCustomSwitchBindingArray []SwitchcontrollerautoconfigCustomSwitchBindingInput

func (SwitchcontrollerautoconfigCustomSwitchBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerautoconfigCustomSwitchBinding)(nil)).Elem()
}

func (i SwitchcontrollerautoconfigCustomSwitchBindingArray) ToSwitchcontrollerautoconfigCustomSwitchBindingArrayOutput() SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput {
	return i.ToSwitchcontrollerautoconfigCustomSwitchBindingArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerautoconfigCustomSwitchBindingArray) ToSwitchcontrollerautoconfigCustomSwitchBindingArrayOutputWithContext(ctx context.Context) SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput)
}

type SwitchcontrollerautoconfigCustomSwitchBindingOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerautoconfigCustomSwitchBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerautoconfigCustomSwitchBinding)(nil)).Elem()
}

func (o SwitchcontrollerautoconfigCustomSwitchBindingOutput) ToSwitchcontrollerautoconfigCustomSwitchBindingOutput() SwitchcontrollerautoconfigCustomSwitchBindingOutput {
	return o
}

func (o SwitchcontrollerautoconfigCustomSwitchBindingOutput) ToSwitchcontrollerautoconfigCustomSwitchBindingOutputWithContext(ctx context.Context) SwitchcontrollerautoconfigCustomSwitchBindingOutput {
	return o
}

// Custom auto-config policy.
func (o SwitchcontrollerautoconfigCustomSwitchBindingOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerautoconfigCustomSwitchBinding) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// Switch name.
func (o SwitchcontrollerautoconfigCustomSwitchBindingOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerautoconfigCustomSwitchBinding) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerautoconfigCustomSwitchBinding)(nil)).Elem()
}

func (o SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput) ToSwitchcontrollerautoconfigCustomSwitchBindingArrayOutput() SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput {
	return o
}

func (o SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput) ToSwitchcontrollerautoconfigCustomSwitchBindingArrayOutputWithContext(ctx context.Context) SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput {
	return o
}

func (o SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerautoconfigCustomSwitchBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerautoconfigCustomSwitchBinding {
		return vs[0].([]SwitchcontrollerautoconfigCustomSwitchBinding)[vs[1].(int)]
	}).(SwitchcontrollerautoconfigCustomSwitchBindingOutput)
}

type SwitchcontrollerqosIpdscpmapMapType struct {
	// COS queue number.
	CosQueue *int `pulumi:"cosQueue"`
	// Differentiated service. Valid values: `CS0`, `CS1`, `AF11`, `AF12`, `AF13`, `CS2`, `AF21`, `AF22`, `AF23`, `CS3`, `AF31`, `AF32`, `AF33`, `CS4`, `AF41`, `AF42`, `AF43`, `CS5`, `EF`, `CS6`, `CS7`.
	Diffserv *string `pulumi:"diffserv"`
	// IP Precedence. Valid values: `network-control`, `internetwork-control`, `critic-ecp`, `flashoverride`, `flash`, `immediate`, `priority`, `routine`.
	IpPrecedence *string `pulumi:"ipPrecedence"`
	// Dscp mapping entry name.
	Name *string `pulumi:"name"`
	// Raw values of DSCP (0 - 63).
	Value *string `pulumi:"value"`
}

// SwitchcontrollerqosIpdscpmapMapTypeInput is an input type that accepts SwitchcontrollerqosIpdscpmapMapTypeArgs and SwitchcontrollerqosIpdscpmapMapTypeOutput values.
// You can construct a concrete instance of `SwitchcontrollerqosIpdscpmapMapTypeInput` via:
//
//	SwitchcontrollerqosIpdscpmapMapTypeArgs{...}
type SwitchcontrollerqosIpdscpmapMapTypeInput interface {
	pulumi.Input

	ToSwitchcontrollerqosIpdscpmapMapTypeOutput() SwitchcontrollerqosIpdscpmapMapTypeOutput
	ToSwitchcontrollerqosIpdscpmapMapTypeOutputWithContext(context.Context) SwitchcontrollerqosIpdscpmapMapTypeOutput
}

type SwitchcontrollerqosIpdscpmapMapTypeArgs struct {
	// COS queue number.
	CosQueue pulumi.IntPtrInput `pulumi:"cosQueue"`
	// Differentiated service. Valid values: `CS0`, `CS1`, `AF11`, `AF12`, `AF13`, `CS2`, `AF21`, `AF22`, `AF23`, `CS3`, `AF31`, `AF32`, `AF33`, `CS4`, `AF41`, `AF42`, `AF43`, `CS5`, `EF`, `CS6`, `CS7`.
	Diffserv pulumi.StringPtrInput `pulumi:"diffserv"`
	// IP Precedence. Valid values: `network-control`, `internetwork-control`, `critic-ecp`, `flashoverride`, `flash`, `immediate`, `priority`, `routine`.
	IpPrecedence pulumi.StringPtrInput `pulumi:"ipPrecedence"`
	// Dscp mapping entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Raw values of DSCP (0 - 63).
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SwitchcontrollerqosIpdscpmapMapTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerqosIpdscpmapMapType)(nil)).Elem()
}

func (i SwitchcontrollerqosIpdscpmapMapTypeArgs) ToSwitchcontrollerqosIpdscpmapMapTypeOutput() SwitchcontrollerqosIpdscpmapMapTypeOutput {
	return i.ToSwitchcontrollerqosIpdscpmapMapTypeOutputWithContext(context.Background())
}

func (i SwitchcontrollerqosIpdscpmapMapTypeArgs) ToSwitchcontrollerqosIpdscpmapMapTypeOutputWithContext(ctx context.Context) SwitchcontrollerqosIpdscpmapMapTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerqosIpdscpmapMapTypeOutput)
}

// SwitchcontrollerqosIpdscpmapMapTypeArrayInput is an input type that accepts SwitchcontrollerqosIpdscpmapMapTypeArray and SwitchcontrollerqosIpdscpmapMapTypeArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerqosIpdscpmapMapTypeArrayInput` via:
//
//	SwitchcontrollerqosIpdscpmapMapTypeArray{ SwitchcontrollerqosIpdscpmapMapTypeArgs{...} }
type SwitchcontrollerqosIpdscpmapMapTypeArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerqosIpdscpmapMapTypeArrayOutput() SwitchcontrollerqosIpdscpmapMapTypeArrayOutput
	ToSwitchcontrollerqosIpdscpmapMapTypeArrayOutputWithContext(context.Context) SwitchcontrollerqosIpdscpmapMapTypeArrayOutput
}

type SwitchcontrollerqosIpdscpmapMapTypeArray []SwitchcontrollerqosIpdscpmapMapTypeInput

func (SwitchcontrollerqosIpdscpmapMapTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerqosIpdscpmapMapType)(nil)).Elem()
}

func (i SwitchcontrollerqosIpdscpmapMapTypeArray) ToSwitchcontrollerqosIpdscpmapMapTypeArrayOutput() SwitchcontrollerqosIpdscpmapMapTypeArrayOutput {
	return i.ToSwitchcontrollerqosIpdscpmapMapTypeArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerqosIpdscpmapMapTypeArray) ToSwitchcontrollerqosIpdscpmapMapTypeArrayOutputWithContext(ctx context.Context) SwitchcontrollerqosIpdscpmapMapTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerqosIpdscpmapMapTypeArrayOutput)
}

type SwitchcontrollerqosIpdscpmapMapTypeOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerqosIpdscpmapMapTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerqosIpdscpmapMapType)(nil)).Elem()
}

func (o SwitchcontrollerqosIpdscpmapMapTypeOutput) ToSwitchcontrollerqosIpdscpmapMapTypeOutput() SwitchcontrollerqosIpdscpmapMapTypeOutput {
	return o
}

func (o SwitchcontrollerqosIpdscpmapMapTypeOutput) ToSwitchcontrollerqosIpdscpmapMapTypeOutputWithContext(ctx context.Context) SwitchcontrollerqosIpdscpmapMapTypeOutput {
	return o
}

// COS queue number.
func (o SwitchcontrollerqosIpdscpmapMapTypeOutput) CosQueue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosIpdscpmapMapType) *int { return v.CosQueue }).(pulumi.IntPtrOutput)
}

// Differentiated service. Valid values: `CS0`, `CS1`, `AF11`, `AF12`, `AF13`, `CS2`, `AF21`, `AF22`, `AF23`, `CS3`, `AF31`, `AF32`, `AF33`, `CS4`, `AF41`, `AF42`, `AF43`, `CS5`, `EF`, `CS6`, `CS7`.
func (o SwitchcontrollerqosIpdscpmapMapTypeOutput) Diffserv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosIpdscpmapMapType) *string { return v.Diffserv }).(pulumi.StringPtrOutput)
}

// IP Precedence. Valid values: `network-control`, `internetwork-control`, `critic-ecp`, `flashoverride`, `flash`, `immediate`, `priority`, `routine`.
func (o SwitchcontrollerqosIpdscpmapMapTypeOutput) IpPrecedence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosIpdscpmapMapType) *string { return v.IpPrecedence }).(pulumi.StringPtrOutput)
}

// Dscp mapping entry name.
func (o SwitchcontrollerqosIpdscpmapMapTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosIpdscpmapMapType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Raw values of DSCP (0 - 63).
func (o SwitchcontrollerqosIpdscpmapMapTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosIpdscpmapMapType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerqosIpdscpmapMapTypeArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerqosIpdscpmapMapTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerqosIpdscpmapMapType)(nil)).Elem()
}

func (o SwitchcontrollerqosIpdscpmapMapTypeArrayOutput) ToSwitchcontrollerqosIpdscpmapMapTypeArrayOutput() SwitchcontrollerqosIpdscpmapMapTypeArrayOutput {
	return o
}

func (o SwitchcontrollerqosIpdscpmapMapTypeArrayOutput) ToSwitchcontrollerqosIpdscpmapMapTypeArrayOutputWithContext(ctx context.Context) SwitchcontrollerqosIpdscpmapMapTypeArrayOutput {
	return o
}

func (o SwitchcontrollerqosIpdscpmapMapTypeArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerqosIpdscpmapMapTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerqosIpdscpmapMapType {
		return vs[0].([]SwitchcontrollerqosIpdscpmapMapType)[vs[1].(int)]
	}).(SwitchcontrollerqosIpdscpmapMapTypeOutput)
}

type SwitchcontrollerqosQueuepolicyCosQueue struct {
	// Description of the COS queue.
	Description *string `pulumi:"description"`
	// COS queue drop policy. Valid values: `taildrop`, `weighted-random-early-detection`.
	DropPolicy *string `pulumi:"dropPolicy"`
	// Enable/disable ECN packet marking to drop eligible packets. Valid values: `disable`, `enable`.
	Ecn *string `pulumi:"ecn"`
	// Maximum rate (0 - 4294967295 kbps, 0 to disable).
	MaxRate *int `pulumi:"maxRate"`
	// Maximum rate (% of link speed).
	MaxRatePercent *int `pulumi:"maxRatePercent"`
	// Minimum rate (0 - 4294967295 kbps, 0 to disable).
	MinRate *int `pulumi:"minRate"`
	// Minimum rate (% of link speed).
	MinRatePercent *int `pulumi:"minRatePercent"`
	// Cos queue ID.
	Name *string `pulumi:"name"`
	// Weight of weighted round robin scheduling.
	Weight *int `pulumi:"weight"`
}

// SwitchcontrollerqosQueuepolicyCosQueueInput is an input type that accepts SwitchcontrollerqosQueuepolicyCosQueueArgs and SwitchcontrollerqosQueuepolicyCosQueueOutput values.
// You can construct a concrete instance of `SwitchcontrollerqosQueuepolicyCosQueueInput` via:
//
//	SwitchcontrollerqosQueuepolicyCosQueueArgs{...}
type SwitchcontrollerqosQueuepolicyCosQueueInput interface {
	pulumi.Input

	ToSwitchcontrollerqosQueuepolicyCosQueueOutput() SwitchcontrollerqosQueuepolicyCosQueueOutput
	ToSwitchcontrollerqosQueuepolicyCosQueueOutputWithContext(context.Context) SwitchcontrollerqosQueuepolicyCosQueueOutput
}

type SwitchcontrollerqosQueuepolicyCosQueueArgs struct {
	// Description of the COS queue.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// COS queue drop policy. Valid values: `taildrop`, `weighted-random-early-detection`.
	DropPolicy pulumi.StringPtrInput `pulumi:"dropPolicy"`
	// Enable/disable ECN packet marking to drop eligible packets. Valid values: `disable`, `enable`.
	Ecn pulumi.StringPtrInput `pulumi:"ecn"`
	// Maximum rate (0 - 4294967295 kbps, 0 to disable).
	MaxRate pulumi.IntPtrInput `pulumi:"maxRate"`
	// Maximum rate (% of link speed).
	MaxRatePercent pulumi.IntPtrInput `pulumi:"maxRatePercent"`
	// Minimum rate (0 - 4294967295 kbps, 0 to disable).
	MinRate pulumi.IntPtrInput `pulumi:"minRate"`
	// Minimum rate (% of link speed).
	MinRatePercent pulumi.IntPtrInput `pulumi:"minRatePercent"`
	// Cos queue ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Weight of weighted round robin scheduling.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (SwitchcontrollerqosQueuepolicyCosQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerqosQueuepolicyCosQueue)(nil)).Elem()
}

func (i SwitchcontrollerqosQueuepolicyCosQueueArgs) ToSwitchcontrollerqosQueuepolicyCosQueueOutput() SwitchcontrollerqosQueuepolicyCosQueueOutput {
	return i.ToSwitchcontrollerqosQueuepolicyCosQueueOutputWithContext(context.Background())
}

func (i SwitchcontrollerqosQueuepolicyCosQueueArgs) ToSwitchcontrollerqosQueuepolicyCosQueueOutputWithContext(ctx context.Context) SwitchcontrollerqosQueuepolicyCosQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerqosQueuepolicyCosQueueOutput)
}

// SwitchcontrollerqosQueuepolicyCosQueueArrayInput is an input type that accepts SwitchcontrollerqosQueuepolicyCosQueueArray and SwitchcontrollerqosQueuepolicyCosQueueArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerqosQueuepolicyCosQueueArrayInput` via:
//
//	SwitchcontrollerqosQueuepolicyCosQueueArray{ SwitchcontrollerqosQueuepolicyCosQueueArgs{...} }
type SwitchcontrollerqosQueuepolicyCosQueueArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerqosQueuepolicyCosQueueArrayOutput() SwitchcontrollerqosQueuepolicyCosQueueArrayOutput
	ToSwitchcontrollerqosQueuepolicyCosQueueArrayOutputWithContext(context.Context) SwitchcontrollerqosQueuepolicyCosQueueArrayOutput
}

type SwitchcontrollerqosQueuepolicyCosQueueArray []SwitchcontrollerqosQueuepolicyCosQueueInput

func (SwitchcontrollerqosQueuepolicyCosQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerqosQueuepolicyCosQueue)(nil)).Elem()
}

func (i SwitchcontrollerqosQueuepolicyCosQueueArray) ToSwitchcontrollerqosQueuepolicyCosQueueArrayOutput() SwitchcontrollerqosQueuepolicyCosQueueArrayOutput {
	return i.ToSwitchcontrollerqosQueuepolicyCosQueueArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerqosQueuepolicyCosQueueArray) ToSwitchcontrollerqosQueuepolicyCosQueueArrayOutputWithContext(ctx context.Context) SwitchcontrollerqosQueuepolicyCosQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerqosQueuepolicyCosQueueArrayOutput)
}

type SwitchcontrollerqosQueuepolicyCosQueueOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerqosQueuepolicyCosQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchcontrollerqosQueuepolicyCosQueue)(nil)).Elem()
}

func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) ToSwitchcontrollerqosQueuepolicyCosQueueOutput() SwitchcontrollerqosQueuepolicyCosQueueOutput {
	return o
}

func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) ToSwitchcontrollerqosQueuepolicyCosQueueOutputWithContext(ctx context.Context) SwitchcontrollerqosQueuepolicyCosQueueOutput {
	return o
}

// Description of the COS queue.
func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosQueuepolicyCosQueue) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// COS queue drop policy. Valid values: `taildrop`, `weighted-random-early-detection`.
func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) DropPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosQueuepolicyCosQueue) *string { return v.DropPolicy }).(pulumi.StringPtrOutput)
}

// Enable/disable ECN packet marking to drop eligible packets. Valid values: `disable`, `enable`.
func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) Ecn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosQueuepolicyCosQueue) *string { return v.Ecn }).(pulumi.StringPtrOutput)
}

// Maximum rate (0 - 4294967295 kbps, 0 to disable).
func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) MaxRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosQueuepolicyCosQueue) *int { return v.MaxRate }).(pulumi.IntPtrOutput)
}

// Maximum rate (% of link speed).
func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) MaxRatePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosQueuepolicyCosQueue) *int { return v.MaxRatePercent }).(pulumi.IntPtrOutput)
}

// Minimum rate (0 - 4294967295 kbps, 0 to disable).
func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) MinRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosQueuepolicyCosQueue) *int { return v.MinRate }).(pulumi.IntPtrOutput)
}

// Minimum rate (% of link speed).
func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) MinRatePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosQueuepolicyCosQueue) *int { return v.MinRatePercent }).(pulumi.IntPtrOutput)
}

// Cos queue ID.
func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosQueuepolicyCosQueue) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Weight of weighted round robin scheduling.
func (o SwitchcontrollerqosQueuepolicyCosQueueOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchcontrollerqosQueuepolicyCosQueue) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SwitchcontrollerqosQueuepolicyCosQueueArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerqosQueuepolicyCosQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchcontrollerqosQueuepolicyCosQueue)(nil)).Elem()
}

func (o SwitchcontrollerqosQueuepolicyCosQueueArrayOutput) ToSwitchcontrollerqosQueuepolicyCosQueueArrayOutput() SwitchcontrollerqosQueuepolicyCosQueueArrayOutput {
	return o
}

func (o SwitchcontrollerqosQueuepolicyCosQueueArrayOutput) ToSwitchcontrollerqosQueuepolicyCosQueueArrayOutputWithContext(ctx context.Context) SwitchcontrollerqosQueuepolicyCosQueueArrayOutput {
	return o
}

func (o SwitchcontrollerqosQueuepolicyCosQueueArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerqosQueuepolicyCosQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchcontrollerqosQueuepolicyCosQueue {
		return vs[0].([]SwitchcontrollerqosQueuepolicyCosQueue)[vs[1].(int)]
	}).(SwitchcontrollerqosQueuepolicyCosQueueOutput)
}

type Switchcontrollersecuritypolicy8021XUserGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// Switchcontrollersecuritypolicy8021XUserGroupInput is an input type that accepts Switchcontrollersecuritypolicy8021XUserGroupArgs and Switchcontrollersecuritypolicy8021XUserGroupOutput values.
// You can construct a concrete instance of `Switchcontrollersecuritypolicy8021XUserGroupInput` via:
//
//	Switchcontrollersecuritypolicy8021XUserGroupArgs{...}
type Switchcontrollersecuritypolicy8021XUserGroupInput interface {
	pulumi.Input

	ToSwitchcontrollersecuritypolicy8021XUserGroupOutput() Switchcontrollersecuritypolicy8021XUserGroupOutput
	ToSwitchcontrollersecuritypolicy8021XUserGroupOutputWithContext(context.Context) Switchcontrollersecuritypolicy8021XUserGroupOutput
}

type Switchcontrollersecuritypolicy8021XUserGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Switchcontrollersecuritypolicy8021XUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Switchcontrollersecuritypolicy8021XUserGroup)(nil)).Elem()
}

func (i Switchcontrollersecuritypolicy8021XUserGroupArgs) ToSwitchcontrollersecuritypolicy8021XUserGroupOutput() Switchcontrollersecuritypolicy8021XUserGroupOutput {
	return i.ToSwitchcontrollersecuritypolicy8021XUserGroupOutputWithContext(context.Background())
}

func (i Switchcontrollersecuritypolicy8021XUserGroupArgs) ToSwitchcontrollersecuritypolicy8021XUserGroupOutputWithContext(ctx context.Context) Switchcontrollersecuritypolicy8021XUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Switchcontrollersecuritypolicy8021XUserGroupOutput)
}

// Switchcontrollersecuritypolicy8021XUserGroupArrayInput is an input type that accepts Switchcontrollersecuritypolicy8021XUserGroupArray and Switchcontrollersecuritypolicy8021XUserGroupArrayOutput values.
// You can construct a concrete instance of `Switchcontrollersecuritypolicy8021XUserGroupArrayInput` via:
//
//	Switchcontrollersecuritypolicy8021XUserGroupArray{ Switchcontrollersecuritypolicy8021XUserGroupArgs{...} }
type Switchcontrollersecuritypolicy8021XUserGroupArrayInput interface {
	pulumi.Input

	ToSwitchcontrollersecuritypolicy8021XUserGroupArrayOutput() Switchcontrollersecuritypolicy8021XUserGroupArrayOutput
	ToSwitchcontrollersecuritypolicy8021XUserGroupArrayOutputWithContext(context.Context) Switchcontrollersecuritypolicy8021XUserGroupArrayOutput
}

type Switchcontrollersecuritypolicy8021XUserGroupArray []Switchcontrollersecuritypolicy8021XUserGroupInput

func (Switchcontrollersecuritypolicy8021XUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Switchcontrollersecuritypolicy8021XUserGroup)(nil)).Elem()
}

func (i Switchcontrollersecuritypolicy8021XUserGroupArray) ToSwitchcontrollersecuritypolicy8021XUserGroupArrayOutput() Switchcontrollersecuritypolicy8021XUserGroupArrayOutput {
	return i.ToSwitchcontrollersecuritypolicy8021XUserGroupArrayOutputWithContext(context.Background())
}

func (i Switchcontrollersecuritypolicy8021XUserGroupArray) ToSwitchcontrollersecuritypolicy8021XUserGroupArrayOutputWithContext(ctx context.Context) Switchcontrollersecuritypolicy8021XUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Switchcontrollersecuritypolicy8021XUserGroupArrayOutput)
}

type Switchcontrollersecuritypolicy8021XUserGroupOutput struct{ *pulumi.OutputState }

func (Switchcontrollersecuritypolicy8021XUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Switchcontrollersecuritypolicy8021XUserGroup)(nil)).Elem()
}

func (o Switchcontrollersecuritypolicy8021XUserGroupOutput) ToSwitchcontrollersecuritypolicy8021XUserGroupOutput() Switchcontrollersecuritypolicy8021XUserGroupOutput {
	return o
}

func (o Switchcontrollersecuritypolicy8021XUserGroupOutput) ToSwitchcontrollersecuritypolicy8021XUserGroupOutputWithContext(ctx context.Context) Switchcontrollersecuritypolicy8021XUserGroupOutput {
	return o
}

// Group name.
func (o Switchcontrollersecuritypolicy8021XUserGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Switchcontrollersecuritypolicy8021XUserGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Switchcontrollersecuritypolicy8021XUserGroupArrayOutput struct{ *pulumi.OutputState }

func (Switchcontrollersecuritypolicy8021XUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Switchcontrollersecuritypolicy8021XUserGroup)(nil)).Elem()
}

func (o Switchcontrollersecuritypolicy8021XUserGroupArrayOutput) ToSwitchcontrollersecuritypolicy8021XUserGroupArrayOutput() Switchcontrollersecuritypolicy8021XUserGroupArrayOutput {
	return o
}

func (o Switchcontrollersecuritypolicy8021XUserGroupArrayOutput) ToSwitchcontrollersecuritypolicy8021XUserGroupArrayOutputWithContext(ctx context.Context) Switchcontrollersecuritypolicy8021XUserGroupArrayOutput {
	return o
}

func (o Switchcontrollersecuritypolicy8021XUserGroupArrayOutput) Index(i pulumi.IntInput) Switchcontrollersecuritypolicy8021XUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Switchcontrollersecuritypolicy8021XUserGroup {
		return vs[0].([]Switchcontrollersecuritypolicy8021XUserGroup)[vs[1].(int)]
	}).(Switchcontrollersecuritypolicy8021XUserGroupOutput)
}

type SystemAccprofileFwgrpPermission struct {
	// Address Configuration. Valid values: `none`, `read`, `read-write`.
	Address *string `pulumi:"address"`
	// Other Firewall Configuration. Valid values: `none`, `read`, `read-write`.
	Others *string `pulumi:"others"`
	// Policy Configuration. Valid values: `none`, `read`, `read-write`.
	Policy *string `pulumi:"policy"`
	// Schedule Configuration. Valid values: `none`, `read`, `read-write`.
	Schedule *string `pulumi:"schedule"`
	// Service Configuration. Valid values: `none`, `read`, `read-write`.
	Service *string `pulumi:"service"`
}

// SystemAccprofileFwgrpPermissionInput is an input type that accepts SystemAccprofileFwgrpPermissionArgs and SystemAccprofileFwgrpPermissionOutput values.
// You can construct a concrete instance of `SystemAccprofileFwgrpPermissionInput` via:
//
//	SystemAccprofileFwgrpPermissionArgs{...}
type SystemAccprofileFwgrpPermissionInput interface {
	pulumi.Input

	ToSystemAccprofileFwgrpPermissionOutput() SystemAccprofileFwgrpPermissionOutput
	ToSystemAccprofileFwgrpPermissionOutputWithContext(context.Context) SystemAccprofileFwgrpPermissionOutput
}

type SystemAccprofileFwgrpPermissionArgs struct {
	// Address Configuration. Valid values: `none`, `read`, `read-write`.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Other Firewall Configuration. Valid values: `none`, `read`, `read-write`.
	Others pulumi.StringPtrInput `pulumi:"others"`
	// Policy Configuration. Valid values: `none`, `read`, `read-write`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// Schedule Configuration. Valid values: `none`, `read`, `read-write`.
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
	// Service Configuration. Valid values: `none`, `read`, `read-write`.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (SystemAccprofileFwgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileFwgrpPermission)(nil)).Elem()
}

func (i SystemAccprofileFwgrpPermissionArgs) ToSystemAccprofileFwgrpPermissionOutput() SystemAccprofileFwgrpPermissionOutput {
	return i.ToSystemAccprofileFwgrpPermissionOutputWithContext(context.Background())
}

func (i SystemAccprofileFwgrpPermissionArgs) ToSystemAccprofileFwgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileFwgrpPermissionOutput)
}

func (i SystemAccprofileFwgrpPermissionArgs) ToSystemAccprofileFwgrpPermissionPtrOutput() SystemAccprofileFwgrpPermissionPtrOutput {
	return i.ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(context.Background())
}

func (i SystemAccprofileFwgrpPermissionArgs) ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileFwgrpPermissionOutput).ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx)
}

// SystemAccprofileFwgrpPermissionPtrInput is an input type that accepts SystemAccprofileFwgrpPermissionArgs, SystemAccprofileFwgrpPermissionPtr and SystemAccprofileFwgrpPermissionPtrOutput values.
// You can construct a concrete instance of `SystemAccprofileFwgrpPermissionPtrInput` via:
//
//	        SystemAccprofileFwgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type SystemAccprofileFwgrpPermissionPtrInput interface {
	pulumi.Input

	ToSystemAccprofileFwgrpPermissionPtrOutput() SystemAccprofileFwgrpPermissionPtrOutput
	ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(context.Context) SystemAccprofileFwgrpPermissionPtrOutput
}

type systemAccprofileFwgrpPermissionPtrType SystemAccprofileFwgrpPermissionArgs

func SystemAccprofileFwgrpPermissionPtr(v *SystemAccprofileFwgrpPermissionArgs) SystemAccprofileFwgrpPermissionPtrInput {
	return (*systemAccprofileFwgrpPermissionPtrType)(v)
}

func (*systemAccprofileFwgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileFwgrpPermission)(nil)).Elem()
}

func (i *systemAccprofileFwgrpPermissionPtrType) ToSystemAccprofileFwgrpPermissionPtrOutput() SystemAccprofileFwgrpPermissionPtrOutput {
	return i.ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *systemAccprofileFwgrpPermissionPtrType) ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileFwgrpPermissionPtrOutput)
}

type SystemAccprofileFwgrpPermissionOutput struct{ *pulumi.OutputState }

func (SystemAccprofileFwgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileFwgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileFwgrpPermissionOutput) ToSystemAccprofileFwgrpPermissionOutput() SystemAccprofileFwgrpPermissionOutput {
	return o
}

func (o SystemAccprofileFwgrpPermissionOutput) ToSystemAccprofileFwgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionOutput {
	return o
}

func (o SystemAccprofileFwgrpPermissionOutput) ToSystemAccprofileFwgrpPermissionPtrOutput() SystemAccprofileFwgrpPermissionPtrOutput {
	return o.ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(context.Background())
}

func (o SystemAccprofileFwgrpPermissionOutput) ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAccprofileFwgrpPermission) *SystemAccprofileFwgrpPermission {
		return &v
	}).(SystemAccprofileFwgrpPermissionPtrOutput)
}

// Address Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileFwgrpPermissionOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileFwgrpPermission) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Other Firewall Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileFwgrpPermissionOutput) Others() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileFwgrpPermission) *string { return v.Others }).(pulumi.StringPtrOutput)
}

// Policy Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileFwgrpPermissionOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileFwgrpPermission) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// Schedule Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileFwgrpPermissionOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileFwgrpPermission) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

// Service Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileFwgrpPermissionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileFwgrpPermission) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type SystemAccprofileFwgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (SystemAccprofileFwgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileFwgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) ToSystemAccprofileFwgrpPermissionPtrOutput() SystemAccprofileFwgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) Elem() SystemAccprofileFwgrpPermissionOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) SystemAccprofileFwgrpPermission {
		if v != nil {
			return *v
		}
		var ret SystemAccprofileFwgrpPermission
		return ret
	}).(SystemAccprofileFwgrpPermissionOutput)
}

// Address Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileFwgrpPermissionPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Other Firewall Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileFwgrpPermissionPtrOutput) Others() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Others
	}).(pulumi.StringPtrOutput)
}

// Policy Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileFwgrpPermissionPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// Schedule Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileFwgrpPermissionPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

// Service Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileFwgrpPermissionPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type SystemAccprofileLoggrpPermission struct {
	// Log & Report configuration. Valid values: `none`, `read`, `read-write`.
	Config *string `pulumi:"config"`
	// Log & Report Data Access. Valid values: `none`, `read`, `read-write`.
	DataAccess *string `pulumi:"dataAccess"`
	// Log & Report Report Access. Valid values: `none`, `read`, `read-write`.
	ReportAccess *string `pulumi:"reportAccess"`
	// Log & Report Threat Weight. Valid values: `none`, `read`, `read-write`.
	ThreatWeight *string `pulumi:"threatWeight"`
}

// SystemAccprofileLoggrpPermissionInput is an input type that accepts SystemAccprofileLoggrpPermissionArgs and SystemAccprofileLoggrpPermissionOutput values.
// You can construct a concrete instance of `SystemAccprofileLoggrpPermissionInput` via:
//
//	SystemAccprofileLoggrpPermissionArgs{...}
type SystemAccprofileLoggrpPermissionInput interface {
	pulumi.Input

	ToSystemAccprofileLoggrpPermissionOutput() SystemAccprofileLoggrpPermissionOutput
	ToSystemAccprofileLoggrpPermissionOutputWithContext(context.Context) SystemAccprofileLoggrpPermissionOutput
}

type SystemAccprofileLoggrpPermissionArgs struct {
	// Log & Report configuration. Valid values: `none`, `read`, `read-write`.
	Config pulumi.StringPtrInput `pulumi:"config"`
	// Log & Report Data Access. Valid values: `none`, `read`, `read-write`.
	DataAccess pulumi.StringPtrInput `pulumi:"dataAccess"`
	// Log & Report Report Access. Valid values: `none`, `read`, `read-write`.
	ReportAccess pulumi.StringPtrInput `pulumi:"reportAccess"`
	// Log & Report Threat Weight. Valid values: `none`, `read`, `read-write`.
	ThreatWeight pulumi.StringPtrInput `pulumi:"threatWeight"`
}

func (SystemAccprofileLoggrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileLoggrpPermission)(nil)).Elem()
}

func (i SystemAccprofileLoggrpPermissionArgs) ToSystemAccprofileLoggrpPermissionOutput() SystemAccprofileLoggrpPermissionOutput {
	return i.ToSystemAccprofileLoggrpPermissionOutputWithContext(context.Background())
}

func (i SystemAccprofileLoggrpPermissionArgs) ToSystemAccprofileLoggrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileLoggrpPermissionOutput)
}

func (i SystemAccprofileLoggrpPermissionArgs) ToSystemAccprofileLoggrpPermissionPtrOutput() SystemAccprofileLoggrpPermissionPtrOutput {
	return i.ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(context.Background())
}

func (i SystemAccprofileLoggrpPermissionArgs) ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileLoggrpPermissionOutput).ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx)
}

// SystemAccprofileLoggrpPermissionPtrInput is an input type that accepts SystemAccprofileLoggrpPermissionArgs, SystemAccprofileLoggrpPermissionPtr and SystemAccprofileLoggrpPermissionPtrOutput values.
// You can construct a concrete instance of `SystemAccprofileLoggrpPermissionPtrInput` via:
//
//	        SystemAccprofileLoggrpPermissionArgs{...}
//
//	or:
//
//	        nil
type SystemAccprofileLoggrpPermissionPtrInput interface {
	pulumi.Input

	ToSystemAccprofileLoggrpPermissionPtrOutput() SystemAccprofileLoggrpPermissionPtrOutput
	ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(context.Context) SystemAccprofileLoggrpPermissionPtrOutput
}

type systemAccprofileLoggrpPermissionPtrType SystemAccprofileLoggrpPermissionArgs

func SystemAccprofileLoggrpPermissionPtr(v *SystemAccprofileLoggrpPermissionArgs) SystemAccprofileLoggrpPermissionPtrInput {
	return (*systemAccprofileLoggrpPermissionPtrType)(v)
}

func (*systemAccprofileLoggrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileLoggrpPermission)(nil)).Elem()
}

func (i *systemAccprofileLoggrpPermissionPtrType) ToSystemAccprofileLoggrpPermissionPtrOutput() SystemAccprofileLoggrpPermissionPtrOutput {
	return i.ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(context.Background())
}

func (i *systemAccprofileLoggrpPermissionPtrType) ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileLoggrpPermissionPtrOutput)
}

type SystemAccprofileLoggrpPermissionOutput struct{ *pulumi.OutputState }

func (SystemAccprofileLoggrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileLoggrpPermission)(nil)).Elem()
}

func (o SystemAccprofileLoggrpPermissionOutput) ToSystemAccprofileLoggrpPermissionOutput() SystemAccprofileLoggrpPermissionOutput {
	return o
}

func (o SystemAccprofileLoggrpPermissionOutput) ToSystemAccprofileLoggrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionOutput {
	return o
}

func (o SystemAccprofileLoggrpPermissionOutput) ToSystemAccprofileLoggrpPermissionPtrOutput() SystemAccprofileLoggrpPermissionPtrOutput {
	return o.ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(context.Background())
}

func (o SystemAccprofileLoggrpPermissionOutput) ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAccprofileLoggrpPermission) *SystemAccprofileLoggrpPermission {
		return &v
	}).(SystemAccprofileLoggrpPermissionPtrOutput)
}

// Log & Report configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileLoggrpPermissionOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileLoggrpPermission) *string { return v.Config }).(pulumi.StringPtrOutput)
}

// Log & Report Data Access. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileLoggrpPermissionOutput) DataAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileLoggrpPermission) *string { return v.DataAccess }).(pulumi.StringPtrOutput)
}

// Log & Report Report Access. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileLoggrpPermissionOutput) ReportAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileLoggrpPermission) *string { return v.ReportAccess }).(pulumi.StringPtrOutput)
}

// Log & Report Threat Weight. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileLoggrpPermissionOutput) ThreatWeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileLoggrpPermission) *string { return v.ThreatWeight }).(pulumi.StringPtrOutput)
}

type SystemAccprofileLoggrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (SystemAccprofileLoggrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileLoggrpPermission)(nil)).Elem()
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) ToSystemAccprofileLoggrpPermissionPtrOutput() SystemAccprofileLoggrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) Elem() SystemAccprofileLoggrpPermissionOutput {
	return o.ApplyT(func(v *SystemAccprofileLoggrpPermission) SystemAccprofileLoggrpPermission {
		if v != nil {
			return *v
		}
		var ret SystemAccprofileLoggrpPermission
		return ret
	}).(SystemAccprofileLoggrpPermissionOutput)
}

// Log & Report configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileLoggrpPermissionPtrOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.StringPtrOutput)
}

// Log & Report Data Access. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileLoggrpPermissionPtrOutput) DataAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.DataAccess
	}).(pulumi.StringPtrOutput)
}

// Log & Report Report Access. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileLoggrpPermissionPtrOutput) ReportAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.ReportAccess
	}).(pulumi.StringPtrOutput)
}

// Log & Report Threat Weight. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileLoggrpPermissionPtrOutput) ThreatWeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.ThreatWeight
	}).(pulumi.StringPtrOutput)
}

type SystemAccprofileNetgrpPermission struct {
	// Network Configuration. Valid values: `none`, `read`, `read-write`.
	Cfg *string `pulumi:"cfg"`
	// Packet Capture Configuration. Valid values: `none`, `read`, `read-write`.
	PacketCapture *string `pulumi:"packetCapture"`
	// Router Configuration. Valid values: `none`, `read`, `read-write`.
	RouteCfg *string `pulumi:"routeCfg"`
}

// SystemAccprofileNetgrpPermissionInput is an input type that accepts SystemAccprofileNetgrpPermissionArgs and SystemAccprofileNetgrpPermissionOutput values.
// You can construct a concrete instance of `SystemAccprofileNetgrpPermissionInput` via:
//
//	SystemAccprofileNetgrpPermissionArgs{...}
type SystemAccprofileNetgrpPermissionInput interface {
	pulumi.Input

	ToSystemAccprofileNetgrpPermissionOutput() SystemAccprofileNetgrpPermissionOutput
	ToSystemAccprofileNetgrpPermissionOutputWithContext(context.Context) SystemAccprofileNetgrpPermissionOutput
}

type SystemAccprofileNetgrpPermissionArgs struct {
	// Network Configuration. Valid values: `none`, `read`, `read-write`.
	Cfg pulumi.StringPtrInput `pulumi:"cfg"`
	// Packet Capture Configuration. Valid values: `none`, `read`, `read-write`.
	PacketCapture pulumi.StringPtrInput `pulumi:"packetCapture"`
	// Router Configuration. Valid values: `none`, `read`, `read-write`.
	RouteCfg pulumi.StringPtrInput `pulumi:"routeCfg"`
}

func (SystemAccprofileNetgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileNetgrpPermission)(nil)).Elem()
}

func (i SystemAccprofileNetgrpPermissionArgs) ToSystemAccprofileNetgrpPermissionOutput() SystemAccprofileNetgrpPermissionOutput {
	return i.ToSystemAccprofileNetgrpPermissionOutputWithContext(context.Background())
}

func (i SystemAccprofileNetgrpPermissionArgs) ToSystemAccprofileNetgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileNetgrpPermissionOutput)
}

func (i SystemAccprofileNetgrpPermissionArgs) ToSystemAccprofileNetgrpPermissionPtrOutput() SystemAccprofileNetgrpPermissionPtrOutput {
	return i.ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(context.Background())
}

func (i SystemAccprofileNetgrpPermissionArgs) ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileNetgrpPermissionOutput).ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx)
}

// SystemAccprofileNetgrpPermissionPtrInput is an input type that accepts SystemAccprofileNetgrpPermissionArgs, SystemAccprofileNetgrpPermissionPtr and SystemAccprofileNetgrpPermissionPtrOutput values.
// You can construct a concrete instance of `SystemAccprofileNetgrpPermissionPtrInput` via:
//
//	        SystemAccprofileNetgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type SystemAccprofileNetgrpPermissionPtrInput interface {
	pulumi.Input

	ToSystemAccprofileNetgrpPermissionPtrOutput() SystemAccprofileNetgrpPermissionPtrOutput
	ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(context.Context) SystemAccprofileNetgrpPermissionPtrOutput
}

type systemAccprofileNetgrpPermissionPtrType SystemAccprofileNetgrpPermissionArgs

func SystemAccprofileNetgrpPermissionPtr(v *SystemAccprofileNetgrpPermissionArgs) SystemAccprofileNetgrpPermissionPtrInput {
	return (*systemAccprofileNetgrpPermissionPtrType)(v)
}

func (*systemAccprofileNetgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileNetgrpPermission)(nil)).Elem()
}

func (i *systemAccprofileNetgrpPermissionPtrType) ToSystemAccprofileNetgrpPermissionPtrOutput() SystemAccprofileNetgrpPermissionPtrOutput {
	return i.ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *systemAccprofileNetgrpPermissionPtrType) ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileNetgrpPermissionPtrOutput)
}

type SystemAccprofileNetgrpPermissionOutput struct{ *pulumi.OutputState }

func (SystemAccprofileNetgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileNetgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileNetgrpPermissionOutput) ToSystemAccprofileNetgrpPermissionOutput() SystemAccprofileNetgrpPermissionOutput {
	return o
}

func (o SystemAccprofileNetgrpPermissionOutput) ToSystemAccprofileNetgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionOutput {
	return o
}

func (o SystemAccprofileNetgrpPermissionOutput) ToSystemAccprofileNetgrpPermissionPtrOutput() SystemAccprofileNetgrpPermissionPtrOutput {
	return o.ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(context.Background())
}

func (o SystemAccprofileNetgrpPermissionOutput) ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAccprofileNetgrpPermission) *SystemAccprofileNetgrpPermission {
		return &v
	}).(SystemAccprofileNetgrpPermissionPtrOutput)
}

// Network Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileNetgrpPermissionOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileNetgrpPermission) *string { return v.Cfg }).(pulumi.StringPtrOutput)
}

// Packet Capture Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileNetgrpPermissionOutput) PacketCapture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileNetgrpPermission) *string { return v.PacketCapture }).(pulumi.StringPtrOutput)
}

// Router Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileNetgrpPermissionOutput) RouteCfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileNetgrpPermission) *string { return v.RouteCfg }).(pulumi.StringPtrOutput)
}

type SystemAccprofileNetgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (SystemAccprofileNetgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileNetgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileNetgrpPermissionPtrOutput) ToSystemAccprofileNetgrpPermissionPtrOutput() SystemAccprofileNetgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileNetgrpPermissionPtrOutput) ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileNetgrpPermissionPtrOutput) Elem() SystemAccprofileNetgrpPermissionOutput {
	return o.ApplyT(func(v *SystemAccprofileNetgrpPermission) SystemAccprofileNetgrpPermission {
		if v != nil {
			return *v
		}
		var ret SystemAccprofileNetgrpPermission
		return ret
	}).(SystemAccprofileNetgrpPermissionOutput)
}

// Network Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileNetgrpPermissionPtrOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileNetgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Cfg
	}).(pulumi.StringPtrOutput)
}

// Packet Capture Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileNetgrpPermissionPtrOutput) PacketCapture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileNetgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.PacketCapture
	}).(pulumi.StringPtrOutput)
}

// Router Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileNetgrpPermissionPtrOutput) RouteCfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileNetgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.RouteCfg
	}).(pulumi.StringPtrOutput)
}

type SystemAccprofileSysgrpPermission struct {
	// Administrator Users. Valid values: `none`, `read`, `read-write`.
	Admin *string `pulumi:"admin"`
	// System Configuration. Valid values: `none`, `read`, `read-write`.
	Cfg *string `pulumi:"cfg"`
	// Maintenance. Valid values: `none`, `read`, `read-write`.
	Mnt *string `pulumi:"mnt"`
	// FortiGuard Updates. Valid values: `none`, `read`, `read-write`.
	Upd *string `pulumi:"upd"`
}

// SystemAccprofileSysgrpPermissionInput is an input type that accepts SystemAccprofileSysgrpPermissionArgs and SystemAccprofileSysgrpPermissionOutput values.
// You can construct a concrete instance of `SystemAccprofileSysgrpPermissionInput` via:
//
//	SystemAccprofileSysgrpPermissionArgs{...}
type SystemAccprofileSysgrpPermissionInput interface {
	pulumi.Input

	ToSystemAccprofileSysgrpPermissionOutput() SystemAccprofileSysgrpPermissionOutput
	ToSystemAccprofileSysgrpPermissionOutputWithContext(context.Context) SystemAccprofileSysgrpPermissionOutput
}

type SystemAccprofileSysgrpPermissionArgs struct {
	// Administrator Users. Valid values: `none`, `read`, `read-write`.
	Admin pulumi.StringPtrInput `pulumi:"admin"`
	// System Configuration. Valid values: `none`, `read`, `read-write`.
	Cfg pulumi.StringPtrInput `pulumi:"cfg"`
	// Maintenance. Valid values: `none`, `read`, `read-write`.
	Mnt pulumi.StringPtrInput `pulumi:"mnt"`
	// FortiGuard Updates. Valid values: `none`, `read`, `read-write`.
	Upd pulumi.StringPtrInput `pulumi:"upd"`
}

func (SystemAccprofileSysgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileSysgrpPermission)(nil)).Elem()
}

func (i SystemAccprofileSysgrpPermissionArgs) ToSystemAccprofileSysgrpPermissionOutput() SystemAccprofileSysgrpPermissionOutput {
	return i.ToSystemAccprofileSysgrpPermissionOutputWithContext(context.Background())
}

func (i SystemAccprofileSysgrpPermissionArgs) ToSystemAccprofileSysgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileSysgrpPermissionOutput)
}

func (i SystemAccprofileSysgrpPermissionArgs) ToSystemAccprofileSysgrpPermissionPtrOutput() SystemAccprofileSysgrpPermissionPtrOutput {
	return i.ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(context.Background())
}

func (i SystemAccprofileSysgrpPermissionArgs) ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileSysgrpPermissionOutput).ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx)
}

// SystemAccprofileSysgrpPermissionPtrInput is an input type that accepts SystemAccprofileSysgrpPermissionArgs, SystemAccprofileSysgrpPermissionPtr and SystemAccprofileSysgrpPermissionPtrOutput values.
// You can construct a concrete instance of `SystemAccprofileSysgrpPermissionPtrInput` via:
//
//	        SystemAccprofileSysgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type SystemAccprofileSysgrpPermissionPtrInput interface {
	pulumi.Input

	ToSystemAccprofileSysgrpPermissionPtrOutput() SystemAccprofileSysgrpPermissionPtrOutput
	ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(context.Context) SystemAccprofileSysgrpPermissionPtrOutput
}

type systemAccprofileSysgrpPermissionPtrType SystemAccprofileSysgrpPermissionArgs

func SystemAccprofileSysgrpPermissionPtr(v *SystemAccprofileSysgrpPermissionArgs) SystemAccprofileSysgrpPermissionPtrInput {
	return (*systemAccprofileSysgrpPermissionPtrType)(v)
}

func (*systemAccprofileSysgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileSysgrpPermission)(nil)).Elem()
}

func (i *systemAccprofileSysgrpPermissionPtrType) ToSystemAccprofileSysgrpPermissionPtrOutput() SystemAccprofileSysgrpPermissionPtrOutput {
	return i.ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *systemAccprofileSysgrpPermissionPtrType) ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileSysgrpPermissionPtrOutput)
}

type SystemAccprofileSysgrpPermissionOutput struct{ *pulumi.OutputState }

func (SystemAccprofileSysgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileSysgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileSysgrpPermissionOutput) ToSystemAccprofileSysgrpPermissionOutput() SystemAccprofileSysgrpPermissionOutput {
	return o
}

func (o SystemAccprofileSysgrpPermissionOutput) ToSystemAccprofileSysgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionOutput {
	return o
}

func (o SystemAccprofileSysgrpPermissionOutput) ToSystemAccprofileSysgrpPermissionPtrOutput() SystemAccprofileSysgrpPermissionPtrOutput {
	return o.ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(context.Background())
}

func (o SystemAccprofileSysgrpPermissionOutput) ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAccprofileSysgrpPermission) *SystemAccprofileSysgrpPermission {
		return &v
	}).(SystemAccprofileSysgrpPermissionPtrOutput)
}

// Administrator Users. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileSysgrpPermissionOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileSysgrpPermission) *string { return v.Admin }).(pulumi.StringPtrOutput)
}

// System Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileSysgrpPermissionOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileSysgrpPermission) *string { return v.Cfg }).(pulumi.StringPtrOutput)
}

// Maintenance. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileSysgrpPermissionOutput) Mnt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileSysgrpPermission) *string { return v.Mnt }).(pulumi.StringPtrOutput)
}

// FortiGuard Updates. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileSysgrpPermissionOutput) Upd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileSysgrpPermission) *string { return v.Upd }).(pulumi.StringPtrOutput)
}

type SystemAccprofileSysgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (SystemAccprofileSysgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileSysgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) ToSystemAccprofileSysgrpPermissionPtrOutput() SystemAccprofileSysgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) Elem() SystemAccprofileSysgrpPermissionOutput {
	return o.ApplyT(func(v *SystemAccprofileSysgrpPermission) SystemAccprofileSysgrpPermission {
		if v != nil {
			return *v
		}
		var ret SystemAccprofileSysgrpPermission
		return ret
	}).(SystemAccprofileSysgrpPermissionOutput)
}

// Administrator Users. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileSysgrpPermissionPtrOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Admin
	}).(pulumi.StringPtrOutput)
}

// System Configuration. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileSysgrpPermissionPtrOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Cfg
	}).(pulumi.StringPtrOutput)
}

// Maintenance. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileSysgrpPermissionPtrOutput) Mnt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Mnt
	}).(pulumi.StringPtrOutput)
}

// FortiGuard Updates. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileSysgrpPermissionPtrOutput) Upd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Upd
	}).(pulumi.StringPtrOutput)
}

type SystemAccprofileUtmgrpPermission struct {
	// Antivirus profiles and settings. Valid values: `none`, `read`, `read-write`.
	Antivirus *string `pulumi:"antivirus"`
	// Application Control profiles and settings. Valid values: `none`, `read`, `read-write`.
	ApplicationControl *string `pulumi:"applicationControl"`
	// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
	DataLossPrevention *string `pulumi:"dataLossPrevention"`
	// DNS Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Dnsfilter *string `pulumi:"dnsfilter"`
	// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
	Emailfilter *string `pulumi:"emailfilter"`
	// FortiClient Profiles. Valid values: `none`, `read`, `read-write`.
	EndpointControl *string `pulumi:"endpointControl"`
	// File-filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	FileFilter *string `pulumi:"fileFilter"`
	// ICAP profiles and settings. Valid values: `none`, `read`, `read-write`.
	Icap *string `pulumi:"icap"`
	// IPS profiles and settings. Valid values: `none`, `read`, `read-write`.
	Ips *string `pulumi:"ips"`
	// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
	Spamfilter *string `pulumi:"spamfilter"`
	// Video filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Videofilter *string `pulumi:"videofilter"`
	// VoIP profiles and settings. Valid values: `none`, `read`, `read-write`.
	Voip *string `pulumi:"voip"`
	// Web Application Firewall profiles and settings. Valid values: `none`, `read`, `read-write`.
	Waf *string `pulumi:"waf"`
	// Web Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Webfilter *string `pulumi:"webfilter"`
}

// SystemAccprofileUtmgrpPermissionInput is an input type that accepts SystemAccprofileUtmgrpPermissionArgs and SystemAccprofileUtmgrpPermissionOutput values.
// You can construct a concrete instance of `SystemAccprofileUtmgrpPermissionInput` via:
//
//	SystemAccprofileUtmgrpPermissionArgs{...}
type SystemAccprofileUtmgrpPermissionInput interface {
	pulumi.Input

	ToSystemAccprofileUtmgrpPermissionOutput() SystemAccprofileUtmgrpPermissionOutput
	ToSystemAccprofileUtmgrpPermissionOutputWithContext(context.Context) SystemAccprofileUtmgrpPermissionOutput
}

type SystemAccprofileUtmgrpPermissionArgs struct {
	// Antivirus profiles and settings. Valid values: `none`, `read`, `read-write`.
	Antivirus pulumi.StringPtrInput `pulumi:"antivirus"`
	// Application Control profiles and settings. Valid values: `none`, `read`, `read-write`.
	ApplicationControl pulumi.StringPtrInput `pulumi:"applicationControl"`
	// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
	DataLossPrevention pulumi.StringPtrInput `pulumi:"dataLossPrevention"`
	// DNS Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Dnsfilter pulumi.StringPtrInput `pulumi:"dnsfilter"`
	// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
	Emailfilter pulumi.StringPtrInput `pulumi:"emailfilter"`
	// FortiClient Profiles. Valid values: `none`, `read`, `read-write`.
	EndpointControl pulumi.StringPtrInput `pulumi:"endpointControl"`
	// File-filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	FileFilter pulumi.StringPtrInput `pulumi:"fileFilter"`
	// ICAP profiles and settings. Valid values: `none`, `read`, `read-write`.
	Icap pulumi.StringPtrInput `pulumi:"icap"`
	// IPS profiles and settings. Valid values: `none`, `read`, `read-write`.
	Ips pulumi.StringPtrInput `pulumi:"ips"`
	// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
	Spamfilter pulumi.StringPtrInput `pulumi:"spamfilter"`
	// Video filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Videofilter pulumi.StringPtrInput `pulumi:"videofilter"`
	// VoIP profiles and settings. Valid values: `none`, `read`, `read-write`.
	Voip pulumi.StringPtrInput `pulumi:"voip"`
	// Web Application Firewall profiles and settings. Valid values: `none`, `read`, `read-write`.
	Waf pulumi.StringPtrInput `pulumi:"waf"`
	// Web Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
	Webfilter pulumi.StringPtrInput `pulumi:"webfilter"`
}

func (SystemAccprofileUtmgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileUtmgrpPermission)(nil)).Elem()
}

func (i SystemAccprofileUtmgrpPermissionArgs) ToSystemAccprofileUtmgrpPermissionOutput() SystemAccprofileUtmgrpPermissionOutput {
	return i.ToSystemAccprofileUtmgrpPermissionOutputWithContext(context.Background())
}

func (i SystemAccprofileUtmgrpPermissionArgs) ToSystemAccprofileUtmgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileUtmgrpPermissionOutput)
}

func (i SystemAccprofileUtmgrpPermissionArgs) ToSystemAccprofileUtmgrpPermissionPtrOutput() SystemAccprofileUtmgrpPermissionPtrOutput {
	return i.ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(context.Background())
}

func (i SystemAccprofileUtmgrpPermissionArgs) ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileUtmgrpPermissionOutput).ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx)
}

// SystemAccprofileUtmgrpPermissionPtrInput is an input type that accepts SystemAccprofileUtmgrpPermissionArgs, SystemAccprofileUtmgrpPermissionPtr and SystemAccprofileUtmgrpPermissionPtrOutput values.
// You can construct a concrete instance of `SystemAccprofileUtmgrpPermissionPtrInput` via:
//
//	        SystemAccprofileUtmgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type SystemAccprofileUtmgrpPermissionPtrInput interface {
	pulumi.Input

	ToSystemAccprofileUtmgrpPermissionPtrOutput() SystemAccprofileUtmgrpPermissionPtrOutput
	ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(context.Context) SystemAccprofileUtmgrpPermissionPtrOutput
}

type systemAccprofileUtmgrpPermissionPtrType SystemAccprofileUtmgrpPermissionArgs

func SystemAccprofileUtmgrpPermissionPtr(v *SystemAccprofileUtmgrpPermissionArgs) SystemAccprofileUtmgrpPermissionPtrInput {
	return (*systemAccprofileUtmgrpPermissionPtrType)(v)
}

func (*systemAccprofileUtmgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileUtmgrpPermission)(nil)).Elem()
}

func (i *systemAccprofileUtmgrpPermissionPtrType) ToSystemAccprofileUtmgrpPermissionPtrOutput() SystemAccprofileUtmgrpPermissionPtrOutput {
	return i.ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *systemAccprofileUtmgrpPermissionPtrType) ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileUtmgrpPermissionPtrOutput)
}

type SystemAccprofileUtmgrpPermissionOutput struct{ *pulumi.OutputState }

func (SystemAccprofileUtmgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileUtmgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileUtmgrpPermissionOutput) ToSystemAccprofileUtmgrpPermissionOutput() SystemAccprofileUtmgrpPermissionOutput {
	return o
}

func (o SystemAccprofileUtmgrpPermissionOutput) ToSystemAccprofileUtmgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionOutput {
	return o
}

func (o SystemAccprofileUtmgrpPermissionOutput) ToSystemAccprofileUtmgrpPermissionPtrOutput() SystemAccprofileUtmgrpPermissionPtrOutput {
	return o.ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(context.Background())
}

func (o SystemAccprofileUtmgrpPermissionOutput) ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAccprofileUtmgrpPermission) *SystemAccprofileUtmgrpPermission {
		return &v
	}).(SystemAccprofileUtmgrpPermissionPtrOutput)
}

// Antivirus profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) Antivirus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Antivirus }).(pulumi.StringPtrOutput)
}

// Application Control profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) ApplicationControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.ApplicationControl }).(pulumi.StringPtrOutput)
}

// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) DataLossPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.DataLossPrevention }).(pulumi.StringPtrOutput)
}

// DNS Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) Dnsfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Dnsfilter }).(pulumi.StringPtrOutput)
}

// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) Emailfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Emailfilter }).(pulumi.StringPtrOutput)
}

// FortiClient Profiles. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) EndpointControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.EndpointControl }).(pulumi.StringPtrOutput)
}

// File-filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) FileFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.FileFilter }).(pulumi.StringPtrOutput)
}

// ICAP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) Icap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Icap }).(pulumi.StringPtrOutput)
}

// IPS profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) Ips() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Ips }).(pulumi.StringPtrOutput)
}

// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) Spamfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Spamfilter }).(pulumi.StringPtrOutput)
}

// Video filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) Videofilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Videofilter }).(pulumi.StringPtrOutput)
}

// VoIP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) Voip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Voip }).(pulumi.StringPtrOutput)
}

// Web Application Firewall profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Waf }).(pulumi.StringPtrOutput)
}

// Web Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionOutput) Webfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Webfilter }).(pulumi.StringPtrOutput)
}

type SystemAccprofileUtmgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (SystemAccprofileUtmgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileUtmgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) ToSystemAccprofileUtmgrpPermissionPtrOutput() SystemAccprofileUtmgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Elem() SystemAccprofileUtmgrpPermissionOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) SystemAccprofileUtmgrpPermission {
		if v != nil {
			return *v
		}
		var ret SystemAccprofileUtmgrpPermission
		return ret
	}).(SystemAccprofileUtmgrpPermissionOutput)
}

// Antivirus profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) Antivirus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Antivirus
	}).(pulumi.StringPtrOutput)
}

// Application Control profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) ApplicationControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationControl
	}).(pulumi.StringPtrOutput)
}

// DLP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) DataLossPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.DataLossPrevention
	}).(pulumi.StringPtrOutput)
}

// DNS Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) Dnsfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Dnsfilter
	}).(pulumi.StringPtrOutput)
}

// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) Emailfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Emailfilter
	}).(pulumi.StringPtrOutput)
}

// FortiClient Profiles. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) EndpointControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.EndpointControl
	}).(pulumi.StringPtrOutput)
}

// File-filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) FileFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.FileFilter
	}).(pulumi.StringPtrOutput)
}

// ICAP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) Icap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Icap
	}).(pulumi.StringPtrOutput)
}

// IPS profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) Ips() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringPtrOutput)
}

// AntiSpam filter and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) Spamfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Spamfilter
	}).(pulumi.StringPtrOutput)
}

// Video filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) Videofilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Videofilter
	}).(pulumi.StringPtrOutput)
}

// VoIP profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) Voip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Voip
	}).(pulumi.StringPtrOutput)
}

// Web Application Firewall profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Waf
	}).(pulumi.StringPtrOutput)
}

// Web Filter profiles and settings. Valid values: `none`, `read`, `read-write`.
func (o SystemAccprofileUtmgrpPermissionPtrOutput) Webfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Webfilter
	}).(pulumi.StringPtrOutput)
}

type SystemAcmeAccount struct {
	// Account ca_url.
	CaUrl *string `pulumi:"caUrl"`
	// Account email.
	Email *string `pulumi:"email"`
	// Account id.
	Id *string `pulumi:"id"`
	// Account Private Key.
	Privatekey *string `pulumi:"privatekey"`
	// Account status.
	Status *string `pulumi:"status"`
	// Account url.
	Url *string `pulumi:"url"`
}

// SystemAcmeAccountInput is an input type that accepts SystemAcmeAccountArgs and SystemAcmeAccountOutput values.
// You can construct a concrete instance of `SystemAcmeAccountInput` via:
//
//	SystemAcmeAccountArgs{...}
type SystemAcmeAccountInput interface {
	pulumi.Input

	ToSystemAcmeAccountOutput() SystemAcmeAccountOutput
	ToSystemAcmeAccountOutputWithContext(context.Context) SystemAcmeAccountOutput
}

type SystemAcmeAccountArgs struct {
	// Account ca_url.
	CaUrl pulumi.StringPtrInput `pulumi:"caUrl"`
	// Account email.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Account id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Account Private Key.
	Privatekey pulumi.StringPtrInput `pulumi:"privatekey"`
	// Account status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Account url.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SystemAcmeAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAcmeAccount)(nil)).Elem()
}

func (i SystemAcmeAccountArgs) ToSystemAcmeAccountOutput() SystemAcmeAccountOutput {
	return i.ToSystemAcmeAccountOutputWithContext(context.Background())
}

func (i SystemAcmeAccountArgs) ToSystemAcmeAccountOutputWithContext(ctx context.Context) SystemAcmeAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAcmeAccountOutput)
}

// SystemAcmeAccountArrayInput is an input type that accepts SystemAcmeAccountArray and SystemAcmeAccountArrayOutput values.
// You can construct a concrete instance of `SystemAcmeAccountArrayInput` via:
//
//	SystemAcmeAccountArray{ SystemAcmeAccountArgs{...} }
type SystemAcmeAccountArrayInput interface {
	pulumi.Input

	ToSystemAcmeAccountArrayOutput() SystemAcmeAccountArrayOutput
	ToSystemAcmeAccountArrayOutputWithContext(context.Context) SystemAcmeAccountArrayOutput
}

type SystemAcmeAccountArray []SystemAcmeAccountInput

func (SystemAcmeAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAcmeAccount)(nil)).Elem()
}

func (i SystemAcmeAccountArray) ToSystemAcmeAccountArrayOutput() SystemAcmeAccountArrayOutput {
	return i.ToSystemAcmeAccountArrayOutputWithContext(context.Background())
}

func (i SystemAcmeAccountArray) ToSystemAcmeAccountArrayOutputWithContext(ctx context.Context) SystemAcmeAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAcmeAccountArrayOutput)
}

type SystemAcmeAccountOutput struct{ *pulumi.OutputState }

func (SystemAcmeAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAcmeAccount)(nil)).Elem()
}

func (o SystemAcmeAccountOutput) ToSystemAcmeAccountOutput() SystemAcmeAccountOutput {
	return o
}

func (o SystemAcmeAccountOutput) ToSystemAcmeAccountOutputWithContext(ctx context.Context) SystemAcmeAccountOutput {
	return o
}

// Account ca_url.
func (o SystemAcmeAccountOutput) CaUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.CaUrl }).(pulumi.StringPtrOutput)
}

// Account email.
func (o SystemAcmeAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Account id.
func (o SystemAcmeAccountOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Account Private Key.
func (o SystemAcmeAccountOutput) Privatekey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.Privatekey }).(pulumi.StringPtrOutput)
}

// Account status.
func (o SystemAcmeAccountOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Account url.
func (o SystemAcmeAccountOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SystemAcmeAccountArrayOutput struct{ *pulumi.OutputState }

func (SystemAcmeAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAcmeAccount)(nil)).Elem()
}

func (o SystemAcmeAccountArrayOutput) ToSystemAcmeAccountArrayOutput() SystemAcmeAccountArrayOutput {
	return o
}

func (o SystemAcmeAccountArrayOutput) ToSystemAcmeAccountArrayOutputWithContext(ctx context.Context) SystemAcmeAccountArrayOutput {
	return o
}

func (o SystemAcmeAccountArrayOutput) Index(i pulumi.IntInput) SystemAcmeAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAcmeAccount {
		return vs[0].([]SystemAcmeAccount)[vs[1].(int)]
	}).(SystemAcmeAccountOutput)
}

type SystemAcmeInterface struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemAcmeInterfaceInput is an input type that accepts SystemAcmeInterfaceArgs and SystemAcmeInterfaceOutput values.
// You can construct a concrete instance of `SystemAcmeInterfaceInput` via:
//
//	SystemAcmeInterfaceArgs{...}
type SystemAcmeInterfaceInput interface {
	pulumi.Input

	ToSystemAcmeInterfaceOutput() SystemAcmeInterfaceOutput
	ToSystemAcmeInterfaceOutputWithContext(context.Context) SystemAcmeInterfaceOutput
}

type SystemAcmeInterfaceArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemAcmeInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAcmeInterface)(nil)).Elem()
}

func (i SystemAcmeInterfaceArgs) ToSystemAcmeInterfaceOutput() SystemAcmeInterfaceOutput {
	return i.ToSystemAcmeInterfaceOutputWithContext(context.Background())
}

func (i SystemAcmeInterfaceArgs) ToSystemAcmeInterfaceOutputWithContext(ctx context.Context) SystemAcmeInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAcmeInterfaceOutput)
}

// SystemAcmeInterfaceArrayInput is an input type that accepts SystemAcmeInterfaceArray and SystemAcmeInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemAcmeInterfaceArrayInput` via:
//
//	SystemAcmeInterfaceArray{ SystemAcmeInterfaceArgs{...} }
type SystemAcmeInterfaceArrayInput interface {
	pulumi.Input

	ToSystemAcmeInterfaceArrayOutput() SystemAcmeInterfaceArrayOutput
	ToSystemAcmeInterfaceArrayOutputWithContext(context.Context) SystemAcmeInterfaceArrayOutput
}

type SystemAcmeInterfaceArray []SystemAcmeInterfaceInput

func (SystemAcmeInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAcmeInterface)(nil)).Elem()
}

func (i SystemAcmeInterfaceArray) ToSystemAcmeInterfaceArrayOutput() SystemAcmeInterfaceArrayOutput {
	return i.ToSystemAcmeInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemAcmeInterfaceArray) ToSystemAcmeInterfaceArrayOutputWithContext(ctx context.Context) SystemAcmeInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAcmeInterfaceArrayOutput)
}

type SystemAcmeInterfaceOutput struct{ *pulumi.OutputState }

func (SystemAcmeInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAcmeInterface)(nil)).Elem()
}

func (o SystemAcmeInterfaceOutput) ToSystemAcmeInterfaceOutput() SystemAcmeInterfaceOutput {
	return o
}

func (o SystemAcmeInterfaceOutput) ToSystemAcmeInterfaceOutputWithContext(ctx context.Context) SystemAcmeInterfaceOutput {
	return o
}

// Interface name.
func (o SystemAcmeInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemAcmeInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemAcmeInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAcmeInterface)(nil)).Elem()
}

func (o SystemAcmeInterfaceArrayOutput) ToSystemAcmeInterfaceArrayOutput() SystemAcmeInterfaceArrayOutput {
	return o
}

func (o SystemAcmeInterfaceArrayOutput) ToSystemAcmeInterfaceArrayOutputWithContext(ctx context.Context) SystemAcmeInterfaceArrayOutput {
	return o
}

func (o SystemAcmeInterfaceArrayOutput) Index(i pulumi.IntInput) SystemAcmeInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAcmeInterface {
		return vs[0].([]SystemAcmeInterface)[vs[1].(int)]
	}).(SystemAcmeInterfaceOutput)
}

type SystemAdminGuestUsergroup struct {
	// Select guest user groups.
	Name *string `pulumi:"name"`
}

// SystemAdminGuestUsergroupInput is an input type that accepts SystemAdminGuestUsergroupArgs and SystemAdminGuestUsergroupOutput values.
// You can construct a concrete instance of `SystemAdminGuestUsergroupInput` via:
//
//	SystemAdminGuestUsergroupArgs{...}
type SystemAdminGuestUsergroupInput interface {
	pulumi.Input

	ToSystemAdminGuestUsergroupOutput() SystemAdminGuestUsergroupOutput
	ToSystemAdminGuestUsergroupOutputWithContext(context.Context) SystemAdminGuestUsergroupOutput
}

type SystemAdminGuestUsergroupArgs struct {
	// Select guest user groups.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAdminGuestUsergroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuestUsergroup)(nil)).Elem()
}

func (i SystemAdminGuestUsergroupArgs) ToSystemAdminGuestUsergroupOutput() SystemAdminGuestUsergroupOutput {
	return i.ToSystemAdminGuestUsergroupOutputWithContext(context.Background())
}

func (i SystemAdminGuestUsergroupArgs) ToSystemAdminGuestUsergroupOutputWithContext(ctx context.Context) SystemAdminGuestUsergroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuestUsergroupOutput)
}

// SystemAdminGuestUsergroupArrayInput is an input type that accepts SystemAdminGuestUsergroupArray and SystemAdminGuestUsergroupArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuestUsergroupArrayInput` via:
//
//	SystemAdminGuestUsergroupArray{ SystemAdminGuestUsergroupArgs{...} }
type SystemAdminGuestUsergroupArrayInput interface {
	pulumi.Input

	ToSystemAdminGuestUsergroupArrayOutput() SystemAdminGuestUsergroupArrayOutput
	ToSystemAdminGuestUsergroupArrayOutputWithContext(context.Context) SystemAdminGuestUsergroupArrayOutput
}

type SystemAdminGuestUsergroupArray []SystemAdminGuestUsergroupInput

func (SystemAdminGuestUsergroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuestUsergroup)(nil)).Elem()
}

func (i SystemAdminGuestUsergroupArray) ToSystemAdminGuestUsergroupArrayOutput() SystemAdminGuestUsergroupArrayOutput {
	return i.ToSystemAdminGuestUsergroupArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuestUsergroupArray) ToSystemAdminGuestUsergroupArrayOutputWithContext(ctx context.Context) SystemAdminGuestUsergroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuestUsergroupArrayOutput)
}

type SystemAdminGuestUsergroupOutput struct{ *pulumi.OutputState }

func (SystemAdminGuestUsergroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuestUsergroup)(nil)).Elem()
}

func (o SystemAdminGuestUsergroupOutput) ToSystemAdminGuestUsergroupOutput() SystemAdminGuestUsergroupOutput {
	return o
}

func (o SystemAdminGuestUsergroupOutput) ToSystemAdminGuestUsergroupOutputWithContext(ctx context.Context) SystemAdminGuestUsergroupOutput {
	return o
}

// Select guest user groups.
func (o SystemAdminGuestUsergroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuestUsergroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAdminGuestUsergroupArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuestUsergroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuestUsergroup)(nil)).Elem()
}

func (o SystemAdminGuestUsergroupArrayOutput) ToSystemAdminGuestUsergroupArrayOutput() SystemAdminGuestUsergroupArrayOutput {
	return o
}

func (o SystemAdminGuestUsergroupArrayOutput) ToSystemAdminGuestUsergroupArrayOutputWithContext(ctx context.Context) SystemAdminGuestUsergroupArrayOutput {
	return o
}

func (o SystemAdminGuestUsergroupArrayOutput) Index(i pulumi.IntInput) SystemAdminGuestUsergroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuestUsergroup {
		return vs[0].([]SystemAdminGuestUsergroup)[vs[1].(int)]
	}).(SystemAdminGuestUsergroupOutput)
}

type SystemAdminGuiDashboard struct {
	// Number of columns.
	Columns *int `pulumi:"columns"`
	// Dashboard ID.
	Id *int `pulumi:"id"`
	// Layout type. Valid values: `responsive`, `fixed`.
	LayoutType *string `pulumi:"layoutType"`
	// Dashboard name.
	Name *string `pulumi:"name"`
	// Dashboard scope. Valid values: `global`, `vdom`.
	Scope *string `pulumi:"scope"`
	// Dashboard widgets. The structure of `widget` block is documented below.
	Widgets []SystemAdminGuiDashboardWidget `pulumi:"widgets"`
}

// SystemAdminGuiDashboardInput is an input type that accepts SystemAdminGuiDashboardArgs and SystemAdminGuiDashboardOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardInput` via:
//
//	SystemAdminGuiDashboardArgs{...}
type SystemAdminGuiDashboardInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardOutput() SystemAdminGuiDashboardOutput
	ToSystemAdminGuiDashboardOutputWithContext(context.Context) SystemAdminGuiDashboardOutput
}

type SystemAdminGuiDashboardArgs struct {
	// Number of columns.
	Columns pulumi.IntPtrInput `pulumi:"columns"`
	// Dashboard ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Layout type. Valid values: `responsive`, `fixed`.
	LayoutType pulumi.StringPtrInput `pulumi:"layoutType"`
	// Dashboard name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Dashboard scope. Valid values: `global`, `vdom`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Dashboard widgets. The structure of `widget` block is documented below.
	Widgets SystemAdminGuiDashboardWidgetArrayInput `pulumi:"widgets"`
}

func (SystemAdminGuiDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboard)(nil)).Elem()
}

func (i SystemAdminGuiDashboardArgs) ToSystemAdminGuiDashboardOutput() SystemAdminGuiDashboardOutput {
	return i.ToSystemAdminGuiDashboardOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardArgs) ToSystemAdminGuiDashboardOutputWithContext(ctx context.Context) SystemAdminGuiDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardOutput)
}

// SystemAdminGuiDashboardArrayInput is an input type that accepts SystemAdminGuiDashboardArray and SystemAdminGuiDashboardArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardArrayInput` via:
//
//	SystemAdminGuiDashboardArray{ SystemAdminGuiDashboardArgs{...} }
type SystemAdminGuiDashboardArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardArrayOutput() SystemAdminGuiDashboardArrayOutput
	ToSystemAdminGuiDashboardArrayOutputWithContext(context.Context) SystemAdminGuiDashboardArrayOutput
}

type SystemAdminGuiDashboardArray []SystemAdminGuiDashboardInput

func (SystemAdminGuiDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboard)(nil)).Elem()
}

func (i SystemAdminGuiDashboardArray) ToSystemAdminGuiDashboardArrayOutput() SystemAdminGuiDashboardArrayOutput {
	return i.ToSystemAdminGuiDashboardArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardArray) ToSystemAdminGuiDashboardArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardArrayOutput)
}

type SystemAdminGuiDashboardOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboard)(nil)).Elem()
}

func (o SystemAdminGuiDashboardOutput) ToSystemAdminGuiDashboardOutput() SystemAdminGuiDashboardOutput {
	return o
}

func (o SystemAdminGuiDashboardOutput) ToSystemAdminGuiDashboardOutputWithContext(ctx context.Context) SystemAdminGuiDashboardOutput {
	return o
}

// Number of columns.
func (o SystemAdminGuiDashboardOutput) Columns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) *int { return v.Columns }).(pulumi.IntPtrOutput)
}

// Dashboard ID.
func (o SystemAdminGuiDashboardOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Layout type. Valid values: `responsive`, `fixed`.
func (o SystemAdminGuiDashboardOutput) LayoutType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) *string { return v.LayoutType }).(pulumi.StringPtrOutput)
}

// Dashboard name.
func (o SystemAdminGuiDashboardOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Dashboard scope. Valid values: `global`, `vdom`.
func (o SystemAdminGuiDashboardOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Dashboard widgets. The structure of `widget` block is documented below.
func (o SystemAdminGuiDashboardOutput) Widgets() SystemAdminGuiDashboardWidgetArrayOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) []SystemAdminGuiDashboardWidget { return v.Widgets }).(SystemAdminGuiDashboardWidgetArrayOutput)
}

type SystemAdminGuiDashboardArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboard)(nil)).Elem()
}

func (o SystemAdminGuiDashboardArrayOutput) ToSystemAdminGuiDashboardArrayOutput() SystemAdminGuiDashboardArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardArrayOutput) ToSystemAdminGuiDashboardArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiDashboard {
		return vs[0].([]SystemAdminGuiDashboard)[vs[1].(int)]
	}).(SystemAdminGuiDashboardOutput)
}

type SystemAdminGuiDashboardWidget struct {
	// Fabric device to monitor.
	FabricDevice *string `pulumi:"fabricDevice"`
	// FortiView filters. The structure of `filters` block is documented below.
	Filters []SystemAdminGuiDashboardWidgetFilter `pulumi:"filters"`
	// Height.
	Height *int `pulumi:"height"`
	// Widget ID.
	Id *int `pulumi:"id"`
	// Security Audit Rating industry. Valid values: `default`, `custom`.
	Industry *string `pulumi:"industry"`
	// Interface to monitor.
	Interface *string `pulumi:"interface"`
	// Security Audit Rating region. Valid values: `default`, `custom`.
	Region *string `pulumi:"region"`
	// Field to aggregate the data by. Valid values: `source`, `destination`, `country`, `intfpair`, `srcintf`, `dstintf`, `policy`, `wificlient`, `shaper`, `endpoint-vulnerability`, `endpoint-device`, `application`, `cloud-app`, `cloud-user`, `web-domain`, `web-category`, `web-search-phrase`, `threat`, `system`, `unauth`, `admin`, `vpn`.
	ReportBy *string `pulumi:"reportBy"`
	// Field to sort the data by.
	SortBy *string `pulumi:"sortBy"`
	// Timeframe period of reported data. Valid values: `realtime`, `5min`, `hour`, `day`, `week`.
	Timeframe *string `pulumi:"timeframe"`
	// Widget title.
	Title *string `pulumi:"title"`
	// Widget type. Valid values: `sysinfo`, `licinfo`, `vminfo`, `forticloud`, `cpu-usage`, `memory-usage`, `disk-usage`, `log-rate`, `sessions`, `session-rate`, `tr-history`, `analytics`, `usb-modem`, `admins`, `security-fabric`, `security-fabric-ranking`, `ha-status`, `vulnerability-summary`, `host-scan-summary`, `fortiview`, `botnet-activity`, `fortimail`.
	Type *string `pulumi:"type"`
	// Visualization to use. Valid values: `table`, `bubble`, `country`, `chord`.
	Visualization *string `pulumi:"visualization"`
	// Width.
	Width *int `pulumi:"width"`
	// X position.
	XPos *int `pulumi:"xPos"`
	// Y position.
	YPos *int `pulumi:"yPos"`
}

// SystemAdminGuiDashboardWidgetInput is an input type that accepts SystemAdminGuiDashboardWidgetArgs and SystemAdminGuiDashboardWidgetOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardWidgetInput` via:
//
//	SystemAdminGuiDashboardWidgetArgs{...}
type SystemAdminGuiDashboardWidgetInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardWidgetOutput() SystemAdminGuiDashboardWidgetOutput
	ToSystemAdminGuiDashboardWidgetOutputWithContext(context.Context) SystemAdminGuiDashboardWidgetOutput
}

type SystemAdminGuiDashboardWidgetArgs struct {
	// Fabric device to monitor.
	FabricDevice pulumi.StringPtrInput `pulumi:"fabricDevice"`
	// FortiView filters. The structure of `filters` block is documented below.
	Filters SystemAdminGuiDashboardWidgetFilterArrayInput `pulumi:"filters"`
	// Height.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Widget ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Security Audit Rating industry. Valid values: `default`, `custom`.
	Industry pulumi.StringPtrInput `pulumi:"industry"`
	// Interface to monitor.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Security Audit Rating region. Valid values: `default`, `custom`.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Field to aggregate the data by. Valid values: `source`, `destination`, `country`, `intfpair`, `srcintf`, `dstintf`, `policy`, `wificlient`, `shaper`, `endpoint-vulnerability`, `endpoint-device`, `application`, `cloud-app`, `cloud-user`, `web-domain`, `web-category`, `web-search-phrase`, `threat`, `system`, `unauth`, `admin`, `vpn`.
	ReportBy pulumi.StringPtrInput `pulumi:"reportBy"`
	// Field to sort the data by.
	SortBy pulumi.StringPtrInput `pulumi:"sortBy"`
	// Timeframe period of reported data. Valid values: `realtime`, `5min`, `hour`, `day`, `week`.
	Timeframe pulumi.StringPtrInput `pulumi:"timeframe"`
	// Widget title.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// Widget type. Valid values: `sysinfo`, `licinfo`, `vminfo`, `forticloud`, `cpu-usage`, `memory-usage`, `disk-usage`, `log-rate`, `sessions`, `session-rate`, `tr-history`, `analytics`, `usb-modem`, `admins`, `security-fabric`, `security-fabric-ranking`, `ha-status`, `vulnerability-summary`, `host-scan-summary`, `fortiview`, `botnet-activity`, `fortimail`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Visualization to use. Valid values: `table`, `bubble`, `country`, `chord`.
	Visualization pulumi.StringPtrInput `pulumi:"visualization"`
	// Width.
	Width pulumi.IntPtrInput `pulumi:"width"`
	// X position.
	XPos pulumi.IntPtrInput `pulumi:"xPos"`
	// Y position.
	YPos pulumi.IntPtrInput `pulumi:"yPos"`
}

func (SystemAdminGuiDashboardWidgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboardWidget)(nil)).Elem()
}

func (i SystemAdminGuiDashboardWidgetArgs) ToSystemAdminGuiDashboardWidgetOutput() SystemAdminGuiDashboardWidgetOutput {
	return i.ToSystemAdminGuiDashboardWidgetOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardWidgetArgs) ToSystemAdminGuiDashboardWidgetOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardWidgetOutput)
}

// SystemAdminGuiDashboardWidgetArrayInput is an input type that accepts SystemAdminGuiDashboardWidgetArray and SystemAdminGuiDashboardWidgetArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardWidgetArrayInput` via:
//
//	SystemAdminGuiDashboardWidgetArray{ SystemAdminGuiDashboardWidgetArgs{...} }
type SystemAdminGuiDashboardWidgetArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardWidgetArrayOutput() SystemAdminGuiDashboardWidgetArrayOutput
	ToSystemAdminGuiDashboardWidgetArrayOutputWithContext(context.Context) SystemAdminGuiDashboardWidgetArrayOutput
}

type SystemAdminGuiDashboardWidgetArray []SystemAdminGuiDashboardWidgetInput

func (SystemAdminGuiDashboardWidgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboardWidget)(nil)).Elem()
}

func (i SystemAdminGuiDashboardWidgetArray) ToSystemAdminGuiDashboardWidgetArrayOutput() SystemAdminGuiDashboardWidgetArrayOutput {
	return i.ToSystemAdminGuiDashboardWidgetArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardWidgetArray) ToSystemAdminGuiDashboardWidgetArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardWidgetArrayOutput)
}

type SystemAdminGuiDashboardWidgetOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardWidgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboardWidget)(nil)).Elem()
}

func (o SystemAdminGuiDashboardWidgetOutput) ToSystemAdminGuiDashboardWidgetOutput() SystemAdminGuiDashboardWidgetOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetOutput) ToSystemAdminGuiDashboardWidgetOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetOutput {
	return o
}

// Fabric device to monitor.
func (o SystemAdminGuiDashboardWidgetOutput) FabricDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.FabricDevice }).(pulumi.StringPtrOutput)
}

// FortiView filters. The structure of `filters` block is documented below.
func (o SystemAdminGuiDashboardWidgetOutput) Filters() SystemAdminGuiDashboardWidgetFilterArrayOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) []SystemAdminGuiDashboardWidgetFilter { return v.Filters }).(SystemAdminGuiDashboardWidgetFilterArrayOutput)
}

// Height.
func (o SystemAdminGuiDashboardWidgetOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Widget ID.
func (o SystemAdminGuiDashboardWidgetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Security Audit Rating industry. Valid values: `default`, `custom`.
func (o SystemAdminGuiDashboardWidgetOutput) Industry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Industry }).(pulumi.StringPtrOutput)
}

// Interface to monitor.
func (o SystemAdminGuiDashboardWidgetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Security Audit Rating region. Valid values: `default`, `custom`.
func (o SystemAdminGuiDashboardWidgetOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Field to aggregate the data by. Valid values: `source`, `destination`, `country`, `intfpair`, `srcintf`, `dstintf`, `policy`, `wificlient`, `shaper`, `endpoint-vulnerability`, `endpoint-device`, `application`, `cloud-app`, `cloud-user`, `web-domain`, `web-category`, `web-search-phrase`, `threat`, `system`, `unauth`, `admin`, `vpn`.
func (o SystemAdminGuiDashboardWidgetOutput) ReportBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.ReportBy }).(pulumi.StringPtrOutput)
}

// Field to sort the data by.
func (o SystemAdminGuiDashboardWidgetOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

// Timeframe period of reported data. Valid values: `realtime`, `5min`, `hour`, `day`, `week`.
func (o SystemAdminGuiDashboardWidgetOutput) Timeframe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Timeframe }).(pulumi.StringPtrOutput)
}

// Widget title.
func (o SystemAdminGuiDashboardWidgetOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Widget type. Valid values: `sysinfo`, `licinfo`, `vminfo`, `forticloud`, `cpu-usage`, `memory-usage`, `disk-usage`, `log-rate`, `sessions`, `session-rate`, `tr-history`, `analytics`, `usb-modem`, `admins`, `security-fabric`, `security-fabric-ranking`, `ha-status`, `vulnerability-summary`, `host-scan-summary`, `fortiview`, `botnet-activity`, `fortimail`.
func (o SystemAdminGuiDashboardWidgetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Visualization to use. Valid values: `table`, `bubble`, `country`, `chord`.
func (o SystemAdminGuiDashboardWidgetOutput) Visualization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Visualization }).(pulumi.StringPtrOutput)
}

// Width.
func (o SystemAdminGuiDashboardWidgetOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *int { return v.Width }).(pulumi.IntPtrOutput)
}

// X position.
func (o SystemAdminGuiDashboardWidgetOutput) XPos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *int { return v.XPos }).(pulumi.IntPtrOutput)
}

// Y position.
func (o SystemAdminGuiDashboardWidgetOutput) YPos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *int { return v.YPos }).(pulumi.IntPtrOutput)
}

type SystemAdminGuiDashboardWidgetArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardWidgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboardWidget)(nil)).Elem()
}

func (o SystemAdminGuiDashboardWidgetArrayOutput) ToSystemAdminGuiDashboardWidgetArrayOutput() SystemAdminGuiDashboardWidgetArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetArrayOutput) ToSystemAdminGuiDashboardWidgetArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiDashboardWidgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiDashboardWidget {
		return vs[0].([]SystemAdminGuiDashboardWidget)[vs[1].(int)]
	}).(SystemAdminGuiDashboardWidgetOutput)
}

type SystemAdminGuiDashboardWidgetFilter struct {
	// FortiView Filter ID.
	Id *int `pulumi:"id"`
	// Filter key.
	Key *string `pulumi:"key"`
	// Filter value.
	Value *string `pulumi:"value"`
}

// SystemAdminGuiDashboardWidgetFilterInput is an input type that accepts SystemAdminGuiDashboardWidgetFilterArgs and SystemAdminGuiDashboardWidgetFilterOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardWidgetFilterInput` via:
//
//	SystemAdminGuiDashboardWidgetFilterArgs{...}
type SystemAdminGuiDashboardWidgetFilterInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardWidgetFilterOutput() SystemAdminGuiDashboardWidgetFilterOutput
	ToSystemAdminGuiDashboardWidgetFilterOutputWithContext(context.Context) SystemAdminGuiDashboardWidgetFilterOutput
}

type SystemAdminGuiDashboardWidgetFilterArgs struct {
	// FortiView Filter ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Filter key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Filter value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SystemAdminGuiDashboardWidgetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (i SystemAdminGuiDashboardWidgetFilterArgs) ToSystemAdminGuiDashboardWidgetFilterOutput() SystemAdminGuiDashboardWidgetFilterOutput {
	return i.ToSystemAdminGuiDashboardWidgetFilterOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardWidgetFilterArgs) ToSystemAdminGuiDashboardWidgetFilterOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardWidgetFilterOutput)
}

// SystemAdminGuiDashboardWidgetFilterArrayInput is an input type that accepts SystemAdminGuiDashboardWidgetFilterArray and SystemAdminGuiDashboardWidgetFilterArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardWidgetFilterArrayInput` via:
//
//	SystemAdminGuiDashboardWidgetFilterArray{ SystemAdminGuiDashboardWidgetFilterArgs{...} }
type SystemAdminGuiDashboardWidgetFilterArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardWidgetFilterArrayOutput() SystemAdminGuiDashboardWidgetFilterArrayOutput
	ToSystemAdminGuiDashboardWidgetFilterArrayOutputWithContext(context.Context) SystemAdminGuiDashboardWidgetFilterArrayOutput
}

type SystemAdminGuiDashboardWidgetFilterArray []SystemAdminGuiDashboardWidgetFilterInput

func (SystemAdminGuiDashboardWidgetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (i SystemAdminGuiDashboardWidgetFilterArray) ToSystemAdminGuiDashboardWidgetFilterArrayOutput() SystemAdminGuiDashboardWidgetFilterArrayOutput {
	return i.ToSystemAdminGuiDashboardWidgetFilterArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardWidgetFilterArray) ToSystemAdminGuiDashboardWidgetFilterArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardWidgetFilterArrayOutput)
}

type SystemAdminGuiDashboardWidgetFilterOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardWidgetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (o SystemAdminGuiDashboardWidgetFilterOutput) ToSystemAdminGuiDashboardWidgetFilterOutput() SystemAdminGuiDashboardWidgetFilterOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetFilterOutput) ToSystemAdminGuiDashboardWidgetFilterOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetFilterOutput {
	return o
}

// FortiView Filter ID.
func (o SystemAdminGuiDashboardWidgetFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidgetFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Filter key.
func (o SystemAdminGuiDashboardWidgetFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidgetFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Filter value.
func (o SystemAdminGuiDashboardWidgetFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidgetFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SystemAdminGuiDashboardWidgetFilterArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardWidgetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (o SystemAdminGuiDashboardWidgetFilterArrayOutput) ToSystemAdminGuiDashboardWidgetFilterArrayOutput() SystemAdminGuiDashboardWidgetFilterArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetFilterArrayOutput) ToSystemAdminGuiDashboardWidgetFilterArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetFilterArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetFilterArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiDashboardWidgetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiDashboardWidgetFilter {
		return vs[0].([]SystemAdminGuiDashboardWidgetFilter)[vs[1].(int)]
	}).(SystemAdminGuiDashboardWidgetFilterOutput)
}

type SystemAdminGuiGlobalMenuFavorite struct {
	// Select menu ID.
	Id *string `pulumi:"id"`
}

// SystemAdminGuiGlobalMenuFavoriteInput is an input type that accepts SystemAdminGuiGlobalMenuFavoriteArgs and SystemAdminGuiGlobalMenuFavoriteOutput values.
// You can construct a concrete instance of `SystemAdminGuiGlobalMenuFavoriteInput` via:
//
//	SystemAdminGuiGlobalMenuFavoriteArgs{...}
type SystemAdminGuiGlobalMenuFavoriteInput interface {
	pulumi.Input

	ToSystemAdminGuiGlobalMenuFavoriteOutput() SystemAdminGuiGlobalMenuFavoriteOutput
	ToSystemAdminGuiGlobalMenuFavoriteOutputWithContext(context.Context) SystemAdminGuiGlobalMenuFavoriteOutput
}

type SystemAdminGuiGlobalMenuFavoriteArgs struct {
	// Select menu ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SystemAdminGuiGlobalMenuFavoriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (i SystemAdminGuiGlobalMenuFavoriteArgs) ToSystemAdminGuiGlobalMenuFavoriteOutput() SystemAdminGuiGlobalMenuFavoriteOutput {
	return i.ToSystemAdminGuiGlobalMenuFavoriteOutputWithContext(context.Background())
}

func (i SystemAdminGuiGlobalMenuFavoriteArgs) ToSystemAdminGuiGlobalMenuFavoriteOutputWithContext(ctx context.Context) SystemAdminGuiGlobalMenuFavoriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiGlobalMenuFavoriteOutput)
}

// SystemAdminGuiGlobalMenuFavoriteArrayInput is an input type that accepts SystemAdminGuiGlobalMenuFavoriteArray and SystemAdminGuiGlobalMenuFavoriteArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiGlobalMenuFavoriteArrayInput` via:
//
//	SystemAdminGuiGlobalMenuFavoriteArray{ SystemAdminGuiGlobalMenuFavoriteArgs{...} }
type SystemAdminGuiGlobalMenuFavoriteArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiGlobalMenuFavoriteArrayOutput() SystemAdminGuiGlobalMenuFavoriteArrayOutput
	ToSystemAdminGuiGlobalMenuFavoriteArrayOutputWithContext(context.Context) SystemAdminGuiGlobalMenuFavoriteArrayOutput
}

type SystemAdminGuiGlobalMenuFavoriteArray []SystemAdminGuiGlobalMenuFavoriteInput

func (SystemAdminGuiGlobalMenuFavoriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (i SystemAdminGuiGlobalMenuFavoriteArray) ToSystemAdminGuiGlobalMenuFavoriteArrayOutput() SystemAdminGuiGlobalMenuFavoriteArrayOutput {
	return i.ToSystemAdminGuiGlobalMenuFavoriteArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiGlobalMenuFavoriteArray) ToSystemAdminGuiGlobalMenuFavoriteArrayOutputWithContext(ctx context.Context) SystemAdminGuiGlobalMenuFavoriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiGlobalMenuFavoriteArrayOutput)
}

type SystemAdminGuiGlobalMenuFavoriteOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiGlobalMenuFavoriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (o SystemAdminGuiGlobalMenuFavoriteOutput) ToSystemAdminGuiGlobalMenuFavoriteOutput() SystemAdminGuiGlobalMenuFavoriteOutput {
	return o
}

func (o SystemAdminGuiGlobalMenuFavoriteOutput) ToSystemAdminGuiGlobalMenuFavoriteOutputWithContext(ctx context.Context) SystemAdminGuiGlobalMenuFavoriteOutput {
	return o
}

// Select menu ID.
func (o SystemAdminGuiGlobalMenuFavoriteOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiGlobalMenuFavorite) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SystemAdminGuiGlobalMenuFavoriteArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiGlobalMenuFavoriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (o SystemAdminGuiGlobalMenuFavoriteArrayOutput) ToSystemAdminGuiGlobalMenuFavoriteArrayOutput() SystemAdminGuiGlobalMenuFavoriteArrayOutput {
	return o
}

func (o SystemAdminGuiGlobalMenuFavoriteArrayOutput) ToSystemAdminGuiGlobalMenuFavoriteArrayOutputWithContext(ctx context.Context) SystemAdminGuiGlobalMenuFavoriteArrayOutput {
	return o
}

func (o SystemAdminGuiGlobalMenuFavoriteArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiGlobalMenuFavoriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiGlobalMenuFavorite {
		return vs[0].([]SystemAdminGuiGlobalMenuFavorite)[vs[1].(int)]
	}).(SystemAdminGuiGlobalMenuFavoriteOutput)
}

type SystemAdminGuiNewFeatureAcknowledge struct {
	// Select menu ID.
	Id *string `pulumi:"id"`
}

// SystemAdminGuiNewFeatureAcknowledgeInput is an input type that accepts SystemAdminGuiNewFeatureAcknowledgeArgs and SystemAdminGuiNewFeatureAcknowledgeOutput values.
// You can construct a concrete instance of `SystemAdminGuiNewFeatureAcknowledgeInput` via:
//
//	SystemAdminGuiNewFeatureAcknowledgeArgs{...}
type SystemAdminGuiNewFeatureAcknowledgeInput interface {
	pulumi.Input

	ToSystemAdminGuiNewFeatureAcknowledgeOutput() SystemAdminGuiNewFeatureAcknowledgeOutput
	ToSystemAdminGuiNewFeatureAcknowledgeOutputWithContext(context.Context) SystemAdminGuiNewFeatureAcknowledgeOutput
}

type SystemAdminGuiNewFeatureAcknowledgeArgs struct {
	// Select menu ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SystemAdminGuiNewFeatureAcknowledgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (i SystemAdminGuiNewFeatureAcknowledgeArgs) ToSystemAdminGuiNewFeatureAcknowledgeOutput() SystemAdminGuiNewFeatureAcknowledgeOutput {
	return i.ToSystemAdminGuiNewFeatureAcknowledgeOutputWithContext(context.Background())
}

func (i SystemAdminGuiNewFeatureAcknowledgeArgs) ToSystemAdminGuiNewFeatureAcknowledgeOutputWithContext(ctx context.Context) SystemAdminGuiNewFeatureAcknowledgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiNewFeatureAcknowledgeOutput)
}

// SystemAdminGuiNewFeatureAcknowledgeArrayInput is an input type that accepts SystemAdminGuiNewFeatureAcknowledgeArray and SystemAdminGuiNewFeatureAcknowledgeArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiNewFeatureAcknowledgeArrayInput` via:
//
//	SystemAdminGuiNewFeatureAcknowledgeArray{ SystemAdminGuiNewFeatureAcknowledgeArgs{...} }
type SystemAdminGuiNewFeatureAcknowledgeArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiNewFeatureAcknowledgeArrayOutput() SystemAdminGuiNewFeatureAcknowledgeArrayOutput
	ToSystemAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(context.Context) SystemAdminGuiNewFeatureAcknowledgeArrayOutput
}

type SystemAdminGuiNewFeatureAcknowledgeArray []SystemAdminGuiNewFeatureAcknowledgeInput

func (SystemAdminGuiNewFeatureAcknowledgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (i SystemAdminGuiNewFeatureAcknowledgeArray) ToSystemAdminGuiNewFeatureAcknowledgeArrayOutput() SystemAdminGuiNewFeatureAcknowledgeArrayOutput {
	return i.ToSystemAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiNewFeatureAcknowledgeArray) ToSystemAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(ctx context.Context) SystemAdminGuiNewFeatureAcknowledgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiNewFeatureAcknowledgeArrayOutput)
}

type SystemAdminGuiNewFeatureAcknowledgeOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiNewFeatureAcknowledgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (o SystemAdminGuiNewFeatureAcknowledgeOutput) ToSystemAdminGuiNewFeatureAcknowledgeOutput() SystemAdminGuiNewFeatureAcknowledgeOutput {
	return o
}

func (o SystemAdminGuiNewFeatureAcknowledgeOutput) ToSystemAdminGuiNewFeatureAcknowledgeOutputWithContext(ctx context.Context) SystemAdminGuiNewFeatureAcknowledgeOutput {
	return o
}

// Select menu ID.
func (o SystemAdminGuiNewFeatureAcknowledgeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiNewFeatureAcknowledge) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SystemAdminGuiNewFeatureAcknowledgeArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiNewFeatureAcknowledgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (o SystemAdminGuiNewFeatureAcknowledgeArrayOutput) ToSystemAdminGuiNewFeatureAcknowledgeArrayOutput() SystemAdminGuiNewFeatureAcknowledgeArrayOutput {
	return o
}

func (o SystemAdminGuiNewFeatureAcknowledgeArrayOutput) ToSystemAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(ctx context.Context) SystemAdminGuiNewFeatureAcknowledgeArrayOutput {
	return o
}

func (o SystemAdminGuiNewFeatureAcknowledgeArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiNewFeatureAcknowledgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiNewFeatureAcknowledge {
		return vs[0].([]SystemAdminGuiNewFeatureAcknowledge)[vs[1].(int)]
	}).(SystemAdminGuiNewFeatureAcknowledgeOutput)
}

type SystemAdminGuiVdomMenuFavorite struct {
	// Select menu ID.
	Id *string `pulumi:"id"`
}

// SystemAdminGuiVdomMenuFavoriteInput is an input type that accepts SystemAdminGuiVdomMenuFavoriteArgs and SystemAdminGuiVdomMenuFavoriteOutput values.
// You can construct a concrete instance of `SystemAdminGuiVdomMenuFavoriteInput` via:
//
//	SystemAdminGuiVdomMenuFavoriteArgs{...}
type SystemAdminGuiVdomMenuFavoriteInput interface {
	pulumi.Input

	ToSystemAdminGuiVdomMenuFavoriteOutput() SystemAdminGuiVdomMenuFavoriteOutput
	ToSystemAdminGuiVdomMenuFavoriteOutputWithContext(context.Context) SystemAdminGuiVdomMenuFavoriteOutput
}

type SystemAdminGuiVdomMenuFavoriteArgs struct {
	// Select menu ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SystemAdminGuiVdomMenuFavoriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (i SystemAdminGuiVdomMenuFavoriteArgs) ToSystemAdminGuiVdomMenuFavoriteOutput() SystemAdminGuiVdomMenuFavoriteOutput {
	return i.ToSystemAdminGuiVdomMenuFavoriteOutputWithContext(context.Background())
}

func (i SystemAdminGuiVdomMenuFavoriteArgs) ToSystemAdminGuiVdomMenuFavoriteOutputWithContext(ctx context.Context) SystemAdminGuiVdomMenuFavoriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiVdomMenuFavoriteOutput)
}

// SystemAdminGuiVdomMenuFavoriteArrayInput is an input type that accepts SystemAdminGuiVdomMenuFavoriteArray and SystemAdminGuiVdomMenuFavoriteArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiVdomMenuFavoriteArrayInput` via:
//
//	SystemAdminGuiVdomMenuFavoriteArray{ SystemAdminGuiVdomMenuFavoriteArgs{...} }
type SystemAdminGuiVdomMenuFavoriteArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiVdomMenuFavoriteArrayOutput() SystemAdminGuiVdomMenuFavoriteArrayOutput
	ToSystemAdminGuiVdomMenuFavoriteArrayOutputWithContext(context.Context) SystemAdminGuiVdomMenuFavoriteArrayOutput
}

type SystemAdminGuiVdomMenuFavoriteArray []SystemAdminGuiVdomMenuFavoriteInput

func (SystemAdminGuiVdomMenuFavoriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (i SystemAdminGuiVdomMenuFavoriteArray) ToSystemAdminGuiVdomMenuFavoriteArrayOutput() SystemAdminGuiVdomMenuFavoriteArrayOutput {
	return i.ToSystemAdminGuiVdomMenuFavoriteArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiVdomMenuFavoriteArray) ToSystemAdminGuiVdomMenuFavoriteArrayOutputWithContext(ctx context.Context) SystemAdminGuiVdomMenuFavoriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiVdomMenuFavoriteArrayOutput)
}

type SystemAdminGuiVdomMenuFavoriteOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiVdomMenuFavoriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (o SystemAdminGuiVdomMenuFavoriteOutput) ToSystemAdminGuiVdomMenuFavoriteOutput() SystemAdminGuiVdomMenuFavoriteOutput {
	return o
}

func (o SystemAdminGuiVdomMenuFavoriteOutput) ToSystemAdminGuiVdomMenuFavoriteOutputWithContext(ctx context.Context) SystemAdminGuiVdomMenuFavoriteOutput {
	return o
}

// Select menu ID.
func (o SystemAdminGuiVdomMenuFavoriteOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiVdomMenuFavorite) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SystemAdminGuiVdomMenuFavoriteArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiVdomMenuFavoriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (o SystemAdminGuiVdomMenuFavoriteArrayOutput) ToSystemAdminGuiVdomMenuFavoriteArrayOutput() SystemAdminGuiVdomMenuFavoriteArrayOutput {
	return o
}

func (o SystemAdminGuiVdomMenuFavoriteArrayOutput) ToSystemAdminGuiVdomMenuFavoriteArrayOutputWithContext(ctx context.Context) SystemAdminGuiVdomMenuFavoriteArrayOutput {
	return o
}

func (o SystemAdminGuiVdomMenuFavoriteArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiVdomMenuFavoriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiVdomMenuFavorite {
		return vs[0].([]SystemAdminGuiVdomMenuFavorite)[vs[1].(int)]
	}).(SystemAdminGuiVdomMenuFavoriteOutput)
}

type SystemAdminLoginTime struct {
	// Last failed login time.
	LastFailedLogin *string `pulumi:"lastFailedLogin"`
	// Last successful login time.
	LastLogin *string `pulumi:"lastLogin"`
	// User name.
	UsrName *string `pulumi:"usrName"`
}

// SystemAdminLoginTimeInput is an input type that accepts SystemAdminLoginTimeArgs and SystemAdminLoginTimeOutput values.
// You can construct a concrete instance of `SystemAdminLoginTimeInput` via:
//
//	SystemAdminLoginTimeArgs{...}
type SystemAdminLoginTimeInput interface {
	pulumi.Input

	ToSystemAdminLoginTimeOutput() SystemAdminLoginTimeOutput
	ToSystemAdminLoginTimeOutputWithContext(context.Context) SystemAdminLoginTimeOutput
}

type SystemAdminLoginTimeArgs struct {
	// Last failed login time.
	LastFailedLogin pulumi.StringPtrInput `pulumi:"lastFailedLogin"`
	// Last successful login time.
	LastLogin pulumi.StringPtrInput `pulumi:"lastLogin"`
	// User name.
	UsrName pulumi.StringPtrInput `pulumi:"usrName"`
}

func (SystemAdminLoginTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminLoginTime)(nil)).Elem()
}

func (i SystemAdminLoginTimeArgs) ToSystemAdminLoginTimeOutput() SystemAdminLoginTimeOutput {
	return i.ToSystemAdminLoginTimeOutputWithContext(context.Background())
}

func (i SystemAdminLoginTimeArgs) ToSystemAdminLoginTimeOutputWithContext(ctx context.Context) SystemAdminLoginTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminLoginTimeOutput)
}

// SystemAdminLoginTimeArrayInput is an input type that accepts SystemAdminLoginTimeArray and SystemAdminLoginTimeArrayOutput values.
// You can construct a concrete instance of `SystemAdminLoginTimeArrayInput` via:
//
//	SystemAdminLoginTimeArray{ SystemAdminLoginTimeArgs{...} }
type SystemAdminLoginTimeArrayInput interface {
	pulumi.Input

	ToSystemAdminLoginTimeArrayOutput() SystemAdminLoginTimeArrayOutput
	ToSystemAdminLoginTimeArrayOutputWithContext(context.Context) SystemAdminLoginTimeArrayOutput
}

type SystemAdminLoginTimeArray []SystemAdminLoginTimeInput

func (SystemAdminLoginTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminLoginTime)(nil)).Elem()
}

func (i SystemAdminLoginTimeArray) ToSystemAdminLoginTimeArrayOutput() SystemAdminLoginTimeArrayOutput {
	return i.ToSystemAdminLoginTimeArrayOutputWithContext(context.Background())
}

func (i SystemAdminLoginTimeArray) ToSystemAdminLoginTimeArrayOutputWithContext(ctx context.Context) SystemAdminLoginTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminLoginTimeArrayOutput)
}

type SystemAdminLoginTimeOutput struct{ *pulumi.OutputState }

func (SystemAdminLoginTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminLoginTime)(nil)).Elem()
}

func (o SystemAdminLoginTimeOutput) ToSystemAdminLoginTimeOutput() SystemAdminLoginTimeOutput {
	return o
}

func (o SystemAdminLoginTimeOutput) ToSystemAdminLoginTimeOutputWithContext(ctx context.Context) SystemAdminLoginTimeOutput {
	return o
}

// Last failed login time.
func (o SystemAdminLoginTimeOutput) LastFailedLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminLoginTime) *string { return v.LastFailedLogin }).(pulumi.StringPtrOutput)
}

// Last successful login time.
func (o SystemAdminLoginTimeOutput) LastLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminLoginTime) *string { return v.LastLogin }).(pulumi.StringPtrOutput)
}

// User name.
func (o SystemAdminLoginTimeOutput) UsrName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminLoginTime) *string { return v.UsrName }).(pulumi.StringPtrOutput)
}

type SystemAdminLoginTimeArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminLoginTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminLoginTime)(nil)).Elem()
}

func (o SystemAdminLoginTimeArrayOutput) ToSystemAdminLoginTimeArrayOutput() SystemAdminLoginTimeArrayOutput {
	return o
}

func (o SystemAdminLoginTimeArrayOutput) ToSystemAdminLoginTimeArrayOutputWithContext(ctx context.Context) SystemAdminLoginTimeArrayOutput {
	return o
}

func (o SystemAdminLoginTimeArrayOutput) Index(i pulumi.IntInput) SystemAdminLoginTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminLoginTime {
		return vs[0].([]SystemAdminLoginTime)[vs[1].(int)]
	}).(SystemAdminLoginTimeOutput)
}

type SystemAdminVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// SystemAdminVdomInput is an input type that accepts SystemAdminVdomArgs and SystemAdminVdomOutput values.
// You can construct a concrete instance of `SystemAdminVdomInput` via:
//
//	SystemAdminVdomArgs{...}
type SystemAdminVdomInput interface {
	pulumi.Input

	ToSystemAdminVdomOutput() SystemAdminVdomOutput
	ToSystemAdminVdomOutputWithContext(context.Context) SystemAdminVdomOutput
}

type SystemAdminVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAdminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminVdom)(nil)).Elem()
}

func (i SystemAdminVdomArgs) ToSystemAdminVdomOutput() SystemAdminVdomOutput {
	return i.ToSystemAdminVdomOutputWithContext(context.Background())
}

func (i SystemAdminVdomArgs) ToSystemAdminVdomOutputWithContext(ctx context.Context) SystemAdminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminVdomOutput)
}

// SystemAdminVdomArrayInput is an input type that accepts SystemAdminVdomArray and SystemAdminVdomArrayOutput values.
// You can construct a concrete instance of `SystemAdminVdomArrayInput` via:
//
//	SystemAdminVdomArray{ SystemAdminVdomArgs{...} }
type SystemAdminVdomArrayInput interface {
	pulumi.Input

	ToSystemAdminVdomArrayOutput() SystemAdminVdomArrayOutput
	ToSystemAdminVdomArrayOutputWithContext(context.Context) SystemAdminVdomArrayOutput
}

type SystemAdminVdomArray []SystemAdminVdomInput

func (SystemAdminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminVdom)(nil)).Elem()
}

func (i SystemAdminVdomArray) ToSystemAdminVdomArrayOutput() SystemAdminVdomArrayOutput {
	return i.ToSystemAdminVdomArrayOutputWithContext(context.Background())
}

func (i SystemAdminVdomArray) ToSystemAdminVdomArrayOutputWithContext(ctx context.Context) SystemAdminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminVdomArrayOutput)
}

type SystemAdminVdomOutput struct{ *pulumi.OutputState }

func (SystemAdminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminVdom)(nil)).Elem()
}

func (o SystemAdminVdomOutput) ToSystemAdminVdomOutput() SystemAdminVdomOutput {
	return o
}

func (o SystemAdminVdomOutput) ToSystemAdminVdomOutputWithContext(ctx context.Context) SystemAdminVdomOutput {
	return o
}

// Virtual domain name.
func (o SystemAdminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAdminVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminVdom)(nil)).Elem()
}

func (o SystemAdminVdomArrayOutput) ToSystemAdminVdomArrayOutput() SystemAdminVdomArrayOutput {
	return o
}

func (o SystemAdminVdomArrayOutput) ToSystemAdminVdomArrayOutputWithContext(ctx context.Context) SystemAdminVdomArrayOutput {
	return o
}

func (o SystemAdminVdomArrayOutput) Index(i pulumi.IntInput) SystemAdminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminVdom {
		return vs[0].([]SystemAdminVdom)[vs[1].(int)]
	}).(SystemAdminVdomOutput)
}

type SystemAlarmGroup struct {
	// Admin authentication failure threshold.
	AdminAuthFailureThreshold *int `pulumi:"adminAuthFailureThreshold"`
	// Admin authentication lockout threshold.
	AdminAuthLockoutThreshold *int `pulumi:"adminAuthLockoutThreshold"`
	// Decryption failure threshold.
	DecryptionFailureThreshold *int `pulumi:"decryptionFailureThreshold"`
	// Encryption failure threshold.
	EncryptionFailureThreshold *int `pulumi:"encryptionFailureThreshold"`
	// Firewall policy ID.
	FwPolicyId *int `pulumi:"fwPolicyId"`
	// Firewall policy ID threshold.
	FwPolicyIdThreshold *int `pulumi:"fwPolicyIdThreshold"`
	// Firewall policy violations. The structure of `fwPolicyViolations` block is documented below.
	FwPolicyViolations []SystemAlarmGroupFwPolicyViolation `pulumi:"fwPolicyViolations"`
	// Group ID.
	Id *int `pulumi:"id"`
	// Log full warning threshold.
	LogFullWarningThreshold *int `pulumi:"logFullWarningThreshold"`
	// Time period in seconds (0 = from start up).
	Period *int `pulumi:"period"`
	// Replay attempt threshold.
	ReplayAttemptThreshold *int `pulumi:"replayAttemptThreshold"`
	// Self-test failure threshold.
	SelfTestFailureThreshold *int `pulumi:"selfTestFailureThreshold"`
	// User authentication failure threshold.
	UserAuthFailureThreshold *int `pulumi:"userAuthFailureThreshold"`
	// User authentication lockout threshold.
	UserAuthLockoutThreshold *int `pulumi:"userAuthLockoutThreshold"`
}

// SystemAlarmGroupInput is an input type that accepts SystemAlarmGroupArgs and SystemAlarmGroupOutput values.
// You can construct a concrete instance of `SystemAlarmGroupInput` via:
//
//	SystemAlarmGroupArgs{...}
type SystemAlarmGroupInput interface {
	pulumi.Input

	ToSystemAlarmGroupOutput() SystemAlarmGroupOutput
	ToSystemAlarmGroupOutputWithContext(context.Context) SystemAlarmGroupOutput
}

type SystemAlarmGroupArgs struct {
	// Admin authentication failure threshold.
	AdminAuthFailureThreshold pulumi.IntPtrInput `pulumi:"adminAuthFailureThreshold"`
	// Admin authentication lockout threshold.
	AdminAuthLockoutThreshold pulumi.IntPtrInput `pulumi:"adminAuthLockoutThreshold"`
	// Decryption failure threshold.
	DecryptionFailureThreshold pulumi.IntPtrInput `pulumi:"decryptionFailureThreshold"`
	// Encryption failure threshold.
	EncryptionFailureThreshold pulumi.IntPtrInput `pulumi:"encryptionFailureThreshold"`
	// Firewall policy ID.
	FwPolicyId pulumi.IntPtrInput `pulumi:"fwPolicyId"`
	// Firewall policy ID threshold.
	FwPolicyIdThreshold pulumi.IntPtrInput `pulumi:"fwPolicyIdThreshold"`
	// Firewall policy violations. The structure of `fwPolicyViolations` block is documented below.
	FwPolicyViolations SystemAlarmGroupFwPolicyViolationArrayInput `pulumi:"fwPolicyViolations"`
	// Group ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Log full warning threshold.
	LogFullWarningThreshold pulumi.IntPtrInput `pulumi:"logFullWarningThreshold"`
	// Time period in seconds (0 = from start up).
	Period pulumi.IntPtrInput `pulumi:"period"`
	// Replay attempt threshold.
	ReplayAttemptThreshold pulumi.IntPtrInput `pulumi:"replayAttemptThreshold"`
	// Self-test failure threshold.
	SelfTestFailureThreshold pulumi.IntPtrInput `pulumi:"selfTestFailureThreshold"`
	// User authentication failure threshold.
	UserAuthFailureThreshold pulumi.IntPtrInput `pulumi:"userAuthFailureThreshold"`
	// User authentication lockout threshold.
	UserAuthLockoutThreshold pulumi.IntPtrInput `pulumi:"userAuthLockoutThreshold"`
}

func (SystemAlarmGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAlarmGroup)(nil)).Elem()
}

func (i SystemAlarmGroupArgs) ToSystemAlarmGroupOutput() SystemAlarmGroupOutput {
	return i.ToSystemAlarmGroupOutputWithContext(context.Background())
}

func (i SystemAlarmGroupArgs) ToSystemAlarmGroupOutputWithContext(ctx context.Context) SystemAlarmGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAlarmGroupOutput)
}

// SystemAlarmGroupArrayInput is an input type that accepts SystemAlarmGroupArray and SystemAlarmGroupArrayOutput values.
// You can construct a concrete instance of `SystemAlarmGroupArrayInput` via:
//
//	SystemAlarmGroupArray{ SystemAlarmGroupArgs{...} }
type SystemAlarmGroupArrayInput interface {
	pulumi.Input

	ToSystemAlarmGroupArrayOutput() SystemAlarmGroupArrayOutput
	ToSystemAlarmGroupArrayOutputWithContext(context.Context) SystemAlarmGroupArrayOutput
}

type SystemAlarmGroupArray []SystemAlarmGroupInput

func (SystemAlarmGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAlarmGroup)(nil)).Elem()
}

func (i SystemAlarmGroupArray) ToSystemAlarmGroupArrayOutput() SystemAlarmGroupArrayOutput {
	return i.ToSystemAlarmGroupArrayOutputWithContext(context.Background())
}

func (i SystemAlarmGroupArray) ToSystemAlarmGroupArrayOutputWithContext(ctx context.Context) SystemAlarmGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAlarmGroupArrayOutput)
}

type SystemAlarmGroupOutput struct{ *pulumi.OutputState }

func (SystemAlarmGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAlarmGroup)(nil)).Elem()
}

func (o SystemAlarmGroupOutput) ToSystemAlarmGroupOutput() SystemAlarmGroupOutput {
	return o
}

func (o SystemAlarmGroupOutput) ToSystemAlarmGroupOutputWithContext(ctx context.Context) SystemAlarmGroupOutput {
	return o
}

// Admin authentication failure threshold.
func (o SystemAlarmGroupOutput) AdminAuthFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.AdminAuthFailureThreshold }).(pulumi.IntPtrOutput)
}

// Admin authentication lockout threshold.
func (o SystemAlarmGroupOutput) AdminAuthLockoutThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.AdminAuthLockoutThreshold }).(pulumi.IntPtrOutput)
}

// Decryption failure threshold.
func (o SystemAlarmGroupOutput) DecryptionFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.DecryptionFailureThreshold }).(pulumi.IntPtrOutput)
}

// Encryption failure threshold.
func (o SystemAlarmGroupOutput) EncryptionFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.EncryptionFailureThreshold }).(pulumi.IntPtrOutput)
}

// Firewall policy ID.
func (o SystemAlarmGroupOutput) FwPolicyId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.FwPolicyId }).(pulumi.IntPtrOutput)
}

// Firewall policy ID threshold.
func (o SystemAlarmGroupOutput) FwPolicyIdThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.FwPolicyIdThreshold }).(pulumi.IntPtrOutput)
}

// Firewall policy violations. The structure of `fwPolicyViolations` block is documented below.
func (o SystemAlarmGroupOutput) FwPolicyViolations() SystemAlarmGroupFwPolicyViolationArrayOutput {
	return o.ApplyT(func(v SystemAlarmGroup) []SystemAlarmGroupFwPolicyViolation { return v.FwPolicyViolations }).(SystemAlarmGroupFwPolicyViolationArrayOutput)
}

// Group ID.
func (o SystemAlarmGroupOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Log full warning threshold.
func (o SystemAlarmGroupOutput) LogFullWarningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.LogFullWarningThreshold }).(pulumi.IntPtrOutput)
}

// Time period in seconds (0 = from start up).
func (o SystemAlarmGroupOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// Replay attempt threshold.
func (o SystemAlarmGroupOutput) ReplayAttemptThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.ReplayAttemptThreshold }).(pulumi.IntPtrOutput)
}

// Self-test failure threshold.
func (o SystemAlarmGroupOutput) SelfTestFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.SelfTestFailureThreshold }).(pulumi.IntPtrOutput)
}

// User authentication failure threshold.
func (o SystemAlarmGroupOutput) UserAuthFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.UserAuthFailureThreshold }).(pulumi.IntPtrOutput)
}

// User authentication lockout threshold.
func (o SystemAlarmGroupOutput) UserAuthLockoutThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.UserAuthLockoutThreshold }).(pulumi.IntPtrOutput)
}

type SystemAlarmGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemAlarmGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAlarmGroup)(nil)).Elem()
}

func (o SystemAlarmGroupArrayOutput) ToSystemAlarmGroupArrayOutput() SystemAlarmGroupArrayOutput {
	return o
}

func (o SystemAlarmGroupArrayOutput) ToSystemAlarmGroupArrayOutputWithContext(ctx context.Context) SystemAlarmGroupArrayOutput {
	return o
}

func (o SystemAlarmGroupArrayOutput) Index(i pulumi.IntInput) SystemAlarmGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAlarmGroup {
		return vs[0].([]SystemAlarmGroup)[vs[1].(int)]
	}).(SystemAlarmGroupOutput)
}

type SystemAlarmGroupFwPolicyViolation struct {
	// Destination IP (0=all).
	DstIp *string `pulumi:"dstIp"`
	// Destination port (0=all).
	DstPort *int `pulumi:"dstPort"`
	// Firewall policy violations ID.
	Id *int `pulumi:"id"`
	// Source IP (0=all).
	SrcIp *string `pulumi:"srcIp"`
	// Source port (0=all).
	SrcPort *int `pulumi:"srcPort"`
	// Firewall policy violation threshold.
	Threshold *int `pulumi:"threshold"`
}

// SystemAlarmGroupFwPolicyViolationInput is an input type that accepts SystemAlarmGroupFwPolicyViolationArgs and SystemAlarmGroupFwPolicyViolationOutput values.
// You can construct a concrete instance of `SystemAlarmGroupFwPolicyViolationInput` via:
//
//	SystemAlarmGroupFwPolicyViolationArgs{...}
type SystemAlarmGroupFwPolicyViolationInput interface {
	pulumi.Input

	ToSystemAlarmGroupFwPolicyViolationOutput() SystemAlarmGroupFwPolicyViolationOutput
	ToSystemAlarmGroupFwPolicyViolationOutputWithContext(context.Context) SystemAlarmGroupFwPolicyViolationOutput
}

type SystemAlarmGroupFwPolicyViolationArgs struct {
	// Destination IP (0=all).
	DstIp pulumi.StringPtrInput `pulumi:"dstIp"`
	// Destination port (0=all).
	DstPort pulumi.IntPtrInput `pulumi:"dstPort"`
	// Firewall policy violations ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Source IP (0=all).
	SrcIp pulumi.StringPtrInput `pulumi:"srcIp"`
	// Source port (0=all).
	SrcPort pulumi.IntPtrInput `pulumi:"srcPort"`
	// Firewall policy violation threshold.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
}

func (SystemAlarmGroupFwPolicyViolationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (i SystemAlarmGroupFwPolicyViolationArgs) ToSystemAlarmGroupFwPolicyViolationOutput() SystemAlarmGroupFwPolicyViolationOutput {
	return i.ToSystemAlarmGroupFwPolicyViolationOutputWithContext(context.Background())
}

func (i SystemAlarmGroupFwPolicyViolationArgs) ToSystemAlarmGroupFwPolicyViolationOutputWithContext(ctx context.Context) SystemAlarmGroupFwPolicyViolationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAlarmGroupFwPolicyViolationOutput)
}

// SystemAlarmGroupFwPolicyViolationArrayInput is an input type that accepts SystemAlarmGroupFwPolicyViolationArray and SystemAlarmGroupFwPolicyViolationArrayOutput values.
// You can construct a concrete instance of `SystemAlarmGroupFwPolicyViolationArrayInput` via:
//
//	SystemAlarmGroupFwPolicyViolationArray{ SystemAlarmGroupFwPolicyViolationArgs{...} }
type SystemAlarmGroupFwPolicyViolationArrayInput interface {
	pulumi.Input

	ToSystemAlarmGroupFwPolicyViolationArrayOutput() SystemAlarmGroupFwPolicyViolationArrayOutput
	ToSystemAlarmGroupFwPolicyViolationArrayOutputWithContext(context.Context) SystemAlarmGroupFwPolicyViolationArrayOutput
}

type SystemAlarmGroupFwPolicyViolationArray []SystemAlarmGroupFwPolicyViolationInput

func (SystemAlarmGroupFwPolicyViolationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (i SystemAlarmGroupFwPolicyViolationArray) ToSystemAlarmGroupFwPolicyViolationArrayOutput() SystemAlarmGroupFwPolicyViolationArrayOutput {
	return i.ToSystemAlarmGroupFwPolicyViolationArrayOutputWithContext(context.Background())
}

func (i SystemAlarmGroupFwPolicyViolationArray) ToSystemAlarmGroupFwPolicyViolationArrayOutputWithContext(ctx context.Context) SystemAlarmGroupFwPolicyViolationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAlarmGroupFwPolicyViolationArrayOutput)
}

type SystemAlarmGroupFwPolicyViolationOutput struct{ *pulumi.OutputState }

func (SystemAlarmGroupFwPolicyViolationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (o SystemAlarmGroupFwPolicyViolationOutput) ToSystemAlarmGroupFwPolicyViolationOutput() SystemAlarmGroupFwPolicyViolationOutput {
	return o
}

func (o SystemAlarmGroupFwPolicyViolationOutput) ToSystemAlarmGroupFwPolicyViolationOutputWithContext(ctx context.Context) SystemAlarmGroupFwPolicyViolationOutput {
	return o
}

// Destination IP (0=all).
func (o SystemAlarmGroupFwPolicyViolationOutput) DstIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *string { return v.DstIp }).(pulumi.StringPtrOutput)
}

// Destination port (0=all).
func (o SystemAlarmGroupFwPolicyViolationOutput) DstPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *int { return v.DstPort }).(pulumi.IntPtrOutput)
}

// Firewall policy violations ID.
func (o SystemAlarmGroupFwPolicyViolationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Source IP (0=all).
func (o SystemAlarmGroupFwPolicyViolationOutput) SrcIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *string { return v.SrcIp }).(pulumi.StringPtrOutput)
}

// Source port (0=all).
func (o SystemAlarmGroupFwPolicyViolationOutput) SrcPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *int { return v.SrcPort }).(pulumi.IntPtrOutput)
}

// Firewall policy violation threshold.
func (o SystemAlarmGroupFwPolicyViolationOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

type SystemAlarmGroupFwPolicyViolationArrayOutput struct{ *pulumi.OutputState }

func (SystemAlarmGroupFwPolicyViolationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (o SystemAlarmGroupFwPolicyViolationArrayOutput) ToSystemAlarmGroupFwPolicyViolationArrayOutput() SystemAlarmGroupFwPolicyViolationArrayOutput {
	return o
}

func (o SystemAlarmGroupFwPolicyViolationArrayOutput) ToSystemAlarmGroupFwPolicyViolationArrayOutputWithContext(ctx context.Context) SystemAlarmGroupFwPolicyViolationArrayOutput {
	return o
}

func (o SystemAlarmGroupFwPolicyViolationArrayOutput) Index(i pulumi.IntInput) SystemAlarmGroupFwPolicyViolationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAlarmGroupFwPolicyViolation {
		return vs[0].([]SystemAlarmGroupFwPolicyViolation)[vs[1].(int)]
	}).(SystemAlarmGroupFwPolicyViolationOutput)
}

type SystemApiuserSettingTrusthost struct {
	Ipv4Trusthost string `pulumi:"ipv4Trusthost"`
	Type          string `pulumi:"type"`
}

// SystemApiuserSettingTrusthostInput is an input type that accepts SystemApiuserSettingTrusthostArgs and SystemApiuserSettingTrusthostOutput values.
// You can construct a concrete instance of `SystemApiuserSettingTrusthostInput` via:
//
//	SystemApiuserSettingTrusthostArgs{...}
type SystemApiuserSettingTrusthostInput interface {
	pulumi.Input

	ToSystemApiuserSettingTrusthostOutput() SystemApiuserSettingTrusthostOutput
	ToSystemApiuserSettingTrusthostOutputWithContext(context.Context) SystemApiuserSettingTrusthostOutput
}

type SystemApiuserSettingTrusthostArgs struct {
	Ipv4Trusthost pulumi.StringInput `pulumi:"ipv4Trusthost"`
	Type          pulumi.StringInput `pulumi:"type"`
}

func (SystemApiuserSettingTrusthostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemApiuserSettingTrusthost)(nil)).Elem()
}

func (i SystemApiuserSettingTrusthostArgs) ToSystemApiuserSettingTrusthostOutput() SystemApiuserSettingTrusthostOutput {
	return i.ToSystemApiuserSettingTrusthostOutputWithContext(context.Background())
}

func (i SystemApiuserSettingTrusthostArgs) ToSystemApiuserSettingTrusthostOutputWithContext(ctx context.Context) SystemApiuserSettingTrusthostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemApiuserSettingTrusthostOutput)
}

// SystemApiuserSettingTrusthostArrayInput is an input type that accepts SystemApiuserSettingTrusthostArray and SystemApiuserSettingTrusthostArrayOutput values.
// You can construct a concrete instance of `SystemApiuserSettingTrusthostArrayInput` via:
//
//	SystemApiuserSettingTrusthostArray{ SystemApiuserSettingTrusthostArgs{...} }
type SystemApiuserSettingTrusthostArrayInput interface {
	pulumi.Input

	ToSystemApiuserSettingTrusthostArrayOutput() SystemApiuserSettingTrusthostArrayOutput
	ToSystemApiuserSettingTrusthostArrayOutputWithContext(context.Context) SystemApiuserSettingTrusthostArrayOutput
}

type SystemApiuserSettingTrusthostArray []SystemApiuserSettingTrusthostInput

func (SystemApiuserSettingTrusthostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemApiuserSettingTrusthost)(nil)).Elem()
}

func (i SystemApiuserSettingTrusthostArray) ToSystemApiuserSettingTrusthostArrayOutput() SystemApiuserSettingTrusthostArrayOutput {
	return i.ToSystemApiuserSettingTrusthostArrayOutputWithContext(context.Background())
}

func (i SystemApiuserSettingTrusthostArray) ToSystemApiuserSettingTrusthostArrayOutputWithContext(ctx context.Context) SystemApiuserSettingTrusthostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemApiuserSettingTrusthostArrayOutput)
}

type SystemApiuserSettingTrusthostOutput struct{ *pulumi.OutputState }

func (SystemApiuserSettingTrusthostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemApiuserSettingTrusthost)(nil)).Elem()
}

func (o SystemApiuserSettingTrusthostOutput) ToSystemApiuserSettingTrusthostOutput() SystemApiuserSettingTrusthostOutput {
	return o
}

func (o SystemApiuserSettingTrusthostOutput) ToSystemApiuserSettingTrusthostOutputWithContext(ctx context.Context) SystemApiuserSettingTrusthostOutput {
	return o
}

func (o SystemApiuserSettingTrusthostOutput) Ipv4Trusthost() pulumi.StringOutput {
	return o.ApplyT(func(v SystemApiuserSettingTrusthost) string { return v.Ipv4Trusthost }).(pulumi.StringOutput)
}

func (o SystemApiuserSettingTrusthostOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SystemApiuserSettingTrusthost) string { return v.Type }).(pulumi.StringOutput)
}

type SystemApiuserSettingTrusthostArrayOutput struct{ *pulumi.OutputState }

func (SystemApiuserSettingTrusthostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemApiuserSettingTrusthost)(nil)).Elem()
}

func (o SystemApiuserSettingTrusthostArrayOutput) ToSystemApiuserSettingTrusthostArrayOutput() SystemApiuserSettingTrusthostArrayOutput {
	return o
}

func (o SystemApiuserSettingTrusthostArrayOutput) ToSystemApiuserSettingTrusthostArrayOutputWithContext(ctx context.Context) SystemApiuserSettingTrusthostArrayOutput {
	return o
}

func (o SystemApiuserSettingTrusthostArrayOutput) Index(i pulumi.IntInput) SystemApiuserSettingTrusthostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemApiuserSettingTrusthost {
		return vs[0].([]SystemApiuserSettingTrusthost)[vs[1].(int)]
	}).(SystemApiuserSettingTrusthostOutput)
}

type SystemApiuserTrusthost struct {
	// Table ID.
	Id *int `pulumi:"id"`
	// IPv4 trusted host address.
	Ipv4Trusthost *string `pulumi:"ipv4Trusthost"`
	// IPv6 trusted host address.
	Ipv6Trusthost *string `pulumi:"ipv6Trusthost"`
	// Trusthost type. Valid values: `ipv4-trusthost`, `ipv6-trusthost`.
	Type *string `pulumi:"type"`
}

// SystemApiuserTrusthostInput is an input type that accepts SystemApiuserTrusthostArgs and SystemApiuserTrusthostOutput values.
// You can construct a concrete instance of `SystemApiuserTrusthostInput` via:
//
//	SystemApiuserTrusthostArgs{...}
type SystemApiuserTrusthostInput interface {
	pulumi.Input

	ToSystemApiuserTrusthostOutput() SystemApiuserTrusthostOutput
	ToSystemApiuserTrusthostOutputWithContext(context.Context) SystemApiuserTrusthostOutput
}

type SystemApiuserTrusthostArgs struct {
	// Table ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 trusted host address.
	Ipv4Trusthost pulumi.StringPtrInput `pulumi:"ipv4Trusthost"`
	// IPv6 trusted host address.
	Ipv6Trusthost pulumi.StringPtrInput `pulumi:"ipv6Trusthost"`
	// Trusthost type. Valid values: `ipv4-trusthost`, `ipv6-trusthost`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SystemApiuserTrusthostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemApiuserTrusthost)(nil)).Elem()
}

func (i SystemApiuserTrusthostArgs) ToSystemApiuserTrusthostOutput() SystemApiuserTrusthostOutput {
	return i.ToSystemApiuserTrusthostOutputWithContext(context.Background())
}

func (i SystemApiuserTrusthostArgs) ToSystemApiuserTrusthostOutputWithContext(ctx context.Context) SystemApiuserTrusthostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemApiuserTrusthostOutput)
}

// SystemApiuserTrusthostArrayInput is an input type that accepts SystemApiuserTrusthostArray and SystemApiuserTrusthostArrayOutput values.
// You can construct a concrete instance of `SystemApiuserTrusthostArrayInput` via:
//
//	SystemApiuserTrusthostArray{ SystemApiuserTrusthostArgs{...} }
type SystemApiuserTrusthostArrayInput interface {
	pulumi.Input

	ToSystemApiuserTrusthostArrayOutput() SystemApiuserTrusthostArrayOutput
	ToSystemApiuserTrusthostArrayOutputWithContext(context.Context) SystemApiuserTrusthostArrayOutput
}

type SystemApiuserTrusthostArray []SystemApiuserTrusthostInput

func (SystemApiuserTrusthostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemApiuserTrusthost)(nil)).Elem()
}

func (i SystemApiuserTrusthostArray) ToSystemApiuserTrusthostArrayOutput() SystemApiuserTrusthostArrayOutput {
	return i.ToSystemApiuserTrusthostArrayOutputWithContext(context.Background())
}

func (i SystemApiuserTrusthostArray) ToSystemApiuserTrusthostArrayOutputWithContext(ctx context.Context) SystemApiuserTrusthostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemApiuserTrusthostArrayOutput)
}

type SystemApiuserTrusthostOutput struct{ *pulumi.OutputState }

func (SystemApiuserTrusthostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemApiuserTrusthost)(nil)).Elem()
}

func (o SystemApiuserTrusthostOutput) ToSystemApiuserTrusthostOutput() SystemApiuserTrusthostOutput {
	return o
}

func (o SystemApiuserTrusthostOutput) ToSystemApiuserTrusthostOutputWithContext(ctx context.Context) SystemApiuserTrusthostOutput {
	return o
}

// Table ID.
func (o SystemApiuserTrusthostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemApiuserTrusthost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 trusted host address.
func (o SystemApiuserTrusthostOutput) Ipv4Trusthost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemApiuserTrusthost) *string { return v.Ipv4Trusthost }).(pulumi.StringPtrOutput)
}

// IPv6 trusted host address.
func (o SystemApiuserTrusthostOutput) Ipv6Trusthost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemApiuserTrusthost) *string { return v.Ipv6Trusthost }).(pulumi.StringPtrOutput)
}

// Trusthost type. Valid values: `ipv4-trusthost`, `ipv6-trusthost`.
func (o SystemApiuserTrusthostOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemApiuserTrusthost) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SystemApiuserTrusthostArrayOutput struct{ *pulumi.OutputState }

func (SystemApiuserTrusthostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemApiuserTrusthost)(nil)).Elem()
}

func (o SystemApiuserTrusthostArrayOutput) ToSystemApiuserTrusthostArrayOutput() SystemApiuserTrusthostArrayOutput {
	return o
}

func (o SystemApiuserTrusthostArrayOutput) ToSystemApiuserTrusthostArrayOutputWithContext(ctx context.Context) SystemApiuserTrusthostArrayOutput {
	return o
}

func (o SystemApiuserTrusthostArrayOutput) Index(i pulumi.IntInput) SystemApiuserTrusthostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemApiuserTrusthost {
		return vs[0].([]SystemApiuserTrusthost)[vs[1].(int)]
	}).(SystemApiuserTrusthostOutput)
}

type SystemApiuserVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// SystemApiuserVdomInput is an input type that accepts SystemApiuserVdomArgs and SystemApiuserVdomOutput values.
// You can construct a concrete instance of `SystemApiuserVdomInput` via:
//
//	SystemApiuserVdomArgs{...}
type SystemApiuserVdomInput interface {
	pulumi.Input

	ToSystemApiuserVdomOutput() SystemApiuserVdomOutput
	ToSystemApiuserVdomOutputWithContext(context.Context) SystemApiuserVdomOutput
}

type SystemApiuserVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemApiuserVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemApiuserVdom)(nil)).Elem()
}

func (i SystemApiuserVdomArgs) ToSystemApiuserVdomOutput() SystemApiuserVdomOutput {
	return i.ToSystemApiuserVdomOutputWithContext(context.Background())
}

func (i SystemApiuserVdomArgs) ToSystemApiuserVdomOutputWithContext(ctx context.Context) SystemApiuserVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemApiuserVdomOutput)
}

// SystemApiuserVdomArrayInput is an input type that accepts SystemApiuserVdomArray and SystemApiuserVdomArrayOutput values.
// You can construct a concrete instance of `SystemApiuserVdomArrayInput` via:
//
//	SystemApiuserVdomArray{ SystemApiuserVdomArgs{...} }
type SystemApiuserVdomArrayInput interface {
	pulumi.Input

	ToSystemApiuserVdomArrayOutput() SystemApiuserVdomArrayOutput
	ToSystemApiuserVdomArrayOutputWithContext(context.Context) SystemApiuserVdomArrayOutput
}

type SystemApiuserVdomArray []SystemApiuserVdomInput

func (SystemApiuserVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemApiuserVdom)(nil)).Elem()
}

func (i SystemApiuserVdomArray) ToSystemApiuserVdomArrayOutput() SystemApiuserVdomArrayOutput {
	return i.ToSystemApiuserVdomArrayOutputWithContext(context.Background())
}

func (i SystemApiuserVdomArray) ToSystemApiuserVdomArrayOutputWithContext(ctx context.Context) SystemApiuserVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemApiuserVdomArrayOutput)
}

type SystemApiuserVdomOutput struct{ *pulumi.OutputState }

func (SystemApiuserVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemApiuserVdom)(nil)).Elem()
}

func (o SystemApiuserVdomOutput) ToSystemApiuserVdomOutput() SystemApiuserVdomOutput {
	return o
}

func (o SystemApiuserVdomOutput) ToSystemApiuserVdomOutputWithContext(ctx context.Context) SystemApiuserVdomOutput {
	return o
}

// Virtual domain name.
func (o SystemApiuserVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemApiuserVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemApiuserVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemApiuserVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemApiuserVdom)(nil)).Elem()
}

func (o SystemApiuserVdomArrayOutput) ToSystemApiuserVdomArrayOutput() SystemApiuserVdomArrayOutput {
	return o
}

func (o SystemApiuserVdomArrayOutput) ToSystemApiuserVdomArrayOutputWithContext(ctx context.Context) SystemApiuserVdomArrayOutput {
	return o
}

func (o SystemApiuserVdomArrayOutput) Index(i pulumi.IntInput) SystemApiuserVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemApiuserVdom {
		return vs[0].([]SystemApiuserVdom)[vs[1].(int)]
	}).(SystemApiuserVdomOutput)
}

type SystemAutomationactionEmailTo struct {
	// Email address.
	Name *string `pulumi:"name"`
}

// SystemAutomationactionEmailToInput is an input type that accepts SystemAutomationactionEmailToArgs and SystemAutomationactionEmailToOutput values.
// You can construct a concrete instance of `SystemAutomationactionEmailToInput` via:
//
//	SystemAutomationactionEmailToArgs{...}
type SystemAutomationactionEmailToInput interface {
	pulumi.Input

	ToSystemAutomationactionEmailToOutput() SystemAutomationactionEmailToOutput
	ToSystemAutomationactionEmailToOutputWithContext(context.Context) SystemAutomationactionEmailToOutput
}

type SystemAutomationactionEmailToArgs struct {
	// Email address.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAutomationactionEmailToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationactionEmailTo)(nil)).Elem()
}

func (i SystemAutomationactionEmailToArgs) ToSystemAutomationactionEmailToOutput() SystemAutomationactionEmailToOutput {
	return i.ToSystemAutomationactionEmailToOutputWithContext(context.Background())
}

func (i SystemAutomationactionEmailToArgs) ToSystemAutomationactionEmailToOutputWithContext(ctx context.Context) SystemAutomationactionEmailToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationactionEmailToOutput)
}

// SystemAutomationactionEmailToArrayInput is an input type that accepts SystemAutomationactionEmailToArray and SystemAutomationactionEmailToArrayOutput values.
// You can construct a concrete instance of `SystemAutomationactionEmailToArrayInput` via:
//
//	SystemAutomationactionEmailToArray{ SystemAutomationactionEmailToArgs{...} }
type SystemAutomationactionEmailToArrayInput interface {
	pulumi.Input

	ToSystemAutomationactionEmailToArrayOutput() SystemAutomationactionEmailToArrayOutput
	ToSystemAutomationactionEmailToArrayOutputWithContext(context.Context) SystemAutomationactionEmailToArrayOutput
}

type SystemAutomationactionEmailToArray []SystemAutomationactionEmailToInput

func (SystemAutomationactionEmailToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationactionEmailTo)(nil)).Elem()
}

func (i SystemAutomationactionEmailToArray) ToSystemAutomationactionEmailToArrayOutput() SystemAutomationactionEmailToArrayOutput {
	return i.ToSystemAutomationactionEmailToArrayOutputWithContext(context.Background())
}

func (i SystemAutomationactionEmailToArray) ToSystemAutomationactionEmailToArrayOutputWithContext(ctx context.Context) SystemAutomationactionEmailToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationactionEmailToArrayOutput)
}

type SystemAutomationactionEmailToOutput struct{ *pulumi.OutputState }

func (SystemAutomationactionEmailToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationactionEmailTo)(nil)).Elem()
}

func (o SystemAutomationactionEmailToOutput) ToSystemAutomationactionEmailToOutput() SystemAutomationactionEmailToOutput {
	return o
}

func (o SystemAutomationactionEmailToOutput) ToSystemAutomationactionEmailToOutputWithContext(ctx context.Context) SystemAutomationactionEmailToOutput {
	return o
}

// Email address.
func (o SystemAutomationactionEmailToOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationactionEmailTo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAutomationactionEmailToArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationactionEmailToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationactionEmailTo)(nil)).Elem()
}

func (o SystemAutomationactionEmailToArrayOutput) ToSystemAutomationactionEmailToArrayOutput() SystemAutomationactionEmailToArrayOutput {
	return o
}

func (o SystemAutomationactionEmailToArrayOutput) ToSystemAutomationactionEmailToArrayOutputWithContext(ctx context.Context) SystemAutomationactionEmailToArrayOutput {
	return o
}

func (o SystemAutomationactionEmailToArrayOutput) Index(i pulumi.IntInput) SystemAutomationactionEmailToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationactionEmailTo {
		return vs[0].([]SystemAutomationactionEmailTo)[vs[1].(int)]
	}).(SystemAutomationactionEmailToOutput)
}

type SystemAutomationactionHeader struct {
	// Request header.
	Header *string `pulumi:"header"`
}

// SystemAutomationactionHeaderInput is an input type that accepts SystemAutomationactionHeaderArgs and SystemAutomationactionHeaderOutput values.
// You can construct a concrete instance of `SystemAutomationactionHeaderInput` via:
//
//	SystemAutomationactionHeaderArgs{...}
type SystemAutomationactionHeaderInput interface {
	pulumi.Input

	ToSystemAutomationactionHeaderOutput() SystemAutomationactionHeaderOutput
	ToSystemAutomationactionHeaderOutputWithContext(context.Context) SystemAutomationactionHeaderOutput
}

type SystemAutomationactionHeaderArgs struct {
	// Request header.
	Header pulumi.StringPtrInput `pulumi:"header"`
}

func (SystemAutomationactionHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationactionHeader)(nil)).Elem()
}

func (i SystemAutomationactionHeaderArgs) ToSystemAutomationactionHeaderOutput() SystemAutomationactionHeaderOutput {
	return i.ToSystemAutomationactionHeaderOutputWithContext(context.Background())
}

func (i SystemAutomationactionHeaderArgs) ToSystemAutomationactionHeaderOutputWithContext(ctx context.Context) SystemAutomationactionHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationactionHeaderOutput)
}

// SystemAutomationactionHeaderArrayInput is an input type that accepts SystemAutomationactionHeaderArray and SystemAutomationactionHeaderArrayOutput values.
// You can construct a concrete instance of `SystemAutomationactionHeaderArrayInput` via:
//
//	SystemAutomationactionHeaderArray{ SystemAutomationactionHeaderArgs{...} }
type SystemAutomationactionHeaderArrayInput interface {
	pulumi.Input

	ToSystemAutomationactionHeaderArrayOutput() SystemAutomationactionHeaderArrayOutput
	ToSystemAutomationactionHeaderArrayOutputWithContext(context.Context) SystemAutomationactionHeaderArrayOutput
}

type SystemAutomationactionHeaderArray []SystemAutomationactionHeaderInput

func (SystemAutomationactionHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationactionHeader)(nil)).Elem()
}

func (i SystemAutomationactionHeaderArray) ToSystemAutomationactionHeaderArrayOutput() SystemAutomationactionHeaderArrayOutput {
	return i.ToSystemAutomationactionHeaderArrayOutputWithContext(context.Background())
}

func (i SystemAutomationactionHeaderArray) ToSystemAutomationactionHeaderArrayOutputWithContext(ctx context.Context) SystemAutomationactionHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationactionHeaderArrayOutput)
}

type SystemAutomationactionHeaderOutput struct{ *pulumi.OutputState }

func (SystemAutomationactionHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationactionHeader)(nil)).Elem()
}

func (o SystemAutomationactionHeaderOutput) ToSystemAutomationactionHeaderOutput() SystemAutomationactionHeaderOutput {
	return o
}

func (o SystemAutomationactionHeaderOutput) ToSystemAutomationactionHeaderOutputWithContext(ctx context.Context) SystemAutomationactionHeaderOutput {
	return o
}

// Request header.
func (o SystemAutomationactionHeaderOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationactionHeader) *string { return v.Header }).(pulumi.StringPtrOutput)
}

type SystemAutomationactionHeaderArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationactionHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationactionHeader)(nil)).Elem()
}

func (o SystemAutomationactionHeaderArrayOutput) ToSystemAutomationactionHeaderArrayOutput() SystemAutomationactionHeaderArrayOutput {
	return o
}

func (o SystemAutomationactionHeaderArrayOutput) ToSystemAutomationactionHeaderArrayOutputWithContext(ctx context.Context) SystemAutomationactionHeaderArrayOutput {
	return o
}

func (o SystemAutomationactionHeaderArrayOutput) Index(i pulumi.IntInput) SystemAutomationactionHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationactionHeader {
		return vs[0].([]SystemAutomationactionHeader)[vs[1].(int)]
	}).(SystemAutomationactionHeaderOutput)
}

type SystemAutomationactionHttpHeader struct {
	// Entry ID.
	Id *int `pulumi:"id"`
	// Request header key.
	Key *string `pulumi:"key"`
	// Request header value.
	Value *string `pulumi:"value"`
}

// SystemAutomationactionHttpHeaderInput is an input type that accepts SystemAutomationactionHttpHeaderArgs and SystemAutomationactionHttpHeaderOutput values.
// You can construct a concrete instance of `SystemAutomationactionHttpHeaderInput` via:
//
//	SystemAutomationactionHttpHeaderArgs{...}
type SystemAutomationactionHttpHeaderInput interface {
	pulumi.Input

	ToSystemAutomationactionHttpHeaderOutput() SystemAutomationactionHttpHeaderOutput
	ToSystemAutomationactionHttpHeaderOutputWithContext(context.Context) SystemAutomationactionHttpHeaderOutput
}

type SystemAutomationactionHttpHeaderArgs struct {
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Request header key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Request header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SystemAutomationactionHttpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationactionHttpHeader)(nil)).Elem()
}

func (i SystemAutomationactionHttpHeaderArgs) ToSystemAutomationactionHttpHeaderOutput() SystemAutomationactionHttpHeaderOutput {
	return i.ToSystemAutomationactionHttpHeaderOutputWithContext(context.Background())
}

func (i SystemAutomationactionHttpHeaderArgs) ToSystemAutomationactionHttpHeaderOutputWithContext(ctx context.Context) SystemAutomationactionHttpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationactionHttpHeaderOutput)
}

// SystemAutomationactionHttpHeaderArrayInput is an input type that accepts SystemAutomationactionHttpHeaderArray and SystemAutomationactionHttpHeaderArrayOutput values.
// You can construct a concrete instance of `SystemAutomationactionHttpHeaderArrayInput` via:
//
//	SystemAutomationactionHttpHeaderArray{ SystemAutomationactionHttpHeaderArgs{...} }
type SystemAutomationactionHttpHeaderArrayInput interface {
	pulumi.Input

	ToSystemAutomationactionHttpHeaderArrayOutput() SystemAutomationactionHttpHeaderArrayOutput
	ToSystemAutomationactionHttpHeaderArrayOutputWithContext(context.Context) SystemAutomationactionHttpHeaderArrayOutput
}

type SystemAutomationactionHttpHeaderArray []SystemAutomationactionHttpHeaderInput

func (SystemAutomationactionHttpHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationactionHttpHeader)(nil)).Elem()
}

func (i SystemAutomationactionHttpHeaderArray) ToSystemAutomationactionHttpHeaderArrayOutput() SystemAutomationactionHttpHeaderArrayOutput {
	return i.ToSystemAutomationactionHttpHeaderArrayOutputWithContext(context.Background())
}

func (i SystemAutomationactionHttpHeaderArray) ToSystemAutomationactionHttpHeaderArrayOutputWithContext(ctx context.Context) SystemAutomationactionHttpHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationactionHttpHeaderArrayOutput)
}

type SystemAutomationactionHttpHeaderOutput struct{ *pulumi.OutputState }

func (SystemAutomationactionHttpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationactionHttpHeader)(nil)).Elem()
}

func (o SystemAutomationactionHttpHeaderOutput) ToSystemAutomationactionHttpHeaderOutput() SystemAutomationactionHttpHeaderOutput {
	return o
}

func (o SystemAutomationactionHttpHeaderOutput) ToSystemAutomationactionHttpHeaderOutputWithContext(ctx context.Context) SystemAutomationactionHttpHeaderOutput {
	return o
}

// Entry ID.
func (o SystemAutomationactionHttpHeaderOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAutomationactionHttpHeader) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Request header key.
func (o SystemAutomationactionHttpHeaderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationactionHttpHeader) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Request header value.
func (o SystemAutomationactionHttpHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationactionHttpHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SystemAutomationactionHttpHeaderArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationactionHttpHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationactionHttpHeader)(nil)).Elem()
}

func (o SystemAutomationactionHttpHeaderArrayOutput) ToSystemAutomationactionHttpHeaderArrayOutput() SystemAutomationactionHttpHeaderArrayOutput {
	return o
}

func (o SystemAutomationactionHttpHeaderArrayOutput) ToSystemAutomationactionHttpHeaderArrayOutputWithContext(ctx context.Context) SystemAutomationactionHttpHeaderArrayOutput {
	return o
}

func (o SystemAutomationactionHttpHeaderArrayOutput) Index(i pulumi.IntInput) SystemAutomationactionHttpHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationactionHttpHeader {
		return vs[0].([]SystemAutomationactionHttpHeader)[vs[1].(int)]
	}).(SystemAutomationactionHttpHeaderOutput)
}

type SystemAutomationactionSdnConnector struct {
	// SDN connector name.
	Name *string `pulumi:"name"`
}

// SystemAutomationactionSdnConnectorInput is an input type that accepts SystemAutomationactionSdnConnectorArgs and SystemAutomationactionSdnConnectorOutput values.
// You can construct a concrete instance of `SystemAutomationactionSdnConnectorInput` via:
//
//	SystemAutomationactionSdnConnectorArgs{...}
type SystemAutomationactionSdnConnectorInput interface {
	pulumi.Input

	ToSystemAutomationactionSdnConnectorOutput() SystemAutomationactionSdnConnectorOutput
	ToSystemAutomationactionSdnConnectorOutputWithContext(context.Context) SystemAutomationactionSdnConnectorOutput
}

type SystemAutomationactionSdnConnectorArgs struct {
	// SDN connector name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAutomationactionSdnConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationactionSdnConnector)(nil)).Elem()
}

func (i SystemAutomationactionSdnConnectorArgs) ToSystemAutomationactionSdnConnectorOutput() SystemAutomationactionSdnConnectorOutput {
	return i.ToSystemAutomationactionSdnConnectorOutputWithContext(context.Background())
}

func (i SystemAutomationactionSdnConnectorArgs) ToSystemAutomationactionSdnConnectorOutputWithContext(ctx context.Context) SystemAutomationactionSdnConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationactionSdnConnectorOutput)
}

// SystemAutomationactionSdnConnectorArrayInput is an input type that accepts SystemAutomationactionSdnConnectorArray and SystemAutomationactionSdnConnectorArrayOutput values.
// You can construct a concrete instance of `SystemAutomationactionSdnConnectorArrayInput` via:
//
//	SystemAutomationactionSdnConnectorArray{ SystemAutomationactionSdnConnectorArgs{...} }
type SystemAutomationactionSdnConnectorArrayInput interface {
	pulumi.Input

	ToSystemAutomationactionSdnConnectorArrayOutput() SystemAutomationactionSdnConnectorArrayOutput
	ToSystemAutomationactionSdnConnectorArrayOutputWithContext(context.Context) SystemAutomationactionSdnConnectorArrayOutput
}

type SystemAutomationactionSdnConnectorArray []SystemAutomationactionSdnConnectorInput

func (SystemAutomationactionSdnConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationactionSdnConnector)(nil)).Elem()
}

func (i SystemAutomationactionSdnConnectorArray) ToSystemAutomationactionSdnConnectorArrayOutput() SystemAutomationactionSdnConnectorArrayOutput {
	return i.ToSystemAutomationactionSdnConnectorArrayOutputWithContext(context.Background())
}

func (i SystemAutomationactionSdnConnectorArray) ToSystemAutomationactionSdnConnectorArrayOutputWithContext(ctx context.Context) SystemAutomationactionSdnConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationactionSdnConnectorArrayOutput)
}

type SystemAutomationactionSdnConnectorOutput struct{ *pulumi.OutputState }

func (SystemAutomationactionSdnConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationactionSdnConnector)(nil)).Elem()
}

func (o SystemAutomationactionSdnConnectorOutput) ToSystemAutomationactionSdnConnectorOutput() SystemAutomationactionSdnConnectorOutput {
	return o
}

func (o SystemAutomationactionSdnConnectorOutput) ToSystemAutomationactionSdnConnectorOutputWithContext(ctx context.Context) SystemAutomationactionSdnConnectorOutput {
	return o
}

// SDN connector name.
func (o SystemAutomationactionSdnConnectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationactionSdnConnector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAutomationactionSdnConnectorArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationactionSdnConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationactionSdnConnector)(nil)).Elem()
}

func (o SystemAutomationactionSdnConnectorArrayOutput) ToSystemAutomationactionSdnConnectorArrayOutput() SystemAutomationactionSdnConnectorArrayOutput {
	return o
}

func (o SystemAutomationactionSdnConnectorArrayOutput) ToSystemAutomationactionSdnConnectorArrayOutputWithContext(ctx context.Context) SystemAutomationactionSdnConnectorArrayOutput {
	return o
}

func (o SystemAutomationactionSdnConnectorArrayOutput) Index(i pulumi.IntInput) SystemAutomationactionSdnConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationactionSdnConnector {
		return vs[0].([]SystemAutomationactionSdnConnector)[vs[1].(int)]
	}).(SystemAutomationactionSdnConnectorOutput)
}

type SystemAutomationdestinationDestination struct {
	// Destination.
	Name *string `pulumi:"name"`
}

// SystemAutomationdestinationDestinationInput is an input type that accepts SystemAutomationdestinationDestinationArgs and SystemAutomationdestinationDestinationOutput values.
// You can construct a concrete instance of `SystemAutomationdestinationDestinationInput` via:
//
//	SystemAutomationdestinationDestinationArgs{...}
type SystemAutomationdestinationDestinationInput interface {
	pulumi.Input

	ToSystemAutomationdestinationDestinationOutput() SystemAutomationdestinationDestinationOutput
	ToSystemAutomationdestinationDestinationOutputWithContext(context.Context) SystemAutomationdestinationDestinationOutput
}

type SystemAutomationdestinationDestinationArgs struct {
	// Destination.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAutomationdestinationDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationdestinationDestination)(nil)).Elem()
}

func (i SystemAutomationdestinationDestinationArgs) ToSystemAutomationdestinationDestinationOutput() SystemAutomationdestinationDestinationOutput {
	return i.ToSystemAutomationdestinationDestinationOutputWithContext(context.Background())
}

func (i SystemAutomationdestinationDestinationArgs) ToSystemAutomationdestinationDestinationOutputWithContext(ctx context.Context) SystemAutomationdestinationDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationdestinationDestinationOutput)
}

// SystemAutomationdestinationDestinationArrayInput is an input type that accepts SystemAutomationdestinationDestinationArray and SystemAutomationdestinationDestinationArrayOutput values.
// You can construct a concrete instance of `SystemAutomationdestinationDestinationArrayInput` via:
//
//	SystemAutomationdestinationDestinationArray{ SystemAutomationdestinationDestinationArgs{...} }
type SystemAutomationdestinationDestinationArrayInput interface {
	pulumi.Input

	ToSystemAutomationdestinationDestinationArrayOutput() SystemAutomationdestinationDestinationArrayOutput
	ToSystemAutomationdestinationDestinationArrayOutputWithContext(context.Context) SystemAutomationdestinationDestinationArrayOutput
}

type SystemAutomationdestinationDestinationArray []SystemAutomationdestinationDestinationInput

func (SystemAutomationdestinationDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationdestinationDestination)(nil)).Elem()
}

func (i SystemAutomationdestinationDestinationArray) ToSystemAutomationdestinationDestinationArrayOutput() SystemAutomationdestinationDestinationArrayOutput {
	return i.ToSystemAutomationdestinationDestinationArrayOutputWithContext(context.Background())
}

func (i SystemAutomationdestinationDestinationArray) ToSystemAutomationdestinationDestinationArrayOutputWithContext(ctx context.Context) SystemAutomationdestinationDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationdestinationDestinationArrayOutput)
}

type SystemAutomationdestinationDestinationOutput struct{ *pulumi.OutputState }

func (SystemAutomationdestinationDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationdestinationDestination)(nil)).Elem()
}

func (o SystemAutomationdestinationDestinationOutput) ToSystemAutomationdestinationDestinationOutput() SystemAutomationdestinationDestinationOutput {
	return o
}

func (o SystemAutomationdestinationDestinationOutput) ToSystemAutomationdestinationDestinationOutputWithContext(ctx context.Context) SystemAutomationdestinationDestinationOutput {
	return o
}

// Destination.
func (o SystemAutomationdestinationDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationdestinationDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAutomationdestinationDestinationArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationdestinationDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationdestinationDestination)(nil)).Elem()
}

func (o SystemAutomationdestinationDestinationArrayOutput) ToSystemAutomationdestinationDestinationArrayOutput() SystemAutomationdestinationDestinationArrayOutput {
	return o
}

func (o SystemAutomationdestinationDestinationArrayOutput) ToSystemAutomationdestinationDestinationArrayOutputWithContext(ctx context.Context) SystemAutomationdestinationDestinationArrayOutput {
	return o
}

func (o SystemAutomationdestinationDestinationArrayOutput) Index(i pulumi.IntInput) SystemAutomationdestinationDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationdestinationDestination {
		return vs[0].([]SystemAutomationdestinationDestination)[vs[1].(int)]
	}).(SystemAutomationdestinationDestinationOutput)
}

type SystemAutomationstitchAction struct {
	// Action name.
	Action *string `pulumi:"action"`
	// Delay before execution (in seconds).
	Delay *int `pulumi:"delay"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Required in action chain. Valid values: `enable`, `disable`.
	Required *string `pulumi:"required"`
}

// SystemAutomationstitchActionInput is an input type that accepts SystemAutomationstitchActionArgs and SystemAutomationstitchActionOutput values.
// You can construct a concrete instance of `SystemAutomationstitchActionInput` via:
//
//	SystemAutomationstitchActionArgs{...}
type SystemAutomationstitchActionInput interface {
	pulumi.Input

	ToSystemAutomationstitchActionOutput() SystemAutomationstitchActionOutput
	ToSystemAutomationstitchActionOutputWithContext(context.Context) SystemAutomationstitchActionOutput
}

type SystemAutomationstitchActionArgs struct {
	// Action name.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Delay before execution (in seconds).
	Delay pulumi.IntPtrInput `pulumi:"delay"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Required in action chain. Valid values: `enable`, `disable`.
	Required pulumi.StringPtrInput `pulumi:"required"`
}

func (SystemAutomationstitchActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationstitchAction)(nil)).Elem()
}

func (i SystemAutomationstitchActionArgs) ToSystemAutomationstitchActionOutput() SystemAutomationstitchActionOutput {
	return i.ToSystemAutomationstitchActionOutputWithContext(context.Background())
}

func (i SystemAutomationstitchActionArgs) ToSystemAutomationstitchActionOutputWithContext(ctx context.Context) SystemAutomationstitchActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationstitchActionOutput)
}

// SystemAutomationstitchActionArrayInput is an input type that accepts SystemAutomationstitchActionArray and SystemAutomationstitchActionArrayOutput values.
// You can construct a concrete instance of `SystemAutomationstitchActionArrayInput` via:
//
//	SystemAutomationstitchActionArray{ SystemAutomationstitchActionArgs{...} }
type SystemAutomationstitchActionArrayInput interface {
	pulumi.Input

	ToSystemAutomationstitchActionArrayOutput() SystemAutomationstitchActionArrayOutput
	ToSystemAutomationstitchActionArrayOutputWithContext(context.Context) SystemAutomationstitchActionArrayOutput
}

type SystemAutomationstitchActionArray []SystemAutomationstitchActionInput

func (SystemAutomationstitchActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationstitchAction)(nil)).Elem()
}

func (i SystemAutomationstitchActionArray) ToSystemAutomationstitchActionArrayOutput() SystemAutomationstitchActionArrayOutput {
	return i.ToSystemAutomationstitchActionArrayOutputWithContext(context.Background())
}

func (i SystemAutomationstitchActionArray) ToSystemAutomationstitchActionArrayOutputWithContext(ctx context.Context) SystemAutomationstitchActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationstitchActionArrayOutput)
}

type SystemAutomationstitchActionOutput struct{ *pulumi.OutputState }

func (SystemAutomationstitchActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationstitchAction)(nil)).Elem()
}

func (o SystemAutomationstitchActionOutput) ToSystemAutomationstitchActionOutput() SystemAutomationstitchActionOutput {
	return o
}

func (o SystemAutomationstitchActionOutput) ToSystemAutomationstitchActionOutputWithContext(ctx context.Context) SystemAutomationstitchActionOutput {
	return o
}

// Action name.
func (o SystemAutomationstitchActionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationstitchAction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Delay before execution (in seconds).
func (o SystemAutomationstitchActionOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAutomationstitchAction) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

// Entry ID.
func (o SystemAutomationstitchActionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAutomationstitchAction) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Required in action chain. Valid values: `enable`, `disable`.
func (o SystemAutomationstitchActionOutput) Required() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationstitchAction) *string { return v.Required }).(pulumi.StringPtrOutput)
}

type SystemAutomationstitchActionArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationstitchActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationstitchAction)(nil)).Elem()
}

func (o SystemAutomationstitchActionArrayOutput) ToSystemAutomationstitchActionArrayOutput() SystemAutomationstitchActionArrayOutput {
	return o
}

func (o SystemAutomationstitchActionArrayOutput) ToSystemAutomationstitchActionArrayOutputWithContext(ctx context.Context) SystemAutomationstitchActionArrayOutput {
	return o
}

func (o SystemAutomationstitchActionArrayOutput) Index(i pulumi.IntInput) SystemAutomationstitchActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationstitchAction {
		return vs[0].([]SystemAutomationstitchAction)[vs[1].(int)]
	}).(SystemAutomationstitchActionOutput)
}

type SystemAutomationstitchDestination struct {
	// Destination name.
	Name *string `pulumi:"name"`
}

// SystemAutomationstitchDestinationInput is an input type that accepts SystemAutomationstitchDestinationArgs and SystemAutomationstitchDestinationOutput values.
// You can construct a concrete instance of `SystemAutomationstitchDestinationInput` via:
//
//	SystemAutomationstitchDestinationArgs{...}
type SystemAutomationstitchDestinationInput interface {
	pulumi.Input

	ToSystemAutomationstitchDestinationOutput() SystemAutomationstitchDestinationOutput
	ToSystemAutomationstitchDestinationOutputWithContext(context.Context) SystemAutomationstitchDestinationOutput
}

type SystemAutomationstitchDestinationArgs struct {
	// Destination name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAutomationstitchDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationstitchDestination)(nil)).Elem()
}

func (i SystemAutomationstitchDestinationArgs) ToSystemAutomationstitchDestinationOutput() SystemAutomationstitchDestinationOutput {
	return i.ToSystemAutomationstitchDestinationOutputWithContext(context.Background())
}

func (i SystemAutomationstitchDestinationArgs) ToSystemAutomationstitchDestinationOutputWithContext(ctx context.Context) SystemAutomationstitchDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationstitchDestinationOutput)
}

// SystemAutomationstitchDestinationArrayInput is an input type that accepts SystemAutomationstitchDestinationArray and SystemAutomationstitchDestinationArrayOutput values.
// You can construct a concrete instance of `SystemAutomationstitchDestinationArrayInput` via:
//
//	SystemAutomationstitchDestinationArray{ SystemAutomationstitchDestinationArgs{...} }
type SystemAutomationstitchDestinationArrayInput interface {
	pulumi.Input

	ToSystemAutomationstitchDestinationArrayOutput() SystemAutomationstitchDestinationArrayOutput
	ToSystemAutomationstitchDestinationArrayOutputWithContext(context.Context) SystemAutomationstitchDestinationArrayOutput
}

type SystemAutomationstitchDestinationArray []SystemAutomationstitchDestinationInput

func (SystemAutomationstitchDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationstitchDestination)(nil)).Elem()
}

func (i SystemAutomationstitchDestinationArray) ToSystemAutomationstitchDestinationArrayOutput() SystemAutomationstitchDestinationArrayOutput {
	return i.ToSystemAutomationstitchDestinationArrayOutputWithContext(context.Background())
}

func (i SystemAutomationstitchDestinationArray) ToSystemAutomationstitchDestinationArrayOutputWithContext(ctx context.Context) SystemAutomationstitchDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationstitchDestinationArrayOutput)
}

type SystemAutomationstitchDestinationOutput struct{ *pulumi.OutputState }

func (SystemAutomationstitchDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationstitchDestination)(nil)).Elem()
}

func (o SystemAutomationstitchDestinationOutput) ToSystemAutomationstitchDestinationOutput() SystemAutomationstitchDestinationOutput {
	return o
}

func (o SystemAutomationstitchDestinationOutput) ToSystemAutomationstitchDestinationOutputWithContext(ctx context.Context) SystemAutomationstitchDestinationOutput {
	return o
}

// Destination name.
func (o SystemAutomationstitchDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationstitchDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAutomationstitchDestinationArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationstitchDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationstitchDestination)(nil)).Elem()
}

func (o SystemAutomationstitchDestinationArrayOutput) ToSystemAutomationstitchDestinationArrayOutput() SystemAutomationstitchDestinationArrayOutput {
	return o
}

func (o SystemAutomationstitchDestinationArrayOutput) ToSystemAutomationstitchDestinationArrayOutputWithContext(ctx context.Context) SystemAutomationstitchDestinationArrayOutput {
	return o
}

func (o SystemAutomationstitchDestinationArrayOutput) Index(i pulumi.IntInput) SystemAutomationstitchDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationstitchDestination {
		return vs[0].([]SystemAutomationstitchDestination)[vs[1].(int)]
	}).(SystemAutomationstitchDestinationOutput)
}

type SystemAutomationtriggerField struct {
	// Entry ID.
	Id *int `pulumi:"id"`
	// Name.
	Name *string `pulumi:"name"`
	// Value.
	Value *string `pulumi:"value"`
}

// SystemAutomationtriggerFieldInput is an input type that accepts SystemAutomationtriggerFieldArgs and SystemAutomationtriggerFieldOutput values.
// You can construct a concrete instance of `SystemAutomationtriggerFieldInput` via:
//
//	SystemAutomationtriggerFieldArgs{...}
type SystemAutomationtriggerFieldInput interface {
	pulumi.Input

	ToSystemAutomationtriggerFieldOutput() SystemAutomationtriggerFieldOutput
	ToSystemAutomationtriggerFieldOutputWithContext(context.Context) SystemAutomationtriggerFieldOutput
}

type SystemAutomationtriggerFieldArgs struct {
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SystemAutomationtriggerFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationtriggerField)(nil)).Elem()
}

func (i SystemAutomationtriggerFieldArgs) ToSystemAutomationtriggerFieldOutput() SystemAutomationtriggerFieldOutput {
	return i.ToSystemAutomationtriggerFieldOutputWithContext(context.Background())
}

func (i SystemAutomationtriggerFieldArgs) ToSystemAutomationtriggerFieldOutputWithContext(ctx context.Context) SystemAutomationtriggerFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationtriggerFieldOutput)
}

// SystemAutomationtriggerFieldArrayInput is an input type that accepts SystemAutomationtriggerFieldArray and SystemAutomationtriggerFieldArrayOutput values.
// You can construct a concrete instance of `SystemAutomationtriggerFieldArrayInput` via:
//
//	SystemAutomationtriggerFieldArray{ SystemAutomationtriggerFieldArgs{...} }
type SystemAutomationtriggerFieldArrayInput interface {
	pulumi.Input

	ToSystemAutomationtriggerFieldArrayOutput() SystemAutomationtriggerFieldArrayOutput
	ToSystemAutomationtriggerFieldArrayOutputWithContext(context.Context) SystemAutomationtriggerFieldArrayOutput
}

type SystemAutomationtriggerFieldArray []SystemAutomationtriggerFieldInput

func (SystemAutomationtriggerFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationtriggerField)(nil)).Elem()
}

func (i SystemAutomationtriggerFieldArray) ToSystemAutomationtriggerFieldArrayOutput() SystemAutomationtriggerFieldArrayOutput {
	return i.ToSystemAutomationtriggerFieldArrayOutputWithContext(context.Background())
}

func (i SystemAutomationtriggerFieldArray) ToSystemAutomationtriggerFieldArrayOutputWithContext(ctx context.Context) SystemAutomationtriggerFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationtriggerFieldArrayOutput)
}

type SystemAutomationtriggerFieldOutput struct{ *pulumi.OutputState }

func (SystemAutomationtriggerFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationtriggerField)(nil)).Elem()
}

func (o SystemAutomationtriggerFieldOutput) ToSystemAutomationtriggerFieldOutput() SystemAutomationtriggerFieldOutput {
	return o
}

func (o SystemAutomationtriggerFieldOutput) ToSystemAutomationtriggerFieldOutputWithContext(ctx context.Context) SystemAutomationtriggerFieldOutput {
	return o
}

// Entry ID.
func (o SystemAutomationtriggerFieldOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAutomationtriggerField) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Name.
func (o SystemAutomationtriggerFieldOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationtriggerField) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value.
func (o SystemAutomationtriggerFieldOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationtriggerField) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SystemAutomationtriggerFieldArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationtriggerFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationtriggerField)(nil)).Elem()
}

func (o SystemAutomationtriggerFieldArrayOutput) ToSystemAutomationtriggerFieldArrayOutput() SystemAutomationtriggerFieldArrayOutput {
	return o
}

func (o SystemAutomationtriggerFieldArrayOutput) ToSystemAutomationtriggerFieldArrayOutputWithContext(ctx context.Context) SystemAutomationtriggerFieldArrayOutput {
	return o
}

func (o SystemAutomationtriggerFieldArrayOutput) Index(i pulumi.IntInput) SystemAutomationtriggerFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationtriggerField {
		return vs[0].([]SystemAutomationtriggerField)[vs[1].(int)]
	}).(SystemAutomationtriggerFieldOutput)
}

type SystemAutomationtriggerLogidBlock struct {
	// Log ID.
	Id *int `pulumi:"id"`
}

// SystemAutomationtriggerLogidBlockInput is an input type that accepts SystemAutomationtriggerLogidBlockArgs and SystemAutomationtriggerLogidBlockOutput values.
// You can construct a concrete instance of `SystemAutomationtriggerLogidBlockInput` via:
//
//	SystemAutomationtriggerLogidBlockArgs{...}
type SystemAutomationtriggerLogidBlockInput interface {
	pulumi.Input

	ToSystemAutomationtriggerLogidBlockOutput() SystemAutomationtriggerLogidBlockOutput
	ToSystemAutomationtriggerLogidBlockOutputWithContext(context.Context) SystemAutomationtriggerLogidBlockOutput
}

type SystemAutomationtriggerLogidBlockArgs struct {
	// Log ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemAutomationtriggerLogidBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationtriggerLogidBlock)(nil)).Elem()
}

func (i SystemAutomationtriggerLogidBlockArgs) ToSystemAutomationtriggerLogidBlockOutput() SystemAutomationtriggerLogidBlockOutput {
	return i.ToSystemAutomationtriggerLogidBlockOutputWithContext(context.Background())
}

func (i SystemAutomationtriggerLogidBlockArgs) ToSystemAutomationtriggerLogidBlockOutputWithContext(ctx context.Context) SystemAutomationtriggerLogidBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationtriggerLogidBlockOutput)
}

// SystemAutomationtriggerLogidBlockArrayInput is an input type that accepts SystemAutomationtriggerLogidBlockArray and SystemAutomationtriggerLogidBlockArrayOutput values.
// You can construct a concrete instance of `SystemAutomationtriggerLogidBlockArrayInput` via:
//
//	SystemAutomationtriggerLogidBlockArray{ SystemAutomationtriggerLogidBlockArgs{...} }
type SystemAutomationtriggerLogidBlockArrayInput interface {
	pulumi.Input

	ToSystemAutomationtriggerLogidBlockArrayOutput() SystemAutomationtriggerLogidBlockArrayOutput
	ToSystemAutomationtriggerLogidBlockArrayOutputWithContext(context.Context) SystemAutomationtriggerLogidBlockArrayOutput
}

type SystemAutomationtriggerLogidBlockArray []SystemAutomationtriggerLogidBlockInput

func (SystemAutomationtriggerLogidBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationtriggerLogidBlock)(nil)).Elem()
}

func (i SystemAutomationtriggerLogidBlockArray) ToSystemAutomationtriggerLogidBlockArrayOutput() SystemAutomationtriggerLogidBlockArrayOutput {
	return i.ToSystemAutomationtriggerLogidBlockArrayOutputWithContext(context.Background())
}

func (i SystemAutomationtriggerLogidBlockArray) ToSystemAutomationtriggerLogidBlockArrayOutputWithContext(ctx context.Context) SystemAutomationtriggerLogidBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationtriggerLogidBlockArrayOutput)
}

type SystemAutomationtriggerLogidBlockOutput struct{ *pulumi.OutputState }

func (SystemAutomationtriggerLogidBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationtriggerLogidBlock)(nil)).Elem()
}

func (o SystemAutomationtriggerLogidBlockOutput) ToSystemAutomationtriggerLogidBlockOutput() SystemAutomationtriggerLogidBlockOutput {
	return o
}

func (o SystemAutomationtriggerLogidBlockOutput) ToSystemAutomationtriggerLogidBlockOutputWithContext(ctx context.Context) SystemAutomationtriggerLogidBlockOutput {
	return o
}

// Log ID.
func (o SystemAutomationtriggerLogidBlockOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAutomationtriggerLogidBlock) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemAutomationtriggerLogidBlockArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationtriggerLogidBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationtriggerLogidBlock)(nil)).Elem()
}

func (o SystemAutomationtriggerLogidBlockArrayOutput) ToSystemAutomationtriggerLogidBlockArrayOutput() SystemAutomationtriggerLogidBlockArrayOutput {
	return o
}

func (o SystemAutomationtriggerLogidBlockArrayOutput) ToSystemAutomationtriggerLogidBlockArrayOutputWithContext(ctx context.Context) SystemAutomationtriggerLogidBlockArrayOutput {
	return o
}

func (o SystemAutomationtriggerLogidBlockArrayOutput) Index(i pulumi.IntInput) SystemAutomationtriggerLogidBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationtriggerLogidBlock {
		return vs[0].([]SystemAutomationtriggerLogidBlock)[vs[1].(int)]
	}).(SystemAutomationtriggerLogidBlockOutput)
}

type SystemAutomationtriggerVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// SystemAutomationtriggerVdomInput is an input type that accepts SystemAutomationtriggerVdomArgs and SystemAutomationtriggerVdomOutput values.
// You can construct a concrete instance of `SystemAutomationtriggerVdomInput` via:
//
//	SystemAutomationtriggerVdomArgs{...}
type SystemAutomationtriggerVdomInput interface {
	pulumi.Input

	ToSystemAutomationtriggerVdomOutput() SystemAutomationtriggerVdomOutput
	ToSystemAutomationtriggerVdomOutputWithContext(context.Context) SystemAutomationtriggerVdomOutput
}

type SystemAutomationtriggerVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAutomationtriggerVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationtriggerVdom)(nil)).Elem()
}

func (i SystemAutomationtriggerVdomArgs) ToSystemAutomationtriggerVdomOutput() SystemAutomationtriggerVdomOutput {
	return i.ToSystemAutomationtriggerVdomOutputWithContext(context.Background())
}

func (i SystemAutomationtriggerVdomArgs) ToSystemAutomationtriggerVdomOutputWithContext(ctx context.Context) SystemAutomationtriggerVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationtriggerVdomOutput)
}

// SystemAutomationtriggerVdomArrayInput is an input type that accepts SystemAutomationtriggerVdomArray and SystemAutomationtriggerVdomArrayOutput values.
// You can construct a concrete instance of `SystemAutomationtriggerVdomArrayInput` via:
//
//	SystemAutomationtriggerVdomArray{ SystemAutomationtriggerVdomArgs{...} }
type SystemAutomationtriggerVdomArrayInput interface {
	pulumi.Input

	ToSystemAutomationtriggerVdomArrayOutput() SystemAutomationtriggerVdomArrayOutput
	ToSystemAutomationtriggerVdomArrayOutputWithContext(context.Context) SystemAutomationtriggerVdomArrayOutput
}

type SystemAutomationtriggerVdomArray []SystemAutomationtriggerVdomInput

func (SystemAutomationtriggerVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationtriggerVdom)(nil)).Elem()
}

func (i SystemAutomationtriggerVdomArray) ToSystemAutomationtriggerVdomArrayOutput() SystemAutomationtriggerVdomArrayOutput {
	return i.ToSystemAutomationtriggerVdomArrayOutputWithContext(context.Background())
}

func (i SystemAutomationtriggerVdomArray) ToSystemAutomationtriggerVdomArrayOutputWithContext(ctx context.Context) SystemAutomationtriggerVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationtriggerVdomArrayOutput)
}

type SystemAutomationtriggerVdomOutput struct{ *pulumi.OutputState }

func (SystemAutomationtriggerVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationtriggerVdom)(nil)).Elem()
}

func (o SystemAutomationtriggerVdomOutput) ToSystemAutomationtriggerVdomOutput() SystemAutomationtriggerVdomOutput {
	return o
}

func (o SystemAutomationtriggerVdomOutput) ToSystemAutomationtriggerVdomOutputWithContext(ctx context.Context) SystemAutomationtriggerVdomOutput {
	return o
}

// Virtual domain name.
func (o SystemAutomationtriggerVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationtriggerVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAutomationtriggerVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationtriggerVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationtriggerVdom)(nil)).Elem()
}

func (o SystemAutomationtriggerVdomArrayOutput) ToSystemAutomationtriggerVdomArrayOutput() SystemAutomationtriggerVdomArrayOutput {
	return o
}

func (o SystemAutomationtriggerVdomArrayOutput) ToSystemAutomationtriggerVdomArrayOutputWithContext(ctx context.Context) SystemAutomationtriggerVdomArrayOutput {
	return o
}

func (o SystemAutomationtriggerVdomArrayOutput) Index(i pulumi.IntInput) SystemAutomationtriggerVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationtriggerVdom {
		return vs[0].([]SystemAutomationtriggerVdom)[vs[1].(int)]
	}).(SystemAutomationtriggerVdomOutput)
}

type SystemCentralmanagementServerList struct {
	// Indicate whether the FortiGate communicates with the override server using an IPv4 address, an IPv6 address or a FQDN. Valid values: `ipv4`, `ipv6`, `fqdn`.
	AddrType *string `pulumi:"addrType"`
	// FQDN address of override server.
	Fqdn *string `pulumi:"fqdn"`
	// ID.
	Id *int `pulumi:"id"`
	// IPv4 address of override server.
	ServerAddress *string `pulumi:"serverAddress"`
	// IPv6 address of override server.
	ServerAddress6 *string `pulumi:"serverAddress6"`
	// FortiGuard service type.
	ServerType *string `pulumi:"serverType"`
}

// SystemCentralmanagementServerListInput is an input type that accepts SystemCentralmanagementServerListArgs and SystemCentralmanagementServerListOutput values.
// You can construct a concrete instance of `SystemCentralmanagementServerListInput` via:
//
//	SystemCentralmanagementServerListArgs{...}
type SystemCentralmanagementServerListInput interface {
	pulumi.Input

	ToSystemCentralmanagementServerListOutput() SystemCentralmanagementServerListOutput
	ToSystemCentralmanagementServerListOutputWithContext(context.Context) SystemCentralmanagementServerListOutput
}

type SystemCentralmanagementServerListArgs struct {
	// Indicate whether the FortiGate communicates with the override server using an IPv4 address, an IPv6 address or a FQDN. Valid values: `ipv4`, `ipv6`, `fqdn`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// FQDN address of override server.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 address of override server.
	ServerAddress pulumi.StringPtrInput `pulumi:"serverAddress"`
	// IPv6 address of override server.
	ServerAddress6 pulumi.StringPtrInput `pulumi:"serverAddress6"`
	// FortiGuard service type.
	ServerType pulumi.StringPtrInput `pulumi:"serverType"`
}

func (SystemCentralmanagementServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCentralmanagementServerList)(nil)).Elem()
}

func (i SystemCentralmanagementServerListArgs) ToSystemCentralmanagementServerListOutput() SystemCentralmanagementServerListOutput {
	return i.ToSystemCentralmanagementServerListOutputWithContext(context.Background())
}

func (i SystemCentralmanagementServerListArgs) ToSystemCentralmanagementServerListOutputWithContext(ctx context.Context) SystemCentralmanagementServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCentralmanagementServerListOutput)
}

// SystemCentralmanagementServerListArrayInput is an input type that accepts SystemCentralmanagementServerListArray and SystemCentralmanagementServerListArrayOutput values.
// You can construct a concrete instance of `SystemCentralmanagementServerListArrayInput` via:
//
//	SystemCentralmanagementServerListArray{ SystemCentralmanagementServerListArgs{...} }
type SystemCentralmanagementServerListArrayInput interface {
	pulumi.Input

	ToSystemCentralmanagementServerListArrayOutput() SystemCentralmanagementServerListArrayOutput
	ToSystemCentralmanagementServerListArrayOutputWithContext(context.Context) SystemCentralmanagementServerListArrayOutput
}

type SystemCentralmanagementServerListArray []SystemCentralmanagementServerListInput

func (SystemCentralmanagementServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCentralmanagementServerList)(nil)).Elem()
}

func (i SystemCentralmanagementServerListArray) ToSystemCentralmanagementServerListArrayOutput() SystemCentralmanagementServerListArrayOutput {
	return i.ToSystemCentralmanagementServerListArrayOutputWithContext(context.Background())
}

func (i SystemCentralmanagementServerListArray) ToSystemCentralmanagementServerListArrayOutputWithContext(ctx context.Context) SystemCentralmanagementServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCentralmanagementServerListArrayOutput)
}

type SystemCentralmanagementServerListOutput struct{ *pulumi.OutputState }

func (SystemCentralmanagementServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCentralmanagementServerList)(nil)).Elem()
}

func (o SystemCentralmanagementServerListOutput) ToSystemCentralmanagementServerListOutput() SystemCentralmanagementServerListOutput {
	return o
}

func (o SystemCentralmanagementServerListOutput) ToSystemCentralmanagementServerListOutputWithContext(ctx context.Context) SystemCentralmanagementServerListOutput {
	return o
}

// Indicate whether the FortiGate communicates with the override server using an IPv4 address, an IPv6 address or a FQDN. Valid values: `ipv4`, `ipv6`, `fqdn`.
func (o SystemCentralmanagementServerListOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCentralmanagementServerList) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// FQDN address of override server.
func (o SystemCentralmanagementServerListOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCentralmanagementServerList) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// ID.
func (o SystemCentralmanagementServerListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemCentralmanagementServerList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 address of override server.
func (o SystemCentralmanagementServerListOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCentralmanagementServerList) *string { return v.ServerAddress }).(pulumi.StringPtrOutput)
}

// IPv6 address of override server.
func (o SystemCentralmanagementServerListOutput) ServerAddress6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCentralmanagementServerList) *string { return v.ServerAddress6 }).(pulumi.StringPtrOutput)
}

// FortiGuard service type.
func (o SystemCentralmanagementServerListOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCentralmanagementServerList) *string { return v.ServerType }).(pulumi.StringPtrOutput)
}

type SystemCentralmanagementServerListArrayOutput struct{ *pulumi.OutputState }

func (SystemCentralmanagementServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCentralmanagementServerList)(nil)).Elem()
}

func (o SystemCentralmanagementServerListArrayOutput) ToSystemCentralmanagementServerListArrayOutput() SystemCentralmanagementServerListArrayOutput {
	return o
}

func (o SystemCentralmanagementServerListArrayOutput) ToSystemCentralmanagementServerListArrayOutputWithContext(ctx context.Context) SystemCentralmanagementServerListArrayOutput {
	return o
}

func (o SystemCentralmanagementServerListArrayOutput) Index(i pulumi.IntInput) SystemCentralmanagementServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemCentralmanagementServerList {
		return vs[0].([]SystemCentralmanagementServerList)[vs[1].(int)]
	}).(SystemCentralmanagementServerListOutput)
}

type SystemClustersyncDownIntfsBeforeSessSync struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SystemClustersyncDownIntfsBeforeSessSyncInput is an input type that accepts SystemClustersyncDownIntfsBeforeSessSyncArgs and SystemClustersyncDownIntfsBeforeSessSyncOutput values.
// You can construct a concrete instance of `SystemClustersyncDownIntfsBeforeSessSyncInput` via:
//
//	SystemClustersyncDownIntfsBeforeSessSyncArgs{...}
type SystemClustersyncDownIntfsBeforeSessSyncInput interface {
	pulumi.Input

	ToSystemClustersyncDownIntfsBeforeSessSyncOutput() SystemClustersyncDownIntfsBeforeSessSyncOutput
	ToSystemClustersyncDownIntfsBeforeSessSyncOutputWithContext(context.Context) SystemClustersyncDownIntfsBeforeSessSyncOutput
}

type SystemClustersyncDownIntfsBeforeSessSyncArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemClustersyncDownIntfsBeforeSessSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i SystemClustersyncDownIntfsBeforeSessSyncArgs) ToSystemClustersyncDownIntfsBeforeSessSyncOutput() SystemClustersyncDownIntfsBeforeSessSyncOutput {
	return i.ToSystemClustersyncDownIntfsBeforeSessSyncOutputWithContext(context.Background())
}

func (i SystemClustersyncDownIntfsBeforeSessSyncArgs) ToSystemClustersyncDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) SystemClustersyncDownIntfsBeforeSessSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClustersyncDownIntfsBeforeSessSyncOutput)
}

// SystemClustersyncDownIntfsBeforeSessSyncArrayInput is an input type that accepts SystemClustersyncDownIntfsBeforeSessSyncArray and SystemClustersyncDownIntfsBeforeSessSyncArrayOutput values.
// You can construct a concrete instance of `SystemClustersyncDownIntfsBeforeSessSyncArrayInput` via:
//
//	SystemClustersyncDownIntfsBeforeSessSyncArray{ SystemClustersyncDownIntfsBeforeSessSyncArgs{...} }
type SystemClustersyncDownIntfsBeforeSessSyncArrayInput interface {
	pulumi.Input

	ToSystemClustersyncDownIntfsBeforeSessSyncArrayOutput() SystemClustersyncDownIntfsBeforeSessSyncArrayOutput
	ToSystemClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(context.Context) SystemClustersyncDownIntfsBeforeSessSyncArrayOutput
}

type SystemClustersyncDownIntfsBeforeSessSyncArray []SystemClustersyncDownIntfsBeforeSessSyncInput

func (SystemClustersyncDownIntfsBeforeSessSyncArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i SystemClustersyncDownIntfsBeforeSessSyncArray) ToSystemClustersyncDownIntfsBeforeSessSyncArrayOutput() SystemClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return i.ToSystemClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(context.Background())
}

func (i SystemClustersyncDownIntfsBeforeSessSyncArray) ToSystemClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) SystemClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClustersyncDownIntfsBeforeSessSyncArrayOutput)
}

type SystemClustersyncDownIntfsBeforeSessSyncOutput struct{ *pulumi.OutputState }

func (SystemClustersyncDownIntfsBeforeSessSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o SystemClustersyncDownIntfsBeforeSessSyncOutput) ToSystemClustersyncDownIntfsBeforeSessSyncOutput() SystemClustersyncDownIntfsBeforeSessSyncOutput {
	return o
}

func (o SystemClustersyncDownIntfsBeforeSessSyncOutput) ToSystemClustersyncDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) SystemClustersyncDownIntfsBeforeSessSyncOutput {
	return o
}

// Interface name.
func (o SystemClustersyncDownIntfsBeforeSessSyncOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClustersyncDownIntfsBeforeSessSync) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemClustersyncDownIntfsBeforeSessSyncArrayOutput struct{ *pulumi.OutputState }

func (SystemClustersyncDownIntfsBeforeSessSyncArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClustersyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o SystemClustersyncDownIntfsBeforeSessSyncArrayOutput) ToSystemClustersyncDownIntfsBeforeSessSyncArrayOutput() SystemClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o SystemClustersyncDownIntfsBeforeSessSyncArrayOutput) ToSystemClustersyncDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) SystemClustersyncDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o SystemClustersyncDownIntfsBeforeSessSyncArrayOutput) Index(i pulumi.IntInput) SystemClustersyncDownIntfsBeforeSessSyncOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemClustersyncDownIntfsBeforeSessSync {
		return vs[0].([]SystemClustersyncDownIntfsBeforeSessSync)[vs[1].(int)]
	}).(SystemClustersyncDownIntfsBeforeSessSyncOutput)
}

type SystemClustersyncSessionSyncFilter struct {
	// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
	CustomServices []SystemClustersyncSessionSyncFilterCustomService `pulumi:"customServices"`
	// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr *string `pulumi:"dstaddr"`
	// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr6 *string `pulumi:"dstaddr6"`
	// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
	Dstintf *string `pulumi:"dstintf"`
	// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr *string `pulumi:"srcaddr"`
	// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr6 *string `pulumi:"srcaddr6"`
	// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
	Srcintf *string `pulumi:"srcintf"`
}

// SystemClustersyncSessionSyncFilterInput is an input type that accepts SystemClustersyncSessionSyncFilterArgs and SystemClustersyncSessionSyncFilterOutput values.
// You can construct a concrete instance of `SystemClustersyncSessionSyncFilterInput` via:
//
//	SystemClustersyncSessionSyncFilterArgs{...}
type SystemClustersyncSessionSyncFilterInput interface {
	pulumi.Input

	ToSystemClustersyncSessionSyncFilterOutput() SystemClustersyncSessionSyncFilterOutput
	ToSystemClustersyncSessionSyncFilterOutputWithContext(context.Context) SystemClustersyncSessionSyncFilterOutput
}

type SystemClustersyncSessionSyncFilterArgs struct {
	// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
	CustomServices SystemClustersyncSessionSyncFilterCustomServiceArrayInput `pulumi:"customServices"`
	// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr pulumi.StringPtrInput `pulumi:"dstaddr"`
	// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
	Dstaddr6 pulumi.StringPtrInput `pulumi:"dstaddr6"`
	// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
	Dstintf pulumi.StringPtrInput `pulumi:"dstintf"`
	// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr pulumi.StringPtrInput `pulumi:"srcaddr"`
	// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
	Srcaddr6 pulumi.StringPtrInput `pulumi:"srcaddr6"`
	// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
	Srcintf pulumi.StringPtrInput `pulumi:"srcintf"`
}

func (SystemClustersyncSessionSyncFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClustersyncSessionSyncFilter)(nil)).Elem()
}

func (i SystemClustersyncSessionSyncFilterArgs) ToSystemClustersyncSessionSyncFilterOutput() SystemClustersyncSessionSyncFilterOutput {
	return i.ToSystemClustersyncSessionSyncFilterOutputWithContext(context.Background())
}

func (i SystemClustersyncSessionSyncFilterArgs) ToSystemClustersyncSessionSyncFilterOutputWithContext(ctx context.Context) SystemClustersyncSessionSyncFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClustersyncSessionSyncFilterOutput)
}

func (i SystemClustersyncSessionSyncFilterArgs) ToSystemClustersyncSessionSyncFilterPtrOutput() SystemClustersyncSessionSyncFilterPtrOutput {
	return i.ToSystemClustersyncSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i SystemClustersyncSessionSyncFilterArgs) ToSystemClustersyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemClustersyncSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClustersyncSessionSyncFilterOutput).ToSystemClustersyncSessionSyncFilterPtrOutputWithContext(ctx)
}

// SystemClustersyncSessionSyncFilterPtrInput is an input type that accepts SystemClustersyncSessionSyncFilterArgs, SystemClustersyncSessionSyncFilterPtr and SystemClustersyncSessionSyncFilterPtrOutput values.
// You can construct a concrete instance of `SystemClustersyncSessionSyncFilterPtrInput` via:
//
//	        SystemClustersyncSessionSyncFilterArgs{...}
//
//	or:
//
//	        nil
type SystemClustersyncSessionSyncFilterPtrInput interface {
	pulumi.Input

	ToSystemClustersyncSessionSyncFilterPtrOutput() SystemClustersyncSessionSyncFilterPtrOutput
	ToSystemClustersyncSessionSyncFilterPtrOutputWithContext(context.Context) SystemClustersyncSessionSyncFilterPtrOutput
}

type systemClustersyncSessionSyncFilterPtrType SystemClustersyncSessionSyncFilterArgs

func SystemClustersyncSessionSyncFilterPtr(v *SystemClustersyncSessionSyncFilterArgs) SystemClustersyncSessionSyncFilterPtrInput {
	return (*systemClustersyncSessionSyncFilterPtrType)(v)
}

func (*systemClustersyncSessionSyncFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemClustersyncSessionSyncFilter)(nil)).Elem()
}

func (i *systemClustersyncSessionSyncFilterPtrType) ToSystemClustersyncSessionSyncFilterPtrOutput() SystemClustersyncSessionSyncFilterPtrOutput {
	return i.ToSystemClustersyncSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i *systemClustersyncSessionSyncFilterPtrType) ToSystemClustersyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemClustersyncSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClustersyncSessionSyncFilterPtrOutput)
}

type SystemClustersyncSessionSyncFilterOutput struct{ *pulumi.OutputState }

func (SystemClustersyncSessionSyncFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClustersyncSessionSyncFilter)(nil)).Elem()
}

func (o SystemClustersyncSessionSyncFilterOutput) ToSystemClustersyncSessionSyncFilterOutput() SystemClustersyncSessionSyncFilterOutput {
	return o
}

func (o SystemClustersyncSessionSyncFilterOutput) ToSystemClustersyncSessionSyncFilterOutputWithContext(ctx context.Context) SystemClustersyncSessionSyncFilterOutput {
	return o
}

func (o SystemClustersyncSessionSyncFilterOutput) ToSystemClustersyncSessionSyncFilterPtrOutput() SystemClustersyncSessionSyncFilterPtrOutput {
	return o.ToSystemClustersyncSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (o SystemClustersyncSessionSyncFilterOutput) ToSystemClustersyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemClustersyncSessionSyncFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemClustersyncSessionSyncFilter) *SystemClustersyncSessionSyncFilter {
		return &v
	}).(SystemClustersyncSessionSyncFilterPtrOutput)
}

// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
func (o SystemClustersyncSessionSyncFilterOutput) CustomServices() SystemClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v SystemClustersyncSessionSyncFilter) []SystemClustersyncSessionSyncFilterCustomService {
		return v.CustomServices
	}).(SystemClustersyncSessionSyncFilterCustomServiceArrayOutput)
}

// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
func (o SystemClustersyncSessionSyncFilterOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClustersyncSessionSyncFilter) *string { return v.Dstaddr }).(pulumi.StringPtrOutput)
}

// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
func (o SystemClustersyncSessionSyncFilterOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClustersyncSessionSyncFilter) *string { return v.Dstaddr6 }).(pulumi.StringPtrOutput)
}

// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
func (o SystemClustersyncSessionSyncFilterOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClustersyncSessionSyncFilter) *string { return v.Dstintf }).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
func (o SystemClustersyncSessionSyncFilterOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClustersyncSessionSyncFilter) *string { return v.Srcaddr }).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
func (o SystemClustersyncSessionSyncFilterOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClustersyncSessionSyncFilter) *string { return v.Srcaddr6 }).(pulumi.StringPtrOutput)
}

// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
func (o SystemClustersyncSessionSyncFilterOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClustersyncSessionSyncFilter) *string { return v.Srcintf }).(pulumi.StringPtrOutput)
}

type SystemClustersyncSessionSyncFilterPtrOutput struct{ *pulumi.OutputState }

func (SystemClustersyncSessionSyncFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemClustersyncSessionSyncFilter)(nil)).Elem()
}

func (o SystemClustersyncSessionSyncFilterPtrOutput) ToSystemClustersyncSessionSyncFilterPtrOutput() SystemClustersyncSessionSyncFilterPtrOutput {
	return o
}

func (o SystemClustersyncSessionSyncFilterPtrOutput) ToSystemClustersyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemClustersyncSessionSyncFilterPtrOutput {
	return o
}

func (o SystemClustersyncSessionSyncFilterPtrOutput) Elem() SystemClustersyncSessionSyncFilterOutput {
	return o.ApplyT(func(v *SystemClustersyncSessionSyncFilter) SystemClustersyncSessionSyncFilter {
		if v != nil {
			return *v
		}
		var ret SystemClustersyncSessionSyncFilter
		return ret
	}).(SystemClustersyncSessionSyncFilterOutput)
}

// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custome services. The structure of `customService` block is documented below.
func (o SystemClustersyncSessionSyncFilterPtrOutput) CustomServices() SystemClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v *SystemClustersyncSessionSyncFilter) []SystemClustersyncSessionSyncFilterCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(SystemClustersyncSessionSyncFilterCustomServiceArrayOutput)
}

// Only sessions to this IPv4 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
func (o SystemClustersyncSessionSyncFilterPtrOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr
	}).(pulumi.StringPtrOutput)
}

// Only sessions to this IPv6 address are synchronized. You can only enter one address. To synchronize sessions for multiple destination addresses, add multiple filters.
func (o SystemClustersyncSessionSyncFilterPtrOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr6
	}).(pulumi.StringPtrOutput)
}

// Only sessions to this interface are synchronized. You can only enter one interface name. To synchronize sessions to multiple destination interfaces, add multiple filters.
func (o SystemClustersyncSessionSyncFilterPtrOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstintf
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv4 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
func (o SystemClustersyncSessionSyncFilterPtrOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv6 address are synchronized. You can only enter one address. To synchronize sessions from multiple source addresses, add multiple filters.
func (o SystemClustersyncSessionSyncFilterPtrOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr6
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this interface are synchronized. You can only enter one interface name. To synchronize sessions for multiple source interfaces, add multiple filters.
func (o SystemClustersyncSessionSyncFilterPtrOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClustersyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcintf
	}).(pulumi.StringPtrOutput)
}

type SystemClustersyncSessionSyncFilterCustomService struct {
	// Custom service destination port range.
	DstPortRange *string `pulumi:"dstPortRange"`
	// Custom service ID.
	Id *int `pulumi:"id"`
	// Custom service source port range.
	SrcPortRange *string `pulumi:"srcPortRange"`
}

// SystemClustersyncSessionSyncFilterCustomServiceInput is an input type that accepts SystemClustersyncSessionSyncFilterCustomServiceArgs and SystemClustersyncSessionSyncFilterCustomServiceOutput values.
// You can construct a concrete instance of `SystemClustersyncSessionSyncFilterCustomServiceInput` via:
//
//	SystemClustersyncSessionSyncFilterCustomServiceArgs{...}
type SystemClustersyncSessionSyncFilterCustomServiceInput interface {
	pulumi.Input

	ToSystemClustersyncSessionSyncFilterCustomServiceOutput() SystemClustersyncSessionSyncFilterCustomServiceOutput
	ToSystemClustersyncSessionSyncFilterCustomServiceOutputWithContext(context.Context) SystemClustersyncSessionSyncFilterCustomServiceOutput
}

type SystemClustersyncSessionSyncFilterCustomServiceArgs struct {
	// Custom service destination port range.
	DstPortRange pulumi.StringPtrInput `pulumi:"dstPortRange"`
	// Custom service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Custom service source port range.
	SrcPortRange pulumi.StringPtrInput `pulumi:"srcPortRange"`
}

func (SystemClustersyncSessionSyncFilterCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (i SystemClustersyncSessionSyncFilterCustomServiceArgs) ToSystemClustersyncSessionSyncFilterCustomServiceOutput() SystemClustersyncSessionSyncFilterCustomServiceOutput {
	return i.ToSystemClustersyncSessionSyncFilterCustomServiceOutputWithContext(context.Background())
}

func (i SystemClustersyncSessionSyncFilterCustomServiceArgs) ToSystemClustersyncSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) SystemClustersyncSessionSyncFilterCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClustersyncSessionSyncFilterCustomServiceOutput)
}

// SystemClustersyncSessionSyncFilterCustomServiceArrayInput is an input type that accepts SystemClustersyncSessionSyncFilterCustomServiceArray and SystemClustersyncSessionSyncFilterCustomServiceArrayOutput values.
// You can construct a concrete instance of `SystemClustersyncSessionSyncFilterCustomServiceArrayInput` via:
//
//	SystemClustersyncSessionSyncFilterCustomServiceArray{ SystemClustersyncSessionSyncFilterCustomServiceArgs{...} }
type SystemClustersyncSessionSyncFilterCustomServiceArrayInput interface {
	pulumi.Input

	ToSystemClustersyncSessionSyncFilterCustomServiceArrayOutput() SystemClustersyncSessionSyncFilterCustomServiceArrayOutput
	ToSystemClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(context.Context) SystemClustersyncSessionSyncFilterCustomServiceArrayOutput
}

type SystemClustersyncSessionSyncFilterCustomServiceArray []SystemClustersyncSessionSyncFilterCustomServiceInput

func (SystemClustersyncSessionSyncFilterCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (i SystemClustersyncSessionSyncFilterCustomServiceArray) ToSystemClustersyncSessionSyncFilterCustomServiceArrayOutput() SystemClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return i.ToSystemClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(context.Background())
}

func (i SystemClustersyncSessionSyncFilterCustomServiceArray) ToSystemClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) SystemClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClustersyncSessionSyncFilterCustomServiceArrayOutput)
}

type SystemClustersyncSessionSyncFilterCustomServiceOutput struct{ *pulumi.OutputState }

func (SystemClustersyncSessionSyncFilterCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (o SystemClustersyncSessionSyncFilterCustomServiceOutput) ToSystemClustersyncSessionSyncFilterCustomServiceOutput() SystemClustersyncSessionSyncFilterCustomServiceOutput {
	return o
}

func (o SystemClustersyncSessionSyncFilterCustomServiceOutput) ToSystemClustersyncSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) SystemClustersyncSessionSyncFilterCustomServiceOutput {
	return o
}

// Custom service destination port range.
func (o SystemClustersyncSessionSyncFilterCustomServiceOutput) DstPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClustersyncSessionSyncFilterCustomService) *string { return v.DstPortRange }).(pulumi.StringPtrOutput)
}

// Custom service ID.
func (o SystemClustersyncSessionSyncFilterCustomServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemClustersyncSessionSyncFilterCustomService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Custom service source port range.
func (o SystemClustersyncSessionSyncFilterCustomServiceOutput) SrcPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClustersyncSessionSyncFilterCustomService) *string { return v.SrcPortRange }).(pulumi.StringPtrOutput)
}

type SystemClustersyncSessionSyncFilterCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (SystemClustersyncSessionSyncFilterCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClustersyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (o SystemClustersyncSessionSyncFilterCustomServiceArrayOutput) ToSystemClustersyncSessionSyncFilterCustomServiceArrayOutput() SystemClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o SystemClustersyncSessionSyncFilterCustomServiceArrayOutput) ToSystemClustersyncSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) SystemClustersyncSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o SystemClustersyncSessionSyncFilterCustomServiceArrayOutput) Index(i pulumi.IntInput) SystemClustersyncSessionSyncFilterCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemClustersyncSessionSyncFilterCustomService {
		return vs[0].([]SystemClustersyncSessionSyncFilterCustomService)[vs[1].(int)]
	}).(SystemClustersyncSessionSyncFilterCustomServiceOutput)
}

type SystemClustersyncSyncvd struct {
	// VDOM name.
	Name *string `pulumi:"name"`
}

// SystemClustersyncSyncvdInput is an input type that accepts SystemClustersyncSyncvdArgs and SystemClustersyncSyncvdOutput values.
// You can construct a concrete instance of `SystemClustersyncSyncvdInput` via:
//
//	SystemClustersyncSyncvdArgs{...}
type SystemClustersyncSyncvdInput interface {
	pulumi.Input

	ToSystemClustersyncSyncvdOutput() SystemClustersyncSyncvdOutput
	ToSystemClustersyncSyncvdOutputWithContext(context.Context) SystemClustersyncSyncvdOutput
}

type SystemClustersyncSyncvdArgs struct {
	// VDOM name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemClustersyncSyncvdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClustersyncSyncvd)(nil)).Elem()
}

func (i SystemClustersyncSyncvdArgs) ToSystemClustersyncSyncvdOutput() SystemClustersyncSyncvdOutput {
	return i.ToSystemClustersyncSyncvdOutputWithContext(context.Background())
}

func (i SystemClustersyncSyncvdArgs) ToSystemClustersyncSyncvdOutputWithContext(ctx context.Context) SystemClustersyncSyncvdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClustersyncSyncvdOutput)
}

// SystemClustersyncSyncvdArrayInput is an input type that accepts SystemClustersyncSyncvdArray and SystemClustersyncSyncvdArrayOutput values.
// You can construct a concrete instance of `SystemClustersyncSyncvdArrayInput` via:
//
//	SystemClustersyncSyncvdArray{ SystemClustersyncSyncvdArgs{...} }
type SystemClustersyncSyncvdArrayInput interface {
	pulumi.Input

	ToSystemClustersyncSyncvdArrayOutput() SystemClustersyncSyncvdArrayOutput
	ToSystemClustersyncSyncvdArrayOutputWithContext(context.Context) SystemClustersyncSyncvdArrayOutput
}

type SystemClustersyncSyncvdArray []SystemClustersyncSyncvdInput

func (SystemClustersyncSyncvdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClustersyncSyncvd)(nil)).Elem()
}

func (i SystemClustersyncSyncvdArray) ToSystemClustersyncSyncvdArrayOutput() SystemClustersyncSyncvdArrayOutput {
	return i.ToSystemClustersyncSyncvdArrayOutputWithContext(context.Background())
}

func (i SystemClustersyncSyncvdArray) ToSystemClustersyncSyncvdArrayOutputWithContext(ctx context.Context) SystemClustersyncSyncvdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClustersyncSyncvdArrayOutput)
}

type SystemClustersyncSyncvdOutput struct{ *pulumi.OutputState }

func (SystemClustersyncSyncvdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClustersyncSyncvd)(nil)).Elem()
}

func (o SystemClustersyncSyncvdOutput) ToSystemClustersyncSyncvdOutput() SystemClustersyncSyncvdOutput {
	return o
}

func (o SystemClustersyncSyncvdOutput) ToSystemClustersyncSyncvdOutputWithContext(ctx context.Context) SystemClustersyncSyncvdOutput {
	return o
}

// VDOM name.
func (o SystemClustersyncSyncvdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClustersyncSyncvd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemClustersyncSyncvdArrayOutput struct{ *pulumi.OutputState }

func (SystemClustersyncSyncvdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClustersyncSyncvd)(nil)).Elem()
}

func (o SystemClustersyncSyncvdArrayOutput) ToSystemClustersyncSyncvdArrayOutput() SystemClustersyncSyncvdArrayOutput {
	return o
}

func (o SystemClustersyncSyncvdArrayOutput) ToSystemClustersyncSyncvdArrayOutputWithContext(ctx context.Context) SystemClustersyncSyncvdArrayOutput {
	return o
}

func (o SystemClustersyncSyncvdArrayOutput) Index(i pulumi.IntInput) SystemClustersyncSyncvdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemClustersyncSyncvd {
		return vs[0].([]SystemClustersyncSyncvd)[vs[1].(int)]
	}).(SystemClustersyncSyncvdOutput)
}

type SystemCsfFabricConnector struct {
	// Override access profile.
	Accprofile *string `pulumi:"accprofile"`
	// Enable/disable downstream device write access to configuration. Valid values: `enable`, `disable`.
	ConfigurationWriteAccess *string `pulumi:"configurationWriteAccess"`
	// Serial.
	Serial *string `pulumi:"serial"`
}

// SystemCsfFabricConnectorInput is an input type that accepts SystemCsfFabricConnectorArgs and SystemCsfFabricConnectorOutput values.
// You can construct a concrete instance of `SystemCsfFabricConnectorInput` via:
//
//	SystemCsfFabricConnectorArgs{...}
type SystemCsfFabricConnectorInput interface {
	pulumi.Input

	ToSystemCsfFabricConnectorOutput() SystemCsfFabricConnectorOutput
	ToSystemCsfFabricConnectorOutputWithContext(context.Context) SystemCsfFabricConnectorOutput
}

type SystemCsfFabricConnectorArgs struct {
	// Override access profile.
	Accprofile pulumi.StringPtrInput `pulumi:"accprofile"`
	// Enable/disable downstream device write access to configuration. Valid values: `enable`, `disable`.
	ConfigurationWriteAccess pulumi.StringPtrInput `pulumi:"configurationWriteAccess"`
	// Serial.
	Serial pulumi.StringPtrInput `pulumi:"serial"`
}

func (SystemCsfFabricConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfFabricConnector)(nil)).Elem()
}

func (i SystemCsfFabricConnectorArgs) ToSystemCsfFabricConnectorOutput() SystemCsfFabricConnectorOutput {
	return i.ToSystemCsfFabricConnectorOutputWithContext(context.Background())
}

func (i SystemCsfFabricConnectorArgs) ToSystemCsfFabricConnectorOutputWithContext(ctx context.Context) SystemCsfFabricConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfFabricConnectorOutput)
}

// SystemCsfFabricConnectorArrayInput is an input type that accepts SystemCsfFabricConnectorArray and SystemCsfFabricConnectorArrayOutput values.
// You can construct a concrete instance of `SystemCsfFabricConnectorArrayInput` via:
//
//	SystemCsfFabricConnectorArray{ SystemCsfFabricConnectorArgs{...} }
type SystemCsfFabricConnectorArrayInput interface {
	pulumi.Input

	ToSystemCsfFabricConnectorArrayOutput() SystemCsfFabricConnectorArrayOutput
	ToSystemCsfFabricConnectorArrayOutputWithContext(context.Context) SystemCsfFabricConnectorArrayOutput
}

type SystemCsfFabricConnectorArray []SystemCsfFabricConnectorInput

func (SystemCsfFabricConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfFabricConnector)(nil)).Elem()
}

func (i SystemCsfFabricConnectorArray) ToSystemCsfFabricConnectorArrayOutput() SystemCsfFabricConnectorArrayOutput {
	return i.ToSystemCsfFabricConnectorArrayOutputWithContext(context.Background())
}

func (i SystemCsfFabricConnectorArray) ToSystemCsfFabricConnectorArrayOutputWithContext(ctx context.Context) SystemCsfFabricConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfFabricConnectorArrayOutput)
}

type SystemCsfFabricConnectorOutput struct{ *pulumi.OutputState }

func (SystemCsfFabricConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfFabricConnector)(nil)).Elem()
}

func (o SystemCsfFabricConnectorOutput) ToSystemCsfFabricConnectorOutput() SystemCsfFabricConnectorOutput {
	return o
}

func (o SystemCsfFabricConnectorOutput) ToSystemCsfFabricConnectorOutputWithContext(ctx context.Context) SystemCsfFabricConnectorOutput {
	return o
}

// Override access profile.
func (o SystemCsfFabricConnectorOutput) Accprofile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricConnector) *string { return v.Accprofile }).(pulumi.StringPtrOutput)
}

// Enable/disable downstream device write access to configuration. Valid values: `enable`, `disable`.
func (o SystemCsfFabricConnectorOutput) ConfigurationWriteAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricConnector) *string { return v.ConfigurationWriteAccess }).(pulumi.StringPtrOutput)
}

// Serial.
func (o SystemCsfFabricConnectorOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricConnector) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type SystemCsfFabricConnectorArrayOutput struct{ *pulumi.OutputState }

func (SystemCsfFabricConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfFabricConnector)(nil)).Elem()
}

func (o SystemCsfFabricConnectorArrayOutput) ToSystemCsfFabricConnectorArrayOutput() SystemCsfFabricConnectorArrayOutput {
	return o
}

func (o SystemCsfFabricConnectorArrayOutput) ToSystemCsfFabricConnectorArrayOutputWithContext(ctx context.Context) SystemCsfFabricConnectorArrayOutput {
	return o
}

func (o SystemCsfFabricConnectorArrayOutput) Index(i pulumi.IntInput) SystemCsfFabricConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemCsfFabricConnector {
		return vs[0].([]SystemCsfFabricConnector)[vs[1].(int)]
	}).(SystemCsfFabricConnectorOutput)
}

type SystemCsfFabricDevice struct {
	// Device access token.
	AccessToken *string `pulumi:"accessToken"`
	// Device IP.
	DeviceIp *string `pulumi:"deviceIp"`
	// Device type. Valid values: `fortimail`.
	DeviceType *string `pulumi:"deviceType"`
	// HTTPS port for fabric device.
	HttpsPort *int `pulumi:"httpsPort"`
	// Device login name.
	Login *string `pulumi:"login"`
	// Device name.
	Name *string `pulumi:"name"`
	// Device login password.
	Password *string `pulumi:"password"`
}

// SystemCsfFabricDeviceInput is an input type that accepts SystemCsfFabricDeviceArgs and SystemCsfFabricDeviceOutput values.
// You can construct a concrete instance of `SystemCsfFabricDeviceInput` via:
//
//	SystemCsfFabricDeviceArgs{...}
type SystemCsfFabricDeviceInput interface {
	pulumi.Input

	ToSystemCsfFabricDeviceOutput() SystemCsfFabricDeviceOutput
	ToSystemCsfFabricDeviceOutputWithContext(context.Context) SystemCsfFabricDeviceOutput
}

type SystemCsfFabricDeviceArgs struct {
	// Device access token.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// Device IP.
	DeviceIp pulumi.StringPtrInput `pulumi:"deviceIp"`
	// Device type. Valid values: `fortimail`.
	DeviceType pulumi.StringPtrInput `pulumi:"deviceType"`
	// HTTPS port for fabric device.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Device login name.
	Login pulumi.StringPtrInput `pulumi:"login"`
	// Device name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Device login password.
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (SystemCsfFabricDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfFabricDevice)(nil)).Elem()
}

func (i SystemCsfFabricDeviceArgs) ToSystemCsfFabricDeviceOutput() SystemCsfFabricDeviceOutput {
	return i.ToSystemCsfFabricDeviceOutputWithContext(context.Background())
}

func (i SystemCsfFabricDeviceArgs) ToSystemCsfFabricDeviceOutputWithContext(ctx context.Context) SystemCsfFabricDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfFabricDeviceOutput)
}

// SystemCsfFabricDeviceArrayInput is an input type that accepts SystemCsfFabricDeviceArray and SystemCsfFabricDeviceArrayOutput values.
// You can construct a concrete instance of `SystemCsfFabricDeviceArrayInput` via:
//
//	SystemCsfFabricDeviceArray{ SystemCsfFabricDeviceArgs{...} }
type SystemCsfFabricDeviceArrayInput interface {
	pulumi.Input

	ToSystemCsfFabricDeviceArrayOutput() SystemCsfFabricDeviceArrayOutput
	ToSystemCsfFabricDeviceArrayOutputWithContext(context.Context) SystemCsfFabricDeviceArrayOutput
}

type SystemCsfFabricDeviceArray []SystemCsfFabricDeviceInput

func (SystemCsfFabricDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfFabricDevice)(nil)).Elem()
}

func (i SystemCsfFabricDeviceArray) ToSystemCsfFabricDeviceArrayOutput() SystemCsfFabricDeviceArrayOutput {
	return i.ToSystemCsfFabricDeviceArrayOutputWithContext(context.Background())
}

func (i SystemCsfFabricDeviceArray) ToSystemCsfFabricDeviceArrayOutputWithContext(ctx context.Context) SystemCsfFabricDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfFabricDeviceArrayOutput)
}

type SystemCsfFabricDeviceOutput struct{ *pulumi.OutputState }

func (SystemCsfFabricDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfFabricDevice)(nil)).Elem()
}

func (o SystemCsfFabricDeviceOutput) ToSystemCsfFabricDeviceOutput() SystemCsfFabricDeviceOutput {
	return o
}

func (o SystemCsfFabricDeviceOutput) ToSystemCsfFabricDeviceOutputWithContext(ctx context.Context) SystemCsfFabricDeviceOutput {
	return o
}

// Device access token.
func (o SystemCsfFabricDeviceOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// Device IP.
func (o SystemCsfFabricDeviceOutput) DeviceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.DeviceIp }).(pulumi.StringPtrOutput)
}

// Device type. Valid values: `fortimail`.
func (o SystemCsfFabricDeviceOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.DeviceType }).(pulumi.StringPtrOutput)
}

// HTTPS port for fabric device.
func (o SystemCsfFabricDeviceOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Device login name.
func (o SystemCsfFabricDeviceOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.Login }).(pulumi.StringPtrOutput)
}

// Device name.
func (o SystemCsfFabricDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Device login password.
func (o SystemCsfFabricDeviceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type SystemCsfFabricDeviceArrayOutput struct{ *pulumi.OutputState }

func (SystemCsfFabricDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfFabricDevice)(nil)).Elem()
}

func (o SystemCsfFabricDeviceArrayOutput) ToSystemCsfFabricDeviceArrayOutput() SystemCsfFabricDeviceArrayOutput {
	return o
}

func (o SystemCsfFabricDeviceArrayOutput) ToSystemCsfFabricDeviceArrayOutputWithContext(ctx context.Context) SystemCsfFabricDeviceArrayOutput {
	return o
}

func (o SystemCsfFabricDeviceArrayOutput) Index(i pulumi.IntInput) SystemCsfFabricDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemCsfFabricDevice {
		return vs[0].([]SystemCsfFabricDevice)[vs[1].(int)]
	}).(SystemCsfFabricDeviceOutput)
}

type SystemCsfTrustedList struct {
	// Security fabric authorization action. Valid values: `accept`, `deny`.
	Action *string `pulumi:"action"`
	// Authorization type. Valid values: `serial`, `certificate`.
	AuthorizationType *string `pulumi:"authorizationType"`
	// Certificate.
	Certificate *string `pulumi:"certificate"`
	// Trust authorizations by this node's administrator. Valid values: `enable`, `disable`.
	DownstreamAuthorization *string `pulumi:"downstreamAuthorization"`
	// HA members.
	HaMembers *string `pulumi:"haMembers"`
	// Name.
	Name *string `pulumi:"name"`
	// Serial.
	Serial *string `pulumi:"serial"`
}

// SystemCsfTrustedListInput is an input type that accepts SystemCsfTrustedListArgs and SystemCsfTrustedListOutput values.
// You can construct a concrete instance of `SystemCsfTrustedListInput` via:
//
//	SystemCsfTrustedListArgs{...}
type SystemCsfTrustedListInput interface {
	pulumi.Input

	ToSystemCsfTrustedListOutput() SystemCsfTrustedListOutput
	ToSystemCsfTrustedListOutputWithContext(context.Context) SystemCsfTrustedListOutput
}

type SystemCsfTrustedListArgs struct {
	// Security fabric authorization action. Valid values: `accept`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Authorization type. Valid values: `serial`, `certificate`.
	AuthorizationType pulumi.StringPtrInput `pulumi:"authorizationType"`
	// Certificate.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// Trust authorizations by this node's administrator. Valid values: `enable`, `disable`.
	DownstreamAuthorization pulumi.StringPtrInput `pulumi:"downstreamAuthorization"`
	// HA members.
	HaMembers pulumi.StringPtrInput `pulumi:"haMembers"`
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Serial.
	Serial pulumi.StringPtrInput `pulumi:"serial"`
}

func (SystemCsfTrustedListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfTrustedList)(nil)).Elem()
}

func (i SystemCsfTrustedListArgs) ToSystemCsfTrustedListOutput() SystemCsfTrustedListOutput {
	return i.ToSystemCsfTrustedListOutputWithContext(context.Background())
}

func (i SystemCsfTrustedListArgs) ToSystemCsfTrustedListOutputWithContext(ctx context.Context) SystemCsfTrustedListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfTrustedListOutput)
}

// SystemCsfTrustedListArrayInput is an input type that accepts SystemCsfTrustedListArray and SystemCsfTrustedListArrayOutput values.
// You can construct a concrete instance of `SystemCsfTrustedListArrayInput` via:
//
//	SystemCsfTrustedListArray{ SystemCsfTrustedListArgs{...} }
type SystemCsfTrustedListArrayInput interface {
	pulumi.Input

	ToSystemCsfTrustedListArrayOutput() SystemCsfTrustedListArrayOutput
	ToSystemCsfTrustedListArrayOutputWithContext(context.Context) SystemCsfTrustedListArrayOutput
}

type SystemCsfTrustedListArray []SystemCsfTrustedListInput

func (SystemCsfTrustedListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfTrustedList)(nil)).Elem()
}

func (i SystemCsfTrustedListArray) ToSystemCsfTrustedListArrayOutput() SystemCsfTrustedListArrayOutput {
	return i.ToSystemCsfTrustedListArrayOutputWithContext(context.Background())
}

func (i SystemCsfTrustedListArray) ToSystemCsfTrustedListArrayOutputWithContext(ctx context.Context) SystemCsfTrustedListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfTrustedListArrayOutput)
}

type SystemCsfTrustedListOutput struct{ *pulumi.OutputState }

func (SystemCsfTrustedListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfTrustedList)(nil)).Elem()
}

func (o SystemCsfTrustedListOutput) ToSystemCsfTrustedListOutput() SystemCsfTrustedListOutput {
	return o
}

func (o SystemCsfTrustedListOutput) ToSystemCsfTrustedListOutputWithContext(ctx context.Context) SystemCsfTrustedListOutput {
	return o
}

// Security fabric authorization action. Valid values: `accept`, `deny`.
func (o SystemCsfTrustedListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Authorization type. Valid values: `serial`, `certificate`.
func (o SystemCsfTrustedListOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.AuthorizationType }).(pulumi.StringPtrOutput)
}

// Certificate.
func (o SystemCsfTrustedListOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// Trust authorizations by this node's administrator. Valid values: `enable`, `disable`.
func (o SystemCsfTrustedListOutput) DownstreamAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.DownstreamAuthorization }).(pulumi.StringPtrOutput)
}

// HA members.
func (o SystemCsfTrustedListOutput) HaMembers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.HaMembers }).(pulumi.StringPtrOutput)
}

// Name.
func (o SystemCsfTrustedListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Serial.
func (o SystemCsfTrustedListOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type SystemCsfTrustedListArrayOutput struct{ *pulumi.OutputState }

func (SystemCsfTrustedListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfTrustedList)(nil)).Elem()
}

func (o SystemCsfTrustedListArrayOutput) ToSystemCsfTrustedListArrayOutput() SystemCsfTrustedListArrayOutput {
	return o
}

func (o SystemCsfTrustedListArrayOutput) ToSystemCsfTrustedListArrayOutputWithContext(ctx context.Context) SystemCsfTrustedListArrayOutput {
	return o
}

func (o SystemCsfTrustedListArrayOutput) Index(i pulumi.IntInput) SystemCsfTrustedListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemCsfTrustedList {
		return vs[0].([]SystemCsfTrustedList)[vs[1].(int)]
	}).(SystemCsfTrustedListOutput)
}

type SystemDdnsDdnsServerAddr struct {
	// IP address or FQDN of the server.
	Addr *string `pulumi:"addr"`
}

// SystemDdnsDdnsServerAddrInput is an input type that accepts SystemDdnsDdnsServerAddrArgs and SystemDdnsDdnsServerAddrOutput values.
// You can construct a concrete instance of `SystemDdnsDdnsServerAddrInput` via:
//
//	SystemDdnsDdnsServerAddrArgs{...}
type SystemDdnsDdnsServerAddrInput interface {
	pulumi.Input

	ToSystemDdnsDdnsServerAddrOutput() SystemDdnsDdnsServerAddrOutput
	ToSystemDdnsDdnsServerAddrOutputWithContext(context.Context) SystemDdnsDdnsServerAddrOutput
}

type SystemDdnsDdnsServerAddrArgs struct {
	// IP address or FQDN of the server.
	Addr pulumi.StringPtrInput `pulumi:"addr"`
}

func (SystemDdnsDdnsServerAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDdnsDdnsServerAddr)(nil)).Elem()
}

func (i SystemDdnsDdnsServerAddrArgs) ToSystemDdnsDdnsServerAddrOutput() SystemDdnsDdnsServerAddrOutput {
	return i.ToSystemDdnsDdnsServerAddrOutputWithContext(context.Background())
}

func (i SystemDdnsDdnsServerAddrArgs) ToSystemDdnsDdnsServerAddrOutputWithContext(ctx context.Context) SystemDdnsDdnsServerAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDdnsDdnsServerAddrOutput)
}

// SystemDdnsDdnsServerAddrArrayInput is an input type that accepts SystemDdnsDdnsServerAddrArray and SystemDdnsDdnsServerAddrArrayOutput values.
// You can construct a concrete instance of `SystemDdnsDdnsServerAddrArrayInput` via:
//
//	SystemDdnsDdnsServerAddrArray{ SystemDdnsDdnsServerAddrArgs{...} }
type SystemDdnsDdnsServerAddrArrayInput interface {
	pulumi.Input

	ToSystemDdnsDdnsServerAddrArrayOutput() SystemDdnsDdnsServerAddrArrayOutput
	ToSystemDdnsDdnsServerAddrArrayOutputWithContext(context.Context) SystemDdnsDdnsServerAddrArrayOutput
}

type SystemDdnsDdnsServerAddrArray []SystemDdnsDdnsServerAddrInput

func (SystemDdnsDdnsServerAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDdnsDdnsServerAddr)(nil)).Elem()
}

func (i SystemDdnsDdnsServerAddrArray) ToSystemDdnsDdnsServerAddrArrayOutput() SystemDdnsDdnsServerAddrArrayOutput {
	return i.ToSystemDdnsDdnsServerAddrArrayOutputWithContext(context.Background())
}

func (i SystemDdnsDdnsServerAddrArray) ToSystemDdnsDdnsServerAddrArrayOutputWithContext(ctx context.Context) SystemDdnsDdnsServerAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDdnsDdnsServerAddrArrayOutput)
}

type SystemDdnsDdnsServerAddrOutput struct{ *pulumi.OutputState }

func (SystemDdnsDdnsServerAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDdnsDdnsServerAddr)(nil)).Elem()
}

func (o SystemDdnsDdnsServerAddrOutput) ToSystemDdnsDdnsServerAddrOutput() SystemDdnsDdnsServerAddrOutput {
	return o
}

func (o SystemDdnsDdnsServerAddrOutput) ToSystemDdnsDdnsServerAddrOutputWithContext(ctx context.Context) SystemDdnsDdnsServerAddrOutput {
	return o
}

// IP address or FQDN of the server.
func (o SystemDdnsDdnsServerAddrOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDdnsDdnsServerAddr) *string { return v.Addr }).(pulumi.StringPtrOutput)
}

type SystemDdnsDdnsServerAddrArrayOutput struct{ *pulumi.OutputState }

func (SystemDdnsDdnsServerAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDdnsDdnsServerAddr)(nil)).Elem()
}

func (o SystemDdnsDdnsServerAddrArrayOutput) ToSystemDdnsDdnsServerAddrArrayOutput() SystemDdnsDdnsServerAddrArrayOutput {
	return o
}

func (o SystemDdnsDdnsServerAddrArrayOutput) ToSystemDdnsDdnsServerAddrArrayOutputWithContext(ctx context.Context) SystemDdnsDdnsServerAddrArrayOutput {
	return o
}

func (o SystemDdnsDdnsServerAddrArrayOutput) Index(i pulumi.IntInput) SystemDdnsDdnsServerAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDdnsDdnsServerAddr {
		return vs[0].([]SystemDdnsDdnsServerAddr)[vs[1].(int)]
	}).(SystemDdnsDdnsServerAddrOutput)
}

type SystemDdnsMonitorInterface struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemDdnsMonitorInterfaceInput is an input type that accepts SystemDdnsMonitorInterfaceArgs and SystemDdnsMonitorInterfaceOutput values.
// You can construct a concrete instance of `SystemDdnsMonitorInterfaceInput` via:
//
//	SystemDdnsMonitorInterfaceArgs{...}
type SystemDdnsMonitorInterfaceInput interface {
	pulumi.Input

	ToSystemDdnsMonitorInterfaceOutput() SystemDdnsMonitorInterfaceOutput
	ToSystemDdnsMonitorInterfaceOutputWithContext(context.Context) SystemDdnsMonitorInterfaceOutput
}

type SystemDdnsMonitorInterfaceArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemDdnsMonitorInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDdnsMonitorInterface)(nil)).Elem()
}

func (i SystemDdnsMonitorInterfaceArgs) ToSystemDdnsMonitorInterfaceOutput() SystemDdnsMonitorInterfaceOutput {
	return i.ToSystemDdnsMonitorInterfaceOutputWithContext(context.Background())
}

func (i SystemDdnsMonitorInterfaceArgs) ToSystemDdnsMonitorInterfaceOutputWithContext(ctx context.Context) SystemDdnsMonitorInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDdnsMonitorInterfaceOutput)
}

// SystemDdnsMonitorInterfaceArrayInput is an input type that accepts SystemDdnsMonitorInterfaceArray and SystemDdnsMonitorInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemDdnsMonitorInterfaceArrayInput` via:
//
//	SystemDdnsMonitorInterfaceArray{ SystemDdnsMonitorInterfaceArgs{...} }
type SystemDdnsMonitorInterfaceArrayInput interface {
	pulumi.Input

	ToSystemDdnsMonitorInterfaceArrayOutput() SystemDdnsMonitorInterfaceArrayOutput
	ToSystemDdnsMonitorInterfaceArrayOutputWithContext(context.Context) SystemDdnsMonitorInterfaceArrayOutput
}

type SystemDdnsMonitorInterfaceArray []SystemDdnsMonitorInterfaceInput

func (SystemDdnsMonitorInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDdnsMonitorInterface)(nil)).Elem()
}

func (i SystemDdnsMonitorInterfaceArray) ToSystemDdnsMonitorInterfaceArrayOutput() SystemDdnsMonitorInterfaceArrayOutput {
	return i.ToSystemDdnsMonitorInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemDdnsMonitorInterfaceArray) ToSystemDdnsMonitorInterfaceArrayOutputWithContext(ctx context.Context) SystemDdnsMonitorInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDdnsMonitorInterfaceArrayOutput)
}

type SystemDdnsMonitorInterfaceOutput struct{ *pulumi.OutputState }

func (SystemDdnsMonitorInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDdnsMonitorInterface)(nil)).Elem()
}

func (o SystemDdnsMonitorInterfaceOutput) ToSystemDdnsMonitorInterfaceOutput() SystemDdnsMonitorInterfaceOutput {
	return o
}

func (o SystemDdnsMonitorInterfaceOutput) ToSystemDdnsMonitorInterfaceOutputWithContext(ctx context.Context) SystemDdnsMonitorInterfaceOutput {
	return o
}

// Interface name.
func (o SystemDdnsMonitorInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDdnsMonitorInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemDdnsMonitorInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemDdnsMonitorInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDdnsMonitorInterface)(nil)).Elem()
}

func (o SystemDdnsMonitorInterfaceArrayOutput) ToSystemDdnsMonitorInterfaceArrayOutput() SystemDdnsMonitorInterfaceArrayOutput {
	return o
}

func (o SystemDdnsMonitorInterfaceArrayOutput) ToSystemDdnsMonitorInterfaceArrayOutputWithContext(ctx context.Context) SystemDdnsMonitorInterfaceArrayOutput {
	return o
}

func (o SystemDdnsMonitorInterfaceArrayOutput) Index(i pulumi.IntInput) SystemDdnsMonitorInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDdnsMonitorInterface {
		return vs[0].([]SystemDdnsMonitorInterface)[vs[1].(int)]
	}).(SystemDdnsMonitorInterfaceOutput)
}

type SystemDnsDomain struct {
	// DNS search domain list separated by space (maximum 8 domains)
	Domain *string `pulumi:"domain"`
}

// SystemDnsDomainInput is an input type that accepts SystemDnsDomainArgs and SystemDnsDomainOutput values.
// You can construct a concrete instance of `SystemDnsDomainInput` via:
//
//	SystemDnsDomainArgs{...}
type SystemDnsDomainInput interface {
	pulumi.Input

	ToSystemDnsDomainOutput() SystemDnsDomainOutput
	ToSystemDnsDomainOutputWithContext(context.Context) SystemDnsDomainOutput
}

type SystemDnsDomainArgs struct {
	// DNS search domain list separated by space (maximum 8 domains)
	Domain pulumi.StringPtrInput `pulumi:"domain"`
}

func (SystemDnsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsDomain)(nil)).Elem()
}

func (i SystemDnsDomainArgs) ToSystemDnsDomainOutput() SystemDnsDomainOutput {
	return i.ToSystemDnsDomainOutputWithContext(context.Background())
}

func (i SystemDnsDomainArgs) ToSystemDnsDomainOutputWithContext(ctx context.Context) SystemDnsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsDomainOutput)
}

// SystemDnsDomainArrayInput is an input type that accepts SystemDnsDomainArray and SystemDnsDomainArrayOutput values.
// You can construct a concrete instance of `SystemDnsDomainArrayInput` via:
//
//	SystemDnsDomainArray{ SystemDnsDomainArgs{...} }
type SystemDnsDomainArrayInput interface {
	pulumi.Input

	ToSystemDnsDomainArrayOutput() SystemDnsDomainArrayOutput
	ToSystemDnsDomainArrayOutputWithContext(context.Context) SystemDnsDomainArrayOutput
}

type SystemDnsDomainArray []SystemDnsDomainInput

func (SystemDnsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsDomain)(nil)).Elem()
}

func (i SystemDnsDomainArray) ToSystemDnsDomainArrayOutput() SystemDnsDomainArrayOutput {
	return i.ToSystemDnsDomainArrayOutputWithContext(context.Background())
}

func (i SystemDnsDomainArray) ToSystemDnsDomainArrayOutputWithContext(ctx context.Context) SystemDnsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsDomainArrayOutput)
}

type SystemDnsDomainOutput struct{ *pulumi.OutputState }

func (SystemDnsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsDomain)(nil)).Elem()
}

func (o SystemDnsDomainOutput) ToSystemDnsDomainOutput() SystemDnsDomainOutput {
	return o
}

func (o SystemDnsDomainOutput) ToSystemDnsDomainOutputWithContext(ctx context.Context) SystemDnsDomainOutput {
	return o
}

// DNS search domain list separated by space (maximum 8 domains)
func (o SystemDnsDomainOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsDomain) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

type SystemDnsDomainArrayOutput struct{ *pulumi.OutputState }

func (SystemDnsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsDomain)(nil)).Elem()
}

func (o SystemDnsDomainArrayOutput) ToSystemDnsDomainArrayOutput() SystemDnsDomainArrayOutput {
	return o
}

func (o SystemDnsDomainArrayOutput) ToSystemDnsDomainArrayOutputWithContext(ctx context.Context) SystemDnsDomainArrayOutput {
	return o
}

func (o SystemDnsDomainArrayOutput) Index(i pulumi.IntInput) SystemDnsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDnsDomain {
		return vs[0].([]SystemDnsDomain)[vs[1].(int)]
	}).(SystemDnsDomainOutput)
}

type SystemDnsServerHostname struct {
	// DNS server host name list separated by space (maximum 4 domains).
	Hostname *string `pulumi:"hostname"`
}

// SystemDnsServerHostnameInput is an input type that accepts SystemDnsServerHostnameArgs and SystemDnsServerHostnameOutput values.
// You can construct a concrete instance of `SystemDnsServerHostnameInput` via:
//
//	SystemDnsServerHostnameArgs{...}
type SystemDnsServerHostnameInput interface {
	pulumi.Input

	ToSystemDnsServerHostnameOutput() SystemDnsServerHostnameOutput
	ToSystemDnsServerHostnameOutputWithContext(context.Context) SystemDnsServerHostnameOutput
}

type SystemDnsServerHostnameArgs struct {
	// DNS server host name list separated by space (maximum 4 domains).
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
}

func (SystemDnsServerHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsServerHostname)(nil)).Elem()
}

func (i SystemDnsServerHostnameArgs) ToSystemDnsServerHostnameOutput() SystemDnsServerHostnameOutput {
	return i.ToSystemDnsServerHostnameOutputWithContext(context.Background())
}

func (i SystemDnsServerHostnameArgs) ToSystemDnsServerHostnameOutputWithContext(ctx context.Context) SystemDnsServerHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsServerHostnameOutput)
}

// SystemDnsServerHostnameArrayInput is an input type that accepts SystemDnsServerHostnameArray and SystemDnsServerHostnameArrayOutput values.
// You can construct a concrete instance of `SystemDnsServerHostnameArrayInput` via:
//
//	SystemDnsServerHostnameArray{ SystemDnsServerHostnameArgs{...} }
type SystemDnsServerHostnameArrayInput interface {
	pulumi.Input

	ToSystemDnsServerHostnameArrayOutput() SystemDnsServerHostnameArrayOutput
	ToSystemDnsServerHostnameArrayOutputWithContext(context.Context) SystemDnsServerHostnameArrayOutput
}

type SystemDnsServerHostnameArray []SystemDnsServerHostnameInput

func (SystemDnsServerHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsServerHostname)(nil)).Elem()
}

func (i SystemDnsServerHostnameArray) ToSystemDnsServerHostnameArrayOutput() SystemDnsServerHostnameArrayOutput {
	return i.ToSystemDnsServerHostnameArrayOutputWithContext(context.Background())
}

func (i SystemDnsServerHostnameArray) ToSystemDnsServerHostnameArrayOutputWithContext(ctx context.Context) SystemDnsServerHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsServerHostnameArrayOutput)
}

type SystemDnsServerHostnameOutput struct{ *pulumi.OutputState }

func (SystemDnsServerHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsServerHostname)(nil)).Elem()
}

func (o SystemDnsServerHostnameOutput) ToSystemDnsServerHostnameOutput() SystemDnsServerHostnameOutput {
	return o
}

func (o SystemDnsServerHostnameOutput) ToSystemDnsServerHostnameOutputWithContext(ctx context.Context) SystemDnsServerHostnameOutput {
	return o
}

// DNS server host name list separated by space (maximum 4 domains).
func (o SystemDnsServerHostnameOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsServerHostname) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

type SystemDnsServerHostnameArrayOutput struct{ *pulumi.OutputState }

func (SystemDnsServerHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsServerHostname)(nil)).Elem()
}

func (o SystemDnsServerHostnameArrayOutput) ToSystemDnsServerHostnameArrayOutput() SystemDnsServerHostnameArrayOutput {
	return o
}

func (o SystemDnsServerHostnameArrayOutput) ToSystemDnsServerHostnameArrayOutputWithContext(ctx context.Context) SystemDnsServerHostnameArrayOutput {
	return o
}

func (o SystemDnsServerHostnameArrayOutput) Index(i pulumi.IntInput) SystemDnsServerHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDnsServerHostname {
		return vs[0].([]SystemDnsServerHostname)[vs[1].(int)]
	}).(SystemDnsServerHostnameOutput)
}

type SystemDnsdatabaseDnsEntry struct {
	// Canonical name of the host.
	CanonicalName *string `pulumi:"canonicalName"`
	// Name of the host.
	Hostname *string `pulumi:"hostname"`
	// DNS entry ID.
	Id *int `pulumi:"id"`
	// IPv4 address of the host.
	Ip *string `pulumi:"ip"`
	// IPv6 address of the host.
	Ipv6 *string `pulumi:"ipv6"`
	// DNS entry preference, 0 is the highest preference (0 - 65535, default = 10)
	Preference *int `pulumi:"preference"`
	// Enable/disable resource record status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Time-to-live for this entry (0 to 2147483647 sec, default = 0).
	Ttl *int `pulumi:"ttl"`
	// Resource record type. Valid values: `A`, `NS`, `CNAME`, `MX`, `AAAA`, `PTR`, `PTR_V6`.
	Type *string `pulumi:"type"`
}

// SystemDnsdatabaseDnsEntryInput is an input type that accepts SystemDnsdatabaseDnsEntryArgs and SystemDnsdatabaseDnsEntryOutput values.
// You can construct a concrete instance of `SystemDnsdatabaseDnsEntryInput` via:
//
//	SystemDnsdatabaseDnsEntryArgs{...}
type SystemDnsdatabaseDnsEntryInput interface {
	pulumi.Input

	ToSystemDnsdatabaseDnsEntryOutput() SystemDnsdatabaseDnsEntryOutput
	ToSystemDnsdatabaseDnsEntryOutputWithContext(context.Context) SystemDnsdatabaseDnsEntryOutput
}

type SystemDnsdatabaseDnsEntryArgs struct {
	// Canonical name of the host.
	CanonicalName pulumi.StringPtrInput `pulumi:"canonicalName"`
	// Name of the host.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// DNS entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 address of the host.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// IPv6 address of the host.
	Ipv6 pulumi.StringPtrInput `pulumi:"ipv6"`
	// DNS entry preference, 0 is the highest preference (0 - 65535, default = 10)
	Preference pulumi.IntPtrInput `pulumi:"preference"`
	// Enable/disable resource record status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Time-to-live for this entry (0 to 2147483647 sec, default = 0).
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
	// Resource record type. Valid values: `A`, `NS`, `CNAME`, `MX`, `AAAA`, `PTR`, `PTR_V6`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SystemDnsdatabaseDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsdatabaseDnsEntry)(nil)).Elem()
}

func (i SystemDnsdatabaseDnsEntryArgs) ToSystemDnsdatabaseDnsEntryOutput() SystemDnsdatabaseDnsEntryOutput {
	return i.ToSystemDnsdatabaseDnsEntryOutputWithContext(context.Background())
}

func (i SystemDnsdatabaseDnsEntryArgs) ToSystemDnsdatabaseDnsEntryOutputWithContext(ctx context.Context) SystemDnsdatabaseDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsdatabaseDnsEntryOutput)
}

// SystemDnsdatabaseDnsEntryArrayInput is an input type that accepts SystemDnsdatabaseDnsEntryArray and SystemDnsdatabaseDnsEntryArrayOutput values.
// You can construct a concrete instance of `SystemDnsdatabaseDnsEntryArrayInput` via:
//
//	SystemDnsdatabaseDnsEntryArray{ SystemDnsdatabaseDnsEntryArgs{...} }
type SystemDnsdatabaseDnsEntryArrayInput interface {
	pulumi.Input

	ToSystemDnsdatabaseDnsEntryArrayOutput() SystemDnsdatabaseDnsEntryArrayOutput
	ToSystemDnsdatabaseDnsEntryArrayOutputWithContext(context.Context) SystemDnsdatabaseDnsEntryArrayOutput
}

type SystemDnsdatabaseDnsEntryArray []SystemDnsdatabaseDnsEntryInput

func (SystemDnsdatabaseDnsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsdatabaseDnsEntry)(nil)).Elem()
}

func (i SystemDnsdatabaseDnsEntryArray) ToSystemDnsdatabaseDnsEntryArrayOutput() SystemDnsdatabaseDnsEntryArrayOutput {
	return i.ToSystemDnsdatabaseDnsEntryArrayOutputWithContext(context.Background())
}

func (i SystemDnsdatabaseDnsEntryArray) ToSystemDnsdatabaseDnsEntryArrayOutputWithContext(ctx context.Context) SystemDnsdatabaseDnsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsdatabaseDnsEntryArrayOutput)
}

type SystemDnsdatabaseDnsEntryOutput struct{ *pulumi.OutputState }

func (SystemDnsdatabaseDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsdatabaseDnsEntry)(nil)).Elem()
}

func (o SystemDnsdatabaseDnsEntryOutput) ToSystemDnsdatabaseDnsEntryOutput() SystemDnsdatabaseDnsEntryOutput {
	return o
}

func (o SystemDnsdatabaseDnsEntryOutput) ToSystemDnsdatabaseDnsEntryOutputWithContext(ctx context.Context) SystemDnsdatabaseDnsEntryOutput {
	return o
}

// Canonical name of the host.
func (o SystemDnsdatabaseDnsEntryOutput) CanonicalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsdatabaseDnsEntry) *string { return v.CanonicalName }).(pulumi.StringPtrOutput)
}

// Name of the host.
func (o SystemDnsdatabaseDnsEntryOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsdatabaseDnsEntry) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// DNS entry ID.
func (o SystemDnsdatabaseDnsEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDnsdatabaseDnsEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 address of the host.
func (o SystemDnsdatabaseDnsEntryOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsdatabaseDnsEntry) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// IPv6 address of the host.
func (o SystemDnsdatabaseDnsEntryOutput) Ipv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsdatabaseDnsEntry) *string { return v.Ipv6 }).(pulumi.StringPtrOutput)
}

// DNS entry preference, 0 is the highest preference (0 - 65535, default = 10)
func (o SystemDnsdatabaseDnsEntryOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDnsdatabaseDnsEntry) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

// Enable/disable resource record status. Valid values: `enable`, `disable`.
func (o SystemDnsdatabaseDnsEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsdatabaseDnsEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Time-to-live for this entry (0 to 2147483647 sec, default = 0).
func (o SystemDnsdatabaseDnsEntryOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDnsdatabaseDnsEntry) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

// Resource record type. Valid values: `A`, `NS`, `CNAME`, `MX`, `AAAA`, `PTR`, `PTR_V6`.
func (o SystemDnsdatabaseDnsEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsdatabaseDnsEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SystemDnsdatabaseDnsEntryArrayOutput struct{ *pulumi.OutputState }

func (SystemDnsdatabaseDnsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsdatabaseDnsEntry)(nil)).Elem()
}

func (o SystemDnsdatabaseDnsEntryArrayOutput) ToSystemDnsdatabaseDnsEntryArrayOutput() SystemDnsdatabaseDnsEntryArrayOutput {
	return o
}

func (o SystemDnsdatabaseDnsEntryArrayOutput) ToSystemDnsdatabaseDnsEntryArrayOutputWithContext(ctx context.Context) SystemDnsdatabaseDnsEntryArrayOutput {
	return o
}

func (o SystemDnsdatabaseDnsEntryArrayOutput) Index(i pulumi.IntInput) SystemDnsdatabaseDnsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDnsdatabaseDnsEntry {
		return vs[0].([]SystemDnsdatabaseDnsEntry)[vs[1].(int)]
	}).(SystemDnsdatabaseDnsEntryOutput)
}

type SystemFederatedupgradeNodeList struct {
	// The serial of the FortiGate that controls this device
	CoordinatingFortigate *string `pulumi:"coordinatingFortigate"`
	// What type of device this node represents.
	DeviceType *string `pulumi:"deviceType"`
	// Serial number of the node to include.
	Serial *string `pulumi:"serial"`
	// When the upgrade was configured. Format hh:mm yyyy/mm/dd UTC.
	SetupTime *string `pulumi:"setupTime"`
	// Scheduled time for the upgrade. Format hh:mm yyyy/mm/dd UTC.
	Time *string `pulumi:"time"`
	// Whether the upgrade should be run immediately, or at a scheduled time. Valid values: `immediate`, `scheduled`.
	Timing *string `pulumi:"timing"`
	// Image IDs to upgrade through.
	UpgradePath *string `pulumi:"upgradePath"`
}

// SystemFederatedupgradeNodeListInput is an input type that accepts SystemFederatedupgradeNodeListArgs and SystemFederatedupgradeNodeListOutput values.
// You can construct a concrete instance of `SystemFederatedupgradeNodeListInput` via:
//
//	SystemFederatedupgradeNodeListArgs{...}
type SystemFederatedupgradeNodeListInput interface {
	pulumi.Input

	ToSystemFederatedupgradeNodeListOutput() SystemFederatedupgradeNodeListOutput
	ToSystemFederatedupgradeNodeListOutputWithContext(context.Context) SystemFederatedupgradeNodeListOutput
}

type SystemFederatedupgradeNodeListArgs struct {
	// The serial of the FortiGate that controls this device
	CoordinatingFortigate pulumi.StringPtrInput `pulumi:"coordinatingFortigate"`
	// What type of device this node represents.
	DeviceType pulumi.StringPtrInput `pulumi:"deviceType"`
	// Serial number of the node to include.
	Serial pulumi.StringPtrInput `pulumi:"serial"`
	// When the upgrade was configured. Format hh:mm yyyy/mm/dd UTC.
	SetupTime pulumi.StringPtrInput `pulumi:"setupTime"`
	// Scheduled time for the upgrade. Format hh:mm yyyy/mm/dd UTC.
	Time pulumi.StringPtrInput `pulumi:"time"`
	// Whether the upgrade should be run immediately, or at a scheduled time. Valid values: `immediate`, `scheduled`.
	Timing pulumi.StringPtrInput `pulumi:"timing"`
	// Image IDs to upgrade through.
	UpgradePath pulumi.StringPtrInput `pulumi:"upgradePath"`
}

func (SystemFederatedupgradeNodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFederatedupgradeNodeList)(nil)).Elem()
}

func (i SystemFederatedupgradeNodeListArgs) ToSystemFederatedupgradeNodeListOutput() SystemFederatedupgradeNodeListOutput {
	return i.ToSystemFederatedupgradeNodeListOutputWithContext(context.Background())
}

func (i SystemFederatedupgradeNodeListArgs) ToSystemFederatedupgradeNodeListOutputWithContext(ctx context.Context) SystemFederatedupgradeNodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFederatedupgradeNodeListOutput)
}

// SystemFederatedupgradeNodeListArrayInput is an input type that accepts SystemFederatedupgradeNodeListArray and SystemFederatedupgradeNodeListArrayOutput values.
// You can construct a concrete instance of `SystemFederatedupgradeNodeListArrayInput` via:
//
//	SystemFederatedupgradeNodeListArray{ SystemFederatedupgradeNodeListArgs{...} }
type SystemFederatedupgradeNodeListArrayInput interface {
	pulumi.Input

	ToSystemFederatedupgradeNodeListArrayOutput() SystemFederatedupgradeNodeListArrayOutput
	ToSystemFederatedupgradeNodeListArrayOutputWithContext(context.Context) SystemFederatedupgradeNodeListArrayOutput
}

type SystemFederatedupgradeNodeListArray []SystemFederatedupgradeNodeListInput

func (SystemFederatedupgradeNodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemFederatedupgradeNodeList)(nil)).Elem()
}

func (i SystemFederatedupgradeNodeListArray) ToSystemFederatedupgradeNodeListArrayOutput() SystemFederatedupgradeNodeListArrayOutput {
	return i.ToSystemFederatedupgradeNodeListArrayOutputWithContext(context.Background())
}

func (i SystemFederatedupgradeNodeListArray) ToSystemFederatedupgradeNodeListArrayOutputWithContext(ctx context.Context) SystemFederatedupgradeNodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFederatedupgradeNodeListArrayOutput)
}

type SystemFederatedupgradeNodeListOutput struct{ *pulumi.OutputState }

func (SystemFederatedupgradeNodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFederatedupgradeNodeList)(nil)).Elem()
}

func (o SystemFederatedupgradeNodeListOutput) ToSystemFederatedupgradeNodeListOutput() SystemFederatedupgradeNodeListOutput {
	return o
}

func (o SystemFederatedupgradeNodeListOutput) ToSystemFederatedupgradeNodeListOutputWithContext(ctx context.Context) SystemFederatedupgradeNodeListOutput {
	return o
}

// The serial of the FortiGate that controls this device
func (o SystemFederatedupgradeNodeListOutput) CoordinatingFortigate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedupgradeNodeList) *string { return v.CoordinatingFortigate }).(pulumi.StringPtrOutput)
}

// What type of device this node represents.
func (o SystemFederatedupgradeNodeListOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedupgradeNodeList) *string { return v.DeviceType }).(pulumi.StringPtrOutput)
}

// Serial number of the node to include.
func (o SystemFederatedupgradeNodeListOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedupgradeNodeList) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

// When the upgrade was configured. Format hh:mm yyyy/mm/dd UTC.
func (o SystemFederatedupgradeNodeListOutput) SetupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedupgradeNodeList) *string { return v.SetupTime }).(pulumi.StringPtrOutput)
}

// Scheduled time for the upgrade. Format hh:mm yyyy/mm/dd UTC.
func (o SystemFederatedupgradeNodeListOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedupgradeNodeList) *string { return v.Time }).(pulumi.StringPtrOutput)
}

// Whether the upgrade should be run immediately, or at a scheduled time. Valid values: `immediate`, `scheduled`.
func (o SystemFederatedupgradeNodeListOutput) Timing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedupgradeNodeList) *string { return v.Timing }).(pulumi.StringPtrOutput)
}

// Image IDs to upgrade through.
func (o SystemFederatedupgradeNodeListOutput) UpgradePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedupgradeNodeList) *string { return v.UpgradePath }).(pulumi.StringPtrOutput)
}

type SystemFederatedupgradeNodeListArrayOutput struct{ *pulumi.OutputState }

func (SystemFederatedupgradeNodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemFederatedupgradeNodeList)(nil)).Elem()
}

func (o SystemFederatedupgradeNodeListArrayOutput) ToSystemFederatedupgradeNodeListArrayOutput() SystemFederatedupgradeNodeListArrayOutput {
	return o
}

func (o SystemFederatedupgradeNodeListArrayOutput) ToSystemFederatedupgradeNodeListArrayOutputWithContext(ctx context.Context) SystemFederatedupgradeNodeListArrayOutput {
	return o
}

func (o SystemFederatedupgradeNodeListArrayOutput) Index(i pulumi.IntInput) SystemFederatedupgradeNodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemFederatedupgradeNodeList {
		return vs[0].([]SystemFederatedupgradeNodeList)[vs[1].(int)]
	}).(SystemFederatedupgradeNodeListOutput)
}

type SystemGeoipoverrideIp6Range struct {
	// Final IP address, inclusive, of the address range (format: xxx.xxx.xxx.xxx).
	//
	// The `ip6Range` block supports:
	EndIp *string `pulumi:"endIp"`
	// ID number for individual entry in the IP-Range table.
	Id *int `pulumi:"id"`
	// Starting IP address, inclusive, of the address range (format: xxx.xxx.xxx.xxx).
	StartIp *string `pulumi:"startIp"`
}

// SystemGeoipoverrideIp6RangeInput is an input type that accepts SystemGeoipoverrideIp6RangeArgs and SystemGeoipoverrideIp6RangeOutput values.
// You can construct a concrete instance of `SystemGeoipoverrideIp6RangeInput` via:
//
//	SystemGeoipoverrideIp6RangeArgs{...}
type SystemGeoipoverrideIp6RangeInput interface {
	pulumi.Input

	ToSystemGeoipoverrideIp6RangeOutput() SystemGeoipoverrideIp6RangeOutput
	ToSystemGeoipoverrideIp6RangeOutputWithContext(context.Context) SystemGeoipoverrideIp6RangeOutput
}

type SystemGeoipoverrideIp6RangeArgs struct {
	// Final IP address, inclusive, of the address range (format: xxx.xxx.xxx.xxx).
	//
	// The `ip6Range` block supports:
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID number for individual entry in the IP-Range table.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Starting IP address, inclusive, of the address range (format: xxx.xxx.xxx.xxx).
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (SystemGeoipoverrideIp6RangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemGeoipoverrideIp6Range)(nil)).Elem()
}

func (i SystemGeoipoverrideIp6RangeArgs) ToSystemGeoipoverrideIp6RangeOutput() SystemGeoipoverrideIp6RangeOutput {
	return i.ToSystemGeoipoverrideIp6RangeOutputWithContext(context.Background())
}

func (i SystemGeoipoverrideIp6RangeArgs) ToSystemGeoipoverrideIp6RangeOutputWithContext(ctx context.Context) SystemGeoipoverrideIp6RangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipoverrideIp6RangeOutput)
}

// SystemGeoipoverrideIp6RangeArrayInput is an input type that accepts SystemGeoipoverrideIp6RangeArray and SystemGeoipoverrideIp6RangeArrayOutput values.
// You can construct a concrete instance of `SystemGeoipoverrideIp6RangeArrayInput` via:
//
//	SystemGeoipoverrideIp6RangeArray{ SystemGeoipoverrideIp6RangeArgs{...} }
type SystemGeoipoverrideIp6RangeArrayInput interface {
	pulumi.Input

	ToSystemGeoipoverrideIp6RangeArrayOutput() SystemGeoipoverrideIp6RangeArrayOutput
	ToSystemGeoipoverrideIp6RangeArrayOutputWithContext(context.Context) SystemGeoipoverrideIp6RangeArrayOutput
}

type SystemGeoipoverrideIp6RangeArray []SystemGeoipoverrideIp6RangeInput

func (SystemGeoipoverrideIp6RangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemGeoipoverrideIp6Range)(nil)).Elem()
}

func (i SystemGeoipoverrideIp6RangeArray) ToSystemGeoipoverrideIp6RangeArrayOutput() SystemGeoipoverrideIp6RangeArrayOutput {
	return i.ToSystemGeoipoverrideIp6RangeArrayOutputWithContext(context.Background())
}

func (i SystemGeoipoverrideIp6RangeArray) ToSystemGeoipoverrideIp6RangeArrayOutputWithContext(ctx context.Context) SystemGeoipoverrideIp6RangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipoverrideIp6RangeArrayOutput)
}

type SystemGeoipoverrideIp6RangeOutput struct{ *pulumi.OutputState }

func (SystemGeoipoverrideIp6RangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemGeoipoverrideIp6Range)(nil)).Elem()
}

func (o SystemGeoipoverrideIp6RangeOutput) ToSystemGeoipoverrideIp6RangeOutput() SystemGeoipoverrideIp6RangeOutput {
	return o
}

func (o SystemGeoipoverrideIp6RangeOutput) ToSystemGeoipoverrideIp6RangeOutputWithContext(ctx context.Context) SystemGeoipoverrideIp6RangeOutput {
	return o
}

// Final IP address, inclusive, of the address range (format: xxx.xxx.xxx.xxx).
//
// The `ip6Range` block supports:
func (o SystemGeoipoverrideIp6RangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemGeoipoverrideIp6Range) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID number for individual entry in the IP-Range table.
func (o SystemGeoipoverrideIp6RangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemGeoipoverrideIp6Range) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Starting IP address, inclusive, of the address range (format: xxx.xxx.xxx.xxx).
func (o SystemGeoipoverrideIp6RangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemGeoipoverrideIp6Range) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type SystemGeoipoverrideIp6RangeArrayOutput struct{ *pulumi.OutputState }

func (SystemGeoipoverrideIp6RangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemGeoipoverrideIp6Range)(nil)).Elem()
}

func (o SystemGeoipoverrideIp6RangeArrayOutput) ToSystemGeoipoverrideIp6RangeArrayOutput() SystemGeoipoverrideIp6RangeArrayOutput {
	return o
}

func (o SystemGeoipoverrideIp6RangeArrayOutput) ToSystemGeoipoverrideIp6RangeArrayOutputWithContext(ctx context.Context) SystemGeoipoverrideIp6RangeArrayOutput {
	return o
}

func (o SystemGeoipoverrideIp6RangeArrayOutput) Index(i pulumi.IntInput) SystemGeoipoverrideIp6RangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemGeoipoverrideIp6Range {
		return vs[0].([]SystemGeoipoverrideIp6Range)[vs[1].(int)]
	}).(SystemGeoipoverrideIp6RangeOutput)
}

type SystemGeoipoverrideIpRange struct {
	// Ending IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	EndIp *string `pulumi:"endIp"`
	// ID of individual entry in the IPv6 range table.
	Id *int `pulumi:"id"`
	// Starting IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	StartIp *string `pulumi:"startIp"`
}

// SystemGeoipoverrideIpRangeInput is an input type that accepts SystemGeoipoverrideIpRangeArgs and SystemGeoipoverrideIpRangeOutput values.
// You can construct a concrete instance of `SystemGeoipoverrideIpRangeInput` via:
//
//	SystemGeoipoverrideIpRangeArgs{...}
type SystemGeoipoverrideIpRangeInput interface {
	pulumi.Input

	ToSystemGeoipoverrideIpRangeOutput() SystemGeoipoverrideIpRangeOutput
	ToSystemGeoipoverrideIpRangeOutputWithContext(context.Context) SystemGeoipoverrideIpRangeOutput
}

type SystemGeoipoverrideIpRangeArgs struct {
	// Ending IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID of individual entry in the IPv6 range table.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Starting IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (SystemGeoipoverrideIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemGeoipoverrideIpRange)(nil)).Elem()
}

func (i SystemGeoipoverrideIpRangeArgs) ToSystemGeoipoverrideIpRangeOutput() SystemGeoipoverrideIpRangeOutput {
	return i.ToSystemGeoipoverrideIpRangeOutputWithContext(context.Background())
}

func (i SystemGeoipoverrideIpRangeArgs) ToSystemGeoipoverrideIpRangeOutputWithContext(ctx context.Context) SystemGeoipoverrideIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipoverrideIpRangeOutput)
}

// SystemGeoipoverrideIpRangeArrayInput is an input type that accepts SystemGeoipoverrideIpRangeArray and SystemGeoipoverrideIpRangeArrayOutput values.
// You can construct a concrete instance of `SystemGeoipoverrideIpRangeArrayInput` via:
//
//	SystemGeoipoverrideIpRangeArray{ SystemGeoipoverrideIpRangeArgs{...} }
type SystemGeoipoverrideIpRangeArrayInput interface {
	pulumi.Input

	ToSystemGeoipoverrideIpRangeArrayOutput() SystemGeoipoverrideIpRangeArrayOutput
	ToSystemGeoipoverrideIpRangeArrayOutputWithContext(context.Context) SystemGeoipoverrideIpRangeArrayOutput
}

type SystemGeoipoverrideIpRangeArray []SystemGeoipoverrideIpRangeInput

func (SystemGeoipoverrideIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemGeoipoverrideIpRange)(nil)).Elem()
}

func (i SystemGeoipoverrideIpRangeArray) ToSystemGeoipoverrideIpRangeArrayOutput() SystemGeoipoverrideIpRangeArrayOutput {
	return i.ToSystemGeoipoverrideIpRangeArrayOutputWithContext(context.Background())
}

func (i SystemGeoipoverrideIpRangeArray) ToSystemGeoipoverrideIpRangeArrayOutputWithContext(ctx context.Context) SystemGeoipoverrideIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipoverrideIpRangeArrayOutput)
}

type SystemGeoipoverrideIpRangeOutput struct{ *pulumi.OutputState }

func (SystemGeoipoverrideIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemGeoipoverrideIpRange)(nil)).Elem()
}

func (o SystemGeoipoverrideIpRangeOutput) ToSystemGeoipoverrideIpRangeOutput() SystemGeoipoverrideIpRangeOutput {
	return o
}

func (o SystemGeoipoverrideIpRangeOutput) ToSystemGeoipoverrideIpRangeOutputWithContext(ctx context.Context) SystemGeoipoverrideIpRangeOutput {
	return o
}

// Ending IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
func (o SystemGeoipoverrideIpRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemGeoipoverrideIpRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID of individual entry in the IPv6 range table.
func (o SystemGeoipoverrideIpRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemGeoipoverrideIpRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Starting IP address, inclusive, of the address range (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
func (o SystemGeoipoverrideIpRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemGeoipoverrideIpRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type SystemGeoipoverrideIpRangeArrayOutput struct{ *pulumi.OutputState }

func (SystemGeoipoverrideIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemGeoipoverrideIpRange)(nil)).Elem()
}

func (o SystemGeoipoverrideIpRangeArrayOutput) ToSystemGeoipoverrideIpRangeArrayOutput() SystemGeoipoverrideIpRangeArrayOutput {
	return o
}

func (o SystemGeoipoverrideIpRangeArrayOutput) ToSystemGeoipoverrideIpRangeArrayOutputWithContext(ctx context.Context) SystemGeoipoverrideIpRangeArrayOutput {
	return o
}

func (o SystemGeoipoverrideIpRangeArrayOutput) Index(i pulumi.IntInput) SystemGeoipoverrideIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemGeoipoverrideIpRange {
		return vs[0].([]SystemGeoipoverrideIpRange)[vs[1].(int)]
	}).(SystemGeoipoverrideIpRangeOutput)
}

type SystemHaHaMgmtInterface struct {
	Dst       *string `pulumi:"dst"`
	Gateway   *string `pulumi:"gateway"`
	Gateway6  *string `pulumi:"gateway6"`
	Id        *int    `pulumi:"id"`
	Interface *string `pulumi:"interface"`
}

// SystemHaHaMgmtInterfaceInput is an input type that accepts SystemHaHaMgmtInterfaceArgs and SystemHaHaMgmtInterfaceOutput values.
// You can construct a concrete instance of `SystemHaHaMgmtInterfaceInput` via:
//
//	SystemHaHaMgmtInterfaceArgs{...}
type SystemHaHaMgmtInterfaceInput interface {
	pulumi.Input

	ToSystemHaHaMgmtInterfaceOutput() SystemHaHaMgmtInterfaceOutput
	ToSystemHaHaMgmtInterfaceOutputWithContext(context.Context) SystemHaHaMgmtInterfaceOutput
}

type SystemHaHaMgmtInterfaceArgs struct {
	Dst       pulumi.StringPtrInput `pulumi:"dst"`
	Gateway   pulumi.StringPtrInput `pulumi:"gateway"`
	Gateway6  pulumi.StringPtrInput `pulumi:"gateway6"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Interface pulumi.StringPtrInput `pulumi:"interface"`
}

func (SystemHaHaMgmtInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaHaMgmtInterface)(nil)).Elem()
}

func (i SystemHaHaMgmtInterfaceArgs) ToSystemHaHaMgmtInterfaceOutput() SystemHaHaMgmtInterfaceOutput {
	return i.ToSystemHaHaMgmtInterfaceOutputWithContext(context.Background())
}

func (i SystemHaHaMgmtInterfaceArgs) ToSystemHaHaMgmtInterfaceOutputWithContext(ctx context.Context) SystemHaHaMgmtInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaHaMgmtInterfaceOutput)
}

// SystemHaHaMgmtInterfaceArrayInput is an input type that accepts SystemHaHaMgmtInterfaceArray and SystemHaHaMgmtInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemHaHaMgmtInterfaceArrayInput` via:
//
//	SystemHaHaMgmtInterfaceArray{ SystemHaHaMgmtInterfaceArgs{...} }
type SystemHaHaMgmtInterfaceArrayInput interface {
	pulumi.Input

	ToSystemHaHaMgmtInterfaceArrayOutput() SystemHaHaMgmtInterfaceArrayOutput
	ToSystemHaHaMgmtInterfaceArrayOutputWithContext(context.Context) SystemHaHaMgmtInterfaceArrayOutput
}

type SystemHaHaMgmtInterfaceArray []SystemHaHaMgmtInterfaceInput

func (SystemHaHaMgmtInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaHaMgmtInterface)(nil)).Elem()
}

func (i SystemHaHaMgmtInterfaceArray) ToSystemHaHaMgmtInterfaceArrayOutput() SystemHaHaMgmtInterfaceArrayOutput {
	return i.ToSystemHaHaMgmtInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemHaHaMgmtInterfaceArray) ToSystemHaHaMgmtInterfaceArrayOutputWithContext(ctx context.Context) SystemHaHaMgmtInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaHaMgmtInterfaceArrayOutput)
}

type SystemHaHaMgmtInterfaceOutput struct{ *pulumi.OutputState }

func (SystemHaHaMgmtInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaHaMgmtInterface)(nil)).Elem()
}

func (o SystemHaHaMgmtInterfaceOutput) ToSystemHaHaMgmtInterfaceOutput() SystemHaHaMgmtInterfaceOutput {
	return o
}

func (o SystemHaHaMgmtInterfaceOutput) ToSystemHaHaMgmtInterfaceOutputWithContext(ctx context.Context) SystemHaHaMgmtInterfaceOutput {
	return o
}

func (o SystemHaHaMgmtInterfaceOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaHaMgmtInterface) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

func (o SystemHaHaMgmtInterfaceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaHaMgmtInterface) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o SystemHaHaMgmtInterfaceOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaHaMgmtInterface) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

func (o SystemHaHaMgmtInterfaceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaHaMgmtInterface) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemHaHaMgmtInterfaceOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaHaMgmtInterface) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

type SystemHaHaMgmtInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemHaHaMgmtInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaHaMgmtInterface)(nil)).Elem()
}

func (o SystemHaHaMgmtInterfaceArrayOutput) ToSystemHaHaMgmtInterfaceArrayOutput() SystemHaHaMgmtInterfaceArrayOutput {
	return o
}

func (o SystemHaHaMgmtInterfaceArrayOutput) ToSystemHaHaMgmtInterfaceArrayOutputWithContext(ctx context.Context) SystemHaHaMgmtInterfaceArrayOutput {
	return o
}

func (o SystemHaHaMgmtInterfaceArrayOutput) Index(i pulumi.IntInput) SystemHaHaMgmtInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemHaHaMgmtInterface {
		return vs[0].([]SystemHaHaMgmtInterface)[vs[1].(int)]
	}).(SystemHaHaMgmtInterfaceOutput)
}

type SystemHaSecondaryVcluster struct {
	Monitor                       *string `pulumi:"monitor"`
	Override                      *string `pulumi:"override"`
	OverrideWaitTime              *int    `pulumi:"overrideWaitTime"`
	PingserverFailoverThreshold   *int    `pulumi:"pingserverFailoverThreshold"`
	PingserverMonitorInterface    *string `pulumi:"pingserverMonitorInterface"`
	PingserverSecondaryForceReset *string `pulumi:"pingserverSecondaryForceReset"`
	PingserverSlaveForceReset     *string `pulumi:"pingserverSlaveForceReset"`
	Priority                      *int    `pulumi:"priority"`
	VclusterId                    *int    `pulumi:"vclusterId"`
	Vdom                          *string `pulumi:"vdom"`
}

// SystemHaSecondaryVclusterInput is an input type that accepts SystemHaSecondaryVclusterArgs and SystemHaSecondaryVclusterOutput values.
// You can construct a concrete instance of `SystemHaSecondaryVclusterInput` via:
//
//	SystemHaSecondaryVclusterArgs{...}
type SystemHaSecondaryVclusterInput interface {
	pulumi.Input

	ToSystemHaSecondaryVclusterOutput() SystemHaSecondaryVclusterOutput
	ToSystemHaSecondaryVclusterOutputWithContext(context.Context) SystemHaSecondaryVclusterOutput
}

type SystemHaSecondaryVclusterArgs struct {
	Monitor                       pulumi.StringPtrInput `pulumi:"monitor"`
	Override                      pulumi.StringPtrInput `pulumi:"override"`
	OverrideWaitTime              pulumi.IntPtrInput    `pulumi:"overrideWaitTime"`
	PingserverFailoverThreshold   pulumi.IntPtrInput    `pulumi:"pingserverFailoverThreshold"`
	PingserverMonitorInterface    pulumi.StringPtrInput `pulumi:"pingserverMonitorInterface"`
	PingserverSecondaryForceReset pulumi.StringPtrInput `pulumi:"pingserverSecondaryForceReset"`
	PingserverSlaveForceReset     pulumi.StringPtrInput `pulumi:"pingserverSlaveForceReset"`
	Priority                      pulumi.IntPtrInput    `pulumi:"priority"`
	VclusterId                    pulumi.IntPtrInput    `pulumi:"vclusterId"`
	Vdom                          pulumi.StringPtrInput `pulumi:"vdom"`
}

func (SystemHaSecondaryVclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaSecondaryVcluster)(nil)).Elem()
}

func (i SystemHaSecondaryVclusterArgs) ToSystemHaSecondaryVclusterOutput() SystemHaSecondaryVclusterOutput {
	return i.ToSystemHaSecondaryVclusterOutputWithContext(context.Background())
}

func (i SystemHaSecondaryVclusterArgs) ToSystemHaSecondaryVclusterOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaSecondaryVclusterOutput)
}

func (i SystemHaSecondaryVclusterArgs) ToSystemHaSecondaryVclusterPtrOutput() SystemHaSecondaryVclusterPtrOutput {
	return i.ToSystemHaSecondaryVclusterPtrOutputWithContext(context.Background())
}

func (i SystemHaSecondaryVclusterArgs) ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaSecondaryVclusterOutput).ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx)
}

// SystemHaSecondaryVclusterPtrInput is an input type that accepts SystemHaSecondaryVclusterArgs, SystemHaSecondaryVclusterPtr and SystemHaSecondaryVclusterPtrOutput values.
// You can construct a concrete instance of `SystemHaSecondaryVclusterPtrInput` via:
//
//	        SystemHaSecondaryVclusterArgs{...}
//
//	or:
//
//	        nil
type SystemHaSecondaryVclusterPtrInput interface {
	pulumi.Input

	ToSystemHaSecondaryVclusterPtrOutput() SystemHaSecondaryVclusterPtrOutput
	ToSystemHaSecondaryVclusterPtrOutputWithContext(context.Context) SystemHaSecondaryVclusterPtrOutput
}

type systemHaSecondaryVclusterPtrType SystemHaSecondaryVclusterArgs

func SystemHaSecondaryVclusterPtr(v *SystemHaSecondaryVclusterArgs) SystemHaSecondaryVclusterPtrInput {
	return (*systemHaSecondaryVclusterPtrType)(v)
}

func (*systemHaSecondaryVclusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemHaSecondaryVcluster)(nil)).Elem()
}

func (i *systemHaSecondaryVclusterPtrType) ToSystemHaSecondaryVclusterPtrOutput() SystemHaSecondaryVclusterPtrOutput {
	return i.ToSystemHaSecondaryVclusterPtrOutputWithContext(context.Background())
}

func (i *systemHaSecondaryVclusterPtrType) ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaSecondaryVclusterPtrOutput)
}

type SystemHaSecondaryVclusterOutput struct{ *pulumi.OutputState }

func (SystemHaSecondaryVclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaSecondaryVcluster)(nil)).Elem()
}

func (o SystemHaSecondaryVclusterOutput) ToSystemHaSecondaryVclusterOutput() SystemHaSecondaryVclusterOutput {
	return o
}

func (o SystemHaSecondaryVclusterOutput) ToSystemHaSecondaryVclusterOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterOutput {
	return o
}

func (o SystemHaSecondaryVclusterOutput) ToSystemHaSecondaryVclusterPtrOutput() SystemHaSecondaryVclusterPtrOutput {
	return o.ToSystemHaSecondaryVclusterPtrOutputWithContext(context.Background())
}

func (o SystemHaSecondaryVclusterOutput) ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemHaSecondaryVcluster) *SystemHaSecondaryVcluster {
		return &v
	}).(SystemHaSecondaryVclusterPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) Override() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.Override }).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) OverrideWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *int { return v.OverrideWaitTime }).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) PingserverFailoverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *int { return v.PingserverFailoverThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) PingserverMonitorInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.PingserverMonitorInterface }).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) PingserverSecondaryForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.PingserverSecondaryForceReset }).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) PingserverSlaveForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.PingserverSlaveForceReset }).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) VclusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *int { return v.VclusterId }).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.Vdom }).(pulumi.StringPtrOutput)
}

type SystemHaSecondaryVclusterPtrOutput struct{ *pulumi.OutputState }

func (SystemHaSecondaryVclusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemHaSecondaryVcluster)(nil)).Elem()
}

func (o SystemHaSecondaryVclusterPtrOutput) ToSystemHaSecondaryVclusterPtrOutput() SystemHaSecondaryVclusterPtrOutput {
	return o
}

func (o SystemHaSecondaryVclusterPtrOutput) ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterPtrOutput {
	return o
}

func (o SystemHaSecondaryVclusterPtrOutput) Elem() SystemHaSecondaryVclusterOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) SystemHaSecondaryVcluster {
		if v != nil {
			return *v
		}
		var ret SystemHaSecondaryVcluster
		return ret
	}).(SystemHaSecondaryVclusterOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.Monitor
	}).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) Override() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.Override
	}).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) OverrideWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.OverrideWaitTime
	}).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) PingserverFailoverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.PingserverFailoverThreshold
	}).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) PingserverMonitorInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.PingserverMonitorInterface
	}).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) PingserverSecondaryForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.PingserverSecondaryForceReset
	}).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) PingserverSlaveForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.PingserverSlaveForceReset
	}).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) VclusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.VclusterId
	}).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.Vdom
	}).(pulumi.StringPtrOutput)
}

type SystemHaUnicastPeer struct {
	Id     *int    `pulumi:"id"`
	PeerIp *string `pulumi:"peerIp"`
}

// SystemHaUnicastPeerInput is an input type that accepts SystemHaUnicastPeerArgs and SystemHaUnicastPeerOutput values.
// You can construct a concrete instance of `SystemHaUnicastPeerInput` via:
//
//	SystemHaUnicastPeerArgs{...}
type SystemHaUnicastPeerInput interface {
	pulumi.Input

	ToSystemHaUnicastPeerOutput() SystemHaUnicastPeerOutput
	ToSystemHaUnicastPeerOutputWithContext(context.Context) SystemHaUnicastPeerOutput
}

type SystemHaUnicastPeerArgs struct {
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	PeerIp pulumi.StringPtrInput `pulumi:"peerIp"`
}

func (SystemHaUnicastPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaUnicastPeer)(nil)).Elem()
}

func (i SystemHaUnicastPeerArgs) ToSystemHaUnicastPeerOutput() SystemHaUnicastPeerOutput {
	return i.ToSystemHaUnicastPeerOutputWithContext(context.Background())
}

func (i SystemHaUnicastPeerArgs) ToSystemHaUnicastPeerOutputWithContext(ctx context.Context) SystemHaUnicastPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaUnicastPeerOutput)
}

// SystemHaUnicastPeerArrayInput is an input type that accepts SystemHaUnicastPeerArray and SystemHaUnicastPeerArrayOutput values.
// You can construct a concrete instance of `SystemHaUnicastPeerArrayInput` via:
//
//	SystemHaUnicastPeerArray{ SystemHaUnicastPeerArgs{...} }
type SystemHaUnicastPeerArrayInput interface {
	pulumi.Input

	ToSystemHaUnicastPeerArrayOutput() SystemHaUnicastPeerArrayOutput
	ToSystemHaUnicastPeerArrayOutputWithContext(context.Context) SystemHaUnicastPeerArrayOutput
}

type SystemHaUnicastPeerArray []SystemHaUnicastPeerInput

func (SystemHaUnicastPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaUnicastPeer)(nil)).Elem()
}

func (i SystemHaUnicastPeerArray) ToSystemHaUnicastPeerArrayOutput() SystemHaUnicastPeerArrayOutput {
	return i.ToSystemHaUnicastPeerArrayOutputWithContext(context.Background())
}

func (i SystemHaUnicastPeerArray) ToSystemHaUnicastPeerArrayOutputWithContext(ctx context.Context) SystemHaUnicastPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaUnicastPeerArrayOutput)
}

type SystemHaUnicastPeerOutput struct{ *pulumi.OutputState }

func (SystemHaUnicastPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaUnicastPeer)(nil)).Elem()
}

func (o SystemHaUnicastPeerOutput) ToSystemHaUnicastPeerOutput() SystemHaUnicastPeerOutput {
	return o
}

func (o SystemHaUnicastPeerOutput) ToSystemHaUnicastPeerOutputWithContext(ctx context.Context) SystemHaUnicastPeerOutput {
	return o
}

func (o SystemHaUnicastPeerOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaUnicastPeer) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemHaUnicastPeerOutput) PeerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaUnicastPeer) *string { return v.PeerIp }).(pulumi.StringPtrOutput)
}

type SystemHaUnicastPeerArrayOutput struct{ *pulumi.OutputState }

func (SystemHaUnicastPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaUnicastPeer)(nil)).Elem()
}

func (o SystemHaUnicastPeerArrayOutput) ToSystemHaUnicastPeerArrayOutput() SystemHaUnicastPeerArrayOutput {
	return o
}

func (o SystemHaUnicastPeerArrayOutput) ToSystemHaUnicastPeerArrayOutputWithContext(ctx context.Context) SystemHaUnicastPeerArrayOutput {
	return o
}

func (o SystemHaUnicastPeerArrayOutput) Index(i pulumi.IntInput) SystemHaUnicastPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemHaUnicastPeer {
		return vs[0].([]SystemHaUnicastPeer)[vs[1].(int)]
	}).(SystemHaUnicastPeerOutput)
}

type SystemHaVcluster struct {
	Monitor                       *string                `pulumi:"monitor"`
	Override                      *string                `pulumi:"override"`
	OverrideWaitTime              *int                   `pulumi:"overrideWaitTime"`
	PingserverFailoverThreshold   *int                   `pulumi:"pingserverFailoverThreshold"`
	PingserverMonitorInterface    *string                `pulumi:"pingserverMonitorInterface"`
	PingserverSecondaryForceReset *string                `pulumi:"pingserverSecondaryForceReset"`
	PingserverSlaveForceReset     *string                `pulumi:"pingserverSlaveForceReset"`
	Priority                      *int                   `pulumi:"priority"`
	VclusterId                    *int                   `pulumi:"vclusterId"`
	Vdoms                         []SystemHaVclusterVdom `pulumi:"vdoms"`
}

// SystemHaVclusterInput is an input type that accepts SystemHaVclusterArgs and SystemHaVclusterOutput values.
// You can construct a concrete instance of `SystemHaVclusterInput` via:
//
//	SystemHaVclusterArgs{...}
type SystemHaVclusterInput interface {
	pulumi.Input

	ToSystemHaVclusterOutput() SystemHaVclusterOutput
	ToSystemHaVclusterOutputWithContext(context.Context) SystemHaVclusterOutput
}

type SystemHaVclusterArgs struct {
	Monitor                       pulumi.StringPtrInput          `pulumi:"monitor"`
	Override                      pulumi.StringPtrInput          `pulumi:"override"`
	OverrideWaitTime              pulumi.IntPtrInput             `pulumi:"overrideWaitTime"`
	PingserverFailoverThreshold   pulumi.IntPtrInput             `pulumi:"pingserverFailoverThreshold"`
	PingserverMonitorInterface    pulumi.StringPtrInput          `pulumi:"pingserverMonitorInterface"`
	PingserverSecondaryForceReset pulumi.StringPtrInput          `pulumi:"pingserverSecondaryForceReset"`
	PingserverSlaveForceReset     pulumi.StringPtrInput          `pulumi:"pingserverSlaveForceReset"`
	Priority                      pulumi.IntPtrInput             `pulumi:"priority"`
	VclusterId                    pulumi.IntPtrInput             `pulumi:"vclusterId"`
	Vdoms                         SystemHaVclusterVdomArrayInput `pulumi:"vdoms"`
}

func (SystemHaVclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaVcluster)(nil)).Elem()
}

func (i SystemHaVclusterArgs) ToSystemHaVclusterOutput() SystemHaVclusterOutput {
	return i.ToSystemHaVclusterOutputWithContext(context.Background())
}

func (i SystemHaVclusterArgs) ToSystemHaVclusterOutputWithContext(ctx context.Context) SystemHaVclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaVclusterOutput)
}

// SystemHaVclusterArrayInput is an input type that accepts SystemHaVclusterArray and SystemHaVclusterArrayOutput values.
// You can construct a concrete instance of `SystemHaVclusterArrayInput` via:
//
//	SystemHaVclusterArray{ SystemHaVclusterArgs{...} }
type SystemHaVclusterArrayInput interface {
	pulumi.Input

	ToSystemHaVclusterArrayOutput() SystemHaVclusterArrayOutput
	ToSystemHaVclusterArrayOutputWithContext(context.Context) SystemHaVclusterArrayOutput
}

type SystemHaVclusterArray []SystemHaVclusterInput

func (SystemHaVclusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaVcluster)(nil)).Elem()
}

func (i SystemHaVclusterArray) ToSystemHaVclusterArrayOutput() SystemHaVclusterArrayOutput {
	return i.ToSystemHaVclusterArrayOutputWithContext(context.Background())
}

func (i SystemHaVclusterArray) ToSystemHaVclusterArrayOutputWithContext(ctx context.Context) SystemHaVclusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaVclusterArrayOutput)
}

type SystemHaVclusterOutput struct{ *pulumi.OutputState }

func (SystemHaVclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaVcluster)(nil)).Elem()
}

func (o SystemHaVclusterOutput) ToSystemHaVclusterOutput() SystemHaVclusterOutput {
	return o
}

func (o SystemHaVclusterOutput) ToSystemHaVclusterOutputWithContext(ctx context.Context) SystemHaVclusterOutput {
	return o
}

func (o SystemHaVclusterOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

func (o SystemHaVclusterOutput) Override() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *string { return v.Override }).(pulumi.StringPtrOutput)
}

func (o SystemHaVclusterOutput) OverrideWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *int { return v.OverrideWaitTime }).(pulumi.IntPtrOutput)
}

func (o SystemHaVclusterOutput) PingserverFailoverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *int { return v.PingserverFailoverThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemHaVclusterOutput) PingserverMonitorInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *string { return v.PingserverMonitorInterface }).(pulumi.StringPtrOutput)
}

func (o SystemHaVclusterOutput) PingserverSecondaryForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *string { return v.PingserverSecondaryForceReset }).(pulumi.StringPtrOutput)
}

func (o SystemHaVclusterOutput) PingserverSlaveForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *string { return v.PingserverSlaveForceReset }).(pulumi.StringPtrOutput)
}

func (o SystemHaVclusterOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemHaVclusterOutput) VclusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *int { return v.VclusterId }).(pulumi.IntPtrOutput)
}

func (o SystemHaVclusterOutput) Vdoms() SystemHaVclusterVdomArrayOutput {
	return o.ApplyT(func(v SystemHaVcluster) []SystemHaVclusterVdom { return v.Vdoms }).(SystemHaVclusterVdomArrayOutput)
}

type SystemHaVclusterArrayOutput struct{ *pulumi.OutputState }

func (SystemHaVclusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaVcluster)(nil)).Elem()
}

func (o SystemHaVclusterArrayOutput) ToSystemHaVclusterArrayOutput() SystemHaVclusterArrayOutput {
	return o
}

func (o SystemHaVclusterArrayOutput) ToSystemHaVclusterArrayOutputWithContext(ctx context.Context) SystemHaVclusterArrayOutput {
	return o
}

func (o SystemHaVclusterArrayOutput) Index(i pulumi.IntInput) SystemHaVclusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemHaVcluster {
		return vs[0].([]SystemHaVcluster)[vs[1].(int)]
	}).(SystemHaVclusterOutput)
}

type SystemHaVclusterVdom struct {
	Name *string `pulumi:"name"`
}

// SystemHaVclusterVdomInput is an input type that accepts SystemHaVclusterVdomArgs and SystemHaVclusterVdomOutput values.
// You can construct a concrete instance of `SystemHaVclusterVdomInput` via:
//
//	SystemHaVclusterVdomArgs{...}
type SystemHaVclusterVdomInput interface {
	pulumi.Input

	ToSystemHaVclusterVdomOutput() SystemHaVclusterVdomOutput
	ToSystemHaVclusterVdomOutputWithContext(context.Context) SystemHaVclusterVdomOutput
}

type SystemHaVclusterVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemHaVclusterVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaVclusterVdom)(nil)).Elem()
}

func (i SystemHaVclusterVdomArgs) ToSystemHaVclusterVdomOutput() SystemHaVclusterVdomOutput {
	return i.ToSystemHaVclusterVdomOutputWithContext(context.Background())
}

func (i SystemHaVclusterVdomArgs) ToSystemHaVclusterVdomOutputWithContext(ctx context.Context) SystemHaVclusterVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaVclusterVdomOutput)
}

// SystemHaVclusterVdomArrayInput is an input type that accepts SystemHaVclusterVdomArray and SystemHaVclusterVdomArrayOutput values.
// You can construct a concrete instance of `SystemHaVclusterVdomArrayInput` via:
//
//	SystemHaVclusterVdomArray{ SystemHaVclusterVdomArgs{...} }
type SystemHaVclusterVdomArrayInput interface {
	pulumi.Input

	ToSystemHaVclusterVdomArrayOutput() SystemHaVclusterVdomArrayOutput
	ToSystemHaVclusterVdomArrayOutputWithContext(context.Context) SystemHaVclusterVdomArrayOutput
}

type SystemHaVclusterVdomArray []SystemHaVclusterVdomInput

func (SystemHaVclusterVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaVclusterVdom)(nil)).Elem()
}

func (i SystemHaVclusterVdomArray) ToSystemHaVclusterVdomArrayOutput() SystemHaVclusterVdomArrayOutput {
	return i.ToSystemHaVclusterVdomArrayOutputWithContext(context.Background())
}

func (i SystemHaVclusterVdomArray) ToSystemHaVclusterVdomArrayOutputWithContext(ctx context.Context) SystemHaVclusterVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaVclusterVdomArrayOutput)
}

type SystemHaVclusterVdomOutput struct{ *pulumi.OutputState }

func (SystemHaVclusterVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaVclusterVdom)(nil)).Elem()
}

func (o SystemHaVclusterVdomOutput) ToSystemHaVclusterVdomOutput() SystemHaVclusterVdomOutput {
	return o
}

func (o SystemHaVclusterVdomOutput) ToSystemHaVclusterVdomOutputWithContext(ctx context.Context) SystemHaVclusterVdomOutput {
	return o
}

func (o SystemHaVclusterVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVclusterVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemHaVclusterVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemHaVclusterVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaVclusterVdom)(nil)).Elem()
}

func (o SystemHaVclusterVdomArrayOutput) ToSystemHaVclusterVdomArrayOutput() SystemHaVclusterVdomArrayOutput {
	return o
}

func (o SystemHaVclusterVdomArrayOutput) ToSystemHaVclusterVdomArrayOutputWithContext(ctx context.Context) SystemHaVclusterVdomArrayOutput {
	return o
}

func (o SystemHaVclusterVdomArrayOutput) Index(i pulumi.IntInput) SystemHaVclusterVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemHaVclusterVdom {
		return vs[0].([]SystemHaVclusterVdom)[vs[1].(int)]
	}).(SystemHaVclusterVdomOutput)
}

type SystemIkeDhGroup14 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup14Input is an input type that accepts SystemIkeDhGroup14Args and SystemIkeDhGroup14Output values.
// You can construct a concrete instance of `SystemIkeDhGroup14Input` via:
//
//	SystemIkeDhGroup14Args{...}
type SystemIkeDhGroup14Input interface {
	pulumi.Input

	ToSystemIkeDhGroup14Output() SystemIkeDhGroup14Output
	ToSystemIkeDhGroup14OutputWithContext(context.Context) SystemIkeDhGroup14Output
}

type SystemIkeDhGroup14Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup14Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup14)(nil)).Elem()
}

func (i SystemIkeDhGroup14Args) ToSystemIkeDhGroup14Output() SystemIkeDhGroup14Output {
	return i.ToSystemIkeDhGroup14OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup14Args) ToSystemIkeDhGroup14OutputWithContext(ctx context.Context) SystemIkeDhGroup14Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup14Output)
}

func (i SystemIkeDhGroup14Args) ToSystemIkeDhGroup14PtrOutput() SystemIkeDhGroup14PtrOutput {
	return i.ToSystemIkeDhGroup14PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup14Args) ToSystemIkeDhGroup14PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup14PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup14Output).ToSystemIkeDhGroup14PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup14PtrInput is an input type that accepts SystemIkeDhGroup14Args, SystemIkeDhGroup14Ptr and SystemIkeDhGroup14PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup14PtrInput` via:
//
//	        SystemIkeDhGroup14Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup14PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup14PtrOutput() SystemIkeDhGroup14PtrOutput
	ToSystemIkeDhGroup14PtrOutputWithContext(context.Context) SystemIkeDhGroup14PtrOutput
}

type systemIkeDhGroup14PtrType SystemIkeDhGroup14Args

func SystemIkeDhGroup14Ptr(v *SystemIkeDhGroup14Args) SystemIkeDhGroup14PtrInput {
	return (*systemIkeDhGroup14PtrType)(v)
}

func (*systemIkeDhGroup14PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup14)(nil)).Elem()
}

func (i *systemIkeDhGroup14PtrType) ToSystemIkeDhGroup14PtrOutput() SystemIkeDhGroup14PtrOutput {
	return i.ToSystemIkeDhGroup14PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup14PtrType) ToSystemIkeDhGroup14PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup14PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup14PtrOutput)
}

type SystemIkeDhGroup14Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup14Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup14)(nil)).Elem()
}

func (o SystemIkeDhGroup14Output) ToSystemIkeDhGroup14Output() SystemIkeDhGroup14Output {
	return o
}

func (o SystemIkeDhGroup14Output) ToSystemIkeDhGroup14OutputWithContext(ctx context.Context) SystemIkeDhGroup14Output {
	return o
}

func (o SystemIkeDhGroup14Output) ToSystemIkeDhGroup14PtrOutput() SystemIkeDhGroup14PtrOutput {
	return o.ToSystemIkeDhGroup14PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup14Output) ToSystemIkeDhGroup14PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup14PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup14) *SystemIkeDhGroup14 {
		return &v
	}).(SystemIkeDhGroup14PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup14Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup14) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup14Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup14) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup14Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup14) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup14PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup14PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup14)(nil)).Elem()
}

func (o SystemIkeDhGroup14PtrOutput) ToSystemIkeDhGroup14PtrOutput() SystemIkeDhGroup14PtrOutput {
	return o
}

func (o SystemIkeDhGroup14PtrOutput) ToSystemIkeDhGroup14PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup14PtrOutput {
	return o
}

func (o SystemIkeDhGroup14PtrOutput) Elem() SystemIkeDhGroup14Output {
	return o.ApplyT(func(v *SystemIkeDhGroup14) SystemIkeDhGroup14 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup14
		return ret
	}).(SystemIkeDhGroup14Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup14PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup14) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup14PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup14) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup14PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup14) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup15 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup15Input is an input type that accepts SystemIkeDhGroup15Args and SystemIkeDhGroup15Output values.
// You can construct a concrete instance of `SystemIkeDhGroup15Input` via:
//
//	SystemIkeDhGroup15Args{...}
type SystemIkeDhGroup15Input interface {
	pulumi.Input

	ToSystemIkeDhGroup15Output() SystemIkeDhGroup15Output
	ToSystemIkeDhGroup15OutputWithContext(context.Context) SystemIkeDhGroup15Output
}

type SystemIkeDhGroup15Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup15Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup15)(nil)).Elem()
}

func (i SystemIkeDhGroup15Args) ToSystemIkeDhGroup15Output() SystemIkeDhGroup15Output {
	return i.ToSystemIkeDhGroup15OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup15Args) ToSystemIkeDhGroup15OutputWithContext(ctx context.Context) SystemIkeDhGroup15Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup15Output)
}

func (i SystemIkeDhGroup15Args) ToSystemIkeDhGroup15PtrOutput() SystemIkeDhGroup15PtrOutput {
	return i.ToSystemIkeDhGroup15PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup15Args) ToSystemIkeDhGroup15PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup15PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup15Output).ToSystemIkeDhGroup15PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup15PtrInput is an input type that accepts SystemIkeDhGroup15Args, SystemIkeDhGroup15Ptr and SystemIkeDhGroup15PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup15PtrInput` via:
//
//	        SystemIkeDhGroup15Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup15PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup15PtrOutput() SystemIkeDhGroup15PtrOutput
	ToSystemIkeDhGroup15PtrOutputWithContext(context.Context) SystemIkeDhGroup15PtrOutput
}

type systemIkeDhGroup15PtrType SystemIkeDhGroup15Args

func SystemIkeDhGroup15Ptr(v *SystemIkeDhGroup15Args) SystemIkeDhGroup15PtrInput {
	return (*systemIkeDhGroup15PtrType)(v)
}

func (*systemIkeDhGroup15PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup15)(nil)).Elem()
}

func (i *systemIkeDhGroup15PtrType) ToSystemIkeDhGroup15PtrOutput() SystemIkeDhGroup15PtrOutput {
	return i.ToSystemIkeDhGroup15PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup15PtrType) ToSystemIkeDhGroup15PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup15PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup15PtrOutput)
}

type SystemIkeDhGroup15Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup15Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup15)(nil)).Elem()
}

func (o SystemIkeDhGroup15Output) ToSystemIkeDhGroup15Output() SystemIkeDhGroup15Output {
	return o
}

func (o SystemIkeDhGroup15Output) ToSystemIkeDhGroup15OutputWithContext(ctx context.Context) SystemIkeDhGroup15Output {
	return o
}

func (o SystemIkeDhGroup15Output) ToSystemIkeDhGroup15PtrOutput() SystemIkeDhGroup15PtrOutput {
	return o.ToSystemIkeDhGroup15PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup15Output) ToSystemIkeDhGroup15PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup15PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup15) *SystemIkeDhGroup15 {
		return &v
	}).(SystemIkeDhGroup15PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup15Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup15) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup15Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup15) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup15Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup15) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup15PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup15PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup15)(nil)).Elem()
}

func (o SystemIkeDhGroup15PtrOutput) ToSystemIkeDhGroup15PtrOutput() SystemIkeDhGroup15PtrOutput {
	return o
}

func (o SystemIkeDhGroup15PtrOutput) ToSystemIkeDhGroup15PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup15PtrOutput {
	return o
}

func (o SystemIkeDhGroup15PtrOutput) Elem() SystemIkeDhGroup15Output {
	return o.ApplyT(func(v *SystemIkeDhGroup15) SystemIkeDhGroup15 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup15
		return ret
	}).(SystemIkeDhGroup15Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup15PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup15) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup15PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup15) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup15PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup15) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup16 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup16Input is an input type that accepts SystemIkeDhGroup16Args and SystemIkeDhGroup16Output values.
// You can construct a concrete instance of `SystemIkeDhGroup16Input` via:
//
//	SystemIkeDhGroup16Args{...}
type SystemIkeDhGroup16Input interface {
	pulumi.Input

	ToSystemIkeDhGroup16Output() SystemIkeDhGroup16Output
	ToSystemIkeDhGroup16OutputWithContext(context.Context) SystemIkeDhGroup16Output
}

type SystemIkeDhGroup16Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup16Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup16)(nil)).Elem()
}

func (i SystemIkeDhGroup16Args) ToSystemIkeDhGroup16Output() SystemIkeDhGroup16Output {
	return i.ToSystemIkeDhGroup16OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup16Args) ToSystemIkeDhGroup16OutputWithContext(ctx context.Context) SystemIkeDhGroup16Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup16Output)
}

func (i SystemIkeDhGroup16Args) ToSystemIkeDhGroup16PtrOutput() SystemIkeDhGroup16PtrOutput {
	return i.ToSystemIkeDhGroup16PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup16Args) ToSystemIkeDhGroup16PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup16PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup16Output).ToSystemIkeDhGroup16PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup16PtrInput is an input type that accepts SystemIkeDhGroup16Args, SystemIkeDhGroup16Ptr and SystemIkeDhGroup16PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup16PtrInput` via:
//
//	        SystemIkeDhGroup16Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup16PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup16PtrOutput() SystemIkeDhGroup16PtrOutput
	ToSystemIkeDhGroup16PtrOutputWithContext(context.Context) SystemIkeDhGroup16PtrOutput
}

type systemIkeDhGroup16PtrType SystemIkeDhGroup16Args

func SystemIkeDhGroup16Ptr(v *SystemIkeDhGroup16Args) SystemIkeDhGroup16PtrInput {
	return (*systemIkeDhGroup16PtrType)(v)
}

func (*systemIkeDhGroup16PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup16)(nil)).Elem()
}

func (i *systemIkeDhGroup16PtrType) ToSystemIkeDhGroup16PtrOutput() SystemIkeDhGroup16PtrOutput {
	return i.ToSystemIkeDhGroup16PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup16PtrType) ToSystemIkeDhGroup16PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup16PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup16PtrOutput)
}

type SystemIkeDhGroup16Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup16Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup16)(nil)).Elem()
}

func (o SystemIkeDhGroup16Output) ToSystemIkeDhGroup16Output() SystemIkeDhGroup16Output {
	return o
}

func (o SystemIkeDhGroup16Output) ToSystemIkeDhGroup16OutputWithContext(ctx context.Context) SystemIkeDhGroup16Output {
	return o
}

func (o SystemIkeDhGroup16Output) ToSystemIkeDhGroup16PtrOutput() SystemIkeDhGroup16PtrOutput {
	return o.ToSystemIkeDhGroup16PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup16Output) ToSystemIkeDhGroup16PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup16PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup16) *SystemIkeDhGroup16 {
		return &v
	}).(SystemIkeDhGroup16PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup16Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup16) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup16Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup16) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup16Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup16) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup16PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup16PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup16)(nil)).Elem()
}

func (o SystemIkeDhGroup16PtrOutput) ToSystemIkeDhGroup16PtrOutput() SystemIkeDhGroup16PtrOutput {
	return o
}

func (o SystemIkeDhGroup16PtrOutput) ToSystemIkeDhGroup16PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup16PtrOutput {
	return o
}

func (o SystemIkeDhGroup16PtrOutput) Elem() SystemIkeDhGroup16Output {
	return o.ApplyT(func(v *SystemIkeDhGroup16) SystemIkeDhGroup16 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup16
		return ret
	}).(SystemIkeDhGroup16Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup16PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup16) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup16PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup16) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup16PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup16) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup17 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup17Input is an input type that accepts SystemIkeDhGroup17Args and SystemIkeDhGroup17Output values.
// You can construct a concrete instance of `SystemIkeDhGroup17Input` via:
//
//	SystemIkeDhGroup17Args{...}
type SystemIkeDhGroup17Input interface {
	pulumi.Input

	ToSystemIkeDhGroup17Output() SystemIkeDhGroup17Output
	ToSystemIkeDhGroup17OutputWithContext(context.Context) SystemIkeDhGroup17Output
}

type SystemIkeDhGroup17Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup17Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup17)(nil)).Elem()
}

func (i SystemIkeDhGroup17Args) ToSystemIkeDhGroup17Output() SystemIkeDhGroup17Output {
	return i.ToSystemIkeDhGroup17OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup17Args) ToSystemIkeDhGroup17OutputWithContext(ctx context.Context) SystemIkeDhGroup17Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup17Output)
}

func (i SystemIkeDhGroup17Args) ToSystemIkeDhGroup17PtrOutput() SystemIkeDhGroup17PtrOutput {
	return i.ToSystemIkeDhGroup17PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup17Args) ToSystemIkeDhGroup17PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup17PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup17Output).ToSystemIkeDhGroup17PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup17PtrInput is an input type that accepts SystemIkeDhGroup17Args, SystemIkeDhGroup17Ptr and SystemIkeDhGroup17PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup17PtrInput` via:
//
//	        SystemIkeDhGroup17Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup17PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup17PtrOutput() SystemIkeDhGroup17PtrOutput
	ToSystemIkeDhGroup17PtrOutputWithContext(context.Context) SystemIkeDhGroup17PtrOutput
}

type systemIkeDhGroup17PtrType SystemIkeDhGroup17Args

func SystemIkeDhGroup17Ptr(v *SystemIkeDhGroup17Args) SystemIkeDhGroup17PtrInput {
	return (*systemIkeDhGroup17PtrType)(v)
}

func (*systemIkeDhGroup17PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup17)(nil)).Elem()
}

func (i *systemIkeDhGroup17PtrType) ToSystemIkeDhGroup17PtrOutput() SystemIkeDhGroup17PtrOutput {
	return i.ToSystemIkeDhGroup17PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup17PtrType) ToSystemIkeDhGroup17PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup17PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup17PtrOutput)
}

type SystemIkeDhGroup17Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup17Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup17)(nil)).Elem()
}

func (o SystemIkeDhGroup17Output) ToSystemIkeDhGroup17Output() SystemIkeDhGroup17Output {
	return o
}

func (o SystemIkeDhGroup17Output) ToSystemIkeDhGroup17OutputWithContext(ctx context.Context) SystemIkeDhGroup17Output {
	return o
}

func (o SystemIkeDhGroup17Output) ToSystemIkeDhGroup17PtrOutput() SystemIkeDhGroup17PtrOutput {
	return o.ToSystemIkeDhGroup17PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup17Output) ToSystemIkeDhGroup17PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup17PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup17) *SystemIkeDhGroup17 {
		return &v
	}).(SystemIkeDhGroup17PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup17Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup17) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup17Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup17) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup17Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup17) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup17PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup17PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup17)(nil)).Elem()
}

func (o SystemIkeDhGroup17PtrOutput) ToSystemIkeDhGroup17PtrOutput() SystemIkeDhGroup17PtrOutput {
	return o
}

func (o SystemIkeDhGroup17PtrOutput) ToSystemIkeDhGroup17PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup17PtrOutput {
	return o
}

func (o SystemIkeDhGroup17PtrOutput) Elem() SystemIkeDhGroup17Output {
	return o.ApplyT(func(v *SystemIkeDhGroup17) SystemIkeDhGroup17 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup17
		return ret
	}).(SystemIkeDhGroup17Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup17PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup17) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup17PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup17) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup17PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup17) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup18 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup18Input is an input type that accepts SystemIkeDhGroup18Args and SystemIkeDhGroup18Output values.
// You can construct a concrete instance of `SystemIkeDhGroup18Input` via:
//
//	SystemIkeDhGroup18Args{...}
type SystemIkeDhGroup18Input interface {
	pulumi.Input

	ToSystemIkeDhGroup18Output() SystemIkeDhGroup18Output
	ToSystemIkeDhGroup18OutputWithContext(context.Context) SystemIkeDhGroup18Output
}

type SystemIkeDhGroup18Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup18Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup18)(nil)).Elem()
}

func (i SystemIkeDhGroup18Args) ToSystemIkeDhGroup18Output() SystemIkeDhGroup18Output {
	return i.ToSystemIkeDhGroup18OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup18Args) ToSystemIkeDhGroup18OutputWithContext(ctx context.Context) SystemIkeDhGroup18Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup18Output)
}

func (i SystemIkeDhGroup18Args) ToSystemIkeDhGroup18PtrOutput() SystemIkeDhGroup18PtrOutput {
	return i.ToSystemIkeDhGroup18PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup18Args) ToSystemIkeDhGroup18PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup18PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup18Output).ToSystemIkeDhGroup18PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup18PtrInput is an input type that accepts SystemIkeDhGroup18Args, SystemIkeDhGroup18Ptr and SystemIkeDhGroup18PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup18PtrInput` via:
//
//	        SystemIkeDhGroup18Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup18PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup18PtrOutput() SystemIkeDhGroup18PtrOutput
	ToSystemIkeDhGroup18PtrOutputWithContext(context.Context) SystemIkeDhGroup18PtrOutput
}

type systemIkeDhGroup18PtrType SystemIkeDhGroup18Args

func SystemIkeDhGroup18Ptr(v *SystemIkeDhGroup18Args) SystemIkeDhGroup18PtrInput {
	return (*systemIkeDhGroup18PtrType)(v)
}

func (*systemIkeDhGroup18PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup18)(nil)).Elem()
}

func (i *systemIkeDhGroup18PtrType) ToSystemIkeDhGroup18PtrOutput() SystemIkeDhGroup18PtrOutput {
	return i.ToSystemIkeDhGroup18PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup18PtrType) ToSystemIkeDhGroup18PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup18PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup18PtrOutput)
}

type SystemIkeDhGroup18Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup18Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup18)(nil)).Elem()
}

func (o SystemIkeDhGroup18Output) ToSystemIkeDhGroup18Output() SystemIkeDhGroup18Output {
	return o
}

func (o SystemIkeDhGroup18Output) ToSystemIkeDhGroup18OutputWithContext(ctx context.Context) SystemIkeDhGroup18Output {
	return o
}

func (o SystemIkeDhGroup18Output) ToSystemIkeDhGroup18PtrOutput() SystemIkeDhGroup18PtrOutput {
	return o.ToSystemIkeDhGroup18PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup18Output) ToSystemIkeDhGroup18PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup18PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup18) *SystemIkeDhGroup18 {
		return &v
	}).(SystemIkeDhGroup18PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup18Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup18) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup18Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup18) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup18Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup18) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup18PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup18PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup18)(nil)).Elem()
}

func (o SystemIkeDhGroup18PtrOutput) ToSystemIkeDhGroup18PtrOutput() SystemIkeDhGroup18PtrOutput {
	return o
}

func (o SystemIkeDhGroup18PtrOutput) ToSystemIkeDhGroup18PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup18PtrOutput {
	return o
}

func (o SystemIkeDhGroup18PtrOutput) Elem() SystemIkeDhGroup18Output {
	return o.ApplyT(func(v *SystemIkeDhGroup18) SystemIkeDhGroup18 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup18
		return ret
	}).(SystemIkeDhGroup18Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup18PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup18) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup18PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup18) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup18PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup18) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup19 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup19Input is an input type that accepts SystemIkeDhGroup19Args and SystemIkeDhGroup19Output values.
// You can construct a concrete instance of `SystemIkeDhGroup19Input` via:
//
//	SystemIkeDhGroup19Args{...}
type SystemIkeDhGroup19Input interface {
	pulumi.Input

	ToSystemIkeDhGroup19Output() SystemIkeDhGroup19Output
	ToSystemIkeDhGroup19OutputWithContext(context.Context) SystemIkeDhGroup19Output
}

type SystemIkeDhGroup19Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup19Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup19)(nil)).Elem()
}

func (i SystemIkeDhGroup19Args) ToSystemIkeDhGroup19Output() SystemIkeDhGroup19Output {
	return i.ToSystemIkeDhGroup19OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup19Args) ToSystemIkeDhGroup19OutputWithContext(ctx context.Context) SystemIkeDhGroup19Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup19Output)
}

func (i SystemIkeDhGroup19Args) ToSystemIkeDhGroup19PtrOutput() SystemIkeDhGroup19PtrOutput {
	return i.ToSystemIkeDhGroup19PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup19Args) ToSystemIkeDhGroup19PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup19PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup19Output).ToSystemIkeDhGroup19PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup19PtrInput is an input type that accepts SystemIkeDhGroup19Args, SystemIkeDhGroup19Ptr and SystemIkeDhGroup19PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup19PtrInput` via:
//
//	        SystemIkeDhGroup19Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup19PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup19PtrOutput() SystemIkeDhGroup19PtrOutput
	ToSystemIkeDhGroup19PtrOutputWithContext(context.Context) SystemIkeDhGroup19PtrOutput
}

type systemIkeDhGroup19PtrType SystemIkeDhGroup19Args

func SystemIkeDhGroup19Ptr(v *SystemIkeDhGroup19Args) SystemIkeDhGroup19PtrInput {
	return (*systemIkeDhGroup19PtrType)(v)
}

func (*systemIkeDhGroup19PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup19)(nil)).Elem()
}

func (i *systemIkeDhGroup19PtrType) ToSystemIkeDhGroup19PtrOutput() SystemIkeDhGroup19PtrOutput {
	return i.ToSystemIkeDhGroup19PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup19PtrType) ToSystemIkeDhGroup19PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup19PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup19PtrOutput)
}

type SystemIkeDhGroup19Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup19Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup19)(nil)).Elem()
}

func (o SystemIkeDhGroup19Output) ToSystemIkeDhGroup19Output() SystemIkeDhGroup19Output {
	return o
}

func (o SystemIkeDhGroup19Output) ToSystemIkeDhGroup19OutputWithContext(ctx context.Context) SystemIkeDhGroup19Output {
	return o
}

func (o SystemIkeDhGroup19Output) ToSystemIkeDhGroup19PtrOutput() SystemIkeDhGroup19PtrOutput {
	return o.ToSystemIkeDhGroup19PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup19Output) ToSystemIkeDhGroup19PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup19PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup19) *SystemIkeDhGroup19 {
		return &v
	}).(SystemIkeDhGroup19PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup19Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup19) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup19Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup19) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup19Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup19) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup19PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup19PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup19)(nil)).Elem()
}

func (o SystemIkeDhGroup19PtrOutput) ToSystemIkeDhGroup19PtrOutput() SystemIkeDhGroup19PtrOutput {
	return o
}

func (o SystemIkeDhGroup19PtrOutput) ToSystemIkeDhGroup19PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup19PtrOutput {
	return o
}

func (o SystemIkeDhGroup19PtrOutput) Elem() SystemIkeDhGroup19Output {
	return o.ApplyT(func(v *SystemIkeDhGroup19) SystemIkeDhGroup19 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup19
		return ret
	}).(SystemIkeDhGroup19Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup19PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup19) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup19PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup19) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup19PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup19) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup1 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup1Input is an input type that accepts SystemIkeDhGroup1Args and SystemIkeDhGroup1Output values.
// You can construct a concrete instance of `SystemIkeDhGroup1Input` via:
//
//	SystemIkeDhGroup1Args{...}
type SystemIkeDhGroup1Input interface {
	pulumi.Input

	ToSystemIkeDhGroup1Output() SystemIkeDhGroup1Output
	ToSystemIkeDhGroup1OutputWithContext(context.Context) SystemIkeDhGroup1Output
}

type SystemIkeDhGroup1Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup1)(nil)).Elem()
}

func (i SystemIkeDhGroup1Args) ToSystemIkeDhGroup1Output() SystemIkeDhGroup1Output {
	return i.ToSystemIkeDhGroup1OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup1Args) ToSystemIkeDhGroup1OutputWithContext(ctx context.Context) SystemIkeDhGroup1Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup1Output)
}

func (i SystemIkeDhGroup1Args) ToSystemIkeDhGroup1PtrOutput() SystemIkeDhGroup1PtrOutput {
	return i.ToSystemIkeDhGroup1PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup1Args) ToSystemIkeDhGroup1PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup1Output).ToSystemIkeDhGroup1PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup1PtrInput is an input type that accepts SystemIkeDhGroup1Args, SystemIkeDhGroup1Ptr and SystemIkeDhGroup1PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup1PtrInput` via:
//
//	        SystemIkeDhGroup1Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup1PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup1PtrOutput() SystemIkeDhGroup1PtrOutput
	ToSystemIkeDhGroup1PtrOutputWithContext(context.Context) SystemIkeDhGroup1PtrOutput
}

type systemIkeDhGroup1PtrType SystemIkeDhGroup1Args

func SystemIkeDhGroup1Ptr(v *SystemIkeDhGroup1Args) SystemIkeDhGroup1PtrInput {
	return (*systemIkeDhGroup1PtrType)(v)
}

func (*systemIkeDhGroup1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup1)(nil)).Elem()
}

func (i *systemIkeDhGroup1PtrType) ToSystemIkeDhGroup1PtrOutput() SystemIkeDhGroup1PtrOutput {
	return i.ToSystemIkeDhGroup1PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup1PtrType) ToSystemIkeDhGroup1PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup1PtrOutput)
}

type SystemIkeDhGroup1Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup1)(nil)).Elem()
}

func (o SystemIkeDhGroup1Output) ToSystemIkeDhGroup1Output() SystemIkeDhGroup1Output {
	return o
}

func (o SystemIkeDhGroup1Output) ToSystemIkeDhGroup1OutputWithContext(ctx context.Context) SystemIkeDhGroup1Output {
	return o
}

func (o SystemIkeDhGroup1Output) ToSystemIkeDhGroup1PtrOutput() SystemIkeDhGroup1PtrOutput {
	return o.ToSystemIkeDhGroup1PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup1Output) ToSystemIkeDhGroup1PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup1) *SystemIkeDhGroup1 {
		return &v
	}).(SystemIkeDhGroup1PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup1Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup1) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup1Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup1) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup1Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup1) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup1PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup1)(nil)).Elem()
}

func (o SystemIkeDhGroup1PtrOutput) ToSystemIkeDhGroup1PtrOutput() SystemIkeDhGroup1PtrOutput {
	return o
}

func (o SystemIkeDhGroup1PtrOutput) ToSystemIkeDhGroup1PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup1PtrOutput {
	return o
}

func (o SystemIkeDhGroup1PtrOutput) Elem() SystemIkeDhGroup1Output {
	return o.ApplyT(func(v *SystemIkeDhGroup1) SystemIkeDhGroup1 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup1
		return ret
	}).(SystemIkeDhGroup1Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup1PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup1) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup1PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup1) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup1PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup1) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup20 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup20Input is an input type that accepts SystemIkeDhGroup20Args and SystemIkeDhGroup20Output values.
// You can construct a concrete instance of `SystemIkeDhGroup20Input` via:
//
//	SystemIkeDhGroup20Args{...}
type SystemIkeDhGroup20Input interface {
	pulumi.Input

	ToSystemIkeDhGroup20Output() SystemIkeDhGroup20Output
	ToSystemIkeDhGroup20OutputWithContext(context.Context) SystemIkeDhGroup20Output
}

type SystemIkeDhGroup20Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup20Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup20)(nil)).Elem()
}

func (i SystemIkeDhGroup20Args) ToSystemIkeDhGroup20Output() SystemIkeDhGroup20Output {
	return i.ToSystemIkeDhGroup20OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup20Args) ToSystemIkeDhGroup20OutputWithContext(ctx context.Context) SystemIkeDhGroup20Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup20Output)
}

func (i SystemIkeDhGroup20Args) ToSystemIkeDhGroup20PtrOutput() SystemIkeDhGroup20PtrOutput {
	return i.ToSystemIkeDhGroup20PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup20Args) ToSystemIkeDhGroup20PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup20PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup20Output).ToSystemIkeDhGroup20PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup20PtrInput is an input type that accepts SystemIkeDhGroup20Args, SystemIkeDhGroup20Ptr and SystemIkeDhGroup20PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup20PtrInput` via:
//
//	        SystemIkeDhGroup20Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup20PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup20PtrOutput() SystemIkeDhGroup20PtrOutput
	ToSystemIkeDhGroup20PtrOutputWithContext(context.Context) SystemIkeDhGroup20PtrOutput
}

type systemIkeDhGroup20PtrType SystemIkeDhGroup20Args

func SystemIkeDhGroup20Ptr(v *SystemIkeDhGroup20Args) SystemIkeDhGroup20PtrInput {
	return (*systemIkeDhGroup20PtrType)(v)
}

func (*systemIkeDhGroup20PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup20)(nil)).Elem()
}

func (i *systemIkeDhGroup20PtrType) ToSystemIkeDhGroup20PtrOutput() SystemIkeDhGroup20PtrOutput {
	return i.ToSystemIkeDhGroup20PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup20PtrType) ToSystemIkeDhGroup20PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup20PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup20PtrOutput)
}

type SystemIkeDhGroup20Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup20)(nil)).Elem()
}

func (o SystemIkeDhGroup20Output) ToSystemIkeDhGroup20Output() SystemIkeDhGroup20Output {
	return o
}

func (o SystemIkeDhGroup20Output) ToSystemIkeDhGroup20OutputWithContext(ctx context.Context) SystemIkeDhGroup20Output {
	return o
}

func (o SystemIkeDhGroup20Output) ToSystemIkeDhGroup20PtrOutput() SystemIkeDhGroup20PtrOutput {
	return o.ToSystemIkeDhGroup20PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup20Output) ToSystemIkeDhGroup20PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup20PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup20) *SystemIkeDhGroup20 {
		return &v
	}).(SystemIkeDhGroup20PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup20Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup20) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup20Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup20) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup20Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup20) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup20PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup20PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup20)(nil)).Elem()
}

func (o SystemIkeDhGroup20PtrOutput) ToSystemIkeDhGroup20PtrOutput() SystemIkeDhGroup20PtrOutput {
	return o
}

func (o SystemIkeDhGroup20PtrOutput) ToSystemIkeDhGroup20PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup20PtrOutput {
	return o
}

func (o SystemIkeDhGroup20PtrOutput) Elem() SystemIkeDhGroup20Output {
	return o.ApplyT(func(v *SystemIkeDhGroup20) SystemIkeDhGroup20 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup20
		return ret
	}).(SystemIkeDhGroup20Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup20PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup20) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup20PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup20) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup20PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup20) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup21 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup21Input is an input type that accepts SystemIkeDhGroup21Args and SystemIkeDhGroup21Output values.
// You can construct a concrete instance of `SystemIkeDhGroup21Input` via:
//
//	SystemIkeDhGroup21Args{...}
type SystemIkeDhGroup21Input interface {
	pulumi.Input

	ToSystemIkeDhGroup21Output() SystemIkeDhGroup21Output
	ToSystemIkeDhGroup21OutputWithContext(context.Context) SystemIkeDhGroup21Output
}

type SystemIkeDhGroup21Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup21Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup21)(nil)).Elem()
}

func (i SystemIkeDhGroup21Args) ToSystemIkeDhGroup21Output() SystemIkeDhGroup21Output {
	return i.ToSystemIkeDhGroup21OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup21Args) ToSystemIkeDhGroup21OutputWithContext(ctx context.Context) SystemIkeDhGroup21Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup21Output)
}

func (i SystemIkeDhGroup21Args) ToSystemIkeDhGroup21PtrOutput() SystemIkeDhGroup21PtrOutput {
	return i.ToSystemIkeDhGroup21PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup21Args) ToSystemIkeDhGroup21PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup21PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup21Output).ToSystemIkeDhGroup21PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup21PtrInput is an input type that accepts SystemIkeDhGroup21Args, SystemIkeDhGroup21Ptr and SystemIkeDhGroup21PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup21PtrInput` via:
//
//	        SystemIkeDhGroup21Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup21PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup21PtrOutput() SystemIkeDhGroup21PtrOutput
	ToSystemIkeDhGroup21PtrOutputWithContext(context.Context) SystemIkeDhGroup21PtrOutput
}

type systemIkeDhGroup21PtrType SystemIkeDhGroup21Args

func SystemIkeDhGroup21Ptr(v *SystemIkeDhGroup21Args) SystemIkeDhGroup21PtrInput {
	return (*systemIkeDhGroup21PtrType)(v)
}

func (*systemIkeDhGroup21PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup21)(nil)).Elem()
}

func (i *systemIkeDhGroup21PtrType) ToSystemIkeDhGroup21PtrOutput() SystemIkeDhGroup21PtrOutput {
	return i.ToSystemIkeDhGroup21PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup21PtrType) ToSystemIkeDhGroup21PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup21PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup21PtrOutput)
}

type SystemIkeDhGroup21Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup21Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup21)(nil)).Elem()
}

func (o SystemIkeDhGroup21Output) ToSystemIkeDhGroup21Output() SystemIkeDhGroup21Output {
	return o
}

func (o SystemIkeDhGroup21Output) ToSystemIkeDhGroup21OutputWithContext(ctx context.Context) SystemIkeDhGroup21Output {
	return o
}

func (o SystemIkeDhGroup21Output) ToSystemIkeDhGroup21PtrOutput() SystemIkeDhGroup21PtrOutput {
	return o.ToSystemIkeDhGroup21PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup21Output) ToSystemIkeDhGroup21PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup21PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup21) *SystemIkeDhGroup21 {
		return &v
	}).(SystemIkeDhGroup21PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup21Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup21) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup21Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup21) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup21Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup21) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup21PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup21PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup21)(nil)).Elem()
}

func (o SystemIkeDhGroup21PtrOutput) ToSystemIkeDhGroup21PtrOutput() SystemIkeDhGroup21PtrOutput {
	return o
}

func (o SystemIkeDhGroup21PtrOutput) ToSystemIkeDhGroup21PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup21PtrOutput {
	return o
}

func (o SystemIkeDhGroup21PtrOutput) Elem() SystemIkeDhGroup21Output {
	return o.ApplyT(func(v *SystemIkeDhGroup21) SystemIkeDhGroup21 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup21
		return ret
	}).(SystemIkeDhGroup21Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup21PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup21) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup21PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup21) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup21PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup21) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup27 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup27Input is an input type that accepts SystemIkeDhGroup27Args and SystemIkeDhGroup27Output values.
// You can construct a concrete instance of `SystemIkeDhGroup27Input` via:
//
//	SystemIkeDhGroup27Args{...}
type SystemIkeDhGroup27Input interface {
	pulumi.Input

	ToSystemIkeDhGroup27Output() SystemIkeDhGroup27Output
	ToSystemIkeDhGroup27OutputWithContext(context.Context) SystemIkeDhGroup27Output
}

type SystemIkeDhGroup27Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup27Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup27)(nil)).Elem()
}

func (i SystemIkeDhGroup27Args) ToSystemIkeDhGroup27Output() SystemIkeDhGroup27Output {
	return i.ToSystemIkeDhGroup27OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup27Args) ToSystemIkeDhGroup27OutputWithContext(ctx context.Context) SystemIkeDhGroup27Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup27Output)
}

func (i SystemIkeDhGroup27Args) ToSystemIkeDhGroup27PtrOutput() SystemIkeDhGroup27PtrOutput {
	return i.ToSystemIkeDhGroup27PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup27Args) ToSystemIkeDhGroup27PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup27PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup27Output).ToSystemIkeDhGroup27PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup27PtrInput is an input type that accepts SystemIkeDhGroup27Args, SystemIkeDhGroup27Ptr and SystemIkeDhGroup27PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup27PtrInput` via:
//
//	        SystemIkeDhGroup27Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup27PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup27PtrOutput() SystemIkeDhGroup27PtrOutput
	ToSystemIkeDhGroup27PtrOutputWithContext(context.Context) SystemIkeDhGroup27PtrOutput
}

type systemIkeDhGroup27PtrType SystemIkeDhGroup27Args

func SystemIkeDhGroup27Ptr(v *SystemIkeDhGroup27Args) SystemIkeDhGroup27PtrInput {
	return (*systemIkeDhGroup27PtrType)(v)
}

func (*systemIkeDhGroup27PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup27)(nil)).Elem()
}

func (i *systemIkeDhGroup27PtrType) ToSystemIkeDhGroup27PtrOutput() SystemIkeDhGroup27PtrOutput {
	return i.ToSystemIkeDhGroup27PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup27PtrType) ToSystemIkeDhGroup27PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup27PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup27PtrOutput)
}

type SystemIkeDhGroup27Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup27Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup27)(nil)).Elem()
}

func (o SystemIkeDhGroup27Output) ToSystemIkeDhGroup27Output() SystemIkeDhGroup27Output {
	return o
}

func (o SystemIkeDhGroup27Output) ToSystemIkeDhGroup27OutputWithContext(ctx context.Context) SystemIkeDhGroup27Output {
	return o
}

func (o SystemIkeDhGroup27Output) ToSystemIkeDhGroup27PtrOutput() SystemIkeDhGroup27PtrOutput {
	return o.ToSystemIkeDhGroup27PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup27Output) ToSystemIkeDhGroup27PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup27PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup27) *SystemIkeDhGroup27 {
		return &v
	}).(SystemIkeDhGroup27PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup27Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup27) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup27Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup27) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup27Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup27) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup27PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup27PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup27)(nil)).Elem()
}

func (o SystemIkeDhGroup27PtrOutput) ToSystemIkeDhGroup27PtrOutput() SystemIkeDhGroup27PtrOutput {
	return o
}

func (o SystemIkeDhGroup27PtrOutput) ToSystemIkeDhGroup27PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup27PtrOutput {
	return o
}

func (o SystemIkeDhGroup27PtrOutput) Elem() SystemIkeDhGroup27Output {
	return o.ApplyT(func(v *SystemIkeDhGroup27) SystemIkeDhGroup27 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup27
		return ret
	}).(SystemIkeDhGroup27Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup27PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup27) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup27PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup27) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup27PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup27) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup28 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup28Input is an input type that accepts SystemIkeDhGroup28Args and SystemIkeDhGroup28Output values.
// You can construct a concrete instance of `SystemIkeDhGroup28Input` via:
//
//	SystemIkeDhGroup28Args{...}
type SystemIkeDhGroup28Input interface {
	pulumi.Input

	ToSystemIkeDhGroup28Output() SystemIkeDhGroup28Output
	ToSystemIkeDhGroup28OutputWithContext(context.Context) SystemIkeDhGroup28Output
}

type SystemIkeDhGroup28Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup28Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup28)(nil)).Elem()
}

func (i SystemIkeDhGroup28Args) ToSystemIkeDhGroup28Output() SystemIkeDhGroup28Output {
	return i.ToSystemIkeDhGroup28OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup28Args) ToSystemIkeDhGroup28OutputWithContext(ctx context.Context) SystemIkeDhGroup28Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup28Output)
}

func (i SystemIkeDhGroup28Args) ToSystemIkeDhGroup28PtrOutput() SystemIkeDhGroup28PtrOutput {
	return i.ToSystemIkeDhGroup28PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup28Args) ToSystemIkeDhGroup28PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup28PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup28Output).ToSystemIkeDhGroup28PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup28PtrInput is an input type that accepts SystemIkeDhGroup28Args, SystemIkeDhGroup28Ptr and SystemIkeDhGroup28PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup28PtrInput` via:
//
//	        SystemIkeDhGroup28Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup28PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup28PtrOutput() SystemIkeDhGroup28PtrOutput
	ToSystemIkeDhGroup28PtrOutputWithContext(context.Context) SystemIkeDhGroup28PtrOutput
}

type systemIkeDhGroup28PtrType SystemIkeDhGroup28Args

func SystemIkeDhGroup28Ptr(v *SystemIkeDhGroup28Args) SystemIkeDhGroup28PtrInput {
	return (*systemIkeDhGroup28PtrType)(v)
}

func (*systemIkeDhGroup28PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup28)(nil)).Elem()
}

func (i *systemIkeDhGroup28PtrType) ToSystemIkeDhGroup28PtrOutput() SystemIkeDhGroup28PtrOutput {
	return i.ToSystemIkeDhGroup28PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup28PtrType) ToSystemIkeDhGroup28PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup28PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup28PtrOutput)
}

type SystemIkeDhGroup28Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup28Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup28)(nil)).Elem()
}

func (o SystemIkeDhGroup28Output) ToSystemIkeDhGroup28Output() SystemIkeDhGroup28Output {
	return o
}

func (o SystemIkeDhGroup28Output) ToSystemIkeDhGroup28OutputWithContext(ctx context.Context) SystemIkeDhGroup28Output {
	return o
}

func (o SystemIkeDhGroup28Output) ToSystemIkeDhGroup28PtrOutput() SystemIkeDhGroup28PtrOutput {
	return o.ToSystemIkeDhGroup28PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup28Output) ToSystemIkeDhGroup28PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup28PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup28) *SystemIkeDhGroup28 {
		return &v
	}).(SystemIkeDhGroup28PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup28Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup28) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup28Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup28) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup28Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup28) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup28PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup28PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup28)(nil)).Elem()
}

func (o SystemIkeDhGroup28PtrOutput) ToSystemIkeDhGroup28PtrOutput() SystemIkeDhGroup28PtrOutput {
	return o
}

func (o SystemIkeDhGroup28PtrOutput) ToSystemIkeDhGroup28PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup28PtrOutput {
	return o
}

func (o SystemIkeDhGroup28PtrOutput) Elem() SystemIkeDhGroup28Output {
	return o.ApplyT(func(v *SystemIkeDhGroup28) SystemIkeDhGroup28 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup28
		return ret
	}).(SystemIkeDhGroup28Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup28PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup28) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup28PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup28) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup28PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup28) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup29 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup29Input is an input type that accepts SystemIkeDhGroup29Args and SystemIkeDhGroup29Output values.
// You can construct a concrete instance of `SystemIkeDhGroup29Input` via:
//
//	SystemIkeDhGroup29Args{...}
type SystemIkeDhGroup29Input interface {
	pulumi.Input

	ToSystemIkeDhGroup29Output() SystemIkeDhGroup29Output
	ToSystemIkeDhGroup29OutputWithContext(context.Context) SystemIkeDhGroup29Output
}

type SystemIkeDhGroup29Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup29Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup29)(nil)).Elem()
}

func (i SystemIkeDhGroup29Args) ToSystemIkeDhGroup29Output() SystemIkeDhGroup29Output {
	return i.ToSystemIkeDhGroup29OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup29Args) ToSystemIkeDhGroup29OutputWithContext(ctx context.Context) SystemIkeDhGroup29Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup29Output)
}

func (i SystemIkeDhGroup29Args) ToSystemIkeDhGroup29PtrOutput() SystemIkeDhGroup29PtrOutput {
	return i.ToSystemIkeDhGroup29PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup29Args) ToSystemIkeDhGroup29PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup29PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup29Output).ToSystemIkeDhGroup29PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup29PtrInput is an input type that accepts SystemIkeDhGroup29Args, SystemIkeDhGroup29Ptr and SystemIkeDhGroup29PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup29PtrInput` via:
//
//	        SystemIkeDhGroup29Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup29PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup29PtrOutput() SystemIkeDhGroup29PtrOutput
	ToSystemIkeDhGroup29PtrOutputWithContext(context.Context) SystemIkeDhGroup29PtrOutput
}

type systemIkeDhGroup29PtrType SystemIkeDhGroup29Args

func SystemIkeDhGroup29Ptr(v *SystemIkeDhGroup29Args) SystemIkeDhGroup29PtrInput {
	return (*systemIkeDhGroup29PtrType)(v)
}

func (*systemIkeDhGroup29PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup29)(nil)).Elem()
}

func (i *systemIkeDhGroup29PtrType) ToSystemIkeDhGroup29PtrOutput() SystemIkeDhGroup29PtrOutput {
	return i.ToSystemIkeDhGroup29PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup29PtrType) ToSystemIkeDhGroup29PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup29PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup29PtrOutput)
}

type SystemIkeDhGroup29Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup29Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup29)(nil)).Elem()
}

func (o SystemIkeDhGroup29Output) ToSystemIkeDhGroup29Output() SystemIkeDhGroup29Output {
	return o
}

func (o SystemIkeDhGroup29Output) ToSystemIkeDhGroup29OutputWithContext(ctx context.Context) SystemIkeDhGroup29Output {
	return o
}

func (o SystemIkeDhGroup29Output) ToSystemIkeDhGroup29PtrOutput() SystemIkeDhGroup29PtrOutput {
	return o.ToSystemIkeDhGroup29PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup29Output) ToSystemIkeDhGroup29PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup29PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup29) *SystemIkeDhGroup29 {
		return &v
	}).(SystemIkeDhGroup29PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup29Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup29) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup29Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup29) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup29Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup29) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup29PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup29PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup29)(nil)).Elem()
}

func (o SystemIkeDhGroup29PtrOutput) ToSystemIkeDhGroup29PtrOutput() SystemIkeDhGroup29PtrOutput {
	return o
}

func (o SystemIkeDhGroup29PtrOutput) ToSystemIkeDhGroup29PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup29PtrOutput {
	return o
}

func (o SystemIkeDhGroup29PtrOutput) Elem() SystemIkeDhGroup29Output {
	return o.ApplyT(func(v *SystemIkeDhGroup29) SystemIkeDhGroup29 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup29
		return ret
	}).(SystemIkeDhGroup29Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup29PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup29) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup29PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup29) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup29PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup29) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup2 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup2Input is an input type that accepts SystemIkeDhGroup2Args and SystemIkeDhGroup2Output values.
// You can construct a concrete instance of `SystemIkeDhGroup2Input` via:
//
//	SystemIkeDhGroup2Args{...}
type SystemIkeDhGroup2Input interface {
	pulumi.Input

	ToSystemIkeDhGroup2Output() SystemIkeDhGroup2Output
	ToSystemIkeDhGroup2OutputWithContext(context.Context) SystemIkeDhGroup2Output
}

type SystemIkeDhGroup2Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup2)(nil)).Elem()
}

func (i SystemIkeDhGroup2Args) ToSystemIkeDhGroup2Output() SystemIkeDhGroup2Output {
	return i.ToSystemIkeDhGroup2OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup2Args) ToSystemIkeDhGroup2OutputWithContext(ctx context.Context) SystemIkeDhGroup2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup2Output)
}

func (i SystemIkeDhGroup2Args) ToSystemIkeDhGroup2PtrOutput() SystemIkeDhGroup2PtrOutput {
	return i.ToSystemIkeDhGroup2PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup2Args) ToSystemIkeDhGroup2PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup2Output).ToSystemIkeDhGroup2PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup2PtrInput is an input type that accepts SystemIkeDhGroup2Args, SystemIkeDhGroup2Ptr and SystemIkeDhGroup2PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup2PtrInput` via:
//
//	        SystemIkeDhGroup2Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup2PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup2PtrOutput() SystemIkeDhGroup2PtrOutput
	ToSystemIkeDhGroup2PtrOutputWithContext(context.Context) SystemIkeDhGroup2PtrOutput
}

type systemIkeDhGroup2PtrType SystemIkeDhGroup2Args

func SystemIkeDhGroup2Ptr(v *SystemIkeDhGroup2Args) SystemIkeDhGroup2PtrInput {
	return (*systemIkeDhGroup2PtrType)(v)
}

func (*systemIkeDhGroup2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup2)(nil)).Elem()
}

func (i *systemIkeDhGroup2PtrType) ToSystemIkeDhGroup2PtrOutput() SystemIkeDhGroup2PtrOutput {
	return i.ToSystemIkeDhGroup2PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup2PtrType) ToSystemIkeDhGroup2PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup2PtrOutput)
}

type SystemIkeDhGroup2Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup2)(nil)).Elem()
}

func (o SystemIkeDhGroup2Output) ToSystemIkeDhGroup2Output() SystemIkeDhGroup2Output {
	return o
}

func (o SystemIkeDhGroup2Output) ToSystemIkeDhGroup2OutputWithContext(ctx context.Context) SystemIkeDhGroup2Output {
	return o
}

func (o SystemIkeDhGroup2Output) ToSystemIkeDhGroup2PtrOutput() SystemIkeDhGroup2PtrOutput {
	return o.ToSystemIkeDhGroup2PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup2Output) ToSystemIkeDhGroup2PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup2) *SystemIkeDhGroup2 {
		return &v
	}).(SystemIkeDhGroup2PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup2Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup2) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup2Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup2) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup2Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup2) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup2PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup2)(nil)).Elem()
}

func (o SystemIkeDhGroup2PtrOutput) ToSystemIkeDhGroup2PtrOutput() SystemIkeDhGroup2PtrOutput {
	return o
}

func (o SystemIkeDhGroup2PtrOutput) ToSystemIkeDhGroup2PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup2PtrOutput {
	return o
}

func (o SystemIkeDhGroup2PtrOutput) Elem() SystemIkeDhGroup2Output {
	return o.ApplyT(func(v *SystemIkeDhGroup2) SystemIkeDhGroup2 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup2
		return ret
	}).(SystemIkeDhGroup2Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup2PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup2) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup2PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup2) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup2PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup2) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup30 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup30Input is an input type that accepts SystemIkeDhGroup30Args and SystemIkeDhGroup30Output values.
// You can construct a concrete instance of `SystemIkeDhGroup30Input` via:
//
//	SystemIkeDhGroup30Args{...}
type SystemIkeDhGroup30Input interface {
	pulumi.Input

	ToSystemIkeDhGroup30Output() SystemIkeDhGroup30Output
	ToSystemIkeDhGroup30OutputWithContext(context.Context) SystemIkeDhGroup30Output
}

type SystemIkeDhGroup30Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup30Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup30)(nil)).Elem()
}

func (i SystemIkeDhGroup30Args) ToSystemIkeDhGroup30Output() SystemIkeDhGroup30Output {
	return i.ToSystemIkeDhGroup30OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup30Args) ToSystemIkeDhGroup30OutputWithContext(ctx context.Context) SystemIkeDhGroup30Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup30Output)
}

func (i SystemIkeDhGroup30Args) ToSystemIkeDhGroup30PtrOutput() SystemIkeDhGroup30PtrOutput {
	return i.ToSystemIkeDhGroup30PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup30Args) ToSystemIkeDhGroup30PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup30PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup30Output).ToSystemIkeDhGroup30PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup30PtrInput is an input type that accepts SystemIkeDhGroup30Args, SystemIkeDhGroup30Ptr and SystemIkeDhGroup30PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup30PtrInput` via:
//
//	        SystemIkeDhGroup30Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup30PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup30PtrOutput() SystemIkeDhGroup30PtrOutput
	ToSystemIkeDhGroup30PtrOutputWithContext(context.Context) SystemIkeDhGroup30PtrOutput
}

type systemIkeDhGroup30PtrType SystemIkeDhGroup30Args

func SystemIkeDhGroup30Ptr(v *SystemIkeDhGroup30Args) SystemIkeDhGroup30PtrInput {
	return (*systemIkeDhGroup30PtrType)(v)
}

func (*systemIkeDhGroup30PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup30)(nil)).Elem()
}

func (i *systemIkeDhGroup30PtrType) ToSystemIkeDhGroup30PtrOutput() SystemIkeDhGroup30PtrOutput {
	return i.ToSystemIkeDhGroup30PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup30PtrType) ToSystemIkeDhGroup30PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup30PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup30PtrOutput)
}

type SystemIkeDhGroup30Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup30Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup30)(nil)).Elem()
}

func (o SystemIkeDhGroup30Output) ToSystemIkeDhGroup30Output() SystemIkeDhGroup30Output {
	return o
}

func (o SystemIkeDhGroup30Output) ToSystemIkeDhGroup30OutputWithContext(ctx context.Context) SystemIkeDhGroup30Output {
	return o
}

func (o SystemIkeDhGroup30Output) ToSystemIkeDhGroup30PtrOutput() SystemIkeDhGroup30PtrOutput {
	return o.ToSystemIkeDhGroup30PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup30Output) ToSystemIkeDhGroup30PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup30PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup30) *SystemIkeDhGroup30 {
		return &v
	}).(SystemIkeDhGroup30PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup30Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup30) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup30Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup30) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup30Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup30) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup30PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup30PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup30)(nil)).Elem()
}

func (o SystemIkeDhGroup30PtrOutput) ToSystemIkeDhGroup30PtrOutput() SystemIkeDhGroup30PtrOutput {
	return o
}

func (o SystemIkeDhGroup30PtrOutput) ToSystemIkeDhGroup30PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup30PtrOutput {
	return o
}

func (o SystemIkeDhGroup30PtrOutput) Elem() SystemIkeDhGroup30Output {
	return o.ApplyT(func(v *SystemIkeDhGroup30) SystemIkeDhGroup30 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup30
		return ret
	}).(SystemIkeDhGroup30Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup30PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup30) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup30PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup30) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup30PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup30) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup31 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup31Input is an input type that accepts SystemIkeDhGroup31Args and SystemIkeDhGroup31Output values.
// You can construct a concrete instance of `SystemIkeDhGroup31Input` via:
//
//	SystemIkeDhGroup31Args{...}
type SystemIkeDhGroup31Input interface {
	pulumi.Input

	ToSystemIkeDhGroup31Output() SystemIkeDhGroup31Output
	ToSystemIkeDhGroup31OutputWithContext(context.Context) SystemIkeDhGroup31Output
}

type SystemIkeDhGroup31Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup31Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup31)(nil)).Elem()
}

func (i SystemIkeDhGroup31Args) ToSystemIkeDhGroup31Output() SystemIkeDhGroup31Output {
	return i.ToSystemIkeDhGroup31OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup31Args) ToSystemIkeDhGroup31OutputWithContext(ctx context.Context) SystemIkeDhGroup31Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup31Output)
}

func (i SystemIkeDhGroup31Args) ToSystemIkeDhGroup31PtrOutput() SystemIkeDhGroup31PtrOutput {
	return i.ToSystemIkeDhGroup31PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup31Args) ToSystemIkeDhGroup31PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup31PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup31Output).ToSystemIkeDhGroup31PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup31PtrInput is an input type that accepts SystemIkeDhGroup31Args, SystemIkeDhGroup31Ptr and SystemIkeDhGroup31PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup31PtrInput` via:
//
//	        SystemIkeDhGroup31Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup31PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup31PtrOutput() SystemIkeDhGroup31PtrOutput
	ToSystemIkeDhGroup31PtrOutputWithContext(context.Context) SystemIkeDhGroup31PtrOutput
}

type systemIkeDhGroup31PtrType SystemIkeDhGroup31Args

func SystemIkeDhGroup31Ptr(v *SystemIkeDhGroup31Args) SystemIkeDhGroup31PtrInput {
	return (*systemIkeDhGroup31PtrType)(v)
}

func (*systemIkeDhGroup31PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup31)(nil)).Elem()
}

func (i *systemIkeDhGroup31PtrType) ToSystemIkeDhGroup31PtrOutput() SystemIkeDhGroup31PtrOutput {
	return i.ToSystemIkeDhGroup31PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup31PtrType) ToSystemIkeDhGroup31PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup31PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup31PtrOutput)
}

type SystemIkeDhGroup31Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup31Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup31)(nil)).Elem()
}

func (o SystemIkeDhGroup31Output) ToSystemIkeDhGroup31Output() SystemIkeDhGroup31Output {
	return o
}

func (o SystemIkeDhGroup31Output) ToSystemIkeDhGroup31OutputWithContext(ctx context.Context) SystemIkeDhGroup31Output {
	return o
}

func (o SystemIkeDhGroup31Output) ToSystemIkeDhGroup31PtrOutput() SystemIkeDhGroup31PtrOutput {
	return o.ToSystemIkeDhGroup31PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup31Output) ToSystemIkeDhGroup31PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup31PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup31) *SystemIkeDhGroup31 {
		return &v
	}).(SystemIkeDhGroup31PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup31Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup31) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup31Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup31) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup31Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup31) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup31PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup31PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup31)(nil)).Elem()
}

func (o SystemIkeDhGroup31PtrOutput) ToSystemIkeDhGroup31PtrOutput() SystemIkeDhGroup31PtrOutput {
	return o
}

func (o SystemIkeDhGroup31PtrOutput) ToSystemIkeDhGroup31PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup31PtrOutput {
	return o
}

func (o SystemIkeDhGroup31PtrOutput) Elem() SystemIkeDhGroup31Output {
	return o.ApplyT(func(v *SystemIkeDhGroup31) SystemIkeDhGroup31 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup31
		return ret
	}).(SystemIkeDhGroup31Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup31PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup31) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup31PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup31) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup31PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup31) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup32 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup32Input is an input type that accepts SystemIkeDhGroup32Args and SystemIkeDhGroup32Output values.
// You can construct a concrete instance of `SystemIkeDhGroup32Input` via:
//
//	SystemIkeDhGroup32Args{...}
type SystemIkeDhGroup32Input interface {
	pulumi.Input

	ToSystemIkeDhGroup32Output() SystemIkeDhGroup32Output
	ToSystemIkeDhGroup32OutputWithContext(context.Context) SystemIkeDhGroup32Output
}

type SystemIkeDhGroup32Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup32Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup32)(nil)).Elem()
}

func (i SystemIkeDhGroup32Args) ToSystemIkeDhGroup32Output() SystemIkeDhGroup32Output {
	return i.ToSystemIkeDhGroup32OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup32Args) ToSystemIkeDhGroup32OutputWithContext(ctx context.Context) SystemIkeDhGroup32Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup32Output)
}

func (i SystemIkeDhGroup32Args) ToSystemIkeDhGroup32PtrOutput() SystemIkeDhGroup32PtrOutput {
	return i.ToSystemIkeDhGroup32PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup32Args) ToSystemIkeDhGroup32PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup32PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup32Output).ToSystemIkeDhGroup32PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup32PtrInput is an input type that accepts SystemIkeDhGroup32Args, SystemIkeDhGroup32Ptr and SystemIkeDhGroup32PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup32PtrInput` via:
//
//	        SystemIkeDhGroup32Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup32PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup32PtrOutput() SystemIkeDhGroup32PtrOutput
	ToSystemIkeDhGroup32PtrOutputWithContext(context.Context) SystemIkeDhGroup32PtrOutput
}

type systemIkeDhGroup32PtrType SystemIkeDhGroup32Args

func SystemIkeDhGroup32Ptr(v *SystemIkeDhGroup32Args) SystemIkeDhGroup32PtrInput {
	return (*systemIkeDhGroup32PtrType)(v)
}

func (*systemIkeDhGroup32PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup32)(nil)).Elem()
}

func (i *systemIkeDhGroup32PtrType) ToSystemIkeDhGroup32PtrOutput() SystemIkeDhGroup32PtrOutput {
	return i.ToSystemIkeDhGroup32PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup32PtrType) ToSystemIkeDhGroup32PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup32PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup32PtrOutput)
}

type SystemIkeDhGroup32Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup32Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup32)(nil)).Elem()
}

func (o SystemIkeDhGroup32Output) ToSystemIkeDhGroup32Output() SystemIkeDhGroup32Output {
	return o
}

func (o SystemIkeDhGroup32Output) ToSystemIkeDhGroup32OutputWithContext(ctx context.Context) SystemIkeDhGroup32Output {
	return o
}

func (o SystemIkeDhGroup32Output) ToSystemIkeDhGroup32PtrOutput() SystemIkeDhGroup32PtrOutput {
	return o.ToSystemIkeDhGroup32PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup32Output) ToSystemIkeDhGroup32PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup32PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup32) *SystemIkeDhGroup32 {
		return &v
	}).(SystemIkeDhGroup32PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup32Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup32) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup32Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup32) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup32Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup32) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup32PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup32PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup32)(nil)).Elem()
}

func (o SystemIkeDhGroup32PtrOutput) ToSystemIkeDhGroup32PtrOutput() SystemIkeDhGroup32PtrOutput {
	return o
}

func (o SystemIkeDhGroup32PtrOutput) ToSystemIkeDhGroup32PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup32PtrOutput {
	return o
}

func (o SystemIkeDhGroup32PtrOutput) Elem() SystemIkeDhGroup32Output {
	return o.ApplyT(func(v *SystemIkeDhGroup32) SystemIkeDhGroup32 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup32
		return ret
	}).(SystemIkeDhGroup32Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup32PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup32) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup32PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup32) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup32PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup32) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup5 struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache *string `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount *int `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode *string `pulumi:"mode"`
}

// SystemIkeDhGroup5Input is an input type that accepts SystemIkeDhGroup5Args and SystemIkeDhGroup5Output values.
// You can construct a concrete instance of `SystemIkeDhGroup5Input` via:
//
//	SystemIkeDhGroup5Args{...}
type SystemIkeDhGroup5Input interface {
	pulumi.Input

	ToSystemIkeDhGroup5Output() SystemIkeDhGroup5Output
	ToSystemIkeDhGroup5OutputWithContext(context.Context) SystemIkeDhGroup5Output
}

type SystemIkeDhGroup5Args struct {
	// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
	KeypairCount pulumi.IntPtrInput `pulumi:"keypairCount"`
	// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup5Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup5)(nil)).Elem()
}

func (i SystemIkeDhGroup5Args) ToSystemIkeDhGroup5Output() SystemIkeDhGroup5Output {
	return i.ToSystemIkeDhGroup5OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup5Args) ToSystemIkeDhGroup5OutputWithContext(ctx context.Context) SystemIkeDhGroup5Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup5Output)
}

func (i SystemIkeDhGroup5Args) ToSystemIkeDhGroup5PtrOutput() SystemIkeDhGroup5PtrOutput {
	return i.ToSystemIkeDhGroup5PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup5Args) ToSystemIkeDhGroup5PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup5PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup5Output).ToSystemIkeDhGroup5PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup5PtrInput is an input type that accepts SystemIkeDhGroup5Args, SystemIkeDhGroup5Ptr and SystemIkeDhGroup5PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup5PtrInput` via:
//
//	        SystemIkeDhGroup5Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup5PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup5PtrOutput() SystemIkeDhGroup5PtrOutput
	ToSystemIkeDhGroup5PtrOutputWithContext(context.Context) SystemIkeDhGroup5PtrOutput
}

type systemIkeDhGroup5PtrType SystemIkeDhGroup5Args

func SystemIkeDhGroup5Ptr(v *SystemIkeDhGroup5Args) SystemIkeDhGroup5PtrInput {
	return (*systemIkeDhGroup5PtrType)(v)
}

func (*systemIkeDhGroup5PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup5)(nil)).Elem()
}

func (i *systemIkeDhGroup5PtrType) ToSystemIkeDhGroup5PtrOutput() SystemIkeDhGroup5PtrOutput {
	return i.ToSystemIkeDhGroup5PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup5PtrType) ToSystemIkeDhGroup5PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup5PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup5PtrOutput)
}

type SystemIkeDhGroup5Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup5Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup5)(nil)).Elem()
}

func (o SystemIkeDhGroup5Output) ToSystemIkeDhGroup5Output() SystemIkeDhGroup5Output {
	return o
}

func (o SystemIkeDhGroup5Output) ToSystemIkeDhGroup5OutputWithContext(ctx context.Context) SystemIkeDhGroup5Output {
	return o
}

func (o SystemIkeDhGroup5Output) ToSystemIkeDhGroup5PtrOutput() SystemIkeDhGroup5PtrOutput {
	return o.ToSystemIkeDhGroup5PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup5Output) ToSystemIkeDhGroup5PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup5PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup5) *SystemIkeDhGroup5 {
		return &v
	}).(SystemIkeDhGroup5PtrOutput)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup5Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup5) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup5Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup5) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup5Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup5) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup5PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup5PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup5)(nil)).Elem()
}

func (o SystemIkeDhGroup5PtrOutput) ToSystemIkeDhGroup5PtrOutput() SystemIkeDhGroup5PtrOutput {
	return o
}

func (o SystemIkeDhGroup5PtrOutput) ToSystemIkeDhGroup5PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup5PtrOutput {
	return o
}

func (o SystemIkeDhGroup5PtrOutput) Elem() SystemIkeDhGroup5Output {
	return o.ApplyT(func(v *SystemIkeDhGroup5) SystemIkeDhGroup5 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup5
		return ret
	}).(SystemIkeDhGroup5Output)
}

// Configure custom key pair cache size for this Diffie-Hellman group. Valid values: `global`, `custom`.
func (o SystemIkeDhGroup5PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup5) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

// Number of key pairs to pre-generate for this Diffie-Hellman group (per-worker).
func (o SystemIkeDhGroup5PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup5) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

// Use software (CPU) or hardware (CPX) to perform calculations for this Diffie-Hellman group. Valid values: `software`, `hardware`, `global`.
func (o SystemIkeDhGroup5PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup5) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemInterfaceClientOption struct {
	// DHCP client option code.
	Code *int `pulumi:"code"`
	// ID.
	Id *int `pulumi:"id"`
	// DHCP option IPs.
	Ip *string `pulumi:"ip"`
	// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type *string `pulumi:"type"`
	// DHCP client option value.
	Value *string `pulumi:"value"`
}

// SystemInterfaceClientOptionInput is an input type that accepts SystemInterfaceClientOptionArgs and SystemInterfaceClientOptionOutput values.
// You can construct a concrete instance of `SystemInterfaceClientOptionInput` via:
//
//	SystemInterfaceClientOptionArgs{...}
type SystemInterfaceClientOptionInput interface {
	pulumi.Input

	ToSystemInterfaceClientOptionOutput() SystemInterfaceClientOptionOutput
	ToSystemInterfaceClientOptionOutputWithContext(context.Context) SystemInterfaceClientOptionOutput
}

type SystemInterfaceClientOptionArgs struct {
	// DHCP client option code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// DHCP option IPs.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// DHCP client option value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SystemInterfaceClientOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceClientOption)(nil)).Elem()
}

func (i SystemInterfaceClientOptionArgs) ToSystemInterfaceClientOptionOutput() SystemInterfaceClientOptionOutput {
	return i.ToSystemInterfaceClientOptionOutputWithContext(context.Background())
}

func (i SystemInterfaceClientOptionArgs) ToSystemInterfaceClientOptionOutputWithContext(ctx context.Context) SystemInterfaceClientOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceClientOptionOutput)
}

// SystemInterfaceClientOptionArrayInput is an input type that accepts SystemInterfaceClientOptionArray and SystemInterfaceClientOptionArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceClientOptionArrayInput` via:
//
//	SystemInterfaceClientOptionArray{ SystemInterfaceClientOptionArgs{...} }
type SystemInterfaceClientOptionArrayInput interface {
	pulumi.Input

	ToSystemInterfaceClientOptionArrayOutput() SystemInterfaceClientOptionArrayOutput
	ToSystemInterfaceClientOptionArrayOutputWithContext(context.Context) SystemInterfaceClientOptionArrayOutput
}

type SystemInterfaceClientOptionArray []SystemInterfaceClientOptionInput

func (SystemInterfaceClientOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceClientOption)(nil)).Elem()
}

func (i SystemInterfaceClientOptionArray) ToSystemInterfaceClientOptionArrayOutput() SystemInterfaceClientOptionArrayOutput {
	return i.ToSystemInterfaceClientOptionArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceClientOptionArray) ToSystemInterfaceClientOptionArrayOutputWithContext(ctx context.Context) SystemInterfaceClientOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceClientOptionArrayOutput)
}

type SystemInterfaceClientOptionOutput struct{ *pulumi.OutputState }

func (SystemInterfaceClientOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceClientOption)(nil)).Elem()
}

func (o SystemInterfaceClientOptionOutput) ToSystemInterfaceClientOptionOutput() SystemInterfaceClientOptionOutput {
	return o
}

func (o SystemInterfaceClientOptionOutput) ToSystemInterfaceClientOptionOutputWithContext(ctx context.Context) SystemInterfaceClientOptionOutput {
	return o
}

// DHCP client option code.
func (o SystemInterfaceClientOptionOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceClientOption) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// ID.
func (o SystemInterfaceClientOptionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceClientOption) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// DHCP option IPs.
func (o SystemInterfaceClientOptionOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceClientOption) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
func (o SystemInterfaceClientOptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceClientOption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// DHCP client option value.
func (o SystemInterfaceClientOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceClientOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SystemInterfaceClientOptionArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceClientOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceClientOption)(nil)).Elem()
}

func (o SystemInterfaceClientOptionArrayOutput) ToSystemInterfaceClientOptionArrayOutput() SystemInterfaceClientOptionArrayOutput {
	return o
}

func (o SystemInterfaceClientOptionArrayOutput) ToSystemInterfaceClientOptionArrayOutputWithContext(ctx context.Context) SystemInterfaceClientOptionArrayOutput {
	return o
}

func (o SystemInterfaceClientOptionArrayOutput) Index(i pulumi.IntInput) SystemInterfaceClientOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceClientOption {
		return vs[0].([]SystemInterfaceClientOption)[vs[1].(int)]
	}).(SystemInterfaceClientOptionOutput)
}

type SystemInterfaceDhcpSnoopingServerList struct {
	// DHCP server name.
	Name *string `pulumi:"name"`
	// IP address for DHCP server.
	ServerIp *string `pulumi:"serverIp"`
}

// SystemInterfaceDhcpSnoopingServerListInput is an input type that accepts SystemInterfaceDhcpSnoopingServerListArgs and SystemInterfaceDhcpSnoopingServerListOutput values.
// You can construct a concrete instance of `SystemInterfaceDhcpSnoopingServerListInput` via:
//
//	SystemInterfaceDhcpSnoopingServerListArgs{...}
type SystemInterfaceDhcpSnoopingServerListInput interface {
	pulumi.Input

	ToSystemInterfaceDhcpSnoopingServerListOutput() SystemInterfaceDhcpSnoopingServerListOutput
	ToSystemInterfaceDhcpSnoopingServerListOutputWithContext(context.Context) SystemInterfaceDhcpSnoopingServerListOutput
}

type SystemInterfaceDhcpSnoopingServerListArgs struct {
	// DHCP server name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// IP address for DHCP server.
	ServerIp pulumi.StringPtrInput `pulumi:"serverIp"`
}

func (SystemInterfaceDhcpSnoopingServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (i SystemInterfaceDhcpSnoopingServerListArgs) ToSystemInterfaceDhcpSnoopingServerListOutput() SystemInterfaceDhcpSnoopingServerListOutput {
	return i.ToSystemInterfaceDhcpSnoopingServerListOutputWithContext(context.Background())
}

func (i SystemInterfaceDhcpSnoopingServerListArgs) ToSystemInterfaceDhcpSnoopingServerListOutputWithContext(ctx context.Context) SystemInterfaceDhcpSnoopingServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceDhcpSnoopingServerListOutput)
}

// SystemInterfaceDhcpSnoopingServerListArrayInput is an input type that accepts SystemInterfaceDhcpSnoopingServerListArray and SystemInterfaceDhcpSnoopingServerListArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceDhcpSnoopingServerListArrayInput` via:
//
//	SystemInterfaceDhcpSnoopingServerListArray{ SystemInterfaceDhcpSnoopingServerListArgs{...} }
type SystemInterfaceDhcpSnoopingServerListArrayInput interface {
	pulumi.Input

	ToSystemInterfaceDhcpSnoopingServerListArrayOutput() SystemInterfaceDhcpSnoopingServerListArrayOutput
	ToSystemInterfaceDhcpSnoopingServerListArrayOutputWithContext(context.Context) SystemInterfaceDhcpSnoopingServerListArrayOutput
}

type SystemInterfaceDhcpSnoopingServerListArray []SystemInterfaceDhcpSnoopingServerListInput

func (SystemInterfaceDhcpSnoopingServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (i SystemInterfaceDhcpSnoopingServerListArray) ToSystemInterfaceDhcpSnoopingServerListArrayOutput() SystemInterfaceDhcpSnoopingServerListArrayOutput {
	return i.ToSystemInterfaceDhcpSnoopingServerListArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceDhcpSnoopingServerListArray) ToSystemInterfaceDhcpSnoopingServerListArrayOutputWithContext(ctx context.Context) SystemInterfaceDhcpSnoopingServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceDhcpSnoopingServerListArrayOutput)
}

type SystemInterfaceDhcpSnoopingServerListOutput struct{ *pulumi.OutputState }

func (SystemInterfaceDhcpSnoopingServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (o SystemInterfaceDhcpSnoopingServerListOutput) ToSystemInterfaceDhcpSnoopingServerListOutput() SystemInterfaceDhcpSnoopingServerListOutput {
	return o
}

func (o SystemInterfaceDhcpSnoopingServerListOutput) ToSystemInterfaceDhcpSnoopingServerListOutputWithContext(ctx context.Context) SystemInterfaceDhcpSnoopingServerListOutput {
	return o
}

// DHCP server name.
func (o SystemInterfaceDhcpSnoopingServerListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceDhcpSnoopingServerList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// IP address for DHCP server.
func (o SystemInterfaceDhcpSnoopingServerListOutput) ServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceDhcpSnoopingServerList) *string { return v.ServerIp }).(pulumi.StringPtrOutput)
}

type SystemInterfaceDhcpSnoopingServerListArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceDhcpSnoopingServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (o SystemInterfaceDhcpSnoopingServerListArrayOutput) ToSystemInterfaceDhcpSnoopingServerListArrayOutput() SystemInterfaceDhcpSnoopingServerListArrayOutput {
	return o
}

func (o SystemInterfaceDhcpSnoopingServerListArrayOutput) ToSystemInterfaceDhcpSnoopingServerListArrayOutputWithContext(ctx context.Context) SystemInterfaceDhcpSnoopingServerListArrayOutput {
	return o
}

func (o SystemInterfaceDhcpSnoopingServerListArrayOutput) Index(i pulumi.IntInput) SystemInterfaceDhcpSnoopingServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceDhcpSnoopingServerList {
		return vs[0].([]SystemInterfaceDhcpSnoopingServerList)[vs[1].(int)]
	}).(SystemInterfaceDhcpSnoopingServerListOutput)
}

type SystemInterfaceFailAlertInterface struct {
	// Names of the physical interfaces belonging to the aggregate or redundant interface.
	Name *string `pulumi:"name"`
}

// SystemInterfaceFailAlertInterfaceInput is an input type that accepts SystemInterfaceFailAlertInterfaceArgs and SystemInterfaceFailAlertInterfaceOutput values.
// You can construct a concrete instance of `SystemInterfaceFailAlertInterfaceInput` via:
//
//	SystemInterfaceFailAlertInterfaceArgs{...}
type SystemInterfaceFailAlertInterfaceInput interface {
	pulumi.Input

	ToSystemInterfaceFailAlertInterfaceOutput() SystemInterfaceFailAlertInterfaceOutput
	ToSystemInterfaceFailAlertInterfaceOutputWithContext(context.Context) SystemInterfaceFailAlertInterfaceOutput
}

type SystemInterfaceFailAlertInterfaceArgs struct {
	// Names of the physical interfaces belonging to the aggregate or redundant interface.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemInterfaceFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceFailAlertInterface)(nil)).Elem()
}

func (i SystemInterfaceFailAlertInterfaceArgs) ToSystemInterfaceFailAlertInterfaceOutput() SystemInterfaceFailAlertInterfaceOutput {
	return i.ToSystemInterfaceFailAlertInterfaceOutputWithContext(context.Background())
}

func (i SystemInterfaceFailAlertInterfaceArgs) ToSystemInterfaceFailAlertInterfaceOutputWithContext(ctx context.Context) SystemInterfaceFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceFailAlertInterfaceOutput)
}

// SystemInterfaceFailAlertInterfaceArrayInput is an input type that accepts SystemInterfaceFailAlertInterfaceArray and SystemInterfaceFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceFailAlertInterfaceArrayInput` via:
//
//	SystemInterfaceFailAlertInterfaceArray{ SystemInterfaceFailAlertInterfaceArgs{...} }
type SystemInterfaceFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToSystemInterfaceFailAlertInterfaceArrayOutput() SystemInterfaceFailAlertInterfaceArrayOutput
	ToSystemInterfaceFailAlertInterfaceArrayOutputWithContext(context.Context) SystemInterfaceFailAlertInterfaceArrayOutput
}

type SystemInterfaceFailAlertInterfaceArray []SystemInterfaceFailAlertInterfaceInput

func (SystemInterfaceFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceFailAlertInterface)(nil)).Elem()
}

func (i SystemInterfaceFailAlertInterfaceArray) ToSystemInterfaceFailAlertInterfaceArrayOutput() SystemInterfaceFailAlertInterfaceArrayOutput {
	return i.ToSystemInterfaceFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceFailAlertInterfaceArray) ToSystemInterfaceFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemInterfaceFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceFailAlertInterfaceArrayOutput)
}

type SystemInterfaceFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (SystemInterfaceFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceFailAlertInterface)(nil)).Elem()
}

func (o SystemInterfaceFailAlertInterfaceOutput) ToSystemInterfaceFailAlertInterfaceOutput() SystemInterfaceFailAlertInterfaceOutput {
	return o
}

func (o SystemInterfaceFailAlertInterfaceOutput) ToSystemInterfaceFailAlertInterfaceOutputWithContext(ctx context.Context) SystemInterfaceFailAlertInterfaceOutput {
	return o
}

// Names of the physical interfaces belonging to the aggregate or redundant interface.
func (o SystemInterfaceFailAlertInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceFailAlertInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemInterfaceFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceFailAlertInterface)(nil)).Elem()
}

func (o SystemInterfaceFailAlertInterfaceArrayOutput) ToSystemInterfaceFailAlertInterfaceArrayOutput() SystemInterfaceFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemInterfaceFailAlertInterfaceArrayOutput) ToSystemInterfaceFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemInterfaceFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemInterfaceFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) SystemInterfaceFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceFailAlertInterface {
		return vs[0].([]SystemInterfaceFailAlertInterface)[vs[1].(int)]
	}).(SystemInterfaceFailAlertInterfaceOutput)
}

type SystemInterfaceIpv6 struct {
	// Enable/disable address auto config. Valid values: `enable`, `disable`.
	Autoconf *string `pulumi:"autoconf"`
	// CLI IPv6 connection status.
	CliConn6Status *int `pulumi:"cliConn6Status"`
	// DHCPv6 client options. Valid values: `rapid`, `iapd`, `iana`.
	Dhcp6ClientOptions *string `pulumi:"dhcp6ClientOptions"`
	// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
	Dhcp6IapdLists []SystemInterfaceIpv6Dhcp6IapdList `pulumi:"dhcp6IapdLists"`
	// Enable/disable DHCPv6 information request. Valid values: `enable`, `disable`.
	Dhcp6InformationRequest *string `pulumi:"dhcp6InformationRequest"`
	// Enable/disable DHCPv6 prefix delegation. Valid values: `enable`, `disable`.
	Dhcp6PrefixDelegation *string `pulumi:"dhcp6PrefixDelegation"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	Dhcp6PrefixHint *string `pulumi:"dhcp6PrefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	Dhcp6PrefixHintPlt *int `pulumi:"dhcp6PrefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	Dhcp6PrefixHintVlt *int `pulumi:"dhcp6PrefixHintVlt"`
	// DHCPv6 relay IP address.
	Dhcp6RelayIp *string `pulumi:"dhcp6RelayIp"`
	// Enable/disable DHCPv6 relay. Valid values: `disable`, `enable`.
	Dhcp6RelayService *string `pulumi:"dhcp6RelayService"`
	// DHCPv6 relay type. Valid values: `regular`.
	Dhcp6RelayType *string `pulumi:"dhcp6RelayType"`
	// Enable/disable sending of ICMPv6 redirects. Valid values: `enable`, `disable`.
	Icmp6SendRedirect *string `pulumi:"icmp6SendRedirect"`
	// IPv6 interface identifier.
	InterfaceIdentifier *string `pulumi:"interfaceIdentifier"`
	// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Address *string `pulumi:"ip6Address"`
	// Allow management access to the interface.
	Ip6Allowaccess *string `pulumi:"ip6Allowaccess"`
	// Default life (sec).
	Ip6DefaultLife *int `pulumi:"ip6DefaultLife"`
	// IAID of obtained delegated-prefix from the upstream interface.
	Ip6DelegatedPrefixIaid *int `pulumi:"ip6DelegatedPrefixIaid"`
	// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
	Ip6DelegatedPrefixLists []SystemInterfaceIpv6Ip6DelegatedPrefixList `pulumi:"ip6DelegatedPrefixLists"`
	// Enable/disable using the DNS server acquired by DHCP. Valid values: `enable`, `disable`.
	Ip6DnsServerOverride *string `pulumi:"ip6DnsServerOverride"`
	// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
	Ip6ExtraAddrs []SystemInterfaceIpv6Ip6ExtraAddr `pulumi:"ip6ExtraAddrs"`
	// Hop limit (0 means unspecified).
	Ip6HopLimit *int `pulumi:"ip6HopLimit"`
	// IPv6 link MTU.
	Ip6LinkMtu *int `pulumi:"ip6LinkMtu"`
	// Enable/disable the managed flag. Valid values: `enable`, `disable`.
	Ip6ManageFlag *string `pulumi:"ip6ManageFlag"`
	// IPv6 maximum interval (4 to 1800 sec).
	Ip6MaxInterval *int `pulumi:"ip6MaxInterval"`
	// IPv6 minimum interval (3 to 1350 sec).
	Ip6MinInterval *int `pulumi:"ip6MinInterval"`
	// Addressing mode (static, DHCP, delegated). Valid values: `static`, `dhcp`, `pppoe`, `delegated`.
	Ip6Mode *string `pulumi:"ip6Mode"`
	// Enable/disable the other IPv6 flag. Valid values: `enable`, `disable`.
	Ip6OtherFlag *string `pulumi:"ip6OtherFlag"`
	// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
	Ip6PrefixLists []SystemInterfaceIpv6Ip6PrefixList `pulumi:"ip6PrefixLists"`
	// Assigning a prefix from DHCP or RA. Valid values: `dhcp6`, `ra`.
	Ip6PrefixMode *string `pulumi:"ip6PrefixMode"`
	// IPv6 reachable time (milliseconds; 0 means unspecified).
	Ip6ReachableTime *int `pulumi:"ip6ReachableTime"`
	// IPv6 retransmit time (milliseconds; 0 means unspecified).
	Ip6RetransTime *int `pulumi:"ip6RetransTime"`
	// Enable/disable sending advertisements about the interface. Valid values: `enable`, `disable`.
	Ip6SendAdv *string `pulumi:"ip6SendAdv"`
	// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Subnet *string `pulumi:"ip6Subnet"`
	// Interface name providing delegated information.
	Ip6UpstreamInterface *string `pulumi:"ip6UpstreamInterface"`
	// Neighbor discovery certificate.
	NdCert *string `pulumi:"ndCert"`
	// Neighbor discovery CGA modifier.
	NdCgaModifier *string `pulumi:"ndCgaModifier"`
	// Neighbor discovery mode. Valid values: `basic`, `SEND-compatible`.
	NdMode *string `pulumi:"ndMode"`
	// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
	NdSecurityLevel *int `pulumi:"ndSecurityLevel"`
	// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
	NdTimestampDelta *int `pulumi:"ndTimestampDelta"`
	// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
	NdTimestampFuzz *int `pulumi:"ndTimestampFuzz"`
	// Enable/disable sending link MTU in RA packet. Valid values: `enable`, `disable`.
	RaSendMtu *string `pulumi:"raSendMtu"`
	// Enable/disable unique auto config address. Valid values: `enable`, `disable`.
	UniqueAutoconfAddr *string `pulumi:"uniqueAutoconfAddr"`
	// Link-local IPv6 address of virtual router.
	Vrip6LinkLocal *string `pulumi:"vrip6LinkLocal"`
	// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
	//
	// The `ip6ExtraAddr` block supports:
	Vrrp6s []SystemInterfaceIpv6Vrrp6 `pulumi:"vrrp6s"`
	// Enable/disable virtual MAC for VRRP. Valid values: `enable`, `disable`.
	VrrpVirtualMac6 *string `pulumi:"vrrpVirtualMac6"`
}

// SystemInterfaceIpv6Input is an input type that accepts SystemInterfaceIpv6Args and SystemInterfaceIpv6Output values.
// You can construct a concrete instance of `SystemInterfaceIpv6Input` via:
//
//	SystemInterfaceIpv6Args{...}
type SystemInterfaceIpv6Input interface {
	pulumi.Input

	ToSystemInterfaceIpv6Output() SystemInterfaceIpv6Output
	ToSystemInterfaceIpv6OutputWithContext(context.Context) SystemInterfaceIpv6Output
}

type SystemInterfaceIpv6Args struct {
	// Enable/disable address auto config. Valid values: `enable`, `disable`.
	Autoconf pulumi.StringPtrInput `pulumi:"autoconf"`
	// CLI IPv6 connection status.
	CliConn6Status pulumi.IntPtrInput `pulumi:"cliConn6Status"`
	// DHCPv6 client options. Valid values: `rapid`, `iapd`, `iana`.
	Dhcp6ClientOptions pulumi.StringPtrInput `pulumi:"dhcp6ClientOptions"`
	// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
	Dhcp6IapdLists SystemInterfaceIpv6Dhcp6IapdListArrayInput `pulumi:"dhcp6IapdLists"`
	// Enable/disable DHCPv6 information request. Valid values: `enable`, `disable`.
	Dhcp6InformationRequest pulumi.StringPtrInput `pulumi:"dhcp6InformationRequest"`
	// Enable/disable DHCPv6 prefix delegation. Valid values: `enable`, `disable`.
	Dhcp6PrefixDelegation pulumi.StringPtrInput `pulumi:"dhcp6PrefixDelegation"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	Dhcp6PrefixHint pulumi.StringPtrInput `pulumi:"dhcp6PrefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	Dhcp6PrefixHintPlt pulumi.IntPtrInput `pulumi:"dhcp6PrefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	Dhcp6PrefixHintVlt pulumi.IntPtrInput `pulumi:"dhcp6PrefixHintVlt"`
	// DHCPv6 relay IP address.
	Dhcp6RelayIp pulumi.StringPtrInput `pulumi:"dhcp6RelayIp"`
	// Enable/disable DHCPv6 relay. Valid values: `disable`, `enable`.
	Dhcp6RelayService pulumi.StringPtrInput `pulumi:"dhcp6RelayService"`
	// DHCPv6 relay type. Valid values: `regular`.
	Dhcp6RelayType pulumi.StringPtrInput `pulumi:"dhcp6RelayType"`
	// Enable/disable sending of ICMPv6 redirects. Valid values: `enable`, `disable`.
	Icmp6SendRedirect pulumi.StringPtrInput `pulumi:"icmp6SendRedirect"`
	// IPv6 interface identifier.
	InterfaceIdentifier pulumi.StringPtrInput `pulumi:"interfaceIdentifier"`
	// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Address pulumi.StringPtrInput `pulumi:"ip6Address"`
	// Allow management access to the interface.
	Ip6Allowaccess pulumi.StringPtrInput `pulumi:"ip6Allowaccess"`
	// Default life (sec).
	Ip6DefaultLife pulumi.IntPtrInput `pulumi:"ip6DefaultLife"`
	// IAID of obtained delegated-prefix from the upstream interface.
	Ip6DelegatedPrefixIaid pulumi.IntPtrInput `pulumi:"ip6DelegatedPrefixIaid"`
	// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
	Ip6DelegatedPrefixLists SystemInterfaceIpv6Ip6DelegatedPrefixListArrayInput `pulumi:"ip6DelegatedPrefixLists"`
	// Enable/disable using the DNS server acquired by DHCP. Valid values: `enable`, `disable`.
	Ip6DnsServerOverride pulumi.StringPtrInput `pulumi:"ip6DnsServerOverride"`
	// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
	Ip6ExtraAddrs SystemInterfaceIpv6Ip6ExtraAddrArrayInput `pulumi:"ip6ExtraAddrs"`
	// Hop limit (0 means unspecified).
	Ip6HopLimit pulumi.IntPtrInput `pulumi:"ip6HopLimit"`
	// IPv6 link MTU.
	Ip6LinkMtu pulumi.IntPtrInput `pulumi:"ip6LinkMtu"`
	// Enable/disable the managed flag. Valid values: `enable`, `disable`.
	Ip6ManageFlag pulumi.StringPtrInput `pulumi:"ip6ManageFlag"`
	// IPv6 maximum interval (4 to 1800 sec).
	Ip6MaxInterval pulumi.IntPtrInput `pulumi:"ip6MaxInterval"`
	// IPv6 minimum interval (3 to 1350 sec).
	Ip6MinInterval pulumi.IntPtrInput `pulumi:"ip6MinInterval"`
	// Addressing mode (static, DHCP, delegated). Valid values: `static`, `dhcp`, `pppoe`, `delegated`.
	Ip6Mode pulumi.StringPtrInput `pulumi:"ip6Mode"`
	// Enable/disable the other IPv6 flag. Valid values: `enable`, `disable`.
	Ip6OtherFlag pulumi.StringPtrInput `pulumi:"ip6OtherFlag"`
	// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
	Ip6PrefixLists SystemInterfaceIpv6Ip6PrefixListArrayInput `pulumi:"ip6PrefixLists"`
	// Assigning a prefix from DHCP or RA. Valid values: `dhcp6`, `ra`.
	Ip6PrefixMode pulumi.StringPtrInput `pulumi:"ip6PrefixMode"`
	// IPv6 reachable time (milliseconds; 0 means unspecified).
	Ip6ReachableTime pulumi.IntPtrInput `pulumi:"ip6ReachableTime"`
	// IPv6 retransmit time (milliseconds; 0 means unspecified).
	Ip6RetransTime pulumi.IntPtrInput `pulumi:"ip6RetransTime"`
	// Enable/disable sending advertisements about the interface. Valid values: `enable`, `disable`.
	Ip6SendAdv pulumi.StringPtrInput `pulumi:"ip6SendAdv"`
	// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
	Ip6Subnet pulumi.StringPtrInput `pulumi:"ip6Subnet"`
	// Interface name providing delegated information.
	Ip6UpstreamInterface pulumi.StringPtrInput `pulumi:"ip6UpstreamInterface"`
	// Neighbor discovery certificate.
	NdCert pulumi.StringPtrInput `pulumi:"ndCert"`
	// Neighbor discovery CGA modifier.
	NdCgaModifier pulumi.StringPtrInput `pulumi:"ndCgaModifier"`
	// Neighbor discovery mode. Valid values: `basic`, `SEND-compatible`.
	NdMode pulumi.StringPtrInput `pulumi:"ndMode"`
	// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
	NdSecurityLevel pulumi.IntPtrInput `pulumi:"ndSecurityLevel"`
	// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
	NdTimestampDelta pulumi.IntPtrInput `pulumi:"ndTimestampDelta"`
	// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
	NdTimestampFuzz pulumi.IntPtrInput `pulumi:"ndTimestampFuzz"`
	// Enable/disable sending link MTU in RA packet. Valid values: `enable`, `disable`.
	RaSendMtu pulumi.StringPtrInput `pulumi:"raSendMtu"`
	// Enable/disable unique auto config address. Valid values: `enable`, `disable`.
	UniqueAutoconfAddr pulumi.StringPtrInput `pulumi:"uniqueAutoconfAddr"`
	// Link-local IPv6 address of virtual router.
	Vrip6LinkLocal pulumi.StringPtrInput `pulumi:"vrip6LinkLocal"`
	// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
	//
	// The `ip6ExtraAddr` block supports:
	Vrrp6s SystemInterfaceIpv6Vrrp6ArrayInput `pulumi:"vrrp6s"`
	// Enable/disable virtual MAC for VRRP. Valid values: `enable`, `disable`.
	VrrpVirtualMac6 pulumi.StringPtrInput `pulumi:"vrrpVirtualMac6"`
}

func (SystemInterfaceIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6)(nil)).Elem()
}

func (i SystemInterfaceIpv6Args) ToSystemInterfaceIpv6Output() SystemInterfaceIpv6Output {
	return i.ToSystemInterfaceIpv6OutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Args) ToSystemInterfaceIpv6OutputWithContext(ctx context.Context) SystemInterfaceIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Output)
}

func (i SystemInterfaceIpv6Args) ToSystemInterfaceIpv6PtrOutput() SystemInterfaceIpv6PtrOutput {
	return i.ToSystemInterfaceIpv6PtrOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Args) ToSystemInterfaceIpv6PtrOutputWithContext(ctx context.Context) SystemInterfaceIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Output).ToSystemInterfaceIpv6PtrOutputWithContext(ctx)
}

// SystemInterfaceIpv6PtrInput is an input type that accepts SystemInterfaceIpv6Args, SystemInterfaceIpv6Ptr and SystemInterfaceIpv6PtrOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6PtrInput` via:
//
//	        SystemInterfaceIpv6Args{...}
//
//	or:
//
//	        nil
type SystemInterfaceIpv6PtrInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6PtrOutput() SystemInterfaceIpv6PtrOutput
	ToSystemInterfaceIpv6PtrOutputWithContext(context.Context) SystemInterfaceIpv6PtrOutput
}

type systemInterfaceIpv6PtrType SystemInterfaceIpv6Args

func SystemInterfaceIpv6Ptr(v *SystemInterfaceIpv6Args) SystemInterfaceIpv6PtrInput {
	return (*systemInterfaceIpv6PtrType)(v)
}

func (*systemInterfaceIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemInterfaceIpv6)(nil)).Elem()
}

func (i *systemInterfaceIpv6PtrType) ToSystemInterfaceIpv6PtrOutput() SystemInterfaceIpv6PtrOutput {
	return i.ToSystemInterfaceIpv6PtrOutputWithContext(context.Background())
}

func (i *systemInterfaceIpv6PtrType) ToSystemInterfaceIpv6PtrOutputWithContext(ctx context.Context) SystemInterfaceIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6PtrOutput)
}

type SystemInterfaceIpv6Output struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6)(nil)).Elem()
}

func (o SystemInterfaceIpv6Output) ToSystemInterfaceIpv6Output() SystemInterfaceIpv6Output {
	return o
}

func (o SystemInterfaceIpv6Output) ToSystemInterfaceIpv6OutputWithContext(ctx context.Context) SystemInterfaceIpv6Output {
	return o
}

func (o SystemInterfaceIpv6Output) ToSystemInterfaceIpv6PtrOutput() SystemInterfaceIpv6PtrOutput {
	return o.ToSystemInterfaceIpv6PtrOutputWithContext(context.Background())
}

func (o SystemInterfaceIpv6Output) ToSystemInterfaceIpv6PtrOutputWithContext(ctx context.Context) SystemInterfaceIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemInterfaceIpv6) *SystemInterfaceIpv6 {
		return &v
	}).(SystemInterfaceIpv6PtrOutput)
}

// Enable/disable address auto config. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) Autoconf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Autoconf }).(pulumi.StringPtrOutput)
}

// CLI IPv6 connection status.
func (o SystemInterfaceIpv6Output) CliConn6Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.CliConn6Status }).(pulumi.IntPtrOutput)
}

// DHCPv6 client options. Valid values: `rapid`, `iapd`, `iana`.
func (o SystemInterfaceIpv6Output) Dhcp6ClientOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6ClientOptions }).(pulumi.StringPtrOutput)
}

// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
func (o SystemInterfaceIpv6Output) Dhcp6IapdLists() SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) []SystemInterfaceIpv6Dhcp6IapdList { return v.Dhcp6IapdLists }).(SystemInterfaceIpv6Dhcp6IapdListArrayOutput)
}

// Enable/disable DHCPv6 information request. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) Dhcp6InformationRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6InformationRequest }).(pulumi.StringPtrOutput)
}

// Enable/disable DHCPv6 prefix delegation. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) Dhcp6PrefixDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6PrefixDelegation }).(pulumi.StringPtrOutput)
}

// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
func (o SystemInterfaceIpv6Output) Dhcp6PrefixHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6PrefixHint }).(pulumi.StringPtrOutput)
}

// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
func (o SystemInterfaceIpv6Output) Dhcp6PrefixHintPlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Dhcp6PrefixHintPlt }).(pulumi.IntPtrOutput)
}

// DHCPv6 prefix hint valid life time (sec).
func (o SystemInterfaceIpv6Output) Dhcp6PrefixHintVlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Dhcp6PrefixHintVlt }).(pulumi.IntPtrOutput)
}

// DHCPv6 relay IP address.
func (o SystemInterfaceIpv6Output) Dhcp6RelayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6RelayIp }).(pulumi.StringPtrOutput)
}

// Enable/disable DHCPv6 relay. Valid values: `disable`, `enable`.
func (o SystemInterfaceIpv6Output) Dhcp6RelayService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6RelayService }).(pulumi.StringPtrOutput)
}

// DHCPv6 relay type. Valid values: `regular`.
func (o SystemInterfaceIpv6Output) Dhcp6RelayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6RelayType }).(pulumi.StringPtrOutput)
}

// Enable/disable sending of ICMPv6 redirects. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) Icmp6SendRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Icmp6SendRedirect }).(pulumi.StringPtrOutput)
}

// IPv6 interface identifier.
func (o SystemInterfaceIpv6Output) InterfaceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.InterfaceIdentifier }).(pulumi.StringPtrOutput)
}

// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
func (o SystemInterfaceIpv6Output) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6Address }).(pulumi.StringPtrOutput)
}

// Allow management access to the interface.
func (o SystemInterfaceIpv6Output) Ip6Allowaccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6Allowaccess }).(pulumi.StringPtrOutput)
}

// Default life (sec).
func (o SystemInterfaceIpv6Output) Ip6DefaultLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6DefaultLife }).(pulumi.IntPtrOutput)
}

// IAID of obtained delegated-prefix from the upstream interface.
func (o SystemInterfaceIpv6Output) Ip6DelegatedPrefixIaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6DelegatedPrefixIaid }).(pulumi.IntPtrOutput)
}

// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
func (o SystemInterfaceIpv6Output) Ip6DelegatedPrefixLists() SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6DelegatedPrefixList {
		return v.Ip6DelegatedPrefixLists
	}).(SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

// Enable/disable using the DNS server acquired by DHCP. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) Ip6DnsServerOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6DnsServerOverride }).(pulumi.StringPtrOutput)
}

// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
func (o SystemInterfaceIpv6Output) Ip6ExtraAddrs() SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6ExtraAddr { return v.Ip6ExtraAddrs }).(SystemInterfaceIpv6Ip6ExtraAddrArrayOutput)
}

// Hop limit (0 means unspecified).
func (o SystemInterfaceIpv6Output) Ip6HopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6HopLimit }).(pulumi.IntPtrOutput)
}

// IPv6 link MTU.
func (o SystemInterfaceIpv6Output) Ip6LinkMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6LinkMtu }).(pulumi.IntPtrOutput)
}

// Enable/disable the managed flag. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) Ip6ManageFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6ManageFlag }).(pulumi.StringPtrOutput)
}

// IPv6 maximum interval (4 to 1800 sec).
func (o SystemInterfaceIpv6Output) Ip6MaxInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6MaxInterval }).(pulumi.IntPtrOutput)
}

// IPv6 minimum interval (3 to 1350 sec).
func (o SystemInterfaceIpv6Output) Ip6MinInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6MinInterval }).(pulumi.IntPtrOutput)
}

// Addressing mode (static, DHCP, delegated). Valid values: `static`, `dhcp`, `pppoe`, `delegated`.
func (o SystemInterfaceIpv6Output) Ip6Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6Mode }).(pulumi.StringPtrOutput)
}

// Enable/disable the other IPv6 flag. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) Ip6OtherFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6OtherFlag }).(pulumi.StringPtrOutput)
}

// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
func (o SystemInterfaceIpv6Output) Ip6PrefixLists() SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6PrefixList { return v.Ip6PrefixLists }).(SystemInterfaceIpv6Ip6PrefixListArrayOutput)
}

// Assigning a prefix from DHCP or RA. Valid values: `dhcp6`, `ra`.
func (o SystemInterfaceIpv6Output) Ip6PrefixMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6PrefixMode }).(pulumi.StringPtrOutput)
}

// IPv6 reachable time (milliseconds; 0 means unspecified).
func (o SystemInterfaceIpv6Output) Ip6ReachableTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6ReachableTime }).(pulumi.IntPtrOutput)
}

// IPv6 retransmit time (milliseconds; 0 means unspecified).
func (o SystemInterfaceIpv6Output) Ip6RetransTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6RetransTime }).(pulumi.IntPtrOutput)
}

// Enable/disable sending advertisements about the interface. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) Ip6SendAdv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6SendAdv }).(pulumi.StringPtrOutput)
}

// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
func (o SystemInterfaceIpv6Output) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6Subnet }).(pulumi.StringPtrOutput)
}

// Interface name providing delegated information.
func (o SystemInterfaceIpv6Output) Ip6UpstreamInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6UpstreamInterface }).(pulumi.StringPtrOutput)
}

// Neighbor discovery certificate.
func (o SystemInterfaceIpv6Output) NdCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.NdCert }).(pulumi.StringPtrOutput)
}

// Neighbor discovery CGA modifier.
func (o SystemInterfaceIpv6Output) NdCgaModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.NdCgaModifier }).(pulumi.StringPtrOutput)
}

// Neighbor discovery mode. Valid values: `basic`, `SEND-compatible`.
func (o SystemInterfaceIpv6Output) NdMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.NdMode }).(pulumi.StringPtrOutput)
}

// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
func (o SystemInterfaceIpv6Output) NdSecurityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.NdSecurityLevel }).(pulumi.IntPtrOutput)
}

// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
func (o SystemInterfaceIpv6Output) NdTimestampDelta() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.NdTimestampDelta }).(pulumi.IntPtrOutput)
}

// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
func (o SystemInterfaceIpv6Output) NdTimestampFuzz() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.NdTimestampFuzz }).(pulumi.IntPtrOutput)
}

// Enable/disable sending link MTU in RA packet. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) RaSendMtu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.RaSendMtu }).(pulumi.StringPtrOutput)
}

// Enable/disable unique auto config address. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) UniqueAutoconfAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.UniqueAutoconfAddr }).(pulumi.StringPtrOutput)
}

// Link-local IPv6 address of virtual router.
func (o SystemInterfaceIpv6Output) Vrip6LinkLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Vrip6LinkLocal }).(pulumi.StringPtrOutput)
}

// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
//
// The `ip6ExtraAddr` block supports:
func (o SystemInterfaceIpv6Output) Vrrp6s() SystemInterfaceIpv6Vrrp6ArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) []SystemInterfaceIpv6Vrrp6 { return v.Vrrp6s }).(SystemInterfaceIpv6Vrrp6ArrayOutput)
}

// Enable/disable virtual MAC for VRRP. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Output) VrrpVirtualMac6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.VrrpVirtualMac6 }).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6PtrOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemInterfaceIpv6)(nil)).Elem()
}

func (o SystemInterfaceIpv6PtrOutput) ToSystemInterfaceIpv6PtrOutput() SystemInterfaceIpv6PtrOutput {
	return o
}

func (o SystemInterfaceIpv6PtrOutput) ToSystemInterfaceIpv6PtrOutputWithContext(ctx context.Context) SystemInterfaceIpv6PtrOutput {
	return o
}

func (o SystemInterfaceIpv6PtrOutput) Elem() SystemInterfaceIpv6Output {
	return o.ApplyT(func(v *SystemInterfaceIpv6) SystemInterfaceIpv6 {
		if v != nil {
			return *v
		}
		var ret SystemInterfaceIpv6
		return ret
	}).(SystemInterfaceIpv6Output)
}

// Enable/disable address auto config. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) Autoconf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Autoconf
	}).(pulumi.StringPtrOutput)
}

// CLI IPv6 connection status.
func (o SystemInterfaceIpv6PtrOutput) CliConn6Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.CliConn6Status
	}).(pulumi.IntPtrOutput)
}

// DHCPv6 client options. Valid values: `rapid`, `iapd`, `iana`.
func (o SystemInterfaceIpv6PtrOutput) Dhcp6ClientOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6ClientOptions
	}).(pulumi.StringPtrOutput)
}

// DHCPv6 IA-PD list The structure of `dhcp6IapdList` block is documented below.
func (o SystemInterfaceIpv6PtrOutput) Dhcp6IapdLists() SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) []SystemInterfaceIpv6Dhcp6IapdList {
		if v == nil {
			return nil
		}
		return v.Dhcp6IapdLists
	}).(SystemInterfaceIpv6Dhcp6IapdListArrayOutput)
}

// Enable/disable DHCPv6 information request. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) Dhcp6InformationRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6InformationRequest
	}).(pulumi.StringPtrOutput)
}

// Enable/disable DHCPv6 prefix delegation. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) Dhcp6PrefixDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixDelegation
	}).(pulumi.StringPtrOutput)
}

// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
func (o SystemInterfaceIpv6PtrOutput) Dhcp6PrefixHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixHint
	}).(pulumi.StringPtrOutput)
}

// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
func (o SystemInterfaceIpv6PtrOutput) Dhcp6PrefixHintPlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixHintPlt
	}).(pulumi.IntPtrOutput)
}

// DHCPv6 prefix hint valid life time (sec).
func (o SystemInterfaceIpv6PtrOutput) Dhcp6PrefixHintVlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixHintVlt
	}).(pulumi.IntPtrOutput)
}

// DHCPv6 relay IP address.
func (o SystemInterfaceIpv6PtrOutput) Dhcp6RelayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayIp
	}).(pulumi.StringPtrOutput)
}

// Enable/disable DHCPv6 relay. Valid values: `disable`, `enable`.
func (o SystemInterfaceIpv6PtrOutput) Dhcp6RelayService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayService
	}).(pulumi.StringPtrOutput)
}

// DHCPv6 relay type. Valid values: `regular`.
func (o SystemInterfaceIpv6PtrOutput) Dhcp6RelayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayType
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sending of ICMPv6 redirects. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) Icmp6SendRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Icmp6SendRedirect
	}).(pulumi.StringPtrOutput)
}

// IPv6 interface identifier.
func (o SystemInterfaceIpv6PtrOutput) InterfaceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.InterfaceIdentifier
	}).(pulumi.StringPtrOutput)
}

// Primary IPv6 address prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
func (o SystemInterfaceIpv6PtrOutput) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Address
	}).(pulumi.StringPtrOutput)
}

// Allow management access to the interface.
func (o SystemInterfaceIpv6PtrOutput) Ip6Allowaccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Allowaccess
	}).(pulumi.StringPtrOutput)
}

// Default life (sec).
func (o SystemInterfaceIpv6PtrOutput) Ip6DefaultLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6DefaultLife
	}).(pulumi.IntPtrOutput)
}

// IAID of obtained delegated-prefix from the upstream interface.
func (o SystemInterfaceIpv6PtrOutput) Ip6DelegatedPrefixIaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6DelegatedPrefixIaid
	}).(pulumi.IntPtrOutput)
}

// Advertised IPv6 delegated prefix list. The structure of `ip6DelegatedPrefixList` block is documented below.
func (o SystemInterfaceIpv6PtrOutput) Ip6DelegatedPrefixLists() SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6DelegatedPrefixList {
		if v == nil {
			return nil
		}
		return v.Ip6DelegatedPrefixLists
	}).(SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

// Enable/disable using the DNS server acquired by DHCP. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) Ip6DnsServerOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6DnsServerOverride
	}).(pulumi.StringPtrOutput)
}

// Extra IPv6 address prefixes of interface. The structure of `ip6ExtraAddr` block is documented below.
func (o SystemInterfaceIpv6PtrOutput) Ip6ExtraAddrs() SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6ExtraAddr {
		if v == nil {
			return nil
		}
		return v.Ip6ExtraAddrs
	}).(SystemInterfaceIpv6Ip6ExtraAddrArrayOutput)
}

// Hop limit (0 means unspecified).
func (o SystemInterfaceIpv6PtrOutput) Ip6HopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6HopLimit
	}).(pulumi.IntPtrOutput)
}

// IPv6 link MTU.
func (o SystemInterfaceIpv6PtrOutput) Ip6LinkMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6LinkMtu
	}).(pulumi.IntPtrOutput)
}

// Enable/disable the managed flag. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) Ip6ManageFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6ManageFlag
	}).(pulumi.StringPtrOutput)
}

// IPv6 maximum interval (4 to 1800 sec).
func (o SystemInterfaceIpv6PtrOutput) Ip6MaxInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6MaxInterval
	}).(pulumi.IntPtrOutput)
}

// IPv6 minimum interval (3 to 1350 sec).
func (o SystemInterfaceIpv6PtrOutput) Ip6MinInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6MinInterval
	}).(pulumi.IntPtrOutput)
}

// Addressing mode (static, DHCP, delegated). Valid values: `static`, `dhcp`, `pppoe`, `delegated`.
func (o SystemInterfaceIpv6PtrOutput) Ip6Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Mode
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the other IPv6 flag. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) Ip6OtherFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6OtherFlag
	}).(pulumi.StringPtrOutput)
}

// Advertised prefix list. The structure of `ip6PrefixList` block is documented below.
func (o SystemInterfaceIpv6PtrOutput) Ip6PrefixLists() SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6PrefixList {
		if v == nil {
			return nil
		}
		return v.Ip6PrefixLists
	}).(SystemInterfaceIpv6Ip6PrefixListArrayOutput)
}

// Assigning a prefix from DHCP or RA. Valid values: `dhcp6`, `ra`.
func (o SystemInterfaceIpv6PtrOutput) Ip6PrefixMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6PrefixMode
	}).(pulumi.StringPtrOutput)
}

// IPv6 reachable time (milliseconds; 0 means unspecified).
func (o SystemInterfaceIpv6PtrOutput) Ip6ReachableTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6ReachableTime
	}).(pulumi.IntPtrOutput)
}

// IPv6 retransmit time (milliseconds; 0 means unspecified).
func (o SystemInterfaceIpv6PtrOutput) Ip6RetransTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6RetransTime
	}).(pulumi.IntPtrOutput)
}

// Enable/disable sending advertisements about the interface. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) Ip6SendAdv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6SendAdv
	}).(pulumi.StringPtrOutput)
}

// Subnet to routing prefix, syntax: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx
func (o SystemInterfaceIpv6PtrOutput) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Subnet
	}).(pulumi.StringPtrOutput)
}

// Interface name providing delegated information.
func (o SystemInterfaceIpv6PtrOutput) Ip6UpstreamInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6UpstreamInterface
	}).(pulumi.StringPtrOutput)
}

// Neighbor discovery certificate.
func (o SystemInterfaceIpv6PtrOutput) NdCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.NdCert
	}).(pulumi.StringPtrOutput)
}

// Neighbor discovery CGA modifier.
func (o SystemInterfaceIpv6PtrOutput) NdCgaModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.NdCgaModifier
	}).(pulumi.StringPtrOutput)
}

// Neighbor discovery mode. Valid values: `basic`, `SEND-compatible`.
func (o SystemInterfaceIpv6PtrOutput) NdMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.NdMode
	}).(pulumi.StringPtrOutput)
}

// Neighbor discovery security level (0 - 7; 0 = least secure, default = 0).
func (o SystemInterfaceIpv6PtrOutput) NdSecurityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.NdSecurityLevel
	}).(pulumi.IntPtrOutput)
}

// Neighbor discovery timestamp delta value (1 - 3600 sec; default = 300).
func (o SystemInterfaceIpv6PtrOutput) NdTimestampDelta() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.NdTimestampDelta
	}).(pulumi.IntPtrOutput)
}

// Neighbor discovery timestamp fuzz factor (1 - 60 sec; default = 1).
func (o SystemInterfaceIpv6PtrOutput) NdTimestampFuzz() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.NdTimestampFuzz
	}).(pulumi.IntPtrOutput)
}

// Enable/disable sending link MTU in RA packet. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) RaSendMtu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.RaSendMtu
	}).(pulumi.StringPtrOutput)
}

// Enable/disable unique auto config address. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) UniqueAutoconfAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.UniqueAutoconfAddr
	}).(pulumi.StringPtrOutput)
}

// Link-local IPv6 address of virtual router.
func (o SystemInterfaceIpv6PtrOutput) Vrip6LinkLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Vrip6LinkLocal
	}).(pulumi.StringPtrOutput)
}

// IPv6 VRRP configuration. The structure of `vrrp6` block is documented below.
//
// The `ip6ExtraAddr` block supports:
func (o SystemInterfaceIpv6PtrOutput) Vrrp6s() SystemInterfaceIpv6Vrrp6ArrayOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) []SystemInterfaceIpv6Vrrp6 {
		if v == nil {
			return nil
		}
		return v.Vrrp6s
	}).(SystemInterfaceIpv6Vrrp6ArrayOutput)
}

// Enable/disable virtual MAC for VRRP. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6PtrOutput) VrrpVirtualMac6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.VrrpVirtualMac6
	}).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6Dhcp6IapdList struct {
	// Identity association identifier.
	Iaid *int `pulumi:"iaid"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	PrefixHint *string `pulumi:"prefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	PrefixHintPlt *int `pulumi:"prefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	//
	// The `vrrp6` block supports:
	PrefixHintVlt *int `pulumi:"prefixHintVlt"`
}

// SystemInterfaceIpv6Dhcp6IapdListInput is an input type that accepts SystemInterfaceIpv6Dhcp6IapdListArgs and SystemInterfaceIpv6Dhcp6IapdListOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Dhcp6IapdListInput` via:
//
//	SystemInterfaceIpv6Dhcp6IapdListArgs{...}
type SystemInterfaceIpv6Dhcp6IapdListInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Dhcp6IapdListOutput() SystemInterfaceIpv6Dhcp6IapdListOutput
	ToSystemInterfaceIpv6Dhcp6IapdListOutputWithContext(context.Context) SystemInterfaceIpv6Dhcp6IapdListOutput
}

type SystemInterfaceIpv6Dhcp6IapdListArgs struct {
	// Identity association identifier.
	Iaid pulumi.IntPtrInput `pulumi:"iaid"`
	// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
	PrefixHint pulumi.StringPtrInput `pulumi:"prefixHint"`
	// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
	PrefixHintPlt pulumi.IntPtrInput `pulumi:"prefixHintPlt"`
	// DHCPv6 prefix hint valid life time (sec).
	//
	// The `vrrp6` block supports:
	PrefixHintVlt pulumi.IntPtrInput `pulumi:"prefixHintVlt"`
}

func (SystemInterfaceIpv6Dhcp6IapdListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Dhcp6IapdListArgs) ToSystemInterfaceIpv6Dhcp6IapdListOutput() SystemInterfaceIpv6Dhcp6IapdListOutput {
	return i.ToSystemInterfaceIpv6Dhcp6IapdListOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Dhcp6IapdListArgs) ToSystemInterfaceIpv6Dhcp6IapdListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Dhcp6IapdListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Dhcp6IapdListOutput)
}

// SystemInterfaceIpv6Dhcp6IapdListArrayInput is an input type that accepts SystemInterfaceIpv6Dhcp6IapdListArray and SystemInterfaceIpv6Dhcp6IapdListArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Dhcp6IapdListArrayInput` via:
//
//	SystemInterfaceIpv6Dhcp6IapdListArray{ SystemInterfaceIpv6Dhcp6IapdListArgs{...} }
type SystemInterfaceIpv6Dhcp6IapdListArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Dhcp6IapdListArrayOutput() SystemInterfaceIpv6Dhcp6IapdListArrayOutput
	ToSystemInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(context.Context) SystemInterfaceIpv6Dhcp6IapdListArrayOutput
}

type SystemInterfaceIpv6Dhcp6IapdListArray []SystemInterfaceIpv6Dhcp6IapdListInput

func (SystemInterfaceIpv6Dhcp6IapdListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Dhcp6IapdListArray) ToSystemInterfaceIpv6Dhcp6IapdListArrayOutput() SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return i.ToSystemInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Dhcp6IapdListArray) ToSystemInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Dhcp6IapdListArrayOutput)
}

type SystemInterfaceIpv6Dhcp6IapdListOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Dhcp6IapdListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Dhcp6IapdListOutput) ToSystemInterfaceIpv6Dhcp6IapdListOutput() SystemInterfaceIpv6Dhcp6IapdListOutput {
	return o
}

func (o SystemInterfaceIpv6Dhcp6IapdListOutput) ToSystemInterfaceIpv6Dhcp6IapdListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Dhcp6IapdListOutput {
	return o
}

// Identity association identifier.
func (o SystemInterfaceIpv6Dhcp6IapdListOutput) Iaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Dhcp6IapdList) *int { return v.Iaid }).(pulumi.IntPtrOutput)
}

// DHCPv6 prefix that will be used as a hint to the upstream DHCPv6 server.
func (o SystemInterfaceIpv6Dhcp6IapdListOutput) PrefixHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Dhcp6IapdList) *string { return v.PrefixHint }).(pulumi.StringPtrOutput)
}

// DHCPv6 prefix hint preferred life time (sec), 0 means unlimited lease time.
func (o SystemInterfaceIpv6Dhcp6IapdListOutput) PrefixHintPlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Dhcp6IapdList) *int { return v.PrefixHintPlt }).(pulumi.IntPtrOutput)
}

// DHCPv6 prefix hint valid life time (sec).
//
// The `vrrp6` block supports:
func (o SystemInterfaceIpv6Dhcp6IapdListOutput) PrefixHintVlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Dhcp6IapdList) *int { return v.PrefixHintVlt }).(pulumi.IntPtrOutput)
}

type SystemInterfaceIpv6Dhcp6IapdListArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Dhcp6IapdListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Dhcp6IapdListArrayOutput) ToSystemInterfaceIpv6Dhcp6IapdListArrayOutput() SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Dhcp6IapdListArrayOutput) ToSystemInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Dhcp6IapdListArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Dhcp6IapdListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Dhcp6IapdList {
		return vs[0].([]SystemInterfaceIpv6Dhcp6IapdList)[vs[1].(int)]
	}).(SystemInterfaceIpv6Dhcp6IapdListOutput)
}

type SystemInterfaceIpv6Ip6DelegatedPrefixList struct {
	// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
	AutonomousFlag *string `pulumi:"autonomousFlag"`
	// IAID of obtained delegated-prefix from the upstream interface.
	DelegatedPrefixIaid *int `pulumi:"delegatedPrefixIaid"`
	// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
	OnlinkFlag *string `pulumi:"onlinkFlag"`
	// Prefix ID.
	PrefixId *int `pulumi:"prefixId"`
	// Recursive DNS server option.
	//
	// The `dhcp6IapdList` block supports:
	Rdnss *string `pulumi:"rdnss"`
	// Recursive DNS service option. Valid values: `delegated`, `default`, `specify`.
	RdnssService *string `pulumi:"rdnssService"`
	// Add subnet ID to routing prefix.
	Subnet *string `pulumi:"subnet"`
	// Name of the interface that provides delegated information.
	UpstreamInterface *string `pulumi:"upstreamInterface"`
}

// SystemInterfaceIpv6Ip6DelegatedPrefixListInput is an input type that accepts SystemInterfaceIpv6Ip6DelegatedPrefixListArgs and SystemInterfaceIpv6Ip6DelegatedPrefixListOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6DelegatedPrefixListInput` via:
//
//	SystemInterfaceIpv6Ip6DelegatedPrefixListArgs{...}
type SystemInterfaceIpv6Ip6DelegatedPrefixListInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListOutput
	ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListOutput
}

type SystemInterfaceIpv6Ip6DelegatedPrefixListArgs struct {
	// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
	AutonomousFlag pulumi.StringPtrInput `pulumi:"autonomousFlag"`
	// IAID of obtained delegated-prefix from the upstream interface.
	DelegatedPrefixIaid pulumi.IntPtrInput `pulumi:"delegatedPrefixIaid"`
	// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
	OnlinkFlag pulumi.StringPtrInput `pulumi:"onlinkFlag"`
	// Prefix ID.
	PrefixId pulumi.IntPtrInput `pulumi:"prefixId"`
	// Recursive DNS server option.
	//
	// The `dhcp6IapdList` block supports:
	Rdnss pulumi.StringPtrInput `pulumi:"rdnss"`
	// Recursive DNS service option. Valid values: `delegated`, `default`, `specify`.
	RdnssService pulumi.StringPtrInput `pulumi:"rdnssService"`
	// Add subnet ID to routing prefix.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Name of the interface that provides delegated information.
	UpstreamInterface pulumi.StringPtrInput `pulumi:"upstreamInterface"`
}

func (SystemInterfaceIpv6Ip6DelegatedPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6DelegatedPrefixListArgs) ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return i.ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6DelegatedPrefixListArgs) ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6DelegatedPrefixListOutput)
}

// SystemInterfaceIpv6Ip6DelegatedPrefixListArrayInput is an input type that accepts SystemInterfaceIpv6Ip6DelegatedPrefixListArray and SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6DelegatedPrefixListArrayInput` via:
//
//	SystemInterfaceIpv6Ip6DelegatedPrefixListArray{ SystemInterfaceIpv6Ip6DelegatedPrefixListArgs{...} }
type SystemInterfaceIpv6Ip6DelegatedPrefixListArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput
	ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput
}

type SystemInterfaceIpv6Ip6DelegatedPrefixListArray []SystemInterfaceIpv6Ip6DelegatedPrefixListInput

func (SystemInterfaceIpv6Ip6DelegatedPrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6DelegatedPrefixListArray) ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return i.ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6DelegatedPrefixListArray) ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

type SystemInterfaceIpv6Ip6DelegatedPrefixListOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return o
}

// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) AutonomousFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.AutonomousFlag }).(pulumi.StringPtrOutput)
}

// IAID of obtained delegated-prefix from the upstream interface.
func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) DelegatedPrefixIaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *int { return v.DelegatedPrefixIaid }).(pulumi.IntPtrOutput)
}

// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) OnlinkFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.OnlinkFlag }).(pulumi.StringPtrOutput)
}

// Prefix ID.
func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) PrefixId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *int { return v.PrefixId }).(pulumi.IntPtrOutput)
}

// Recursive DNS server option.
//
// The `dhcp6IapdList` block supports:
func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) Rdnss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.Rdnss }).(pulumi.StringPtrOutput)
}

// Recursive DNS service option. Valid values: `delegated`, `default`, `specify`.
func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) RdnssService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.RdnssService }).(pulumi.StringPtrOutput)
}

// Add subnet ID to routing prefix.
func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Name of the interface that provides delegated information.
func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) UpstreamInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.UpstreamInterface }).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Ip6DelegatedPrefixList {
		return vs[0].([]SystemInterfaceIpv6Ip6DelegatedPrefixList)[vs[1].(int)]
	}).(SystemInterfaceIpv6Ip6DelegatedPrefixListOutput)
}

type SystemInterfaceIpv6Ip6ExtraAddr struct {
	// IPv6 address prefix.
	//
	// The `ip6PrefixList` block supports:
	Prefix *string `pulumi:"prefix"`
}

// SystemInterfaceIpv6Ip6ExtraAddrInput is an input type that accepts SystemInterfaceIpv6Ip6ExtraAddrArgs and SystemInterfaceIpv6Ip6ExtraAddrOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6ExtraAddrInput` via:
//
//	SystemInterfaceIpv6Ip6ExtraAddrArgs{...}
type SystemInterfaceIpv6Ip6ExtraAddrInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6ExtraAddrOutput() SystemInterfaceIpv6Ip6ExtraAddrOutput
	ToSystemInterfaceIpv6Ip6ExtraAddrOutputWithContext(context.Context) SystemInterfaceIpv6Ip6ExtraAddrOutput
}

type SystemInterfaceIpv6Ip6ExtraAddrArgs struct {
	// IPv6 address prefix.
	//
	// The `ip6PrefixList` block supports:
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (SystemInterfaceIpv6Ip6ExtraAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6ExtraAddrArgs) ToSystemInterfaceIpv6Ip6ExtraAddrOutput() SystemInterfaceIpv6Ip6ExtraAddrOutput {
	return i.ToSystemInterfaceIpv6Ip6ExtraAddrOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6ExtraAddrArgs) ToSystemInterfaceIpv6Ip6ExtraAddrOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6ExtraAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6ExtraAddrOutput)
}

// SystemInterfaceIpv6Ip6ExtraAddrArrayInput is an input type that accepts SystemInterfaceIpv6Ip6ExtraAddrArray and SystemInterfaceIpv6Ip6ExtraAddrArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6ExtraAddrArrayInput` via:
//
//	SystemInterfaceIpv6Ip6ExtraAddrArray{ SystemInterfaceIpv6Ip6ExtraAddrArgs{...} }
type SystemInterfaceIpv6Ip6ExtraAddrArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutput() SystemInterfaceIpv6Ip6ExtraAddrArrayOutput
	ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(context.Context) SystemInterfaceIpv6Ip6ExtraAddrArrayOutput
}

type SystemInterfaceIpv6Ip6ExtraAddrArray []SystemInterfaceIpv6Ip6ExtraAddrInput

func (SystemInterfaceIpv6Ip6ExtraAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6ExtraAddrArray) ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutput() SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return i.ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6ExtraAddrArray) ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6ExtraAddrArrayOutput)
}

type SystemInterfaceIpv6Ip6ExtraAddrOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6ExtraAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6ExtraAddrOutput) ToSystemInterfaceIpv6Ip6ExtraAddrOutput() SystemInterfaceIpv6Ip6ExtraAddrOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6ExtraAddrOutput) ToSystemInterfaceIpv6Ip6ExtraAddrOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6ExtraAddrOutput {
	return o
}

// IPv6 address prefix.
//
// The `ip6PrefixList` block supports:
func (o SystemInterfaceIpv6Ip6ExtraAddrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6ExtraAddr) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6Ip6ExtraAddrArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6ExtraAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6ExtraAddrArrayOutput) ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutput() SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6ExtraAddrArrayOutput) ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6ExtraAddrArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Ip6ExtraAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Ip6ExtraAddr {
		return vs[0].([]SystemInterfaceIpv6Ip6ExtraAddr)[vs[1].(int)]
	}).(SystemInterfaceIpv6Ip6ExtraAddrOutput)
}

type SystemInterfaceIpv6Ip6PrefixList struct {
	// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
	AutonomousFlag *string `pulumi:"autonomousFlag"`
	// DNS search list option. The structure of `dnssl` block is documented below.
	Dnssls []SystemInterfaceIpv6Ip6PrefixListDnssl `pulumi:"dnssls"`
	// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
	OnlinkFlag *string `pulumi:"onlinkFlag"`
	// Preferred life time (sec).
	PreferredLifeTime *int `pulumi:"preferredLifeTime"`
	// IPv6 address prefix.
	//
	// The `ip6PrefixList` block supports:
	Prefix *string `pulumi:"prefix"`
	// Recursive DNS server option.
	//
	// The `dhcp6IapdList` block supports:
	Rdnss *string `pulumi:"rdnss"`
	// Valid life time (sec).
	ValidLifeTime *int `pulumi:"validLifeTime"`
}

// SystemInterfaceIpv6Ip6PrefixListInput is an input type that accepts SystemInterfaceIpv6Ip6PrefixListArgs and SystemInterfaceIpv6Ip6PrefixListOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6PrefixListInput` via:
//
//	SystemInterfaceIpv6Ip6PrefixListArgs{...}
type SystemInterfaceIpv6Ip6PrefixListInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6PrefixListOutput() SystemInterfaceIpv6Ip6PrefixListOutput
	ToSystemInterfaceIpv6Ip6PrefixListOutputWithContext(context.Context) SystemInterfaceIpv6Ip6PrefixListOutput
}

type SystemInterfaceIpv6Ip6PrefixListArgs struct {
	// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
	AutonomousFlag pulumi.StringPtrInput `pulumi:"autonomousFlag"`
	// DNS search list option. The structure of `dnssl` block is documented below.
	Dnssls SystemInterfaceIpv6Ip6PrefixListDnsslArrayInput `pulumi:"dnssls"`
	// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
	OnlinkFlag pulumi.StringPtrInput `pulumi:"onlinkFlag"`
	// Preferred life time (sec).
	PreferredLifeTime pulumi.IntPtrInput `pulumi:"preferredLifeTime"`
	// IPv6 address prefix.
	//
	// The `ip6PrefixList` block supports:
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Recursive DNS server option.
	//
	// The `dhcp6IapdList` block supports:
	Rdnss pulumi.StringPtrInput `pulumi:"rdnss"`
	// Valid life time (sec).
	ValidLifeTime pulumi.IntPtrInput `pulumi:"validLifeTime"`
}

func (SystemInterfaceIpv6Ip6PrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6PrefixListArgs) ToSystemInterfaceIpv6Ip6PrefixListOutput() SystemInterfaceIpv6Ip6PrefixListOutput {
	return i.ToSystemInterfaceIpv6Ip6PrefixListOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6PrefixListArgs) ToSystemInterfaceIpv6Ip6PrefixListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6PrefixListOutput)
}

// SystemInterfaceIpv6Ip6PrefixListArrayInput is an input type that accepts SystemInterfaceIpv6Ip6PrefixListArray and SystemInterfaceIpv6Ip6PrefixListArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6PrefixListArrayInput` via:
//
//	SystemInterfaceIpv6Ip6PrefixListArray{ SystemInterfaceIpv6Ip6PrefixListArgs{...} }
type SystemInterfaceIpv6Ip6PrefixListArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6PrefixListArrayOutput() SystemInterfaceIpv6Ip6PrefixListArrayOutput
	ToSystemInterfaceIpv6Ip6PrefixListArrayOutputWithContext(context.Context) SystemInterfaceIpv6Ip6PrefixListArrayOutput
}

type SystemInterfaceIpv6Ip6PrefixListArray []SystemInterfaceIpv6Ip6PrefixListInput

func (SystemInterfaceIpv6Ip6PrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6PrefixListArray) ToSystemInterfaceIpv6Ip6PrefixListArrayOutput() SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return i.ToSystemInterfaceIpv6Ip6PrefixListArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6PrefixListArray) ToSystemInterfaceIpv6Ip6PrefixListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6PrefixListArrayOutput)
}

type SystemInterfaceIpv6Ip6PrefixListOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6PrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) ToSystemInterfaceIpv6Ip6PrefixListOutput() SystemInterfaceIpv6Ip6PrefixListOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) ToSystemInterfaceIpv6Ip6PrefixListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListOutput {
	return o
}

// Enable/disable the autonomous flag. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Ip6PrefixListOutput) AutonomousFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *string { return v.AutonomousFlag }).(pulumi.StringPtrOutput)
}

// DNS search list option. The structure of `dnssl` block is documented below.
func (o SystemInterfaceIpv6Ip6PrefixListOutput) Dnssls() SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) []SystemInterfaceIpv6Ip6PrefixListDnssl { return v.Dnssls }).(SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput)
}

// Enable/disable the onlink flag. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Ip6PrefixListOutput) OnlinkFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *string { return v.OnlinkFlag }).(pulumi.StringPtrOutput)
}

// Preferred life time (sec).
func (o SystemInterfaceIpv6Ip6PrefixListOutput) PreferredLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *int { return v.PreferredLifeTime }).(pulumi.IntPtrOutput)
}

// IPv6 address prefix.
//
// The `ip6PrefixList` block supports:
func (o SystemInterfaceIpv6Ip6PrefixListOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Recursive DNS server option.
//
// The `dhcp6IapdList` block supports:
func (o SystemInterfaceIpv6Ip6PrefixListOutput) Rdnss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *string { return v.Rdnss }).(pulumi.StringPtrOutput)
}

// Valid life time (sec).
func (o SystemInterfaceIpv6Ip6PrefixListOutput) ValidLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *int { return v.ValidLifeTime }).(pulumi.IntPtrOutput)
}

type SystemInterfaceIpv6Ip6PrefixListArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6PrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6PrefixListArrayOutput) ToSystemInterfaceIpv6Ip6PrefixListArrayOutput() SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListArrayOutput) ToSystemInterfaceIpv6Ip6PrefixListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Ip6PrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Ip6PrefixList {
		return vs[0].([]SystemInterfaceIpv6Ip6PrefixList)[vs[1].(int)]
	}).(SystemInterfaceIpv6Ip6PrefixListOutput)
}

type SystemInterfaceIpv6Ip6PrefixListDnssl struct {
	// Domain name.
	//
	// The `ip6DelegatedPrefixList` block supports:
	Domain *string `pulumi:"domain"`
}

// SystemInterfaceIpv6Ip6PrefixListDnsslInput is an input type that accepts SystemInterfaceIpv6Ip6PrefixListDnsslArgs and SystemInterfaceIpv6Ip6PrefixListDnsslOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6PrefixListDnsslInput` via:
//
//	SystemInterfaceIpv6Ip6PrefixListDnsslArgs{...}
type SystemInterfaceIpv6Ip6PrefixListDnsslInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6PrefixListDnsslOutput() SystemInterfaceIpv6Ip6PrefixListDnsslOutput
	ToSystemInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslOutput
}

type SystemInterfaceIpv6Ip6PrefixListDnsslArgs struct {
	// Domain name.
	//
	// The `ip6DelegatedPrefixList` block supports:
	Domain pulumi.StringPtrInput `pulumi:"domain"`
}

func (SystemInterfaceIpv6Ip6PrefixListDnsslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6PrefixListDnsslArgs) ToSystemInterfaceIpv6Ip6PrefixListDnsslOutput() SystemInterfaceIpv6Ip6PrefixListDnsslOutput {
	return i.ToSystemInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6PrefixListDnsslArgs) ToSystemInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6PrefixListDnsslOutput)
}

// SystemInterfaceIpv6Ip6PrefixListDnsslArrayInput is an input type that accepts SystemInterfaceIpv6Ip6PrefixListDnsslArray and SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6PrefixListDnsslArrayInput` via:
//
//	SystemInterfaceIpv6Ip6PrefixListDnsslArray{ SystemInterfaceIpv6Ip6PrefixListDnsslArgs{...} }
type SystemInterfaceIpv6Ip6PrefixListDnsslArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput() SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput
	ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput
}

type SystemInterfaceIpv6Ip6PrefixListDnsslArray []SystemInterfaceIpv6Ip6PrefixListDnsslInput

func (SystemInterfaceIpv6Ip6PrefixListDnsslArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6PrefixListDnsslArray) ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput() SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return i.ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6PrefixListDnsslArray) ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput)
}

type SystemInterfaceIpv6Ip6PrefixListDnsslOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6PrefixListDnsslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslOutput) ToSystemInterfaceIpv6Ip6PrefixListDnsslOutput() SystemInterfaceIpv6Ip6PrefixListDnsslOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslOutput) ToSystemInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslOutput {
	return o
}

// Domain name.
//
// The `ip6DelegatedPrefixList` block supports:
func (o SystemInterfaceIpv6Ip6PrefixListDnsslOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixListDnssl) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput) ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput() SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput) ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Ip6PrefixListDnsslOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Ip6PrefixListDnssl {
		return vs[0].([]SystemInterfaceIpv6Ip6PrefixListDnssl)[vs[1].(int)]
	}).(SystemInterfaceIpv6Ip6PrefixListDnsslOutput)
}

type SystemInterfaceIpv6Vrrp6 struct {
	// Enable/disable accept mode. Valid values: `enable`, `disable`.
	AcceptMode *string `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval *int `pulumi:"advInterval"`
	// Enable/disable preempt mode. Valid values: `enable`, `disable`.
	Preempt *string `pulumi:"preempt"`
	// Priority of learned routes.
	Priority *int `pulumi:"priority"`
	// Startup time (1 - 255 seconds).
	StartTime *int `pulumi:"startTime"`
	// Bring the interface up or shut the interface down. Valid values: `up`, `down`.
	Status *string `pulumi:"status"`
	// Monitor the route to this destination.
	Vrdst6 *string `pulumi:"vrdst6"`
	// VRRP group ID (1 - 65535).
	Vrgrp *int `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid *int `pulumi:"vrid"`
	// IPv6 address of the virtual router.
	Vrip6 *string `pulumi:"vrip6"`
}

// SystemInterfaceIpv6Vrrp6Input is an input type that accepts SystemInterfaceIpv6Vrrp6Args and SystemInterfaceIpv6Vrrp6Output values.
// You can construct a concrete instance of `SystemInterfaceIpv6Vrrp6Input` via:
//
//	SystemInterfaceIpv6Vrrp6Args{...}
type SystemInterfaceIpv6Vrrp6Input interface {
	pulumi.Input

	ToSystemInterfaceIpv6Vrrp6Output() SystemInterfaceIpv6Vrrp6Output
	ToSystemInterfaceIpv6Vrrp6OutputWithContext(context.Context) SystemInterfaceIpv6Vrrp6Output
}

type SystemInterfaceIpv6Vrrp6Args struct {
	// Enable/disable accept mode. Valid values: `enable`, `disable`.
	AcceptMode pulumi.StringPtrInput `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval pulumi.IntPtrInput `pulumi:"advInterval"`
	// Enable/disable preempt mode. Valid values: `enable`, `disable`.
	Preempt pulumi.StringPtrInput `pulumi:"preempt"`
	// Priority of learned routes.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Startup time (1 - 255 seconds).
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Bring the interface up or shut the interface down. Valid values: `up`, `down`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Monitor the route to this destination.
	Vrdst6 pulumi.StringPtrInput `pulumi:"vrdst6"`
	// VRRP group ID (1 - 65535).
	Vrgrp pulumi.IntPtrInput `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid pulumi.IntPtrInput `pulumi:"vrid"`
	// IPv6 address of the virtual router.
	Vrip6 pulumi.StringPtrInput `pulumi:"vrip6"`
}

func (SystemInterfaceIpv6Vrrp6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (i SystemInterfaceIpv6Vrrp6Args) ToSystemInterfaceIpv6Vrrp6Output() SystemInterfaceIpv6Vrrp6Output {
	return i.ToSystemInterfaceIpv6Vrrp6OutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Vrrp6Args) ToSystemInterfaceIpv6Vrrp6OutputWithContext(ctx context.Context) SystemInterfaceIpv6Vrrp6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Vrrp6Output)
}

// SystemInterfaceIpv6Vrrp6ArrayInput is an input type that accepts SystemInterfaceIpv6Vrrp6Array and SystemInterfaceIpv6Vrrp6ArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Vrrp6ArrayInput` via:
//
//	SystemInterfaceIpv6Vrrp6Array{ SystemInterfaceIpv6Vrrp6Args{...} }
type SystemInterfaceIpv6Vrrp6ArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Vrrp6ArrayOutput() SystemInterfaceIpv6Vrrp6ArrayOutput
	ToSystemInterfaceIpv6Vrrp6ArrayOutputWithContext(context.Context) SystemInterfaceIpv6Vrrp6ArrayOutput
}

type SystemInterfaceIpv6Vrrp6Array []SystemInterfaceIpv6Vrrp6Input

func (SystemInterfaceIpv6Vrrp6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (i SystemInterfaceIpv6Vrrp6Array) ToSystemInterfaceIpv6Vrrp6ArrayOutput() SystemInterfaceIpv6Vrrp6ArrayOutput {
	return i.ToSystemInterfaceIpv6Vrrp6ArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Vrrp6Array) ToSystemInterfaceIpv6Vrrp6ArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Vrrp6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Vrrp6ArrayOutput)
}

type SystemInterfaceIpv6Vrrp6Output struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Vrrp6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (o SystemInterfaceIpv6Vrrp6Output) ToSystemInterfaceIpv6Vrrp6Output() SystemInterfaceIpv6Vrrp6Output {
	return o
}

func (o SystemInterfaceIpv6Vrrp6Output) ToSystemInterfaceIpv6Vrrp6OutputWithContext(ctx context.Context) SystemInterfaceIpv6Vrrp6Output {
	return o
}

// Enable/disable accept mode. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Vrrp6Output) AcceptMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *string { return v.AcceptMode }).(pulumi.StringPtrOutput)
}

// Advertisement interval (1 - 255 seconds).
func (o SystemInterfaceIpv6Vrrp6Output) AdvInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *int { return v.AdvInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable preempt mode. Valid values: `enable`, `disable`.
func (o SystemInterfaceIpv6Vrrp6Output) Preempt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *string { return v.Preempt }).(pulumi.StringPtrOutput)
}

// Priority of learned routes.
func (o SystemInterfaceIpv6Vrrp6Output) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Startup time (1 - 255 seconds).
func (o SystemInterfaceIpv6Vrrp6Output) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Bring the interface up or shut the interface down. Valid values: `up`, `down`.
func (o SystemInterfaceIpv6Vrrp6Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Monitor the route to this destination.
func (o SystemInterfaceIpv6Vrrp6Output) Vrdst6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *string { return v.Vrdst6 }).(pulumi.StringPtrOutput)
}

// VRRP group ID (1 - 65535).
func (o SystemInterfaceIpv6Vrrp6Output) Vrgrp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *int { return v.Vrgrp }).(pulumi.IntPtrOutput)
}

// Virtual router identifier (1 - 255).
func (o SystemInterfaceIpv6Vrrp6Output) Vrid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *int { return v.Vrid }).(pulumi.IntPtrOutput)
}

// IPv6 address of the virtual router.
func (o SystemInterfaceIpv6Vrrp6Output) Vrip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *string { return v.Vrip6 }).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6Vrrp6ArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Vrrp6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (o SystemInterfaceIpv6Vrrp6ArrayOutput) ToSystemInterfaceIpv6Vrrp6ArrayOutput() SystemInterfaceIpv6Vrrp6ArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Vrrp6ArrayOutput) ToSystemInterfaceIpv6Vrrp6ArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Vrrp6ArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Vrrp6ArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Vrrp6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Vrrp6 {
		return vs[0].([]SystemInterfaceIpv6Vrrp6)[vs[1].(int)]
	}).(SystemInterfaceIpv6Vrrp6Output)
}

type SystemInterfaceManagedDevice struct {
	// Managed dev identifier.
	Name *string `pulumi:"name"`
}

// SystemInterfaceManagedDeviceInput is an input type that accepts SystemInterfaceManagedDeviceArgs and SystemInterfaceManagedDeviceOutput values.
// You can construct a concrete instance of `SystemInterfaceManagedDeviceInput` via:
//
//	SystemInterfaceManagedDeviceArgs{...}
type SystemInterfaceManagedDeviceInput interface {
	pulumi.Input

	ToSystemInterfaceManagedDeviceOutput() SystemInterfaceManagedDeviceOutput
	ToSystemInterfaceManagedDeviceOutputWithContext(context.Context) SystemInterfaceManagedDeviceOutput
}

type SystemInterfaceManagedDeviceArgs struct {
	// Managed dev identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemInterfaceManagedDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceManagedDevice)(nil)).Elem()
}

func (i SystemInterfaceManagedDeviceArgs) ToSystemInterfaceManagedDeviceOutput() SystemInterfaceManagedDeviceOutput {
	return i.ToSystemInterfaceManagedDeviceOutputWithContext(context.Background())
}

func (i SystemInterfaceManagedDeviceArgs) ToSystemInterfaceManagedDeviceOutputWithContext(ctx context.Context) SystemInterfaceManagedDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceManagedDeviceOutput)
}

// SystemInterfaceManagedDeviceArrayInput is an input type that accepts SystemInterfaceManagedDeviceArray and SystemInterfaceManagedDeviceArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceManagedDeviceArrayInput` via:
//
//	SystemInterfaceManagedDeviceArray{ SystemInterfaceManagedDeviceArgs{...} }
type SystemInterfaceManagedDeviceArrayInput interface {
	pulumi.Input

	ToSystemInterfaceManagedDeviceArrayOutput() SystemInterfaceManagedDeviceArrayOutput
	ToSystemInterfaceManagedDeviceArrayOutputWithContext(context.Context) SystemInterfaceManagedDeviceArrayOutput
}

type SystemInterfaceManagedDeviceArray []SystemInterfaceManagedDeviceInput

func (SystemInterfaceManagedDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceManagedDevice)(nil)).Elem()
}

func (i SystemInterfaceManagedDeviceArray) ToSystemInterfaceManagedDeviceArrayOutput() SystemInterfaceManagedDeviceArrayOutput {
	return i.ToSystemInterfaceManagedDeviceArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceManagedDeviceArray) ToSystemInterfaceManagedDeviceArrayOutputWithContext(ctx context.Context) SystemInterfaceManagedDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceManagedDeviceArrayOutput)
}

type SystemInterfaceManagedDeviceOutput struct{ *pulumi.OutputState }

func (SystemInterfaceManagedDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceManagedDevice)(nil)).Elem()
}

func (o SystemInterfaceManagedDeviceOutput) ToSystemInterfaceManagedDeviceOutput() SystemInterfaceManagedDeviceOutput {
	return o
}

func (o SystemInterfaceManagedDeviceOutput) ToSystemInterfaceManagedDeviceOutputWithContext(ctx context.Context) SystemInterfaceManagedDeviceOutput {
	return o
}

// Managed dev identifier.
func (o SystemInterfaceManagedDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceManagedDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemInterfaceManagedDeviceArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceManagedDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceManagedDevice)(nil)).Elem()
}

func (o SystemInterfaceManagedDeviceArrayOutput) ToSystemInterfaceManagedDeviceArrayOutput() SystemInterfaceManagedDeviceArrayOutput {
	return o
}

func (o SystemInterfaceManagedDeviceArrayOutput) ToSystemInterfaceManagedDeviceArrayOutputWithContext(ctx context.Context) SystemInterfaceManagedDeviceArrayOutput {
	return o
}

func (o SystemInterfaceManagedDeviceArrayOutput) Index(i pulumi.IntInput) SystemInterfaceManagedDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceManagedDevice {
		return vs[0].([]SystemInterfaceManagedDevice)[vs[1].(int)]
	}).(SystemInterfaceManagedDeviceOutput)
}

type SystemInterfaceMember struct {
	// Physical interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemInterfaceMemberInput is an input type that accepts SystemInterfaceMemberArgs and SystemInterfaceMemberOutput values.
// You can construct a concrete instance of `SystemInterfaceMemberInput` via:
//
//	SystemInterfaceMemberArgs{...}
type SystemInterfaceMemberInput interface {
	pulumi.Input

	ToSystemInterfaceMemberOutput() SystemInterfaceMemberOutput
	ToSystemInterfaceMemberOutputWithContext(context.Context) SystemInterfaceMemberOutput
}

type SystemInterfaceMemberArgs struct {
	// Physical interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemInterfaceMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceMember)(nil)).Elem()
}

func (i SystemInterfaceMemberArgs) ToSystemInterfaceMemberOutput() SystemInterfaceMemberOutput {
	return i.ToSystemInterfaceMemberOutputWithContext(context.Background())
}

func (i SystemInterfaceMemberArgs) ToSystemInterfaceMemberOutputWithContext(ctx context.Context) SystemInterfaceMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceMemberOutput)
}

// SystemInterfaceMemberArrayInput is an input type that accepts SystemInterfaceMemberArray and SystemInterfaceMemberArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceMemberArrayInput` via:
//
//	SystemInterfaceMemberArray{ SystemInterfaceMemberArgs{...} }
type SystemInterfaceMemberArrayInput interface {
	pulumi.Input

	ToSystemInterfaceMemberArrayOutput() SystemInterfaceMemberArrayOutput
	ToSystemInterfaceMemberArrayOutputWithContext(context.Context) SystemInterfaceMemberArrayOutput
}

type SystemInterfaceMemberArray []SystemInterfaceMemberInput

func (SystemInterfaceMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceMember)(nil)).Elem()
}

func (i SystemInterfaceMemberArray) ToSystemInterfaceMemberArrayOutput() SystemInterfaceMemberArrayOutput {
	return i.ToSystemInterfaceMemberArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceMemberArray) ToSystemInterfaceMemberArrayOutputWithContext(ctx context.Context) SystemInterfaceMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceMemberArrayOutput)
}

type SystemInterfaceMemberOutput struct{ *pulumi.OutputState }

func (SystemInterfaceMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceMember)(nil)).Elem()
}

func (o SystemInterfaceMemberOutput) ToSystemInterfaceMemberOutput() SystemInterfaceMemberOutput {
	return o
}

func (o SystemInterfaceMemberOutput) ToSystemInterfaceMemberOutputWithContext(ctx context.Context) SystemInterfaceMemberOutput {
	return o
}

// Physical interface name.
func (o SystemInterfaceMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemInterfaceMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceMember)(nil)).Elem()
}

func (o SystemInterfaceMemberArrayOutput) ToSystemInterfaceMemberArrayOutput() SystemInterfaceMemberArrayOutput {
	return o
}

func (o SystemInterfaceMemberArrayOutput) ToSystemInterfaceMemberArrayOutputWithContext(ctx context.Context) SystemInterfaceMemberArrayOutput {
	return o
}

func (o SystemInterfaceMemberArrayOutput) Index(i pulumi.IntInput) SystemInterfaceMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceMember {
		return vs[0].([]SystemInterfaceMember)[vs[1].(int)]
	}).(SystemInterfaceMemberOutput)
}

type SystemInterfaceSecondaryip struct {
	// Management access settings for the secondary IP address.
	Allowaccess *string `pulumi:"allowaccess"`
	// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
	Detectprotocol *string `pulumi:"detectprotocol"`
	// Gateway's ping server for this IP.
	Detectserver *string `pulumi:"detectserver"`
	// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
	Gwdetect *string `pulumi:"gwdetect"`
	// HA election priority for the PING server.
	HaPriority *int `pulumi:"haPriority"`
	// ID.
	Id *int `pulumi:"id"`
	// Secondary IP address of the interface.
	Ip *string `pulumi:"ip"`
	// PING server status.
	PingServStatus *int `pulumi:"pingServStatus"`
}

// SystemInterfaceSecondaryipInput is an input type that accepts SystemInterfaceSecondaryipArgs and SystemInterfaceSecondaryipOutput values.
// You can construct a concrete instance of `SystemInterfaceSecondaryipInput` via:
//
//	SystemInterfaceSecondaryipArgs{...}
type SystemInterfaceSecondaryipInput interface {
	pulumi.Input

	ToSystemInterfaceSecondaryipOutput() SystemInterfaceSecondaryipOutput
	ToSystemInterfaceSecondaryipOutputWithContext(context.Context) SystemInterfaceSecondaryipOutput
}

type SystemInterfaceSecondaryipArgs struct {
	// Management access settings for the secondary IP address.
	Allowaccess pulumi.StringPtrInput `pulumi:"allowaccess"`
	// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
	Detectprotocol pulumi.StringPtrInput `pulumi:"detectprotocol"`
	// Gateway's ping server for this IP.
	Detectserver pulumi.StringPtrInput `pulumi:"detectserver"`
	// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
	Gwdetect pulumi.StringPtrInput `pulumi:"gwdetect"`
	// HA election priority for the PING server.
	HaPriority pulumi.IntPtrInput `pulumi:"haPriority"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Secondary IP address of the interface.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// PING server status.
	PingServStatus pulumi.IntPtrInput `pulumi:"pingServStatus"`
}

func (SystemInterfaceSecondaryipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceSecondaryip)(nil)).Elem()
}

func (i SystemInterfaceSecondaryipArgs) ToSystemInterfaceSecondaryipOutput() SystemInterfaceSecondaryipOutput {
	return i.ToSystemInterfaceSecondaryipOutputWithContext(context.Background())
}

func (i SystemInterfaceSecondaryipArgs) ToSystemInterfaceSecondaryipOutputWithContext(ctx context.Context) SystemInterfaceSecondaryipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceSecondaryipOutput)
}

// SystemInterfaceSecondaryipArrayInput is an input type that accepts SystemInterfaceSecondaryipArray and SystemInterfaceSecondaryipArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceSecondaryipArrayInput` via:
//
//	SystemInterfaceSecondaryipArray{ SystemInterfaceSecondaryipArgs{...} }
type SystemInterfaceSecondaryipArrayInput interface {
	pulumi.Input

	ToSystemInterfaceSecondaryipArrayOutput() SystemInterfaceSecondaryipArrayOutput
	ToSystemInterfaceSecondaryipArrayOutputWithContext(context.Context) SystemInterfaceSecondaryipArrayOutput
}

type SystemInterfaceSecondaryipArray []SystemInterfaceSecondaryipInput

func (SystemInterfaceSecondaryipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceSecondaryip)(nil)).Elem()
}

func (i SystemInterfaceSecondaryipArray) ToSystemInterfaceSecondaryipArrayOutput() SystemInterfaceSecondaryipArrayOutput {
	return i.ToSystemInterfaceSecondaryipArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceSecondaryipArray) ToSystemInterfaceSecondaryipArrayOutputWithContext(ctx context.Context) SystemInterfaceSecondaryipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceSecondaryipArrayOutput)
}

type SystemInterfaceSecondaryipOutput struct{ *pulumi.OutputState }

func (SystemInterfaceSecondaryipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceSecondaryip)(nil)).Elem()
}

func (o SystemInterfaceSecondaryipOutput) ToSystemInterfaceSecondaryipOutput() SystemInterfaceSecondaryipOutput {
	return o
}

func (o SystemInterfaceSecondaryipOutput) ToSystemInterfaceSecondaryipOutputWithContext(ctx context.Context) SystemInterfaceSecondaryipOutput {
	return o
}

// Management access settings for the secondary IP address.
func (o SystemInterfaceSecondaryipOutput) Allowaccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.Allowaccess }).(pulumi.StringPtrOutput)
}

// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
func (o SystemInterfaceSecondaryipOutput) Detectprotocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.Detectprotocol }).(pulumi.StringPtrOutput)
}

// Gateway's ping server for this IP.
func (o SystemInterfaceSecondaryipOutput) Detectserver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.Detectserver }).(pulumi.StringPtrOutput)
}

// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
func (o SystemInterfaceSecondaryipOutput) Gwdetect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.Gwdetect }).(pulumi.StringPtrOutput)
}

// HA election priority for the PING server.
func (o SystemInterfaceSecondaryipOutput) HaPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *int { return v.HaPriority }).(pulumi.IntPtrOutput)
}

// ID.
func (o SystemInterfaceSecondaryipOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Secondary IP address of the interface.
func (o SystemInterfaceSecondaryipOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// PING server status.
func (o SystemInterfaceSecondaryipOutput) PingServStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *int { return v.PingServStatus }).(pulumi.IntPtrOutput)
}

type SystemInterfaceSecondaryipArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceSecondaryipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceSecondaryip)(nil)).Elem()
}

func (o SystemInterfaceSecondaryipArrayOutput) ToSystemInterfaceSecondaryipArrayOutput() SystemInterfaceSecondaryipArrayOutput {
	return o
}

func (o SystemInterfaceSecondaryipArrayOutput) ToSystemInterfaceSecondaryipArrayOutputWithContext(ctx context.Context) SystemInterfaceSecondaryipArrayOutput {
	return o
}

func (o SystemInterfaceSecondaryipArrayOutput) Index(i pulumi.IntInput) SystemInterfaceSecondaryipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceSecondaryip {
		return vs[0].([]SystemInterfaceSecondaryip)[vs[1].(int)]
	}).(SystemInterfaceSecondaryipOutput)
}

type SystemInterfaceSecurityGroup struct {
	// Names of user groups that can authenticate with the captive portal.
	Name *string `pulumi:"name"`
}

// SystemInterfaceSecurityGroupInput is an input type that accepts SystemInterfaceSecurityGroupArgs and SystemInterfaceSecurityGroupOutput values.
// You can construct a concrete instance of `SystemInterfaceSecurityGroupInput` via:
//
//	SystemInterfaceSecurityGroupArgs{...}
type SystemInterfaceSecurityGroupInput interface {
	pulumi.Input

	ToSystemInterfaceSecurityGroupOutput() SystemInterfaceSecurityGroupOutput
	ToSystemInterfaceSecurityGroupOutputWithContext(context.Context) SystemInterfaceSecurityGroupOutput
}

type SystemInterfaceSecurityGroupArgs struct {
	// Names of user groups that can authenticate with the captive portal.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemInterfaceSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceSecurityGroup)(nil)).Elem()
}

func (i SystemInterfaceSecurityGroupArgs) ToSystemInterfaceSecurityGroupOutput() SystemInterfaceSecurityGroupOutput {
	return i.ToSystemInterfaceSecurityGroupOutputWithContext(context.Background())
}

func (i SystemInterfaceSecurityGroupArgs) ToSystemInterfaceSecurityGroupOutputWithContext(ctx context.Context) SystemInterfaceSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceSecurityGroupOutput)
}

// SystemInterfaceSecurityGroupArrayInput is an input type that accepts SystemInterfaceSecurityGroupArray and SystemInterfaceSecurityGroupArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceSecurityGroupArrayInput` via:
//
//	SystemInterfaceSecurityGroupArray{ SystemInterfaceSecurityGroupArgs{...} }
type SystemInterfaceSecurityGroupArrayInput interface {
	pulumi.Input

	ToSystemInterfaceSecurityGroupArrayOutput() SystemInterfaceSecurityGroupArrayOutput
	ToSystemInterfaceSecurityGroupArrayOutputWithContext(context.Context) SystemInterfaceSecurityGroupArrayOutput
}

type SystemInterfaceSecurityGroupArray []SystemInterfaceSecurityGroupInput

func (SystemInterfaceSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceSecurityGroup)(nil)).Elem()
}

func (i SystemInterfaceSecurityGroupArray) ToSystemInterfaceSecurityGroupArrayOutput() SystemInterfaceSecurityGroupArrayOutput {
	return i.ToSystemInterfaceSecurityGroupArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceSecurityGroupArray) ToSystemInterfaceSecurityGroupArrayOutputWithContext(ctx context.Context) SystemInterfaceSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceSecurityGroupArrayOutput)
}

type SystemInterfaceSecurityGroupOutput struct{ *pulumi.OutputState }

func (SystemInterfaceSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceSecurityGroup)(nil)).Elem()
}

func (o SystemInterfaceSecurityGroupOutput) ToSystemInterfaceSecurityGroupOutput() SystemInterfaceSecurityGroupOutput {
	return o
}

func (o SystemInterfaceSecurityGroupOutput) ToSystemInterfaceSecurityGroupOutputWithContext(ctx context.Context) SystemInterfaceSecurityGroupOutput {
	return o
}

// Names of user groups that can authenticate with the captive portal.
func (o SystemInterfaceSecurityGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecurityGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemInterfaceSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceSecurityGroup)(nil)).Elem()
}

func (o SystemInterfaceSecurityGroupArrayOutput) ToSystemInterfaceSecurityGroupArrayOutput() SystemInterfaceSecurityGroupArrayOutput {
	return o
}

func (o SystemInterfaceSecurityGroupArrayOutput) ToSystemInterfaceSecurityGroupArrayOutputWithContext(ctx context.Context) SystemInterfaceSecurityGroupArrayOutput {
	return o
}

func (o SystemInterfaceSecurityGroupArrayOutput) Index(i pulumi.IntInput) SystemInterfaceSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceSecurityGroup {
		return vs[0].([]SystemInterfaceSecurityGroup)[vs[1].(int)]
	}).(SystemInterfaceSecurityGroupOutput)
}

type SystemInterfaceTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []SystemInterfaceTaggingTag `pulumi:"tags"`
}

// SystemInterfaceTaggingInput is an input type that accepts SystemInterfaceTaggingArgs and SystemInterfaceTaggingOutput values.
// You can construct a concrete instance of `SystemInterfaceTaggingInput` via:
//
//	SystemInterfaceTaggingArgs{...}
type SystemInterfaceTaggingInput interface {
	pulumi.Input

	ToSystemInterfaceTaggingOutput() SystemInterfaceTaggingOutput
	ToSystemInterfaceTaggingOutputWithContext(context.Context) SystemInterfaceTaggingOutput
}

type SystemInterfaceTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags SystemInterfaceTaggingTagArrayInput `pulumi:"tags"`
}

func (SystemInterfaceTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceTagging)(nil)).Elem()
}

func (i SystemInterfaceTaggingArgs) ToSystemInterfaceTaggingOutput() SystemInterfaceTaggingOutput {
	return i.ToSystemInterfaceTaggingOutputWithContext(context.Background())
}

func (i SystemInterfaceTaggingArgs) ToSystemInterfaceTaggingOutputWithContext(ctx context.Context) SystemInterfaceTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceTaggingOutput)
}

// SystemInterfaceTaggingArrayInput is an input type that accepts SystemInterfaceTaggingArray and SystemInterfaceTaggingArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceTaggingArrayInput` via:
//
//	SystemInterfaceTaggingArray{ SystemInterfaceTaggingArgs{...} }
type SystemInterfaceTaggingArrayInput interface {
	pulumi.Input

	ToSystemInterfaceTaggingArrayOutput() SystemInterfaceTaggingArrayOutput
	ToSystemInterfaceTaggingArrayOutputWithContext(context.Context) SystemInterfaceTaggingArrayOutput
}

type SystemInterfaceTaggingArray []SystemInterfaceTaggingInput

func (SystemInterfaceTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceTagging)(nil)).Elem()
}

func (i SystemInterfaceTaggingArray) ToSystemInterfaceTaggingArrayOutput() SystemInterfaceTaggingArrayOutput {
	return i.ToSystemInterfaceTaggingArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceTaggingArray) ToSystemInterfaceTaggingArrayOutputWithContext(ctx context.Context) SystemInterfaceTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceTaggingArrayOutput)
}

type SystemInterfaceTaggingOutput struct{ *pulumi.OutputState }

func (SystemInterfaceTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceTagging)(nil)).Elem()
}

func (o SystemInterfaceTaggingOutput) ToSystemInterfaceTaggingOutput() SystemInterfaceTaggingOutput {
	return o
}

func (o SystemInterfaceTaggingOutput) ToSystemInterfaceTaggingOutputWithContext(ctx context.Context) SystemInterfaceTaggingOutput {
	return o
}

// Tag category.
func (o SystemInterfaceTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o SystemInterfaceTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o SystemInterfaceTaggingOutput) Tags() SystemInterfaceTaggingTagArrayOutput {
	return o.ApplyT(func(v SystemInterfaceTagging) []SystemInterfaceTaggingTag { return v.Tags }).(SystemInterfaceTaggingTagArrayOutput)
}

type SystemInterfaceTaggingArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceTagging)(nil)).Elem()
}

func (o SystemInterfaceTaggingArrayOutput) ToSystemInterfaceTaggingArrayOutput() SystemInterfaceTaggingArrayOutput {
	return o
}

func (o SystemInterfaceTaggingArrayOutput) ToSystemInterfaceTaggingArrayOutputWithContext(ctx context.Context) SystemInterfaceTaggingArrayOutput {
	return o
}

func (o SystemInterfaceTaggingArrayOutput) Index(i pulumi.IntInput) SystemInterfaceTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceTagging {
		return vs[0].([]SystemInterfaceTagging)[vs[1].(int)]
	}).(SystemInterfaceTaggingOutput)
}

type SystemInterfaceTaggingTag struct {
	// Tag name.
	//
	// The `ipv6` block supports:
	Name *string `pulumi:"name"`
}

// SystemInterfaceTaggingTagInput is an input type that accepts SystemInterfaceTaggingTagArgs and SystemInterfaceTaggingTagOutput values.
// You can construct a concrete instance of `SystemInterfaceTaggingTagInput` via:
//
//	SystemInterfaceTaggingTagArgs{...}
type SystemInterfaceTaggingTagInput interface {
	pulumi.Input

	ToSystemInterfaceTaggingTagOutput() SystemInterfaceTaggingTagOutput
	ToSystemInterfaceTaggingTagOutputWithContext(context.Context) SystemInterfaceTaggingTagOutput
}

type SystemInterfaceTaggingTagArgs struct {
	// Tag name.
	//
	// The `ipv6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemInterfaceTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceTaggingTag)(nil)).Elem()
}

func (i SystemInterfaceTaggingTagArgs) ToSystemInterfaceTaggingTagOutput() SystemInterfaceTaggingTagOutput {
	return i.ToSystemInterfaceTaggingTagOutputWithContext(context.Background())
}

func (i SystemInterfaceTaggingTagArgs) ToSystemInterfaceTaggingTagOutputWithContext(ctx context.Context) SystemInterfaceTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceTaggingTagOutput)
}

// SystemInterfaceTaggingTagArrayInput is an input type that accepts SystemInterfaceTaggingTagArray and SystemInterfaceTaggingTagArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceTaggingTagArrayInput` via:
//
//	SystemInterfaceTaggingTagArray{ SystemInterfaceTaggingTagArgs{...} }
type SystemInterfaceTaggingTagArrayInput interface {
	pulumi.Input

	ToSystemInterfaceTaggingTagArrayOutput() SystemInterfaceTaggingTagArrayOutput
	ToSystemInterfaceTaggingTagArrayOutputWithContext(context.Context) SystemInterfaceTaggingTagArrayOutput
}

type SystemInterfaceTaggingTagArray []SystemInterfaceTaggingTagInput

func (SystemInterfaceTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceTaggingTag)(nil)).Elem()
}

func (i SystemInterfaceTaggingTagArray) ToSystemInterfaceTaggingTagArrayOutput() SystemInterfaceTaggingTagArrayOutput {
	return i.ToSystemInterfaceTaggingTagArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceTaggingTagArray) ToSystemInterfaceTaggingTagArrayOutputWithContext(ctx context.Context) SystemInterfaceTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceTaggingTagArrayOutput)
}

type SystemInterfaceTaggingTagOutput struct{ *pulumi.OutputState }

func (SystemInterfaceTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceTaggingTag)(nil)).Elem()
}

func (o SystemInterfaceTaggingTagOutput) ToSystemInterfaceTaggingTagOutput() SystemInterfaceTaggingTagOutput {
	return o
}

func (o SystemInterfaceTaggingTagOutput) ToSystemInterfaceTaggingTagOutputWithContext(ctx context.Context) SystemInterfaceTaggingTagOutput {
	return o
}

// Tag name.
//
// The `ipv6` block supports:
func (o SystemInterfaceTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemInterfaceTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceTaggingTag)(nil)).Elem()
}

func (o SystemInterfaceTaggingTagArrayOutput) ToSystemInterfaceTaggingTagArrayOutput() SystemInterfaceTaggingTagArrayOutput {
	return o
}

func (o SystemInterfaceTaggingTagArrayOutput) ToSystemInterfaceTaggingTagArrayOutputWithContext(ctx context.Context) SystemInterfaceTaggingTagArrayOutput {
	return o
}

func (o SystemInterfaceTaggingTagArrayOutput) Index(i pulumi.IntInput) SystemInterfaceTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceTaggingTag {
		return vs[0].([]SystemInterfaceTaggingTag)[vs[1].(int)]
	}).(SystemInterfaceTaggingTagOutput)
}

type SystemInterfaceVrrp struct {
	// Enable/disable accept mode. Valid values: `enable`, `disable`.
	AcceptMode *string `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval *int `pulumi:"advInterval"`
	// Enable/disable ignoring of default route when checking destination. Valid values: `enable`, `disable`.
	IgnoreDefaultRoute *string `pulumi:"ignoreDefaultRoute"`
	// Enable/disable preempt mode. Valid values: `enable`, `disable`.
	Preempt *string `pulumi:"preempt"`
	// Priority of the virtual router (1 - 255).
	Priority *int `pulumi:"priority"`
	// VRRP Proxy ARP configuration. The structure of `proxyArp` block is documented below.
	ProxyArps []SystemInterfaceVrrpProxyArp `pulumi:"proxyArps"`
	// Startup time (1 - 255 seconds).
	StartTime *int `pulumi:"startTime"`
	// Enable/disable this VRRP configuration. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// VRRP version. Valid values: `2`, `3`.
	Version *string `pulumi:"version"`
	// Monitor the route to this destination.
	Vrdst *string `pulumi:"vrdst"`
	// Priority of the virtual router when the virtual router destination becomes unreachable (0 - 254).
	VrdstPriority *int `pulumi:"vrdstPriority"`
	// VRRP group ID (1 - 65535).
	Vrgrp *int `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid *int `pulumi:"vrid"`
	// IP address of the virtual router.
	Vrip *string `pulumi:"vrip"`
}

// SystemInterfaceVrrpInput is an input type that accepts SystemInterfaceVrrpArgs and SystemInterfaceVrrpOutput values.
// You can construct a concrete instance of `SystemInterfaceVrrpInput` via:
//
//	SystemInterfaceVrrpArgs{...}
type SystemInterfaceVrrpInput interface {
	pulumi.Input

	ToSystemInterfaceVrrpOutput() SystemInterfaceVrrpOutput
	ToSystemInterfaceVrrpOutputWithContext(context.Context) SystemInterfaceVrrpOutput
}

type SystemInterfaceVrrpArgs struct {
	// Enable/disable accept mode. Valid values: `enable`, `disable`.
	AcceptMode pulumi.StringPtrInput `pulumi:"acceptMode"`
	// Advertisement interval (1 - 255 seconds).
	AdvInterval pulumi.IntPtrInput `pulumi:"advInterval"`
	// Enable/disable ignoring of default route when checking destination. Valid values: `enable`, `disable`.
	IgnoreDefaultRoute pulumi.StringPtrInput `pulumi:"ignoreDefaultRoute"`
	// Enable/disable preempt mode. Valid values: `enable`, `disable`.
	Preempt pulumi.StringPtrInput `pulumi:"preempt"`
	// Priority of the virtual router (1 - 255).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// VRRP Proxy ARP configuration. The structure of `proxyArp` block is documented below.
	ProxyArps SystemInterfaceVrrpProxyArpArrayInput `pulumi:"proxyArps"`
	// Startup time (1 - 255 seconds).
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
	// Enable/disable this VRRP configuration. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// VRRP version. Valid values: `2`, `3`.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// Monitor the route to this destination.
	Vrdst pulumi.StringPtrInput `pulumi:"vrdst"`
	// Priority of the virtual router when the virtual router destination becomes unreachable (0 - 254).
	VrdstPriority pulumi.IntPtrInput `pulumi:"vrdstPriority"`
	// VRRP group ID (1 - 65535).
	Vrgrp pulumi.IntPtrInput `pulumi:"vrgrp"`
	// Virtual router identifier (1 - 255).
	Vrid pulumi.IntPtrInput `pulumi:"vrid"`
	// IP address of the virtual router.
	Vrip pulumi.StringPtrInput `pulumi:"vrip"`
}

func (SystemInterfaceVrrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceVrrp)(nil)).Elem()
}

func (i SystemInterfaceVrrpArgs) ToSystemInterfaceVrrpOutput() SystemInterfaceVrrpOutput {
	return i.ToSystemInterfaceVrrpOutputWithContext(context.Background())
}

func (i SystemInterfaceVrrpArgs) ToSystemInterfaceVrrpOutputWithContext(ctx context.Context) SystemInterfaceVrrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceVrrpOutput)
}

// SystemInterfaceVrrpArrayInput is an input type that accepts SystemInterfaceVrrpArray and SystemInterfaceVrrpArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceVrrpArrayInput` via:
//
//	SystemInterfaceVrrpArray{ SystemInterfaceVrrpArgs{...} }
type SystemInterfaceVrrpArrayInput interface {
	pulumi.Input

	ToSystemInterfaceVrrpArrayOutput() SystemInterfaceVrrpArrayOutput
	ToSystemInterfaceVrrpArrayOutputWithContext(context.Context) SystemInterfaceVrrpArrayOutput
}

type SystemInterfaceVrrpArray []SystemInterfaceVrrpInput

func (SystemInterfaceVrrpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceVrrp)(nil)).Elem()
}

func (i SystemInterfaceVrrpArray) ToSystemInterfaceVrrpArrayOutput() SystemInterfaceVrrpArrayOutput {
	return i.ToSystemInterfaceVrrpArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceVrrpArray) ToSystemInterfaceVrrpArrayOutputWithContext(ctx context.Context) SystemInterfaceVrrpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceVrrpArrayOutput)
}

type SystemInterfaceVrrpOutput struct{ *pulumi.OutputState }

func (SystemInterfaceVrrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceVrrp)(nil)).Elem()
}

func (o SystemInterfaceVrrpOutput) ToSystemInterfaceVrrpOutput() SystemInterfaceVrrpOutput {
	return o
}

func (o SystemInterfaceVrrpOutput) ToSystemInterfaceVrrpOutputWithContext(ctx context.Context) SystemInterfaceVrrpOutput {
	return o
}

// Enable/disable accept mode. Valid values: `enable`, `disable`.
func (o SystemInterfaceVrrpOutput) AcceptMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.AcceptMode }).(pulumi.StringPtrOutput)
}

// Advertisement interval (1 - 255 seconds).
func (o SystemInterfaceVrrpOutput) AdvInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.AdvInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable ignoring of default route when checking destination. Valid values: `enable`, `disable`.
func (o SystemInterfaceVrrpOutput) IgnoreDefaultRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.IgnoreDefaultRoute }).(pulumi.StringPtrOutput)
}

// Enable/disable preempt mode. Valid values: `enable`, `disable`.
func (o SystemInterfaceVrrpOutput) Preempt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.Preempt }).(pulumi.StringPtrOutput)
}

// Priority of the virtual router (1 - 255).
func (o SystemInterfaceVrrpOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// VRRP Proxy ARP configuration. The structure of `proxyArp` block is documented below.
func (o SystemInterfaceVrrpOutput) ProxyArps() SystemInterfaceVrrpProxyArpArrayOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) []SystemInterfaceVrrpProxyArp { return v.ProxyArps }).(SystemInterfaceVrrpProxyArpArrayOutput)
}

// Startup time (1 - 255 seconds).
func (o SystemInterfaceVrrpOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Enable/disable this VRRP configuration. Valid values: `enable`, `disable`.
func (o SystemInterfaceVrrpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// VRRP version. Valid values: `2`, `3`.
func (o SystemInterfaceVrrpOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// Monitor the route to this destination.
func (o SystemInterfaceVrrpOutput) Vrdst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.Vrdst }).(pulumi.StringPtrOutput)
}

// Priority of the virtual router when the virtual router destination becomes unreachable (0 - 254).
func (o SystemInterfaceVrrpOutput) VrdstPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.VrdstPriority }).(pulumi.IntPtrOutput)
}

// VRRP group ID (1 - 65535).
func (o SystemInterfaceVrrpOutput) Vrgrp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.Vrgrp }).(pulumi.IntPtrOutput)
}

// Virtual router identifier (1 - 255).
func (o SystemInterfaceVrrpOutput) Vrid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.Vrid }).(pulumi.IntPtrOutput)
}

// IP address of the virtual router.
func (o SystemInterfaceVrrpOutput) Vrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.Vrip }).(pulumi.StringPtrOutput)
}

type SystemInterfaceVrrpArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceVrrpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceVrrp)(nil)).Elem()
}

func (o SystemInterfaceVrrpArrayOutput) ToSystemInterfaceVrrpArrayOutput() SystemInterfaceVrrpArrayOutput {
	return o
}

func (o SystemInterfaceVrrpArrayOutput) ToSystemInterfaceVrrpArrayOutputWithContext(ctx context.Context) SystemInterfaceVrrpArrayOutput {
	return o
}

func (o SystemInterfaceVrrpArrayOutput) Index(i pulumi.IntInput) SystemInterfaceVrrpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceVrrp {
		return vs[0].([]SystemInterfaceVrrp)[vs[1].(int)]
	}).(SystemInterfaceVrrpOutput)
}

type SystemInterfaceVrrpProxyArp struct {
	// ID.
	Id *int `pulumi:"id"`
	// Set IP addresses of proxy ARP.
	Ip *string `pulumi:"ip"`
}

// SystemInterfaceVrrpProxyArpInput is an input type that accepts SystemInterfaceVrrpProxyArpArgs and SystemInterfaceVrrpProxyArpOutput values.
// You can construct a concrete instance of `SystemInterfaceVrrpProxyArpInput` via:
//
//	SystemInterfaceVrrpProxyArpArgs{...}
type SystemInterfaceVrrpProxyArpInput interface {
	pulumi.Input

	ToSystemInterfaceVrrpProxyArpOutput() SystemInterfaceVrrpProxyArpOutput
	ToSystemInterfaceVrrpProxyArpOutputWithContext(context.Context) SystemInterfaceVrrpProxyArpOutput
}

type SystemInterfaceVrrpProxyArpArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Set IP addresses of proxy ARP.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SystemInterfaceVrrpProxyArpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceVrrpProxyArp)(nil)).Elem()
}

func (i SystemInterfaceVrrpProxyArpArgs) ToSystemInterfaceVrrpProxyArpOutput() SystemInterfaceVrrpProxyArpOutput {
	return i.ToSystemInterfaceVrrpProxyArpOutputWithContext(context.Background())
}

func (i SystemInterfaceVrrpProxyArpArgs) ToSystemInterfaceVrrpProxyArpOutputWithContext(ctx context.Context) SystemInterfaceVrrpProxyArpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceVrrpProxyArpOutput)
}

// SystemInterfaceVrrpProxyArpArrayInput is an input type that accepts SystemInterfaceVrrpProxyArpArray and SystemInterfaceVrrpProxyArpArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceVrrpProxyArpArrayInput` via:
//
//	SystemInterfaceVrrpProxyArpArray{ SystemInterfaceVrrpProxyArpArgs{...} }
type SystemInterfaceVrrpProxyArpArrayInput interface {
	pulumi.Input

	ToSystemInterfaceVrrpProxyArpArrayOutput() SystemInterfaceVrrpProxyArpArrayOutput
	ToSystemInterfaceVrrpProxyArpArrayOutputWithContext(context.Context) SystemInterfaceVrrpProxyArpArrayOutput
}

type SystemInterfaceVrrpProxyArpArray []SystemInterfaceVrrpProxyArpInput

func (SystemInterfaceVrrpProxyArpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceVrrpProxyArp)(nil)).Elem()
}

func (i SystemInterfaceVrrpProxyArpArray) ToSystemInterfaceVrrpProxyArpArrayOutput() SystemInterfaceVrrpProxyArpArrayOutput {
	return i.ToSystemInterfaceVrrpProxyArpArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceVrrpProxyArpArray) ToSystemInterfaceVrrpProxyArpArrayOutputWithContext(ctx context.Context) SystemInterfaceVrrpProxyArpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceVrrpProxyArpArrayOutput)
}

type SystemInterfaceVrrpProxyArpOutput struct{ *pulumi.OutputState }

func (SystemInterfaceVrrpProxyArpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceVrrpProxyArp)(nil)).Elem()
}

func (o SystemInterfaceVrrpProxyArpOutput) ToSystemInterfaceVrrpProxyArpOutput() SystemInterfaceVrrpProxyArpOutput {
	return o
}

func (o SystemInterfaceVrrpProxyArpOutput) ToSystemInterfaceVrrpProxyArpOutputWithContext(ctx context.Context) SystemInterfaceVrrpProxyArpOutput {
	return o
}

// ID.
func (o SystemInterfaceVrrpProxyArpOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrpProxyArp) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Set IP addresses of proxy ARP.
func (o SystemInterfaceVrrpProxyArpOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrpProxyArp) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SystemInterfaceVrrpProxyArpArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceVrrpProxyArpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceVrrpProxyArp)(nil)).Elem()
}

func (o SystemInterfaceVrrpProxyArpArrayOutput) ToSystemInterfaceVrrpProxyArpArrayOutput() SystemInterfaceVrrpProxyArpArrayOutput {
	return o
}

func (o SystemInterfaceVrrpProxyArpArrayOutput) ToSystemInterfaceVrrpProxyArpArrayOutputWithContext(ctx context.Context) SystemInterfaceVrrpProxyArpArrayOutput {
	return o
}

func (o SystemInterfaceVrrpProxyArpArrayOutput) Index(i pulumi.IntInput) SystemInterfaceVrrpProxyArpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceVrrpProxyArp {
		return vs[0].([]SystemInterfaceVrrpProxyArp)[vs[1].(int)]
	}).(SystemInterfaceVrrpProxyArpOutput)
}

type SystemIpamPool struct {
	// Description.
	Description *string `pulumi:"description"`
	// IPAM pool name.
	Name *string `pulumi:"name"`
	// Configure IPAM pool subnet, Class A - Class B subnet.
	Subnet *string `pulumi:"subnet"`
}

// SystemIpamPoolInput is an input type that accepts SystemIpamPoolArgs and SystemIpamPoolOutput values.
// You can construct a concrete instance of `SystemIpamPoolInput` via:
//
//	SystemIpamPoolArgs{...}
type SystemIpamPoolInput interface {
	pulumi.Input

	ToSystemIpamPoolOutput() SystemIpamPoolOutput
	ToSystemIpamPoolOutputWithContext(context.Context) SystemIpamPoolOutput
}

type SystemIpamPoolArgs struct {
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IPAM pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configure IPAM pool subnet, Class A - Class B subnet.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (SystemIpamPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamPool)(nil)).Elem()
}

func (i SystemIpamPoolArgs) ToSystemIpamPoolOutput() SystemIpamPoolOutput {
	return i.ToSystemIpamPoolOutputWithContext(context.Background())
}

func (i SystemIpamPoolArgs) ToSystemIpamPoolOutputWithContext(ctx context.Context) SystemIpamPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamPoolOutput)
}

// SystemIpamPoolArrayInput is an input type that accepts SystemIpamPoolArray and SystemIpamPoolArrayOutput values.
// You can construct a concrete instance of `SystemIpamPoolArrayInput` via:
//
//	SystemIpamPoolArray{ SystemIpamPoolArgs{...} }
type SystemIpamPoolArrayInput interface {
	pulumi.Input

	ToSystemIpamPoolArrayOutput() SystemIpamPoolArrayOutput
	ToSystemIpamPoolArrayOutputWithContext(context.Context) SystemIpamPoolArrayOutput
}

type SystemIpamPoolArray []SystemIpamPoolInput

func (SystemIpamPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamPool)(nil)).Elem()
}

func (i SystemIpamPoolArray) ToSystemIpamPoolArrayOutput() SystemIpamPoolArrayOutput {
	return i.ToSystemIpamPoolArrayOutputWithContext(context.Background())
}

func (i SystemIpamPoolArray) ToSystemIpamPoolArrayOutputWithContext(ctx context.Context) SystemIpamPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamPoolArrayOutput)
}

type SystemIpamPoolOutput struct{ *pulumi.OutputState }

func (SystemIpamPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamPool)(nil)).Elem()
}

func (o SystemIpamPoolOutput) ToSystemIpamPoolOutput() SystemIpamPoolOutput {
	return o
}

func (o SystemIpamPoolOutput) ToSystemIpamPoolOutputWithContext(ctx context.Context) SystemIpamPoolOutput {
	return o
}

// Description.
func (o SystemIpamPoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamPool) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IPAM pool name.
func (o SystemIpamPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configure IPAM pool subnet, Class A - Class B subnet.
func (o SystemIpamPoolOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamPool) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type SystemIpamPoolArrayOutput struct{ *pulumi.OutputState }

func (SystemIpamPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamPool)(nil)).Elem()
}

func (o SystemIpamPoolArrayOutput) ToSystemIpamPoolArrayOutput() SystemIpamPoolArrayOutput {
	return o
}

func (o SystemIpamPoolArrayOutput) ToSystemIpamPoolArrayOutputWithContext(ctx context.Context) SystemIpamPoolArrayOutput {
	return o
}

func (o SystemIpamPoolArrayOutput) Index(i pulumi.IntInput) SystemIpamPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpamPool {
		return vs[0].([]SystemIpamPool)[vs[1].(int)]
	}).(SystemIpamPoolOutput)
}

type SystemIpamRule struct {
	// Description.
	Description *string `pulumi:"description"`
	// Configure serial number or wildcard of Fortigate to match. The structure of `device` block is documented below.
	Devices []SystemIpamRuleDevice `pulumi:"devices"`
	// Enable/disable DHCP server for matching IPAM interfaces. Valid values: `enable`, `disable`.
	Dhcp *string `pulumi:"dhcp"`
	// Configure name or wildcard of interface to match. The structure of `interface` block is documented below.
	Interfaces []SystemIpamRuleInterface `pulumi:"interfaces"`
	// IPAM rule name.
	Name *string `pulumi:"name"`
	// Configure name of IPAM pool to use. The structure of `pool` block is documented below.
	Pools []SystemIpamRulePool `pulumi:"pools"`
	// Configure role of interface to match. Valid values: `any`, `lan`, `wan`, `dmz`, `undefined`.
	Role *string `pulumi:"role"`
}

// SystemIpamRuleInput is an input type that accepts SystemIpamRuleArgs and SystemIpamRuleOutput values.
// You can construct a concrete instance of `SystemIpamRuleInput` via:
//
//	SystemIpamRuleArgs{...}
type SystemIpamRuleInput interface {
	pulumi.Input

	ToSystemIpamRuleOutput() SystemIpamRuleOutput
	ToSystemIpamRuleOutputWithContext(context.Context) SystemIpamRuleOutput
}

type SystemIpamRuleArgs struct {
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Configure serial number or wildcard of Fortigate to match. The structure of `device` block is documented below.
	Devices SystemIpamRuleDeviceArrayInput `pulumi:"devices"`
	// Enable/disable DHCP server for matching IPAM interfaces. Valid values: `enable`, `disable`.
	Dhcp pulumi.StringPtrInput `pulumi:"dhcp"`
	// Configure name or wildcard of interface to match. The structure of `interface` block is documented below.
	Interfaces SystemIpamRuleInterfaceArrayInput `pulumi:"interfaces"`
	// IPAM rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configure name of IPAM pool to use. The structure of `pool` block is documented below.
	Pools SystemIpamRulePoolArrayInput `pulumi:"pools"`
	// Configure role of interface to match. Valid values: `any`, `lan`, `wan`, `dmz`, `undefined`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (SystemIpamRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRule)(nil)).Elem()
}

func (i SystemIpamRuleArgs) ToSystemIpamRuleOutput() SystemIpamRuleOutput {
	return i.ToSystemIpamRuleOutputWithContext(context.Background())
}

func (i SystemIpamRuleArgs) ToSystemIpamRuleOutputWithContext(ctx context.Context) SystemIpamRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleOutput)
}

// SystemIpamRuleArrayInput is an input type that accepts SystemIpamRuleArray and SystemIpamRuleArrayOutput values.
// You can construct a concrete instance of `SystemIpamRuleArrayInput` via:
//
//	SystemIpamRuleArray{ SystemIpamRuleArgs{...} }
type SystemIpamRuleArrayInput interface {
	pulumi.Input

	ToSystemIpamRuleArrayOutput() SystemIpamRuleArrayOutput
	ToSystemIpamRuleArrayOutputWithContext(context.Context) SystemIpamRuleArrayOutput
}

type SystemIpamRuleArray []SystemIpamRuleInput

func (SystemIpamRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRule)(nil)).Elem()
}

func (i SystemIpamRuleArray) ToSystemIpamRuleArrayOutput() SystemIpamRuleArrayOutput {
	return i.ToSystemIpamRuleArrayOutputWithContext(context.Background())
}

func (i SystemIpamRuleArray) ToSystemIpamRuleArrayOutputWithContext(ctx context.Context) SystemIpamRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleArrayOutput)
}

type SystemIpamRuleOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRule)(nil)).Elem()
}

func (o SystemIpamRuleOutput) ToSystemIpamRuleOutput() SystemIpamRuleOutput {
	return o
}

func (o SystemIpamRuleOutput) ToSystemIpamRuleOutputWithContext(ctx context.Context) SystemIpamRuleOutput {
	return o
}

// Description.
func (o SystemIpamRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Configure serial number or wildcard of Fortigate to match. The structure of `device` block is documented below.
func (o SystemIpamRuleOutput) Devices() SystemIpamRuleDeviceArrayOutput {
	return o.ApplyT(func(v SystemIpamRule) []SystemIpamRuleDevice { return v.Devices }).(SystemIpamRuleDeviceArrayOutput)
}

// Enable/disable DHCP server for matching IPAM interfaces. Valid values: `enable`, `disable`.
func (o SystemIpamRuleOutput) Dhcp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRule) *string { return v.Dhcp }).(pulumi.StringPtrOutput)
}

// Configure name or wildcard of interface to match. The structure of `interface` block is documented below.
func (o SystemIpamRuleOutput) Interfaces() SystemIpamRuleInterfaceArrayOutput {
	return o.ApplyT(func(v SystemIpamRule) []SystemIpamRuleInterface { return v.Interfaces }).(SystemIpamRuleInterfaceArrayOutput)
}

// IPAM rule name.
func (o SystemIpamRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configure name of IPAM pool to use. The structure of `pool` block is documented below.
func (o SystemIpamRuleOutput) Pools() SystemIpamRulePoolArrayOutput {
	return o.ApplyT(func(v SystemIpamRule) []SystemIpamRulePool { return v.Pools }).(SystemIpamRulePoolArrayOutput)
}

// Configure role of interface to match. Valid values: `any`, `lan`, `wan`, `dmz`, `undefined`.
func (o SystemIpamRuleOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRule) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type SystemIpamRuleArrayOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRule)(nil)).Elem()
}

func (o SystemIpamRuleArrayOutput) ToSystemIpamRuleArrayOutput() SystemIpamRuleArrayOutput {
	return o
}

func (o SystemIpamRuleArrayOutput) ToSystemIpamRuleArrayOutputWithContext(ctx context.Context) SystemIpamRuleArrayOutput {
	return o
}

func (o SystemIpamRuleArrayOutput) Index(i pulumi.IntInput) SystemIpamRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpamRule {
		return vs[0].([]SystemIpamRule)[vs[1].(int)]
	}).(SystemIpamRuleOutput)
}

type SystemIpamRuleDevice struct {
	// Fortigate serial number or wildcard.
	Name *string `pulumi:"name"`
}

// SystemIpamRuleDeviceInput is an input type that accepts SystemIpamRuleDeviceArgs and SystemIpamRuleDeviceOutput values.
// You can construct a concrete instance of `SystemIpamRuleDeviceInput` via:
//
//	SystemIpamRuleDeviceArgs{...}
type SystemIpamRuleDeviceInput interface {
	pulumi.Input

	ToSystemIpamRuleDeviceOutput() SystemIpamRuleDeviceOutput
	ToSystemIpamRuleDeviceOutputWithContext(context.Context) SystemIpamRuleDeviceOutput
}

type SystemIpamRuleDeviceArgs struct {
	// Fortigate serial number or wildcard.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemIpamRuleDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRuleDevice)(nil)).Elem()
}

func (i SystemIpamRuleDeviceArgs) ToSystemIpamRuleDeviceOutput() SystemIpamRuleDeviceOutput {
	return i.ToSystemIpamRuleDeviceOutputWithContext(context.Background())
}

func (i SystemIpamRuleDeviceArgs) ToSystemIpamRuleDeviceOutputWithContext(ctx context.Context) SystemIpamRuleDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleDeviceOutput)
}

// SystemIpamRuleDeviceArrayInput is an input type that accepts SystemIpamRuleDeviceArray and SystemIpamRuleDeviceArrayOutput values.
// You can construct a concrete instance of `SystemIpamRuleDeviceArrayInput` via:
//
//	SystemIpamRuleDeviceArray{ SystemIpamRuleDeviceArgs{...} }
type SystemIpamRuleDeviceArrayInput interface {
	pulumi.Input

	ToSystemIpamRuleDeviceArrayOutput() SystemIpamRuleDeviceArrayOutput
	ToSystemIpamRuleDeviceArrayOutputWithContext(context.Context) SystemIpamRuleDeviceArrayOutput
}

type SystemIpamRuleDeviceArray []SystemIpamRuleDeviceInput

func (SystemIpamRuleDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRuleDevice)(nil)).Elem()
}

func (i SystemIpamRuleDeviceArray) ToSystemIpamRuleDeviceArrayOutput() SystemIpamRuleDeviceArrayOutput {
	return i.ToSystemIpamRuleDeviceArrayOutputWithContext(context.Background())
}

func (i SystemIpamRuleDeviceArray) ToSystemIpamRuleDeviceArrayOutputWithContext(ctx context.Context) SystemIpamRuleDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleDeviceArrayOutput)
}

type SystemIpamRuleDeviceOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRuleDevice)(nil)).Elem()
}

func (o SystemIpamRuleDeviceOutput) ToSystemIpamRuleDeviceOutput() SystemIpamRuleDeviceOutput {
	return o
}

func (o SystemIpamRuleDeviceOutput) ToSystemIpamRuleDeviceOutputWithContext(ctx context.Context) SystemIpamRuleDeviceOutput {
	return o
}

// Fortigate serial number or wildcard.
func (o SystemIpamRuleDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRuleDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemIpamRuleDeviceArrayOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRuleDevice)(nil)).Elem()
}

func (o SystemIpamRuleDeviceArrayOutput) ToSystemIpamRuleDeviceArrayOutput() SystemIpamRuleDeviceArrayOutput {
	return o
}

func (o SystemIpamRuleDeviceArrayOutput) ToSystemIpamRuleDeviceArrayOutputWithContext(ctx context.Context) SystemIpamRuleDeviceArrayOutput {
	return o
}

func (o SystemIpamRuleDeviceArrayOutput) Index(i pulumi.IntInput) SystemIpamRuleDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpamRuleDevice {
		return vs[0].([]SystemIpamRuleDevice)[vs[1].(int)]
	}).(SystemIpamRuleDeviceOutput)
}

type SystemIpamRuleInterface struct {
	// Interface name or wildcard.
	Name *string `pulumi:"name"`
}

// SystemIpamRuleInterfaceInput is an input type that accepts SystemIpamRuleInterfaceArgs and SystemIpamRuleInterfaceOutput values.
// You can construct a concrete instance of `SystemIpamRuleInterfaceInput` via:
//
//	SystemIpamRuleInterfaceArgs{...}
type SystemIpamRuleInterfaceInput interface {
	pulumi.Input

	ToSystemIpamRuleInterfaceOutput() SystemIpamRuleInterfaceOutput
	ToSystemIpamRuleInterfaceOutputWithContext(context.Context) SystemIpamRuleInterfaceOutput
}

type SystemIpamRuleInterfaceArgs struct {
	// Interface name or wildcard.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemIpamRuleInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRuleInterface)(nil)).Elem()
}

func (i SystemIpamRuleInterfaceArgs) ToSystemIpamRuleInterfaceOutput() SystemIpamRuleInterfaceOutput {
	return i.ToSystemIpamRuleInterfaceOutputWithContext(context.Background())
}

func (i SystemIpamRuleInterfaceArgs) ToSystemIpamRuleInterfaceOutputWithContext(ctx context.Context) SystemIpamRuleInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleInterfaceOutput)
}

// SystemIpamRuleInterfaceArrayInput is an input type that accepts SystemIpamRuleInterfaceArray and SystemIpamRuleInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemIpamRuleInterfaceArrayInput` via:
//
//	SystemIpamRuleInterfaceArray{ SystemIpamRuleInterfaceArgs{...} }
type SystemIpamRuleInterfaceArrayInput interface {
	pulumi.Input

	ToSystemIpamRuleInterfaceArrayOutput() SystemIpamRuleInterfaceArrayOutput
	ToSystemIpamRuleInterfaceArrayOutputWithContext(context.Context) SystemIpamRuleInterfaceArrayOutput
}

type SystemIpamRuleInterfaceArray []SystemIpamRuleInterfaceInput

func (SystemIpamRuleInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRuleInterface)(nil)).Elem()
}

func (i SystemIpamRuleInterfaceArray) ToSystemIpamRuleInterfaceArrayOutput() SystemIpamRuleInterfaceArrayOutput {
	return i.ToSystemIpamRuleInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemIpamRuleInterfaceArray) ToSystemIpamRuleInterfaceArrayOutputWithContext(ctx context.Context) SystemIpamRuleInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleInterfaceArrayOutput)
}

type SystemIpamRuleInterfaceOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRuleInterface)(nil)).Elem()
}

func (o SystemIpamRuleInterfaceOutput) ToSystemIpamRuleInterfaceOutput() SystemIpamRuleInterfaceOutput {
	return o
}

func (o SystemIpamRuleInterfaceOutput) ToSystemIpamRuleInterfaceOutputWithContext(ctx context.Context) SystemIpamRuleInterfaceOutput {
	return o
}

// Interface name or wildcard.
func (o SystemIpamRuleInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRuleInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemIpamRuleInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRuleInterface)(nil)).Elem()
}

func (o SystemIpamRuleInterfaceArrayOutput) ToSystemIpamRuleInterfaceArrayOutput() SystemIpamRuleInterfaceArrayOutput {
	return o
}

func (o SystemIpamRuleInterfaceArrayOutput) ToSystemIpamRuleInterfaceArrayOutputWithContext(ctx context.Context) SystemIpamRuleInterfaceArrayOutput {
	return o
}

func (o SystemIpamRuleInterfaceArrayOutput) Index(i pulumi.IntInput) SystemIpamRuleInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpamRuleInterface {
		return vs[0].([]SystemIpamRuleInterface)[vs[1].(int)]
	}).(SystemIpamRuleInterfaceOutput)
}

type SystemIpamRulePool struct {
	// Ipam pool name.
	Name *string `pulumi:"name"`
}

// SystemIpamRulePoolInput is an input type that accepts SystemIpamRulePoolArgs and SystemIpamRulePoolOutput values.
// You can construct a concrete instance of `SystemIpamRulePoolInput` via:
//
//	SystemIpamRulePoolArgs{...}
type SystemIpamRulePoolInput interface {
	pulumi.Input

	ToSystemIpamRulePoolOutput() SystemIpamRulePoolOutput
	ToSystemIpamRulePoolOutputWithContext(context.Context) SystemIpamRulePoolOutput
}

type SystemIpamRulePoolArgs struct {
	// Ipam pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemIpamRulePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRulePool)(nil)).Elem()
}

func (i SystemIpamRulePoolArgs) ToSystemIpamRulePoolOutput() SystemIpamRulePoolOutput {
	return i.ToSystemIpamRulePoolOutputWithContext(context.Background())
}

func (i SystemIpamRulePoolArgs) ToSystemIpamRulePoolOutputWithContext(ctx context.Context) SystemIpamRulePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRulePoolOutput)
}

// SystemIpamRulePoolArrayInput is an input type that accepts SystemIpamRulePoolArray and SystemIpamRulePoolArrayOutput values.
// You can construct a concrete instance of `SystemIpamRulePoolArrayInput` via:
//
//	SystemIpamRulePoolArray{ SystemIpamRulePoolArgs{...} }
type SystemIpamRulePoolArrayInput interface {
	pulumi.Input

	ToSystemIpamRulePoolArrayOutput() SystemIpamRulePoolArrayOutput
	ToSystemIpamRulePoolArrayOutputWithContext(context.Context) SystemIpamRulePoolArrayOutput
}

type SystemIpamRulePoolArray []SystemIpamRulePoolInput

func (SystemIpamRulePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRulePool)(nil)).Elem()
}

func (i SystemIpamRulePoolArray) ToSystemIpamRulePoolArrayOutput() SystemIpamRulePoolArrayOutput {
	return i.ToSystemIpamRulePoolArrayOutputWithContext(context.Background())
}

func (i SystemIpamRulePoolArray) ToSystemIpamRulePoolArrayOutputWithContext(ctx context.Context) SystemIpamRulePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRulePoolArrayOutput)
}

type SystemIpamRulePoolOutput struct{ *pulumi.OutputState }

func (SystemIpamRulePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRulePool)(nil)).Elem()
}

func (o SystemIpamRulePoolOutput) ToSystemIpamRulePoolOutput() SystemIpamRulePoolOutput {
	return o
}

func (o SystemIpamRulePoolOutput) ToSystemIpamRulePoolOutputWithContext(ctx context.Context) SystemIpamRulePoolOutput {
	return o
}

// Ipam pool name.
func (o SystemIpamRulePoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRulePool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemIpamRulePoolArrayOutput struct{ *pulumi.OutputState }

func (SystemIpamRulePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRulePool)(nil)).Elem()
}

func (o SystemIpamRulePoolArrayOutput) ToSystemIpamRulePoolArrayOutput() SystemIpamRulePoolArrayOutput {
	return o
}

func (o SystemIpamRulePoolArrayOutput) ToSystemIpamRulePoolArrayOutputWithContext(ctx context.Context) SystemIpamRulePoolArrayOutput {
	return o
}

func (o SystemIpamRulePoolArrayOutput) Index(i pulumi.IntInput) SystemIpamRulePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpamRulePool {
		return vs[0].([]SystemIpamRulePool)[vs[1].(int)]
	}).(SystemIpamRulePoolOutput)
}

type SystemIpsecaggregateMember struct {
	// Tunnel name.
	TunnelName *string `pulumi:"tunnelName"`
}

// SystemIpsecaggregateMemberInput is an input type that accepts SystemIpsecaggregateMemberArgs and SystemIpsecaggregateMemberOutput values.
// You can construct a concrete instance of `SystemIpsecaggregateMemberInput` via:
//
//	SystemIpsecaggregateMemberArgs{...}
type SystemIpsecaggregateMemberInput interface {
	pulumi.Input

	ToSystemIpsecaggregateMemberOutput() SystemIpsecaggregateMemberOutput
	ToSystemIpsecaggregateMemberOutputWithContext(context.Context) SystemIpsecaggregateMemberOutput
}

type SystemIpsecaggregateMemberArgs struct {
	// Tunnel name.
	TunnelName pulumi.StringPtrInput `pulumi:"tunnelName"`
}

func (SystemIpsecaggregateMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpsecaggregateMember)(nil)).Elem()
}

func (i SystemIpsecaggregateMemberArgs) ToSystemIpsecaggregateMemberOutput() SystemIpsecaggregateMemberOutput {
	return i.ToSystemIpsecaggregateMemberOutputWithContext(context.Background())
}

func (i SystemIpsecaggregateMemberArgs) ToSystemIpsecaggregateMemberOutputWithContext(ctx context.Context) SystemIpsecaggregateMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsecaggregateMemberOutput)
}

// SystemIpsecaggregateMemberArrayInput is an input type that accepts SystemIpsecaggregateMemberArray and SystemIpsecaggregateMemberArrayOutput values.
// You can construct a concrete instance of `SystemIpsecaggregateMemberArrayInput` via:
//
//	SystemIpsecaggregateMemberArray{ SystemIpsecaggregateMemberArgs{...} }
type SystemIpsecaggregateMemberArrayInput interface {
	pulumi.Input

	ToSystemIpsecaggregateMemberArrayOutput() SystemIpsecaggregateMemberArrayOutput
	ToSystemIpsecaggregateMemberArrayOutputWithContext(context.Context) SystemIpsecaggregateMemberArrayOutput
}

type SystemIpsecaggregateMemberArray []SystemIpsecaggregateMemberInput

func (SystemIpsecaggregateMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpsecaggregateMember)(nil)).Elem()
}

func (i SystemIpsecaggregateMemberArray) ToSystemIpsecaggregateMemberArrayOutput() SystemIpsecaggregateMemberArrayOutput {
	return i.ToSystemIpsecaggregateMemberArrayOutputWithContext(context.Background())
}

func (i SystemIpsecaggregateMemberArray) ToSystemIpsecaggregateMemberArrayOutputWithContext(ctx context.Context) SystemIpsecaggregateMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsecaggregateMemberArrayOutput)
}

type SystemIpsecaggregateMemberOutput struct{ *pulumi.OutputState }

func (SystemIpsecaggregateMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpsecaggregateMember)(nil)).Elem()
}

func (o SystemIpsecaggregateMemberOutput) ToSystemIpsecaggregateMemberOutput() SystemIpsecaggregateMemberOutput {
	return o
}

func (o SystemIpsecaggregateMemberOutput) ToSystemIpsecaggregateMemberOutputWithContext(ctx context.Context) SystemIpsecaggregateMemberOutput {
	return o
}

// Tunnel name.
func (o SystemIpsecaggregateMemberOutput) TunnelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpsecaggregateMember) *string { return v.TunnelName }).(pulumi.StringPtrOutput)
}

type SystemIpsecaggregateMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemIpsecaggregateMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpsecaggregateMember)(nil)).Elem()
}

func (o SystemIpsecaggregateMemberArrayOutput) ToSystemIpsecaggregateMemberArrayOutput() SystemIpsecaggregateMemberArrayOutput {
	return o
}

func (o SystemIpsecaggregateMemberArrayOutput) ToSystemIpsecaggregateMemberArrayOutputWithContext(ctx context.Context) SystemIpsecaggregateMemberArrayOutput {
	return o
}

func (o SystemIpsecaggregateMemberArrayOutput) Index(i pulumi.IntInput) SystemIpsecaggregateMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpsecaggregateMember {
		return vs[0].([]SystemIpsecaggregateMember)[vs[1].(int)]
	}).(SystemIpsecaggregateMemberOutput)
}

type SystemLinkmonitorRoute struct {
	// IP and netmask (x.x.x.x/y).
	Subnet *string `pulumi:"subnet"`
}

// SystemLinkmonitorRouteInput is an input type that accepts SystemLinkmonitorRouteArgs and SystemLinkmonitorRouteOutput values.
// You can construct a concrete instance of `SystemLinkmonitorRouteInput` via:
//
//	SystemLinkmonitorRouteArgs{...}
type SystemLinkmonitorRouteInput interface {
	pulumi.Input

	ToSystemLinkmonitorRouteOutput() SystemLinkmonitorRouteOutput
	ToSystemLinkmonitorRouteOutputWithContext(context.Context) SystemLinkmonitorRouteOutput
}

type SystemLinkmonitorRouteArgs struct {
	// IP and netmask (x.x.x.x/y).
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (SystemLinkmonitorRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkmonitorRoute)(nil)).Elem()
}

func (i SystemLinkmonitorRouteArgs) ToSystemLinkmonitorRouteOutput() SystemLinkmonitorRouteOutput {
	return i.ToSystemLinkmonitorRouteOutputWithContext(context.Background())
}

func (i SystemLinkmonitorRouteArgs) ToSystemLinkmonitorRouteOutputWithContext(ctx context.Context) SystemLinkmonitorRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkmonitorRouteOutput)
}

// SystemLinkmonitorRouteArrayInput is an input type that accepts SystemLinkmonitorRouteArray and SystemLinkmonitorRouteArrayOutput values.
// You can construct a concrete instance of `SystemLinkmonitorRouteArrayInput` via:
//
//	SystemLinkmonitorRouteArray{ SystemLinkmonitorRouteArgs{...} }
type SystemLinkmonitorRouteArrayInput interface {
	pulumi.Input

	ToSystemLinkmonitorRouteArrayOutput() SystemLinkmonitorRouteArrayOutput
	ToSystemLinkmonitorRouteArrayOutputWithContext(context.Context) SystemLinkmonitorRouteArrayOutput
}

type SystemLinkmonitorRouteArray []SystemLinkmonitorRouteInput

func (SystemLinkmonitorRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkmonitorRoute)(nil)).Elem()
}

func (i SystemLinkmonitorRouteArray) ToSystemLinkmonitorRouteArrayOutput() SystemLinkmonitorRouteArrayOutput {
	return i.ToSystemLinkmonitorRouteArrayOutputWithContext(context.Background())
}

func (i SystemLinkmonitorRouteArray) ToSystemLinkmonitorRouteArrayOutputWithContext(ctx context.Context) SystemLinkmonitorRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkmonitorRouteArrayOutput)
}

type SystemLinkmonitorRouteOutput struct{ *pulumi.OutputState }

func (SystemLinkmonitorRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkmonitorRoute)(nil)).Elem()
}

func (o SystemLinkmonitorRouteOutput) ToSystemLinkmonitorRouteOutput() SystemLinkmonitorRouteOutput {
	return o
}

func (o SystemLinkmonitorRouteOutput) ToSystemLinkmonitorRouteOutputWithContext(ctx context.Context) SystemLinkmonitorRouteOutput {
	return o
}

// IP and netmask (x.x.x.x/y).
func (o SystemLinkmonitorRouteOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLinkmonitorRoute) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type SystemLinkmonitorRouteArrayOutput struct{ *pulumi.OutputState }

func (SystemLinkmonitorRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkmonitorRoute)(nil)).Elem()
}

func (o SystemLinkmonitorRouteArrayOutput) ToSystemLinkmonitorRouteArrayOutput() SystemLinkmonitorRouteArrayOutput {
	return o
}

func (o SystemLinkmonitorRouteArrayOutput) ToSystemLinkmonitorRouteArrayOutputWithContext(ctx context.Context) SystemLinkmonitorRouteArrayOutput {
	return o
}

func (o SystemLinkmonitorRouteArrayOutput) Index(i pulumi.IntInput) SystemLinkmonitorRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemLinkmonitorRoute {
		return vs[0].([]SystemLinkmonitorRoute)[vs[1].(int)]
	}).(SystemLinkmonitorRouteOutput)
}

type SystemLinkmonitorServer struct {
	// Server address.
	Address *string `pulumi:"address"`
}

// SystemLinkmonitorServerInput is an input type that accepts SystemLinkmonitorServerArgs and SystemLinkmonitorServerOutput values.
// You can construct a concrete instance of `SystemLinkmonitorServerInput` via:
//
//	SystemLinkmonitorServerArgs{...}
type SystemLinkmonitorServerInput interface {
	pulumi.Input

	ToSystemLinkmonitorServerOutput() SystemLinkmonitorServerOutput
	ToSystemLinkmonitorServerOutputWithContext(context.Context) SystemLinkmonitorServerOutput
}

type SystemLinkmonitorServerArgs struct {
	// Server address.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (SystemLinkmonitorServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkmonitorServer)(nil)).Elem()
}

func (i SystemLinkmonitorServerArgs) ToSystemLinkmonitorServerOutput() SystemLinkmonitorServerOutput {
	return i.ToSystemLinkmonitorServerOutputWithContext(context.Background())
}

func (i SystemLinkmonitorServerArgs) ToSystemLinkmonitorServerOutputWithContext(ctx context.Context) SystemLinkmonitorServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkmonitorServerOutput)
}

// SystemLinkmonitorServerArrayInput is an input type that accepts SystemLinkmonitorServerArray and SystemLinkmonitorServerArrayOutput values.
// You can construct a concrete instance of `SystemLinkmonitorServerArrayInput` via:
//
//	SystemLinkmonitorServerArray{ SystemLinkmonitorServerArgs{...} }
type SystemLinkmonitorServerArrayInput interface {
	pulumi.Input

	ToSystemLinkmonitorServerArrayOutput() SystemLinkmonitorServerArrayOutput
	ToSystemLinkmonitorServerArrayOutputWithContext(context.Context) SystemLinkmonitorServerArrayOutput
}

type SystemLinkmonitorServerArray []SystemLinkmonitorServerInput

func (SystemLinkmonitorServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkmonitorServer)(nil)).Elem()
}

func (i SystemLinkmonitorServerArray) ToSystemLinkmonitorServerArrayOutput() SystemLinkmonitorServerArrayOutput {
	return i.ToSystemLinkmonitorServerArrayOutputWithContext(context.Background())
}

func (i SystemLinkmonitorServerArray) ToSystemLinkmonitorServerArrayOutputWithContext(ctx context.Context) SystemLinkmonitorServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkmonitorServerArrayOutput)
}

type SystemLinkmonitorServerOutput struct{ *pulumi.OutputState }

func (SystemLinkmonitorServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkmonitorServer)(nil)).Elem()
}

func (o SystemLinkmonitorServerOutput) ToSystemLinkmonitorServerOutput() SystemLinkmonitorServerOutput {
	return o
}

func (o SystemLinkmonitorServerOutput) ToSystemLinkmonitorServerOutputWithContext(ctx context.Context) SystemLinkmonitorServerOutput {
	return o
}

// Server address.
func (o SystemLinkmonitorServerOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLinkmonitorServer) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type SystemLinkmonitorServerArrayOutput struct{ *pulumi.OutputState }

func (SystemLinkmonitorServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkmonitorServer)(nil)).Elem()
}

func (o SystemLinkmonitorServerArrayOutput) ToSystemLinkmonitorServerArrayOutput() SystemLinkmonitorServerArrayOutput {
	return o
}

func (o SystemLinkmonitorServerArrayOutput) ToSystemLinkmonitorServerArrayOutputWithContext(ctx context.Context) SystemLinkmonitorServerArrayOutput {
	return o
}

func (o SystemLinkmonitorServerArrayOutput) Index(i pulumi.IntInput) SystemLinkmonitorServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemLinkmonitorServer {
		return vs[0].([]SystemLinkmonitorServer)[vs[1].(int)]
	}).(SystemLinkmonitorServerOutput)
}

type SystemLinkmonitorServerList struct {
	// IP address of the server to be monitored.
	Dst *string `pulumi:"dst"`
	// Server ID.
	Id *int `pulumi:"id"`
	// Port number of the traffic to be used to monitor the server.
	Port *int `pulumi:"port"`
	// Protocols used to monitor the server. Valid values: `ping`, `tcp-echo`, `udp-echo`, `http`, `twamp`.
	Protocol *string `pulumi:"protocol"`
	// Weight of the monitor to this dst (0 - 255).
	Weight *int `pulumi:"weight"`
}

// SystemLinkmonitorServerListInput is an input type that accepts SystemLinkmonitorServerListArgs and SystemLinkmonitorServerListOutput values.
// You can construct a concrete instance of `SystemLinkmonitorServerListInput` via:
//
//	SystemLinkmonitorServerListArgs{...}
type SystemLinkmonitorServerListInput interface {
	pulumi.Input

	ToSystemLinkmonitorServerListOutput() SystemLinkmonitorServerListOutput
	ToSystemLinkmonitorServerListOutputWithContext(context.Context) SystemLinkmonitorServerListOutput
}

type SystemLinkmonitorServerListArgs struct {
	// IP address of the server to be monitored.
	Dst pulumi.StringPtrInput `pulumi:"dst"`
	// Server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Port number of the traffic to be used to monitor the server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocols used to monitor the server. Valid values: `ping`, `tcp-echo`, `udp-echo`, `http`, `twamp`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Weight of the monitor to this dst (0 - 255).
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (SystemLinkmonitorServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkmonitorServerList)(nil)).Elem()
}

func (i SystemLinkmonitorServerListArgs) ToSystemLinkmonitorServerListOutput() SystemLinkmonitorServerListOutput {
	return i.ToSystemLinkmonitorServerListOutputWithContext(context.Background())
}

func (i SystemLinkmonitorServerListArgs) ToSystemLinkmonitorServerListOutputWithContext(ctx context.Context) SystemLinkmonitorServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkmonitorServerListOutput)
}

// SystemLinkmonitorServerListArrayInput is an input type that accepts SystemLinkmonitorServerListArray and SystemLinkmonitorServerListArrayOutput values.
// You can construct a concrete instance of `SystemLinkmonitorServerListArrayInput` via:
//
//	SystemLinkmonitorServerListArray{ SystemLinkmonitorServerListArgs{...} }
type SystemLinkmonitorServerListArrayInput interface {
	pulumi.Input

	ToSystemLinkmonitorServerListArrayOutput() SystemLinkmonitorServerListArrayOutput
	ToSystemLinkmonitorServerListArrayOutputWithContext(context.Context) SystemLinkmonitorServerListArrayOutput
}

type SystemLinkmonitorServerListArray []SystemLinkmonitorServerListInput

func (SystemLinkmonitorServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkmonitorServerList)(nil)).Elem()
}

func (i SystemLinkmonitorServerListArray) ToSystemLinkmonitorServerListArrayOutput() SystemLinkmonitorServerListArrayOutput {
	return i.ToSystemLinkmonitorServerListArrayOutputWithContext(context.Background())
}

func (i SystemLinkmonitorServerListArray) ToSystemLinkmonitorServerListArrayOutputWithContext(ctx context.Context) SystemLinkmonitorServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkmonitorServerListArrayOutput)
}

type SystemLinkmonitorServerListOutput struct{ *pulumi.OutputState }

func (SystemLinkmonitorServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkmonitorServerList)(nil)).Elem()
}

func (o SystemLinkmonitorServerListOutput) ToSystemLinkmonitorServerListOutput() SystemLinkmonitorServerListOutput {
	return o
}

func (o SystemLinkmonitorServerListOutput) ToSystemLinkmonitorServerListOutputWithContext(ctx context.Context) SystemLinkmonitorServerListOutput {
	return o
}

// IP address of the server to be monitored.
func (o SystemLinkmonitorServerListOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLinkmonitorServerList) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

// Server ID.
func (o SystemLinkmonitorServerListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLinkmonitorServerList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Port number of the traffic to be used to monitor the server.
func (o SystemLinkmonitorServerListOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLinkmonitorServerList) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocols used to monitor the server. Valid values: `ping`, `tcp-echo`, `udp-echo`, `http`, `twamp`.
func (o SystemLinkmonitorServerListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLinkmonitorServerList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Weight of the monitor to this dst (0 - 255).
func (o SystemLinkmonitorServerListOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLinkmonitorServerList) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SystemLinkmonitorServerListArrayOutput struct{ *pulumi.OutputState }

func (SystemLinkmonitorServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkmonitorServerList)(nil)).Elem()
}

func (o SystemLinkmonitorServerListArrayOutput) ToSystemLinkmonitorServerListArrayOutput() SystemLinkmonitorServerListArrayOutput {
	return o
}

func (o SystemLinkmonitorServerListArrayOutput) ToSystemLinkmonitorServerListArrayOutputWithContext(ctx context.Context) SystemLinkmonitorServerListArrayOutput {
	return o
}

func (o SystemLinkmonitorServerListArrayOutput) Index(i pulumi.IntInput) SystemLinkmonitorServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemLinkmonitorServerList {
		return vs[0].([]SystemLinkmonitorServerList)[vs[1].(int)]
	}).(SystemLinkmonitorServerListOutput)
}

type SystemMobiletunnelNetwork struct {
	// Network entry ID.
	Id *int `pulumi:"id"`
	// Select the associated interface name from available options.
	Interface *string `pulumi:"interface"`
	// Class IP and Netmask with correction (Format:xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx or xxx.xxx.xxx.xxx/x).
	Prefix *string `pulumi:"prefix"`
}

// SystemMobiletunnelNetworkInput is an input type that accepts SystemMobiletunnelNetworkArgs and SystemMobiletunnelNetworkOutput values.
// You can construct a concrete instance of `SystemMobiletunnelNetworkInput` via:
//
//	SystemMobiletunnelNetworkArgs{...}
type SystemMobiletunnelNetworkInput interface {
	pulumi.Input

	ToSystemMobiletunnelNetworkOutput() SystemMobiletunnelNetworkOutput
	ToSystemMobiletunnelNetworkOutputWithContext(context.Context) SystemMobiletunnelNetworkOutput
}

type SystemMobiletunnelNetworkArgs struct {
	// Network entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Select the associated interface name from available options.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Class IP and Netmask with correction (Format:xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx or xxx.xxx.xxx.xxx/x).
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (SystemMobiletunnelNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemMobiletunnelNetwork)(nil)).Elem()
}

func (i SystemMobiletunnelNetworkArgs) ToSystemMobiletunnelNetworkOutput() SystemMobiletunnelNetworkOutput {
	return i.ToSystemMobiletunnelNetworkOutputWithContext(context.Background())
}

func (i SystemMobiletunnelNetworkArgs) ToSystemMobiletunnelNetworkOutputWithContext(ctx context.Context) SystemMobiletunnelNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemMobiletunnelNetworkOutput)
}

// SystemMobiletunnelNetworkArrayInput is an input type that accepts SystemMobiletunnelNetworkArray and SystemMobiletunnelNetworkArrayOutput values.
// You can construct a concrete instance of `SystemMobiletunnelNetworkArrayInput` via:
//
//	SystemMobiletunnelNetworkArray{ SystemMobiletunnelNetworkArgs{...} }
type SystemMobiletunnelNetworkArrayInput interface {
	pulumi.Input

	ToSystemMobiletunnelNetworkArrayOutput() SystemMobiletunnelNetworkArrayOutput
	ToSystemMobiletunnelNetworkArrayOutputWithContext(context.Context) SystemMobiletunnelNetworkArrayOutput
}

type SystemMobiletunnelNetworkArray []SystemMobiletunnelNetworkInput

func (SystemMobiletunnelNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemMobiletunnelNetwork)(nil)).Elem()
}

func (i SystemMobiletunnelNetworkArray) ToSystemMobiletunnelNetworkArrayOutput() SystemMobiletunnelNetworkArrayOutput {
	return i.ToSystemMobiletunnelNetworkArrayOutputWithContext(context.Background())
}

func (i SystemMobiletunnelNetworkArray) ToSystemMobiletunnelNetworkArrayOutputWithContext(ctx context.Context) SystemMobiletunnelNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemMobiletunnelNetworkArrayOutput)
}

type SystemMobiletunnelNetworkOutput struct{ *pulumi.OutputState }

func (SystemMobiletunnelNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemMobiletunnelNetwork)(nil)).Elem()
}

func (o SystemMobiletunnelNetworkOutput) ToSystemMobiletunnelNetworkOutput() SystemMobiletunnelNetworkOutput {
	return o
}

func (o SystemMobiletunnelNetworkOutput) ToSystemMobiletunnelNetworkOutputWithContext(ctx context.Context) SystemMobiletunnelNetworkOutput {
	return o
}

// Network entry ID.
func (o SystemMobiletunnelNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemMobiletunnelNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Select the associated interface name from available options.
func (o SystemMobiletunnelNetworkOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemMobiletunnelNetwork) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Class IP and Netmask with correction (Format:xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx or xxx.xxx.xxx.xxx/x).
func (o SystemMobiletunnelNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemMobiletunnelNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type SystemMobiletunnelNetworkArrayOutput struct{ *pulumi.OutputState }

func (SystemMobiletunnelNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemMobiletunnelNetwork)(nil)).Elem()
}

func (o SystemMobiletunnelNetworkArrayOutput) ToSystemMobiletunnelNetworkArrayOutput() SystemMobiletunnelNetworkArrayOutput {
	return o
}

func (o SystemMobiletunnelNetworkArrayOutput) ToSystemMobiletunnelNetworkArrayOutputWithContext(ctx context.Context) SystemMobiletunnelNetworkArrayOutput {
	return o
}

func (o SystemMobiletunnelNetworkArrayOutput) Index(i pulumi.IntInput) SystemMobiletunnelNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemMobiletunnelNetwork {
		return vs[0].([]SystemMobiletunnelNetwork)[vs[1].(int)]
	}).(SystemMobiletunnelNetworkOutput)
}

type SystemNat64SecondaryPrefix struct {
	// NAT64 prefix name.
	Name *string `pulumi:"name"`
	// NAT64 prefix.
	Nat64Prefix *string `pulumi:"nat64Prefix"`
}

// SystemNat64SecondaryPrefixInput is an input type that accepts SystemNat64SecondaryPrefixArgs and SystemNat64SecondaryPrefixOutput values.
// You can construct a concrete instance of `SystemNat64SecondaryPrefixInput` via:
//
//	SystemNat64SecondaryPrefixArgs{...}
type SystemNat64SecondaryPrefixInput interface {
	pulumi.Input

	ToSystemNat64SecondaryPrefixOutput() SystemNat64SecondaryPrefixOutput
	ToSystemNat64SecondaryPrefixOutputWithContext(context.Context) SystemNat64SecondaryPrefixOutput
}

type SystemNat64SecondaryPrefixArgs struct {
	// NAT64 prefix name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// NAT64 prefix.
	Nat64Prefix pulumi.StringPtrInput `pulumi:"nat64Prefix"`
}

func (SystemNat64SecondaryPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNat64SecondaryPrefix)(nil)).Elem()
}

func (i SystemNat64SecondaryPrefixArgs) ToSystemNat64SecondaryPrefixOutput() SystemNat64SecondaryPrefixOutput {
	return i.ToSystemNat64SecondaryPrefixOutputWithContext(context.Background())
}

func (i SystemNat64SecondaryPrefixArgs) ToSystemNat64SecondaryPrefixOutputWithContext(ctx context.Context) SystemNat64SecondaryPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNat64SecondaryPrefixOutput)
}

// SystemNat64SecondaryPrefixArrayInput is an input type that accepts SystemNat64SecondaryPrefixArray and SystemNat64SecondaryPrefixArrayOutput values.
// You can construct a concrete instance of `SystemNat64SecondaryPrefixArrayInput` via:
//
//	SystemNat64SecondaryPrefixArray{ SystemNat64SecondaryPrefixArgs{...} }
type SystemNat64SecondaryPrefixArrayInput interface {
	pulumi.Input

	ToSystemNat64SecondaryPrefixArrayOutput() SystemNat64SecondaryPrefixArrayOutput
	ToSystemNat64SecondaryPrefixArrayOutputWithContext(context.Context) SystemNat64SecondaryPrefixArrayOutput
}

type SystemNat64SecondaryPrefixArray []SystemNat64SecondaryPrefixInput

func (SystemNat64SecondaryPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNat64SecondaryPrefix)(nil)).Elem()
}

func (i SystemNat64SecondaryPrefixArray) ToSystemNat64SecondaryPrefixArrayOutput() SystemNat64SecondaryPrefixArrayOutput {
	return i.ToSystemNat64SecondaryPrefixArrayOutputWithContext(context.Background())
}

func (i SystemNat64SecondaryPrefixArray) ToSystemNat64SecondaryPrefixArrayOutputWithContext(ctx context.Context) SystemNat64SecondaryPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNat64SecondaryPrefixArrayOutput)
}

type SystemNat64SecondaryPrefixOutput struct{ *pulumi.OutputState }

func (SystemNat64SecondaryPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNat64SecondaryPrefix)(nil)).Elem()
}

func (o SystemNat64SecondaryPrefixOutput) ToSystemNat64SecondaryPrefixOutput() SystemNat64SecondaryPrefixOutput {
	return o
}

func (o SystemNat64SecondaryPrefixOutput) ToSystemNat64SecondaryPrefixOutputWithContext(ctx context.Context) SystemNat64SecondaryPrefixOutput {
	return o
}

// NAT64 prefix name.
func (o SystemNat64SecondaryPrefixOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNat64SecondaryPrefix) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// NAT64 prefix.
func (o SystemNat64SecondaryPrefixOutput) Nat64Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNat64SecondaryPrefix) *string { return v.Nat64Prefix }).(pulumi.StringPtrOutput)
}

type SystemNat64SecondaryPrefixArrayOutput struct{ *pulumi.OutputState }

func (SystemNat64SecondaryPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNat64SecondaryPrefix)(nil)).Elem()
}

func (o SystemNat64SecondaryPrefixArrayOutput) ToSystemNat64SecondaryPrefixArrayOutput() SystemNat64SecondaryPrefixArrayOutput {
	return o
}

func (o SystemNat64SecondaryPrefixArrayOutput) ToSystemNat64SecondaryPrefixArrayOutputWithContext(ctx context.Context) SystemNat64SecondaryPrefixArrayOutput {
	return o
}

func (o SystemNat64SecondaryPrefixArrayOutput) Index(i pulumi.IntInput) SystemNat64SecondaryPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemNat64SecondaryPrefix {
		return vs[0].([]SystemNat64SecondaryPrefix)[vs[1].(int)]
	}).(SystemNat64SecondaryPrefixOutput)
}

type SystemNdproxyMember struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemNdproxyMemberInput is an input type that accepts SystemNdproxyMemberArgs and SystemNdproxyMemberOutput values.
// You can construct a concrete instance of `SystemNdproxyMemberInput` via:
//
//	SystemNdproxyMemberArgs{...}
type SystemNdproxyMemberInput interface {
	pulumi.Input

	ToSystemNdproxyMemberOutput() SystemNdproxyMemberOutput
	ToSystemNdproxyMemberOutputWithContext(context.Context) SystemNdproxyMemberOutput
}

type SystemNdproxyMemberArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemNdproxyMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNdproxyMember)(nil)).Elem()
}

func (i SystemNdproxyMemberArgs) ToSystemNdproxyMemberOutput() SystemNdproxyMemberOutput {
	return i.ToSystemNdproxyMemberOutputWithContext(context.Background())
}

func (i SystemNdproxyMemberArgs) ToSystemNdproxyMemberOutputWithContext(ctx context.Context) SystemNdproxyMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNdproxyMemberOutput)
}

// SystemNdproxyMemberArrayInput is an input type that accepts SystemNdproxyMemberArray and SystemNdproxyMemberArrayOutput values.
// You can construct a concrete instance of `SystemNdproxyMemberArrayInput` via:
//
//	SystemNdproxyMemberArray{ SystemNdproxyMemberArgs{...} }
type SystemNdproxyMemberArrayInput interface {
	pulumi.Input

	ToSystemNdproxyMemberArrayOutput() SystemNdproxyMemberArrayOutput
	ToSystemNdproxyMemberArrayOutputWithContext(context.Context) SystemNdproxyMemberArrayOutput
}

type SystemNdproxyMemberArray []SystemNdproxyMemberInput

func (SystemNdproxyMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNdproxyMember)(nil)).Elem()
}

func (i SystemNdproxyMemberArray) ToSystemNdproxyMemberArrayOutput() SystemNdproxyMemberArrayOutput {
	return i.ToSystemNdproxyMemberArrayOutputWithContext(context.Background())
}

func (i SystemNdproxyMemberArray) ToSystemNdproxyMemberArrayOutputWithContext(ctx context.Context) SystemNdproxyMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNdproxyMemberArrayOutput)
}

type SystemNdproxyMemberOutput struct{ *pulumi.OutputState }

func (SystemNdproxyMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNdproxyMember)(nil)).Elem()
}

func (o SystemNdproxyMemberOutput) ToSystemNdproxyMemberOutput() SystemNdproxyMemberOutput {
	return o
}

func (o SystemNdproxyMemberOutput) ToSystemNdproxyMemberOutputWithContext(ctx context.Context) SystemNdproxyMemberOutput {
	return o
}

// Interface name.
func (o SystemNdproxyMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNdproxyMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemNdproxyMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemNdproxyMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNdproxyMember)(nil)).Elem()
}

func (o SystemNdproxyMemberArrayOutput) ToSystemNdproxyMemberArrayOutput() SystemNdproxyMemberArrayOutput {
	return o
}

func (o SystemNdproxyMemberArrayOutput) ToSystemNdproxyMemberArrayOutputWithContext(ctx context.Context) SystemNdproxyMemberArrayOutput {
	return o
}

func (o SystemNdproxyMemberArrayOutput) Index(i pulumi.IntInput) SystemNdproxyMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemNdproxyMember {
		return vs[0].([]SystemNdproxyMember)[vs[1].(int)]
	}).(SystemNdproxyMemberOutput)
}

type SystemNpuPriorityProtocol struct {
	// Enable/disable NPU BFD priority protocol. Valid values: `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Enable/disable NPU BGP priority protocol. Valid values: `enable`, `disable`.
	Bgp *string `pulumi:"bgp"`
	// Enable/disable NPU SLBC priority protocol. Valid values: `enable`, `disable`.
	Slbc *string `pulumi:"slbc"`
}

// SystemNpuPriorityProtocolInput is an input type that accepts SystemNpuPriorityProtocolArgs and SystemNpuPriorityProtocolOutput values.
// You can construct a concrete instance of `SystemNpuPriorityProtocolInput` via:
//
//	SystemNpuPriorityProtocolArgs{...}
type SystemNpuPriorityProtocolInput interface {
	pulumi.Input

	ToSystemNpuPriorityProtocolOutput() SystemNpuPriorityProtocolOutput
	ToSystemNpuPriorityProtocolOutputWithContext(context.Context) SystemNpuPriorityProtocolOutput
}

type SystemNpuPriorityProtocolArgs struct {
	// Enable/disable NPU BFD priority protocol. Valid values: `enable`, `disable`.
	Bfd pulumi.StringPtrInput `pulumi:"bfd"`
	// Enable/disable NPU BGP priority protocol. Valid values: `enable`, `disable`.
	Bgp pulumi.StringPtrInput `pulumi:"bgp"`
	// Enable/disable NPU SLBC priority protocol. Valid values: `enable`, `disable`.
	Slbc pulumi.StringPtrInput `pulumi:"slbc"`
}

func (SystemNpuPriorityProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNpuPriorityProtocol)(nil)).Elem()
}

func (i SystemNpuPriorityProtocolArgs) ToSystemNpuPriorityProtocolOutput() SystemNpuPriorityProtocolOutput {
	return i.ToSystemNpuPriorityProtocolOutputWithContext(context.Background())
}

func (i SystemNpuPriorityProtocolArgs) ToSystemNpuPriorityProtocolOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNpuPriorityProtocolOutput)
}

func (i SystemNpuPriorityProtocolArgs) ToSystemNpuPriorityProtocolPtrOutput() SystemNpuPriorityProtocolPtrOutput {
	return i.ToSystemNpuPriorityProtocolPtrOutputWithContext(context.Background())
}

func (i SystemNpuPriorityProtocolArgs) ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNpuPriorityProtocolOutput).ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx)
}

// SystemNpuPriorityProtocolPtrInput is an input type that accepts SystemNpuPriorityProtocolArgs, SystemNpuPriorityProtocolPtr and SystemNpuPriorityProtocolPtrOutput values.
// You can construct a concrete instance of `SystemNpuPriorityProtocolPtrInput` via:
//
//	        SystemNpuPriorityProtocolArgs{...}
//
//	or:
//
//	        nil
type SystemNpuPriorityProtocolPtrInput interface {
	pulumi.Input

	ToSystemNpuPriorityProtocolPtrOutput() SystemNpuPriorityProtocolPtrOutput
	ToSystemNpuPriorityProtocolPtrOutputWithContext(context.Context) SystemNpuPriorityProtocolPtrOutput
}

type systemNpuPriorityProtocolPtrType SystemNpuPriorityProtocolArgs

func SystemNpuPriorityProtocolPtr(v *SystemNpuPriorityProtocolArgs) SystemNpuPriorityProtocolPtrInput {
	return (*systemNpuPriorityProtocolPtrType)(v)
}

func (*systemNpuPriorityProtocolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNpuPriorityProtocol)(nil)).Elem()
}

func (i *systemNpuPriorityProtocolPtrType) ToSystemNpuPriorityProtocolPtrOutput() SystemNpuPriorityProtocolPtrOutput {
	return i.ToSystemNpuPriorityProtocolPtrOutputWithContext(context.Background())
}

func (i *systemNpuPriorityProtocolPtrType) ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNpuPriorityProtocolPtrOutput)
}

type SystemNpuPriorityProtocolOutput struct{ *pulumi.OutputState }

func (SystemNpuPriorityProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNpuPriorityProtocol)(nil)).Elem()
}

func (o SystemNpuPriorityProtocolOutput) ToSystemNpuPriorityProtocolOutput() SystemNpuPriorityProtocolOutput {
	return o
}

func (o SystemNpuPriorityProtocolOutput) ToSystemNpuPriorityProtocolOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolOutput {
	return o
}

func (o SystemNpuPriorityProtocolOutput) ToSystemNpuPriorityProtocolPtrOutput() SystemNpuPriorityProtocolPtrOutput {
	return o.ToSystemNpuPriorityProtocolPtrOutputWithContext(context.Background())
}

func (o SystemNpuPriorityProtocolOutput) ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemNpuPriorityProtocol) *SystemNpuPriorityProtocol {
		return &v
	}).(SystemNpuPriorityProtocolPtrOutput)
}

// Enable/disable NPU BFD priority protocol. Valid values: `enable`, `disable`.
func (o SystemNpuPriorityProtocolOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNpuPriorityProtocol) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

// Enable/disable NPU BGP priority protocol. Valid values: `enable`, `disable`.
func (o SystemNpuPriorityProtocolOutput) Bgp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNpuPriorityProtocol) *string { return v.Bgp }).(pulumi.StringPtrOutput)
}

// Enable/disable NPU SLBC priority protocol. Valid values: `enable`, `disable`.
func (o SystemNpuPriorityProtocolOutput) Slbc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNpuPriorityProtocol) *string { return v.Slbc }).(pulumi.StringPtrOutput)
}

type SystemNpuPriorityProtocolPtrOutput struct{ *pulumi.OutputState }

func (SystemNpuPriorityProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNpuPriorityProtocol)(nil)).Elem()
}

func (o SystemNpuPriorityProtocolPtrOutput) ToSystemNpuPriorityProtocolPtrOutput() SystemNpuPriorityProtocolPtrOutput {
	return o
}

func (o SystemNpuPriorityProtocolPtrOutput) ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolPtrOutput {
	return o
}

func (o SystemNpuPriorityProtocolPtrOutput) Elem() SystemNpuPriorityProtocolOutput {
	return o.ApplyT(func(v *SystemNpuPriorityProtocol) SystemNpuPriorityProtocol {
		if v != nil {
			return *v
		}
		var ret SystemNpuPriorityProtocol
		return ret
	}).(SystemNpuPriorityProtocolOutput)
}

// Enable/disable NPU BFD priority protocol. Valid values: `enable`, `disable`.
func (o SystemNpuPriorityProtocolPtrOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNpuPriorityProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Bfd
	}).(pulumi.StringPtrOutput)
}

// Enable/disable NPU BGP priority protocol. Valid values: `enable`, `disable`.
func (o SystemNpuPriorityProtocolPtrOutput) Bgp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNpuPriorityProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Bgp
	}).(pulumi.StringPtrOutput)
}

// Enable/disable NPU SLBC priority protocol. Valid values: `enable`, `disable`.
func (o SystemNpuPriorityProtocolPtrOutput) Slbc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNpuPriorityProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Slbc
	}).(pulumi.StringPtrOutput)
}

type SystemNtpInterface struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemNtpInterfaceInput is an input type that accepts SystemNtpInterfaceArgs and SystemNtpInterfaceOutput values.
// You can construct a concrete instance of `SystemNtpInterfaceInput` via:
//
//	SystemNtpInterfaceArgs{...}
type SystemNtpInterfaceInput interface {
	pulumi.Input

	ToSystemNtpInterfaceOutput() SystemNtpInterfaceOutput
	ToSystemNtpInterfaceOutputWithContext(context.Context) SystemNtpInterfaceOutput
}

type SystemNtpInterfaceArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemNtpInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNtpInterface)(nil)).Elem()
}

func (i SystemNtpInterfaceArgs) ToSystemNtpInterfaceOutput() SystemNtpInterfaceOutput {
	return i.ToSystemNtpInterfaceOutputWithContext(context.Background())
}

func (i SystemNtpInterfaceArgs) ToSystemNtpInterfaceOutputWithContext(ctx context.Context) SystemNtpInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpInterfaceOutput)
}

// SystemNtpInterfaceArrayInput is an input type that accepts SystemNtpInterfaceArray and SystemNtpInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemNtpInterfaceArrayInput` via:
//
//	SystemNtpInterfaceArray{ SystemNtpInterfaceArgs{...} }
type SystemNtpInterfaceArrayInput interface {
	pulumi.Input

	ToSystemNtpInterfaceArrayOutput() SystemNtpInterfaceArrayOutput
	ToSystemNtpInterfaceArrayOutputWithContext(context.Context) SystemNtpInterfaceArrayOutput
}

type SystemNtpInterfaceArray []SystemNtpInterfaceInput

func (SystemNtpInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNtpInterface)(nil)).Elem()
}

func (i SystemNtpInterfaceArray) ToSystemNtpInterfaceArrayOutput() SystemNtpInterfaceArrayOutput {
	return i.ToSystemNtpInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemNtpInterfaceArray) ToSystemNtpInterfaceArrayOutputWithContext(ctx context.Context) SystemNtpInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpInterfaceArrayOutput)
}

type SystemNtpInterfaceOutput struct{ *pulumi.OutputState }

func (SystemNtpInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNtpInterface)(nil)).Elem()
}

func (o SystemNtpInterfaceOutput) ToSystemNtpInterfaceOutput() SystemNtpInterfaceOutput {
	return o
}

func (o SystemNtpInterfaceOutput) ToSystemNtpInterfaceOutputWithContext(ctx context.Context) SystemNtpInterfaceOutput {
	return o
}

// Interface name.
func (o SystemNtpInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemNtpInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemNtpInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNtpInterface)(nil)).Elem()
}

func (o SystemNtpInterfaceArrayOutput) ToSystemNtpInterfaceArrayOutput() SystemNtpInterfaceArrayOutput {
	return o
}

func (o SystemNtpInterfaceArrayOutput) ToSystemNtpInterfaceArrayOutputWithContext(ctx context.Context) SystemNtpInterfaceArrayOutput {
	return o
}

func (o SystemNtpInterfaceArrayOutput) Index(i pulumi.IntInput) SystemNtpInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemNtpInterface {
		return vs[0].([]SystemNtpInterface)[vs[1].(int)]
	}).(SystemNtpInterfaceOutput)
}

type SystemNtpNtpserver struct {
	// Enable/disable MD5/SHA1 authentication. Valid values: `enable`, `disable`.
	Authentication *string `pulumi:"authentication"`
	// NTP server ID.
	Id *int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Key for MD5/SHA1 authentication.
	Key *string `pulumi:"key"`
	// Key ID for authentication.
	KeyId *int `pulumi:"keyId"`
	// Enable to use NTPv3 instead of NTPv4. Valid values: `enable`, `disable`.
	Ntpv3 *string `pulumi:"ntpv3"`
	// IP address or hostname of the NTP Server.
	Server *string `pulumi:"server"`
}

// SystemNtpNtpserverInput is an input type that accepts SystemNtpNtpserverArgs and SystemNtpNtpserverOutput values.
// You can construct a concrete instance of `SystemNtpNtpserverInput` via:
//
//	SystemNtpNtpserverArgs{...}
type SystemNtpNtpserverInput interface {
	pulumi.Input

	ToSystemNtpNtpserverOutput() SystemNtpNtpserverOutput
	ToSystemNtpNtpserverOutputWithContext(context.Context) SystemNtpNtpserverOutput
}

type SystemNtpNtpserverArgs struct {
	// Enable/disable MD5/SHA1 authentication. Valid values: `enable`, `disable`.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// NTP server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput `pulumi:"interfaceSelectMethod"`
	// Key for MD5/SHA1 authentication.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Key ID for authentication.
	KeyId pulumi.IntPtrInput `pulumi:"keyId"`
	// Enable to use NTPv3 instead of NTPv4. Valid values: `enable`, `disable`.
	Ntpv3 pulumi.StringPtrInput `pulumi:"ntpv3"`
	// IP address or hostname of the NTP Server.
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (SystemNtpNtpserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNtpNtpserver)(nil)).Elem()
}

func (i SystemNtpNtpserverArgs) ToSystemNtpNtpserverOutput() SystemNtpNtpserverOutput {
	return i.ToSystemNtpNtpserverOutputWithContext(context.Background())
}

func (i SystemNtpNtpserverArgs) ToSystemNtpNtpserverOutputWithContext(ctx context.Context) SystemNtpNtpserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpNtpserverOutput)
}

// SystemNtpNtpserverArrayInput is an input type that accepts SystemNtpNtpserverArray and SystemNtpNtpserverArrayOutput values.
// You can construct a concrete instance of `SystemNtpNtpserverArrayInput` via:
//
//	SystemNtpNtpserverArray{ SystemNtpNtpserverArgs{...} }
type SystemNtpNtpserverArrayInput interface {
	pulumi.Input

	ToSystemNtpNtpserverArrayOutput() SystemNtpNtpserverArrayOutput
	ToSystemNtpNtpserverArrayOutputWithContext(context.Context) SystemNtpNtpserverArrayOutput
}

type SystemNtpNtpserverArray []SystemNtpNtpserverInput

func (SystemNtpNtpserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNtpNtpserver)(nil)).Elem()
}

func (i SystemNtpNtpserverArray) ToSystemNtpNtpserverArrayOutput() SystemNtpNtpserverArrayOutput {
	return i.ToSystemNtpNtpserverArrayOutputWithContext(context.Background())
}

func (i SystemNtpNtpserverArray) ToSystemNtpNtpserverArrayOutputWithContext(ctx context.Context) SystemNtpNtpserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpNtpserverArrayOutput)
}

type SystemNtpNtpserverOutput struct{ *pulumi.OutputState }

func (SystemNtpNtpserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNtpNtpserver)(nil)).Elem()
}

func (o SystemNtpNtpserverOutput) ToSystemNtpNtpserverOutput() SystemNtpNtpserverOutput {
	return o
}

func (o SystemNtpNtpserverOutput) ToSystemNtpNtpserverOutputWithContext(ctx context.Context) SystemNtpNtpserverOutput {
	return o
}

// Enable/disable MD5/SHA1 authentication. Valid values: `enable`, `disable`.
func (o SystemNtpNtpserverOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// NTP server ID.
func (o SystemNtpNtpserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Specify outgoing interface to reach server.
func (o SystemNtpNtpserverOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o SystemNtpNtpserverOutput) InterfaceSelectMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.InterfaceSelectMethod }).(pulumi.StringPtrOutput)
}

// Key for MD5/SHA1 authentication.
func (o SystemNtpNtpserverOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Key ID for authentication.
func (o SystemNtpNtpserverOutput) KeyId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *int { return v.KeyId }).(pulumi.IntPtrOutput)
}

// Enable to use NTPv3 instead of NTPv4. Valid values: `enable`, `disable`.
func (o SystemNtpNtpserverOutput) Ntpv3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.Ntpv3 }).(pulumi.StringPtrOutput)
}

// IP address or hostname of the NTP Server.
func (o SystemNtpNtpserverOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type SystemNtpNtpserverArrayOutput struct{ *pulumi.OutputState }

func (SystemNtpNtpserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNtpNtpserver)(nil)).Elem()
}

func (o SystemNtpNtpserverArrayOutput) ToSystemNtpNtpserverArrayOutput() SystemNtpNtpserverArrayOutput {
	return o
}

func (o SystemNtpNtpserverArrayOutput) ToSystemNtpNtpserverArrayOutputWithContext(ctx context.Context) SystemNtpNtpserverArrayOutput {
	return o
}

func (o SystemNtpNtpserverArrayOutput) Index(i pulumi.IntInput) SystemNtpNtpserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemNtpNtpserver {
		return vs[0].([]SystemNtpNtpserver)[vs[1].(int)]
	}).(SystemNtpNtpserverOutput)
}

type SystemObjecttaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// SystemObjecttaggingTagInput is an input type that accepts SystemObjecttaggingTagArgs and SystemObjecttaggingTagOutput values.
// You can construct a concrete instance of `SystemObjecttaggingTagInput` via:
//
//	SystemObjecttaggingTagArgs{...}
type SystemObjecttaggingTagInput interface {
	pulumi.Input

	ToSystemObjecttaggingTagOutput() SystemObjecttaggingTagOutput
	ToSystemObjecttaggingTagOutputWithContext(context.Context) SystemObjecttaggingTagOutput
}

type SystemObjecttaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemObjecttaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemObjecttaggingTag)(nil)).Elem()
}

func (i SystemObjecttaggingTagArgs) ToSystemObjecttaggingTagOutput() SystemObjecttaggingTagOutput {
	return i.ToSystemObjecttaggingTagOutputWithContext(context.Background())
}

func (i SystemObjecttaggingTagArgs) ToSystemObjecttaggingTagOutputWithContext(ctx context.Context) SystemObjecttaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemObjecttaggingTagOutput)
}

// SystemObjecttaggingTagArrayInput is an input type that accepts SystemObjecttaggingTagArray and SystemObjecttaggingTagArrayOutput values.
// You can construct a concrete instance of `SystemObjecttaggingTagArrayInput` via:
//
//	SystemObjecttaggingTagArray{ SystemObjecttaggingTagArgs{...} }
type SystemObjecttaggingTagArrayInput interface {
	pulumi.Input

	ToSystemObjecttaggingTagArrayOutput() SystemObjecttaggingTagArrayOutput
	ToSystemObjecttaggingTagArrayOutputWithContext(context.Context) SystemObjecttaggingTagArrayOutput
}

type SystemObjecttaggingTagArray []SystemObjecttaggingTagInput

func (SystemObjecttaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemObjecttaggingTag)(nil)).Elem()
}

func (i SystemObjecttaggingTagArray) ToSystemObjecttaggingTagArrayOutput() SystemObjecttaggingTagArrayOutput {
	return i.ToSystemObjecttaggingTagArrayOutputWithContext(context.Background())
}

func (i SystemObjecttaggingTagArray) ToSystemObjecttaggingTagArrayOutputWithContext(ctx context.Context) SystemObjecttaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemObjecttaggingTagArrayOutput)
}

type SystemObjecttaggingTagOutput struct{ *pulumi.OutputState }

func (SystemObjecttaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemObjecttaggingTag)(nil)).Elem()
}

func (o SystemObjecttaggingTagOutput) ToSystemObjecttaggingTagOutput() SystemObjecttaggingTagOutput {
	return o
}

func (o SystemObjecttaggingTagOutput) ToSystemObjecttaggingTagOutputWithContext(ctx context.Context) SystemObjecttaggingTagOutput {
	return o
}

// Tag name.
func (o SystemObjecttaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemObjecttaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemObjecttaggingTagArrayOutput struct{ *pulumi.OutputState }

func (SystemObjecttaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemObjecttaggingTag)(nil)).Elem()
}

func (o SystemObjecttaggingTagArrayOutput) ToSystemObjecttaggingTagArrayOutput() SystemObjecttaggingTagArrayOutput {
	return o
}

func (o SystemObjecttaggingTagArrayOutput) ToSystemObjecttaggingTagArrayOutputWithContext(ctx context.Context) SystemObjecttaggingTagArrayOutput {
	return o
}

func (o SystemObjecttaggingTagArrayOutput) Index(i pulumi.IntInput) SystemObjecttaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemObjecttaggingTag {
		return vs[0].([]SystemObjecttaggingTag)[vs[1].(int)]
	}).(SystemObjecttaggingTagOutput)
}

type SystemPtpServerInterface struct {
	// End to end delay detection or peer to peer delay detection. Valid values: `E2E`, `P2P`.
	DelayMechanism *string `pulumi:"delayMechanism"`
	// ID.
	Id *int `pulumi:"id"`
	// Interface name.
	ServerInterfaceName *string `pulumi:"serverInterfaceName"`
}

// SystemPtpServerInterfaceInput is an input type that accepts SystemPtpServerInterfaceArgs and SystemPtpServerInterfaceOutput values.
// You can construct a concrete instance of `SystemPtpServerInterfaceInput` via:
//
//	SystemPtpServerInterfaceArgs{...}
type SystemPtpServerInterfaceInput interface {
	pulumi.Input

	ToSystemPtpServerInterfaceOutput() SystemPtpServerInterfaceOutput
	ToSystemPtpServerInterfaceOutputWithContext(context.Context) SystemPtpServerInterfaceOutput
}

type SystemPtpServerInterfaceArgs struct {
	// End to end delay detection or peer to peer delay detection. Valid values: `E2E`, `P2P`.
	DelayMechanism pulumi.StringPtrInput `pulumi:"delayMechanism"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Interface name.
	ServerInterfaceName pulumi.StringPtrInput `pulumi:"serverInterfaceName"`
}

func (SystemPtpServerInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPtpServerInterface)(nil)).Elem()
}

func (i SystemPtpServerInterfaceArgs) ToSystemPtpServerInterfaceOutput() SystemPtpServerInterfaceOutput {
	return i.ToSystemPtpServerInterfaceOutputWithContext(context.Background())
}

func (i SystemPtpServerInterfaceArgs) ToSystemPtpServerInterfaceOutputWithContext(ctx context.Context) SystemPtpServerInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPtpServerInterfaceOutput)
}

// SystemPtpServerInterfaceArrayInput is an input type that accepts SystemPtpServerInterfaceArray and SystemPtpServerInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemPtpServerInterfaceArrayInput` via:
//
//	SystemPtpServerInterfaceArray{ SystemPtpServerInterfaceArgs{...} }
type SystemPtpServerInterfaceArrayInput interface {
	pulumi.Input

	ToSystemPtpServerInterfaceArrayOutput() SystemPtpServerInterfaceArrayOutput
	ToSystemPtpServerInterfaceArrayOutputWithContext(context.Context) SystemPtpServerInterfaceArrayOutput
}

type SystemPtpServerInterfaceArray []SystemPtpServerInterfaceInput

func (SystemPtpServerInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPtpServerInterface)(nil)).Elem()
}

func (i SystemPtpServerInterfaceArray) ToSystemPtpServerInterfaceArrayOutput() SystemPtpServerInterfaceArrayOutput {
	return i.ToSystemPtpServerInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemPtpServerInterfaceArray) ToSystemPtpServerInterfaceArrayOutputWithContext(ctx context.Context) SystemPtpServerInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPtpServerInterfaceArrayOutput)
}

type SystemPtpServerInterfaceOutput struct{ *pulumi.OutputState }

func (SystemPtpServerInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPtpServerInterface)(nil)).Elem()
}

func (o SystemPtpServerInterfaceOutput) ToSystemPtpServerInterfaceOutput() SystemPtpServerInterfaceOutput {
	return o
}

func (o SystemPtpServerInterfaceOutput) ToSystemPtpServerInterfaceOutputWithContext(ctx context.Context) SystemPtpServerInterfaceOutput {
	return o
}

// End to end delay detection or peer to peer delay detection. Valid values: `E2E`, `P2P`.
func (o SystemPtpServerInterfaceOutput) DelayMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPtpServerInterface) *string { return v.DelayMechanism }).(pulumi.StringPtrOutput)
}

// ID.
func (o SystemPtpServerInterfaceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemPtpServerInterface) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o SystemPtpServerInterfaceOutput) ServerInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPtpServerInterface) *string { return v.ServerInterfaceName }).(pulumi.StringPtrOutput)
}

type SystemPtpServerInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemPtpServerInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPtpServerInterface)(nil)).Elem()
}

func (o SystemPtpServerInterfaceArrayOutput) ToSystemPtpServerInterfaceArrayOutput() SystemPtpServerInterfaceArrayOutput {
	return o
}

func (o SystemPtpServerInterfaceArrayOutput) ToSystemPtpServerInterfaceArrayOutputWithContext(ctx context.Context) SystemPtpServerInterfaceArrayOutput {
	return o
}

func (o SystemPtpServerInterfaceArrayOutput) Index(i pulumi.IntInput) SystemPtpServerInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemPtpServerInterface {
		return vs[0].([]SystemPtpServerInterface)[vs[1].(int)]
	}).(SystemPtpServerInterfaceOutput)
}

type SystemReplacemsggroupAdmin struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupAdminInput is an input type that accepts SystemReplacemsggroupAdminArgs and SystemReplacemsggroupAdminOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupAdminInput` via:
//
//	SystemReplacemsggroupAdminArgs{...}
type SystemReplacemsggroupAdminInput interface {
	pulumi.Input

	ToSystemReplacemsggroupAdminOutput() SystemReplacemsggroupAdminOutput
	ToSystemReplacemsggroupAdminOutputWithContext(context.Context) SystemReplacemsggroupAdminOutput
}

type SystemReplacemsggroupAdminArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupAdminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupAdmin)(nil)).Elem()
}

func (i SystemReplacemsggroupAdminArgs) ToSystemReplacemsggroupAdminOutput() SystemReplacemsggroupAdminOutput {
	return i.ToSystemReplacemsggroupAdminOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupAdminArgs) ToSystemReplacemsggroupAdminOutputWithContext(ctx context.Context) SystemReplacemsggroupAdminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupAdminOutput)
}

// SystemReplacemsggroupAdminArrayInput is an input type that accepts SystemReplacemsggroupAdminArray and SystemReplacemsggroupAdminArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupAdminArrayInput` via:
//
//	SystemReplacemsggroupAdminArray{ SystemReplacemsggroupAdminArgs{...} }
type SystemReplacemsggroupAdminArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupAdminArrayOutput() SystemReplacemsggroupAdminArrayOutput
	ToSystemReplacemsggroupAdminArrayOutputWithContext(context.Context) SystemReplacemsggroupAdminArrayOutput
}

type SystemReplacemsggroupAdminArray []SystemReplacemsggroupAdminInput

func (SystemReplacemsggroupAdminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupAdmin)(nil)).Elem()
}

func (i SystemReplacemsggroupAdminArray) ToSystemReplacemsggroupAdminArrayOutput() SystemReplacemsggroupAdminArrayOutput {
	return i.ToSystemReplacemsggroupAdminArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupAdminArray) ToSystemReplacemsggroupAdminArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupAdminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupAdminArrayOutput)
}

type SystemReplacemsggroupAdminOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupAdminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupAdmin)(nil)).Elem()
}

func (o SystemReplacemsggroupAdminOutput) ToSystemReplacemsggroupAdminOutput() SystemReplacemsggroupAdminOutput {
	return o
}

func (o SystemReplacemsggroupAdminOutput) ToSystemReplacemsggroupAdminOutputWithContext(ctx context.Context) SystemReplacemsggroupAdminOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupAdminOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAdmin) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupAdminOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAdmin) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupAdminOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAdmin) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupAdminOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAdmin) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupAdminArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupAdminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupAdmin)(nil)).Elem()
}

func (o SystemReplacemsggroupAdminArrayOutput) ToSystemReplacemsggroupAdminArrayOutput() SystemReplacemsggroupAdminArrayOutput {
	return o
}

func (o SystemReplacemsggroupAdminArrayOutput) ToSystemReplacemsggroupAdminArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupAdminArrayOutput {
	return o
}

func (o SystemReplacemsggroupAdminArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupAdminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupAdmin {
		return vs[0].([]SystemReplacemsggroupAdmin)[vs[1].(int)]
	}).(SystemReplacemsggroupAdminOutput)
}

type SystemReplacemsggroupAlertmail struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupAlertmailInput is an input type that accepts SystemReplacemsggroupAlertmailArgs and SystemReplacemsggroupAlertmailOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupAlertmailInput` via:
//
//	SystemReplacemsggroupAlertmailArgs{...}
type SystemReplacemsggroupAlertmailInput interface {
	pulumi.Input

	ToSystemReplacemsggroupAlertmailOutput() SystemReplacemsggroupAlertmailOutput
	ToSystemReplacemsggroupAlertmailOutputWithContext(context.Context) SystemReplacemsggroupAlertmailOutput
}

type SystemReplacemsggroupAlertmailArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupAlertmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupAlertmail)(nil)).Elem()
}

func (i SystemReplacemsggroupAlertmailArgs) ToSystemReplacemsggroupAlertmailOutput() SystemReplacemsggroupAlertmailOutput {
	return i.ToSystemReplacemsggroupAlertmailOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupAlertmailArgs) ToSystemReplacemsggroupAlertmailOutputWithContext(ctx context.Context) SystemReplacemsggroupAlertmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupAlertmailOutput)
}

// SystemReplacemsggroupAlertmailArrayInput is an input type that accepts SystemReplacemsggroupAlertmailArray and SystemReplacemsggroupAlertmailArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupAlertmailArrayInput` via:
//
//	SystemReplacemsggroupAlertmailArray{ SystemReplacemsggroupAlertmailArgs{...} }
type SystemReplacemsggroupAlertmailArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupAlertmailArrayOutput() SystemReplacemsggroupAlertmailArrayOutput
	ToSystemReplacemsggroupAlertmailArrayOutputWithContext(context.Context) SystemReplacemsggroupAlertmailArrayOutput
}

type SystemReplacemsggroupAlertmailArray []SystemReplacemsggroupAlertmailInput

func (SystemReplacemsggroupAlertmailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupAlertmail)(nil)).Elem()
}

func (i SystemReplacemsggroupAlertmailArray) ToSystemReplacemsggroupAlertmailArrayOutput() SystemReplacemsggroupAlertmailArrayOutput {
	return i.ToSystemReplacemsggroupAlertmailArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupAlertmailArray) ToSystemReplacemsggroupAlertmailArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupAlertmailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupAlertmailArrayOutput)
}

type SystemReplacemsggroupAlertmailOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupAlertmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupAlertmail)(nil)).Elem()
}

func (o SystemReplacemsggroupAlertmailOutput) ToSystemReplacemsggroupAlertmailOutput() SystemReplacemsggroupAlertmailOutput {
	return o
}

func (o SystemReplacemsggroupAlertmailOutput) ToSystemReplacemsggroupAlertmailOutputWithContext(ctx context.Context) SystemReplacemsggroupAlertmailOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupAlertmailOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAlertmail) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupAlertmailOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAlertmail) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupAlertmailOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAlertmail) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupAlertmailOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAlertmail) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupAlertmailArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupAlertmailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupAlertmail)(nil)).Elem()
}

func (o SystemReplacemsggroupAlertmailArrayOutput) ToSystemReplacemsggroupAlertmailArrayOutput() SystemReplacemsggroupAlertmailArrayOutput {
	return o
}

func (o SystemReplacemsggroupAlertmailArrayOutput) ToSystemReplacemsggroupAlertmailArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupAlertmailArrayOutput {
	return o
}

func (o SystemReplacemsggroupAlertmailArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupAlertmailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupAlertmail {
		return vs[0].([]SystemReplacemsggroupAlertmail)[vs[1].(int)]
	}).(SystemReplacemsggroupAlertmailOutput)
}

type SystemReplacemsggroupAuth struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupAuthInput is an input type that accepts SystemReplacemsggroupAuthArgs and SystemReplacemsggroupAuthOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupAuthInput` via:
//
//	SystemReplacemsggroupAuthArgs{...}
type SystemReplacemsggroupAuthInput interface {
	pulumi.Input

	ToSystemReplacemsggroupAuthOutput() SystemReplacemsggroupAuthOutput
	ToSystemReplacemsggroupAuthOutputWithContext(context.Context) SystemReplacemsggroupAuthOutput
}

type SystemReplacemsggroupAuthArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupAuth)(nil)).Elem()
}

func (i SystemReplacemsggroupAuthArgs) ToSystemReplacemsggroupAuthOutput() SystemReplacemsggroupAuthOutput {
	return i.ToSystemReplacemsggroupAuthOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupAuthArgs) ToSystemReplacemsggroupAuthOutputWithContext(ctx context.Context) SystemReplacemsggroupAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupAuthOutput)
}

// SystemReplacemsggroupAuthArrayInput is an input type that accepts SystemReplacemsggroupAuthArray and SystemReplacemsggroupAuthArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupAuthArrayInput` via:
//
//	SystemReplacemsggroupAuthArray{ SystemReplacemsggroupAuthArgs{...} }
type SystemReplacemsggroupAuthArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupAuthArrayOutput() SystemReplacemsggroupAuthArrayOutput
	ToSystemReplacemsggroupAuthArrayOutputWithContext(context.Context) SystemReplacemsggroupAuthArrayOutput
}

type SystemReplacemsggroupAuthArray []SystemReplacemsggroupAuthInput

func (SystemReplacemsggroupAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupAuth)(nil)).Elem()
}

func (i SystemReplacemsggroupAuthArray) ToSystemReplacemsggroupAuthArrayOutput() SystemReplacemsggroupAuthArrayOutput {
	return i.ToSystemReplacemsggroupAuthArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupAuthArray) ToSystemReplacemsggroupAuthArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupAuthArrayOutput)
}

type SystemReplacemsggroupAuthOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupAuth)(nil)).Elem()
}

func (o SystemReplacemsggroupAuthOutput) ToSystemReplacemsggroupAuthOutput() SystemReplacemsggroupAuthOutput {
	return o
}

func (o SystemReplacemsggroupAuthOutput) ToSystemReplacemsggroupAuthOutputWithContext(ctx context.Context) SystemReplacemsggroupAuthOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupAuthOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAuth) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupAuthOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAuth) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupAuthOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAuth) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupAuthOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAuth) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupAuthArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupAuth)(nil)).Elem()
}

func (o SystemReplacemsggroupAuthArrayOutput) ToSystemReplacemsggroupAuthArrayOutput() SystemReplacemsggroupAuthArrayOutput {
	return o
}

func (o SystemReplacemsggroupAuthArrayOutput) ToSystemReplacemsggroupAuthArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupAuthArrayOutput {
	return o
}

func (o SystemReplacemsggroupAuthArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupAuth {
		return vs[0].([]SystemReplacemsggroupAuth)[vs[1].(int)]
	}).(SystemReplacemsggroupAuthOutput)
}

type SystemReplacemsggroupAutomation struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupAutomationInput is an input type that accepts SystemReplacemsggroupAutomationArgs and SystemReplacemsggroupAutomationOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupAutomationInput` via:
//
//	SystemReplacemsggroupAutomationArgs{...}
type SystemReplacemsggroupAutomationInput interface {
	pulumi.Input

	ToSystemReplacemsggroupAutomationOutput() SystemReplacemsggroupAutomationOutput
	ToSystemReplacemsggroupAutomationOutputWithContext(context.Context) SystemReplacemsggroupAutomationOutput
}

type SystemReplacemsggroupAutomationArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupAutomation)(nil)).Elem()
}

func (i SystemReplacemsggroupAutomationArgs) ToSystemReplacemsggroupAutomationOutput() SystemReplacemsggroupAutomationOutput {
	return i.ToSystemReplacemsggroupAutomationOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupAutomationArgs) ToSystemReplacemsggroupAutomationOutputWithContext(ctx context.Context) SystemReplacemsggroupAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupAutomationOutput)
}

// SystemReplacemsggroupAutomationArrayInput is an input type that accepts SystemReplacemsggroupAutomationArray and SystemReplacemsggroupAutomationArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupAutomationArrayInput` via:
//
//	SystemReplacemsggroupAutomationArray{ SystemReplacemsggroupAutomationArgs{...} }
type SystemReplacemsggroupAutomationArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupAutomationArrayOutput() SystemReplacemsggroupAutomationArrayOutput
	ToSystemReplacemsggroupAutomationArrayOutputWithContext(context.Context) SystemReplacemsggroupAutomationArrayOutput
}

type SystemReplacemsggroupAutomationArray []SystemReplacemsggroupAutomationInput

func (SystemReplacemsggroupAutomationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupAutomation)(nil)).Elem()
}

func (i SystemReplacemsggroupAutomationArray) ToSystemReplacemsggroupAutomationArrayOutput() SystemReplacemsggroupAutomationArrayOutput {
	return i.ToSystemReplacemsggroupAutomationArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupAutomationArray) ToSystemReplacemsggroupAutomationArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupAutomationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupAutomationArrayOutput)
}

type SystemReplacemsggroupAutomationOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupAutomation)(nil)).Elem()
}

func (o SystemReplacemsggroupAutomationOutput) ToSystemReplacemsggroupAutomationOutput() SystemReplacemsggroupAutomationOutput {
	return o
}

func (o SystemReplacemsggroupAutomationOutput) ToSystemReplacemsggroupAutomationOutputWithContext(ctx context.Context) SystemReplacemsggroupAutomationOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupAutomationOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAutomation) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag. Valid values: `none`, `text`, `html`.
func (o SystemReplacemsggroupAutomationOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAutomation) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupAutomationOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAutomation) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupAutomationOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupAutomation) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupAutomationArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupAutomationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupAutomation)(nil)).Elem()
}

func (o SystemReplacemsggroupAutomationArrayOutput) ToSystemReplacemsggroupAutomationArrayOutput() SystemReplacemsggroupAutomationArrayOutput {
	return o
}

func (o SystemReplacemsggroupAutomationArrayOutput) ToSystemReplacemsggroupAutomationArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupAutomationArrayOutput {
	return o
}

func (o SystemReplacemsggroupAutomationArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupAutomationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupAutomation {
		return vs[0].([]SystemReplacemsggroupAutomation)[vs[1].(int)]
	}).(SystemReplacemsggroupAutomationOutput)
}

type SystemReplacemsggroupCustomMessage struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupCustomMessageInput is an input type that accepts SystemReplacemsggroupCustomMessageArgs and SystemReplacemsggroupCustomMessageOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupCustomMessageInput` via:
//
//	SystemReplacemsggroupCustomMessageArgs{...}
type SystemReplacemsggroupCustomMessageInput interface {
	pulumi.Input

	ToSystemReplacemsggroupCustomMessageOutput() SystemReplacemsggroupCustomMessageOutput
	ToSystemReplacemsggroupCustomMessageOutputWithContext(context.Context) SystemReplacemsggroupCustomMessageOutput
}

type SystemReplacemsggroupCustomMessageArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupCustomMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupCustomMessage)(nil)).Elem()
}

func (i SystemReplacemsggroupCustomMessageArgs) ToSystemReplacemsggroupCustomMessageOutput() SystemReplacemsggroupCustomMessageOutput {
	return i.ToSystemReplacemsggroupCustomMessageOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupCustomMessageArgs) ToSystemReplacemsggroupCustomMessageOutputWithContext(ctx context.Context) SystemReplacemsggroupCustomMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupCustomMessageOutput)
}

// SystemReplacemsggroupCustomMessageArrayInput is an input type that accepts SystemReplacemsggroupCustomMessageArray and SystemReplacemsggroupCustomMessageArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupCustomMessageArrayInput` via:
//
//	SystemReplacemsggroupCustomMessageArray{ SystemReplacemsggroupCustomMessageArgs{...} }
type SystemReplacemsggroupCustomMessageArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupCustomMessageArrayOutput() SystemReplacemsggroupCustomMessageArrayOutput
	ToSystemReplacemsggroupCustomMessageArrayOutputWithContext(context.Context) SystemReplacemsggroupCustomMessageArrayOutput
}

type SystemReplacemsggroupCustomMessageArray []SystemReplacemsggroupCustomMessageInput

func (SystemReplacemsggroupCustomMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupCustomMessage)(nil)).Elem()
}

func (i SystemReplacemsggroupCustomMessageArray) ToSystemReplacemsggroupCustomMessageArrayOutput() SystemReplacemsggroupCustomMessageArrayOutput {
	return i.ToSystemReplacemsggroupCustomMessageArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupCustomMessageArray) ToSystemReplacemsggroupCustomMessageArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupCustomMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupCustomMessageArrayOutput)
}

type SystemReplacemsggroupCustomMessageOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupCustomMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupCustomMessage)(nil)).Elem()
}

func (o SystemReplacemsggroupCustomMessageOutput) ToSystemReplacemsggroupCustomMessageOutput() SystemReplacemsggroupCustomMessageOutput {
	return o
}

func (o SystemReplacemsggroupCustomMessageOutput) ToSystemReplacemsggroupCustomMessageOutputWithContext(ctx context.Context) SystemReplacemsggroupCustomMessageOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupCustomMessageOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupCustomMessage) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupCustomMessageOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupCustomMessage) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupCustomMessageOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupCustomMessage) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupCustomMessageOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupCustomMessage) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupCustomMessageArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupCustomMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupCustomMessage)(nil)).Elem()
}

func (o SystemReplacemsggroupCustomMessageArrayOutput) ToSystemReplacemsggroupCustomMessageArrayOutput() SystemReplacemsggroupCustomMessageArrayOutput {
	return o
}

func (o SystemReplacemsggroupCustomMessageArrayOutput) ToSystemReplacemsggroupCustomMessageArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupCustomMessageArrayOutput {
	return o
}

func (o SystemReplacemsggroupCustomMessageArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupCustomMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupCustomMessage {
		return vs[0].([]SystemReplacemsggroupCustomMessage)[vs[1].(int)]
	}).(SystemReplacemsggroupCustomMessageOutput)
}

type SystemReplacemsggroupDeviceDetectionPortal struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupDeviceDetectionPortalInput is an input type that accepts SystemReplacemsggroupDeviceDetectionPortalArgs and SystemReplacemsggroupDeviceDetectionPortalOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupDeviceDetectionPortalInput` via:
//
//	SystemReplacemsggroupDeviceDetectionPortalArgs{...}
type SystemReplacemsggroupDeviceDetectionPortalInput interface {
	pulumi.Input

	ToSystemReplacemsggroupDeviceDetectionPortalOutput() SystemReplacemsggroupDeviceDetectionPortalOutput
	ToSystemReplacemsggroupDeviceDetectionPortalOutputWithContext(context.Context) SystemReplacemsggroupDeviceDetectionPortalOutput
}

type SystemReplacemsggroupDeviceDetectionPortalArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupDeviceDetectionPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (i SystemReplacemsggroupDeviceDetectionPortalArgs) ToSystemReplacemsggroupDeviceDetectionPortalOutput() SystemReplacemsggroupDeviceDetectionPortalOutput {
	return i.ToSystemReplacemsggroupDeviceDetectionPortalOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupDeviceDetectionPortalArgs) ToSystemReplacemsggroupDeviceDetectionPortalOutputWithContext(ctx context.Context) SystemReplacemsggroupDeviceDetectionPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupDeviceDetectionPortalOutput)
}

// SystemReplacemsggroupDeviceDetectionPortalArrayInput is an input type that accepts SystemReplacemsggroupDeviceDetectionPortalArray and SystemReplacemsggroupDeviceDetectionPortalArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupDeviceDetectionPortalArrayInput` via:
//
//	SystemReplacemsggroupDeviceDetectionPortalArray{ SystemReplacemsggroupDeviceDetectionPortalArgs{...} }
type SystemReplacemsggroupDeviceDetectionPortalArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupDeviceDetectionPortalArrayOutput() SystemReplacemsggroupDeviceDetectionPortalArrayOutput
	ToSystemReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(context.Context) SystemReplacemsggroupDeviceDetectionPortalArrayOutput
}

type SystemReplacemsggroupDeviceDetectionPortalArray []SystemReplacemsggroupDeviceDetectionPortalInput

func (SystemReplacemsggroupDeviceDetectionPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (i SystemReplacemsggroupDeviceDetectionPortalArray) ToSystemReplacemsggroupDeviceDetectionPortalArrayOutput() SystemReplacemsggroupDeviceDetectionPortalArrayOutput {
	return i.ToSystemReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupDeviceDetectionPortalArray) ToSystemReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupDeviceDetectionPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupDeviceDetectionPortalArrayOutput)
}

type SystemReplacemsggroupDeviceDetectionPortalOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupDeviceDetectionPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (o SystemReplacemsggroupDeviceDetectionPortalOutput) ToSystemReplacemsggroupDeviceDetectionPortalOutput() SystemReplacemsggroupDeviceDetectionPortalOutput {
	return o
}

func (o SystemReplacemsggroupDeviceDetectionPortalOutput) ToSystemReplacemsggroupDeviceDetectionPortalOutputWithContext(ctx context.Context) SystemReplacemsggroupDeviceDetectionPortalOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupDeviceDetectionPortalOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupDeviceDetectionPortal) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupDeviceDetectionPortalOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupDeviceDetectionPortal) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupDeviceDetectionPortalOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupDeviceDetectionPortal) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupDeviceDetectionPortalOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupDeviceDetectionPortal) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupDeviceDetectionPortalArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupDeviceDetectionPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupDeviceDetectionPortal)(nil)).Elem()
}

func (o SystemReplacemsggroupDeviceDetectionPortalArrayOutput) ToSystemReplacemsggroupDeviceDetectionPortalArrayOutput() SystemReplacemsggroupDeviceDetectionPortalArrayOutput {
	return o
}

func (o SystemReplacemsggroupDeviceDetectionPortalArrayOutput) ToSystemReplacemsggroupDeviceDetectionPortalArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupDeviceDetectionPortalArrayOutput {
	return o
}

func (o SystemReplacemsggroupDeviceDetectionPortalArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupDeviceDetectionPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupDeviceDetectionPortal {
		return vs[0].([]SystemReplacemsggroupDeviceDetectionPortal)[vs[1].(int)]
	}).(SystemReplacemsggroupDeviceDetectionPortalOutput)
}

type SystemReplacemsggroupEc struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`, `wml`.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupEcInput is an input type that accepts SystemReplacemsggroupEcArgs and SystemReplacemsggroupEcOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupEcInput` via:
//
//	SystemReplacemsggroupEcArgs{...}
type SystemReplacemsggroupEcInput interface {
	pulumi.Input

	ToSystemReplacemsggroupEcOutput() SystemReplacemsggroupEcOutput
	ToSystemReplacemsggroupEcOutputWithContext(context.Context) SystemReplacemsggroupEcOutput
}

type SystemReplacemsggroupEcArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`, `wml`.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupEcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupEc)(nil)).Elem()
}

func (i SystemReplacemsggroupEcArgs) ToSystemReplacemsggroupEcOutput() SystemReplacemsggroupEcOutput {
	return i.ToSystemReplacemsggroupEcOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupEcArgs) ToSystemReplacemsggroupEcOutputWithContext(ctx context.Context) SystemReplacemsggroupEcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupEcOutput)
}

// SystemReplacemsggroupEcArrayInput is an input type that accepts SystemReplacemsggroupEcArray and SystemReplacemsggroupEcArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupEcArrayInput` via:
//
//	SystemReplacemsggroupEcArray{ SystemReplacemsggroupEcArgs{...} }
type SystemReplacemsggroupEcArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupEcArrayOutput() SystemReplacemsggroupEcArrayOutput
	ToSystemReplacemsggroupEcArrayOutputWithContext(context.Context) SystemReplacemsggroupEcArrayOutput
}

type SystemReplacemsggroupEcArray []SystemReplacemsggroupEcInput

func (SystemReplacemsggroupEcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupEc)(nil)).Elem()
}

func (i SystemReplacemsggroupEcArray) ToSystemReplacemsggroupEcArrayOutput() SystemReplacemsggroupEcArrayOutput {
	return i.ToSystemReplacemsggroupEcArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupEcArray) ToSystemReplacemsggroupEcArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupEcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupEcArrayOutput)
}

type SystemReplacemsggroupEcOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupEcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupEc)(nil)).Elem()
}

func (o SystemReplacemsggroupEcOutput) ToSystemReplacemsggroupEcOutput() SystemReplacemsggroupEcOutput {
	return o
}

func (o SystemReplacemsggroupEcOutput) ToSystemReplacemsggroupEcOutputWithContext(ctx context.Context) SystemReplacemsggroupEcOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupEcOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupEc) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag. Valid values: `none`, `text`, `html`, `wml`.
func (o SystemReplacemsggroupEcOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupEc) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupEcOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupEc) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupEcOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupEc) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupEcArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupEcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupEc)(nil)).Elem()
}

func (o SystemReplacemsggroupEcArrayOutput) ToSystemReplacemsggroupEcArrayOutput() SystemReplacemsggroupEcArrayOutput {
	return o
}

func (o SystemReplacemsggroupEcArrayOutput) ToSystemReplacemsggroupEcArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupEcArrayOutput {
	return o
}

func (o SystemReplacemsggroupEcArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupEcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupEc {
		return vs[0].([]SystemReplacemsggroupEc)[vs[1].(int)]
	}).(SystemReplacemsggroupEcOutput)
}

type SystemReplacemsggroupFortiguardWf struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupFortiguardWfInput is an input type that accepts SystemReplacemsggroupFortiguardWfArgs and SystemReplacemsggroupFortiguardWfOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupFortiguardWfInput` via:
//
//	SystemReplacemsggroupFortiguardWfArgs{...}
type SystemReplacemsggroupFortiguardWfInput interface {
	pulumi.Input

	ToSystemReplacemsggroupFortiguardWfOutput() SystemReplacemsggroupFortiguardWfOutput
	ToSystemReplacemsggroupFortiguardWfOutputWithContext(context.Context) SystemReplacemsggroupFortiguardWfOutput
}

type SystemReplacemsggroupFortiguardWfArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupFortiguardWfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (i SystemReplacemsggroupFortiguardWfArgs) ToSystemReplacemsggroupFortiguardWfOutput() SystemReplacemsggroupFortiguardWfOutput {
	return i.ToSystemReplacemsggroupFortiguardWfOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupFortiguardWfArgs) ToSystemReplacemsggroupFortiguardWfOutputWithContext(ctx context.Context) SystemReplacemsggroupFortiguardWfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupFortiguardWfOutput)
}

// SystemReplacemsggroupFortiguardWfArrayInput is an input type that accepts SystemReplacemsggroupFortiguardWfArray and SystemReplacemsggroupFortiguardWfArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupFortiguardWfArrayInput` via:
//
//	SystemReplacemsggroupFortiguardWfArray{ SystemReplacemsggroupFortiguardWfArgs{...} }
type SystemReplacemsggroupFortiguardWfArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupFortiguardWfArrayOutput() SystemReplacemsggroupFortiguardWfArrayOutput
	ToSystemReplacemsggroupFortiguardWfArrayOutputWithContext(context.Context) SystemReplacemsggroupFortiguardWfArrayOutput
}

type SystemReplacemsggroupFortiguardWfArray []SystemReplacemsggroupFortiguardWfInput

func (SystemReplacemsggroupFortiguardWfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (i SystemReplacemsggroupFortiguardWfArray) ToSystemReplacemsggroupFortiguardWfArrayOutput() SystemReplacemsggroupFortiguardWfArrayOutput {
	return i.ToSystemReplacemsggroupFortiguardWfArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupFortiguardWfArray) ToSystemReplacemsggroupFortiguardWfArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupFortiguardWfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupFortiguardWfArrayOutput)
}

type SystemReplacemsggroupFortiguardWfOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupFortiguardWfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (o SystemReplacemsggroupFortiguardWfOutput) ToSystemReplacemsggroupFortiguardWfOutput() SystemReplacemsggroupFortiguardWfOutput {
	return o
}

func (o SystemReplacemsggroupFortiguardWfOutput) ToSystemReplacemsggroupFortiguardWfOutputWithContext(ctx context.Context) SystemReplacemsggroupFortiguardWfOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupFortiguardWfOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupFortiguardWf) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupFortiguardWfOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupFortiguardWf) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupFortiguardWfOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupFortiguardWf) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupFortiguardWfOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupFortiguardWf) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupFortiguardWfArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupFortiguardWfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupFortiguardWf)(nil)).Elem()
}

func (o SystemReplacemsggroupFortiguardWfArrayOutput) ToSystemReplacemsggroupFortiguardWfArrayOutput() SystemReplacemsggroupFortiguardWfArrayOutput {
	return o
}

func (o SystemReplacemsggroupFortiguardWfArrayOutput) ToSystemReplacemsggroupFortiguardWfArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupFortiguardWfArrayOutput {
	return o
}

func (o SystemReplacemsggroupFortiguardWfArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupFortiguardWfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupFortiguardWf {
		return vs[0].([]SystemReplacemsggroupFortiguardWf)[vs[1].(int)]
	}).(SystemReplacemsggroupFortiguardWfOutput)
}

type SystemReplacemsggroupFtp struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupFtpInput is an input type that accepts SystemReplacemsggroupFtpArgs and SystemReplacemsggroupFtpOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupFtpInput` via:
//
//	SystemReplacemsggroupFtpArgs{...}
type SystemReplacemsggroupFtpInput interface {
	pulumi.Input

	ToSystemReplacemsggroupFtpOutput() SystemReplacemsggroupFtpOutput
	ToSystemReplacemsggroupFtpOutputWithContext(context.Context) SystemReplacemsggroupFtpOutput
}

type SystemReplacemsggroupFtpArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupFtp)(nil)).Elem()
}

func (i SystemReplacemsggroupFtpArgs) ToSystemReplacemsggroupFtpOutput() SystemReplacemsggroupFtpOutput {
	return i.ToSystemReplacemsggroupFtpOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupFtpArgs) ToSystemReplacemsggroupFtpOutputWithContext(ctx context.Context) SystemReplacemsggroupFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupFtpOutput)
}

// SystemReplacemsggroupFtpArrayInput is an input type that accepts SystemReplacemsggroupFtpArray and SystemReplacemsggroupFtpArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupFtpArrayInput` via:
//
//	SystemReplacemsggroupFtpArray{ SystemReplacemsggroupFtpArgs{...} }
type SystemReplacemsggroupFtpArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupFtpArrayOutput() SystemReplacemsggroupFtpArrayOutput
	ToSystemReplacemsggroupFtpArrayOutputWithContext(context.Context) SystemReplacemsggroupFtpArrayOutput
}

type SystemReplacemsggroupFtpArray []SystemReplacemsggroupFtpInput

func (SystemReplacemsggroupFtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupFtp)(nil)).Elem()
}

func (i SystemReplacemsggroupFtpArray) ToSystemReplacemsggroupFtpArrayOutput() SystemReplacemsggroupFtpArrayOutput {
	return i.ToSystemReplacemsggroupFtpArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupFtpArray) ToSystemReplacemsggroupFtpArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupFtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupFtpArrayOutput)
}

type SystemReplacemsggroupFtpOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupFtp)(nil)).Elem()
}

func (o SystemReplacemsggroupFtpOutput) ToSystemReplacemsggroupFtpOutput() SystemReplacemsggroupFtpOutput {
	return o
}

func (o SystemReplacemsggroupFtpOutput) ToSystemReplacemsggroupFtpOutputWithContext(ctx context.Context) SystemReplacemsggroupFtpOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupFtpOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupFtp) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupFtpOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupFtp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupFtpOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupFtp) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupFtpOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupFtp) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupFtpArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupFtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupFtp)(nil)).Elem()
}

func (o SystemReplacemsggroupFtpArrayOutput) ToSystemReplacemsggroupFtpArrayOutput() SystemReplacemsggroupFtpArrayOutput {
	return o
}

func (o SystemReplacemsggroupFtpArrayOutput) ToSystemReplacemsggroupFtpArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupFtpArrayOutput {
	return o
}

func (o SystemReplacemsggroupFtpArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupFtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupFtp {
		return vs[0].([]SystemReplacemsggroupFtp)[vs[1].(int)]
	}).(SystemReplacemsggroupFtpOutput)
}

type SystemReplacemsggroupHttp struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupHttpInput is an input type that accepts SystemReplacemsggroupHttpArgs and SystemReplacemsggroupHttpOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupHttpInput` via:
//
//	SystemReplacemsggroupHttpArgs{...}
type SystemReplacemsggroupHttpInput interface {
	pulumi.Input

	ToSystemReplacemsggroupHttpOutput() SystemReplacemsggroupHttpOutput
	ToSystemReplacemsggroupHttpOutputWithContext(context.Context) SystemReplacemsggroupHttpOutput
}

type SystemReplacemsggroupHttpArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupHttp)(nil)).Elem()
}

func (i SystemReplacemsggroupHttpArgs) ToSystemReplacemsggroupHttpOutput() SystemReplacemsggroupHttpOutput {
	return i.ToSystemReplacemsggroupHttpOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupHttpArgs) ToSystemReplacemsggroupHttpOutputWithContext(ctx context.Context) SystemReplacemsggroupHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupHttpOutput)
}

// SystemReplacemsggroupHttpArrayInput is an input type that accepts SystemReplacemsggroupHttpArray and SystemReplacemsggroupHttpArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupHttpArrayInput` via:
//
//	SystemReplacemsggroupHttpArray{ SystemReplacemsggroupHttpArgs{...} }
type SystemReplacemsggroupHttpArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupHttpArrayOutput() SystemReplacemsggroupHttpArrayOutput
	ToSystemReplacemsggroupHttpArrayOutputWithContext(context.Context) SystemReplacemsggroupHttpArrayOutput
}

type SystemReplacemsggroupHttpArray []SystemReplacemsggroupHttpInput

func (SystemReplacemsggroupHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupHttp)(nil)).Elem()
}

func (i SystemReplacemsggroupHttpArray) ToSystemReplacemsggroupHttpArrayOutput() SystemReplacemsggroupHttpArrayOutput {
	return i.ToSystemReplacemsggroupHttpArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupHttpArray) ToSystemReplacemsggroupHttpArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupHttpArrayOutput)
}

type SystemReplacemsggroupHttpOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupHttp)(nil)).Elem()
}

func (o SystemReplacemsggroupHttpOutput) ToSystemReplacemsggroupHttpOutput() SystemReplacemsggroupHttpOutput {
	return o
}

func (o SystemReplacemsggroupHttpOutput) ToSystemReplacemsggroupHttpOutputWithContext(ctx context.Context) SystemReplacemsggroupHttpOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupHttpOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupHttp) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupHttpOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupHttp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupHttpOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupHttp) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupHttpOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupHttp) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupHttpArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupHttp)(nil)).Elem()
}

func (o SystemReplacemsggroupHttpArrayOutput) ToSystemReplacemsggroupHttpArrayOutput() SystemReplacemsggroupHttpArrayOutput {
	return o
}

func (o SystemReplacemsggroupHttpArrayOutput) ToSystemReplacemsggroupHttpArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupHttpArrayOutput {
	return o
}

func (o SystemReplacemsggroupHttpArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupHttp {
		return vs[0].([]SystemReplacemsggroupHttp)[vs[1].(int)]
	}).(SystemReplacemsggroupHttpOutput)
}

type SystemReplacemsggroupIcap struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupIcapInput is an input type that accepts SystemReplacemsggroupIcapArgs and SystemReplacemsggroupIcapOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupIcapInput` via:
//
//	SystemReplacemsggroupIcapArgs{...}
type SystemReplacemsggroupIcapInput interface {
	pulumi.Input

	ToSystemReplacemsggroupIcapOutput() SystemReplacemsggroupIcapOutput
	ToSystemReplacemsggroupIcapOutputWithContext(context.Context) SystemReplacemsggroupIcapOutput
}

type SystemReplacemsggroupIcapArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupIcapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupIcap)(nil)).Elem()
}

func (i SystemReplacemsggroupIcapArgs) ToSystemReplacemsggroupIcapOutput() SystemReplacemsggroupIcapOutput {
	return i.ToSystemReplacemsggroupIcapOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupIcapArgs) ToSystemReplacemsggroupIcapOutputWithContext(ctx context.Context) SystemReplacemsggroupIcapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupIcapOutput)
}

// SystemReplacemsggroupIcapArrayInput is an input type that accepts SystemReplacemsggroupIcapArray and SystemReplacemsggroupIcapArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupIcapArrayInput` via:
//
//	SystemReplacemsggroupIcapArray{ SystemReplacemsggroupIcapArgs{...} }
type SystemReplacemsggroupIcapArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupIcapArrayOutput() SystemReplacemsggroupIcapArrayOutput
	ToSystemReplacemsggroupIcapArrayOutputWithContext(context.Context) SystemReplacemsggroupIcapArrayOutput
}

type SystemReplacemsggroupIcapArray []SystemReplacemsggroupIcapInput

func (SystemReplacemsggroupIcapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupIcap)(nil)).Elem()
}

func (i SystemReplacemsggroupIcapArray) ToSystemReplacemsggroupIcapArrayOutput() SystemReplacemsggroupIcapArrayOutput {
	return i.ToSystemReplacemsggroupIcapArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupIcapArray) ToSystemReplacemsggroupIcapArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupIcapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupIcapArrayOutput)
}

type SystemReplacemsggroupIcapOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupIcapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupIcap)(nil)).Elem()
}

func (o SystemReplacemsggroupIcapOutput) ToSystemReplacemsggroupIcapOutput() SystemReplacemsggroupIcapOutput {
	return o
}

func (o SystemReplacemsggroupIcapOutput) ToSystemReplacemsggroupIcapOutputWithContext(ctx context.Context) SystemReplacemsggroupIcapOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupIcapOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupIcap) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupIcapOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupIcap) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupIcapOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupIcap) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupIcapOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupIcap) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupIcapArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupIcapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupIcap)(nil)).Elem()
}

func (o SystemReplacemsggroupIcapArrayOutput) ToSystemReplacemsggroupIcapArrayOutput() SystemReplacemsggroupIcapArrayOutput {
	return o
}

func (o SystemReplacemsggroupIcapArrayOutput) ToSystemReplacemsggroupIcapArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupIcapArrayOutput {
	return o
}

func (o SystemReplacemsggroupIcapArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupIcapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupIcap {
		return vs[0].([]SystemReplacemsggroupIcap)[vs[1].(int)]
	}).(SystemReplacemsggroupIcapOutput)
}

type SystemReplacemsggroupMail struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupMailInput is an input type that accepts SystemReplacemsggroupMailArgs and SystemReplacemsggroupMailOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupMailInput` via:
//
//	SystemReplacemsggroupMailArgs{...}
type SystemReplacemsggroupMailInput interface {
	pulumi.Input

	ToSystemReplacemsggroupMailOutput() SystemReplacemsggroupMailOutput
	ToSystemReplacemsggroupMailOutputWithContext(context.Context) SystemReplacemsggroupMailOutput
}

type SystemReplacemsggroupMailArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupMailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupMail)(nil)).Elem()
}

func (i SystemReplacemsggroupMailArgs) ToSystemReplacemsggroupMailOutput() SystemReplacemsggroupMailOutput {
	return i.ToSystemReplacemsggroupMailOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupMailArgs) ToSystemReplacemsggroupMailOutputWithContext(ctx context.Context) SystemReplacemsggroupMailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupMailOutput)
}

// SystemReplacemsggroupMailArrayInput is an input type that accepts SystemReplacemsggroupMailArray and SystemReplacemsggroupMailArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupMailArrayInput` via:
//
//	SystemReplacemsggroupMailArray{ SystemReplacemsggroupMailArgs{...} }
type SystemReplacemsggroupMailArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupMailArrayOutput() SystemReplacemsggroupMailArrayOutput
	ToSystemReplacemsggroupMailArrayOutputWithContext(context.Context) SystemReplacemsggroupMailArrayOutput
}

type SystemReplacemsggroupMailArray []SystemReplacemsggroupMailInput

func (SystemReplacemsggroupMailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupMail)(nil)).Elem()
}

func (i SystemReplacemsggroupMailArray) ToSystemReplacemsggroupMailArrayOutput() SystemReplacemsggroupMailArrayOutput {
	return i.ToSystemReplacemsggroupMailArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupMailArray) ToSystemReplacemsggroupMailArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupMailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupMailArrayOutput)
}

type SystemReplacemsggroupMailOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupMailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupMail)(nil)).Elem()
}

func (o SystemReplacemsggroupMailOutput) ToSystemReplacemsggroupMailOutput() SystemReplacemsggroupMailOutput {
	return o
}

func (o SystemReplacemsggroupMailOutput) ToSystemReplacemsggroupMailOutputWithContext(ctx context.Context) SystemReplacemsggroupMailOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupMailOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupMail) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupMailOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupMail) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupMailOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupMail) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupMailOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupMail) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupMailArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupMailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupMail)(nil)).Elem()
}

func (o SystemReplacemsggroupMailArrayOutput) ToSystemReplacemsggroupMailArrayOutput() SystemReplacemsggroupMailArrayOutput {
	return o
}

func (o SystemReplacemsggroupMailArrayOutput) ToSystemReplacemsggroupMailArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupMailArrayOutput {
	return o
}

func (o SystemReplacemsggroupMailArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupMailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupMail {
		return vs[0].([]SystemReplacemsggroupMail)[vs[1].(int)]
	}).(SystemReplacemsggroupMailOutput)
}

type SystemReplacemsggroupNacQuar struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupNacQuarInput is an input type that accepts SystemReplacemsggroupNacQuarArgs and SystemReplacemsggroupNacQuarOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupNacQuarInput` via:
//
//	SystemReplacemsggroupNacQuarArgs{...}
type SystemReplacemsggroupNacQuarInput interface {
	pulumi.Input

	ToSystemReplacemsggroupNacQuarOutput() SystemReplacemsggroupNacQuarOutput
	ToSystemReplacemsggroupNacQuarOutputWithContext(context.Context) SystemReplacemsggroupNacQuarOutput
}

type SystemReplacemsggroupNacQuarArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupNacQuarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupNacQuar)(nil)).Elem()
}

func (i SystemReplacemsggroupNacQuarArgs) ToSystemReplacemsggroupNacQuarOutput() SystemReplacemsggroupNacQuarOutput {
	return i.ToSystemReplacemsggroupNacQuarOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupNacQuarArgs) ToSystemReplacemsggroupNacQuarOutputWithContext(ctx context.Context) SystemReplacemsggroupNacQuarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupNacQuarOutput)
}

// SystemReplacemsggroupNacQuarArrayInput is an input type that accepts SystemReplacemsggroupNacQuarArray and SystemReplacemsggroupNacQuarArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupNacQuarArrayInput` via:
//
//	SystemReplacemsggroupNacQuarArray{ SystemReplacemsggroupNacQuarArgs{...} }
type SystemReplacemsggroupNacQuarArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupNacQuarArrayOutput() SystemReplacemsggroupNacQuarArrayOutput
	ToSystemReplacemsggroupNacQuarArrayOutputWithContext(context.Context) SystemReplacemsggroupNacQuarArrayOutput
}

type SystemReplacemsggroupNacQuarArray []SystemReplacemsggroupNacQuarInput

func (SystemReplacemsggroupNacQuarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupNacQuar)(nil)).Elem()
}

func (i SystemReplacemsggroupNacQuarArray) ToSystemReplacemsggroupNacQuarArrayOutput() SystemReplacemsggroupNacQuarArrayOutput {
	return i.ToSystemReplacemsggroupNacQuarArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupNacQuarArray) ToSystemReplacemsggroupNacQuarArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupNacQuarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupNacQuarArrayOutput)
}

type SystemReplacemsggroupNacQuarOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupNacQuarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupNacQuar)(nil)).Elem()
}

func (o SystemReplacemsggroupNacQuarOutput) ToSystemReplacemsggroupNacQuarOutput() SystemReplacemsggroupNacQuarOutput {
	return o
}

func (o SystemReplacemsggroupNacQuarOutput) ToSystemReplacemsggroupNacQuarOutputWithContext(ctx context.Context) SystemReplacemsggroupNacQuarOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupNacQuarOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupNacQuar) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupNacQuarOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupNacQuar) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupNacQuarOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupNacQuar) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupNacQuarOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupNacQuar) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupNacQuarArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupNacQuarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupNacQuar)(nil)).Elem()
}

func (o SystemReplacemsggroupNacQuarArrayOutput) ToSystemReplacemsggroupNacQuarArrayOutput() SystemReplacemsggroupNacQuarArrayOutput {
	return o
}

func (o SystemReplacemsggroupNacQuarArrayOutput) ToSystemReplacemsggroupNacQuarArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupNacQuarArrayOutput {
	return o
}

func (o SystemReplacemsggroupNacQuarArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupNacQuarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupNacQuar {
		return vs[0].([]SystemReplacemsggroupNacQuar)[vs[1].(int)]
	}).(SystemReplacemsggroupNacQuarOutput)
}

type SystemReplacemsggroupNntp struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupNntpInput is an input type that accepts SystemReplacemsggroupNntpArgs and SystemReplacemsggroupNntpOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupNntpInput` via:
//
//	SystemReplacemsggroupNntpArgs{...}
type SystemReplacemsggroupNntpInput interface {
	pulumi.Input

	ToSystemReplacemsggroupNntpOutput() SystemReplacemsggroupNntpOutput
	ToSystemReplacemsggroupNntpOutputWithContext(context.Context) SystemReplacemsggroupNntpOutput
}

type SystemReplacemsggroupNntpArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupNntpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupNntp)(nil)).Elem()
}

func (i SystemReplacemsggroupNntpArgs) ToSystemReplacemsggroupNntpOutput() SystemReplacemsggroupNntpOutput {
	return i.ToSystemReplacemsggroupNntpOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupNntpArgs) ToSystemReplacemsggroupNntpOutputWithContext(ctx context.Context) SystemReplacemsggroupNntpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupNntpOutput)
}

// SystemReplacemsggroupNntpArrayInput is an input type that accepts SystemReplacemsggroupNntpArray and SystemReplacemsggroupNntpArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupNntpArrayInput` via:
//
//	SystemReplacemsggroupNntpArray{ SystemReplacemsggroupNntpArgs{...} }
type SystemReplacemsggroupNntpArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupNntpArrayOutput() SystemReplacemsggroupNntpArrayOutput
	ToSystemReplacemsggroupNntpArrayOutputWithContext(context.Context) SystemReplacemsggroupNntpArrayOutput
}

type SystemReplacemsggroupNntpArray []SystemReplacemsggroupNntpInput

func (SystemReplacemsggroupNntpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupNntp)(nil)).Elem()
}

func (i SystemReplacemsggroupNntpArray) ToSystemReplacemsggroupNntpArrayOutput() SystemReplacemsggroupNntpArrayOutput {
	return i.ToSystemReplacemsggroupNntpArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupNntpArray) ToSystemReplacemsggroupNntpArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupNntpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupNntpArrayOutput)
}

type SystemReplacemsggroupNntpOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupNntpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupNntp)(nil)).Elem()
}

func (o SystemReplacemsggroupNntpOutput) ToSystemReplacemsggroupNntpOutput() SystemReplacemsggroupNntpOutput {
	return o
}

func (o SystemReplacemsggroupNntpOutput) ToSystemReplacemsggroupNntpOutputWithContext(ctx context.Context) SystemReplacemsggroupNntpOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupNntpOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupNntp) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupNntpOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupNntp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupNntpOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupNntp) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupNntpOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupNntp) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupNntpArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupNntpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupNntp)(nil)).Elem()
}

func (o SystemReplacemsggroupNntpArrayOutput) ToSystemReplacemsggroupNntpArrayOutput() SystemReplacemsggroupNntpArrayOutput {
	return o
}

func (o SystemReplacemsggroupNntpArrayOutput) ToSystemReplacemsggroupNntpArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupNntpArrayOutput {
	return o
}

func (o SystemReplacemsggroupNntpArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupNntpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupNntp {
		return vs[0].([]SystemReplacemsggroupNntp)[vs[1].(int)]
	}).(SystemReplacemsggroupNntpOutput)
}

type SystemReplacemsggroupSpam struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupSpamInput is an input type that accepts SystemReplacemsggroupSpamArgs and SystemReplacemsggroupSpamOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupSpamInput` via:
//
//	SystemReplacemsggroupSpamArgs{...}
type SystemReplacemsggroupSpamInput interface {
	pulumi.Input

	ToSystemReplacemsggroupSpamOutput() SystemReplacemsggroupSpamOutput
	ToSystemReplacemsggroupSpamOutputWithContext(context.Context) SystemReplacemsggroupSpamOutput
}

type SystemReplacemsggroupSpamArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupSpamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupSpam)(nil)).Elem()
}

func (i SystemReplacemsggroupSpamArgs) ToSystemReplacemsggroupSpamOutput() SystemReplacemsggroupSpamOutput {
	return i.ToSystemReplacemsggroupSpamOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupSpamArgs) ToSystemReplacemsggroupSpamOutputWithContext(ctx context.Context) SystemReplacemsggroupSpamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupSpamOutput)
}

// SystemReplacemsggroupSpamArrayInput is an input type that accepts SystemReplacemsggroupSpamArray and SystemReplacemsggroupSpamArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupSpamArrayInput` via:
//
//	SystemReplacemsggroupSpamArray{ SystemReplacemsggroupSpamArgs{...} }
type SystemReplacemsggroupSpamArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupSpamArrayOutput() SystemReplacemsggroupSpamArrayOutput
	ToSystemReplacemsggroupSpamArrayOutputWithContext(context.Context) SystemReplacemsggroupSpamArrayOutput
}

type SystemReplacemsggroupSpamArray []SystemReplacemsggroupSpamInput

func (SystemReplacemsggroupSpamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupSpam)(nil)).Elem()
}

func (i SystemReplacemsggroupSpamArray) ToSystemReplacemsggroupSpamArrayOutput() SystemReplacemsggroupSpamArrayOutput {
	return i.ToSystemReplacemsggroupSpamArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupSpamArray) ToSystemReplacemsggroupSpamArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupSpamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupSpamArrayOutput)
}

type SystemReplacemsggroupSpamOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupSpamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupSpam)(nil)).Elem()
}

func (o SystemReplacemsggroupSpamOutput) ToSystemReplacemsggroupSpamOutput() SystemReplacemsggroupSpamOutput {
	return o
}

func (o SystemReplacemsggroupSpamOutput) ToSystemReplacemsggroupSpamOutputWithContext(ctx context.Context) SystemReplacemsggroupSpamOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupSpamOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupSpam) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupSpamOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupSpam) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupSpamOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupSpam) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupSpamOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupSpam) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupSpamArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupSpamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupSpam)(nil)).Elem()
}

func (o SystemReplacemsggroupSpamArrayOutput) ToSystemReplacemsggroupSpamArrayOutput() SystemReplacemsggroupSpamArrayOutput {
	return o
}

func (o SystemReplacemsggroupSpamArrayOutput) ToSystemReplacemsggroupSpamArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupSpamArrayOutput {
	return o
}

func (o SystemReplacemsggroupSpamArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupSpamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupSpam {
		return vs[0].([]SystemReplacemsggroupSpam)[vs[1].(int)]
	}).(SystemReplacemsggroupSpamOutput)
}

type SystemReplacemsggroupSslvpn struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupSslvpnInput is an input type that accepts SystemReplacemsggroupSslvpnArgs and SystemReplacemsggroupSslvpnOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupSslvpnInput` via:
//
//	SystemReplacemsggroupSslvpnArgs{...}
type SystemReplacemsggroupSslvpnInput interface {
	pulumi.Input

	ToSystemReplacemsggroupSslvpnOutput() SystemReplacemsggroupSslvpnOutput
	ToSystemReplacemsggroupSslvpnOutputWithContext(context.Context) SystemReplacemsggroupSslvpnOutput
}

type SystemReplacemsggroupSslvpnArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupSslvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupSslvpn)(nil)).Elem()
}

func (i SystemReplacemsggroupSslvpnArgs) ToSystemReplacemsggroupSslvpnOutput() SystemReplacemsggroupSslvpnOutput {
	return i.ToSystemReplacemsggroupSslvpnOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupSslvpnArgs) ToSystemReplacemsggroupSslvpnOutputWithContext(ctx context.Context) SystemReplacemsggroupSslvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupSslvpnOutput)
}

// SystemReplacemsggroupSslvpnArrayInput is an input type that accepts SystemReplacemsggroupSslvpnArray and SystemReplacemsggroupSslvpnArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupSslvpnArrayInput` via:
//
//	SystemReplacemsggroupSslvpnArray{ SystemReplacemsggroupSslvpnArgs{...} }
type SystemReplacemsggroupSslvpnArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupSslvpnArrayOutput() SystemReplacemsggroupSslvpnArrayOutput
	ToSystemReplacemsggroupSslvpnArrayOutputWithContext(context.Context) SystemReplacemsggroupSslvpnArrayOutput
}

type SystemReplacemsggroupSslvpnArray []SystemReplacemsggroupSslvpnInput

func (SystemReplacemsggroupSslvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupSslvpn)(nil)).Elem()
}

func (i SystemReplacemsggroupSslvpnArray) ToSystemReplacemsggroupSslvpnArrayOutput() SystemReplacemsggroupSslvpnArrayOutput {
	return i.ToSystemReplacemsggroupSslvpnArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupSslvpnArray) ToSystemReplacemsggroupSslvpnArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupSslvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupSslvpnArrayOutput)
}

type SystemReplacemsggroupSslvpnOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupSslvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupSslvpn)(nil)).Elem()
}

func (o SystemReplacemsggroupSslvpnOutput) ToSystemReplacemsggroupSslvpnOutput() SystemReplacemsggroupSslvpnOutput {
	return o
}

func (o SystemReplacemsggroupSslvpnOutput) ToSystemReplacemsggroupSslvpnOutputWithContext(ctx context.Context) SystemReplacemsggroupSslvpnOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupSslvpnOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupSslvpn) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupSslvpnOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupSslvpn) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupSslvpnOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupSslvpn) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupSslvpnOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupSslvpn) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupSslvpnArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupSslvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupSslvpn)(nil)).Elem()
}

func (o SystemReplacemsggroupSslvpnArrayOutput) ToSystemReplacemsggroupSslvpnArrayOutput() SystemReplacemsggroupSslvpnArrayOutput {
	return o
}

func (o SystemReplacemsggroupSslvpnArrayOutput) ToSystemReplacemsggroupSslvpnArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupSslvpnArrayOutput {
	return o
}

func (o SystemReplacemsggroupSslvpnArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupSslvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupSslvpn {
		return vs[0].([]SystemReplacemsggroupSslvpn)[vs[1].(int)]
	}).(SystemReplacemsggroupSslvpnOutput)
}

type SystemReplacemsggroupTrafficQuota struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupTrafficQuotaInput is an input type that accepts SystemReplacemsggroupTrafficQuotaArgs and SystemReplacemsggroupTrafficQuotaOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupTrafficQuotaInput` via:
//
//	SystemReplacemsggroupTrafficQuotaArgs{...}
type SystemReplacemsggroupTrafficQuotaInput interface {
	pulumi.Input

	ToSystemReplacemsggroupTrafficQuotaOutput() SystemReplacemsggroupTrafficQuotaOutput
	ToSystemReplacemsggroupTrafficQuotaOutputWithContext(context.Context) SystemReplacemsggroupTrafficQuotaOutput
}

type SystemReplacemsggroupTrafficQuotaArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupTrafficQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (i SystemReplacemsggroupTrafficQuotaArgs) ToSystemReplacemsggroupTrafficQuotaOutput() SystemReplacemsggroupTrafficQuotaOutput {
	return i.ToSystemReplacemsggroupTrafficQuotaOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupTrafficQuotaArgs) ToSystemReplacemsggroupTrafficQuotaOutputWithContext(ctx context.Context) SystemReplacemsggroupTrafficQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupTrafficQuotaOutput)
}

// SystemReplacemsggroupTrafficQuotaArrayInput is an input type that accepts SystemReplacemsggroupTrafficQuotaArray and SystemReplacemsggroupTrafficQuotaArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupTrafficQuotaArrayInput` via:
//
//	SystemReplacemsggroupTrafficQuotaArray{ SystemReplacemsggroupTrafficQuotaArgs{...} }
type SystemReplacemsggroupTrafficQuotaArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupTrafficQuotaArrayOutput() SystemReplacemsggroupTrafficQuotaArrayOutput
	ToSystemReplacemsggroupTrafficQuotaArrayOutputWithContext(context.Context) SystemReplacemsggroupTrafficQuotaArrayOutput
}

type SystemReplacemsggroupTrafficQuotaArray []SystemReplacemsggroupTrafficQuotaInput

func (SystemReplacemsggroupTrafficQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (i SystemReplacemsggroupTrafficQuotaArray) ToSystemReplacemsggroupTrafficQuotaArrayOutput() SystemReplacemsggroupTrafficQuotaArrayOutput {
	return i.ToSystemReplacemsggroupTrafficQuotaArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupTrafficQuotaArray) ToSystemReplacemsggroupTrafficQuotaArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupTrafficQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupTrafficQuotaArrayOutput)
}

type SystemReplacemsggroupTrafficQuotaOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupTrafficQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (o SystemReplacemsggroupTrafficQuotaOutput) ToSystemReplacemsggroupTrafficQuotaOutput() SystemReplacemsggroupTrafficQuotaOutput {
	return o
}

func (o SystemReplacemsggroupTrafficQuotaOutput) ToSystemReplacemsggroupTrafficQuotaOutputWithContext(ctx context.Context) SystemReplacemsggroupTrafficQuotaOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupTrafficQuotaOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupTrafficQuota) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupTrafficQuotaOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupTrafficQuota) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupTrafficQuotaOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupTrafficQuota) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupTrafficQuotaOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupTrafficQuota) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupTrafficQuotaArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupTrafficQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupTrafficQuota)(nil)).Elem()
}

func (o SystemReplacemsggroupTrafficQuotaArrayOutput) ToSystemReplacemsggroupTrafficQuotaArrayOutput() SystemReplacemsggroupTrafficQuotaArrayOutput {
	return o
}

func (o SystemReplacemsggroupTrafficQuotaArrayOutput) ToSystemReplacemsggroupTrafficQuotaArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupTrafficQuotaArrayOutput {
	return o
}

func (o SystemReplacemsggroupTrafficQuotaArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupTrafficQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupTrafficQuota {
		return vs[0].([]SystemReplacemsggroupTrafficQuota)[vs[1].(int)]
	}).(SystemReplacemsggroupTrafficQuotaOutput)
}

type SystemReplacemsggroupUtm struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupUtmInput is an input type that accepts SystemReplacemsggroupUtmArgs and SystemReplacemsggroupUtmOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupUtmInput` via:
//
//	SystemReplacemsggroupUtmArgs{...}
type SystemReplacemsggroupUtmInput interface {
	pulumi.Input

	ToSystemReplacemsggroupUtmOutput() SystemReplacemsggroupUtmOutput
	ToSystemReplacemsggroupUtmOutputWithContext(context.Context) SystemReplacemsggroupUtmOutput
}

type SystemReplacemsggroupUtmArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupUtmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupUtm)(nil)).Elem()
}

func (i SystemReplacemsggroupUtmArgs) ToSystemReplacemsggroupUtmOutput() SystemReplacemsggroupUtmOutput {
	return i.ToSystemReplacemsggroupUtmOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupUtmArgs) ToSystemReplacemsggroupUtmOutputWithContext(ctx context.Context) SystemReplacemsggroupUtmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupUtmOutput)
}

// SystemReplacemsggroupUtmArrayInput is an input type that accepts SystemReplacemsggroupUtmArray and SystemReplacemsggroupUtmArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupUtmArrayInput` via:
//
//	SystemReplacemsggroupUtmArray{ SystemReplacemsggroupUtmArgs{...} }
type SystemReplacemsggroupUtmArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupUtmArrayOutput() SystemReplacemsggroupUtmArrayOutput
	ToSystemReplacemsggroupUtmArrayOutputWithContext(context.Context) SystemReplacemsggroupUtmArrayOutput
}

type SystemReplacemsggroupUtmArray []SystemReplacemsggroupUtmInput

func (SystemReplacemsggroupUtmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupUtm)(nil)).Elem()
}

func (i SystemReplacemsggroupUtmArray) ToSystemReplacemsggroupUtmArrayOutput() SystemReplacemsggroupUtmArrayOutput {
	return i.ToSystemReplacemsggroupUtmArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupUtmArray) ToSystemReplacemsggroupUtmArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupUtmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupUtmArrayOutput)
}

type SystemReplacemsggroupUtmOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupUtmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupUtm)(nil)).Elem()
}

func (o SystemReplacemsggroupUtmOutput) ToSystemReplacemsggroupUtmOutput() SystemReplacemsggroupUtmOutput {
	return o
}

func (o SystemReplacemsggroupUtmOutput) ToSystemReplacemsggroupUtmOutputWithContext(ctx context.Context) SystemReplacemsggroupUtmOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupUtmOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupUtm) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupUtmOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupUtm) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupUtmOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupUtm) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupUtmOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupUtm) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupUtmArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupUtmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupUtm)(nil)).Elem()
}

func (o SystemReplacemsggroupUtmArrayOutput) ToSystemReplacemsggroupUtmArrayOutput() SystemReplacemsggroupUtmArrayOutput {
	return o
}

func (o SystemReplacemsggroupUtmArrayOutput) ToSystemReplacemsggroupUtmArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupUtmArrayOutput {
	return o
}

func (o SystemReplacemsggroupUtmArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupUtmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupUtm {
		return vs[0].([]SystemReplacemsggroupUtm)[vs[1].(int)]
	}).(SystemReplacemsggroupUtmOutput)
}

type SystemReplacemsggroupWebproxy struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsggroupWebproxyInput is an input type that accepts SystemReplacemsggroupWebproxyArgs and SystemReplacemsggroupWebproxyOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupWebproxyInput` via:
//
//	SystemReplacemsggroupWebproxyArgs{...}
type SystemReplacemsggroupWebproxyInput interface {
	pulumi.Input

	ToSystemReplacemsggroupWebproxyOutput() SystemReplacemsggroupWebproxyOutput
	ToSystemReplacemsggroupWebproxyOutputWithContext(context.Context) SystemReplacemsggroupWebproxyOutput
}

type SystemReplacemsggroupWebproxyArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsggroupWebproxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupWebproxy)(nil)).Elem()
}

func (i SystemReplacemsggroupWebproxyArgs) ToSystemReplacemsggroupWebproxyOutput() SystemReplacemsggroupWebproxyOutput {
	return i.ToSystemReplacemsggroupWebproxyOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupWebproxyArgs) ToSystemReplacemsggroupWebproxyOutputWithContext(ctx context.Context) SystemReplacemsggroupWebproxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupWebproxyOutput)
}

// SystemReplacemsggroupWebproxyArrayInput is an input type that accepts SystemReplacemsggroupWebproxyArray and SystemReplacemsggroupWebproxyArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsggroupWebproxyArrayInput` via:
//
//	SystemReplacemsggroupWebproxyArray{ SystemReplacemsggroupWebproxyArgs{...} }
type SystemReplacemsggroupWebproxyArrayInput interface {
	pulumi.Input

	ToSystemReplacemsggroupWebproxyArrayOutput() SystemReplacemsggroupWebproxyArrayOutput
	ToSystemReplacemsggroupWebproxyArrayOutputWithContext(context.Context) SystemReplacemsggroupWebproxyArrayOutput
}

type SystemReplacemsggroupWebproxyArray []SystemReplacemsggroupWebproxyInput

func (SystemReplacemsggroupWebproxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupWebproxy)(nil)).Elem()
}

func (i SystemReplacemsggroupWebproxyArray) ToSystemReplacemsggroupWebproxyArrayOutput() SystemReplacemsggroupWebproxyArrayOutput {
	return i.ToSystemReplacemsggroupWebproxyArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsggroupWebproxyArray) ToSystemReplacemsggroupWebproxyArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupWebproxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsggroupWebproxyArrayOutput)
}

type SystemReplacemsggroupWebproxyOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupWebproxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsggroupWebproxy)(nil)).Elem()
}

func (o SystemReplacemsggroupWebproxyOutput) ToSystemReplacemsggroupWebproxyOutput() SystemReplacemsggroupWebproxyOutput {
	return o
}

func (o SystemReplacemsggroupWebproxyOutput) ToSystemReplacemsggroupWebproxyOutputWithContext(ctx context.Context) SystemReplacemsggroupWebproxyOutput {
	return o
}

// Message string.
func (o SystemReplacemsggroupWebproxyOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupWebproxy) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemReplacemsggroupWebproxyOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupWebproxy) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemReplacemsggroupWebproxyOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupWebproxy) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Message type.
func (o SystemReplacemsggroupWebproxyOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsggroupWebproxy) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsggroupWebproxyArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsggroupWebproxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsggroupWebproxy)(nil)).Elem()
}

func (o SystemReplacemsggroupWebproxyArrayOutput) ToSystemReplacemsggroupWebproxyArrayOutput() SystemReplacemsggroupWebproxyArrayOutput {
	return o
}

func (o SystemReplacemsggroupWebproxyArrayOutput) ToSystemReplacemsggroupWebproxyArrayOutputWithContext(ctx context.Context) SystemReplacemsggroupWebproxyArrayOutput {
	return o
}

func (o SystemReplacemsggroupWebproxyArrayOutput) Index(i pulumi.IntInput) SystemReplacemsggroupWebproxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsggroupWebproxy {
		return vs[0].([]SystemReplacemsggroupWebproxy)[vs[1].(int)]
	}).(SystemReplacemsggroupWebproxyOutput)
}

type SystemSamlServiceProvider struct {
	// Customized SAML attributes to send along with assertion. The structure of `assertionAttributes` block is documented below.
	AssertionAttributes []SystemSamlServiceProviderAssertionAttribute `pulumi:"assertionAttributes"`
	// IDP entity ID.
	IdpEntityId *string `pulumi:"idpEntityId"`
	// IDP single logout URL.
	IdpSingleLogoutUrl *string `pulumi:"idpSingleLogoutUrl"`
	// IDP single sign-on URL.
	IdpSingleSignOnUrl *string `pulumi:"idpSingleSignOnUrl"`
	// Name.
	Name *string `pulumi:"name"`
	// Prefix.
	Prefix *string `pulumi:"prefix"`
	// SP binding protocol. Valid values: `post`, `redirect`.
	SpBindingProtocol *string `pulumi:"spBindingProtocol"`
	// SP certificate name.
	SpCert *string `pulumi:"spCert"`
	// SP entity ID.
	SpEntityId *string `pulumi:"spEntityId"`
	// SP portal URL.
	SpPortalUrl *string `pulumi:"spPortalUrl"`
	// SP single logout URL.
	SpSingleLogoutUrl *string `pulumi:"spSingleLogoutUrl"`
	// SP single sign-on URL.
	SpSingleSignOnUrl *string `pulumi:"spSingleSignOnUrl"`
}

// SystemSamlServiceProviderInput is an input type that accepts SystemSamlServiceProviderArgs and SystemSamlServiceProviderOutput values.
// You can construct a concrete instance of `SystemSamlServiceProviderInput` via:
//
//	SystemSamlServiceProviderArgs{...}
type SystemSamlServiceProviderInput interface {
	pulumi.Input

	ToSystemSamlServiceProviderOutput() SystemSamlServiceProviderOutput
	ToSystemSamlServiceProviderOutputWithContext(context.Context) SystemSamlServiceProviderOutput
}

type SystemSamlServiceProviderArgs struct {
	// Customized SAML attributes to send along with assertion. The structure of `assertionAttributes` block is documented below.
	AssertionAttributes SystemSamlServiceProviderAssertionAttributeArrayInput `pulumi:"assertionAttributes"`
	// IDP entity ID.
	IdpEntityId pulumi.StringPtrInput `pulumi:"idpEntityId"`
	// IDP single logout URL.
	IdpSingleLogoutUrl pulumi.StringPtrInput `pulumi:"idpSingleLogoutUrl"`
	// IDP single sign-on URL.
	IdpSingleSignOnUrl pulumi.StringPtrInput `pulumi:"idpSingleSignOnUrl"`
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// SP binding protocol. Valid values: `post`, `redirect`.
	SpBindingProtocol pulumi.StringPtrInput `pulumi:"spBindingProtocol"`
	// SP certificate name.
	SpCert pulumi.StringPtrInput `pulumi:"spCert"`
	// SP entity ID.
	SpEntityId pulumi.StringPtrInput `pulumi:"spEntityId"`
	// SP portal URL.
	SpPortalUrl pulumi.StringPtrInput `pulumi:"spPortalUrl"`
	// SP single logout URL.
	SpSingleLogoutUrl pulumi.StringPtrInput `pulumi:"spSingleLogoutUrl"`
	// SP single sign-on URL.
	SpSingleSignOnUrl pulumi.StringPtrInput `pulumi:"spSingleSignOnUrl"`
}

func (SystemSamlServiceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSamlServiceProvider)(nil)).Elem()
}

func (i SystemSamlServiceProviderArgs) ToSystemSamlServiceProviderOutput() SystemSamlServiceProviderOutput {
	return i.ToSystemSamlServiceProviderOutputWithContext(context.Background())
}

func (i SystemSamlServiceProviderArgs) ToSystemSamlServiceProviderOutputWithContext(ctx context.Context) SystemSamlServiceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlServiceProviderOutput)
}

// SystemSamlServiceProviderArrayInput is an input type that accepts SystemSamlServiceProviderArray and SystemSamlServiceProviderArrayOutput values.
// You can construct a concrete instance of `SystemSamlServiceProviderArrayInput` via:
//
//	SystemSamlServiceProviderArray{ SystemSamlServiceProviderArgs{...} }
type SystemSamlServiceProviderArrayInput interface {
	pulumi.Input

	ToSystemSamlServiceProviderArrayOutput() SystemSamlServiceProviderArrayOutput
	ToSystemSamlServiceProviderArrayOutputWithContext(context.Context) SystemSamlServiceProviderArrayOutput
}

type SystemSamlServiceProviderArray []SystemSamlServiceProviderInput

func (SystemSamlServiceProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSamlServiceProvider)(nil)).Elem()
}

func (i SystemSamlServiceProviderArray) ToSystemSamlServiceProviderArrayOutput() SystemSamlServiceProviderArrayOutput {
	return i.ToSystemSamlServiceProviderArrayOutputWithContext(context.Background())
}

func (i SystemSamlServiceProviderArray) ToSystemSamlServiceProviderArrayOutputWithContext(ctx context.Context) SystemSamlServiceProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlServiceProviderArrayOutput)
}

type SystemSamlServiceProviderOutput struct{ *pulumi.OutputState }

func (SystemSamlServiceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSamlServiceProvider)(nil)).Elem()
}

func (o SystemSamlServiceProviderOutput) ToSystemSamlServiceProviderOutput() SystemSamlServiceProviderOutput {
	return o
}

func (o SystemSamlServiceProviderOutput) ToSystemSamlServiceProviderOutputWithContext(ctx context.Context) SystemSamlServiceProviderOutput {
	return o
}

// Customized SAML attributes to send along with assertion. The structure of `assertionAttributes` block is documented below.
func (o SystemSamlServiceProviderOutput) AssertionAttributes() SystemSamlServiceProviderAssertionAttributeArrayOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) []SystemSamlServiceProviderAssertionAttribute {
		return v.AssertionAttributes
	}).(SystemSamlServiceProviderAssertionAttributeArrayOutput)
}

// IDP entity ID.
func (o SystemSamlServiceProviderOutput) IdpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.IdpEntityId }).(pulumi.StringPtrOutput)
}

// IDP single logout URL.
func (o SystemSamlServiceProviderOutput) IdpSingleLogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.IdpSingleLogoutUrl }).(pulumi.StringPtrOutput)
}

// IDP single sign-on URL.
func (o SystemSamlServiceProviderOutput) IdpSingleSignOnUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.IdpSingleSignOnUrl }).(pulumi.StringPtrOutput)
}

// Name.
func (o SystemSamlServiceProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Prefix.
func (o SystemSamlServiceProviderOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// SP binding protocol. Valid values: `post`, `redirect`.
func (o SystemSamlServiceProviderOutput) SpBindingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpBindingProtocol }).(pulumi.StringPtrOutput)
}

// SP certificate name.
func (o SystemSamlServiceProviderOutput) SpCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpCert }).(pulumi.StringPtrOutput)
}

// SP entity ID.
func (o SystemSamlServiceProviderOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpEntityId }).(pulumi.StringPtrOutput)
}

// SP portal URL.
func (o SystemSamlServiceProviderOutput) SpPortalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpPortalUrl }).(pulumi.StringPtrOutput)
}

// SP single logout URL.
func (o SystemSamlServiceProviderOutput) SpSingleLogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpSingleLogoutUrl }).(pulumi.StringPtrOutput)
}

// SP single sign-on URL.
func (o SystemSamlServiceProviderOutput) SpSingleSignOnUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpSingleSignOnUrl }).(pulumi.StringPtrOutput)
}

type SystemSamlServiceProviderArrayOutput struct{ *pulumi.OutputState }

func (SystemSamlServiceProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSamlServiceProvider)(nil)).Elem()
}

func (o SystemSamlServiceProviderArrayOutput) ToSystemSamlServiceProviderArrayOutput() SystemSamlServiceProviderArrayOutput {
	return o
}

func (o SystemSamlServiceProviderArrayOutput) ToSystemSamlServiceProviderArrayOutputWithContext(ctx context.Context) SystemSamlServiceProviderArrayOutput {
	return o
}

func (o SystemSamlServiceProviderArrayOutput) Index(i pulumi.IntInput) SystemSamlServiceProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSamlServiceProvider {
		return vs[0].([]SystemSamlServiceProvider)[vs[1].(int)]
	}).(SystemSamlServiceProviderOutput)
}

type SystemSamlServiceProviderAssertionAttribute struct {
	// Name.
	Name *string `pulumi:"name"`
	// Type.
	Type *string `pulumi:"type"`
}

// SystemSamlServiceProviderAssertionAttributeInput is an input type that accepts SystemSamlServiceProviderAssertionAttributeArgs and SystemSamlServiceProviderAssertionAttributeOutput values.
// You can construct a concrete instance of `SystemSamlServiceProviderAssertionAttributeInput` via:
//
//	SystemSamlServiceProviderAssertionAttributeArgs{...}
type SystemSamlServiceProviderAssertionAttributeInput interface {
	pulumi.Input

	ToSystemSamlServiceProviderAssertionAttributeOutput() SystemSamlServiceProviderAssertionAttributeOutput
	ToSystemSamlServiceProviderAssertionAttributeOutputWithContext(context.Context) SystemSamlServiceProviderAssertionAttributeOutput
}

type SystemSamlServiceProviderAssertionAttributeArgs struct {
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SystemSamlServiceProviderAssertionAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (i SystemSamlServiceProviderAssertionAttributeArgs) ToSystemSamlServiceProviderAssertionAttributeOutput() SystemSamlServiceProviderAssertionAttributeOutput {
	return i.ToSystemSamlServiceProviderAssertionAttributeOutputWithContext(context.Background())
}

func (i SystemSamlServiceProviderAssertionAttributeArgs) ToSystemSamlServiceProviderAssertionAttributeOutputWithContext(ctx context.Context) SystemSamlServiceProviderAssertionAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlServiceProviderAssertionAttributeOutput)
}

// SystemSamlServiceProviderAssertionAttributeArrayInput is an input type that accepts SystemSamlServiceProviderAssertionAttributeArray and SystemSamlServiceProviderAssertionAttributeArrayOutput values.
// You can construct a concrete instance of `SystemSamlServiceProviderAssertionAttributeArrayInput` via:
//
//	SystemSamlServiceProviderAssertionAttributeArray{ SystemSamlServiceProviderAssertionAttributeArgs{...} }
type SystemSamlServiceProviderAssertionAttributeArrayInput interface {
	pulumi.Input

	ToSystemSamlServiceProviderAssertionAttributeArrayOutput() SystemSamlServiceProviderAssertionAttributeArrayOutput
	ToSystemSamlServiceProviderAssertionAttributeArrayOutputWithContext(context.Context) SystemSamlServiceProviderAssertionAttributeArrayOutput
}

type SystemSamlServiceProviderAssertionAttributeArray []SystemSamlServiceProviderAssertionAttributeInput

func (SystemSamlServiceProviderAssertionAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (i SystemSamlServiceProviderAssertionAttributeArray) ToSystemSamlServiceProviderAssertionAttributeArrayOutput() SystemSamlServiceProviderAssertionAttributeArrayOutput {
	return i.ToSystemSamlServiceProviderAssertionAttributeArrayOutputWithContext(context.Background())
}

func (i SystemSamlServiceProviderAssertionAttributeArray) ToSystemSamlServiceProviderAssertionAttributeArrayOutputWithContext(ctx context.Context) SystemSamlServiceProviderAssertionAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlServiceProviderAssertionAttributeArrayOutput)
}

type SystemSamlServiceProviderAssertionAttributeOutput struct{ *pulumi.OutputState }

func (SystemSamlServiceProviderAssertionAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (o SystemSamlServiceProviderAssertionAttributeOutput) ToSystemSamlServiceProviderAssertionAttributeOutput() SystemSamlServiceProviderAssertionAttributeOutput {
	return o
}

func (o SystemSamlServiceProviderAssertionAttributeOutput) ToSystemSamlServiceProviderAssertionAttributeOutputWithContext(ctx context.Context) SystemSamlServiceProviderAssertionAttributeOutput {
	return o
}

// Name.
func (o SystemSamlServiceProviderAssertionAttributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProviderAssertionAttribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type.
func (o SystemSamlServiceProviderAssertionAttributeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProviderAssertionAttribute) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SystemSamlServiceProviderAssertionAttributeArrayOutput struct{ *pulumi.OutputState }

func (SystemSamlServiceProviderAssertionAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (o SystemSamlServiceProviderAssertionAttributeArrayOutput) ToSystemSamlServiceProviderAssertionAttributeArrayOutput() SystemSamlServiceProviderAssertionAttributeArrayOutput {
	return o
}

func (o SystemSamlServiceProviderAssertionAttributeArrayOutput) ToSystemSamlServiceProviderAssertionAttributeArrayOutputWithContext(ctx context.Context) SystemSamlServiceProviderAssertionAttributeArrayOutput {
	return o
}

func (o SystemSamlServiceProviderAssertionAttributeArrayOutput) Index(i pulumi.IntInput) SystemSamlServiceProviderAssertionAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSamlServiceProviderAssertionAttribute {
		return vs[0].([]SystemSamlServiceProviderAssertionAttribute)[vs[1].(int)]
	}).(SystemSamlServiceProviderAssertionAttributeOutput)
}

type SystemSdnconnectorExternalAccountList struct {
	// AWS external ID.
	ExternalId *string `pulumi:"externalId"`
	// AWS region name list. The structure of `regionList` block is documented below.
	RegionLists []SystemSdnconnectorExternalAccountListRegionList `pulumi:"regionLists"`
	// AWS role ARN to assume.
	RoleArn *string `pulumi:"roleArn"`
}

// SystemSdnconnectorExternalAccountListInput is an input type that accepts SystemSdnconnectorExternalAccountListArgs and SystemSdnconnectorExternalAccountListOutput values.
// You can construct a concrete instance of `SystemSdnconnectorExternalAccountListInput` via:
//
//	SystemSdnconnectorExternalAccountListArgs{...}
type SystemSdnconnectorExternalAccountListInput interface {
	pulumi.Input

	ToSystemSdnconnectorExternalAccountListOutput() SystemSdnconnectorExternalAccountListOutput
	ToSystemSdnconnectorExternalAccountListOutputWithContext(context.Context) SystemSdnconnectorExternalAccountListOutput
}

type SystemSdnconnectorExternalAccountListArgs struct {
	// AWS external ID.
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// AWS region name list. The structure of `regionList` block is documented below.
	RegionLists SystemSdnconnectorExternalAccountListRegionListArrayInput `pulumi:"regionLists"`
	// AWS role ARN to assume.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (SystemSdnconnectorExternalAccountListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorExternalAccountList)(nil)).Elem()
}

func (i SystemSdnconnectorExternalAccountListArgs) ToSystemSdnconnectorExternalAccountListOutput() SystemSdnconnectorExternalAccountListOutput {
	return i.ToSystemSdnconnectorExternalAccountListOutputWithContext(context.Background())
}

func (i SystemSdnconnectorExternalAccountListArgs) ToSystemSdnconnectorExternalAccountListOutputWithContext(ctx context.Context) SystemSdnconnectorExternalAccountListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorExternalAccountListOutput)
}

// SystemSdnconnectorExternalAccountListArrayInput is an input type that accepts SystemSdnconnectorExternalAccountListArray and SystemSdnconnectorExternalAccountListArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorExternalAccountListArrayInput` via:
//
//	SystemSdnconnectorExternalAccountListArray{ SystemSdnconnectorExternalAccountListArgs{...} }
type SystemSdnconnectorExternalAccountListArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorExternalAccountListArrayOutput() SystemSdnconnectorExternalAccountListArrayOutput
	ToSystemSdnconnectorExternalAccountListArrayOutputWithContext(context.Context) SystemSdnconnectorExternalAccountListArrayOutput
}

type SystemSdnconnectorExternalAccountListArray []SystemSdnconnectorExternalAccountListInput

func (SystemSdnconnectorExternalAccountListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorExternalAccountList)(nil)).Elem()
}

func (i SystemSdnconnectorExternalAccountListArray) ToSystemSdnconnectorExternalAccountListArrayOutput() SystemSdnconnectorExternalAccountListArrayOutput {
	return i.ToSystemSdnconnectorExternalAccountListArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorExternalAccountListArray) ToSystemSdnconnectorExternalAccountListArrayOutputWithContext(ctx context.Context) SystemSdnconnectorExternalAccountListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorExternalAccountListArrayOutput)
}

type SystemSdnconnectorExternalAccountListOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorExternalAccountListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorExternalAccountList)(nil)).Elem()
}

func (o SystemSdnconnectorExternalAccountListOutput) ToSystemSdnconnectorExternalAccountListOutput() SystemSdnconnectorExternalAccountListOutput {
	return o
}

func (o SystemSdnconnectorExternalAccountListOutput) ToSystemSdnconnectorExternalAccountListOutputWithContext(ctx context.Context) SystemSdnconnectorExternalAccountListOutput {
	return o
}

// AWS external ID.
func (o SystemSdnconnectorExternalAccountListOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorExternalAccountList) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// AWS region name list. The structure of `regionList` block is documented below.
func (o SystemSdnconnectorExternalAccountListOutput) RegionLists() SystemSdnconnectorExternalAccountListRegionListArrayOutput {
	return o.ApplyT(func(v SystemSdnconnectorExternalAccountList) []SystemSdnconnectorExternalAccountListRegionList {
		return v.RegionLists
	}).(SystemSdnconnectorExternalAccountListRegionListArrayOutput)
}

// AWS role ARN to assume.
func (o SystemSdnconnectorExternalAccountListOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorExternalAccountList) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorExternalAccountListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorExternalAccountListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorExternalAccountList)(nil)).Elem()
}

func (o SystemSdnconnectorExternalAccountListArrayOutput) ToSystemSdnconnectorExternalAccountListArrayOutput() SystemSdnconnectorExternalAccountListArrayOutput {
	return o
}

func (o SystemSdnconnectorExternalAccountListArrayOutput) ToSystemSdnconnectorExternalAccountListArrayOutputWithContext(ctx context.Context) SystemSdnconnectorExternalAccountListArrayOutput {
	return o
}

func (o SystemSdnconnectorExternalAccountListArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorExternalAccountListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorExternalAccountList {
		return vs[0].([]SystemSdnconnectorExternalAccountList)[vs[1].(int)]
	}).(SystemSdnconnectorExternalAccountListOutput)
}

type SystemSdnconnectorExternalAccountListRegionList struct {
	// AWS region name.
	Region *string `pulumi:"region"`
}

// SystemSdnconnectorExternalAccountListRegionListInput is an input type that accepts SystemSdnconnectorExternalAccountListRegionListArgs and SystemSdnconnectorExternalAccountListRegionListOutput values.
// You can construct a concrete instance of `SystemSdnconnectorExternalAccountListRegionListInput` via:
//
//	SystemSdnconnectorExternalAccountListRegionListArgs{...}
type SystemSdnconnectorExternalAccountListRegionListInput interface {
	pulumi.Input

	ToSystemSdnconnectorExternalAccountListRegionListOutput() SystemSdnconnectorExternalAccountListRegionListOutput
	ToSystemSdnconnectorExternalAccountListRegionListOutputWithContext(context.Context) SystemSdnconnectorExternalAccountListRegionListOutput
}

type SystemSdnconnectorExternalAccountListRegionListArgs struct {
	// AWS region name.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (SystemSdnconnectorExternalAccountListRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (i SystemSdnconnectorExternalAccountListRegionListArgs) ToSystemSdnconnectorExternalAccountListRegionListOutput() SystemSdnconnectorExternalAccountListRegionListOutput {
	return i.ToSystemSdnconnectorExternalAccountListRegionListOutputWithContext(context.Background())
}

func (i SystemSdnconnectorExternalAccountListRegionListArgs) ToSystemSdnconnectorExternalAccountListRegionListOutputWithContext(ctx context.Context) SystemSdnconnectorExternalAccountListRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorExternalAccountListRegionListOutput)
}

// SystemSdnconnectorExternalAccountListRegionListArrayInput is an input type that accepts SystemSdnconnectorExternalAccountListRegionListArray and SystemSdnconnectorExternalAccountListRegionListArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorExternalAccountListRegionListArrayInput` via:
//
//	SystemSdnconnectorExternalAccountListRegionListArray{ SystemSdnconnectorExternalAccountListRegionListArgs{...} }
type SystemSdnconnectorExternalAccountListRegionListArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorExternalAccountListRegionListArrayOutput() SystemSdnconnectorExternalAccountListRegionListArrayOutput
	ToSystemSdnconnectorExternalAccountListRegionListArrayOutputWithContext(context.Context) SystemSdnconnectorExternalAccountListRegionListArrayOutput
}

type SystemSdnconnectorExternalAccountListRegionListArray []SystemSdnconnectorExternalAccountListRegionListInput

func (SystemSdnconnectorExternalAccountListRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (i SystemSdnconnectorExternalAccountListRegionListArray) ToSystemSdnconnectorExternalAccountListRegionListArrayOutput() SystemSdnconnectorExternalAccountListRegionListArrayOutput {
	return i.ToSystemSdnconnectorExternalAccountListRegionListArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorExternalAccountListRegionListArray) ToSystemSdnconnectorExternalAccountListRegionListArrayOutputWithContext(ctx context.Context) SystemSdnconnectorExternalAccountListRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorExternalAccountListRegionListArrayOutput)
}

type SystemSdnconnectorExternalAccountListRegionListOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorExternalAccountListRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (o SystemSdnconnectorExternalAccountListRegionListOutput) ToSystemSdnconnectorExternalAccountListRegionListOutput() SystemSdnconnectorExternalAccountListRegionListOutput {
	return o
}

func (o SystemSdnconnectorExternalAccountListRegionListOutput) ToSystemSdnconnectorExternalAccountListRegionListOutputWithContext(ctx context.Context) SystemSdnconnectorExternalAccountListRegionListOutput {
	return o
}

// AWS region name.
func (o SystemSdnconnectorExternalAccountListRegionListOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorExternalAccountListRegionList) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorExternalAccountListRegionListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorExternalAccountListRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorExternalAccountListRegionList)(nil)).Elem()
}

func (o SystemSdnconnectorExternalAccountListRegionListArrayOutput) ToSystemSdnconnectorExternalAccountListRegionListArrayOutput() SystemSdnconnectorExternalAccountListRegionListArrayOutput {
	return o
}

func (o SystemSdnconnectorExternalAccountListRegionListArrayOutput) ToSystemSdnconnectorExternalAccountListRegionListArrayOutputWithContext(ctx context.Context) SystemSdnconnectorExternalAccountListRegionListArrayOutput {
	return o
}

func (o SystemSdnconnectorExternalAccountListRegionListArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorExternalAccountListRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorExternalAccountListRegionList {
		return vs[0].([]SystemSdnconnectorExternalAccountListRegionList)[vs[1].(int)]
	}).(SystemSdnconnectorExternalAccountListRegionListOutput)
}

type SystemSdnconnectorExternalIp struct {
	// External IP name.
	Name *string `pulumi:"name"`
}

// SystemSdnconnectorExternalIpInput is an input type that accepts SystemSdnconnectorExternalIpArgs and SystemSdnconnectorExternalIpOutput values.
// You can construct a concrete instance of `SystemSdnconnectorExternalIpInput` via:
//
//	SystemSdnconnectorExternalIpArgs{...}
type SystemSdnconnectorExternalIpInput interface {
	pulumi.Input

	ToSystemSdnconnectorExternalIpOutput() SystemSdnconnectorExternalIpOutput
	ToSystemSdnconnectorExternalIpOutputWithContext(context.Context) SystemSdnconnectorExternalIpOutput
}

type SystemSdnconnectorExternalIpArgs struct {
	// External IP name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdnconnectorExternalIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorExternalIp)(nil)).Elem()
}

func (i SystemSdnconnectorExternalIpArgs) ToSystemSdnconnectorExternalIpOutput() SystemSdnconnectorExternalIpOutput {
	return i.ToSystemSdnconnectorExternalIpOutputWithContext(context.Background())
}

func (i SystemSdnconnectorExternalIpArgs) ToSystemSdnconnectorExternalIpOutputWithContext(ctx context.Context) SystemSdnconnectorExternalIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorExternalIpOutput)
}

// SystemSdnconnectorExternalIpArrayInput is an input type that accepts SystemSdnconnectorExternalIpArray and SystemSdnconnectorExternalIpArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorExternalIpArrayInput` via:
//
//	SystemSdnconnectorExternalIpArray{ SystemSdnconnectorExternalIpArgs{...} }
type SystemSdnconnectorExternalIpArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorExternalIpArrayOutput() SystemSdnconnectorExternalIpArrayOutput
	ToSystemSdnconnectorExternalIpArrayOutputWithContext(context.Context) SystemSdnconnectorExternalIpArrayOutput
}

type SystemSdnconnectorExternalIpArray []SystemSdnconnectorExternalIpInput

func (SystemSdnconnectorExternalIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorExternalIp)(nil)).Elem()
}

func (i SystemSdnconnectorExternalIpArray) ToSystemSdnconnectorExternalIpArrayOutput() SystemSdnconnectorExternalIpArrayOutput {
	return i.ToSystemSdnconnectorExternalIpArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorExternalIpArray) ToSystemSdnconnectorExternalIpArrayOutputWithContext(ctx context.Context) SystemSdnconnectorExternalIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorExternalIpArrayOutput)
}

type SystemSdnconnectorExternalIpOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorExternalIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorExternalIp)(nil)).Elem()
}

func (o SystemSdnconnectorExternalIpOutput) ToSystemSdnconnectorExternalIpOutput() SystemSdnconnectorExternalIpOutput {
	return o
}

func (o SystemSdnconnectorExternalIpOutput) ToSystemSdnconnectorExternalIpOutputWithContext(ctx context.Context) SystemSdnconnectorExternalIpOutput {
	return o
}

// External IP name.
func (o SystemSdnconnectorExternalIpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorExternalIp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorExternalIpArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorExternalIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorExternalIp)(nil)).Elem()
}

func (o SystemSdnconnectorExternalIpArrayOutput) ToSystemSdnconnectorExternalIpArrayOutput() SystemSdnconnectorExternalIpArrayOutput {
	return o
}

func (o SystemSdnconnectorExternalIpArrayOutput) ToSystemSdnconnectorExternalIpArrayOutputWithContext(ctx context.Context) SystemSdnconnectorExternalIpArrayOutput {
	return o
}

func (o SystemSdnconnectorExternalIpArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorExternalIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorExternalIp {
		return vs[0].([]SystemSdnconnectorExternalIp)[vs[1].(int)]
	}).(SystemSdnconnectorExternalIpOutput)
}

type SystemSdnconnectorForwardingRule struct {
	// Forwarding rule name.
	RuleName *string `pulumi:"ruleName"`
	// Target instance name.
	Target *string `pulumi:"target"`
}

// SystemSdnconnectorForwardingRuleInput is an input type that accepts SystemSdnconnectorForwardingRuleArgs and SystemSdnconnectorForwardingRuleOutput values.
// You can construct a concrete instance of `SystemSdnconnectorForwardingRuleInput` via:
//
//	SystemSdnconnectorForwardingRuleArgs{...}
type SystemSdnconnectorForwardingRuleInput interface {
	pulumi.Input

	ToSystemSdnconnectorForwardingRuleOutput() SystemSdnconnectorForwardingRuleOutput
	ToSystemSdnconnectorForwardingRuleOutputWithContext(context.Context) SystemSdnconnectorForwardingRuleOutput
}

type SystemSdnconnectorForwardingRuleArgs struct {
	// Forwarding rule name.
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
	// Target instance name.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (SystemSdnconnectorForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorForwardingRule)(nil)).Elem()
}

func (i SystemSdnconnectorForwardingRuleArgs) ToSystemSdnconnectorForwardingRuleOutput() SystemSdnconnectorForwardingRuleOutput {
	return i.ToSystemSdnconnectorForwardingRuleOutputWithContext(context.Background())
}

func (i SystemSdnconnectorForwardingRuleArgs) ToSystemSdnconnectorForwardingRuleOutputWithContext(ctx context.Context) SystemSdnconnectorForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorForwardingRuleOutput)
}

// SystemSdnconnectorForwardingRuleArrayInput is an input type that accepts SystemSdnconnectorForwardingRuleArray and SystemSdnconnectorForwardingRuleArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorForwardingRuleArrayInput` via:
//
//	SystemSdnconnectorForwardingRuleArray{ SystemSdnconnectorForwardingRuleArgs{...} }
type SystemSdnconnectorForwardingRuleArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorForwardingRuleArrayOutput() SystemSdnconnectorForwardingRuleArrayOutput
	ToSystemSdnconnectorForwardingRuleArrayOutputWithContext(context.Context) SystemSdnconnectorForwardingRuleArrayOutput
}

type SystemSdnconnectorForwardingRuleArray []SystemSdnconnectorForwardingRuleInput

func (SystemSdnconnectorForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorForwardingRule)(nil)).Elem()
}

func (i SystemSdnconnectorForwardingRuleArray) ToSystemSdnconnectorForwardingRuleArrayOutput() SystemSdnconnectorForwardingRuleArrayOutput {
	return i.ToSystemSdnconnectorForwardingRuleArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorForwardingRuleArray) ToSystemSdnconnectorForwardingRuleArrayOutputWithContext(ctx context.Context) SystemSdnconnectorForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorForwardingRuleArrayOutput)
}

type SystemSdnconnectorForwardingRuleOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorForwardingRule)(nil)).Elem()
}

func (o SystemSdnconnectorForwardingRuleOutput) ToSystemSdnconnectorForwardingRuleOutput() SystemSdnconnectorForwardingRuleOutput {
	return o
}

func (o SystemSdnconnectorForwardingRuleOutput) ToSystemSdnconnectorForwardingRuleOutputWithContext(ctx context.Context) SystemSdnconnectorForwardingRuleOutput {
	return o
}

// Forwarding rule name.
func (o SystemSdnconnectorForwardingRuleOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorForwardingRule) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

// Target instance name.
func (o SystemSdnconnectorForwardingRuleOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorForwardingRule) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorForwardingRule)(nil)).Elem()
}

func (o SystemSdnconnectorForwardingRuleArrayOutput) ToSystemSdnconnectorForwardingRuleArrayOutput() SystemSdnconnectorForwardingRuleArrayOutput {
	return o
}

func (o SystemSdnconnectorForwardingRuleArrayOutput) ToSystemSdnconnectorForwardingRuleArrayOutputWithContext(ctx context.Context) SystemSdnconnectorForwardingRuleArrayOutput {
	return o
}

func (o SystemSdnconnectorForwardingRuleArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorForwardingRule {
		return vs[0].([]SystemSdnconnectorForwardingRule)[vs[1].(int)]
	}).(SystemSdnconnectorForwardingRuleOutput)
}

type SystemSdnconnectorGcpProjectList struct {
	// Configure GCP zone list. The structure of `gcpZoneList` block is documented below.
	GcpZoneLists []SystemSdnconnectorGcpProjectListGcpZoneList `pulumi:"gcpZoneLists"`
	// GCP project ID.
	Id *string `pulumi:"id"`
}

// SystemSdnconnectorGcpProjectListInput is an input type that accepts SystemSdnconnectorGcpProjectListArgs and SystemSdnconnectorGcpProjectListOutput values.
// You can construct a concrete instance of `SystemSdnconnectorGcpProjectListInput` via:
//
//	SystemSdnconnectorGcpProjectListArgs{...}
type SystemSdnconnectorGcpProjectListInput interface {
	pulumi.Input

	ToSystemSdnconnectorGcpProjectListOutput() SystemSdnconnectorGcpProjectListOutput
	ToSystemSdnconnectorGcpProjectListOutputWithContext(context.Context) SystemSdnconnectorGcpProjectListOutput
}

type SystemSdnconnectorGcpProjectListArgs struct {
	// Configure GCP zone list. The structure of `gcpZoneList` block is documented below.
	GcpZoneLists SystemSdnconnectorGcpProjectListGcpZoneListArrayInput `pulumi:"gcpZoneLists"`
	// GCP project ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SystemSdnconnectorGcpProjectListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorGcpProjectList)(nil)).Elem()
}

func (i SystemSdnconnectorGcpProjectListArgs) ToSystemSdnconnectorGcpProjectListOutput() SystemSdnconnectorGcpProjectListOutput {
	return i.ToSystemSdnconnectorGcpProjectListOutputWithContext(context.Background())
}

func (i SystemSdnconnectorGcpProjectListArgs) ToSystemSdnconnectorGcpProjectListOutputWithContext(ctx context.Context) SystemSdnconnectorGcpProjectListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorGcpProjectListOutput)
}

// SystemSdnconnectorGcpProjectListArrayInput is an input type that accepts SystemSdnconnectorGcpProjectListArray and SystemSdnconnectorGcpProjectListArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorGcpProjectListArrayInput` via:
//
//	SystemSdnconnectorGcpProjectListArray{ SystemSdnconnectorGcpProjectListArgs{...} }
type SystemSdnconnectorGcpProjectListArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorGcpProjectListArrayOutput() SystemSdnconnectorGcpProjectListArrayOutput
	ToSystemSdnconnectorGcpProjectListArrayOutputWithContext(context.Context) SystemSdnconnectorGcpProjectListArrayOutput
}

type SystemSdnconnectorGcpProjectListArray []SystemSdnconnectorGcpProjectListInput

func (SystemSdnconnectorGcpProjectListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorGcpProjectList)(nil)).Elem()
}

func (i SystemSdnconnectorGcpProjectListArray) ToSystemSdnconnectorGcpProjectListArrayOutput() SystemSdnconnectorGcpProjectListArrayOutput {
	return i.ToSystemSdnconnectorGcpProjectListArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorGcpProjectListArray) ToSystemSdnconnectorGcpProjectListArrayOutputWithContext(ctx context.Context) SystemSdnconnectorGcpProjectListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorGcpProjectListArrayOutput)
}

type SystemSdnconnectorGcpProjectListOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorGcpProjectListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorGcpProjectList)(nil)).Elem()
}

func (o SystemSdnconnectorGcpProjectListOutput) ToSystemSdnconnectorGcpProjectListOutput() SystemSdnconnectorGcpProjectListOutput {
	return o
}

func (o SystemSdnconnectorGcpProjectListOutput) ToSystemSdnconnectorGcpProjectListOutputWithContext(ctx context.Context) SystemSdnconnectorGcpProjectListOutput {
	return o
}

// Configure GCP zone list. The structure of `gcpZoneList` block is documented below.
func (o SystemSdnconnectorGcpProjectListOutput) GcpZoneLists() SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return o.ApplyT(func(v SystemSdnconnectorGcpProjectList) []SystemSdnconnectorGcpProjectListGcpZoneList {
		return v.GcpZoneLists
	}).(SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput)
}

// GCP project ID.
func (o SystemSdnconnectorGcpProjectListOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorGcpProjectList) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorGcpProjectListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorGcpProjectListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorGcpProjectList)(nil)).Elem()
}

func (o SystemSdnconnectorGcpProjectListArrayOutput) ToSystemSdnconnectorGcpProjectListArrayOutput() SystemSdnconnectorGcpProjectListArrayOutput {
	return o
}

func (o SystemSdnconnectorGcpProjectListArrayOutput) ToSystemSdnconnectorGcpProjectListArrayOutputWithContext(ctx context.Context) SystemSdnconnectorGcpProjectListArrayOutput {
	return o
}

func (o SystemSdnconnectorGcpProjectListArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorGcpProjectListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorGcpProjectList {
		return vs[0].([]SystemSdnconnectorGcpProjectList)[vs[1].(int)]
	}).(SystemSdnconnectorGcpProjectListOutput)
}

type SystemSdnconnectorGcpProjectListGcpZoneList struct {
	// GCP zone name.
	Name *string `pulumi:"name"`
}

// SystemSdnconnectorGcpProjectListGcpZoneListInput is an input type that accepts SystemSdnconnectorGcpProjectListGcpZoneListArgs and SystemSdnconnectorGcpProjectListGcpZoneListOutput values.
// You can construct a concrete instance of `SystemSdnconnectorGcpProjectListGcpZoneListInput` via:
//
//	SystemSdnconnectorGcpProjectListGcpZoneListArgs{...}
type SystemSdnconnectorGcpProjectListGcpZoneListInput interface {
	pulumi.Input

	ToSystemSdnconnectorGcpProjectListGcpZoneListOutput() SystemSdnconnectorGcpProjectListGcpZoneListOutput
	ToSystemSdnconnectorGcpProjectListGcpZoneListOutputWithContext(context.Context) SystemSdnconnectorGcpProjectListGcpZoneListOutput
}

type SystemSdnconnectorGcpProjectListGcpZoneListArgs struct {
	// GCP zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdnconnectorGcpProjectListGcpZoneListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (i SystemSdnconnectorGcpProjectListGcpZoneListArgs) ToSystemSdnconnectorGcpProjectListGcpZoneListOutput() SystemSdnconnectorGcpProjectListGcpZoneListOutput {
	return i.ToSystemSdnconnectorGcpProjectListGcpZoneListOutputWithContext(context.Background())
}

func (i SystemSdnconnectorGcpProjectListGcpZoneListArgs) ToSystemSdnconnectorGcpProjectListGcpZoneListOutputWithContext(ctx context.Context) SystemSdnconnectorGcpProjectListGcpZoneListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorGcpProjectListGcpZoneListOutput)
}

// SystemSdnconnectorGcpProjectListGcpZoneListArrayInput is an input type that accepts SystemSdnconnectorGcpProjectListGcpZoneListArray and SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorGcpProjectListGcpZoneListArrayInput` via:
//
//	SystemSdnconnectorGcpProjectListGcpZoneListArray{ SystemSdnconnectorGcpProjectListGcpZoneListArgs{...} }
type SystemSdnconnectorGcpProjectListGcpZoneListArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorGcpProjectListGcpZoneListArrayOutput() SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput
	ToSystemSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(context.Context) SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput
}

type SystemSdnconnectorGcpProjectListGcpZoneListArray []SystemSdnconnectorGcpProjectListGcpZoneListInput

func (SystemSdnconnectorGcpProjectListGcpZoneListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (i SystemSdnconnectorGcpProjectListGcpZoneListArray) ToSystemSdnconnectorGcpProjectListGcpZoneListArrayOutput() SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return i.ToSystemSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorGcpProjectListGcpZoneListArray) ToSystemSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(ctx context.Context) SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput)
}

type SystemSdnconnectorGcpProjectListGcpZoneListOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorGcpProjectListGcpZoneListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (o SystemSdnconnectorGcpProjectListGcpZoneListOutput) ToSystemSdnconnectorGcpProjectListGcpZoneListOutput() SystemSdnconnectorGcpProjectListGcpZoneListOutput {
	return o
}

func (o SystemSdnconnectorGcpProjectListGcpZoneListOutput) ToSystemSdnconnectorGcpProjectListGcpZoneListOutputWithContext(ctx context.Context) SystemSdnconnectorGcpProjectListGcpZoneListOutput {
	return o
}

// GCP zone name.
func (o SystemSdnconnectorGcpProjectListGcpZoneListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorGcpProjectListGcpZoneList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (o SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput) ToSystemSdnconnectorGcpProjectListGcpZoneListArrayOutput() SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return o
}

func (o SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput) ToSystemSdnconnectorGcpProjectListGcpZoneListArrayOutputWithContext(ctx context.Context) SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput {
	return o
}

func (o SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorGcpProjectListGcpZoneListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorGcpProjectListGcpZoneList {
		return vs[0].([]SystemSdnconnectorGcpProjectListGcpZoneList)[vs[1].(int)]
	}).(SystemSdnconnectorGcpProjectListGcpZoneListOutput)
}

type SystemSdnconnectorNic struct {
	// Configure IP configuration. The structure of `ip` block is documented below.
	Ips []SystemSdnconnectorNicIp `pulumi:"ips"`
	// Network interface name.
	Name *string `pulumi:"name"`
}

// SystemSdnconnectorNicInput is an input type that accepts SystemSdnconnectorNicArgs and SystemSdnconnectorNicOutput values.
// You can construct a concrete instance of `SystemSdnconnectorNicInput` via:
//
//	SystemSdnconnectorNicArgs{...}
type SystemSdnconnectorNicInput interface {
	pulumi.Input

	ToSystemSdnconnectorNicOutput() SystemSdnconnectorNicOutput
	ToSystemSdnconnectorNicOutputWithContext(context.Context) SystemSdnconnectorNicOutput
}

type SystemSdnconnectorNicArgs struct {
	// Configure IP configuration. The structure of `ip` block is documented below.
	Ips SystemSdnconnectorNicIpArrayInput `pulumi:"ips"`
	// Network interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdnconnectorNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorNic)(nil)).Elem()
}

func (i SystemSdnconnectorNicArgs) ToSystemSdnconnectorNicOutput() SystemSdnconnectorNicOutput {
	return i.ToSystemSdnconnectorNicOutputWithContext(context.Background())
}

func (i SystemSdnconnectorNicArgs) ToSystemSdnconnectorNicOutputWithContext(ctx context.Context) SystemSdnconnectorNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorNicOutput)
}

// SystemSdnconnectorNicArrayInput is an input type that accepts SystemSdnconnectorNicArray and SystemSdnconnectorNicArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorNicArrayInput` via:
//
//	SystemSdnconnectorNicArray{ SystemSdnconnectorNicArgs{...} }
type SystemSdnconnectorNicArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorNicArrayOutput() SystemSdnconnectorNicArrayOutput
	ToSystemSdnconnectorNicArrayOutputWithContext(context.Context) SystemSdnconnectorNicArrayOutput
}

type SystemSdnconnectorNicArray []SystemSdnconnectorNicInput

func (SystemSdnconnectorNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorNic)(nil)).Elem()
}

func (i SystemSdnconnectorNicArray) ToSystemSdnconnectorNicArrayOutput() SystemSdnconnectorNicArrayOutput {
	return i.ToSystemSdnconnectorNicArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorNicArray) ToSystemSdnconnectorNicArrayOutputWithContext(ctx context.Context) SystemSdnconnectorNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorNicArrayOutput)
}

type SystemSdnconnectorNicOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorNic)(nil)).Elem()
}

func (o SystemSdnconnectorNicOutput) ToSystemSdnconnectorNicOutput() SystemSdnconnectorNicOutput {
	return o
}

func (o SystemSdnconnectorNicOutput) ToSystemSdnconnectorNicOutputWithContext(ctx context.Context) SystemSdnconnectorNicOutput {
	return o
}

// Configure IP configuration. The structure of `ip` block is documented below.
func (o SystemSdnconnectorNicOutput) Ips() SystemSdnconnectorNicIpArrayOutput {
	return o.ApplyT(func(v SystemSdnconnectorNic) []SystemSdnconnectorNicIp { return v.Ips }).(SystemSdnconnectorNicIpArrayOutput)
}

// Network interface name.
func (o SystemSdnconnectorNicOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorNic) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorNicArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorNic)(nil)).Elem()
}

func (o SystemSdnconnectorNicArrayOutput) ToSystemSdnconnectorNicArrayOutput() SystemSdnconnectorNicArrayOutput {
	return o
}

func (o SystemSdnconnectorNicArrayOutput) ToSystemSdnconnectorNicArrayOutputWithContext(ctx context.Context) SystemSdnconnectorNicArrayOutput {
	return o
}

func (o SystemSdnconnectorNicArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorNic {
		return vs[0].([]SystemSdnconnectorNic)[vs[1].(int)]
	}).(SystemSdnconnectorNicOutput)
}

type SystemSdnconnectorNicIp struct {
	// IP configuration name.
	Name *string `pulumi:"name"`
	// Public IP name.
	PublicIp *string `pulumi:"publicIp"`
	// Resource group of Azure public IP.
	ResourceGroup *string `pulumi:"resourceGroup"`
}

// SystemSdnconnectorNicIpInput is an input type that accepts SystemSdnconnectorNicIpArgs and SystemSdnconnectorNicIpOutput values.
// You can construct a concrete instance of `SystemSdnconnectorNicIpInput` via:
//
//	SystemSdnconnectorNicIpArgs{...}
type SystemSdnconnectorNicIpInput interface {
	pulumi.Input

	ToSystemSdnconnectorNicIpOutput() SystemSdnconnectorNicIpOutput
	ToSystemSdnconnectorNicIpOutputWithContext(context.Context) SystemSdnconnectorNicIpOutput
}

type SystemSdnconnectorNicIpArgs struct {
	// IP configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Public IP name.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// Resource group of Azure public IP.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
}

func (SystemSdnconnectorNicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorNicIp)(nil)).Elem()
}

func (i SystemSdnconnectorNicIpArgs) ToSystemSdnconnectorNicIpOutput() SystemSdnconnectorNicIpOutput {
	return i.ToSystemSdnconnectorNicIpOutputWithContext(context.Background())
}

func (i SystemSdnconnectorNicIpArgs) ToSystemSdnconnectorNicIpOutputWithContext(ctx context.Context) SystemSdnconnectorNicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorNicIpOutput)
}

// SystemSdnconnectorNicIpArrayInput is an input type that accepts SystemSdnconnectorNicIpArray and SystemSdnconnectorNicIpArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorNicIpArrayInput` via:
//
//	SystemSdnconnectorNicIpArray{ SystemSdnconnectorNicIpArgs{...} }
type SystemSdnconnectorNicIpArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorNicIpArrayOutput() SystemSdnconnectorNicIpArrayOutput
	ToSystemSdnconnectorNicIpArrayOutputWithContext(context.Context) SystemSdnconnectorNicIpArrayOutput
}

type SystemSdnconnectorNicIpArray []SystemSdnconnectorNicIpInput

func (SystemSdnconnectorNicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorNicIp)(nil)).Elem()
}

func (i SystemSdnconnectorNicIpArray) ToSystemSdnconnectorNicIpArrayOutput() SystemSdnconnectorNicIpArrayOutput {
	return i.ToSystemSdnconnectorNicIpArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorNicIpArray) ToSystemSdnconnectorNicIpArrayOutputWithContext(ctx context.Context) SystemSdnconnectorNicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorNicIpArrayOutput)
}

type SystemSdnconnectorNicIpOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorNicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorNicIp)(nil)).Elem()
}

func (o SystemSdnconnectorNicIpOutput) ToSystemSdnconnectorNicIpOutput() SystemSdnconnectorNicIpOutput {
	return o
}

func (o SystemSdnconnectorNicIpOutput) ToSystemSdnconnectorNicIpOutputWithContext(ctx context.Context) SystemSdnconnectorNicIpOutput {
	return o
}

// IP configuration name.
func (o SystemSdnconnectorNicIpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorNicIp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Public IP name.
func (o SystemSdnconnectorNicIpOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorNicIp) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// Resource group of Azure public IP.
func (o SystemSdnconnectorNicIpOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorNicIp) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorNicIpArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorNicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorNicIp)(nil)).Elem()
}

func (o SystemSdnconnectorNicIpArrayOutput) ToSystemSdnconnectorNicIpArrayOutput() SystemSdnconnectorNicIpArrayOutput {
	return o
}

func (o SystemSdnconnectorNicIpArrayOutput) ToSystemSdnconnectorNicIpArrayOutputWithContext(ctx context.Context) SystemSdnconnectorNicIpArrayOutput {
	return o
}

func (o SystemSdnconnectorNicIpArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorNicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorNicIp {
		return vs[0].([]SystemSdnconnectorNicIp)[vs[1].(int)]
	}).(SystemSdnconnectorNicIpOutput)
}

type SystemSdnconnectorRoute struct {
	// Route name.
	Name *string `pulumi:"name"`
}

// SystemSdnconnectorRouteInput is an input type that accepts SystemSdnconnectorRouteArgs and SystemSdnconnectorRouteOutput values.
// You can construct a concrete instance of `SystemSdnconnectorRouteInput` via:
//
//	SystemSdnconnectorRouteArgs{...}
type SystemSdnconnectorRouteInput interface {
	pulumi.Input

	ToSystemSdnconnectorRouteOutput() SystemSdnconnectorRouteOutput
	ToSystemSdnconnectorRouteOutputWithContext(context.Context) SystemSdnconnectorRouteOutput
}

type SystemSdnconnectorRouteArgs struct {
	// Route name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdnconnectorRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorRoute)(nil)).Elem()
}

func (i SystemSdnconnectorRouteArgs) ToSystemSdnconnectorRouteOutput() SystemSdnconnectorRouteOutput {
	return i.ToSystemSdnconnectorRouteOutputWithContext(context.Background())
}

func (i SystemSdnconnectorRouteArgs) ToSystemSdnconnectorRouteOutputWithContext(ctx context.Context) SystemSdnconnectorRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorRouteOutput)
}

// SystemSdnconnectorRouteArrayInput is an input type that accepts SystemSdnconnectorRouteArray and SystemSdnconnectorRouteArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorRouteArrayInput` via:
//
//	SystemSdnconnectorRouteArray{ SystemSdnconnectorRouteArgs{...} }
type SystemSdnconnectorRouteArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorRouteArrayOutput() SystemSdnconnectorRouteArrayOutput
	ToSystemSdnconnectorRouteArrayOutputWithContext(context.Context) SystemSdnconnectorRouteArrayOutput
}

type SystemSdnconnectorRouteArray []SystemSdnconnectorRouteInput

func (SystemSdnconnectorRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorRoute)(nil)).Elem()
}

func (i SystemSdnconnectorRouteArray) ToSystemSdnconnectorRouteArrayOutput() SystemSdnconnectorRouteArrayOutput {
	return i.ToSystemSdnconnectorRouteArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorRouteArray) ToSystemSdnconnectorRouteArrayOutputWithContext(ctx context.Context) SystemSdnconnectorRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorRouteArrayOutput)
}

type SystemSdnconnectorRouteOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorRoute)(nil)).Elem()
}

func (o SystemSdnconnectorRouteOutput) ToSystemSdnconnectorRouteOutput() SystemSdnconnectorRouteOutput {
	return o
}

func (o SystemSdnconnectorRouteOutput) ToSystemSdnconnectorRouteOutputWithContext(ctx context.Context) SystemSdnconnectorRouteOutput {
	return o
}

// Route name.
func (o SystemSdnconnectorRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorRouteArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorRoute)(nil)).Elem()
}

func (o SystemSdnconnectorRouteArrayOutput) ToSystemSdnconnectorRouteArrayOutput() SystemSdnconnectorRouteArrayOutput {
	return o
}

func (o SystemSdnconnectorRouteArrayOutput) ToSystemSdnconnectorRouteArrayOutputWithContext(ctx context.Context) SystemSdnconnectorRouteArrayOutput {
	return o
}

func (o SystemSdnconnectorRouteArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorRoute {
		return vs[0].([]SystemSdnconnectorRoute)[vs[1].(int)]
	}).(SystemSdnconnectorRouteOutput)
}

type SystemSdnconnectorRouteTable struct {
	// Route table name.
	Name *string `pulumi:"name"`
	// Resource group of Azure route table.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Configure Azure route. The structure of `route` block is documented below.
	Routes []SystemSdnconnectorRouteTableRoute `pulumi:"routes"`
	// Subscription ID of Azure route table.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// SystemSdnconnectorRouteTableInput is an input type that accepts SystemSdnconnectorRouteTableArgs and SystemSdnconnectorRouteTableOutput values.
// You can construct a concrete instance of `SystemSdnconnectorRouteTableInput` via:
//
//	SystemSdnconnectorRouteTableArgs{...}
type SystemSdnconnectorRouteTableInput interface {
	pulumi.Input

	ToSystemSdnconnectorRouteTableOutput() SystemSdnconnectorRouteTableOutput
	ToSystemSdnconnectorRouteTableOutputWithContext(context.Context) SystemSdnconnectorRouteTableOutput
}

type SystemSdnconnectorRouteTableArgs struct {
	// Route table name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource group of Azure route table.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Configure Azure route. The structure of `route` block is documented below.
	Routes SystemSdnconnectorRouteTableRouteArrayInput `pulumi:"routes"`
	// Subscription ID of Azure route table.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (SystemSdnconnectorRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorRouteTable)(nil)).Elem()
}

func (i SystemSdnconnectorRouteTableArgs) ToSystemSdnconnectorRouteTableOutput() SystemSdnconnectorRouteTableOutput {
	return i.ToSystemSdnconnectorRouteTableOutputWithContext(context.Background())
}

func (i SystemSdnconnectorRouteTableArgs) ToSystemSdnconnectorRouteTableOutputWithContext(ctx context.Context) SystemSdnconnectorRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorRouteTableOutput)
}

// SystemSdnconnectorRouteTableArrayInput is an input type that accepts SystemSdnconnectorRouteTableArray and SystemSdnconnectorRouteTableArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorRouteTableArrayInput` via:
//
//	SystemSdnconnectorRouteTableArray{ SystemSdnconnectorRouteTableArgs{...} }
type SystemSdnconnectorRouteTableArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorRouteTableArrayOutput() SystemSdnconnectorRouteTableArrayOutput
	ToSystemSdnconnectorRouteTableArrayOutputWithContext(context.Context) SystemSdnconnectorRouteTableArrayOutput
}

type SystemSdnconnectorRouteTableArray []SystemSdnconnectorRouteTableInput

func (SystemSdnconnectorRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorRouteTable)(nil)).Elem()
}

func (i SystemSdnconnectorRouteTableArray) ToSystemSdnconnectorRouteTableArrayOutput() SystemSdnconnectorRouteTableArrayOutput {
	return i.ToSystemSdnconnectorRouteTableArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorRouteTableArray) ToSystemSdnconnectorRouteTableArrayOutputWithContext(ctx context.Context) SystemSdnconnectorRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorRouteTableArrayOutput)
}

type SystemSdnconnectorRouteTableOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorRouteTable)(nil)).Elem()
}

func (o SystemSdnconnectorRouteTableOutput) ToSystemSdnconnectorRouteTableOutput() SystemSdnconnectorRouteTableOutput {
	return o
}

func (o SystemSdnconnectorRouteTableOutput) ToSystemSdnconnectorRouteTableOutputWithContext(ctx context.Context) SystemSdnconnectorRouteTableOutput {
	return o
}

// Route table name.
func (o SystemSdnconnectorRouteTableOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorRouteTable) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource group of Azure route table.
func (o SystemSdnconnectorRouteTableOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorRouteTable) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Configure Azure route. The structure of `route` block is documented below.
func (o SystemSdnconnectorRouteTableOutput) Routes() SystemSdnconnectorRouteTableRouteArrayOutput {
	return o.ApplyT(func(v SystemSdnconnectorRouteTable) []SystemSdnconnectorRouteTableRoute { return v.Routes }).(SystemSdnconnectorRouteTableRouteArrayOutput)
}

// Subscription ID of Azure route table.
func (o SystemSdnconnectorRouteTableOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorRouteTable) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorRouteTableArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorRouteTable)(nil)).Elem()
}

func (o SystemSdnconnectorRouteTableArrayOutput) ToSystemSdnconnectorRouteTableArrayOutput() SystemSdnconnectorRouteTableArrayOutput {
	return o
}

func (o SystemSdnconnectorRouteTableArrayOutput) ToSystemSdnconnectorRouteTableArrayOutputWithContext(ctx context.Context) SystemSdnconnectorRouteTableArrayOutput {
	return o
}

func (o SystemSdnconnectorRouteTableArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorRouteTable {
		return vs[0].([]SystemSdnconnectorRouteTable)[vs[1].(int)]
	}).(SystemSdnconnectorRouteTableOutput)
}

type SystemSdnconnectorRouteTableRoute struct {
	// Route name.
	Name *string `pulumi:"name"`
	// Next hop address.
	NextHop *string `pulumi:"nextHop"`
}

// SystemSdnconnectorRouteTableRouteInput is an input type that accepts SystemSdnconnectorRouteTableRouteArgs and SystemSdnconnectorRouteTableRouteOutput values.
// You can construct a concrete instance of `SystemSdnconnectorRouteTableRouteInput` via:
//
//	SystemSdnconnectorRouteTableRouteArgs{...}
type SystemSdnconnectorRouteTableRouteInput interface {
	pulumi.Input

	ToSystemSdnconnectorRouteTableRouteOutput() SystemSdnconnectorRouteTableRouteOutput
	ToSystemSdnconnectorRouteTableRouteOutputWithContext(context.Context) SystemSdnconnectorRouteTableRouteOutput
}

type SystemSdnconnectorRouteTableRouteArgs struct {
	// Route name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Next hop address.
	NextHop pulumi.StringPtrInput `pulumi:"nextHop"`
}

func (SystemSdnconnectorRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorRouteTableRoute)(nil)).Elem()
}

func (i SystemSdnconnectorRouteTableRouteArgs) ToSystemSdnconnectorRouteTableRouteOutput() SystemSdnconnectorRouteTableRouteOutput {
	return i.ToSystemSdnconnectorRouteTableRouteOutputWithContext(context.Background())
}

func (i SystemSdnconnectorRouteTableRouteArgs) ToSystemSdnconnectorRouteTableRouteOutputWithContext(ctx context.Context) SystemSdnconnectorRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorRouteTableRouteOutput)
}

// SystemSdnconnectorRouteTableRouteArrayInput is an input type that accepts SystemSdnconnectorRouteTableRouteArray and SystemSdnconnectorRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorRouteTableRouteArrayInput` via:
//
//	SystemSdnconnectorRouteTableRouteArray{ SystemSdnconnectorRouteTableRouteArgs{...} }
type SystemSdnconnectorRouteTableRouteArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorRouteTableRouteArrayOutput() SystemSdnconnectorRouteTableRouteArrayOutput
	ToSystemSdnconnectorRouteTableRouteArrayOutputWithContext(context.Context) SystemSdnconnectorRouteTableRouteArrayOutput
}

type SystemSdnconnectorRouteTableRouteArray []SystemSdnconnectorRouteTableRouteInput

func (SystemSdnconnectorRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorRouteTableRoute)(nil)).Elem()
}

func (i SystemSdnconnectorRouteTableRouteArray) ToSystemSdnconnectorRouteTableRouteArrayOutput() SystemSdnconnectorRouteTableRouteArrayOutput {
	return i.ToSystemSdnconnectorRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorRouteTableRouteArray) ToSystemSdnconnectorRouteTableRouteArrayOutputWithContext(ctx context.Context) SystemSdnconnectorRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorRouteTableRouteArrayOutput)
}

type SystemSdnconnectorRouteTableRouteOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorRouteTableRoute)(nil)).Elem()
}

func (o SystemSdnconnectorRouteTableRouteOutput) ToSystemSdnconnectorRouteTableRouteOutput() SystemSdnconnectorRouteTableRouteOutput {
	return o
}

func (o SystemSdnconnectorRouteTableRouteOutput) ToSystemSdnconnectorRouteTableRouteOutputWithContext(ctx context.Context) SystemSdnconnectorRouteTableRouteOutput {
	return o
}

// Route name.
func (o SystemSdnconnectorRouteTableRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorRouteTableRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Next hop address.
func (o SystemSdnconnectorRouteTableRouteOutput) NextHop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorRouteTableRoute) *string { return v.NextHop }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorRouteTableRoute)(nil)).Elem()
}

func (o SystemSdnconnectorRouteTableRouteArrayOutput) ToSystemSdnconnectorRouteTableRouteArrayOutput() SystemSdnconnectorRouteTableRouteArrayOutput {
	return o
}

func (o SystemSdnconnectorRouteTableRouteArrayOutput) ToSystemSdnconnectorRouteTableRouteArrayOutputWithContext(ctx context.Context) SystemSdnconnectorRouteTableRouteArrayOutput {
	return o
}

func (o SystemSdnconnectorRouteTableRouteArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorRouteTableRoute {
		return vs[0].([]SystemSdnconnectorRouteTableRoute)[vs[1].(int)]
	}).(SystemSdnconnectorRouteTableRouteOutput)
}

type SystemSdnconnectorServerList struct {
	// IPv4 address.
	Ip *string `pulumi:"ip"`
}

// SystemSdnconnectorServerListInput is an input type that accepts SystemSdnconnectorServerListArgs and SystemSdnconnectorServerListOutput values.
// You can construct a concrete instance of `SystemSdnconnectorServerListInput` via:
//
//	SystemSdnconnectorServerListArgs{...}
type SystemSdnconnectorServerListInput interface {
	pulumi.Input

	ToSystemSdnconnectorServerListOutput() SystemSdnconnectorServerListOutput
	ToSystemSdnconnectorServerListOutputWithContext(context.Context) SystemSdnconnectorServerListOutput
}

type SystemSdnconnectorServerListArgs struct {
	// IPv4 address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SystemSdnconnectorServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorServerList)(nil)).Elem()
}

func (i SystemSdnconnectorServerListArgs) ToSystemSdnconnectorServerListOutput() SystemSdnconnectorServerListOutput {
	return i.ToSystemSdnconnectorServerListOutputWithContext(context.Background())
}

func (i SystemSdnconnectorServerListArgs) ToSystemSdnconnectorServerListOutputWithContext(ctx context.Context) SystemSdnconnectorServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorServerListOutput)
}

// SystemSdnconnectorServerListArrayInput is an input type that accepts SystemSdnconnectorServerListArray and SystemSdnconnectorServerListArrayOutput values.
// You can construct a concrete instance of `SystemSdnconnectorServerListArrayInput` via:
//
//	SystemSdnconnectorServerListArray{ SystemSdnconnectorServerListArgs{...} }
type SystemSdnconnectorServerListArrayInput interface {
	pulumi.Input

	ToSystemSdnconnectorServerListArrayOutput() SystemSdnconnectorServerListArrayOutput
	ToSystemSdnconnectorServerListArrayOutputWithContext(context.Context) SystemSdnconnectorServerListArrayOutput
}

type SystemSdnconnectorServerListArray []SystemSdnconnectorServerListInput

func (SystemSdnconnectorServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorServerList)(nil)).Elem()
}

func (i SystemSdnconnectorServerListArray) ToSystemSdnconnectorServerListArrayOutput() SystemSdnconnectorServerListArrayOutput {
	return i.ToSystemSdnconnectorServerListArrayOutputWithContext(context.Background())
}

func (i SystemSdnconnectorServerListArray) ToSystemSdnconnectorServerListArrayOutputWithContext(ctx context.Context) SystemSdnconnectorServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnconnectorServerListArrayOutput)
}

type SystemSdnconnectorServerListOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnconnectorServerList)(nil)).Elem()
}

func (o SystemSdnconnectorServerListOutput) ToSystemSdnconnectorServerListOutput() SystemSdnconnectorServerListOutput {
	return o
}

func (o SystemSdnconnectorServerListOutput) ToSystemSdnconnectorServerListOutputWithContext(ctx context.Context) SystemSdnconnectorServerListOutput {
	return o
}

// IPv4 address.
func (o SystemSdnconnectorServerListOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnconnectorServerList) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SystemSdnconnectorServerListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnconnectorServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnconnectorServerList)(nil)).Elem()
}

func (o SystemSdnconnectorServerListArrayOutput) ToSystemSdnconnectorServerListArrayOutput() SystemSdnconnectorServerListArrayOutput {
	return o
}

func (o SystemSdnconnectorServerListArrayOutput) ToSystemSdnconnectorServerListArrayOutputWithContext(ctx context.Context) SystemSdnconnectorServerListArrayOutput {
	return o
}

func (o SystemSdnconnectorServerListArrayOutput) Index(i pulumi.IntInput) SystemSdnconnectorServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnconnectorServerList {
		return vs[0].([]SystemSdnconnectorServerList)[vs[1].(int)]
	}).(SystemSdnconnectorServerListOutput)
}

type SystemSdwanDuplication struct {
	// Destination address6 or address6 group names. The structure of `dstaddr6` block is documented below.
	Dstaddr6s []SystemSdwanDuplicationDstaddr6 `pulumi:"dstaddr6s"`
	// Destination address or address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs []SystemSdwanDuplicationDstaddr `pulumi:"dstaddrs"`
	// Outgoing (egress) interfaces or zones. The structure of `dstintf` block is documented below.
	Dstintfs []SystemSdwanDuplicationDstintf `pulumi:"dstintfs"`
	// Duplication rule ID (1 - 255).
	Id *int `pulumi:"id"`
	// Enable/disable discarding of packets that have been duplicated. Valid values: `enable`, `disable`.
	PacketDeDuplication *string `pulumi:"packetDeDuplication"`
	// Configure packet duplication method. Valid values: `disable`, `force`, `on-demand`.
	PacketDuplication *string `pulumi:"packetDuplication"`
	// SD-WAN service rule ID list. The structure of `serviceId` block is documented below.
	ServiceIds []SystemSdwanDuplicationServiceId `pulumi:"serviceIds"`
	// Service and service group name. The structure of `service` block is documented below.
	Services []SystemSdwanDuplicationService `pulumi:"services"`
	// Enable/disable packet duplication matching health-check SLAs in service rule. Valid values: `enable`, `disable`.
	SlaMatchService *string `pulumi:"slaMatchService"`
	// Source address6 or address6 group names. The structure of `srcaddr6` block is documented below.
	Srcaddr6s []SystemSdwanDuplicationSrcaddr6 `pulumi:"srcaddr6s"`
	// Source address or address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs []SystemSdwanDuplicationSrcaddr `pulumi:"srcaddrs"`
	// Incoming (ingress) interfaces or zones. The structure of `srcintf` block is documented below.
	Srcintfs []SystemSdwanDuplicationSrcintf `pulumi:"srcintfs"`
}

// SystemSdwanDuplicationInput is an input type that accepts SystemSdwanDuplicationArgs and SystemSdwanDuplicationOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationInput` via:
//
//	SystemSdwanDuplicationArgs{...}
type SystemSdwanDuplicationInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationOutput() SystemSdwanDuplicationOutput
	ToSystemSdwanDuplicationOutputWithContext(context.Context) SystemSdwanDuplicationOutput
}

type SystemSdwanDuplicationArgs struct {
	// Destination address6 or address6 group names. The structure of `dstaddr6` block is documented below.
	Dstaddr6s SystemSdwanDuplicationDstaddr6ArrayInput `pulumi:"dstaddr6s"`
	// Destination address or address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs SystemSdwanDuplicationDstaddrArrayInput `pulumi:"dstaddrs"`
	// Outgoing (egress) interfaces or zones. The structure of `dstintf` block is documented below.
	Dstintfs SystemSdwanDuplicationDstintfArrayInput `pulumi:"dstintfs"`
	// Duplication rule ID (1 - 255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable discarding of packets that have been duplicated. Valid values: `enable`, `disable`.
	PacketDeDuplication pulumi.StringPtrInput `pulumi:"packetDeDuplication"`
	// Configure packet duplication method. Valid values: `disable`, `force`, `on-demand`.
	PacketDuplication pulumi.StringPtrInput `pulumi:"packetDuplication"`
	// SD-WAN service rule ID list. The structure of `serviceId` block is documented below.
	ServiceIds SystemSdwanDuplicationServiceIdArrayInput `pulumi:"serviceIds"`
	// Service and service group name. The structure of `service` block is documented below.
	Services SystemSdwanDuplicationServiceArrayInput `pulumi:"services"`
	// Enable/disable packet duplication matching health-check SLAs in service rule. Valid values: `enable`, `disable`.
	SlaMatchService pulumi.StringPtrInput `pulumi:"slaMatchService"`
	// Source address6 or address6 group names. The structure of `srcaddr6` block is documented below.
	Srcaddr6s SystemSdwanDuplicationSrcaddr6ArrayInput `pulumi:"srcaddr6s"`
	// Source address or address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs SystemSdwanDuplicationSrcaddrArrayInput `pulumi:"srcaddrs"`
	// Incoming (ingress) interfaces or zones. The structure of `srcintf` block is documented below.
	Srcintfs SystemSdwanDuplicationSrcintfArrayInput `pulumi:"srcintfs"`
}

func (SystemSdwanDuplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplication)(nil)).Elem()
}

func (i SystemSdwanDuplicationArgs) ToSystemSdwanDuplicationOutput() SystemSdwanDuplicationOutput {
	return i.ToSystemSdwanDuplicationOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationArgs) ToSystemSdwanDuplicationOutputWithContext(ctx context.Context) SystemSdwanDuplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationOutput)
}

// SystemSdwanDuplicationArrayInput is an input type that accepts SystemSdwanDuplicationArray and SystemSdwanDuplicationArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationArrayInput` via:
//
//	SystemSdwanDuplicationArray{ SystemSdwanDuplicationArgs{...} }
type SystemSdwanDuplicationArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationArrayOutput() SystemSdwanDuplicationArrayOutput
	ToSystemSdwanDuplicationArrayOutputWithContext(context.Context) SystemSdwanDuplicationArrayOutput
}

type SystemSdwanDuplicationArray []SystemSdwanDuplicationInput

func (SystemSdwanDuplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplication)(nil)).Elem()
}

func (i SystemSdwanDuplicationArray) ToSystemSdwanDuplicationArrayOutput() SystemSdwanDuplicationArrayOutput {
	return i.ToSystemSdwanDuplicationArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationArray) ToSystemSdwanDuplicationArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationArrayOutput)
}

type SystemSdwanDuplicationOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplication)(nil)).Elem()
}

func (o SystemSdwanDuplicationOutput) ToSystemSdwanDuplicationOutput() SystemSdwanDuplicationOutput {
	return o
}

func (o SystemSdwanDuplicationOutput) ToSystemSdwanDuplicationOutputWithContext(ctx context.Context) SystemSdwanDuplicationOutput {
	return o
}

// Destination address6 or address6 group names. The structure of `dstaddr6` block is documented below.
func (o SystemSdwanDuplicationOutput) Dstaddr6s() SystemSdwanDuplicationDstaddr6ArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationDstaddr6 { return v.Dstaddr6s }).(SystemSdwanDuplicationDstaddr6ArrayOutput)
}

// Destination address or address group names. The structure of `dstaddr` block is documented below.
func (o SystemSdwanDuplicationOutput) Dstaddrs() SystemSdwanDuplicationDstaddrArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationDstaddr { return v.Dstaddrs }).(SystemSdwanDuplicationDstaddrArrayOutput)
}

// Outgoing (egress) interfaces or zones. The structure of `dstintf` block is documented below.
func (o SystemSdwanDuplicationOutput) Dstintfs() SystemSdwanDuplicationDstintfArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationDstintf { return v.Dstintfs }).(SystemSdwanDuplicationDstintfArrayOutput)
}

// Duplication rule ID (1 - 255).
func (o SystemSdwanDuplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable discarding of packets that have been duplicated. Valid values: `enable`, `disable`.
func (o SystemSdwanDuplicationOutput) PacketDeDuplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) *string { return v.PacketDeDuplication }).(pulumi.StringPtrOutput)
}

// Configure packet duplication method. Valid values: `disable`, `force`, `on-demand`.
func (o SystemSdwanDuplicationOutput) PacketDuplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) *string { return v.PacketDuplication }).(pulumi.StringPtrOutput)
}

// SD-WAN service rule ID list. The structure of `serviceId` block is documented below.
func (o SystemSdwanDuplicationOutput) ServiceIds() SystemSdwanDuplicationServiceIdArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationServiceId { return v.ServiceIds }).(SystemSdwanDuplicationServiceIdArrayOutput)
}

// Service and service group name. The structure of `service` block is documented below.
func (o SystemSdwanDuplicationOutput) Services() SystemSdwanDuplicationServiceArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationService { return v.Services }).(SystemSdwanDuplicationServiceArrayOutput)
}

// Enable/disable packet duplication matching health-check SLAs in service rule. Valid values: `enable`, `disable`.
func (o SystemSdwanDuplicationOutput) SlaMatchService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) *string { return v.SlaMatchService }).(pulumi.StringPtrOutput)
}

// Source address6 or address6 group names. The structure of `srcaddr6` block is documented below.
func (o SystemSdwanDuplicationOutput) Srcaddr6s() SystemSdwanDuplicationSrcaddr6ArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationSrcaddr6 { return v.Srcaddr6s }).(SystemSdwanDuplicationSrcaddr6ArrayOutput)
}

// Source address or address group names. The structure of `srcaddr` block is documented below.
func (o SystemSdwanDuplicationOutput) Srcaddrs() SystemSdwanDuplicationSrcaddrArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationSrcaddr { return v.Srcaddrs }).(SystemSdwanDuplicationSrcaddrArrayOutput)
}

// Incoming (ingress) interfaces or zones. The structure of `srcintf` block is documented below.
func (o SystemSdwanDuplicationOutput) Srcintfs() SystemSdwanDuplicationSrcintfArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationSrcintf { return v.Srcintfs }).(SystemSdwanDuplicationSrcintfArrayOutput)
}

type SystemSdwanDuplicationArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplication)(nil)).Elem()
}

func (o SystemSdwanDuplicationArrayOutput) ToSystemSdwanDuplicationArrayOutput() SystemSdwanDuplicationArrayOutput {
	return o
}

func (o SystemSdwanDuplicationArrayOutput) ToSystemSdwanDuplicationArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationArrayOutput {
	return o
}

func (o SystemSdwanDuplicationArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplication {
		return vs[0].([]SystemSdwanDuplication)[vs[1].(int)]
	}).(SystemSdwanDuplicationOutput)
}

type SystemSdwanDuplicationDstaddr6 struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	//
	// The `srcaddr6` block supports:
	//
	// The `dstaddr6` block supports:
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationDstaddr6Input is an input type that accepts SystemSdwanDuplicationDstaddr6Args and SystemSdwanDuplicationDstaddr6Output values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstaddr6Input` via:
//
//	SystemSdwanDuplicationDstaddr6Args{...}
type SystemSdwanDuplicationDstaddr6Input interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstaddr6Output() SystemSdwanDuplicationDstaddr6Output
	ToSystemSdwanDuplicationDstaddr6OutputWithContext(context.Context) SystemSdwanDuplicationDstaddr6Output
}

type SystemSdwanDuplicationDstaddr6Args struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	//
	// The `srcaddr6` block supports:
	//
	// The `dstaddr6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstaddr6)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstaddr6Args) ToSystemSdwanDuplicationDstaddr6Output() SystemSdwanDuplicationDstaddr6Output {
	return i.ToSystemSdwanDuplicationDstaddr6OutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstaddr6Args) ToSystemSdwanDuplicationDstaddr6OutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstaddr6Output)
}

// SystemSdwanDuplicationDstaddr6ArrayInput is an input type that accepts SystemSdwanDuplicationDstaddr6Array and SystemSdwanDuplicationDstaddr6ArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstaddr6ArrayInput` via:
//
//	SystemSdwanDuplicationDstaddr6Array{ SystemSdwanDuplicationDstaddr6Args{...} }
type SystemSdwanDuplicationDstaddr6ArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstaddr6ArrayOutput() SystemSdwanDuplicationDstaddr6ArrayOutput
	ToSystemSdwanDuplicationDstaddr6ArrayOutputWithContext(context.Context) SystemSdwanDuplicationDstaddr6ArrayOutput
}

type SystemSdwanDuplicationDstaddr6Array []SystemSdwanDuplicationDstaddr6Input

func (SystemSdwanDuplicationDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstaddr6)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstaddr6Array) ToSystemSdwanDuplicationDstaddr6ArrayOutput() SystemSdwanDuplicationDstaddr6ArrayOutput {
	return i.ToSystemSdwanDuplicationDstaddr6ArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstaddr6Array) ToSystemSdwanDuplicationDstaddr6ArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstaddr6ArrayOutput)
}

type SystemSdwanDuplicationDstaddr6Output struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstaddr6)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstaddr6Output) ToSystemSdwanDuplicationDstaddr6Output() SystemSdwanDuplicationDstaddr6Output {
	return o
}

func (o SystemSdwanDuplicationDstaddr6Output) ToSystemSdwanDuplicationDstaddr6OutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddr6Output {
	return o
}

// Physical interface name.
//
// The `dst6` block supports:
//
// The `src6` block supports:
//
// The `srcaddr6` block supports:
//
// The `dstaddr6` block supports:
func (o SystemSdwanDuplicationDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstaddr6)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstaddr6ArrayOutput) ToSystemSdwanDuplicationDstaddr6ArrayOutput() SystemSdwanDuplicationDstaddr6ArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddr6ArrayOutput) ToSystemSdwanDuplicationDstaddr6ArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddr6ArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddr6ArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationDstaddr6 {
		return vs[0].([]SystemSdwanDuplicationDstaddr6)[vs[1].(int)]
	}).(SystemSdwanDuplicationDstaddr6Output)
}

type SystemSdwanDuplicationDstaddr struct {
	// Address6 or address6 group name.
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationDstaddrInput is an input type that accepts SystemSdwanDuplicationDstaddrArgs and SystemSdwanDuplicationDstaddrOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstaddrInput` via:
//
//	SystemSdwanDuplicationDstaddrArgs{...}
type SystemSdwanDuplicationDstaddrInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstaddrOutput() SystemSdwanDuplicationDstaddrOutput
	ToSystemSdwanDuplicationDstaddrOutputWithContext(context.Context) SystemSdwanDuplicationDstaddrOutput
}

type SystemSdwanDuplicationDstaddrArgs struct {
	// Address6 or address6 group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstaddr)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstaddrArgs) ToSystemSdwanDuplicationDstaddrOutput() SystemSdwanDuplicationDstaddrOutput {
	return i.ToSystemSdwanDuplicationDstaddrOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstaddrArgs) ToSystemSdwanDuplicationDstaddrOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstaddrOutput)
}

// SystemSdwanDuplicationDstaddrArrayInput is an input type that accepts SystemSdwanDuplicationDstaddrArray and SystemSdwanDuplicationDstaddrArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstaddrArrayInput` via:
//
//	SystemSdwanDuplicationDstaddrArray{ SystemSdwanDuplicationDstaddrArgs{...} }
type SystemSdwanDuplicationDstaddrArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstaddrArrayOutput() SystemSdwanDuplicationDstaddrArrayOutput
	ToSystemSdwanDuplicationDstaddrArrayOutputWithContext(context.Context) SystemSdwanDuplicationDstaddrArrayOutput
}

type SystemSdwanDuplicationDstaddrArray []SystemSdwanDuplicationDstaddrInput

func (SystemSdwanDuplicationDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstaddr)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstaddrArray) ToSystemSdwanDuplicationDstaddrArrayOutput() SystemSdwanDuplicationDstaddrArrayOutput {
	return i.ToSystemSdwanDuplicationDstaddrArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstaddrArray) ToSystemSdwanDuplicationDstaddrArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstaddrArrayOutput)
}

type SystemSdwanDuplicationDstaddrOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstaddr)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstaddrOutput) ToSystemSdwanDuplicationDstaddrOutput() SystemSdwanDuplicationDstaddrOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddrOutput) ToSystemSdwanDuplicationDstaddrOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddrOutput {
	return o
}

// Address6 or address6 group name.
func (o SystemSdwanDuplicationDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationDstaddrArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstaddr)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstaddrArrayOutput) ToSystemSdwanDuplicationDstaddrArrayOutput() SystemSdwanDuplicationDstaddrArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddrArrayOutput) ToSystemSdwanDuplicationDstaddrArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddrArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddrArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationDstaddr {
		return vs[0].([]SystemSdwanDuplicationDstaddr)[vs[1].(int)]
	}).(SystemSdwanDuplicationDstaddrOutput)
}

type SystemSdwanDuplicationDstintf struct {
	// Interface, zone or SDWAN zone name.
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationDstintfInput is an input type that accepts SystemSdwanDuplicationDstintfArgs and SystemSdwanDuplicationDstintfOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstintfInput` via:
//
//	SystemSdwanDuplicationDstintfArgs{...}
type SystemSdwanDuplicationDstintfInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstintfOutput() SystemSdwanDuplicationDstintfOutput
	ToSystemSdwanDuplicationDstintfOutputWithContext(context.Context) SystemSdwanDuplicationDstintfOutput
}

type SystemSdwanDuplicationDstintfArgs struct {
	// Interface, zone or SDWAN zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstintf)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstintfArgs) ToSystemSdwanDuplicationDstintfOutput() SystemSdwanDuplicationDstintfOutput {
	return i.ToSystemSdwanDuplicationDstintfOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstintfArgs) ToSystemSdwanDuplicationDstintfOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstintfOutput)
}

// SystemSdwanDuplicationDstintfArrayInput is an input type that accepts SystemSdwanDuplicationDstintfArray and SystemSdwanDuplicationDstintfArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstintfArrayInput` via:
//
//	SystemSdwanDuplicationDstintfArray{ SystemSdwanDuplicationDstintfArgs{...} }
type SystemSdwanDuplicationDstintfArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstintfArrayOutput() SystemSdwanDuplicationDstintfArrayOutput
	ToSystemSdwanDuplicationDstintfArrayOutputWithContext(context.Context) SystemSdwanDuplicationDstintfArrayOutput
}

type SystemSdwanDuplicationDstintfArray []SystemSdwanDuplicationDstintfInput

func (SystemSdwanDuplicationDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstintf)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstintfArray) ToSystemSdwanDuplicationDstintfArrayOutput() SystemSdwanDuplicationDstintfArrayOutput {
	return i.ToSystemSdwanDuplicationDstintfArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstintfArray) ToSystemSdwanDuplicationDstintfArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstintfArrayOutput)
}

type SystemSdwanDuplicationDstintfOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstintf)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstintfOutput) ToSystemSdwanDuplicationDstintfOutput() SystemSdwanDuplicationDstintfOutput {
	return o
}

func (o SystemSdwanDuplicationDstintfOutput) ToSystemSdwanDuplicationDstintfOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstintfOutput {
	return o
}

// Interface, zone or SDWAN zone name.
func (o SystemSdwanDuplicationDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationDstintfArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstintf)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstintfArrayOutput) ToSystemSdwanDuplicationDstintfArrayOutput() SystemSdwanDuplicationDstintfArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstintfArrayOutput) ToSystemSdwanDuplicationDstintfArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstintfArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstintfArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationDstintf {
		return vs[0].([]SystemSdwanDuplicationDstintf)[vs[1].(int)]
	}).(SystemSdwanDuplicationDstintfOutput)
}

type SystemSdwanDuplicationService struct {
	// Service and service group name.
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationServiceInput is an input type that accepts SystemSdwanDuplicationServiceArgs and SystemSdwanDuplicationServiceOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationServiceInput` via:
//
//	SystemSdwanDuplicationServiceArgs{...}
type SystemSdwanDuplicationServiceInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationServiceOutput() SystemSdwanDuplicationServiceOutput
	ToSystemSdwanDuplicationServiceOutputWithContext(context.Context) SystemSdwanDuplicationServiceOutput
}

type SystemSdwanDuplicationServiceArgs struct {
	// Service and service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationService)(nil)).Elem()
}

func (i SystemSdwanDuplicationServiceArgs) ToSystemSdwanDuplicationServiceOutput() SystemSdwanDuplicationServiceOutput {
	return i.ToSystemSdwanDuplicationServiceOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationServiceArgs) ToSystemSdwanDuplicationServiceOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationServiceOutput)
}

// SystemSdwanDuplicationServiceArrayInput is an input type that accepts SystemSdwanDuplicationServiceArray and SystemSdwanDuplicationServiceArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationServiceArrayInput` via:
//
//	SystemSdwanDuplicationServiceArray{ SystemSdwanDuplicationServiceArgs{...} }
type SystemSdwanDuplicationServiceArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationServiceArrayOutput() SystemSdwanDuplicationServiceArrayOutput
	ToSystemSdwanDuplicationServiceArrayOutputWithContext(context.Context) SystemSdwanDuplicationServiceArrayOutput
}

type SystemSdwanDuplicationServiceArray []SystemSdwanDuplicationServiceInput

func (SystemSdwanDuplicationServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationService)(nil)).Elem()
}

func (i SystemSdwanDuplicationServiceArray) ToSystemSdwanDuplicationServiceArrayOutput() SystemSdwanDuplicationServiceArrayOutput {
	return i.ToSystemSdwanDuplicationServiceArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationServiceArray) ToSystemSdwanDuplicationServiceArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationServiceArrayOutput)
}

type SystemSdwanDuplicationServiceOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationService)(nil)).Elem()
}

func (o SystemSdwanDuplicationServiceOutput) ToSystemSdwanDuplicationServiceOutput() SystemSdwanDuplicationServiceOutput {
	return o
}

func (o SystemSdwanDuplicationServiceOutput) ToSystemSdwanDuplicationServiceOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceOutput {
	return o
}

// Service and service group name.
func (o SystemSdwanDuplicationServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationServiceArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationService)(nil)).Elem()
}

func (o SystemSdwanDuplicationServiceArrayOutput) ToSystemSdwanDuplicationServiceArrayOutput() SystemSdwanDuplicationServiceArrayOutput {
	return o
}

func (o SystemSdwanDuplicationServiceArrayOutput) ToSystemSdwanDuplicationServiceArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceArrayOutput {
	return o
}

func (o SystemSdwanDuplicationServiceArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationService {
		return vs[0].([]SystemSdwanDuplicationService)[vs[1].(int)]
	}).(SystemSdwanDuplicationServiceOutput)
}

type SystemSdwanDuplicationServiceId struct {
	// SD-WAN service rule ID.
	Id *int `pulumi:"id"`
}

// SystemSdwanDuplicationServiceIdInput is an input type that accepts SystemSdwanDuplicationServiceIdArgs and SystemSdwanDuplicationServiceIdOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationServiceIdInput` via:
//
//	SystemSdwanDuplicationServiceIdArgs{...}
type SystemSdwanDuplicationServiceIdInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationServiceIdOutput() SystemSdwanDuplicationServiceIdOutput
	ToSystemSdwanDuplicationServiceIdOutputWithContext(context.Context) SystemSdwanDuplicationServiceIdOutput
}

type SystemSdwanDuplicationServiceIdArgs struct {
	// SD-WAN service rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemSdwanDuplicationServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationServiceId)(nil)).Elem()
}

func (i SystemSdwanDuplicationServiceIdArgs) ToSystemSdwanDuplicationServiceIdOutput() SystemSdwanDuplicationServiceIdOutput {
	return i.ToSystemSdwanDuplicationServiceIdOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationServiceIdArgs) ToSystemSdwanDuplicationServiceIdOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationServiceIdOutput)
}

// SystemSdwanDuplicationServiceIdArrayInput is an input type that accepts SystemSdwanDuplicationServiceIdArray and SystemSdwanDuplicationServiceIdArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationServiceIdArrayInput` via:
//
//	SystemSdwanDuplicationServiceIdArray{ SystemSdwanDuplicationServiceIdArgs{...} }
type SystemSdwanDuplicationServiceIdArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationServiceIdArrayOutput() SystemSdwanDuplicationServiceIdArrayOutput
	ToSystemSdwanDuplicationServiceIdArrayOutputWithContext(context.Context) SystemSdwanDuplicationServiceIdArrayOutput
}

type SystemSdwanDuplicationServiceIdArray []SystemSdwanDuplicationServiceIdInput

func (SystemSdwanDuplicationServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationServiceId)(nil)).Elem()
}

func (i SystemSdwanDuplicationServiceIdArray) ToSystemSdwanDuplicationServiceIdArrayOutput() SystemSdwanDuplicationServiceIdArrayOutput {
	return i.ToSystemSdwanDuplicationServiceIdArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationServiceIdArray) ToSystemSdwanDuplicationServiceIdArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationServiceIdArrayOutput)
}

type SystemSdwanDuplicationServiceIdOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationServiceId)(nil)).Elem()
}

func (o SystemSdwanDuplicationServiceIdOutput) ToSystemSdwanDuplicationServiceIdOutput() SystemSdwanDuplicationServiceIdOutput {
	return o
}

func (o SystemSdwanDuplicationServiceIdOutput) ToSystemSdwanDuplicationServiceIdOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceIdOutput {
	return o
}

// SD-WAN service rule ID.
func (o SystemSdwanDuplicationServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemSdwanDuplicationServiceIdArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationServiceId)(nil)).Elem()
}

func (o SystemSdwanDuplicationServiceIdArrayOutput) ToSystemSdwanDuplicationServiceIdArrayOutput() SystemSdwanDuplicationServiceIdArrayOutput {
	return o
}

func (o SystemSdwanDuplicationServiceIdArrayOutput) ToSystemSdwanDuplicationServiceIdArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceIdArrayOutput {
	return o
}

func (o SystemSdwanDuplicationServiceIdArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationServiceId {
		return vs[0].([]SystemSdwanDuplicationServiceId)[vs[1].(int)]
	}).(SystemSdwanDuplicationServiceIdOutput)
}

type SystemSdwanDuplicationSrcaddr6 struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	//
	// The `srcaddr6` block supports:
	//
	// The `dstaddr6` block supports:
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationSrcaddr6Input is an input type that accepts SystemSdwanDuplicationSrcaddr6Args and SystemSdwanDuplicationSrcaddr6Output values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcaddr6Input` via:
//
//	SystemSdwanDuplicationSrcaddr6Args{...}
type SystemSdwanDuplicationSrcaddr6Input interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcaddr6Output() SystemSdwanDuplicationSrcaddr6Output
	ToSystemSdwanDuplicationSrcaddr6OutputWithContext(context.Context) SystemSdwanDuplicationSrcaddr6Output
}

type SystemSdwanDuplicationSrcaddr6Args struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	//
	// The `srcaddr6` block supports:
	//
	// The `dstaddr6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationSrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcaddr6Args) ToSystemSdwanDuplicationSrcaddr6Output() SystemSdwanDuplicationSrcaddr6Output {
	return i.ToSystemSdwanDuplicationSrcaddr6OutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcaddr6Args) ToSystemSdwanDuplicationSrcaddr6OutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcaddr6Output)
}

// SystemSdwanDuplicationSrcaddr6ArrayInput is an input type that accepts SystemSdwanDuplicationSrcaddr6Array and SystemSdwanDuplicationSrcaddr6ArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcaddr6ArrayInput` via:
//
//	SystemSdwanDuplicationSrcaddr6Array{ SystemSdwanDuplicationSrcaddr6Args{...} }
type SystemSdwanDuplicationSrcaddr6ArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcaddr6ArrayOutput() SystemSdwanDuplicationSrcaddr6ArrayOutput
	ToSystemSdwanDuplicationSrcaddr6ArrayOutputWithContext(context.Context) SystemSdwanDuplicationSrcaddr6ArrayOutput
}

type SystemSdwanDuplicationSrcaddr6Array []SystemSdwanDuplicationSrcaddr6Input

func (SystemSdwanDuplicationSrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcaddr6Array) ToSystemSdwanDuplicationSrcaddr6ArrayOutput() SystemSdwanDuplicationSrcaddr6ArrayOutput {
	return i.ToSystemSdwanDuplicationSrcaddr6ArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcaddr6Array) ToSystemSdwanDuplicationSrcaddr6ArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcaddr6ArrayOutput)
}

type SystemSdwanDuplicationSrcaddr6Output struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcaddr6Output) ToSystemSdwanDuplicationSrcaddr6Output() SystemSdwanDuplicationSrcaddr6Output {
	return o
}

func (o SystemSdwanDuplicationSrcaddr6Output) ToSystemSdwanDuplicationSrcaddr6OutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddr6Output {
	return o
}

// Physical interface name.
//
// The `dst6` block supports:
//
// The `src6` block supports:
//
// The `srcaddr6` block supports:
//
// The `dstaddr6` block supports:
func (o SystemSdwanDuplicationSrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationSrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationSrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcaddr6ArrayOutput) ToSystemSdwanDuplicationSrcaddr6ArrayOutput() SystemSdwanDuplicationSrcaddr6ArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddr6ArrayOutput) ToSystemSdwanDuplicationSrcaddr6ArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddr6ArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddr6ArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationSrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationSrcaddr6 {
		return vs[0].([]SystemSdwanDuplicationSrcaddr6)[vs[1].(int)]
	}).(SystemSdwanDuplicationSrcaddr6Output)
}

type SystemSdwanDuplicationSrcaddr struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationSrcaddrInput is an input type that accepts SystemSdwanDuplicationSrcaddrArgs and SystemSdwanDuplicationSrcaddrOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcaddrInput` via:
//
//	SystemSdwanDuplicationSrcaddrArgs{...}
type SystemSdwanDuplicationSrcaddrInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcaddrOutput() SystemSdwanDuplicationSrcaddrOutput
	ToSystemSdwanDuplicationSrcaddrOutputWithContext(context.Context) SystemSdwanDuplicationSrcaddrOutput
}

type SystemSdwanDuplicationSrcaddrArgs struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationSrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcaddr)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcaddrArgs) ToSystemSdwanDuplicationSrcaddrOutput() SystemSdwanDuplicationSrcaddrOutput {
	return i.ToSystemSdwanDuplicationSrcaddrOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcaddrArgs) ToSystemSdwanDuplicationSrcaddrOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcaddrOutput)
}

// SystemSdwanDuplicationSrcaddrArrayInput is an input type that accepts SystemSdwanDuplicationSrcaddrArray and SystemSdwanDuplicationSrcaddrArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcaddrArrayInput` via:
//
//	SystemSdwanDuplicationSrcaddrArray{ SystemSdwanDuplicationSrcaddrArgs{...} }
type SystemSdwanDuplicationSrcaddrArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcaddrArrayOutput() SystemSdwanDuplicationSrcaddrArrayOutput
	ToSystemSdwanDuplicationSrcaddrArrayOutputWithContext(context.Context) SystemSdwanDuplicationSrcaddrArrayOutput
}

type SystemSdwanDuplicationSrcaddrArray []SystemSdwanDuplicationSrcaddrInput

func (SystemSdwanDuplicationSrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcaddr)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcaddrArray) ToSystemSdwanDuplicationSrcaddrArrayOutput() SystemSdwanDuplicationSrcaddrArrayOutput {
	return i.ToSystemSdwanDuplicationSrcaddrArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcaddrArray) ToSystemSdwanDuplicationSrcaddrArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcaddrArrayOutput)
}

type SystemSdwanDuplicationSrcaddrOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcaddr)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcaddrOutput) ToSystemSdwanDuplicationSrcaddrOutput() SystemSdwanDuplicationSrcaddrOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddrOutput) ToSystemSdwanDuplicationSrcaddrOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddrOutput {
	return o
}

// Address or address group name.
func (o SystemSdwanDuplicationSrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationSrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationSrcaddrArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcaddr)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcaddrArrayOutput) ToSystemSdwanDuplicationSrcaddrArrayOutput() SystemSdwanDuplicationSrcaddrArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddrArrayOutput) ToSystemSdwanDuplicationSrcaddrArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddrArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddrArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationSrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationSrcaddr {
		return vs[0].([]SystemSdwanDuplicationSrcaddr)[vs[1].(int)]
	}).(SystemSdwanDuplicationSrcaddrOutput)
}

type SystemSdwanDuplicationSrcintf struct {
	// Interface, zone or SDWAN zone name.
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationSrcintfInput is an input type that accepts SystemSdwanDuplicationSrcintfArgs and SystemSdwanDuplicationSrcintfOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcintfInput` via:
//
//	SystemSdwanDuplicationSrcintfArgs{...}
type SystemSdwanDuplicationSrcintfInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcintfOutput() SystemSdwanDuplicationSrcintfOutput
	ToSystemSdwanDuplicationSrcintfOutputWithContext(context.Context) SystemSdwanDuplicationSrcintfOutput
}

type SystemSdwanDuplicationSrcintfArgs struct {
	// Interface, zone or SDWAN zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationSrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcintf)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcintfArgs) ToSystemSdwanDuplicationSrcintfOutput() SystemSdwanDuplicationSrcintfOutput {
	return i.ToSystemSdwanDuplicationSrcintfOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcintfArgs) ToSystemSdwanDuplicationSrcintfOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcintfOutput)
}

// SystemSdwanDuplicationSrcintfArrayInput is an input type that accepts SystemSdwanDuplicationSrcintfArray and SystemSdwanDuplicationSrcintfArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcintfArrayInput` via:
//
//	SystemSdwanDuplicationSrcintfArray{ SystemSdwanDuplicationSrcintfArgs{...} }
type SystemSdwanDuplicationSrcintfArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcintfArrayOutput() SystemSdwanDuplicationSrcintfArrayOutput
	ToSystemSdwanDuplicationSrcintfArrayOutputWithContext(context.Context) SystemSdwanDuplicationSrcintfArrayOutput
}

type SystemSdwanDuplicationSrcintfArray []SystemSdwanDuplicationSrcintfInput

func (SystemSdwanDuplicationSrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcintf)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcintfArray) ToSystemSdwanDuplicationSrcintfArrayOutput() SystemSdwanDuplicationSrcintfArrayOutput {
	return i.ToSystemSdwanDuplicationSrcintfArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcintfArray) ToSystemSdwanDuplicationSrcintfArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcintfArrayOutput)
}

type SystemSdwanDuplicationSrcintfOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcintf)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcintfOutput) ToSystemSdwanDuplicationSrcintfOutput() SystemSdwanDuplicationSrcintfOutput {
	return o
}

func (o SystemSdwanDuplicationSrcintfOutput) ToSystemSdwanDuplicationSrcintfOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcintfOutput {
	return o
}

// Interface, zone or SDWAN zone name.
func (o SystemSdwanDuplicationSrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationSrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationSrcintfArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcintf)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcintfArrayOutput) ToSystemSdwanDuplicationSrcintfArrayOutput() SystemSdwanDuplicationSrcintfArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcintfArrayOutput) ToSystemSdwanDuplicationSrcintfArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcintfArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcintfArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationSrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationSrcintf {
		return vs[0].([]SystemSdwanDuplicationSrcintf)[vs[1].(int)]
	}).(SystemSdwanDuplicationSrcintfOutput)
}

type SystemSdwanFailAlertInterface struct {
	// Physical interface name.
	Name *string `pulumi:"name"`
}

// SystemSdwanFailAlertInterfaceInput is an input type that accepts SystemSdwanFailAlertInterfaceArgs and SystemSdwanFailAlertInterfaceOutput values.
// You can construct a concrete instance of `SystemSdwanFailAlertInterfaceInput` via:
//
//	SystemSdwanFailAlertInterfaceArgs{...}
type SystemSdwanFailAlertInterfaceInput interface {
	pulumi.Input

	ToSystemSdwanFailAlertInterfaceOutput() SystemSdwanFailAlertInterfaceOutput
	ToSystemSdwanFailAlertInterfaceOutputWithContext(context.Context) SystemSdwanFailAlertInterfaceOutput
}

type SystemSdwanFailAlertInterfaceArgs struct {
	// Physical interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanFailAlertInterface)(nil)).Elem()
}

func (i SystemSdwanFailAlertInterfaceArgs) ToSystemSdwanFailAlertInterfaceOutput() SystemSdwanFailAlertInterfaceOutput {
	return i.ToSystemSdwanFailAlertInterfaceOutputWithContext(context.Background())
}

func (i SystemSdwanFailAlertInterfaceArgs) ToSystemSdwanFailAlertInterfaceOutputWithContext(ctx context.Context) SystemSdwanFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanFailAlertInterfaceOutput)
}

// SystemSdwanFailAlertInterfaceArrayInput is an input type that accepts SystemSdwanFailAlertInterfaceArray and SystemSdwanFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemSdwanFailAlertInterfaceArrayInput` via:
//
//	SystemSdwanFailAlertInterfaceArray{ SystemSdwanFailAlertInterfaceArgs{...} }
type SystemSdwanFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToSystemSdwanFailAlertInterfaceArrayOutput() SystemSdwanFailAlertInterfaceArrayOutput
	ToSystemSdwanFailAlertInterfaceArrayOutputWithContext(context.Context) SystemSdwanFailAlertInterfaceArrayOutput
}

type SystemSdwanFailAlertInterfaceArray []SystemSdwanFailAlertInterfaceInput

func (SystemSdwanFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanFailAlertInterface)(nil)).Elem()
}

func (i SystemSdwanFailAlertInterfaceArray) ToSystemSdwanFailAlertInterfaceArrayOutput() SystemSdwanFailAlertInterfaceArrayOutput {
	return i.ToSystemSdwanFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemSdwanFailAlertInterfaceArray) ToSystemSdwanFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemSdwanFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanFailAlertInterfaceArrayOutput)
}

type SystemSdwanFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (SystemSdwanFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanFailAlertInterface)(nil)).Elem()
}

func (o SystemSdwanFailAlertInterfaceOutput) ToSystemSdwanFailAlertInterfaceOutput() SystemSdwanFailAlertInterfaceOutput {
	return o
}

func (o SystemSdwanFailAlertInterfaceOutput) ToSystemSdwanFailAlertInterfaceOutputWithContext(ctx context.Context) SystemSdwanFailAlertInterfaceOutput {
	return o
}

// Physical interface name.
func (o SystemSdwanFailAlertInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanFailAlertInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanFailAlertInterface)(nil)).Elem()
}

func (o SystemSdwanFailAlertInterfaceArrayOutput) ToSystemSdwanFailAlertInterfaceArrayOutput() SystemSdwanFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemSdwanFailAlertInterfaceArrayOutput) ToSystemSdwanFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemSdwanFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemSdwanFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) SystemSdwanFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanFailAlertInterface {
		return vs[0].([]SystemSdwanFailAlertInterface)[vs[1].(int)]
	}).(SystemSdwanFailAlertInterfaceOutput)
}

type SystemSdwanHealthCheck struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// The mode determining how to detect the server.
	DetectMode *string `pulumi:"detectMode"`
	// Differentiated services code point (DSCP) in the IP header of the probe packet.
	Diffservcode *string `pulumi:"diffservcode"`
	// Response IP expected from DNS server if the protocol is DNS.
	DnsMatchIp *string `pulumi:"dnsMatchIp"`
	// Fully qualified domain name to resolve for the DNS probe.
	DnsRequestDomain *string `pulumi:"dnsRequestDomain"`
	// Enable/disable embedding measured health information. Valid values: `enable`, `disable`.
	EmbedMeasuredHealth *string `pulumi:"embedMeasuredHealth"`
	// Number of failures before server is considered lost (1 - 3600, default = 5).
	Failtime *int `pulumi:"failtime"`
	// Full path and file name on the FTP server to download for FTP health-check to probe.
	FtpFile *string `pulumi:"ftpFile"`
	// FTP mode. Valid values: `passive`, `port`.
	FtpMode *string `pulumi:"ftpMode"`
	// HA election priority (1 - 50).
	HaPriority *int `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent *string `pulumi:"httpAgent"`
	// URL used to communicate with the server if the protocol if the protocol is HTTP.
	HttpGet *string `pulumi:"httpGet"`
	// Response string expected from the server if the protocol is HTTP.
	HttpMatch *string `pulumi:"httpMatch"`
	// Status check interval in milliseconds, or the time between attempting to connect to the server (500 - 3600*1000 msec, default = 500).
	Interval *int `pulumi:"interval"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members []SystemSdwanHealthCheckMember `pulumi:"members"`
	// Codec to use for MOS calculation (default = g711). Valid values: `g711`, `g722`, `g729`.
	MosCodec *string `pulumi:"mosCodec"`
	// Health check name.
	Name *string `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize *int `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password *string `pulumi:"password"`
	// Port number used to communicate with the server over the selected protocol (0-65535, default = 0, auto select. http, twamp: 80, udp-echo, tcp-echo: 7, dns: 53, ftp: 21).
	Port *int `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount *int `pulumi:"probeCount"`
	// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
	ProbePackets *string `pulumi:"probePackets"`
	// Time to wait before a probe packet is considered lost (500 - 3600*1000 msec, default = 500).
	ProbeTimeout *int `pulumi:"probeTimeout"`
	// Protocol used to determine if the FortiGate can communicate with the server.
	Protocol *string `pulumi:"protocol"`
	// Method to measure the quality of tcp-connect. Valid values: `half-open`, `half-close`.
	QualityMeasuredMethod *string `pulumi:"qualityMeasuredMethod"`
	// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
	Recoverytime *int `pulumi:"recoverytime"`
	// Twamp controller security mode. Valid values: `none`, `authentication`.
	SecurityMode *string `pulumi:"securityMode"`
	// IP address or FQDN name of the server.
	Server *string `pulumi:"server"`
	// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
	SlaFailLogPeriod *int `pulumi:"slaFailLogPeriod"`
	// Select the ID from the SLA sub-table. The selected SLA's priority value will be distributed into the routing table (0 - 32, default = 0).
	SlaIdRedistribute *int `pulumi:"slaIdRedistribute"`
	// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
	SlaPassLogPeriod *int `pulumi:"slaPassLogPeriod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas []SystemSdwanHealthCheckSla `pulumi:"slas"`
	// Source IP address used in the health-check packet to the server.
	Source *string `pulumi:"source"`
	// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
	SystemDns *string `pulumi:"systemDns"`
	// Alert threshold for jitter (ms, default = 0).
	ThresholdAlertJitter *int `pulumi:"thresholdAlertJitter"`
	// Alert threshold for latency (ms, default = 0).
	ThresholdAlertLatency *int `pulumi:"thresholdAlertLatency"`
	// Alert threshold for packet loss (percentage, default = 0).
	ThresholdAlertPacketloss *int `pulumi:"thresholdAlertPacketloss"`
	// Warning threshold for jitter (ms, default = 0).
	ThresholdWarningJitter *int `pulumi:"thresholdWarningJitter"`
	// Warning threshold for latency (ms, default = 0).
	ThresholdWarningLatency *int `pulumi:"thresholdWarningLatency"`
	// Warning threshold for packet loss (percentage, default = 0).
	ThresholdWarningPacketloss *int `pulumi:"thresholdWarningPacketloss"`
	// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
	UpdateCascadeInterface *string `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route. Valid values: `enable`, `disable`.
	UpdateStaticRoute *string `pulumi:"updateStaticRoute"`
	// The user name to access probe server.
	User *string `pulumi:"user"`
	// Virtual Routing Forwarding ID.
	Vrf *int `pulumi:"vrf"`
}

// SystemSdwanHealthCheckInput is an input type that accepts SystemSdwanHealthCheckArgs and SystemSdwanHealthCheckOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckInput` via:
//
//	SystemSdwanHealthCheckArgs{...}
type SystemSdwanHealthCheckInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckOutput() SystemSdwanHealthCheckOutput
	ToSystemSdwanHealthCheckOutputWithContext(context.Context) SystemSdwanHealthCheckOutput
}

type SystemSdwanHealthCheckArgs struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// The mode determining how to detect the server.
	DetectMode pulumi.StringPtrInput `pulumi:"detectMode"`
	// Differentiated services code point (DSCP) in the IP header of the probe packet.
	Diffservcode pulumi.StringPtrInput `pulumi:"diffservcode"`
	// Response IP expected from DNS server if the protocol is DNS.
	DnsMatchIp pulumi.StringPtrInput `pulumi:"dnsMatchIp"`
	// Fully qualified domain name to resolve for the DNS probe.
	DnsRequestDomain pulumi.StringPtrInput `pulumi:"dnsRequestDomain"`
	// Enable/disable embedding measured health information. Valid values: `enable`, `disable`.
	EmbedMeasuredHealth pulumi.StringPtrInput `pulumi:"embedMeasuredHealth"`
	// Number of failures before server is considered lost (1 - 3600, default = 5).
	Failtime pulumi.IntPtrInput `pulumi:"failtime"`
	// Full path and file name on the FTP server to download for FTP health-check to probe.
	FtpFile pulumi.StringPtrInput `pulumi:"ftpFile"`
	// FTP mode. Valid values: `passive`, `port`.
	FtpMode pulumi.StringPtrInput `pulumi:"ftpMode"`
	// HA election priority (1 - 50).
	HaPriority pulumi.IntPtrInput `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent pulumi.StringPtrInput `pulumi:"httpAgent"`
	// URL used to communicate with the server if the protocol if the protocol is HTTP.
	HttpGet pulumi.StringPtrInput `pulumi:"httpGet"`
	// Response string expected from the server if the protocol is HTTP.
	HttpMatch pulumi.StringPtrInput `pulumi:"httpMatch"`
	// Status check interval in milliseconds, or the time between attempting to connect to the server (500 - 3600*1000 msec, default = 500).
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members SystemSdwanHealthCheckMemberArrayInput `pulumi:"members"`
	// Codec to use for MOS calculation (default = g711). Valid values: `g711`, `g722`, `g729`.
	MosCodec pulumi.StringPtrInput `pulumi:"mosCodec"`
	// Health check name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize pulumi.IntPtrInput `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number used to communicate with the server over the selected protocol (0-65535, default = 0, auto select. http, twamp: 80, udp-echo, tcp-echo: 7, dns: 53, ftp: 21).
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount pulumi.IntPtrInput `pulumi:"probeCount"`
	// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
	ProbePackets pulumi.StringPtrInput `pulumi:"probePackets"`
	// Time to wait before a probe packet is considered lost (500 - 3600*1000 msec, default = 500).
	ProbeTimeout pulumi.IntPtrInput `pulumi:"probeTimeout"`
	// Protocol used to determine if the FortiGate can communicate with the server.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Method to measure the quality of tcp-connect. Valid values: `half-open`, `half-close`.
	QualityMeasuredMethod pulumi.StringPtrInput `pulumi:"qualityMeasuredMethod"`
	// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
	Recoverytime pulumi.IntPtrInput `pulumi:"recoverytime"`
	// Twamp controller security mode. Valid values: `none`, `authentication`.
	SecurityMode pulumi.StringPtrInput `pulumi:"securityMode"`
	// IP address or FQDN name of the server.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
	SlaFailLogPeriod pulumi.IntPtrInput `pulumi:"slaFailLogPeriod"`
	// Select the ID from the SLA sub-table. The selected SLA's priority value will be distributed into the routing table (0 - 32, default = 0).
	SlaIdRedistribute pulumi.IntPtrInput `pulumi:"slaIdRedistribute"`
	// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
	SlaPassLogPeriod pulumi.IntPtrInput `pulumi:"slaPassLogPeriod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas SystemSdwanHealthCheckSlaArrayInput `pulumi:"slas"`
	// Source IP address used in the health-check packet to the server.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
	SystemDns pulumi.StringPtrInput `pulumi:"systemDns"`
	// Alert threshold for jitter (ms, default = 0).
	ThresholdAlertJitter pulumi.IntPtrInput `pulumi:"thresholdAlertJitter"`
	// Alert threshold for latency (ms, default = 0).
	ThresholdAlertLatency pulumi.IntPtrInput `pulumi:"thresholdAlertLatency"`
	// Alert threshold for packet loss (percentage, default = 0).
	ThresholdAlertPacketloss pulumi.IntPtrInput `pulumi:"thresholdAlertPacketloss"`
	// Warning threshold for jitter (ms, default = 0).
	ThresholdWarningJitter pulumi.IntPtrInput `pulumi:"thresholdWarningJitter"`
	// Warning threshold for latency (ms, default = 0).
	ThresholdWarningLatency pulumi.IntPtrInput `pulumi:"thresholdWarningLatency"`
	// Warning threshold for packet loss (percentage, default = 0).
	ThresholdWarningPacketloss pulumi.IntPtrInput `pulumi:"thresholdWarningPacketloss"`
	// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
	UpdateCascadeInterface pulumi.StringPtrInput `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route. Valid values: `enable`, `disable`.
	UpdateStaticRoute pulumi.StringPtrInput `pulumi:"updateStaticRoute"`
	// The user name to access probe server.
	User pulumi.StringPtrInput `pulumi:"user"`
	// Virtual Routing Forwarding ID.
	Vrf pulumi.IntPtrInput `pulumi:"vrf"`
}

func (SystemSdwanHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheck)(nil)).Elem()
}

func (i SystemSdwanHealthCheckArgs) ToSystemSdwanHealthCheckOutput() SystemSdwanHealthCheckOutput {
	return i.ToSystemSdwanHealthCheckOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckArgs) ToSystemSdwanHealthCheckOutputWithContext(ctx context.Context) SystemSdwanHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckOutput)
}

// SystemSdwanHealthCheckArrayInput is an input type that accepts SystemSdwanHealthCheckArray and SystemSdwanHealthCheckArrayOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckArrayInput` via:
//
//	SystemSdwanHealthCheckArray{ SystemSdwanHealthCheckArgs{...} }
type SystemSdwanHealthCheckArrayInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckArrayOutput() SystemSdwanHealthCheckArrayOutput
	ToSystemSdwanHealthCheckArrayOutputWithContext(context.Context) SystemSdwanHealthCheckArrayOutput
}

type SystemSdwanHealthCheckArray []SystemSdwanHealthCheckInput

func (SystemSdwanHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheck)(nil)).Elem()
}

func (i SystemSdwanHealthCheckArray) ToSystemSdwanHealthCheckArrayOutput() SystemSdwanHealthCheckArrayOutput {
	return i.ToSystemSdwanHealthCheckArrayOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckArray) ToSystemSdwanHealthCheckArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckArrayOutput)
}

type SystemSdwanHealthCheckOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheck)(nil)).Elem()
}

func (o SystemSdwanHealthCheckOutput) ToSystemSdwanHealthCheckOutput() SystemSdwanHealthCheckOutput {
	return o
}

func (o SystemSdwanHealthCheckOutput) ToSystemSdwanHealthCheckOutputWithContext(ctx context.Context) SystemSdwanHealthCheckOutput {
	return o
}

// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
func (o SystemSdwanHealthCheckOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// The mode determining how to detect the server.
func (o SystemSdwanHealthCheckOutput) DetectMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.DetectMode }).(pulumi.StringPtrOutput)
}

// Differentiated services code point (DSCP) in the IP header of the probe packet.
func (o SystemSdwanHealthCheckOutput) Diffservcode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Diffservcode }).(pulumi.StringPtrOutput)
}

// Response IP expected from DNS server if the protocol is DNS.
func (o SystemSdwanHealthCheckOutput) DnsMatchIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.DnsMatchIp }).(pulumi.StringPtrOutput)
}

// Fully qualified domain name to resolve for the DNS probe.
func (o SystemSdwanHealthCheckOutput) DnsRequestDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.DnsRequestDomain }).(pulumi.StringPtrOutput)
}

// Enable/disable embedding measured health information. Valid values: `enable`, `disable`.
func (o SystemSdwanHealthCheckOutput) EmbedMeasuredHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.EmbedMeasuredHealth }).(pulumi.StringPtrOutput)
}

// Number of failures before server is considered lost (1 - 3600, default = 5).
func (o SystemSdwanHealthCheckOutput) Failtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.Failtime }).(pulumi.IntPtrOutput)
}

// Full path and file name on the FTP server to download for FTP health-check to probe.
func (o SystemSdwanHealthCheckOutput) FtpFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.FtpFile }).(pulumi.StringPtrOutput)
}

// FTP mode. Valid values: `passive`, `port`.
func (o SystemSdwanHealthCheckOutput) FtpMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.FtpMode }).(pulumi.StringPtrOutput)
}

// HA election priority (1 - 50).
func (o SystemSdwanHealthCheckOutput) HaPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.HaPriority }).(pulumi.IntPtrOutput)
}

// String in the http-agent field in the HTTP header.
func (o SystemSdwanHealthCheckOutput) HttpAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.HttpAgent }).(pulumi.StringPtrOutput)
}

// URL used to communicate with the server if the protocol if the protocol is HTTP.
func (o SystemSdwanHealthCheckOutput) HttpGet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.HttpGet }).(pulumi.StringPtrOutput)
}

// Response string expected from the server if the protocol is HTTP.
func (o SystemSdwanHealthCheckOutput) HttpMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.HttpMatch }).(pulumi.StringPtrOutput)
}

// Status check interval in milliseconds, or the time between attempting to connect to the server (500 - 3600*1000 msec, default = 500).
func (o SystemSdwanHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Member sequence number list. The structure of `members` block is documented below.
func (o SystemSdwanHealthCheckOutput) Members() SystemSdwanHealthCheckMemberArrayOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) []SystemSdwanHealthCheckMember { return v.Members }).(SystemSdwanHealthCheckMemberArrayOutput)
}

// Codec to use for MOS calculation (default = g711). Valid values: `g711`, `g722`, `g729`.
func (o SystemSdwanHealthCheckOutput) MosCodec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.MosCodec }).(pulumi.StringPtrOutput)
}

// Health check name.
func (o SystemSdwanHealthCheckOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Packet size of a twamp test session,
func (o SystemSdwanHealthCheckOutput) PacketSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.PacketSize }).(pulumi.IntPtrOutput)
}

// Twamp controller password in authentication mode
func (o SystemSdwanHealthCheckOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number used to communicate with the server over the selected protocol (0-65535, default = 0, auto select. http, twamp: 80, udp-echo, tcp-echo: 7, dns: 53, ftp: 21).
func (o SystemSdwanHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
func (o SystemSdwanHealthCheckOutput) ProbeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ProbeCount }).(pulumi.IntPtrOutput)
}

// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
func (o SystemSdwanHealthCheckOutput) ProbePackets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.ProbePackets }).(pulumi.StringPtrOutput)
}

// Time to wait before a probe packet is considered lost (500 - 3600*1000 msec, default = 500).
func (o SystemSdwanHealthCheckOutput) ProbeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ProbeTimeout }).(pulumi.IntPtrOutput)
}

// Protocol used to determine if the FortiGate can communicate with the server.
func (o SystemSdwanHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Method to measure the quality of tcp-connect. Valid values: `half-open`, `half-close`.
func (o SystemSdwanHealthCheckOutput) QualityMeasuredMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.QualityMeasuredMethod }).(pulumi.StringPtrOutput)
}

// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
func (o SystemSdwanHealthCheckOutput) Recoverytime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.Recoverytime }).(pulumi.IntPtrOutput)
}

// Twamp controller security mode. Valid values: `none`, `authentication`.
func (o SystemSdwanHealthCheckOutput) SecurityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.SecurityMode }).(pulumi.StringPtrOutput)
}

// IP address or FQDN name of the server.
func (o SystemSdwanHealthCheckOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
func (o SystemSdwanHealthCheckOutput) SlaFailLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.SlaFailLogPeriod }).(pulumi.IntPtrOutput)
}

// Select the ID from the SLA sub-table. The selected SLA's priority value will be distributed into the routing table (0 - 32, default = 0).
func (o SystemSdwanHealthCheckOutput) SlaIdRedistribute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.SlaIdRedistribute }).(pulumi.IntPtrOutput)
}

// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
func (o SystemSdwanHealthCheckOutput) SlaPassLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.SlaPassLogPeriod }).(pulumi.IntPtrOutput)
}

// Service level agreement (SLA). The structure of `sla` block is documented below.
func (o SystemSdwanHealthCheckOutput) Slas() SystemSdwanHealthCheckSlaArrayOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) []SystemSdwanHealthCheckSla { return v.Slas }).(SystemSdwanHealthCheckSlaArrayOutput)
}

// Source IP address used in the health-check packet to the server.
func (o SystemSdwanHealthCheckOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
func (o SystemSdwanHealthCheckOutput) SystemDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.SystemDns }).(pulumi.StringPtrOutput)
}

// Alert threshold for jitter (ms, default = 0).
func (o SystemSdwanHealthCheckOutput) ThresholdAlertJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdAlertJitter }).(pulumi.IntPtrOutput)
}

// Alert threshold for latency (ms, default = 0).
func (o SystemSdwanHealthCheckOutput) ThresholdAlertLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdAlertLatency }).(pulumi.IntPtrOutput)
}

// Alert threshold for packet loss (percentage, default = 0).
func (o SystemSdwanHealthCheckOutput) ThresholdAlertPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdAlertPacketloss }).(pulumi.IntPtrOutput)
}

// Warning threshold for jitter (ms, default = 0).
func (o SystemSdwanHealthCheckOutput) ThresholdWarningJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdWarningJitter }).(pulumi.IntPtrOutput)
}

// Warning threshold for latency (ms, default = 0).
func (o SystemSdwanHealthCheckOutput) ThresholdWarningLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdWarningLatency }).(pulumi.IntPtrOutput)
}

// Warning threshold for packet loss (percentage, default = 0).
func (o SystemSdwanHealthCheckOutput) ThresholdWarningPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdWarningPacketloss }).(pulumi.IntPtrOutput)
}

// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
func (o SystemSdwanHealthCheckOutput) UpdateCascadeInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.UpdateCascadeInterface }).(pulumi.StringPtrOutput)
}

// Enable/disable updating the static route. Valid values: `enable`, `disable`.
func (o SystemSdwanHealthCheckOutput) UpdateStaticRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.UpdateStaticRoute }).(pulumi.StringPtrOutput)
}

// The user name to access probe server.
func (o SystemSdwanHealthCheckOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.User }).(pulumi.StringPtrOutput)
}

// Virtual Routing Forwarding ID.
func (o SystemSdwanHealthCheckOutput) Vrf() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.Vrf }).(pulumi.IntPtrOutput)
}

type SystemSdwanHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheck)(nil)).Elem()
}

func (o SystemSdwanHealthCheckArrayOutput) ToSystemSdwanHealthCheckArrayOutput() SystemSdwanHealthCheckArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckArrayOutput) ToSystemSdwanHealthCheckArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckArrayOutput) Index(i pulumi.IntInput) SystemSdwanHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanHealthCheck {
		return vs[0].([]SystemSdwanHealthCheck)[vs[1].(int)]
	}).(SystemSdwanHealthCheckOutput)
}

type SystemSdwanHealthCheckMember struct {
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// SystemSdwanHealthCheckMemberInput is an input type that accepts SystemSdwanHealthCheckMemberArgs and SystemSdwanHealthCheckMemberOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckMemberInput` via:
//
//	SystemSdwanHealthCheckMemberArgs{...}
type SystemSdwanHealthCheckMemberInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckMemberOutput() SystemSdwanHealthCheckMemberOutput
	ToSystemSdwanHealthCheckMemberOutputWithContext(context.Context) SystemSdwanHealthCheckMemberOutput
}

type SystemSdwanHealthCheckMemberArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SystemSdwanHealthCheckMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheckMember)(nil)).Elem()
}

func (i SystemSdwanHealthCheckMemberArgs) ToSystemSdwanHealthCheckMemberOutput() SystemSdwanHealthCheckMemberOutput {
	return i.ToSystemSdwanHealthCheckMemberOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckMemberArgs) ToSystemSdwanHealthCheckMemberOutputWithContext(ctx context.Context) SystemSdwanHealthCheckMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckMemberOutput)
}

// SystemSdwanHealthCheckMemberArrayInput is an input type that accepts SystemSdwanHealthCheckMemberArray and SystemSdwanHealthCheckMemberArrayOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckMemberArrayInput` via:
//
//	SystemSdwanHealthCheckMemberArray{ SystemSdwanHealthCheckMemberArgs{...} }
type SystemSdwanHealthCheckMemberArrayInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckMemberArrayOutput() SystemSdwanHealthCheckMemberArrayOutput
	ToSystemSdwanHealthCheckMemberArrayOutputWithContext(context.Context) SystemSdwanHealthCheckMemberArrayOutput
}

type SystemSdwanHealthCheckMemberArray []SystemSdwanHealthCheckMemberInput

func (SystemSdwanHealthCheckMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheckMember)(nil)).Elem()
}

func (i SystemSdwanHealthCheckMemberArray) ToSystemSdwanHealthCheckMemberArrayOutput() SystemSdwanHealthCheckMemberArrayOutput {
	return i.ToSystemSdwanHealthCheckMemberArrayOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckMemberArray) ToSystemSdwanHealthCheckMemberArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckMemberArrayOutput)
}

type SystemSdwanHealthCheckMemberOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheckMember)(nil)).Elem()
}

func (o SystemSdwanHealthCheckMemberOutput) ToSystemSdwanHealthCheckMemberOutput() SystemSdwanHealthCheckMemberOutput {
	return o
}

func (o SystemSdwanHealthCheckMemberOutput) ToSystemSdwanHealthCheckMemberOutputWithContext(ctx context.Context) SystemSdwanHealthCheckMemberOutput {
	return o
}

// Member sequence number.
func (o SystemSdwanHealthCheckMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SystemSdwanHealthCheckMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheckMember)(nil)).Elem()
}

func (o SystemSdwanHealthCheckMemberArrayOutput) ToSystemSdwanHealthCheckMemberArrayOutput() SystemSdwanHealthCheckMemberArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckMemberArrayOutput) ToSystemSdwanHealthCheckMemberArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckMemberArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckMemberArrayOutput) Index(i pulumi.IntInput) SystemSdwanHealthCheckMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanHealthCheckMember {
		return vs[0].([]SystemSdwanHealthCheckMember)[vs[1].(int)]
	}).(SystemSdwanHealthCheckMemberOutput)
}

type SystemSdwanHealthCheckSla struct {
	// SLA ID.
	Id *int `pulumi:"id"`
	// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	JitterThreshold *int `pulumi:"jitterThreshold"`
	// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	LatencyThreshold *int `pulumi:"latencyThreshold"`
	// Criteria on which to base link selection.
	LinkCostFactor *string `pulumi:"linkCostFactor"`
	// Minimum Mean Opinion Score for SLA to be marked as pass. (1.0 - 5.0, default = 3.6).
	MosThreshold *string `pulumi:"mosThreshold"`
	// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
	PacketlossThreshold *int `pulumi:"packetlossThreshold"`
	// Value to be distributed into routing table when in-sla (0 - 65535, default = 0).
	PriorityInSla *int `pulumi:"priorityInSla"`
	// Value to be distributed into routing table when out-sla (0 - 65535, default = 0).
	PriorityOutSla *int `pulumi:"priorityOutSla"`
}

// SystemSdwanHealthCheckSlaInput is an input type that accepts SystemSdwanHealthCheckSlaArgs and SystemSdwanHealthCheckSlaOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckSlaInput` via:
//
//	SystemSdwanHealthCheckSlaArgs{...}
type SystemSdwanHealthCheckSlaInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckSlaOutput() SystemSdwanHealthCheckSlaOutput
	ToSystemSdwanHealthCheckSlaOutputWithContext(context.Context) SystemSdwanHealthCheckSlaOutput
}

type SystemSdwanHealthCheckSlaArgs struct {
	// SLA ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	JitterThreshold pulumi.IntPtrInput `pulumi:"jitterThreshold"`
	// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	LatencyThreshold pulumi.IntPtrInput `pulumi:"latencyThreshold"`
	// Criteria on which to base link selection.
	LinkCostFactor pulumi.StringPtrInput `pulumi:"linkCostFactor"`
	// Minimum Mean Opinion Score for SLA to be marked as pass. (1.0 - 5.0, default = 3.6).
	MosThreshold pulumi.StringPtrInput `pulumi:"mosThreshold"`
	// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
	PacketlossThreshold pulumi.IntPtrInput `pulumi:"packetlossThreshold"`
	// Value to be distributed into routing table when in-sla (0 - 65535, default = 0).
	PriorityInSla pulumi.IntPtrInput `pulumi:"priorityInSla"`
	// Value to be distributed into routing table when out-sla (0 - 65535, default = 0).
	PriorityOutSla pulumi.IntPtrInput `pulumi:"priorityOutSla"`
}

func (SystemSdwanHealthCheckSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheckSla)(nil)).Elem()
}

func (i SystemSdwanHealthCheckSlaArgs) ToSystemSdwanHealthCheckSlaOutput() SystemSdwanHealthCheckSlaOutput {
	return i.ToSystemSdwanHealthCheckSlaOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckSlaArgs) ToSystemSdwanHealthCheckSlaOutputWithContext(ctx context.Context) SystemSdwanHealthCheckSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckSlaOutput)
}

// SystemSdwanHealthCheckSlaArrayInput is an input type that accepts SystemSdwanHealthCheckSlaArray and SystemSdwanHealthCheckSlaArrayOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckSlaArrayInput` via:
//
//	SystemSdwanHealthCheckSlaArray{ SystemSdwanHealthCheckSlaArgs{...} }
type SystemSdwanHealthCheckSlaArrayInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckSlaArrayOutput() SystemSdwanHealthCheckSlaArrayOutput
	ToSystemSdwanHealthCheckSlaArrayOutputWithContext(context.Context) SystemSdwanHealthCheckSlaArrayOutput
}

type SystemSdwanHealthCheckSlaArray []SystemSdwanHealthCheckSlaInput

func (SystemSdwanHealthCheckSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheckSla)(nil)).Elem()
}

func (i SystemSdwanHealthCheckSlaArray) ToSystemSdwanHealthCheckSlaArrayOutput() SystemSdwanHealthCheckSlaArrayOutput {
	return i.ToSystemSdwanHealthCheckSlaArrayOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckSlaArray) ToSystemSdwanHealthCheckSlaArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckSlaArrayOutput)
}

type SystemSdwanHealthCheckSlaOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheckSla)(nil)).Elem()
}

func (o SystemSdwanHealthCheckSlaOutput) ToSystemSdwanHealthCheckSlaOutput() SystemSdwanHealthCheckSlaOutput {
	return o
}

func (o SystemSdwanHealthCheckSlaOutput) ToSystemSdwanHealthCheckSlaOutputWithContext(ctx context.Context) SystemSdwanHealthCheckSlaOutput {
	return o
}

// SLA ID.
func (o SystemSdwanHealthCheckSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
func (o SystemSdwanHealthCheckSlaOutput) JitterThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.JitterThreshold }).(pulumi.IntPtrOutput)
}

// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
func (o SystemSdwanHealthCheckSlaOutput) LatencyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.LatencyThreshold }).(pulumi.IntPtrOutput)
}

// Criteria on which to base link selection.
func (o SystemSdwanHealthCheckSlaOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

// Minimum Mean Opinion Score for SLA to be marked as pass. (1.0 - 5.0, default = 3.6).
func (o SystemSdwanHealthCheckSlaOutput) MosThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *string { return v.MosThreshold }).(pulumi.StringPtrOutput)
}

// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
func (o SystemSdwanHealthCheckSlaOutput) PacketlossThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.PacketlossThreshold }).(pulumi.IntPtrOutput)
}

// Value to be distributed into routing table when in-sla (0 - 65535, default = 0).
func (o SystemSdwanHealthCheckSlaOutput) PriorityInSla() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.PriorityInSla }).(pulumi.IntPtrOutput)
}

// Value to be distributed into routing table when out-sla (0 - 65535, default = 0).
func (o SystemSdwanHealthCheckSlaOutput) PriorityOutSla() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.PriorityOutSla }).(pulumi.IntPtrOutput)
}

type SystemSdwanHealthCheckSlaArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheckSla)(nil)).Elem()
}

func (o SystemSdwanHealthCheckSlaArrayOutput) ToSystemSdwanHealthCheckSlaArrayOutput() SystemSdwanHealthCheckSlaArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckSlaArrayOutput) ToSystemSdwanHealthCheckSlaArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckSlaArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckSlaArrayOutput) Index(i pulumi.IntInput) SystemSdwanHealthCheckSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanHealthCheckSla {
		return vs[0].([]SystemSdwanHealthCheckSla)[vs[1].(int)]
	}).(SystemSdwanHealthCheckSlaOutput)
}

type SystemSdwanMember struct {
	// Comments.
	Comment *string `pulumi:"comment"`
	// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
	Cost *int `pulumi:"cost"`
	// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
	Gateway *string `pulumi:"gateway"`
	// IPv6 gateway.
	Gateway6 *string `pulumi:"gateway6"`
	// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	IngressSpilloverThreshold *int `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// Priority of the interface (0 - 65535). Used for SD-WAN rules or priority rules.
	Priority *int `pulumi:"priority"`
	// Priority of the interface for IPv6 (1 - 65535, default = 1024). Used for SD-WAN rules or priority rules.
	Priority6 *int `pulumi:"priority6"`
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
	// Source IP address used in the health-check packet to the server.
	Source *string `pulumi:"source"`
	// Source IPv6 address used in the health-check packet to the server.
	Source6 *string `pulumi:"source6"`
	// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	SpilloverThreshold *int `pulumi:"spilloverThreshold"`
	// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Measured volume ratio (this value / sum of all values = percentage of link volume, 1 - 255).
	VolumeRatio *int `pulumi:"volumeRatio"`
	// Weight of this interface for weighted load balancing. (1 - 255) More traffic is directed to interfaces with higher weights.
	Weight *int `pulumi:"weight"`
	// Zone name.
	Zone *string `pulumi:"zone"`
}

// SystemSdwanMemberInput is an input type that accepts SystemSdwanMemberArgs and SystemSdwanMemberOutput values.
// You can construct a concrete instance of `SystemSdwanMemberInput` via:
//
//	SystemSdwanMemberArgs{...}
type SystemSdwanMemberInput interface {
	pulumi.Input

	ToSystemSdwanMemberOutput() SystemSdwanMemberOutput
	ToSystemSdwanMemberOutputWithContext(context.Context) SystemSdwanMemberOutput
}

type SystemSdwanMemberArgs struct {
	// Comments.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// IPv6 gateway.
	Gateway6 pulumi.StringPtrInput `pulumi:"gateway6"`
	// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	IngressSpilloverThreshold pulumi.IntPtrInput `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Priority of the interface (0 - 65535). Used for SD-WAN rules or priority rules.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Priority of the interface for IPv6 (1 - 65535, default = 1024). Used for SD-WAN rules or priority rules.
	Priority6 pulumi.IntPtrInput `pulumi:"priority6"`
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
	// Source IP address used in the health-check packet to the server.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Source IPv6 address used in the health-check packet to the server.
	Source6 pulumi.StringPtrInput `pulumi:"source6"`
	// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	SpilloverThreshold pulumi.IntPtrInput `pulumi:"spilloverThreshold"`
	// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Measured volume ratio (this value / sum of all values = percentage of link volume, 1 - 255).
	VolumeRatio pulumi.IntPtrInput `pulumi:"volumeRatio"`
	// Weight of this interface for weighted load balancing. (1 - 255) More traffic is directed to interfaces with higher weights.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
	// Zone name.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (SystemSdwanMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanMember)(nil)).Elem()
}

func (i SystemSdwanMemberArgs) ToSystemSdwanMemberOutput() SystemSdwanMemberOutput {
	return i.ToSystemSdwanMemberOutputWithContext(context.Background())
}

func (i SystemSdwanMemberArgs) ToSystemSdwanMemberOutputWithContext(ctx context.Context) SystemSdwanMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanMemberOutput)
}

// SystemSdwanMemberArrayInput is an input type that accepts SystemSdwanMemberArray and SystemSdwanMemberArrayOutput values.
// You can construct a concrete instance of `SystemSdwanMemberArrayInput` via:
//
//	SystemSdwanMemberArray{ SystemSdwanMemberArgs{...} }
type SystemSdwanMemberArrayInput interface {
	pulumi.Input

	ToSystemSdwanMemberArrayOutput() SystemSdwanMemberArrayOutput
	ToSystemSdwanMemberArrayOutputWithContext(context.Context) SystemSdwanMemberArrayOutput
}

type SystemSdwanMemberArray []SystemSdwanMemberInput

func (SystemSdwanMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanMember)(nil)).Elem()
}

func (i SystemSdwanMemberArray) ToSystemSdwanMemberArrayOutput() SystemSdwanMemberArrayOutput {
	return i.ToSystemSdwanMemberArrayOutputWithContext(context.Background())
}

func (i SystemSdwanMemberArray) ToSystemSdwanMemberArrayOutputWithContext(ctx context.Context) SystemSdwanMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanMemberArrayOutput)
}

type SystemSdwanMemberOutput struct{ *pulumi.OutputState }

func (SystemSdwanMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanMember)(nil)).Elem()
}

func (o SystemSdwanMemberOutput) ToSystemSdwanMemberOutput() SystemSdwanMemberOutput {
	return o
}

func (o SystemSdwanMemberOutput) ToSystemSdwanMemberOutputWithContext(ctx context.Context) SystemSdwanMemberOutput {
	return o
}

// Comments.
func (o SystemSdwanMemberOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
func (o SystemSdwanMemberOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
func (o SystemSdwanMemberOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// IPv6 gateway.
func (o SystemSdwanMemberOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
func (o SystemSdwanMemberOutput) IngressSpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.IngressSpilloverThreshold }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o SystemSdwanMemberOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Priority of the interface (0 - 65535). Used for SD-WAN rules or priority rules.
func (o SystemSdwanMemberOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Priority of the interface for IPv6 (1 - 65535, default = 1024). Used for SD-WAN rules or priority rules.
func (o SystemSdwanMemberOutput) Priority6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.Priority6 }).(pulumi.IntPtrOutput)
}

// Member sequence number.
func (o SystemSdwanMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

// Source IP address used in the health-check packet to the server.
func (o SystemSdwanMemberOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Source IPv6 address used in the health-check packet to the server.
func (o SystemSdwanMemberOutput) Source6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Source6 }).(pulumi.StringPtrOutput)
}

// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
func (o SystemSdwanMemberOutput) SpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.SpilloverThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
func (o SystemSdwanMemberOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Measured volume ratio (this value / sum of all values = percentage of link volume, 1 - 255).
func (o SystemSdwanMemberOutput) VolumeRatio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.VolumeRatio }).(pulumi.IntPtrOutput)
}

// Weight of this interface for weighted load balancing. (1 - 255) More traffic is directed to interfaces with higher weights.
func (o SystemSdwanMemberOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

// Zone name.
func (o SystemSdwanMemberOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type SystemSdwanMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanMember)(nil)).Elem()
}

func (o SystemSdwanMemberArrayOutput) ToSystemSdwanMemberArrayOutput() SystemSdwanMemberArrayOutput {
	return o
}

func (o SystemSdwanMemberArrayOutput) ToSystemSdwanMemberArrayOutputWithContext(ctx context.Context) SystemSdwanMemberArrayOutput {
	return o
}

func (o SystemSdwanMemberArrayOutput) Index(i pulumi.IntInput) SystemSdwanMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanMember {
		return vs[0].([]SystemSdwanMember)[vs[1].(int)]
	}).(SystemSdwanMemberOutput)
}

type SystemSdwanNeighbor struct {
	// SD-WAN health-check name.
	HealthCheck *string `pulumi:"healthCheck"`
	// IP/IPv6 address of neighbor.
	Ip *string `pulumi:"ip"`
	// Member sequence number.
	Member *int `pulumi:"member"`
	// Minimum number of members which meet SLA when the neighbor is preferred.
	MinimumSlaMeetMembers *int `pulumi:"minimumSlaMeetMembers"`
	// What metric to select the neighbor. Valid values: `sla`, `speedtest`.
	Mode *string `pulumi:"mode"`
	// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// SLA ID.
	SlaId *int `pulumi:"slaId"`
}

// SystemSdwanNeighborInput is an input type that accepts SystemSdwanNeighborArgs and SystemSdwanNeighborOutput values.
// You can construct a concrete instance of `SystemSdwanNeighborInput` via:
//
//	SystemSdwanNeighborArgs{...}
type SystemSdwanNeighborInput interface {
	pulumi.Input

	ToSystemSdwanNeighborOutput() SystemSdwanNeighborOutput
	ToSystemSdwanNeighborOutputWithContext(context.Context) SystemSdwanNeighborOutput
}

type SystemSdwanNeighborArgs struct {
	// SD-WAN health-check name.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// IP/IPv6 address of neighbor.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Member sequence number.
	Member pulumi.IntPtrInput `pulumi:"member"`
	// Minimum number of members which meet SLA when the neighbor is preferred.
	MinimumSlaMeetMembers pulumi.IntPtrInput `pulumi:"minimumSlaMeetMembers"`
	// What metric to select the neighbor. Valid values: `sla`, `speedtest`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// SLA ID.
	SlaId pulumi.IntPtrInput `pulumi:"slaId"`
}

func (SystemSdwanNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanNeighbor)(nil)).Elem()
}

func (i SystemSdwanNeighborArgs) ToSystemSdwanNeighborOutput() SystemSdwanNeighborOutput {
	return i.ToSystemSdwanNeighborOutputWithContext(context.Background())
}

func (i SystemSdwanNeighborArgs) ToSystemSdwanNeighborOutputWithContext(ctx context.Context) SystemSdwanNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanNeighborOutput)
}

// SystemSdwanNeighborArrayInput is an input type that accepts SystemSdwanNeighborArray and SystemSdwanNeighborArrayOutput values.
// You can construct a concrete instance of `SystemSdwanNeighborArrayInput` via:
//
//	SystemSdwanNeighborArray{ SystemSdwanNeighborArgs{...} }
type SystemSdwanNeighborArrayInput interface {
	pulumi.Input

	ToSystemSdwanNeighborArrayOutput() SystemSdwanNeighborArrayOutput
	ToSystemSdwanNeighborArrayOutputWithContext(context.Context) SystemSdwanNeighborArrayOutput
}

type SystemSdwanNeighborArray []SystemSdwanNeighborInput

func (SystemSdwanNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanNeighbor)(nil)).Elem()
}

func (i SystemSdwanNeighborArray) ToSystemSdwanNeighborArrayOutput() SystemSdwanNeighborArrayOutput {
	return i.ToSystemSdwanNeighborArrayOutputWithContext(context.Background())
}

func (i SystemSdwanNeighborArray) ToSystemSdwanNeighborArrayOutputWithContext(ctx context.Context) SystemSdwanNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanNeighborArrayOutput)
}

type SystemSdwanNeighborOutput struct{ *pulumi.OutputState }

func (SystemSdwanNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanNeighbor)(nil)).Elem()
}

func (o SystemSdwanNeighborOutput) ToSystemSdwanNeighborOutput() SystemSdwanNeighborOutput {
	return o
}

func (o SystemSdwanNeighborOutput) ToSystemSdwanNeighborOutputWithContext(ctx context.Context) SystemSdwanNeighborOutput {
	return o
}

// SD-WAN health-check name.
func (o SystemSdwanNeighborOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// IP/IPv6 address of neighbor.
func (o SystemSdwanNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Member sequence number.
func (o SystemSdwanNeighborOutput) Member() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *int { return v.Member }).(pulumi.IntPtrOutput)
}

// Minimum number of members which meet SLA when the neighbor is preferred.
func (o SystemSdwanNeighborOutput) MinimumSlaMeetMembers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *int { return v.MinimumSlaMeetMembers }).(pulumi.IntPtrOutput)
}

// What metric to select the neighbor. Valid values: `sla`, `speedtest`.
func (o SystemSdwanNeighborOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
func (o SystemSdwanNeighborOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// SLA ID.
func (o SystemSdwanNeighborOutput) SlaId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *int { return v.SlaId }).(pulumi.IntPtrOutput)
}

type SystemSdwanNeighborArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanNeighbor)(nil)).Elem()
}

func (o SystemSdwanNeighborArrayOutput) ToSystemSdwanNeighborArrayOutput() SystemSdwanNeighborArrayOutput {
	return o
}

func (o SystemSdwanNeighborArrayOutput) ToSystemSdwanNeighborArrayOutputWithContext(ctx context.Context) SystemSdwanNeighborArrayOutput {
	return o
}

func (o SystemSdwanNeighborArrayOutput) Index(i pulumi.IntInput) SystemSdwanNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanNeighbor {
		return vs[0].([]SystemSdwanNeighbor)[vs[1].(int)]
	}).(SystemSdwanNeighborOutput)
}

type SystemSdwanService struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
	BandwidthWeight *int `pulumi:"bandwidthWeight"`
	// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
	Default *string `pulumi:"default"`
	// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpForward *string `pulumi:"dscpForward"`
	// Forward traffic DSCP tag.
	DscpForwardTag *string `pulumi:"dscpForwardTag"`
	// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpReverse *string `pulumi:"dscpReverse"`
	// Reverse traffic DSCP tag.
	DscpReverseTag *string `pulumi:"dscpReverseTag"`
	// Destination address6 name. The structure of `dst6` block is documented below.
	Dst6s []SystemSdwanServiceDst6 `pulumi:"dst6s"`
	// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
	DstNegate *string `pulumi:"dstNegate"`
	// Destination address name. The structure of `dst` block is documented below.
	Dsts []SystemSdwanServiceDst `pulumi:"dsts"`
	// End destination port number.
	EndPort *int `pulumi:"endPort"`
	// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
	Gateway *string `pulumi:"gateway"`
	// User groups. The structure of `groups` block is documented below.
	Groups []SystemSdwanServiceGroup `pulumi:"groups"`
	// Hash algorithm for selected priority members for load balance mode. Valid values: `round-robin`, `source-ip-based`, `source-dest-ip-based`, `inbandwidth`, `outbandwidth`, `bibandwidth`.
	HashMode *string `pulumi:"hashMode"`
	// Health check list. The structure of `healthCheck` block is documented below.
	HealthChecks []SystemSdwanServiceHealthCheck `pulumi:"healthChecks"`
	// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
	HoldDownTime *int `pulumi:"holdDownTime"`
	// SD-WAN rule ID (1 - 4000).
	Id *int `pulumi:"id"`
	// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
	InputDeviceNegate *string `pulumi:"inputDeviceNegate"`
	// Source interface name. The structure of `inputDevice` block is documented below.
	InputDevices []SystemSdwanServiceInputDevice `pulumi:"inputDevices"`
	// Source input-zone name. The structure of `inputZone` block is documented below.
	InputZones []SystemSdwanServiceInputZone `pulumi:"inputZones"`
	// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
	InternetService *string `pulumi:"internetService"`
	// IDs of one or more application control categories. The structure of `internetServiceAppCtrlCategory` block is documented below.
	InternetServiceAppCtrlCategories []SystemSdwanServiceInternetServiceAppCtrlCategory `pulumi:"internetServiceAppCtrlCategories"`
	// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
	InternetServiceAppCtrlGroups []SystemSdwanServiceInternetServiceAppCtrlGroup `pulumi:"internetServiceAppCtrlGroups"`
	// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
	InternetServiceAppCtrls []SystemSdwanServiceInternetServiceAppCtrl `pulumi:"internetServiceAppCtrls"`
	// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups []SystemSdwanServiceInternetServiceCustomGroup `pulumi:"internetServiceCustomGroups"`
	// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms []SystemSdwanServiceInternetServiceCustom `pulumi:"internetServiceCustoms"`
	// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups []SystemSdwanServiceInternetServiceGroup `pulumi:"internetServiceGroups"`
	// Internet service name list. The structure of `internetServiceName` block is documented below.
	InternetServiceNames []SystemSdwanServiceInternetServiceName `pulumi:"internetServiceNames"`
	// Coefficient of jitter in the formula of custom-profile-1.
	JitterWeight *int `pulumi:"jitterWeight"`
	// Coefficient of latency in the formula of custom-profile-1.
	LatencyWeight *int `pulumi:"latencyWeight"`
	// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
	LinkCostFactor *string `pulumi:"linkCostFactor"`
	// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
	LinkCostThreshold *int `pulumi:"linkCostThreshold"`
	// Minimum number of members which meet SLA.
	MinimumSlaMeetMembers *int `pulumi:"minimumSlaMeetMembers"`
	// Control how the SD-WAN rule sets the priority of interfaces in the SD-WAN. Valid values: `auto`, `manual`, `priority`, `sla`, `load-balance`.
	Mode *string `pulumi:"mode"`
	// Service and service group name.
	Name *string `pulumi:"name"`
	// Coefficient of packet-loss in the formula of custom-profile-1.
	PacketLossWeight *int `pulumi:"packetLossWeight"`
	// Enable/disable passive measurement based on the service criteria. Valid values: `enable`, `disable`.
	PassiveMeasurement *string `pulumi:"passiveMeasurement"`
	// Member sequence number list. The structure of `priorityMembers` block is documented below.
	PriorityMembers []SystemSdwanServicePriorityMember `pulumi:"priorityMembers"`
	// Priority zone name list. The structure of `priorityZone` block is documented below.
	PriorityZones []SystemSdwanServicePriorityZone `pulumi:"priorityZones"`
	// Protocol number.
	Protocol *int `pulumi:"protocol"`
	// Quality grade.
	QualityLink *int `pulumi:"qualityLink"`
	// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// IPv4 route map route-tag.
	RouteTag *int `pulumi:"routeTag"`
	// Method to compare SLA value for SLA mode. Valid values: `order`, `number`.
	SlaCompareMethod *string `pulumi:"slaCompareMethod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas []SystemSdwanServiceSla `pulumi:"slas"`
	// Source address6 name. The structure of `src6` block is documented below.
	Src6s []SystemSdwanServiceSrc6 `pulumi:"src6s"`
	// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
	SrcNegate *string `pulumi:"srcNegate"`
	// Source address name. The structure of `src` block is documented below.
	Srcs []SystemSdwanServiceSrc `pulumi:"srcs"`
	// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
	StandaloneAction *string `pulumi:"standaloneAction"`
	// Start destination port number.
	StartPort *int `pulumi:"startPort"`
	// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Method of selecting member if more than one meets the SLA.
	TieBreak *string `pulumi:"tieBreak"`
	// Type of service bit pattern.
	Tos *string `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask *string `pulumi:"tosMask"`
	// Enable/disable use of ADVPN shortcut for quality comparison. Valid values: `enable`, `disable`.
	UseShortcutSla *string `pulumi:"useShortcutSla"`
	// User name. The structure of `users` block is documented below.
	Users []SystemSdwanServiceUser `pulumi:"users"`
}

// SystemSdwanServiceInput is an input type that accepts SystemSdwanServiceArgs and SystemSdwanServiceOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInput` via:
//
//	SystemSdwanServiceArgs{...}
type SystemSdwanServiceInput interface {
	pulumi.Input

	ToSystemSdwanServiceOutput() SystemSdwanServiceOutput
	ToSystemSdwanServiceOutputWithContext(context.Context) SystemSdwanServiceOutput
}

type SystemSdwanServiceArgs struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
	BandwidthWeight pulumi.IntPtrInput `pulumi:"bandwidthWeight"`
	// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
	Default pulumi.StringPtrInput `pulumi:"default"`
	// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpForward pulumi.StringPtrInput `pulumi:"dscpForward"`
	// Forward traffic DSCP tag.
	DscpForwardTag pulumi.StringPtrInput `pulumi:"dscpForwardTag"`
	// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpReverse pulumi.StringPtrInput `pulumi:"dscpReverse"`
	// Reverse traffic DSCP tag.
	DscpReverseTag pulumi.StringPtrInput `pulumi:"dscpReverseTag"`
	// Destination address6 name. The structure of `dst6` block is documented below.
	Dst6s SystemSdwanServiceDst6ArrayInput `pulumi:"dst6s"`
	// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
	DstNegate pulumi.StringPtrInput `pulumi:"dstNegate"`
	// Destination address name. The structure of `dst` block is documented below.
	Dsts SystemSdwanServiceDstArrayInput `pulumi:"dsts"`
	// End destination port number.
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// User groups. The structure of `groups` block is documented below.
	Groups SystemSdwanServiceGroupArrayInput `pulumi:"groups"`
	// Hash algorithm for selected priority members for load balance mode. Valid values: `round-robin`, `source-ip-based`, `source-dest-ip-based`, `inbandwidth`, `outbandwidth`, `bibandwidth`.
	HashMode pulumi.StringPtrInput `pulumi:"hashMode"`
	// Health check list. The structure of `healthCheck` block is documented below.
	HealthChecks SystemSdwanServiceHealthCheckArrayInput `pulumi:"healthChecks"`
	// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
	HoldDownTime pulumi.IntPtrInput `pulumi:"holdDownTime"`
	// SD-WAN rule ID (1 - 4000).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
	InputDeviceNegate pulumi.StringPtrInput `pulumi:"inputDeviceNegate"`
	// Source interface name. The structure of `inputDevice` block is documented below.
	InputDevices SystemSdwanServiceInputDeviceArrayInput `pulumi:"inputDevices"`
	// Source input-zone name. The structure of `inputZone` block is documented below.
	InputZones SystemSdwanServiceInputZoneArrayInput `pulumi:"inputZones"`
	// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
	InternetService pulumi.StringPtrInput `pulumi:"internetService"`
	// IDs of one or more application control categories. The structure of `internetServiceAppCtrlCategory` block is documented below.
	InternetServiceAppCtrlCategories SystemSdwanServiceInternetServiceAppCtrlCategoryArrayInput `pulumi:"internetServiceAppCtrlCategories"`
	// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
	InternetServiceAppCtrlGroups SystemSdwanServiceInternetServiceAppCtrlGroupArrayInput `pulumi:"internetServiceAppCtrlGroups"`
	// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
	InternetServiceAppCtrls SystemSdwanServiceInternetServiceAppCtrlArrayInput `pulumi:"internetServiceAppCtrls"`
	// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups SystemSdwanServiceInternetServiceCustomGroupArrayInput `pulumi:"internetServiceCustomGroups"`
	// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms SystemSdwanServiceInternetServiceCustomArrayInput `pulumi:"internetServiceCustoms"`
	// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups SystemSdwanServiceInternetServiceGroupArrayInput `pulumi:"internetServiceGroups"`
	// Internet service name list. The structure of `internetServiceName` block is documented below.
	InternetServiceNames SystemSdwanServiceInternetServiceNameArrayInput `pulumi:"internetServiceNames"`
	// Coefficient of jitter in the formula of custom-profile-1.
	JitterWeight pulumi.IntPtrInput `pulumi:"jitterWeight"`
	// Coefficient of latency in the formula of custom-profile-1.
	LatencyWeight pulumi.IntPtrInput `pulumi:"latencyWeight"`
	// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
	LinkCostFactor pulumi.StringPtrInput `pulumi:"linkCostFactor"`
	// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
	LinkCostThreshold pulumi.IntPtrInput `pulumi:"linkCostThreshold"`
	// Minimum number of members which meet SLA.
	MinimumSlaMeetMembers pulumi.IntPtrInput `pulumi:"minimumSlaMeetMembers"`
	// Control how the SD-WAN rule sets the priority of interfaces in the SD-WAN. Valid values: `auto`, `manual`, `priority`, `sla`, `load-balance`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Service and service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Coefficient of packet-loss in the formula of custom-profile-1.
	PacketLossWeight pulumi.IntPtrInput `pulumi:"packetLossWeight"`
	// Enable/disable passive measurement based on the service criteria. Valid values: `enable`, `disable`.
	PassiveMeasurement pulumi.StringPtrInput `pulumi:"passiveMeasurement"`
	// Member sequence number list. The structure of `priorityMembers` block is documented below.
	PriorityMembers SystemSdwanServicePriorityMemberArrayInput `pulumi:"priorityMembers"`
	// Priority zone name list. The structure of `priorityZone` block is documented below.
	PriorityZones SystemSdwanServicePriorityZoneArrayInput `pulumi:"priorityZones"`
	// Protocol number.
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
	// Quality grade.
	QualityLink pulumi.IntPtrInput `pulumi:"qualityLink"`
	// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// IPv4 route map route-tag.
	RouteTag pulumi.IntPtrInput `pulumi:"routeTag"`
	// Method to compare SLA value for SLA mode. Valid values: `order`, `number`.
	SlaCompareMethod pulumi.StringPtrInput `pulumi:"slaCompareMethod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas SystemSdwanServiceSlaArrayInput `pulumi:"slas"`
	// Source address6 name. The structure of `src6` block is documented below.
	Src6s SystemSdwanServiceSrc6ArrayInput `pulumi:"src6s"`
	// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
	SrcNegate pulumi.StringPtrInput `pulumi:"srcNegate"`
	// Source address name. The structure of `src` block is documented below.
	Srcs SystemSdwanServiceSrcArrayInput `pulumi:"srcs"`
	// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
	StandaloneAction pulumi.StringPtrInput `pulumi:"standaloneAction"`
	// Start destination port number.
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
	// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Method of selecting member if more than one meets the SLA.
	TieBreak pulumi.StringPtrInput `pulumi:"tieBreak"`
	// Type of service bit pattern.
	Tos pulumi.StringPtrInput `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask pulumi.StringPtrInput `pulumi:"tosMask"`
	// Enable/disable use of ADVPN shortcut for quality comparison. Valid values: `enable`, `disable`.
	UseShortcutSla pulumi.StringPtrInput `pulumi:"useShortcutSla"`
	// User name. The structure of `users` block is documented below.
	Users SystemSdwanServiceUserArrayInput `pulumi:"users"`
}

func (SystemSdwanServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanService)(nil)).Elem()
}

func (i SystemSdwanServiceArgs) ToSystemSdwanServiceOutput() SystemSdwanServiceOutput {
	return i.ToSystemSdwanServiceOutputWithContext(context.Background())
}

func (i SystemSdwanServiceArgs) ToSystemSdwanServiceOutputWithContext(ctx context.Context) SystemSdwanServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceOutput)
}

// SystemSdwanServiceArrayInput is an input type that accepts SystemSdwanServiceArray and SystemSdwanServiceArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceArrayInput` via:
//
//	SystemSdwanServiceArray{ SystemSdwanServiceArgs{...} }
type SystemSdwanServiceArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceArrayOutput() SystemSdwanServiceArrayOutput
	ToSystemSdwanServiceArrayOutputWithContext(context.Context) SystemSdwanServiceArrayOutput
}

type SystemSdwanServiceArray []SystemSdwanServiceInput

func (SystemSdwanServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanService)(nil)).Elem()
}

func (i SystemSdwanServiceArray) ToSystemSdwanServiceArrayOutput() SystemSdwanServiceArrayOutput {
	return i.ToSystemSdwanServiceArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceArray) ToSystemSdwanServiceArrayOutputWithContext(ctx context.Context) SystemSdwanServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceArrayOutput)
}

type SystemSdwanServiceOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanService)(nil)).Elem()
}

func (o SystemSdwanServiceOutput) ToSystemSdwanServiceOutput() SystemSdwanServiceOutput {
	return o
}

func (o SystemSdwanServiceOutput) ToSystemSdwanServiceOutputWithContext(ctx context.Context) SystemSdwanServiceOutput {
	return o
}

// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
func (o SystemSdwanServiceOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
func (o SystemSdwanServiceOutput) BandwidthWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.BandwidthWeight }).(pulumi.IntPtrOutput)
}

// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Default }).(pulumi.StringPtrOutput)
}

// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) DscpForward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.DscpForward }).(pulumi.StringPtrOutput)
}

// Forward traffic DSCP tag.
func (o SystemSdwanServiceOutput) DscpForwardTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.DscpForwardTag }).(pulumi.StringPtrOutput)
}

// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) DscpReverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.DscpReverse }).(pulumi.StringPtrOutput)
}

// Reverse traffic DSCP tag.
func (o SystemSdwanServiceOutput) DscpReverseTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.DscpReverseTag }).(pulumi.StringPtrOutput)
}

// Destination address6 name. The structure of `dst6` block is documented below.
func (o SystemSdwanServiceOutput) Dst6s() SystemSdwanServiceDst6ArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceDst6 { return v.Dst6s }).(SystemSdwanServiceDst6ArrayOutput)
}

// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) DstNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.DstNegate }).(pulumi.StringPtrOutput)
}

// Destination address name. The structure of `dst` block is documented below.
func (o SystemSdwanServiceOutput) Dsts() SystemSdwanServiceDstArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceDst { return v.Dsts }).(SystemSdwanServiceDstArrayOutput)
}

// End destination port number.
func (o SystemSdwanServiceOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// User groups. The structure of `groups` block is documented below.
func (o SystemSdwanServiceOutput) Groups() SystemSdwanServiceGroupArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceGroup { return v.Groups }).(SystemSdwanServiceGroupArrayOutput)
}

// Hash algorithm for selected priority members for load balance mode. Valid values: `round-robin`, `source-ip-based`, `source-dest-ip-based`, `inbandwidth`, `outbandwidth`, `bibandwidth`.
func (o SystemSdwanServiceOutput) HashMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.HashMode }).(pulumi.StringPtrOutput)
}

// Health check list. The structure of `healthCheck` block is documented below.
func (o SystemSdwanServiceOutput) HealthChecks() SystemSdwanServiceHealthCheckArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceHealthCheck { return v.HealthChecks }).(SystemSdwanServiceHealthCheckArrayOutput)
}

// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
func (o SystemSdwanServiceOutput) HoldDownTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.HoldDownTime }).(pulumi.IntPtrOutput)
}

// SD-WAN rule ID (1 - 4000).
func (o SystemSdwanServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) InputDeviceNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.InputDeviceNegate }).(pulumi.StringPtrOutput)
}

// Source interface name. The structure of `inputDevice` block is documented below.
func (o SystemSdwanServiceOutput) InputDevices() SystemSdwanServiceInputDeviceArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInputDevice { return v.InputDevices }).(SystemSdwanServiceInputDeviceArrayOutput)
}

// Source input-zone name. The structure of `inputZone` block is documented below.
func (o SystemSdwanServiceOutput) InputZones() SystemSdwanServiceInputZoneArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInputZone { return v.InputZones }).(SystemSdwanServiceInputZoneArrayOutput)
}

// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) InternetService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.InternetService }).(pulumi.StringPtrOutput)
}

// IDs of one or more application control categories. The structure of `internetServiceAppCtrlCategory` block is documented below.
func (o SystemSdwanServiceOutput) InternetServiceAppCtrlCategories() SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceAppCtrlCategory {
		return v.InternetServiceAppCtrlCategories
	}).(SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput)
}

// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
func (o SystemSdwanServiceOutput) InternetServiceAppCtrlGroups() SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceAppCtrlGroup {
		return v.InternetServiceAppCtrlGroups
	}).(SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput)
}

// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
func (o SystemSdwanServiceOutput) InternetServiceAppCtrls() SystemSdwanServiceInternetServiceAppCtrlArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceAppCtrl {
		return v.InternetServiceAppCtrls
	}).(SystemSdwanServiceInternetServiceAppCtrlArrayOutput)
}

// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
func (o SystemSdwanServiceOutput) InternetServiceCustomGroups() SystemSdwanServiceInternetServiceCustomGroupArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceCustomGroup {
		return v.InternetServiceCustomGroups
	}).(SystemSdwanServiceInternetServiceCustomGroupArrayOutput)
}

// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
func (o SystemSdwanServiceOutput) InternetServiceCustoms() SystemSdwanServiceInternetServiceCustomArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceCustom { return v.InternetServiceCustoms }).(SystemSdwanServiceInternetServiceCustomArrayOutput)
}

// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
func (o SystemSdwanServiceOutput) InternetServiceGroups() SystemSdwanServiceInternetServiceGroupArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceGroup { return v.InternetServiceGroups }).(SystemSdwanServiceInternetServiceGroupArrayOutput)
}

// Internet service name list. The structure of `internetServiceName` block is documented below.
func (o SystemSdwanServiceOutput) InternetServiceNames() SystemSdwanServiceInternetServiceNameArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceName { return v.InternetServiceNames }).(SystemSdwanServiceInternetServiceNameArrayOutput)
}

// Coefficient of jitter in the formula of custom-profile-1.
func (o SystemSdwanServiceOutput) JitterWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.JitterWeight }).(pulumi.IntPtrOutput)
}

// Coefficient of latency in the formula of custom-profile-1.
func (o SystemSdwanServiceOutput) LatencyWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.LatencyWeight }).(pulumi.IntPtrOutput)
}

// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
func (o SystemSdwanServiceOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
func (o SystemSdwanServiceOutput) LinkCostThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.LinkCostThreshold }).(pulumi.IntPtrOutput)
}

// Minimum number of members which meet SLA.
func (o SystemSdwanServiceOutput) MinimumSlaMeetMembers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.MinimumSlaMeetMembers }).(pulumi.IntPtrOutput)
}

// Control how the SD-WAN rule sets the priority of interfaces in the SD-WAN. Valid values: `auto`, `manual`, `priority`, `sla`, `load-balance`.
func (o SystemSdwanServiceOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Service and service group name.
func (o SystemSdwanServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Coefficient of packet-loss in the formula of custom-profile-1.
func (o SystemSdwanServiceOutput) PacketLossWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.PacketLossWeight }).(pulumi.IntPtrOutput)
}

// Enable/disable passive measurement based on the service criteria. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) PassiveMeasurement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.PassiveMeasurement }).(pulumi.StringPtrOutput)
}

// Member sequence number list. The structure of `priorityMembers` block is documented below.
func (o SystemSdwanServiceOutput) PriorityMembers() SystemSdwanServicePriorityMemberArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServicePriorityMember { return v.PriorityMembers }).(SystemSdwanServicePriorityMemberArrayOutput)
}

// Priority zone name list. The structure of `priorityZone` block is documented below.
func (o SystemSdwanServiceOutput) PriorityZones() SystemSdwanServicePriorityZoneArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServicePriorityZone { return v.PriorityZones }).(SystemSdwanServicePriorityZoneArrayOutput)
}

// Protocol number.
func (o SystemSdwanServiceOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

// Quality grade.
func (o SystemSdwanServiceOutput) QualityLink() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.QualityLink }).(pulumi.IntPtrOutput)
}

// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
func (o SystemSdwanServiceOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// IPv4 route map route-tag.
func (o SystemSdwanServiceOutput) RouteTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.RouteTag }).(pulumi.IntPtrOutput)
}

// Method to compare SLA value for SLA mode. Valid values: `order`, `number`.
func (o SystemSdwanServiceOutput) SlaCompareMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.SlaCompareMethod }).(pulumi.StringPtrOutput)
}

// Service level agreement (SLA). The structure of `sla` block is documented below.
func (o SystemSdwanServiceOutput) Slas() SystemSdwanServiceSlaArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceSla { return v.Slas }).(SystemSdwanServiceSlaArrayOutput)
}

// Source address6 name. The structure of `src6` block is documented below.
func (o SystemSdwanServiceOutput) Src6s() SystemSdwanServiceSrc6ArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceSrc6 { return v.Src6s }).(SystemSdwanServiceSrc6ArrayOutput)
}

// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) SrcNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.SrcNegate }).(pulumi.StringPtrOutput)
}

// Source address name. The structure of `src` block is documented below.
func (o SystemSdwanServiceOutput) Srcs() SystemSdwanServiceSrcArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceSrc { return v.Srcs }).(SystemSdwanServiceSrcArrayOutput)
}

// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) StandaloneAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.StandaloneAction }).(pulumi.StringPtrOutput)
}

// Start destination port number.
func (o SystemSdwanServiceOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Method of selecting member if more than one meets the SLA.
func (o SystemSdwanServiceOutput) TieBreak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.TieBreak }).(pulumi.StringPtrOutput)
}

// Type of service bit pattern.
func (o SystemSdwanServiceOutput) Tos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Tos }).(pulumi.StringPtrOutput)
}

// Type of service evaluated bits.
func (o SystemSdwanServiceOutput) TosMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.TosMask }).(pulumi.StringPtrOutput)
}

// Enable/disable use of ADVPN shortcut for quality comparison. Valid values: `enable`, `disable`.
func (o SystemSdwanServiceOutput) UseShortcutSla() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.UseShortcutSla }).(pulumi.StringPtrOutput)
}

// User name. The structure of `users` block is documented below.
func (o SystemSdwanServiceOutput) Users() SystemSdwanServiceUserArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceUser { return v.Users }).(SystemSdwanServiceUserArrayOutput)
}

type SystemSdwanServiceArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanService)(nil)).Elem()
}

func (o SystemSdwanServiceArrayOutput) ToSystemSdwanServiceArrayOutput() SystemSdwanServiceArrayOutput {
	return o
}

func (o SystemSdwanServiceArrayOutput) ToSystemSdwanServiceArrayOutputWithContext(ctx context.Context) SystemSdwanServiceArrayOutput {
	return o
}

func (o SystemSdwanServiceArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanService {
		return vs[0].([]SystemSdwanService)[vs[1].(int)]
	}).(SystemSdwanServiceOutput)
}

type SystemSdwanServiceDst6 struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	//
	// The `srcaddr6` block supports:
	//
	// The `dstaddr6` block supports:
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceDst6Input is an input type that accepts SystemSdwanServiceDst6Args and SystemSdwanServiceDst6Output values.
// You can construct a concrete instance of `SystemSdwanServiceDst6Input` via:
//
//	SystemSdwanServiceDst6Args{...}
type SystemSdwanServiceDst6Input interface {
	pulumi.Input

	ToSystemSdwanServiceDst6Output() SystemSdwanServiceDst6Output
	ToSystemSdwanServiceDst6OutputWithContext(context.Context) SystemSdwanServiceDst6Output
}

type SystemSdwanServiceDst6Args struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	//
	// The `srcaddr6` block supports:
	//
	// The `dstaddr6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceDst6)(nil)).Elem()
}

func (i SystemSdwanServiceDst6Args) ToSystemSdwanServiceDst6Output() SystemSdwanServiceDst6Output {
	return i.ToSystemSdwanServiceDst6OutputWithContext(context.Background())
}

func (i SystemSdwanServiceDst6Args) ToSystemSdwanServiceDst6OutputWithContext(ctx context.Context) SystemSdwanServiceDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceDst6Output)
}

// SystemSdwanServiceDst6ArrayInput is an input type that accepts SystemSdwanServiceDst6Array and SystemSdwanServiceDst6ArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceDst6ArrayInput` via:
//
//	SystemSdwanServiceDst6Array{ SystemSdwanServiceDst6Args{...} }
type SystemSdwanServiceDst6ArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceDst6ArrayOutput() SystemSdwanServiceDst6ArrayOutput
	ToSystemSdwanServiceDst6ArrayOutputWithContext(context.Context) SystemSdwanServiceDst6ArrayOutput
}

type SystemSdwanServiceDst6Array []SystemSdwanServiceDst6Input

func (SystemSdwanServiceDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceDst6)(nil)).Elem()
}

func (i SystemSdwanServiceDst6Array) ToSystemSdwanServiceDst6ArrayOutput() SystemSdwanServiceDst6ArrayOutput {
	return i.ToSystemSdwanServiceDst6ArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceDst6Array) ToSystemSdwanServiceDst6ArrayOutputWithContext(ctx context.Context) SystemSdwanServiceDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceDst6ArrayOutput)
}

type SystemSdwanServiceDst6Output struct{ *pulumi.OutputState }

func (SystemSdwanServiceDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceDst6)(nil)).Elem()
}

func (o SystemSdwanServiceDst6Output) ToSystemSdwanServiceDst6Output() SystemSdwanServiceDst6Output {
	return o
}

func (o SystemSdwanServiceDst6Output) ToSystemSdwanServiceDst6OutputWithContext(ctx context.Context) SystemSdwanServiceDst6Output {
	return o
}

// Physical interface name.
//
// The `dst6` block supports:
//
// The `src6` block supports:
//
// The `srcaddr6` block supports:
//
// The `dstaddr6` block supports:
func (o SystemSdwanServiceDst6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceDst6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceDst6ArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceDst6)(nil)).Elem()
}

func (o SystemSdwanServiceDst6ArrayOutput) ToSystemSdwanServiceDst6ArrayOutput() SystemSdwanServiceDst6ArrayOutput {
	return o
}

func (o SystemSdwanServiceDst6ArrayOutput) ToSystemSdwanServiceDst6ArrayOutputWithContext(ctx context.Context) SystemSdwanServiceDst6ArrayOutput {
	return o
}

func (o SystemSdwanServiceDst6ArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceDst6 {
		return vs[0].([]SystemSdwanServiceDst6)[vs[1].(int)]
	}).(SystemSdwanServiceDst6Output)
}

type SystemSdwanServiceDst struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceDstInput is an input type that accepts SystemSdwanServiceDstArgs and SystemSdwanServiceDstOutput values.
// You can construct a concrete instance of `SystemSdwanServiceDstInput` via:
//
//	SystemSdwanServiceDstArgs{...}
type SystemSdwanServiceDstInput interface {
	pulumi.Input

	ToSystemSdwanServiceDstOutput() SystemSdwanServiceDstOutput
	ToSystemSdwanServiceDstOutputWithContext(context.Context) SystemSdwanServiceDstOutput
}

type SystemSdwanServiceDstArgs struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceDst)(nil)).Elem()
}

func (i SystemSdwanServiceDstArgs) ToSystemSdwanServiceDstOutput() SystemSdwanServiceDstOutput {
	return i.ToSystemSdwanServiceDstOutputWithContext(context.Background())
}

func (i SystemSdwanServiceDstArgs) ToSystemSdwanServiceDstOutputWithContext(ctx context.Context) SystemSdwanServiceDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceDstOutput)
}

// SystemSdwanServiceDstArrayInput is an input type that accepts SystemSdwanServiceDstArray and SystemSdwanServiceDstArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceDstArrayInput` via:
//
//	SystemSdwanServiceDstArray{ SystemSdwanServiceDstArgs{...} }
type SystemSdwanServiceDstArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceDstArrayOutput() SystemSdwanServiceDstArrayOutput
	ToSystemSdwanServiceDstArrayOutputWithContext(context.Context) SystemSdwanServiceDstArrayOutput
}

type SystemSdwanServiceDstArray []SystemSdwanServiceDstInput

func (SystemSdwanServiceDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceDst)(nil)).Elem()
}

func (i SystemSdwanServiceDstArray) ToSystemSdwanServiceDstArrayOutput() SystemSdwanServiceDstArrayOutput {
	return i.ToSystemSdwanServiceDstArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceDstArray) ToSystemSdwanServiceDstArrayOutputWithContext(ctx context.Context) SystemSdwanServiceDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceDstArrayOutput)
}

type SystemSdwanServiceDstOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceDst)(nil)).Elem()
}

func (o SystemSdwanServiceDstOutput) ToSystemSdwanServiceDstOutput() SystemSdwanServiceDstOutput {
	return o
}

func (o SystemSdwanServiceDstOutput) ToSystemSdwanServiceDstOutputWithContext(ctx context.Context) SystemSdwanServiceDstOutput {
	return o
}

// Address or address group name.
func (o SystemSdwanServiceDstOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceDst) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceDstArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceDst)(nil)).Elem()
}

func (o SystemSdwanServiceDstArrayOutput) ToSystemSdwanServiceDstArrayOutput() SystemSdwanServiceDstArrayOutput {
	return o
}

func (o SystemSdwanServiceDstArrayOutput) ToSystemSdwanServiceDstArrayOutputWithContext(ctx context.Context) SystemSdwanServiceDstArrayOutput {
	return o
}

func (o SystemSdwanServiceDstArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceDst {
		return vs[0].([]SystemSdwanServiceDst)[vs[1].(int)]
	}).(SystemSdwanServiceDstOutput)
}

type SystemSdwanServiceGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceGroupInput is an input type that accepts SystemSdwanServiceGroupArgs and SystemSdwanServiceGroupOutput values.
// You can construct a concrete instance of `SystemSdwanServiceGroupInput` via:
//
//	SystemSdwanServiceGroupArgs{...}
type SystemSdwanServiceGroupInput interface {
	pulumi.Input

	ToSystemSdwanServiceGroupOutput() SystemSdwanServiceGroupOutput
	ToSystemSdwanServiceGroupOutputWithContext(context.Context) SystemSdwanServiceGroupOutput
}

type SystemSdwanServiceGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceGroup)(nil)).Elem()
}

func (i SystemSdwanServiceGroupArgs) ToSystemSdwanServiceGroupOutput() SystemSdwanServiceGroupOutput {
	return i.ToSystemSdwanServiceGroupOutputWithContext(context.Background())
}

func (i SystemSdwanServiceGroupArgs) ToSystemSdwanServiceGroupOutputWithContext(ctx context.Context) SystemSdwanServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceGroupOutput)
}

// SystemSdwanServiceGroupArrayInput is an input type that accepts SystemSdwanServiceGroupArray and SystemSdwanServiceGroupArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceGroupArrayInput` via:
//
//	SystemSdwanServiceGroupArray{ SystemSdwanServiceGroupArgs{...} }
type SystemSdwanServiceGroupArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceGroupArrayOutput() SystemSdwanServiceGroupArrayOutput
	ToSystemSdwanServiceGroupArrayOutputWithContext(context.Context) SystemSdwanServiceGroupArrayOutput
}

type SystemSdwanServiceGroupArray []SystemSdwanServiceGroupInput

func (SystemSdwanServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceGroup)(nil)).Elem()
}

func (i SystemSdwanServiceGroupArray) ToSystemSdwanServiceGroupArrayOutput() SystemSdwanServiceGroupArrayOutput {
	return i.ToSystemSdwanServiceGroupArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceGroupArray) ToSystemSdwanServiceGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceGroupArrayOutput)
}

type SystemSdwanServiceGroupOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceGroup)(nil)).Elem()
}

func (o SystemSdwanServiceGroupOutput) ToSystemSdwanServiceGroupOutput() SystemSdwanServiceGroupOutput {
	return o
}

func (o SystemSdwanServiceGroupOutput) ToSystemSdwanServiceGroupOutputWithContext(ctx context.Context) SystemSdwanServiceGroupOutput {
	return o
}

// Group name.
func (o SystemSdwanServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceGroup)(nil)).Elem()
}

func (o SystemSdwanServiceGroupArrayOutput) ToSystemSdwanServiceGroupArrayOutput() SystemSdwanServiceGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceGroupArrayOutput) ToSystemSdwanServiceGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceGroupArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceGroup {
		return vs[0].([]SystemSdwanServiceGroup)[vs[1].(int)]
	}).(SystemSdwanServiceGroupOutput)
}

type SystemSdwanServiceHealthCheck struct {
	// Health check name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceHealthCheckInput is an input type that accepts SystemSdwanServiceHealthCheckArgs and SystemSdwanServiceHealthCheckOutput values.
// You can construct a concrete instance of `SystemSdwanServiceHealthCheckInput` via:
//
//	SystemSdwanServiceHealthCheckArgs{...}
type SystemSdwanServiceHealthCheckInput interface {
	pulumi.Input

	ToSystemSdwanServiceHealthCheckOutput() SystemSdwanServiceHealthCheckOutput
	ToSystemSdwanServiceHealthCheckOutputWithContext(context.Context) SystemSdwanServiceHealthCheckOutput
}

type SystemSdwanServiceHealthCheckArgs struct {
	// Health check name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceHealthCheck)(nil)).Elem()
}

func (i SystemSdwanServiceHealthCheckArgs) ToSystemSdwanServiceHealthCheckOutput() SystemSdwanServiceHealthCheckOutput {
	return i.ToSystemSdwanServiceHealthCheckOutputWithContext(context.Background())
}

func (i SystemSdwanServiceHealthCheckArgs) ToSystemSdwanServiceHealthCheckOutputWithContext(ctx context.Context) SystemSdwanServiceHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceHealthCheckOutput)
}

// SystemSdwanServiceHealthCheckArrayInput is an input type that accepts SystemSdwanServiceHealthCheckArray and SystemSdwanServiceHealthCheckArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceHealthCheckArrayInput` via:
//
//	SystemSdwanServiceHealthCheckArray{ SystemSdwanServiceHealthCheckArgs{...} }
type SystemSdwanServiceHealthCheckArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceHealthCheckArrayOutput() SystemSdwanServiceHealthCheckArrayOutput
	ToSystemSdwanServiceHealthCheckArrayOutputWithContext(context.Context) SystemSdwanServiceHealthCheckArrayOutput
}

type SystemSdwanServiceHealthCheckArray []SystemSdwanServiceHealthCheckInput

func (SystemSdwanServiceHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceHealthCheck)(nil)).Elem()
}

func (i SystemSdwanServiceHealthCheckArray) ToSystemSdwanServiceHealthCheckArrayOutput() SystemSdwanServiceHealthCheckArrayOutput {
	return i.ToSystemSdwanServiceHealthCheckArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceHealthCheckArray) ToSystemSdwanServiceHealthCheckArrayOutputWithContext(ctx context.Context) SystemSdwanServiceHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceHealthCheckArrayOutput)
}

type SystemSdwanServiceHealthCheckOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceHealthCheck)(nil)).Elem()
}

func (o SystemSdwanServiceHealthCheckOutput) ToSystemSdwanServiceHealthCheckOutput() SystemSdwanServiceHealthCheckOutput {
	return o
}

func (o SystemSdwanServiceHealthCheckOutput) ToSystemSdwanServiceHealthCheckOutputWithContext(ctx context.Context) SystemSdwanServiceHealthCheckOutput {
	return o
}

// Health check name.
func (o SystemSdwanServiceHealthCheckOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceHealthCheck) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceHealthCheck)(nil)).Elem()
}

func (o SystemSdwanServiceHealthCheckArrayOutput) ToSystemSdwanServiceHealthCheckArrayOutput() SystemSdwanServiceHealthCheckArrayOutput {
	return o
}

func (o SystemSdwanServiceHealthCheckArrayOutput) ToSystemSdwanServiceHealthCheckArrayOutputWithContext(ctx context.Context) SystemSdwanServiceHealthCheckArrayOutput {
	return o
}

func (o SystemSdwanServiceHealthCheckArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceHealthCheck {
		return vs[0].([]SystemSdwanServiceHealthCheck)[vs[1].(int)]
	}).(SystemSdwanServiceHealthCheckOutput)
}

type SystemSdwanServiceInputDevice struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInputDeviceInput is an input type that accepts SystemSdwanServiceInputDeviceArgs and SystemSdwanServiceInputDeviceOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInputDeviceInput` via:
//
//	SystemSdwanServiceInputDeviceArgs{...}
type SystemSdwanServiceInputDeviceInput interface {
	pulumi.Input

	ToSystemSdwanServiceInputDeviceOutput() SystemSdwanServiceInputDeviceOutput
	ToSystemSdwanServiceInputDeviceOutputWithContext(context.Context) SystemSdwanServiceInputDeviceOutput
}

type SystemSdwanServiceInputDeviceArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInputDevice)(nil)).Elem()
}

func (i SystemSdwanServiceInputDeviceArgs) ToSystemSdwanServiceInputDeviceOutput() SystemSdwanServiceInputDeviceOutput {
	return i.ToSystemSdwanServiceInputDeviceOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInputDeviceArgs) ToSystemSdwanServiceInputDeviceOutputWithContext(ctx context.Context) SystemSdwanServiceInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInputDeviceOutput)
}

// SystemSdwanServiceInputDeviceArrayInput is an input type that accepts SystemSdwanServiceInputDeviceArray and SystemSdwanServiceInputDeviceArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInputDeviceArrayInput` via:
//
//	SystemSdwanServiceInputDeviceArray{ SystemSdwanServiceInputDeviceArgs{...} }
type SystemSdwanServiceInputDeviceArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInputDeviceArrayOutput() SystemSdwanServiceInputDeviceArrayOutput
	ToSystemSdwanServiceInputDeviceArrayOutputWithContext(context.Context) SystemSdwanServiceInputDeviceArrayOutput
}

type SystemSdwanServiceInputDeviceArray []SystemSdwanServiceInputDeviceInput

func (SystemSdwanServiceInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInputDevice)(nil)).Elem()
}

func (i SystemSdwanServiceInputDeviceArray) ToSystemSdwanServiceInputDeviceArrayOutput() SystemSdwanServiceInputDeviceArrayOutput {
	return i.ToSystemSdwanServiceInputDeviceArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInputDeviceArray) ToSystemSdwanServiceInputDeviceArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInputDeviceArrayOutput)
}

type SystemSdwanServiceInputDeviceOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInputDevice)(nil)).Elem()
}

func (o SystemSdwanServiceInputDeviceOutput) ToSystemSdwanServiceInputDeviceOutput() SystemSdwanServiceInputDeviceOutput {
	return o
}

func (o SystemSdwanServiceInputDeviceOutput) ToSystemSdwanServiceInputDeviceOutputWithContext(ctx context.Context) SystemSdwanServiceInputDeviceOutput {
	return o
}

// Interface name.
func (o SystemSdwanServiceInputDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInputDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInputDevice)(nil)).Elem()
}

func (o SystemSdwanServiceInputDeviceArrayOutput) ToSystemSdwanServiceInputDeviceArrayOutput() SystemSdwanServiceInputDeviceArrayOutput {
	return o
}

func (o SystemSdwanServiceInputDeviceArrayOutput) ToSystemSdwanServiceInputDeviceArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInputDeviceArrayOutput {
	return o
}

func (o SystemSdwanServiceInputDeviceArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInputDevice {
		return vs[0].([]SystemSdwanServiceInputDevice)[vs[1].(int)]
	}).(SystemSdwanServiceInputDeviceOutput)
}

type SystemSdwanServiceInputZone struct {
	// Zone.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInputZoneInput is an input type that accepts SystemSdwanServiceInputZoneArgs and SystemSdwanServiceInputZoneOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInputZoneInput` via:
//
//	SystemSdwanServiceInputZoneArgs{...}
type SystemSdwanServiceInputZoneInput interface {
	pulumi.Input

	ToSystemSdwanServiceInputZoneOutput() SystemSdwanServiceInputZoneOutput
	ToSystemSdwanServiceInputZoneOutputWithContext(context.Context) SystemSdwanServiceInputZoneOutput
}

type SystemSdwanServiceInputZoneArgs struct {
	// Zone.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInputZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInputZone)(nil)).Elem()
}

func (i SystemSdwanServiceInputZoneArgs) ToSystemSdwanServiceInputZoneOutput() SystemSdwanServiceInputZoneOutput {
	return i.ToSystemSdwanServiceInputZoneOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInputZoneArgs) ToSystemSdwanServiceInputZoneOutputWithContext(ctx context.Context) SystemSdwanServiceInputZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInputZoneOutput)
}

// SystemSdwanServiceInputZoneArrayInput is an input type that accepts SystemSdwanServiceInputZoneArray and SystemSdwanServiceInputZoneArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInputZoneArrayInput` via:
//
//	SystemSdwanServiceInputZoneArray{ SystemSdwanServiceInputZoneArgs{...} }
type SystemSdwanServiceInputZoneArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInputZoneArrayOutput() SystemSdwanServiceInputZoneArrayOutput
	ToSystemSdwanServiceInputZoneArrayOutputWithContext(context.Context) SystemSdwanServiceInputZoneArrayOutput
}

type SystemSdwanServiceInputZoneArray []SystemSdwanServiceInputZoneInput

func (SystemSdwanServiceInputZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInputZone)(nil)).Elem()
}

func (i SystemSdwanServiceInputZoneArray) ToSystemSdwanServiceInputZoneArrayOutput() SystemSdwanServiceInputZoneArrayOutput {
	return i.ToSystemSdwanServiceInputZoneArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInputZoneArray) ToSystemSdwanServiceInputZoneArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInputZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInputZoneArrayOutput)
}

type SystemSdwanServiceInputZoneOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInputZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInputZone)(nil)).Elem()
}

func (o SystemSdwanServiceInputZoneOutput) ToSystemSdwanServiceInputZoneOutput() SystemSdwanServiceInputZoneOutput {
	return o
}

func (o SystemSdwanServiceInputZoneOutput) ToSystemSdwanServiceInputZoneOutputWithContext(ctx context.Context) SystemSdwanServiceInputZoneOutput {
	return o
}

// Zone.
func (o SystemSdwanServiceInputZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInputZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInputZoneArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInputZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInputZone)(nil)).Elem()
}

func (o SystemSdwanServiceInputZoneArrayOutput) ToSystemSdwanServiceInputZoneArrayOutput() SystemSdwanServiceInputZoneArrayOutput {
	return o
}

func (o SystemSdwanServiceInputZoneArrayOutput) ToSystemSdwanServiceInputZoneArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInputZoneArrayOutput {
	return o
}

func (o SystemSdwanServiceInputZoneArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInputZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInputZone {
		return vs[0].([]SystemSdwanServiceInputZone)[vs[1].(int)]
	}).(SystemSdwanServiceInputZoneOutput)
}

type SystemSdwanServiceInternetServiceAppCtrl struct {
	// Application control based Internet Service ID.
	Id *int `pulumi:"id"`
}

// SystemSdwanServiceInternetServiceAppCtrlInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlArgs and SystemSdwanServiceInternetServiceAppCtrlOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlArgs{...}
type SystemSdwanServiceInternetServiceAppCtrlInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlOutput() SystemSdwanServiceInternetServiceAppCtrlOutput
	ToSystemSdwanServiceInternetServiceAppCtrlOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlOutput
}

type SystemSdwanServiceInternetServiceAppCtrlArgs struct {
	// Application control based Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemSdwanServiceInternetServiceAppCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlArgs) ToSystemSdwanServiceInternetServiceAppCtrlOutput() SystemSdwanServiceInternetServiceAppCtrlOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlArgs) ToSystemSdwanServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlOutput)
}

// SystemSdwanServiceInternetServiceAppCtrlArrayInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlArray and SystemSdwanServiceInternetServiceAppCtrlArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlArrayInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlArray{ SystemSdwanServiceInternetServiceAppCtrlArgs{...} }
type SystemSdwanServiceInternetServiceAppCtrlArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlArrayOutput() SystemSdwanServiceInternetServiceAppCtrlArrayOutput
	ToSystemSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlArrayOutput
}

type SystemSdwanServiceInternetServiceAppCtrlArray []SystemSdwanServiceInternetServiceAppCtrlInput

func (SystemSdwanServiceInternetServiceAppCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlArray) ToSystemSdwanServiceInternetServiceAppCtrlArrayOutput() SystemSdwanServiceInternetServiceAppCtrlArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlArray) ToSystemSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlArrayOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlOutput) ToSystemSdwanServiceInternetServiceAppCtrlOutput() SystemSdwanServiceInternetServiceAppCtrlOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlOutput) ToSystemSdwanServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlOutput {
	return o
}

// Application control based Internet Service ID.
func (o SystemSdwanServiceInternetServiceAppCtrlOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceAppCtrl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlArrayOutput() SystemSdwanServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceAppCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceAppCtrl {
		return vs[0].([]SystemSdwanServiceInternetServiceAppCtrl)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceAppCtrlOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlCategory struct {
	// Application control category ID.
	Id *int `pulumi:"id"`
}

// SystemSdwanServiceInternetServiceAppCtrlCategoryInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlCategoryArgs and SystemSdwanServiceInternetServiceAppCtrlCategoryOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlCategoryInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlCategoryArgs{...}
type SystemSdwanServiceInternetServiceAppCtrlCategoryInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryOutput
	ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryOutput
}

type SystemSdwanServiceInternetServiceAppCtrlCategoryArgs struct {
	// Application control category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemSdwanServiceInternetServiceAppCtrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlCategoryArgs) ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlCategoryArgs) ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlCategoryOutput)
}

// SystemSdwanServiceInternetServiceAppCtrlCategoryArrayInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlCategoryArray and SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlCategoryArrayInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlCategoryArray{ SystemSdwanServiceInternetServiceAppCtrlCategoryArgs{...} }
type SystemSdwanServiceInternetServiceAppCtrlCategoryArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput
	ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput
}

type SystemSdwanServiceInternetServiceAppCtrlCategoryArray []SystemSdwanServiceInternetServiceAppCtrlCategoryInput

func (SystemSdwanServiceInternetServiceAppCtrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlCategoryArray) ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlCategoryArray) ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlCategoryOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryOutput) ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryOutput) ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryOutput {
	return o
}

// Application control category ID.
func (o SystemSdwanServiceInternetServiceAppCtrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceAppCtrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceAppCtrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceAppCtrlCategory {
		return vs[0].([]SystemSdwanServiceInternetServiceAppCtrlCategory)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceAppCtrlCategoryOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlGroup struct {
	// Application control based Internet Service group name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInternetServiceAppCtrlGroupInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlGroupArgs and SystemSdwanServiceInternetServiceAppCtrlGroupOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlGroupInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlGroupArgs{...}
type SystemSdwanServiceInternetServiceAppCtrlGroupInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlGroupOutput() SystemSdwanServiceInternetServiceAppCtrlGroupOutput
	ToSystemSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupOutput
}

type SystemSdwanServiceInternetServiceAppCtrlGroupArgs struct {
	// Application control based Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInternetServiceAppCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlGroupArgs) ToSystemSdwanServiceInternetServiceAppCtrlGroupOutput() SystemSdwanServiceInternetServiceAppCtrlGroupOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlGroupArgs) ToSystemSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlGroupOutput)
}

// SystemSdwanServiceInternetServiceAppCtrlGroupArrayInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlGroupArray and SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlGroupArrayInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlGroupArray{ SystemSdwanServiceInternetServiceAppCtrlGroupArgs{...} }
type SystemSdwanServiceInternetServiceAppCtrlGroupArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput() SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput
	ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput
}

type SystemSdwanServiceInternetServiceAppCtrlGroupArray []SystemSdwanServiceInternetServiceAppCtrlGroupInput

func (SystemSdwanServiceInternetServiceAppCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlGroupArray) ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput() SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlGroupArray) ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlGroupOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupOutput) ToSystemSdwanServiceInternetServiceAppCtrlGroupOutput() SystemSdwanServiceInternetServiceAppCtrlGroupOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupOutput) ToSystemSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupOutput {
	return o
}

// Application control based Internet Service group name.
func (o SystemSdwanServiceInternetServiceAppCtrlGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceAppCtrlGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput() SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceAppCtrlGroup {
		return vs[0].([]SystemSdwanServiceInternetServiceAppCtrlGroup)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceAppCtrlGroupOutput)
}

type SystemSdwanServiceInternetServiceCustom struct {
	// Custom Internet service name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInternetServiceCustomInput is an input type that accepts SystemSdwanServiceInternetServiceCustomArgs and SystemSdwanServiceInternetServiceCustomOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceCustomInput` via:
//
//	SystemSdwanServiceInternetServiceCustomArgs{...}
type SystemSdwanServiceInternetServiceCustomInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceCustomOutput() SystemSdwanServiceInternetServiceCustomOutput
	ToSystemSdwanServiceInternetServiceCustomOutputWithContext(context.Context) SystemSdwanServiceInternetServiceCustomOutput
}

type SystemSdwanServiceInternetServiceCustomArgs struct {
	// Custom Internet service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceCustomArgs) ToSystemSdwanServiceInternetServiceCustomOutput() SystemSdwanServiceInternetServiceCustomOutput {
	return i.ToSystemSdwanServiceInternetServiceCustomOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceCustomArgs) ToSystemSdwanServiceInternetServiceCustomOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceCustomOutput)
}

// SystemSdwanServiceInternetServiceCustomArrayInput is an input type that accepts SystemSdwanServiceInternetServiceCustomArray and SystemSdwanServiceInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceCustomArrayInput` via:
//
//	SystemSdwanServiceInternetServiceCustomArray{ SystemSdwanServiceInternetServiceCustomArgs{...} }
type SystemSdwanServiceInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceCustomArrayOutput() SystemSdwanServiceInternetServiceCustomArrayOutput
	ToSystemSdwanServiceInternetServiceCustomArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceCustomArrayOutput
}

type SystemSdwanServiceInternetServiceCustomArray []SystemSdwanServiceInternetServiceCustomInput

func (SystemSdwanServiceInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceCustomArray) ToSystemSdwanServiceInternetServiceCustomArrayOutput() SystemSdwanServiceInternetServiceCustomArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceCustomArray) ToSystemSdwanServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceCustomArrayOutput)
}

type SystemSdwanServiceInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceCustomOutput) ToSystemSdwanServiceInternetServiceCustomOutput() SystemSdwanServiceInternetServiceCustomOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomOutput) ToSystemSdwanServiceInternetServiceCustomOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomOutput {
	return o
}

// Custom Internet service name.
func (o SystemSdwanServiceInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceCustomArrayOutput) ToSystemSdwanServiceInternetServiceCustomArrayOutput() SystemSdwanServiceInternetServiceCustomArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomArrayOutput) ToSystemSdwanServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceCustom {
		return vs[0].([]SystemSdwanServiceInternetServiceCustom)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceCustomOutput)
}

type SystemSdwanServiceInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInternetServiceCustomGroupInput is an input type that accepts SystemSdwanServiceInternetServiceCustomGroupArgs and SystemSdwanServiceInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceCustomGroupInput` via:
//
//	SystemSdwanServiceInternetServiceCustomGroupArgs{...}
type SystemSdwanServiceInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceCustomGroupOutput() SystemSdwanServiceInternetServiceCustomGroupOutput
	ToSystemSdwanServiceInternetServiceCustomGroupOutputWithContext(context.Context) SystemSdwanServiceInternetServiceCustomGroupOutput
}

type SystemSdwanServiceInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceCustomGroupArgs) ToSystemSdwanServiceInternetServiceCustomGroupOutput() SystemSdwanServiceInternetServiceCustomGroupOutput {
	return i.ToSystemSdwanServiceInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceCustomGroupArgs) ToSystemSdwanServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceCustomGroupOutput)
}

// SystemSdwanServiceInternetServiceCustomGroupArrayInput is an input type that accepts SystemSdwanServiceInternetServiceCustomGroupArray and SystemSdwanServiceInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceCustomGroupArrayInput` via:
//
//	SystemSdwanServiceInternetServiceCustomGroupArray{ SystemSdwanServiceInternetServiceCustomGroupArgs{...} }
type SystemSdwanServiceInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceCustomGroupArrayOutput() SystemSdwanServiceInternetServiceCustomGroupArrayOutput
	ToSystemSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceCustomGroupArrayOutput
}

type SystemSdwanServiceInternetServiceCustomGroupArray []SystemSdwanServiceInternetServiceCustomGroupInput

func (SystemSdwanServiceInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceCustomGroupArray) ToSystemSdwanServiceInternetServiceCustomGroupArrayOutput() SystemSdwanServiceInternetServiceCustomGroupArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceCustomGroupArray) ToSystemSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceCustomGroupArrayOutput)
}

type SystemSdwanServiceInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceCustomGroupOutput) ToSystemSdwanServiceInternetServiceCustomGroupOutput() SystemSdwanServiceInternetServiceCustomGroupOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomGroupOutput) ToSystemSdwanServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o SystemSdwanServiceInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceCustomGroupArrayOutput) ToSystemSdwanServiceInternetServiceCustomGroupArrayOutput() SystemSdwanServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomGroupArrayOutput) ToSystemSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceCustomGroup {
		return vs[0].([]SystemSdwanServiceInternetServiceCustomGroup)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceCustomGroupOutput)
}

type SystemSdwanServiceInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInternetServiceGroupInput is an input type that accepts SystemSdwanServiceInternetServiceGroupArgs and SystemSdwanServiceInternetServiceGroupOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceGroupInput` via:
//
//	SystemSdwanServiceInternetServiceGroupArgs{...}
type SystemSdwanServiceInternetServiceGroupInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceGroupOutput() SystemSdwanServiceInternetServiceGroupOutput
	ToSystemSdwanServiceInternetServiceGroupOutputWithContext(context.Context) SystemSdwanServiceInternetServiceGroupOutput
}

type SystemSdwanServiceInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceGroupArgs) ToSystemSdwanServiceInternetServiceGroupOutput() SystemSdwanServiceInternetServiceGroupOutput {
	return i.ToSystemSdwanServiceInternetServiceGroupOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceGroupArgs) ToSystemSdwanServiceInternetServiceGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceGroupOutput)
}

// SystemSdwanServiceInternetServiceGroupArrayInput is an input type that accepts SystemSdwanServiceInternetServiceGroupArray and SystemSdwanServiceInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceGroupArrayInput` via:
//
//	SystemSdwanServiceInternetServiceGroupArray{ SystemSdwanServiceInternetServiceGroupArgs{...} }
type SystemSdwanServiceInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceGroupArrayOutput() SystemSdwanServiceInternetServiceGroupArrayOutput
	ToSystemSdwanServiceInternetServiceGroupArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceGroupArrayOutput
}

type SystemSdwanServiceInternetServiceGroupArray []SystemSdwanServiceInternetServiceGroupInput

func (SystemSdwanServiceInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceGroupArray) ToSystemSdwanServiceInternetServiceGroupArrayOutput() SystemSdwanServiceInternetServiceGroupArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceGroupArray) ToSystemSdwanServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceGroupArrayOutput)
}

type SystemSdwanServiceInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceGroupOutput) ToSystemSdwanServiceInternetServiceGroupOutput() SystemSdwanServiceInternetServiceGroupOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceGroupOutput) ToSystemSdwanServiceInternetServiceGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o SystemSdwanServiceInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceGroupArrayOutput) ToSystemSdwanServiceInternetServiceGroupArrayOutput() SystemSdwanServiceInternetServiceGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceGroupArrayOutput) ToSystemSdwanServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceGroup {
		return vs[0].([]SystemSdwanServiceInternetServiceGroup)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceGroupOutput)
}

type SystemSdwanServiceInternetServiceName struct {
	// Internet service name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInternetServiceNameInput is an input type that accepts SystemSdwanServiceInternetServiceNameArgs and SystemSdwanServiceInternetServiceNameOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceNameInput` via:
//
//	SystemSdwanServiceInternetServiceNameArgs{...}
type SystemSdwanServiceInternetServiceNameInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceNameOutput() SystemSdwanServiceInternetServiceNameOutput
	ToSystemSdwanServiceInternetServiceNameOutputWithContext(context.Context) SystemSdwanServiceInternetServiceNameOutput
}

type SystemSdwanServiceInternetServiceNameArgs struct {
	// Internet service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceName)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceNameArgs) ToSystemSdwanServiceInternetServiceNameOutput() SystemSdwanServiceInternetServiceNameOutput {
	return i.ToSystemSdwanServiceInternetServiceNameOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceNameArgs) ToSystemSdwanServiceInternetServiceNameOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceNameOutput)
}

// SystemSdwanServiceInternetServiceNameArrayInput is an input type that accepts SystemSdwanServiceInternetServiceNameArray and SystemSdwanServiceInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceNameArrayInput` via:
//
//	SystemSdwanServiceInternetServiceNameArray{ SystemSdwanServiceInternetServiceNameArgs{...} }
type SystemSdwanServiceInternetServiceNameArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceNameArrayOutput() SystemSdwanServiceInternetServiceNameArrayOutput
	ToSystemSdwanServiceInternetServiceNameArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceNameArrayOutput
}

type SystemSdwanServiceInternetServiceNameArray []SystemSdwanServiceInternetServiceNameInput

func (SystemSdwanServiceInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceName)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceNameArray) ToSystemSdwanServiceInternetServiceNameArrayOutput() SystemSdwanServiceInternetServiceNameArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceNameArray) ToSystemSdwanServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceNameArrayOutput)
}

type SystemSdwanServiceInternetServiceNameOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceName)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceNameOutput) ToSystemSdwanServiceInternetServiceNameOutput() SystemSdwanServiceInternetServiceNameOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceNameOutput) ToSystemSdwanServiceInternetServiceNameOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceNameOutput {
	return o
}

// Internet service name.
func (o SystemSdwanServiceInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceName)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceNameArrayOutput) ToSystemSdwanServiceInternetServiceNameArrayOutput() SystemSdwanServiceInternetServiceNameArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceNameArrayOutput) ToSystemSdwanServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceNameArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceNameArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceName {
		return vs[0].([]SystemSdwanServiceInternetServiceName)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceNameOutput)
}

type SystemSdwanServicePriorityMember struct {
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// SystemSdwanServicePriorityMemberInput is an input type that accepts SystemSdwanServicePriorityMemberArgs and SystemSdwanServicePriorityMemberOutput values.
// You can construct a concrete instance of `SystemSdwanServicePriorityMemberInput` via:
//
//	SystemSdwanServicePriorityMemberArgs{...}
type SystemSdwanServicePriorityMemberInput interface {
	pulumi.Input

	ToSystemSdwanServicePriorityMemberOutput() SystemSdwanServicePriorityMemberOutput
	ToSystemSdwanServicePriorityMemberOutputWithContext(context.Context) SystemSdwanServicePriorityMemberOutput
}

type SystemSdwanServicePriorityMemberArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SystemSdwanServicePriorityMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServicePriorityMember)(nil)).Elem()
}

func (i SystemSdwanServicePriorityMemberArgs) ToSystemSdwanServicePriorityMemberOutput() SystemSdwanServicePriorityMemberOutput {
	return i.ToSystemSdwanServicePriorityMemberOutputWithContext(context.Background())
}

func (i SystemSdwanServicePriorityMemberArgs) ToSystemSdwanServicePriorityMemberOutputWithContext(ctx context.Context) SystemSdwanServicePriorityMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServicePriorityMemberOutput)
}

// SystemSdwanServicePriorityMemberArrayInput is an input type that accepts SystemSdwanServicePriorityMemberArray and SystemSdwanServicePriorityMemberArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServicePriorityMemberArrayInput` via:
//
//	SystemSdwanServicePriorityMemberArray{ SystemSdwanServicePriorityMemberArgs{...} }
type SystemSdwanServicePriorityMemberArrayInput interface {
	pulumi.Input

	ToSystemSdwanServicePriorityMemberArrayOutput() SystemSdwanServicePriorityMemberArrayOutput
	ToSystemSdwanServicePriorityMemberArrayOutputWithContext(context.Context) SystemSdwanServicePriorityMemberArrayOutput
}

type SystemSdwanServicePriorityMemberArray []SystemSdwanServicePriorityMemberInput

func (SystemSdwanServicePriorityMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServicePriorityMember)(nil)).Elem()
}

func (i SystemSdwanServicePriorityMemberArray) ToSystemSdwanServicePriorityMemberArrayOutput() SystemSdwanServicePriorityMemberArrayOutput {
	return i.ToSystemSdwanServicePriorityMemberArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServicePriorityMemberArray) ToSystemSdwanServicePriorityMemberArrayOutputWithContext(ctx context.Context) SystemSdwanServicePriorityMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServicePriorityMemberArrayOutput)
}

type SystemSdwanServicePriorityMemberOutput struct{ *pulumi.OutputState }

func (SystemSdwanServicePriorityMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServicePriorityMember)(nil)).Elem()
}

func (o SystemSdwanServicePriorityMemberOutput) ToSystemSdwanServicePriorityMemberOutput() SystemSdwanServicePriorityMemberOutput {
	return o
}

func (o SystemSdwanServicePriorityMemberOutput) ToSystemSdwanServicePriorityMemberOutputWithContext(ctx context.Context) SystemSdwanServicePriorityMemberOutput {
	return o
}

// Member sequence number.
func (o SystemSdwanServicePriorityMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanServicePriorityMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SystemSdwanServicePriorityMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServicePriorityMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServicePriorityMember)(nil)).Elem()
}

func (o SystemSdwanServicePriorityMemberArrayOutput) ToSystemSdwanServicePriorityMemberArrayOutput() SystemSdwanServicePriorityMemberArrayOutput {
	return o
}

func (o SystemSdwanServicePriorityMemberArrayOutput) ToSystemSdwanServicePriorityMemberArrayOutputWithContext(ctx context.Context) SystemSdwanServicePriorityMemberArrayOutput {
	return o
}

func (o SystemSdwanServicePriorityMemberArrayOutput) Index(i pulumi.IntInput) SystemSdwanServicePriorityMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServicePriorityMember {
		return vs[0].([]SystemSdwanServicePriorityMember)[vs[1].(int)]
	}).(SystemSdwanServicePriorityMemberOutput)
}

type SystemSdwanServicePriorityZone struct {
	// Priority zone name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServicePriorityZoneInput is an input type that accepts SystemSdwanServicePriorityZoneArgs and SystemSdwanServicePriorityZoneOutput values.
// You can construct a concrete instance of `SystemSdwanServicePriorityZoneInput` via:
//
//	SystemSdwanServicePriorityZoneArgs{...}
type SystemSdwanServicePriorityZoneInput interface {
	pulumi.Input

	ToSystemSdwanServicePriorityZoneOutput() SystemSdwanServicePriorityZoneOutput
	ToSystemSdwanServicePriorityZoneOutputWithContext(context.Context) SystemSdwanServicePriorityZoneOutput
}

type SystemSdwanServicePriorityZoneArgs struct {
	// Priority zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServicePriorityZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServicePriorityZone)(nil)).Elem()
}

func (i SystemSdwanServicePriorityZoneArgs) ToSystemSdwanServicePriorityZoneOutput() SystemSdwanServicePriorityZoneOutput {
	return i.ToSystemSdwanServicePriorityZoneOutputWithContext(context.Background())
}

func (i SystemSdwanServicePriorityZoneArgs) ToSystemSdwanServicePriorityZoneOutputWithContext(ctx context.Context) SystemSdwanServicePriorityZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServicePriorityZoneOutput)
}

// SystemSdwanServicePriorityZoneArrayInput is an input type that accepts SystemSdwanServicePriorityZoneArray and SystemSdwanServicePriorityZoneArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServicePriorityZoneArrayInput` via:
//
//	SystemSdwanServicePriorityZoneArray{ SystemSdwanServicePriorityZoneArgs{...} }
type SystemSdwanServicePriorityZoneArrayInput interface {
	pulumi.Input

	ToSystemSdwanServicePriorityZoneArrayOutput() SystemSdwanServicePriorityZoneArrayOutput
	ToSystemSdwanServicePriorityZoneArrayOutputWithContext(context.Context) SystemSdwanServicePriorityZoneArrayOutput
}

type SystemSdwanServicePriorityZoneArray []SystemSdwanServicePriorityZoneInput

func (SystemSdwanServicePriorityZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServicePriorityZone)(nil)).Elem()
}

func (i SystemSdwanServicePriorityZoneArray) ToSystemSdwanServicePriorityZoneArrayOutput() SystemSdwanServicePriorityZoneArrayOutput {
	return i.ToSystemSdwanServicePriorityZoneArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServicePriorityZoneArray) ToSystemSdwanServicePriorityZoneArrayOutputWithContext(ctx context.Context) SystemSdwanServicePriorityZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServicePriorityZoneArrayOutput)
}

type SystemSdwanServicePriorityZoneOutput struct{ *pulumi.OutputState }

func (SystemSdwanServicePriorityZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServicePriorityZone)(nil)).Elem()
}

func (o SystemSdwanServicePriorityZoneOutput) ToSystemSdwanServicePriorityZoneOutput() SystemSdwanServicePriorityZoneOutput {
	return o
}

func (o SystemSdwanServicePriorityZoneOutput) ToSystemSdwanServicePriorityZoneOutputWithContext(ctx context.Context) SystemSdwanServicePriorityZoneOutput {
	return o
}

// Priority zone name.
func (o SystemSdwanServicePriorityZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServicePriorityZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServicePriorityZoneArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServicePriorityZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServicePriorityZone)(nil)).Elem()
}

func (o SystemSdwanServicePriorityZoneArrayOutput) ToSystemSdwanServicePriorityZoneArrayOutput() SystemSdwanServicePriorityZoneArrayOutput {
	return o
}

func (o SystemSdwanServicePriorityZoneArrayOutput) ToSystemSdwanServicePriorityZoneArrayOutputWithContext(ctx context.Context) SystemSdwanServicePriorityZoneArrayOutput {
	return o
}

func (o SystemSdwanServicePriorityZoneArrayOutput) Index(i pulumi.IntInput) SystemSdwanServicePriorityZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServicePriorityZone {
		return vs[0].([]SystemSdwanServicePriorityZone)[vs[1].(int)]
	}).(SystemSdwanServicePriorityZoneOutput)
}

type SystemSdwanServiceSla struct {
	// SD-WAN health-check.
	HealthCheck *string `pulumi:"healthCheck"`
	// SLA ID.
	Id *int `pulumi:"id"`
}

// SystemSdwanServiceSlaInput is an input type that accepts SystemSdwanServiceSlaArgs and SystemSdwanServiceSlaOutput values.
// You can construct a concrete instance of `SystemSdwanServiceSlaInput` via:
//
//	SystemSdwanServiceSlaArgs{...}
type SystemSdwanServiceSlaInput interface {
	pulumi.Input

	ToSystemSdwanServiceSlaOutput() SystemSdwanServiceSlaOutput
	ToSystemSdwanServiceSlaOutputWithContext(context.Context) SystemSdwanServiceSlaOutput
}

type SystemSdwanServiceSlaArgs struct {
	// SD-WAN health-check.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// SLA ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemSdwanServiceSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSla)(nil)).Elem()
}

func (i SystemSdwanServiceSlaArgs) ToSystemSdwanServiceSlaOutput() SystemSdwanServiceSlaOutput {
	return i.ToSystemSdwanServiceSlaOutputWithContext(context.Background())
}

func (i SystemSdwanServiceSlaArgs) ToSystemSdwanServiceSlaOutputWithContext(ctx context.Context) SystemSdwanServiceSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSlaOutput)
}

// SystemSdwanServiceSlaArrayInput is an input type that accepts SystemSdwanServiceSlaArray and SystemSdwanServiceSlaArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceSlaArrayInput` via:
//
//	SystemSdwanServiceSlaArray{ SystemSdwanServiceSlaArgs{...} }
type SystemSdwanServiceSlaArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceSlaArrayOutput() SystemSdwanServiceSlaArrayOutput
	ToSystemSdwanServiceSlaArrayOutputWithContext(context.Context) SystemSdwanServiceSlaArrayOutput
}

type SystemSdwanServiceSlaArray []SystemSdwanServiceSlaInput

func (SystemSdwanServiceSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSla)(nil)).Elem()
}

func (i SystemSdwanServiceSlaArray) ToSystemSdwanServiceSlaArrayOutput() SystemSdwanServiceSlaArrayOutput {
	return i.ToSystemSdwanServiceSlaArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceSlaArray) ToSystemSdwanServiceSlaArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSlaArrayOutput)
}

type SystemSdwanServiceSlaOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSla)(nil)).Elem()
}

func (o SystemSdwanServiceSlaOutput) ToSystemSdwanServiceSlaOutput() SystemSdwanServiceSlaOutput {
	return o
}

func (o SystemSdwanServiceSlaOutput) ToSystemSdwanServiceSlaOutputWithContext(ctx context.Context) SystemSdwanServiceSlaOutput {
	return o
}

// SD-WAN health-check.
func (o SystemSdwanServiceSlaOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceSla) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// SLA ID.
func (o SystemSdwanServiceSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemSdwanServiceSlaArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSla)(nil)).Elem()
}

func (o SystemSdwanServiceSlaArrayOutput) ToSystemSdwanServiceSlaArrayOutput() SystemSdwanServiceSlaArrayOutput {
	return o
}

func (o SystemSdwanServiceSlaArrayOutput) ToSystemSdwanServiceSlaArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSlaArrayOutput {
	return o
}

func (o SystemSdwanServiceSlaArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceSla {
		return vs[0].([]SystemSdwanServiceSla)[vs[1].(int)]
	}).(SystemSdwanServiceSlaOutput)
}

type SystemSdwanServiceSrc6 struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	//
	// The `srcaddr6` block supports:
	//
	// The `dstaddr6` block supports:
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceSrc6Input is an input type that accepts SystemSdwanServiceSrc6Args and SystemSdwanServiceSrc6Output values.
// You can construct a concrete instance of `SystemSdwanServiceSrc6Input` via:
//
//	SystemSdwanServiceSrc6Args{...}
type SystemSdwanServiceSrc6Input interface {
	pulumi.Input

	ToSystemSdwanServiceSrc6Output() SystemSdwanServiceSrc6Output
	ToSystemSdwanServiceSrc6OutputWithContext(context.Context) SystemSdwanServiceSrc6Output
}

type SystemSdwanServiceSrc6Args struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	//
	// The `srcaddr6` block supports:
	//
	// The `dstaddr6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceSrc6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSrc6)(nil)).Elem()
}

func (i SystemSdwanServiceSrc6Args) ToSystemSdwanServiceSrc6Output() SystemSdwanServiceSrc6Output {
	return i.ToSystemSdwanServiceSrc6OutputWithContext(context.Background())
}

func (i SystemSdwanServiceSrc6Args) ToSystemSdwanServiceSrc6OutputWithContext(ctx context.Context) SystemSdwanServiceSrc6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSrc6Output)
}

// SystemSdwanServiceSrc6ArrayInput is an input type that accepts SystemSdwanServiceSrc6Array and SystemSdwanServiceSrc6ArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceSrc6ArrayInput` via:
//
//	SystemSdwanServiceSrc6Array{ SystemSdwanServiceSrc6Args{...} }
type SystemSdwanServiceSrc6ArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceSrc6ArrayOutput() SystemSdwanServiceSrc6ArrayOutput
	ToSystemSdwanServiceSrc6ArrayOutputWithContext(context.Context) SystemSdwanServiceSrc6ArrayOutput
}

type SystemSdwanServiceSrc6Array []SystemSdwanServiceSrc6Input

func (SystemSdwanServiceSrc6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSrc6)(nil)).Elem()
}

func (i SystemSdwanServiceSrc6Array) ToSystemSdwanServiceSrc6ArrayOutput() SystemSdwanServiceSrc6ArrayOutput {
	return i.ToSystemSdwanServiceSrc6ArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceSrc6Array) ToSystemSdwanServiceSrc6ArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSrc6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSrc6ArrayOutput)
}

type SystemSdwanServiceSrc6Output struct{ *pulumi.OutputState }

func (SystemSdwanServiceSrc6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSrc6)(nil)).Elem()
}

func (o SystemSdwanServiceSrc6Output) ToSystemSdwanServiceSrc6Output() SystemSdwanServiceSrc6Output {
	return o
}

func (o SystemSdwanServiceSrc6Output) ToSystemSdwanServiceSrc6OutputWithContext(ctx context.Context) SystemSdwanServiceSrc6Output {
	return o
}

// Physical interface name.
//
// The `dst6` block supports:
//
// The `src6` block supports:
//
// The `srcaddr6` block supports:
//
// The `dstaddr6` block supports:
func (o SystemSdwanServiceSrc6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceSrc6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceSrc6ArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceSrc6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSrc6)(nil)).Elem()
}

func (o SystemSdwanServiceSrc6ArrayOutput) ToSystemSdwanServiceSrc6ArrayOutput() SystemSdwanServiceSrc6ArrayOutput {
	return o
}

func (o SystemSdwanServiceSrc6ArrayOutput) ToSystemSdwanServiceSrc6ArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSrc6ArrayOutput {
	return o
}

func (o SystemSdwanServiceSrc6ArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceSrc6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceSrc6 {
		return vs[0].([]SystemSdwanServiceSrc6)[vs[1].(int)]
	}).(SystemSdwanServiceSrc6Output)
}

type SystemSdwanServiceSrc struct {
	// Address6 or address6 group name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceSrcInput is an input type that accepts SystemSdwanServiceSrcArgs and SystemSdwanServiceSrcOutput values.
// You can construct a concrete instance of `SystemSdwanServiceSrcInput` via:
//
//	SystemSdwanServiceSrcArgs{...}
type SystemSdwanServiceSrcInput interface {
	pulumi.Input

	ToSystemSdwanServiceSrcOutput() SystemSdwanServiceSrcOutput
	ToSystemSdwanServiceSrcOutputWithContext(context.Context) SystemSdwanServiceSrcOutput
}

type SystemSdwanServiceSrcArgs struct {
	// Address6 or address6 group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceSrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSrc)(nil)).Elem()
}

func (i SystemSdwanServiceSrcArgs) ToSystemSdwanServiceSrcOutput() SystemSdwanServiceSrcOutput {
	return i.ToSystemSdwanServiceSrcOutputWithContext(context.Background())
}

func (i SystemSdwanServiceSrcArgs) ToSystemSdwanServiceSrcOutputWithContext(ctx context.Context) SystemSdwanServiceSrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSrcOutput)
}

// SystemSdwanServiceSrcArrayInput is an input type that accepts SystemSdwanServiceSrcArray and SystemSdwanServiceSrcArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceSrcArrayInput` via:
//
//	SystemSdwanServiceSrcArray{ SystemSdwanServiceSrcArgs{...} }
type SystemSdwanServiceSrcArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceSrcArrayOutput() SystemSdwanServiceSrcArrayOutput
	ToSystemSdwanServiceSrcArrayOutputWithContext(context.Context) SystemSdwanServiceSrcArrayOutput
}

type SystemSdwanServiceSrcArray []SystemSdwanServiceSrcInput

func (SystemSdwanServiceSrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSrc)(nil)).Elem()
}

func (i SystemSdwanServiceSrcArray) ToSystemSdwanServiceSrcArrayOutput() SystemSdwanServiceSrcArrayOutput {
	return i.ToSystemSdwanServiceSrcArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceSrcArray) ToSystemSdwanServiceSrcArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSrcArrayOutput)
}

type SystemSdwanServiceSrcOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceSrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSrc)(nil)).Elem()
}

func (o SystemSdwanServiceSrcOutput) ToSystemSdwanServiceSrcOutput() SystemSdwanServiceSrcOutput {
	return o
}

func (o SystemSdwanServiceSrcOutput) ToSystemSdwanServiceSrcOutputWithContext(ctx context.Context) SystemSdwanServiceSrcOutput {
	return o
}

// Address6 or address6 group name.
func (o SystemSdwanServiceSrcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceSrc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceSrcArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceSrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSrc)(nil)).Elem()
}

func (o SystemSdwanServiceSrcArrayOutput) ToSystemSdwanServiceSrcArrayOutput() SystemSdwanServiceSrcArrayOutput {
	return o
}

func (o SystemSdwanServiceSrcArrayOutput) ToSystemSdwanServiceSrcArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSrcArrayOutput {
	return o
}

func (o SystemSdwanServiceSrcArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceSrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceSrc {
		return vs[0].([]SystemSdwanServiceSrc)[vs[1].(int)]
	}).(SystemSdwanServiceSrcOutput)
}

type SystemSdwanServiceUser struct {
	// User name.
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceUserInput is an input type that accepts SystemSdwanServiceUserArgs and SystemSdwanServiceUserOutput values.
// You can construct a concrete instance of `SystemSdwanServiceUserInput` via:
//
//	SystemSdwanServiceUserArgs{...}
type SystemSdwanServiceUserInput interface {
	pulumi.Input

	ToSystemSdwanServiceUserOutput() SystemSdwanServiceUserOutput
	ToSystemSdwanServiceUserOutputWithContext(context.Context) SystemSdwanServiceUserOutput
}

type SystemSdwanServiceUserArgs struct {
	// User name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceUser)(nil)).Elem()
}

func (i SystemSdwanServiceUserArgs) ToSystemSdwanServiceUserOutput() SystemSdwanServiceUserOutput {
	return i.ToSystemSdwanServiceUserOutputWithContext(context.Background())
}

func (i SystemSdwanServiceUserArgs) ToSystemSdwanServiceUserOutputWithContext(ctx context.Context) SystemSdwanServiceUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceUserOutput)
}

// SystemSdwanServiceUserArrayInput is an input type that accepts SystemSdwanServiceUserArray and SystemSdwanServiceUserArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceUserArrayInput` via:
//
//	SystemSdwanServiceUserArray{ SystemSdwanServiceUserArgs{...} }
type SystemSdwanServiceUserArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceUserArrayOutput() SystemSdwanServiceUserArrayOutput
	ToSystemSdwanServiceUserArrayOutputWithContext(context.Context) SystemSdwanServiceUserArrayOutput
}

type SystemSdwanServiceUserArray []SystemSdwanServiceUserInput

func (SystemSdwanServiceUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceUser)(nil)).Elem()
}

func (i SystemSdwanServiceUserArray) ToSystemSdwanServiceUserArrayOutput() SystemSdwanServiceUserArrayOutput {
	return i.ToSystemSdwanServiceUserArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceUserArray) ToSystemSdwanServiceUserArrayOutputWithContext(ctx context.Context) SystemSdwanServiceUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceUserArrayOutput)
}

type SystemSdwanServiceUserOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceUser)(nil)).Elem()
}

func (o SystemSdwanServiceUserOutput) ToSystemSdwanServiceUserOutput() SystemSdwanServiceUserOutput {
	return o
}

func (o SystemSdwanServiceUserOutput) ToSystemSdwanServiceUserOutputWithContext(ctx context.Context) SystemSdwanServiceUserOutput {
	return o
}

// User name.
func (o SystemSdwanServiceUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceUserArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceUser)(nil)).Elem()
}

func (o SystemSdwanServiceUserArrayOutput) ToSystemSdwanServiceUserArrayOutput() SystemSdwanServiceUserArrayOutput {
	return o
}

func (o SystemSdwanServiceUserArrayOutput) ToSystemSdwanServiceUserArrayOutputWithContext(ctx context.Context) SystemSdwanServiceUserArrayOutput {
	return o
}

func (o SystemSdwanServiceUserArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceUser {
		return vs[0].([]SystemSdwanServiceUser)[vs[1].(int)]
	}).(SystemSdwanServiceUserOutput)
}

type SystemSdwanZone struct {
	// Zone name.
	Name *string `pulumi:"name"`
	// Method of selecting member if more than one meets the SLA.
	ServiceSlaTieBreak *string `pulumi:"serviceSlaTieBreak"`
}

// SystemSdwanZoneInput is an input type that accepts SystemSdwanZoneArgs and SystemSdwanZoneOutput values.
// You can construct a concrete instance of `SystemSdwanZoneInput` via:
//
//	SystemSdwanZoneArgs{...}
type SystemSdwanZoneInput interface {
	pulumi.Input

	ToSystemSdwanZoneOutput() SystemSdwanZoneOutput
	ToSystemSdwanZoneOutputWithContext(context.Context) SystemSdwanZoneOutput
}

type SystemSdwanZoneArgs struct {
	// Zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Method of selecting member if more than one meets the SLA.
	ServiceSlaTieBreak pulumi.StringPtrInput `pulumi:"serviceSlaTieBreak"`
}

func (SystemSdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanZone)(nil)).Elem()
}

func (i SystemSdwanZoneArgs) ToSystemSdwanZoneOutput() SystemSdwanZoneOutput {
	return i.ToSystemSdwanZoneOutputWithContext(context.Background())
}

func (i SystemSdwanZoneArgs) ToSystemSdwanZoneOutputWithContext(ctx context.Context) SystemSdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanZoneOutput)
}

// SystemSdwanZoneArrayInput is an input type that accepts SystemSdwanZoneArray and SystemSdwanZoneArrayOutput values.
// You can construct a concrete instance of `SystemSdwanZoneArrayInput` via:
//
//	SystemSdwanZoneArray{ SystemSdwanZoneArgs{...} }
type SystemSdwanZoneArrayInput interface {
	pulumi.Input

	ToSystemSdwanZoneArrayOutput() SystemSdwanZoneArrayOutput
	ToSystemSdwanZoneArrayOutputWithContext(context.Context) SystemSdwanZoneArrayOutput
}

type SystemSdwanZoneArray []SystemSdwanZoneInput

func (SystemSdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanZone)(nil)).Elem()
}

func (i SystemSdwanZoneArray) ToSystemSdwanZoneArrayOutput() SystemSdwanZoneArrayOutput {
	return i.ToSystemSdwanZoneArrayOutputWithContext(context.Background())
}

func (i SystemSdwanZoneArray) ToSystemSdwanZoneArrayOutputWithContext(ctx context.Context) SystemSdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanZoneArrayOutput)
}

type SystemSdwanZoneOutput struct{ *pulumi.OutputState }

func (SystemSdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanZone)(nil)).Elem()
}

func (o SystemSdwanZoneOutput) ToSystemSdwanZoneOutput() SystemSdwanZoneOutput {
	return o
}

func (o SystemSdwanZoneOutput) ToSystemSdwanZoneOutputWithContext(ctx context.Context) SystemSdwanZoneOutput {
	return o
}

// Zone name.
func (o SystemSdwanZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Method of selecting member if more than one meets the SLA.
func (o SystemSdwanZoneOutput) ServiceSlaTieBreak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanZone) *string { return v.ServiceSlaTieBreak }).(pulumi.StringPtrOutput)
}

type SystemSdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanZone)(nil)).Elem()
}

func (o SystemSdwanZoneArrayOutput) ToSystemSdwanZoneArrayOutput() SystemSdwanZoneArrayOutput {
	return o
}

func (o SystemSdwanZoneArrayOutput) ToSystemSdwanZoneArrayOutputWithContext(ctx context.Context) SystemSdwanZoneArrayOutput {
	return o
}

func (o SystemSdwanZoneArrayOutput) Index(i pulumi.IntInput) SystemSdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanZone {
		return vs[0].([]SystemSdwanZone)[vs[1].(int)]
	}).(SystemSdwanZoneOutput)
}

type SystemSessionttlPort struct {
	// End port number.
	EndPort *int `pulumi:"endPort"`
	// Table entry ID.
	Id *int `pulumi:"id"`
	// Protocol (0 - 255).
	Protocol *int `pulumi:"protocol"`
	// Start port number.
	StartPort *int `pulumi:"startPort"`
	// Session timeout (TTL).
	Timeout *string `pulumi:"timeout"`
}

// SystemSessionttlPortInput is an input type that accepts SystemSessionttlPortArgs and SystemSessionttlPortOutput values.
// You can construct a concrete instance of `SystemSessionttlPortInput` via:
//
//	SystemSessionttlPortArgs{...}
type SystemSessionttlPortInput interface {
	pulumi.Input

	ToSystemSessionttlPortOutput() SystemSessionttlPortOutput
	ToSystemSessionttlPortOutputWithContext(context.Context) SystemSessionttlPortOutput
}

type SystemSessionttlPortArgs struct {
	// End port number.
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Table entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Protocol (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
	// Start port number.
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
	// Session timeout (TTL).
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (SystemSessionttlPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSessionttlPort)(nil)).Elem()
}

func (i SystemSessionttlPortArgs) ToSystemSessionttlPortOutput() SystemSessionttlPortOutput {
	return i.ToSystemSessionttlPortOutputWithContext(context.Background())
}

func (i SystemSessionttlPortArgs) ToSystemSessionttlPortOutputWithContext(ctx context.Context) SystemSessionttlPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionttlPortOutput)
}

// SystemSessionttlPortArrayInput is an input type that accepts SystemSessionttlPortArray and SystemSessionttlPortArrayOutput values.
// You can construct a concrete instance of `SystemSessionttlPortArrayInput` via:
//
//	SystemSessionttlPortArray{ SystemSessionttlPortArgs{...} }
type SystemSessionttlPortArrayInput interface {
	pulumi.Input

	ToSystemSessionttlPortArrayOutput() SystemSessionttlPortArrayOutput
	ToSystemSessionttlPortArrayOutputWithContext(context.Context) SystemSessionttlPortArrayOutput
}

type SystemSessionttlPortArray []SystemSessionttlPortInput

func (SystemSessionttlPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSessionttlPort)(nil)).Elem()
}

func (i SystemSessionttlPortArray) ToSystemSessionttlPortArrayOutput() SystemSessionttlPortArrayOutput {
	return i.ToSystemSessionttlPortArrayOutputWithContext(context.Background())
}

func (i SystemSessionttlPortArray) ToSystemSessionttlPortArrayOutputWithContext(ctx context.Context) SystemSessionttlPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionttlPortArrayOutput)
}

type SystemSessionttlPortOutput struct{ *pulumi.OutputState }

func (SystemSessionttlPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSessionttlPort)(nil)).Elem()
}

func (o SystemSessionttlPortOutput) ToSystemSessionttlPortOutput() SystemSessionttlPortOutput {
	return o
}

func (o SystemSessionttlPortOutput) ToSystemSessionttlPortOutputWithContext(ctx context.Context) SystemSessionttlPortOutput {
	return o
}

// End port number.
func (o SystemSessionttlPortOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSessionttlPort) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Table entry ID.
func (o SystemSessionttlPortOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSessionttlPort) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Protocol (0 - 255).
func (o SystemSessionttlPortOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSessionttlPort) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

// Start port number.
func (o SystemSessionttlPortOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSessionttlPort) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

// Session timeout (TTL).
func (o SystemSessionttlPortOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSessionttlPort) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type SystemSessionttlPortArrayOutput struct{ *pulumi.OutputState }

func (SystemSessionttlPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSessionttlPort)(nil)).Elem()
}

func (o SystemSessionttlPortArrayOutput) ToSystemSessionttlPortArrayOutput() SystemSessionttlPortArrayOutput {
	return o
}

func (o SystemSessionttlPortArrayOutput) ToSystemSessionttlPortArrayOutputWithContext(ctx context.Context) SystemSessionttlPortArrayOutput {
	return o
}

func (o SystemSessionttlPortArrayOutput) Index(i pulumi.IntInput) SystemSessionttlPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSessionttlPort {
		return vs[0].([]SystemSessionttlPort)[vs[1].(int)]
	}).(SystemSessionttlPortOutput)
}

type SystemSettingsGuiDefaultPolicyColumn struct {
	// Select column name.
	Name *string `pulumi:"name"`
}

// SystemSettingsGuiDefaultPolicyColumnInput is an input type that accepts SystemSettingsGuiDefaultPolicyColumnArgs and SystemSettingsGuiDefaultPolicyColumnOutput values.
// You can construct a concrete instance of `SystemSettingsGuiDefaultPolicyColumnInput` via:
//
//	SystemSettingsGuiDefaultPolicyColumnArgs{...}
type SystemSettingsGuiDefaultPolicyColumnInput interface {
	pulumi.Input

	ToSystemSettingsGuiDefaultPolicyColumnOutput() SystemSettingsGuiDefaultPolicyColumnOutput
	ToSystemSettingsGuiDefaultPolicyColumnOutputWithContext(context.Context) SystemSettingsGuiDefaultPolicyColumnOutput
}

type SystemSettingsGuiDefaultPolicyColumnArgs struct {
	// Select column name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSettingsGuiDefaultPolicyColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (i SystemSettingsGuiDefaultPolicyColumnArgs) ToSystemSettingsGuiDefaultPolicyColumnOutput() SystemSettingsGuiDefaultPolicyColumnOutput {
	return i.ToSystemSettingsGuiDefaultPolicyColumnOutputWithContext(context.Background())
}

func (i SystemSettingsGuiDefaultPolicyColumnArgs) ToSystemSettingsGuiDefaultPolicyColumnOutputWithContext(ctx context.Context) SystemSettingsGuiDefaultPolicyColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingsGuiDefaultPolicyColumnOutput)
}

// SystemSettingsGuiDefaultPolicyColumnArrayInput is an input type that accepts SystemSettingsGuiDefaultPolicyColumnArray and SystemSettingsGuiDefaultPolicyColumnArrayOutput values.
// You can construct a concrete instance of `SystemSettingsGuiDefaultPolicyColumnArrayInput` via:
//
//	SystemSettingsGuiDefaultPolicyColumnArray{ SystemSettingsGuiDefaultPolicyColumnArgs{...} }
type SystemSettingsGuiDefaultPolicyColumnArrayInput interface {
	pulumi.Input

	ToSystemSettingsGuiDefaultPolicyColumnArrayOutput() SystemSettingsGuiDefaultPolicyColumnArrayOutput
	ToSystemSettingsGuiDefaultPolicyColumnArrayOutputWithContext(context.Context) SystemSettingsGuiDefaultPolicyColumnArrayOutput
}

type SystemSettingsGuiDefaultPolicyColumnArray []SystemSettingsGuiDefaultPolicyColumnInput

func (SystemSettingsGuiDefaultPolicyColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (i SystemSettingsGuiDefaultPolicyColumnArray) ToSystemSettingsGuiDefaultPolicyColumnArrayOutput() SystemSettingsGuiDefaultPolicyColumnArrayOutput {
	return i.ToSystemSettingsGuiDefaultPolicyColumnArrayOutputWithContext(context.Background())
}

func (i SystemSettingsGuiDefaultPolicyColumnArray) ToSystemSettingsGuiDefaultPolicyColumnArrayOutputWithContext(ctx context.Context) SystemSettingsGuiDefaultPolicyColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingsGuiDefaultPolicyColumnArrayOutput)
}

type SystemSettingsGuiDefaultPolicyColumnOutput struct{ *pulumi.OutputState }

func (SystemSettingsGuiDefaultPolicyColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (o SystemSettingsGuiDefaultPolicyColumnOutput) ToSystemSettingsGuiDefaultPolicyColumnOutput() SystemSettingsGuiDefaultPolicyColumnOutput {
	return o
}

func (o SystemSettingsGuiDefaultPolicyColumnOutput) ToSystemSettingsGuiDefaultPolicyColumnOutputWithContext(ctx context.Context) SystemSettingsGuiDefaultPolicyColumnOutput {
	return o
}

// Select column name.
func (o SystemSettingsGuiDefaultPolicyColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSettingsGuiDefaultPolicyColumn) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSettingsGuiDefaultPolicyColumnArrayOutput struct{ *pulumi.OutputState }

func (SystemSettingsGuiDefaultPolicyColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (o SystemSettingsGuiDefaultPolicyColumnArrayOutput) ToSystemSettingsGuiDefaultPolicyColumnArrayOutput() SystemSettingsGuiDefaultPolicyColumnArrayOutput {
	return o
}

func (o SystemSettingsGuiDefaultPolicyColumnArrayOutput) ToSystemSettingsGuiDefaultPolicyColumnArrayOutputWithContext(ctx context.Context) SystemSettingsGuiDefaultPolicyColumnArrayOutput {
	return o
}

func (o SystemSettingsGuiDefaultPolicyColumnArrayOutput) Index(i pulumi.IntInput) SystemSettingsGuiDefaultPolicyColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSettingsGuiDefaultPolicyColumn {
		return vs[0].([]SystemSettingsGuiDefaultPolicyColumn)[vs[1].(int)]
	}).(SystemSettingsGuiDefaultPolicyColumnOutput)
}

type SystemSpeedtestscheduleSchedule struct {
	// Name of a firewall recurring schedule.
	Name *string `pulumi:"name"`
}

// SystemSpeedtestscheduleScheduleInput is an input type that accepts SystemSpeedtestscheduleScheduleArgs and SystemSpeedtestscheduleScheduleOutput values.
// You can construct a concrete instance of `SystemSpeedtestscheduleScheduleInput` via:
//
//	SystemSpeedtestscheduleScheduleArgs{...}
type SystemSpeedtestscheduleScheduleInput interface {
	pulumi.Input

	ToSystemSpeedtestscheduleScheduleOutput() SystemSpeedtestscheduleScheduleOutput
	ToSystemSpeedtestscheduleScheduleOutputWithContext(context.Context) SystemSpeedtestscheduleScheduleOutput
}

type SystemSpeedtestscheduleScheduleArgs struct {
	// Name of a firewall recurring schedule.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSpeedtestscheduleScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSpeedtestscheduleSchedule)(nil)).Elem()
}

func (i SystemSpeedtestscheduleScheduleArgs) ToSystemSpeedtestscheduleScheduleOutput() SystemSpeedtestscheduleScheduleOutput {
	return i.ToSystemSpeedtestscheduleScheduleOutputWithContext(context.Background())
}

func (i SystemSpeedtestscheduleScheduleArgs) ToSystemSpeedtestscheduleScheduleOutputWithContext(ctx context.Context) SystemSpeedtestscheduleScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSpeedtestscheduleScheduleOutput)
}

// SystemSpeedtestscheduleScheduleArrayInput is an input type that accepts SystemSpeedtestscheduleScheduleArray and SystemSpeedtestscheduleScheduleArrayOutput values.
// You can construct a concrete instance of `SystemSpeedtestscheduleScheduleArrayInput` via:
//
//	SystemSpeedtestscheduleScheduleArray{ SystemSpeedtestscheduleScheduleArgs{...} }
type SystemSpeedtestscheduleScheduleArrayInput interface {
	pulumi.Input

	ToSystemSpeedtestscheduleScheduleArrayOutput() SystemSpeedtestscheduleScheduleArrayOutput
	ToSystemSpeedtestscheduleScheduleArrayOutputWithContext(context.Context) SystemSpeedtestscheduleScheduleArrayOutput
}

type SystemSpeedtestscheduleScheduleArray []SystemSpeedtestscheduleScheduleInput

func (SystemSpeedtestscheduleScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSpeedtestscheduleSchedule)(nil)).Elem()
}

func (i SystemSpeedtestscheduleScheduleArray) ToSystemSpeedtestscheduleScheduleArrayOutput() SystemSpeedtestscheduleScheduleArrayOutput {
	return i.ToSystemSpeedtestscheduleScheduleArrayOutputWithContext(context.Background())
}

func (i SystemSpeedtestscheduleScheduleArray) ToSystemSpeedtestscheduleScheduleArrayOutputWithContext(ctx context.Context) SystemSpeedtestscheduleScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSpeedtestscheduleScheduleArrayOutput)
}

type SystemSpeedtestscheduleScheduleOutput struct{ *pulumi.OutputState }

func (SystemSpeedtestscheduleScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSpeedtestscheduleSchedule)(nil)).Elem()
}

func (o SystemSpeedtestscheduleScheduleOutput) ToSystemSpeedtestscheduleScheduleOutput() SystemSpeedtestscheduleScheduleOutput {
	return o
}

func (o SystemSpeedtestscheduleScheduleOutput) ToSystemSpeedtestscheduleScheduleOutputWithContext(ctx context.Context) SystemSpeedtestscheduleScheduleOutput {
	return o
}

// Name of a firewall recurring schedule.
func (o SystemSpeedtestscheduleScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSpeedtestscheduleSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSpeedtestscheduleScheduleArrayOutput struct{ *pulumi.OutputState }

func (SystemSpeedtestscheduleScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSpeedtestscheduleSchedule)(nil)).Elem()
}

func (o SystemSpeedtestscheduleScheduleArrayOutput) ToSystemSpeedtestscheduleScheduleArrayOutput() SystemSpeedtestscheduleScheduleArrayOutput {
	return o
}

func (o SystemSpeedtestscheduleScheduleArrayOutput) ToSystemSpeedtestscheduleScheduleArrayOutputWithContext(ctx context.Context) SystemSpeedtestscheduleScheduleArrayOutput {
	return o
}

func (o SystemSpeedtestscheduleScheduleArrayOutput) Index(i pulumi.IntInput) SystemSpeedtestscheduleScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSpeedtestscheduleSchedule {
		return vs[0].([]SystemSpeedtestscheduleSchedule)[vs[1].(int)]
	}).(SystemSpeedtestscheduleScheduleOutput)
}

type SystemSpeedtestserverHost struct {
	// Server host ID.
	Id *int `pulumi:"id"`
	// Server host IPv4 address.
	Ip *string `pulumi:"ip"`
	// Speed test host password.
	Password *string `pulumi:"password"`
	// Server host port number to communicate with client.
	Port *int `pulumi:"port"`
	// Speed test host user name.
	User *string `pulumi:"user"`
}

// SystemSpeedtestserverHostInput is an input type that accepts SystemSpeedtestserverHostArgs and SystemSpeedtestserverHostOutput values.
// You can construct a concrete instance of `SystemSpeedtestserverHostInput` via:
//
//	SystemSpeedtestserverHostArgs{...}
type SystemSpeedtestserverHostInput interface {
	pulumi.Input

	ToSystemSpeedtestserverHostOutput() SystemSpeedtestserverHostOutput
	ToSystemSpeedtestserverHostOutputWithContext(context.Context) SystemSpeedtestserverHostOutput
}

type SystemSpeedtestserverHostArgs struct {
	// Server host ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Server host IPv4 address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Speed test host password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Server host port number to communicate with client.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Speed test host user name.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (SystemSpeedtestserverHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSpeedtestserverHost)(nil)).Elem()
}

func (i SystemSpeedtestserverHostArgs) ToSystemSpeedtestserverHostOutput() SystemSpeedtestserverHostOutput {
	return i.ToSystemSpeedtestserverHostOutputWithContext(context.Background())
}

func (i SystemSpeedtestserverHostArgs) ToSystemSpeedtestserverHostOutputWithContext(ctx context.Context) SystemSpeedtestserverHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSpeedtestserverHostOutput)
}

// SystemSpeedtestserverHostArrayInput is an input type that accepts SystemSpeedtestserverHostArray and SystemSpeedtestserverHostArrayOutput values.
// You can construct a concrete instance of `SystemSpeedtestserverHostArrayInput` via:
//
//	SystemSpeedtestserverHostArray{ SystemSpeedtestserverHostArgs{...} }
type SystemSpeedtestserverHostArrayInput interface {
	pulumi.Input

	ToSystemSpeedtestserverHostArrayOutput() SystemSpeedtestserverHostArrayOutput
	ToSystemSpeedtestserverHostArrayOutputWithContext(context.Context) SystemSpeedtestserverHostArrayOutput
}

type SystemSpeedtestserverHostArray []SystemSpeedtestserverHostInput

func (SystemSpeedtestserverHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSpeedtestserverHost)(nil)).Elem()
}

func (i SystemSpeedtestserverHostArray) ToSystemSpeedtestserverHostArrayOutput() SystemSpeedtestserverHostArrayOutput {
	return i.ToSystemSpeedtestserverHostArrayOutputWithContext(context.Background())
}

func (i SystemSpeedtestserverHostArray) ToSystemSpeedtestserverHostArrayOutputWithContext(ctx context.Context) SystemSpeedtestserverHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSpeedtestserverHostArrayOutput)
}

type SystemSpeedtestserverHostOutput struct{ *pulumi.OutputState }

func (SystemSpeedtestserverHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSpeedtestserverHost)(nil)).Elem()
}

func (o SystemSpeedtestserverHostOutput) ToSystemSpeedtestserverHostOutput() SystemSpeedtestserverHostOutput {
	return o
}

func (o SystemSpeedtestserverHostOutput) ToSystemSpeedtestserverHostOutputWithContext(ctx context.Context) SystemSpeedtestserverHostOutput {
	return o
}

// Server host ID.
func (o SystemSpeedtestserverHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSpeedtestserverHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Server host IPv4 address.
func (o SystemSpeedtestserverHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSpeedtestserverHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Speed test host password.
func (o SystemSpeedtestserverHostOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSpeedtestserverHost) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Server host port number to communicate with client.
func (o SystemSpeedtestserverHostOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSpeedtestserverHost) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Speed test host user name.
func (o SystemSpeedtestserverHostOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSpeedtestserverHost) *string { return v.User }).(pulumi.StringPtrOutput)
}

type SystemSpeedtestserverHostArrayOutput struct{ *pulumi.OutputState }

func (SystemSpeedtestserverHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSpeedtestserverHost)(nil)).Elem()
}

func (o SystemSpeedtestserverHostArrayOutput) ToSystemSpeedtestserverHostArrayOutput() SystemSpeedtestserverHostArrayOutput {
	return o
}

func (o SystemSpeedtestserverHostArrayOutput) ToSystemSpeedtestserverHostArrayOutputWithContext(ctx context.Context) SystemSpeedtestserverHostArrayOutput {
	return o
}

func (o SystemSpeedtestserverHostArrayOutput) Index(i pulumi.IntInput) SystemSpeedtestserverHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSpeedtestserverHost {
		return vs[0].([]SystemSpeedtestserverHost)[vs[1].(int)]
	}).(SystemSpeedtestserverHostOutput)
}

type SystemSsoadminVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// SystemSsoadminVdomInput is an input type that accepts SystemSsoadminVdomArgs and SystemSsoadminVdomOutput values.
// You can construct a concrete instance of `SystemSsoadminVdomInput` via:
//
//	SystemSsoadminVdomArgs{...}
type SystemSsoadminVdomInput interface {
	pulumi.Input

	ToSystemSsoadminVdomOutput() SystemSsoadminVdomOutput
	ToSystemSsoadminVdomOutputWithContext(context.Context) SystemSsoadminVdomOutput
}

type SystemSsoadminVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSsoadminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSsoadminVdom)(nil)).Elem()
}

func (i SystemSsoadminVdomArgs) ToSystemSsoadminVdomOutput() SystemSsoadminVdomOutput {
	return i.ToSystemSsoadminVdomOutputWithContext(context.Background())
}

func (i SystemSsoadminVdomArgs) ToSystemSsoadminVdomOutputWithContext(ctx context.Context) SystemSsoadminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoadminVdomOutput)
}

// SystemSsoadminVdomArrayInput is an input type that accepts SystemSsoadminVdomArray and SystemSsoadminVdomArrayOutput values.
// You can construct a concrete instance of `SystemSsoadminVdomArrayInput` via:
//
//	SystemSsoadminVdomArray{ SystemSsoadminVdomArgs{...} }
type SystemSsoadminVdomArrayInput interface {
	pulumi.Input

	ToSystemSsoadminVdomArrayOutput() SystemSsoadminVdomArrayOutput
	ToSystemSsoadminVdomArrayOutputWithContext(context.Context) SystemSsoadminVdomArrayOutput
}

type SystemSsoadminVdomArray []SystemSsoadminVdomInput

func (SystemSsoadminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSsoadminVdom)(nil)).Elem()
}

func (i SystemSsoadminVdomArray) ToSystemSsoadminVdomArrayOutput() SystemSsoadminVdomArrayOutput {
	return i.ToSystemSsoadminVdomArrayOutputWithContext(context.Background())
}

func (i SystemSsoadminVdomArray) ToSystemSsoadminVdomArrayOutputWithContext(ctx context.Context) SystemSsoadminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoadminVdomArrayOutput)
}

type SystemSsoadminVdomOutput struct{ *pulumi.OutputState }

func (SystemSsoadminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSsoadminVdom)(nil)).Elem()
}

func (o SystemSsoadminVdomOutput) ToSystemSsoadminVdomOutput() SystemSsoadminVdomOutput {
	return o
}

func (o SystemSsoadminVdomOutput) ToSystemSsoadminVdomOutputWithContext(ctx context.Context) SystemSsoadminVdomOutput {
	return o
}

// Virtual domain name.
func (o SystemSsoadminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSsoadminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSsoadminVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemSsoadminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSsoadminVdom)(nil)).Elem()
}

func (o SystemSsoadminVdomArrayOutput) ToSystemSsoadminVdomArrayOutput() SystemSsoadminVdomArrayOutput {
	return o
}

func (o SystemSsoadminVdomArrayOutput) ToSystemSsoadminVdomArrayOutputWithContext(ctx context.Context) SystemSsoadminVdomArrayOutput {
	return o
}

func (o SystemSsoadminVdomArrayOutput) Index(i pulumi.IntInput) SystemSsoadminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSsoadminVdom {
		return vs[0].([]SystemSsoadminVdom)[vs[1].(int)]
	}).(SystemSsoadminVdomOutput)
}

type SystemSsoforticloudadminVdom struct {
	// Virtual domain name.
	Name *string `pulumi:"name"`
}

// SystemSsoforticloudadminVdomInput is an input type that accepts SystemSsoforticloudadminVdomArgs and SystemSsoforticloudadminVdomOutput values.
// You can construct a concrete instance of `SystemSsoforticloudadminVdomInput` via:
//
//	SystemSsoforticloudadminVdomArgs{...}
type SystemSsoforticloudadminVdomInput interface {
	pulumi.Input

	ToSystemSsoforticloudadminVdomOutput() SystemSsoforticloudadminVdomOutput
	ToSystemSsoforticloudadminVdomOutputWithContext(context.Context) SystemSsoforticloudadminVdomOutput
}

type SystemSsoforticloudadminVdomArgs struct {
	// Virtual domain name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSsoforticloudadminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSsoforticloudadminVdom)(nil)).Elem()
}

func (i SystemSsoforticloudadminVdomArgs) ToSystemSsoforticloudadminVdomOutput() SystemSsoforticloudadminVdomOutput {
	return i.ToSystemSsoforticloudadminVdomOutputWithContext(context.Background())
}

func (i SystemSsoforticloudadminVdomArgs) ToSystemSsoforticloudadminVdomOutputWithContext(ctx context.Context) SystemSsoforticloudadminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoforticloudadminVdomOutput)
}

// SystemSsoforticloudadminVdomArrayInput is an input type that accepts SystemSsoforticloudadminVdomArray and SystemSsoforticloudadminVdomArrayOutput values.
// You can construct a concrete instance of `SystemSsoforticloudadminVdomArrayInput` via:
//
//	SystemSsoforticloudadminVdomArray{ SystemSsoforticloudadminVdomArgs{...} }
type SystemSsoforticloudadminVdomArrayInput interface {
	pulumi.Input

	ToSystemSsoforticloudadminVdomArrayOutput() SystemSsoforticloudadminVdomArrayOutput
	ToSystemSsoforticloudadminVdomArrayOutputWithContext(context.Context) SystemSsoforticloudadminVdomArrayOutput
}

type SystemSsoforticloudadminVdomArray []SystemSsoforticloudadminVdomInput

func (SystemSsoforticloudadminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSsoforticloudadminVdom)(nil)).Elem()
}

func (i SystemSsoforticloudadminVdomArray) ToSystemSsoforticloudadminVdomArrayOutput() SystemSsoforticloudadminVdomArrayOutput {
	return i.ToSystemSsoforticloudadminVdomArrayOutputWithContext(context.Background())
}

func (i SystemSsoforticloudadminVdomArray) ToSystemSsoforticloudadminVdomArrayOutputWithContext(ctx context.Context) SystemSsoforticloudadminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoforticloudadminVdomArrayOutput)
}

type SystemSsoforticloudadminVdomOutput struct{ *pulumi.OutputState }

func (SystemSsoforticloudadminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSsoforticloudadminVdom)(nil)).Elem()
}

func (o SystemSsoforticloudadminVdomOutput) ToSystemSsoforticloudadminVdomOutput() SystemSsoforticloudadminVdomOutput {
	return o
}

func (o SystemSsoforticloudadminVdomOutput) ToSystemSsoforticloudadminVdomOutputWithContext(ctx context.Context) SystemSsoforticloudadminVdomOutput {
	return o
}

// Virtual domain name.
func (o SystemSsoforticloudadminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSsoforticloudadminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSsoforticloudadminVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemSsoforticloudadminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSsoforticloudadminVdom)(nil)).Elem()
}

func (o SystemSsoforticloudadminVdomArrayOutput) ToSystemSsoforticloudadminVdomArrayOutput() SystemSsoforticloudadminVdomArrayOutput {
	return o
}

func (o SystemSsoforticloudadminVdomArrayOutput) ToSystemSsoforticloudadminVdomArrayOutputWithContext(ctx context.Context) SystemSsoforticloudadminVdomArrayOutput {
	return o
}

func (o SystemSsoforticloudadminVdomArrayOutput) Index(i pulumi.IntInput) SystemSsoforticloudadminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSsoforticloudadminVdom {
		return vs[0].([]SystemSsoforticloudadminVdom)[vs[1].(int)]
	}).(SystemSsoforticloudadminVdomOutput)
}

type SystemStandaloneclusterClusterPeer struct {
	// List of interfaces to be turned down before session synchronization is complete. The structure of `downIntfsBeforeSessSync` block is documented below.
	DownIntfsBeforeSessSyncs []SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSync `pulumi:"downIntfsBeforeSessSyncs"`
	// Heartbeat interval (1 - 20 (100*ms). Increase to reduce false positives.
	HbInterval *int `pulumi:"hbInterval"`
	// Lost heartbeat threshold (1 - 60). Increase to reduce false positives.
	HbLostThreshold *int `pulumi:"hbLostThreshold"`
	// Enable/disable IPsec tunnel synchronization. Valid values: `enable`, `disable`.
	IpsecTunnelSync *string `pulumi:"ipsecTunnelSync"`
	// IP address of the interface on the peer unit that is used for the session synchronization link.
	Peerip *string `pulumi:"peerip"`
	// VDOM that contains the session synchronization link interface on the peer unit. Usually both peers would have the same peervd.
	Peervd *string `pulumi:"peervd"`
	// Enable/disable IKE route announcement on the backup unit. Valid values: `enable`, `disable`.
	SecondaryAddIpsecRoutes *string `pulumi:"secondaryAddIpsecRoutes"`
	// Add one or more filters if you only want to synchronize some sessions. Use the filter to configure the types of sessions to synchronize. The structure of `sessionSyncFilter` block is documented below.
	SessionSyncFilter *SystemStandaloneclusterClusterPeerSessionSyncFilter `pulumi:"sessionSyncFilter"`
	// Sync ID.
	SyncId *int `pulumi:"syncId"`
	// Sessions from these VDOMs are synchronized using this session synchronization configuration. The structure of `syncvd` block is documented below.
	Syncvds []SystemStandaloneclusterClusterPeerSyncvd `pulumi:"syncvds"`
}

// SystemStandaloneclusterClusterPeerInput is an input type that accepts SystemStandaloneclusterClusterPeerArgs and SystemStandaloneclusterClusterPeerOutput values.
// You can construct a concrete instance of `SystemStandaloneclusterClusterPeerInput` via:
//
//	SystemStandaloneclusterClusterPeerArgs{...}
type SystemStandaloneclusterClusterPeerInput interface {
	pulumi.Input

	ToSystemStandaloneclusterClusterPeerOutput() SystemStandaloneclusterClusterPeerOutput
	ToSystemStandaloneclusterClusterPeerOutputWithContext(context.Context) SystemStandaloneclusterClusterPeerOutput
}

type SystemStandaloneclusterClusterPeerArgs struct {
	// List of interfaces to be turned down before session synchronization is complete. The structure of `downIntfsBeforeSessSync` block is documented below.
	DownIntfsBeforeSessSyncs SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayInput `pulumi:"downIntfsBeforeSessSyncs"`
	// Heartbeat interval (1 - 20 (100*ms). Increase to reduce false positives.
	HbInterval pulumi.IntPtrInput `pulumi:"hbInterval"`
	// Lost heartbeat threshold (1 - 60). Increase to reduce false positives.
	HbLostThreshold pulumi.IntPtrInput `pulumi:"hbLostThreshold"`
	// Enable/disable IPsec tunnel synchronization. Valid values: `enable`, `disable`.
	IpsecTunnelSync pulumi.StringPtrInput `pulumi:"ipsecTunnelSync"`
	// IP address of the interface on the peer unit that is used for the session synchronization link.
	Peerip pulumi.StringPtrInput `pulumi:"peerip"`
	// VDOM that contains the session synchronization link interface on the peer unit. Usually both peers would have the same peervd.
	Peervd pulumi.StringPtrInput `pulumi:"peervd"`
	// Enable/disable IKE route announcement on the backup unit. Valid values: `enable`, `disable`.
	SecondaryAddIpsecRoutes pulumi.StringPtrInput `pulumi:"secondaryAddIpsecRoutes"`
	// Add one or more filters if you only want to synchronize some sessions. Use the filter to configure the types of sessions to synchronize. The structure of `sessionSyncFilter` block is documented below.
	SessionSyncFilter SystemStandaloneclusterClusterPeerSessionSyncFilterPtrInput `pulumi:"sessionSyncFilter"`
	// Sync ID.
	SyncId pulumi.IntPtrInput `pulumi:"syncId"`
	// Sessions from these VDOMs are synchronized using this session synchronization configuration. The structure of `syncvd` block is documented below.
	Syncvds SystemStandaloneclusterClusterPeerSyncvdArrayInput `pulumi:"syncvds"`
}

func (SystemStandaloneclusterClusterPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneclusterClusterPeer)(nil)).Elem()
}

func (i SystemStandaloneclusterClusterPeerArgs) ToSystemStandaloneclusterClusterPeerOutput() SystemStandaloneclusterClusterPeerOutput {
	return i.ToSystemStandaloneclusterClusterPeerOutputWithContext(context.Background())
}

func (i SystemStandaloneclusterClusterPeerArgs) ToSystemStandaloneclusterClusterPeerOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerOutput)
}

// SystemStandaloneclusterClusterPeerArrayInput is an input type that accepts SystemStandaloneclusterClusterPeerArray and SystemStandaloneclusterClusterPeerArrayOutput values.
// You can construct a concrete instance of `SystemStandaloneclusterClusterPeerArrayInput` via:
//
//	SystemStandaloneclusterClusterPeerArray{ SystemStandaloneclusterClusterPeerArgs{...} }
type SystemStandaloneclusterClusterPeerArrayInput interface {
	pulumi.Input

	ToSystemStandaloneclusterClusterPeerArrayOutput() SystemStandaloneclusterClusterPeerArrayOutput
	ToSystemStandaloneclusterClusterPeerArrayOutputWithContext(context.Context) SystemStandaloneclusterClusterPeerArrayOutput
}

type SystemStandaloneclusterClusterPeerArray []SystemStandaloneclusterClusterPeerInput

func (SystemStandaloneclusterClusterPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneclusterClusterPeer)(nil)).Elem()
}

func (i SystemStandaloneclusterClusterPeerArray) ToSystemStandaloneclusterClusterPeerArrayOutput() SystemStandaloneclusterClusterPeerArrayOutput {
	return i.ToSystemStandaloneclusterClusterPeerArrayOutputWithContext(context.Background())
}

func (i SystemStandaloneclusterClusterPeerArray) ToSystemStandaloneclusterClusterPeerArrayOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerArrayOutput)
}

type SystemStandaloneclusterClusterPeerOutput struct{ *pulumi.OutputState }

func (SystemStandaloneclusterClusterPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneclusterClusterPeer)(nil)).Elem()
}

func (o SystemStandaloneclusterClusterPeerOutput) ToSystemStandaloneclusterClusterPeerOutput() SystemStandaloneclusterClusterPeerOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerOutput) ToSystemStandaloneclusterClusterPeerOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerOutput {
	return o
}

// List of interfaces to be turned down before session synchronization is complete. The structure of `downIntfsBeforeSessSync` block is documented below.
func (o SystemStandaloneclusterClusterPeerOutput) DownIntfsBeforeSessSyncs() SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeer) []SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSync {
		return v.DownIntfsBeforeSessSyncs
	}).(SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput)
}

// Heartbeat interval (1 - 20 (100*ms). Increase to reduce false positives.
func (o SystemStandaloneclusterClusterPeerOutput) HbInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeer) *int { return v.HbInterval }).(pulumi.IntPtrOutput)
}

// Lost heartbeat threshold (1 - 60). Increase to reduce false positives.
func (o SystemStandaloneclusterClusterPeerOutput) HbLostThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeer) *int { return v.HbLostThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable IPsec tunnel synchronization. Valid values: `enable`, `disable`.
func (o SystemStandaloneclusterClusterPeerOutput) IpsecTunnelSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeer) *string { return v.IpsecTunnelSync }).(pulumi.StringPtrOutput)
}

// IP address of the interface on the peer unit that is used for the session synchronization link.
func (o SystemStandaloneclusterClusterPeerOutput) Peerip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeer) *string { return v.Peerip }).(pulumi.StringPtrOutput)
}

// VDOM that contains the session synchronization link interface on the peer unit. Usually both peers would have the same peervd.
func (o SystemStandaloneclusterClusterPeerOutput) Peervd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeer) *string { return v.Peervd }).(pulumi.StringPtrOutput)
}

// Enable/disable IKE route announcement on the backup unit. Valid values: `enable`, `disable`.
func (o SystemStandaloneclusterClusterPeerOutput) SecondaryAddIpsecRoutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeer) *string { return v.SecondaryAddIpsecRoutes }).(pulumi.StringPtrOutput)
}

// Add one or more filters if you only want to synchronize some sessions. Use the filter to configure the types of sessions to synchronize. The structure of `sessionSyncFilter` block is documented below.
func (o SystemStandaloneclusterClusterPeerOutput) SessionSyncFilter() SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeer) *SystemStandaloneclusterClusterPeerSessionSyncFilter {
		return v.SessionSyncFilter
	}).(SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput)
}

// Sync ID.
func (o SystemStandaloneclusterClusterPeerOutput) SyncId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeer) *int { return v.SyncId }).(pulumi.IntPtrOutput)
}

// Sessions from these VDOMs are synchronized using this session synchronization configuration. The structure of `syncvd` block is documented below.
func (o SystemStandaloneclusterClusterPeerOutput) Syncvds() SystemStandaloneclusterClusterPeerSyncvdArrayOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeer) []SystemStandaloneclusterClusterPeerSyncvd {
		return v.Syncvds
	}).(SystemStandaloneclusterClusterPeerSyncvdArrayOutput)
}

type SystemStandaloneclusterClusterPeerArrayOutput struct{ *pulumi.OutputState }

func (SystemStandaloneclusterClusterPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneclusterClusterPeer)(nil)).Elem()
}

func (o SystemStandaloneclusterClusterPeerArrayOutput) ToSystemStandaloneclusterClusterPeerArrayOutput() SystemStandaloneclusterClusterPeerArrayOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerArrayOutput) ToSystemStandaloneclusterClusterPeerArrayOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerArrayOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerArrayOutput) Index(i pulumi.IntInput) SystemStandaloneclusterClusterPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemStandaloneclusterClusterPeer {
		return vs[0].([]SystemStandaloneclusterClusterPeer)[vs[1].(int)]
	}).(SystemStandaloneclusterClusterPeerOutput)
}

type SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSync struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncInput is an input type that accepts SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs and SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput values.
// You can construct a concrete instance of `SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncInput` via:
//
//	SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs{...}
type SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncInput interface {
	pulumi.Input

	ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput() SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput
	ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(context.Context) SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput
}

type SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs) ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput() SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return i.ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(context.Background())
}

func (i SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs) ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput)
}

// SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayInput is an input type that accepts SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray and SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput values.
// You can construct a concrete instance of `SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayInput` via:
//
//	SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray{ SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs{...} }
type SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayInput interface {
	pulumi.Input

	ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput() SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput
	ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(context.Context) SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput
}

type SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray []SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncInput

func (SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray) ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput() SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return i.ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(context.Background())
}

func (i SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray) ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput)
}

type SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput struct{ *pulumi.OutputState }

func (SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput) ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput() SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput) ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return o
}

// Interface name.
func (o SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSync) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput struct{ *pulumi.OutputState }

func (SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput() SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) ToSystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) Index(i pulumi.IntInput) SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSync {
		return vs[0].([]SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSync)[vs[1].(int)]
	}).(SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput)
}

type SystemStandaloneclusterClusterPeerSessionSyncFilter struct {
	// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custom services. The structure of `customService` block is documented below.
	CustomServices []SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService `pulumi:"customServices"`
	// Only sessions to this IPv4 address are synchronized.
	Dstaddr *string `pulumi:"dstaddr"`
	// Only sessions to this IPv6 address are synchronized.
	Dstaddr6 *string `pulumi:"dstaddr6"`
	// Only sessions to this interface are synchronized.
	Dstintf *string `pulumi:"dstintf"`
	// Only sessions from this IPv4 address are synchronized.
	Srcaddr *string `pulumi:"srcaddr"`
	// Only sessions from this IPv6 address are synchronized.
	Srcaddr6 *string `pulumi:"srcaddr6"`
	// Only sessions from this interface are synchronized.
	Srcintf *string `pulumi:"srcintf"`
}

// SystemStandaloneclusterClusterPeerSessionSyncFilterInput is an input type that accepts SystemStandaloneclusterClusterPeerSessionSyncFilterArgs and SystemStandaloneclusterClusterPeerSessionSyncFilterOutput values.
// You can construct a concrete instance of `SystemStandaloneclusterClusterPeerSessionSyncFilterInput` via:
//
//	SystemStandaloneclusterClusterPeerSessionSyncFilterArgs{...}
type SystemStandaloneclusterClusterPeerSessionSyncFilterInput interface {
	pulumi.Input

	ToSystemStandaloneclusterClusterPeerSessionSyncFilterOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterOutput
	ToSystemStandaloneclusterClusterPeerSessionSyncFilterOutputWithContext(context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterOutput
}

type SystemStandaloneclusterClusterPeerSessionSyncFilterArgs struct {
	// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custom services. The structure of `customService` block is documented below.
	CustomServices SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayInput `pulumi:"customServices"`
	// Only sessions to this IPv4 address are synchronized.
	Dstaddr pulumi.StringPtrInput `pulumi:"dstaddr"`
	// Only sessions to this IPv6 address are synchronized.
	Dstaddr6 pulumi.StringPtrInput `pulumi:"dstaddr6"`
	// Only sessions to this interface are synchronized.
	Dstintf pulumi.StringPtrInput `pulumi:"dstintf"`
	// Only sessions from this IPv4 address are synchronized.
	Srcaddr pulumi.StringPtrInput `pulumi:"srcaddr"`
	// Only sessions from this IPv6 address are synchronized.
	Srcaddr6 pulumi.StringPtrInput `pulumi:"srcaddr6"`
	// Only sessions from this interface are synchronized.
	Srcintf pulumi.StringPtrInput `pulumi:"srcintf"`
}

func (SystemStandaloneclusterClusterPeerSessionSyncFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneclusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (i SystemStandaloneclusterClusterPeerSessionSyncFilterArgs) ToSystemStandaloneclusterClusterPeerSessionSyncFilterOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterOutput {
	return i.ToSystemStandaloneclusterClusterPeerSessionSyncFilterOutputWithContext(context.Background())
}

func (i SystemStandaloneclusterClusterPeerSessionSyncFilterArgs) ToSystemStandaloneclusterClusterPeerSessionSyncFilterOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerSessionSyncFilterOutput)
}

func (i SystemStandaloneclusterClusterPeerSessionSyncFilterArgs) ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return i.ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i SystemStandaloneclusterClusterPeerSessionSyncFilterArgs) ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerSessionSyncFilterOutput).ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx)
}

// SystemStandaloneclusterClusterPeerSessionSyncFilterPtrInput is an input type that accepts SystemStandaloneclusterClusterPeerSessionSyncFilterArgs, SystemStandaloneclusterClusterPeerSessionSyncFilterPtr and SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput values.
// You can construct a concrete instance of `SystemStandaloneclusterClusterPeerSessionSyncFilterPtrInput` via:
//
//	        SystemStandaloneclusterClusterPeerSessionSyncFilterArgs{...}
//
//	or:
//
//	        nil
type SystemStandaloneclusterClusterPeerSessionSyncFilterPtrInput interface {
	pulumi.Input

	ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput
	ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput
}

type systemStandaloneclusterClusterPeerSessionSyncFilterPtrType SystemStandaloneclusterClusterPeerSessionSyncFilterArgs

func SystemStandaloneclusterClusterPeerSessionSyncFilterPtr(v *SystemStandaloneclusterClusterPeerSessionSyncFilterArgs) SystemStandaloneclusterClusterPeerSessionSyncFilterPtrInput {
	return (*systemStandaloneclusterClusterPeerSessionSyncFilterPtrType)(v)
}

func (*systemStandaloneclusterClusterPeerSessionSyncFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemStandaloneclusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (i *systemStandaloneclusterClusterPeerSessionSyncFilterPtrType) ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return i.ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i *systemStandaloneclusterClusterPeerSessionSyncFilterPtrType) ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput)
}

type SystemStandaloneclusterClusterPeerSessionSyncFilterOutput struct{ *pulumi.OutputState }

func (SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneclusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) ToSystemStandaloneclusterClusterPeerSessionSyncFilterOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) ToSystemStandaloneclusterClusterPeerSessionSyncFilterOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return o.ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemStandaloneclusterClusterPeerSessionSyncFilter) *SystemStandaloneclusterClusterPeerSessionSyncFilter {
		return &v
	}).(SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput)
}

// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custom services. The structure of `customService` block is documented below.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) CustomServices() SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSessionSyncFilter) []SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService {
		return v.CustomServices
	}).(SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput)
}

// Only sessions to this IPv4 address are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Dstaddr }).(pulumi.StringPtrOutput)
}

// Only sessions to this IPv6 address are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Dstaddr6 }).(pulumi.StringPtrOutput)
}

// Only sessions to this interface are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Dstintf }).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv4 address are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Srcaddr }).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv6 address are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Srcaddr6 }).(pulumi.StringPtrOutput)
}

// Only sessions from this interface are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSessionSyncFilter) *string { return v.Srcintf }).(pulumi.StringPtrOutput)
}

type SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput struct{ *pulumi.OutputState }

func (SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemStandaloneclusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) ToSystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Elem() SystemStandaloneclusterClusterPeerSessionSyncFilterOutput {
	return o.ApplyT(func(v *SystemStandaloneclusterClusterPeerSessionSyncFilter) SystemStandaloneclusterClusterPeerSessionSyncFilter {
		if v != nil {
			return *v
		}
		var ret SystemStandaloneclusterClusterPeerSessionSyncFilter
		return ret
	}).(SystemStandaloneclusterClusterPeerSessionSyncFilterOutput)
}

// Only sessions using these custom services are synchronized. Use source and destination port ranges to define these custom services. The structure of `customService` block is documented below.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) CustomServices() SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v *SystemStandaloneclusterClusterPeerSessionSyncFilter) []SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput)
}

// Only sessions to this IPv4 address are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr
	}).(pulumi.StringPtrOutput)
}

// Only sessions to this IPv6 address are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr6
	}).(pulumi.StringPtrOutput)
}

// Only sessions to this interface are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstintf
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv4 address are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this IPv6 address are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr6
	}).(pulumi.StringPtrOutput)
}

// Only sessions from this interface are synchronized.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneclusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcintf
	}).(pulumi.StringPtrOutput)
}

type SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService struct {
	// Custom service destination port range.
	DstPortRange *string `pulumi:"dstPortRange"`
	// Custom service ID.
	Id *int `pulumi:"id"`
	// Custom service source port range.
	SrcPortRange *string `pulumi:"srcPortRange"`
}

// SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceInput is an input type that accepts SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs and SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput values.
// You can construct a concrete instance of `SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceInput` via:
//
//	SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs{...}
type SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceInput interface {
	pulumi.Input

	ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput
	ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput
}

type SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs struct {
	// Custom service destination port range.
	DstPortRange pulumi.StringPtrInput `pulumi:"dstPortRange"`
	// Custom service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Custom service source port range.
	SrcPortRange pulumi.StringPtrInput `pulumi:"srcPortRange"`
}

func (SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (i SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs) ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return i.ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(context.Background())
}

func (i SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs) ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput)
}

// SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayInput is an input type that accepts SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray and SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput values.
// You can construct a concrete instance of `SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayInput` via:
//
//	SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray{ SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs{...} }
type SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayInput interface {
	pulumi.Input

	ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput
	ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput
}

type SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray []SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceInput

func (SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (i SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray) ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return i.ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(context.Background())
}

func (i SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray) ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput)
}

type SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput struct{ *pulumi.OutputState }

func (SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return o
}

// Custom service destination port range.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) DstPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService) *string {
		return v.DstPortRange
	}).(pulumi.StringPtrOutput)
}

// Custom service ID.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Custom service source port range.
func (o SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput) SrcPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService) *string {
		return v.SrcPortRange
	}).(pulumi.StringPtrOutput)
}

type SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput() SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) ToSystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) Index(i pulumi.IntInput) SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService {
		return vs[0].([]SystemStandaloneclusterClusterPeerSessionSyncFilterCustomService)[vs[1].(int)]
	}).(SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput)
}

type SystemStandaloneclusterClusterPeerSyncvd struct {
	// VDOM name.
	Name *string `pulumi:"name"`
}

// SystemStandaloneclusterClusterPeerSyncvdInput is an input type that accepts SystemStandaloneclusterClusterPeerSyncvdArgs and SystemStandaloneclusterClusterPeerSyncvdOutput values.
// You can construct a concrete instance of `SystemStandaloneclusterClusterPeerSyncvdInput` via:
//
//	SystemStandaloneclusterClusterPeerSyncvdArgs{...}
type SystemStandaloneclusterClusterPeerSyncvdInput interface {
	pulumi.Input

	ToSystemStandaloneclusterClusterPeerSyncvdOutput() SystemStandaloneclusterClusterPeerSyncvdOutput
	ToSystemStandaloneclusterClusterPeerSyncvdOutputWithContext(context.Context) SystemStandaloneclusterClusterPeerSyncvdOutput
}

type SystemStandaloneclusterClusterPeerSyncvdArgs struct {
	// VDOM name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemStandaloneclusterClusterPeerSyncvdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneclusterClusterPeerSyncvd)(nil)).Elem()
}

func (i SystemStandaloneclusterClusterPeerSyncvdArgs) ToSystemStandaloneclusterClusterPeerSyncvdOutput() SystemStandaloneclusterClusterPeerSyncvdOutput {
	return i.ToSystemStandaloneclusterClusterPeerSyncvdOutputWithContext(context.Background())
}

func (i SystemStandaloneclusterClusterPeerSyncvdArgs) ToSystemStandaloneclusterClusterPeerSyncvdOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSyncvdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerSyncvdOutput)
}

// SystemStandaloneclusterClusterPeerSyncvdArrayInput is an input type that accepts SystemStandaloneclusterClusterPeerSyncvdArray and SystemStandaloneclusterClusterPeerSyncvdArrayOutput values.
// You can construct a concrete instance of `SystemStandaloneclusterClusterPeerSyncvdArrayInput` via:
//
//	SystemStandaloneclusterClusterPeerSyncvdArray{ SystemStandaloneclusterClusterPeerSyncvdArgs{...} }
type SystemStandaloneclusterClusterPeerSyncvdArrayInput interface {
	pulumi.Input

	ToSystemStandaloneclusterClusterPeerSyncvdArrayOutput() SystemStandaloneclusterClusterPeerSyncvdArrayOutput
	ToSystemStandaloneclusterClusterPeerSyncvdArrayOutputWithContext(context.Context) SystemStandaloneclusterClusterPeerSyncvdArrayOutput
}

type SystemStandaloneclusterClusterPeerSyncvdArray []SystemStandaloneclusterClusterPeerSyncvdInput

func (SystemStandaloneclusterClusterPeerSyncvdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneclusterClusterPeerSyncvd)(nil)).Elem()
}

func (i SystemStandaloneclusterClusterPeerSyncvdArray) ToSystemStandaloneclusterClusterPeerSyncvdArrayOutput() SystemStandaloneclusterClusterPeerSyncvdArrayOutput {
	return i.ToSystemStandaloneclusterClusterPeerSyncvdArrayOutputWithContext(context.Background())
}

func (i SystemStandaloneclusterClusterPeerSyncvdArray) ToSystemStandaloneclusterClusterPeerSyncvdArrayOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSyncvdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneclusterClusterPeerSyncvdArrayOutput)
}

type SystemStandaloneclusterClusterPeerSyncvdOutput struct{ *pulumi.OutputState }

func (SystemStandaloneclusterClusterPeerSyncvdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneclusterClusterPeerSyncvd)(nil)).Elem()
}

func (o SystemStandaloneclusterClusterPeerSyncvdOutput) ToSystemStandaloneclusterClusterPeerSyncvdOutput() SystemStandaloneclusterClusterPeerSyncvdOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerSyncvdOutput) ToSystemStandaloneclusterClusterPeerSyncvdOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSyncvdOutput {
	return o
}

// VDOM name.
func (o SystemStandaloneclusterClusterPeerSyncvdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneclusterClusterPeerSyncvd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemStandaloneclusterClusterPeerSyncvdArrayOutput struct{ *pulumi.OutputState }

func (SystemStandaloneclusterClusterPeerSyncvdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneclusterClusterPeerSyncvd)(nil)).Elem()
}

func (o SystemStandaloneclusterClusterPeerSyncvdArrayOutput) ToSystemStandaloneclusterClusterPeerSyncvdArrayOutput() SystemStandaloneclusterClusterPeerSyncvdArrayOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerSyncvdArrayOutput) ToSystemStandaloneclusterClusterPeerSyncvdArrayOutputWithContext(ctx context.Context) SystemStandaloneclusterClusterPeerSyncvdArrayOutput {
	return o
}

func (o SystemStandaloneclusterClusterPeerSyncvdArrayOutput) Index(i pulumi.IntInput) SystemStandaloneclusterClusterPeerSyncvdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemStandaloneclusterClusterPeerSyncvd {
		return vs[0].([]SystemStandaloneclusterClusterPeerSyncvd)[vs[1].(int)]
	}).(SystemStandaloneclusterClusterPeerSyncvdOutput)
}

type SystemSwitchinterfaceMember struct {
	// Physical interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemSwitchinterfaceMemberInput is an input type that accepts SystemSwitchinterfaceMemberArgs and SystemSwitchinterfaceMemberOutput values.
// You can construct a concrete instance of `SystemSwitchinterfaceMemberInput` via:
//
//	SystemSwitchinterfaceMemberArgs{...}
type SystemSwitchinterfaceMemberInput interface {
	pulumi.Input

	ToSystemSwitchinterfaceMemberOutput() SystemSwitchinterfaceMemberOutput
	ToSystemSwitchinterfaceMemberOutputWithContext(context.Context) SystemSwitchinterfaceMemberOutput
}

type SystemSwitchinterfaceMemberArgs struct {
	// Physical interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemSwitchinterfaceMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSwitchinterfaceMember)(nil)).Elem()
}

func (i SystemSwitchinterfaceMemberArgs) ToSystemSwitchinterfaceMemberOutput() SystemSwitchinterfaceMemberOutput {
	return i.ToSystemSwitchinterfaceMemberOutputWithContext(context.Background())
}

func (i SystemSwitchinterfaceMemberArgs) ToSystemSwitchinterfaceMemberOutputWithContext(ctx context.Context) SystemSwitchinterfaceMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSwitchinterfaceMemberOutput)
}

// SystemSwitchinterfaceMemberArrayInput is an input type that accepts SystemSwitchinterfaceMemberArray and SystemSwitchinterfaceMemberArrayOutput values.
// You can construct a concrete instance of `SystemSwitchinterfaceMemberArrayInput` via:
//
//	SystemSwitchinterfaceMemberArray{ SystemSwitchinterfaceMemberArgs{...} }
type SystemSwitchinterfaceMemberArrayInput interface {
	pulumi.Input

	ToSystemSwitchinterfaceMemberArrayOutput() SystemSwitchinterfaceMemberArrayOutput
	ToSystemSwitchinterfaceMemberArrayOutputWithContext(context.Context) SystemSwitchinterfaceMemberArrayOutput
}

type SystemSwitchinterfaceMemberArray []SystemSwitchinterfaceMemberInput

func (SystemSwitchinterfaceMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSwitchinterfaceMember)(nil)).Elem()
}

func (i SystemSwitchinterfaceMemberArray) ToSystemSwitchinterfaceMemberArrayOutput() SystemSwitchinterfaceMemberArrayOutput {
	return i.ToSystemSwitchinterfaceMemberArrayOutputWithContext(context.Background())
}

func (i SystemSwitchinterfaceMemberArray) ToSystemSwitchinterfaceMemberArrayOutputWithContext(ctx context.Context) SystemSwitchinterfaceMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSwitchinterfaceMemberArrayOutput)
}

type SystemSwitchinterfaceMemberOutput struct{ *pulumi.OutputState }

func (SystemSwitchinterfaceMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSwitchinterfaceMember)(nil)).Elem()
}

func (o SystemSwitchinterfaceMemberOutput) ToSystemSwitchinterfaceMemberOutput() SystemSwitchinterfaceMemberOutput {
	return o
}

func (o SystemSwitchinterfaceMemberOutput) ToSystemSwitchinterfaceMemberOutputWithContext(ctx context.Context) SystemSwitchinterfaceMemberOutput {
	return o
}

// Physical interface name.
func (o SystemSwitchinterfaceMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSwitchinterfaceMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemSwitchinterfaceMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemSwitchinterfaceMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSwitchinterfaceMember)(nil)).Elem()
}

func (o SystemSwitchinterfaceMemberArrayOutput) ToSystemSwitchinterfaceMemberArrayOutput() SystemSwitchinterfaceMemberArrayOutput {
	return o
}

func (o SystemSwitchinterfaceMemberArrayOutput) ToSystemSwitchinterfaceMemberArrayOutputWithContext(ctx context.Context) SystemSwitchinterfaceMemberArrayOutput {
	return o
}

func (o SystemSwitchinterfaceMemberArrayOutput) Index(i pulumi.IntInput) SystemSwitchinterfaceMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSwitchinterfaceMember {
		return vs[0].([]SystemSwitchinterfaceMember)[vs[1].(int)]
	}).(SystemSwitchinterfaceMemberOutput)
}

type SystemSwitchinterfaceSpanSourcePort struct {
	// Physical interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemSwitchinterfaceSpanSourcePortInput is an input type that accepts SystemSwitchinterfaceSpanSourcePortArgs and SystemSwitchinterfaceSpanSourcePortOutput values.
// You can construct a concrete instance of `SystemSwitchinterfaceSpanSourcePortInput` via:
//
//	SystemSwitchinterfaceSpanSourcePortArgs{...}
type SystemSwitchinterfaceSpanSourcePortInput interface {
	pulumi.Input

	ToSystemSwitchinterfaceSpanSourcePortOutput() SystemSwitchinterfaceSpanSourcePortOutput
	ToSystemSwitchinterfaceSpanSourcePortOutputWithContext(context.Context) SystemSwitchinterfaceSpanSourcePortOutput
}

type SystemSwitchinterfaceSpanSourcePortArgs struct {
	// Physical interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemSwitchinterfaceSpanSourcePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSwitchinterfaceSpanSourcePort)(nil)).Elem()
}

func (i SystemSwitchinterfaceSpanSourcePortArgs) ToSystemSwitchinterfaceSpanSourcePortOutput() SystemSwitchinterfaceSpanSourcePortOutput {
	return i.ToSystemSwitchinterfaceSpanSourcePortOutputWithContext(context.Background())
}

func (i SystemSwitchinterfaceSpanSourcePortArgs) ToSystemSwitchinterfaceSpanSourcePortOutputWithContext(ctx context.Context) SystemSwitchinterfaceSpanSourcePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSwitchinterfaceSpanSourcePortOutput)
}

// SystemSwitchinterfaceSpanSourcePortArrayInput is an input type that accepts SystemSwitchinterfaceSpanSourcePortArray and SystemSwitchinterfaceSpanSourcePortArrayOutput values.
// You can construct a concrete instance of `SystemSwitchinterfaceSpanSourcePortArrayInput` via:
//
//	SystemSwitchinterfaceSpanSourcePortArray{ SystemSwitchinterfaceSpanSourcePortArgs{...} }
type SystemSwitchinterfaceSpanSourcePortArrayInput interface {
	pulumi.Input

	ToSystemSwitchinterfaceSpanSourcePortArrayOutput() SystemSwitchinterfaceSpanSourcePortArrayOutput
	ToSystemSwitchinterfaceSpanSourcePortArrayOutputWithContext(context.Context) SystemSwitchinterfaceSpanSourcePortArrayOutput
}

type SystemSwitchinterfaceSpanSourcePortArray []SystemSwitchinterfaceSpanSourcePortInput

func (SystemSwitchinterfaceSpanSourcePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSwitchinterfaceSpanSourcePort)(nil)).Elem()
}

func (i SystemSwitchinterfaceSpanSourcePortArray) ToSystemSwitchinterfaceSpanSourcePortArrayOutput() SystemSwitchinterfaceSpanSourcePortArrayOutput {
	return i.ToSystemSwitchinterfaceSpanSourcePortArrayOutputWithContext(context.Background())
}

func (i SystemSwitchinterfaceSpanSourcePortArray) ToSystemSwitchinterfaceSpanSourcePortArrayOutputWithContext(ctx context.Context) SystemSwitchinterfaceSpanSourcePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSwitchinterfaceSpanSourcePortArrayOutput)
}

type SystemSwitchinterfaceSpanSourcePortOutput struct{ *pulumi.OutputState }

func (SystemSwitchinterfaceSpanSourcePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSwitchinterfaceSpanSourcePort)(nil)).Elem()
}

func (o SystemSwitchinterfaceSpanSourcePortOutput) ToSystemSwitchinterfaceSpanSourcePortOutput() SystemSwitchinterfaceSpanSourcePortOutput {
	return o
}

func (o SystemSwitchinterfaceSpanSourcePortOutput) ToSystemSwitchinterfaceSpanSourcePortOutputWithContext(ctx context.Context) SystemSwitchinterfaceSpanSourcePortOutput {
	return o
}

// Physical interface name.
func (o SystemSwitchinterfaceSpanSourcePortOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSwitchinterfaceSpanSourcePort) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemSwitchinterfaceSpanSourcePortArrayOutput struct{ *pulumi.OutputState }

func (SystemSwitchinterfaceSpanSourcePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSwitchinterfaceSpanSourcePort)(nil)).Elem()
}

func (o SystemSwitchinterfaceSpanSourcePortArrayOutput) ToSystemSwitchinterfaceSpanSourcePortArrayOutput() SystemSwitchinterfaceSpanSourcePortArrayOutput {
	return o
}

func (o SystemSwitchinterfaceSpanSourcePortArrayOutput) ToSystemSwitchinterfaceSpanSourcePortArrayOutputWithContext(ctx context.Context) SystemSwitchinterfaceSpanSourcePortArrayOutput {
	return o
}

func (o SystemSwitchinterfaceSpanSourcePortArrayOutput) Index(i pulumi.IntInput) SystemSwitchinterfaceSpanSourcePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSwitchinterfaceSpanSourcePort {
		return vs[0].([]SystemSwitchinterfaceSpanSourcePort)[vs[1].(int)]
	}).(SystemSwitchinterfaceSpanSourcePortOutput)
}

type SystemVdomdnsServerHostname struct {
	// DNS server host name list separated by space (maximum 4 domains).
	Hostname *string `pulumi:"hostname"`
}

// SystemVdomdnsServerHostnameInput is an input type that accepts SystemVdomdnsServerHostnameArgs and SystemVdomdnsServerHostnameOutput values.
// You can construct a concrete instance of `SystemVdomdnsServerHostnameInput` via:
//
//	SystemVdomdnsServerHostnameArgs{...}
type SystemVdomdnsServerHostnameInput interface {
	pulumi.Input

	ToSystemVdomdnsServerHostnameOutput() SystemVdomdnsServerHostnameOutput
	ToSystemVdomdnsServerHostnameOutputWithContext(context.Context) SystemVdomdnsServerHostnameOutput
}

type SystemVdomdnsServerHostnameArgs struct {
	// DNS server host name list separated by space (maximum 4 domains).
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
}

func (SystemVdomdnsServerHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVdomdnsServerHostname)(nil)).Elem()
}

func (i SystemVdomdnsServerHostnameArgs) ToSystemVdomdnsServerHostnameOutput() SystemVdomdnsServerHostnameOutput {
	return i.ToSystemVdomdnsServerHostnameOutputWithContext(context.Background())
}

func (i SystemVdomdnsServerHostnameArgs) ToSystemVdomdnsServerHostnameOutputWithContext(ctx context.Context) SystemVdomdnsServerHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomdnsServerHostnameOutput)
}

// SystemVdomdnsServerHostnameArrayInput is an input type that accepts SystemVdomdnsServerHostnameArray and SystemVdomdnsServerHostnameArrayOutput values.
// You can construct a concrete instance of `SystemVdomdnsServerHostnameArrayInput` via:
//
//	SystemVdomdnsServerHostnameArray{ SystemVdomdnsServerHostnameArgs{...} }
type SystemVdomdnsServerHostnameArrayInput interface {
	pulumi.Input

	ToSystemVdomdnsServerHostnameArrayOutput() SystemVdomdnsServerHostnameArrayOutput
	ToSystemVdomdnsServerHostnameArrayOutputWithContext(context.Context) SystemVdomdnsServerHostnameArrayOutput
}

type SystemVdomdnsServerHostnameArray []SystemVdomdnsServerHostnameInput

func (SystemVdomdnsServerHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVdomdnsServerHostname)(nil)).Elem()
}

func (i SystemVdomdnsServerHostnameArray) ToSystemVdomdnsServerHostnameArrayOutput() SystemVdomdnsServerHostnameArrayOutput {
	return i.ToSystemVdomdnsServerHostnameArrayOutputWithContext(context.Background())
}

func (i SystemVdomdnsServerHostnameArray) ToSystemVdomdnsServerHostnameArrayOutputWithContext(ctx context.Context) SystemVdomdnsServerHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomdnsServerHostnameArrayOutput)
}

type SystemVdomdnsServerHostnameOutput struct{ *pulumi.OutputState }

func (SystemVdomdnsServerHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVdomdnsServerHostname)(nil)).Elem()
}

func (o SystemVdomdnsServerHostnameOutput) ToSystemVdomdnsServerHostnameOutput() SystemVdomdnsServerHostnameOutput {
	return o
}

func (o SystemVdomdnsServerHostnameOutput) ToSystemVdomdnsServerHostnameOutputWithContext(ctx context.Context) SystemVdomdnsServerHostnameOutput {
	return o
}

// DNS server host name list separated by space (maximum 4 domains).
func (o SystemVdomdnsServerHostnameOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVdomdnsServerHostname) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

type SystemVdomdnsServerHostnameArrayOutput struct{ *pulumi.OutputState }

func (SystemVdomdnsServerHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVdomdnsServerHostname)(nil)).Elem()
}

func (o SystemVdomdnsServerHostnameArrayOutput) ToSystemVdomdnsServerHostnameArrayOutput() SystemVdomdnsServerHostnameArrayOutput {
	return o
}

func (o SystemVdomdnsServerHostnameArrayOutput) ToSystemVdomdnsServerHostnameArrayOutputWithContext(ctx context.Context) SystemVdomdnsServerHostnameArrayOutput {
	return o
}

func (o SystemVdomdnsServerHostnameArrayOutput) Index(i pulumi.IntInput) SystemVdomdnsServerHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVdomdnsServerHostname {
		return vs[0].([]SystemVdomdnsServerHostname)[vs[1].(int)]
	}).(SystemVdomdnsServerHostnameOutput)
}

type SystemVdomexceptionVdom struct {
	// VDOM name.
	Name *string `pulumi:"name"`
}

// SystemVdomexceptionVdomInput is an input type that accepts SystemVdomexceptionVdomArgs and SystemVdomexceptionVdomOutput values.
// You can construct a concrete instance of `SystemVdomexceptionVdomInput` via:
//
//	SystemVdomexceptionVdomArgs{...}
type SystemVdomexceptionVdomInput interface {
	pulumi.Input

	ToSystemVdomexceptionVdomOutput() SystemVdomexceptionVdomOutput
	ToSystemVdomexceptionVdomOutputWithContext(context.Context) SystemVdomexceptionVdomOutput
}

type SystemVdomexceptionVdomArgs struct {
	// VDOM name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVdomexceptionVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVdomexceptionVdom)(nil)).Elem()
}

func (i SystemVdomexceptionVdomArgs) ToSystemVdomexceptionVdomOutput() SystemVdomexceptionVdomOutput {
	return i.ToSystemVdomexceptionVdomOutputWithContext(context.Background())
}

func (i SystemVdomexceptionVdomArgs) ToSystemVdomexceptionVdomOutputWithContext(ctx context.Context) SystemVdomexceptionVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomexceptionVdomOutput)
}

// SystemVdomexceptionVdomArrayInput is an input type that accepts SystemVdomexceptionVdomArray and SystemVdomexceptionVdomArrayOutput values.
// You can construct a concrete instance of `SystemVdomexceptionVdomArrayInput` via:
//
//	SystemVdomexceptionVdomArray{ SystemVdomexceptionVdomArgs{...} }
type SystemVdomexceptionVdomArrayInput interface {
	pulumi.Input

	ToSystemVdomexceptionVdomArrayOutput() SystemVdomexceptionVdomArrayOutput
	ToSystemVdomexceptionVdomArrayOutputWithContext(context.Context) SystemVdomexceptionVdomArrayOutput
}

type SystemVdomexceptionVdomArray []SystemVdomexceptionVdomInput

func (SystemVdomexceptionVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVdomexceptionVdom)(nil)).Elem()
}

func (i SystemVdomexceptionVdomArray) ToSystemVdomexceptionVdomArrayOutput() SystemVdomexceptionVdomArrayOutput {
	return i.ToSystemVdomexceptionVdomArrayOutputWithContext(context.Background())
}

func (i SystemVdomexceptionVdomArray) ToSystemVdomexceptionVdomArrayOutputWithContext(ctx context.Context) SystemVdomexceptionVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomexceptionVdomArrayOutput)
}

type SystemVdomexceptionVdomOutput struct{ *pulumi.OutputState }

func (SystemVdomexceptionVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVdomexceptionVdom)(nil)).Elem()
}

func (o SystemVdomexceptionVdomOutput) ToSystemVdomexceptionVdomOutput() SystemVdomexceptionVdomOutput {
	return o
}

func (o SystemVdomexceptionVdomOutput) ToSystemVdomexceptionVdomOutputWithContext(ctx context.Context) SystemVdomexceptionVdomOutput {
	return o
}

// VDOM name.
func (o SystemVdomexceptionVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVdomexceptionVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVdomexceptionVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemVdomexceptionVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVdomexceptionVdom)(nil)).Elem()
}

func (o SystemVdomexceptionVdomArrayOutput) ToSystemVdomexceptionVdomArrayOutput() SystemVdomexceptionVdomArrayOutput {
	return o
}

func (o SystemVdomexceptionVdomArrayOutput) ToSystemVdomexceptionVdomArrayOutputWithContext(ctx context.Context) SystemVdomexceptionVdomArrayOutput {
	return o
}

func (o SystemVdomexceptionVdomArrayOutput) Index(i pulumi.IntInput) SystemVdomexceptionVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVdomexceptionVdom {
		return vs[0].([]SystemVdomexceptionVdom)[vs[1].(int)]
	}).(SystemVdomexceptionVdomOutput)
}

type SystemVirtualswitchPort struct {
	// Alias.
	Alias *string `pulumi:"alias"`
	// Physical interface name.
	Name *string `pulumi:"name"`
}

// SystemVirtualswitchPortInput is an input type that accepts SystemVirtualswitchPortArgs and SystemVirtualswitchPortOutput values.
// You can construct a concrete instance of `SystemVirtualswitchPortInput` via:
//
//	SystemVirtualswitchPortArgs{...}
type SystemVirtualswitchPortInput interface {
	pulumi.Input

	ToSystemVirtualswitchPortOutput() SystemVirtualswitchPortOutput
	ToSystemVirtualswitchPortOutputWithContext(context.Context) SystemVirtualswitchPortOutput
}

type SystemVirtualswitchPortArgs struct {
	// Alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Physical interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualswitchPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualswitchPort)(nil)).Elem()
}

func (i SystemVirtualswitchPortArgs) ToSystemVirtualswitchPortOutput() SystemVirtualswitchPortOutput {
	return i.ToSystemVirtualswitchPortOutputWithContext(context.Background())
}

func (i SystemVirtualswitchPortArgs) ToSystemVirtualswitchPortOutputWithContext(ctx context.Context) SystemVirtualswitchPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualswitchPortOutput)
}

// SystemVirtualswitchPortArrayInput is an input type that accepts SystemVirtualswitchPortArray and SystemVirtualswitchPortArrayOutput values.
// You can construct a concrete instance of `SystemVirtualswitchPortArrayInput` via:
//
//	SystemVirtualswitchPortArray{ SystemVirtualswitchPortArgs{...} }
type SystemVirtualswitchPortArrayInput interface {
	pulumi.Input

	ToSystemVirtualswitchPortArrayOutput() SystemVirtualswitchPortArrayOutput
	ToSystemVirtualswitchPortArrayOutputWithContext(context.Context) SystemVirtualswitchPortArrayOutput
}

type SystemVirtualswitchPortArray []SystemVirtualswitchPortInput

func (SystemVirtualswitchPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualswitchPort)(nil)).Elem()
}

func (i SystemVirtualswitchPortArray) ToSystemVirtualswitchPortArrayOutput() SystemVirtualswitchPortArrayOutput {
	return i.ToSystemVirtualswitchPortArrayOutputWithContext(context.Background())
}

func (i SystemVirtualswitchPortArray) ToSystemVirtualswitchPortArrayOutputWithContext(ctx context.Context) SystemVirtualswitchPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualswitchPortArrayOutput)
}

type SystemVirtualswitchPortOutput struct{ *pulumi.OutputState }

func (SystemVirtualswitchPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualswitchPort)(nil)).Elem()
}

func (o SystemVirtualswitchPortOutput) ToSystemVirtualswitchPortOutput() SystemVirtualswitchPortOutput {
	return o
}

func (o SystemVirtualswitchPortOutput) ToSystemVirtualswitchPortOutputWithContext(ctx context.Context) SystemVirtualswitchPortOutput {
	return o
}

// Alias.
func (o SystemVirtualswitchPortOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualswitchPort) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Physical interface name.
func (o SystemVirtualswitchPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualswitchPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualswitchPortArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualswitchPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualswitchPort)(nil)).Elem()
}

func (o SystemVirtualswitchPortArrayOutput) ToSystemVirtualswitchPortArrayOutput() SystemVirtualswitchPortArrayOutput {
	return o
}

func (o SystemVirtualswitchPortArrayOutput) ToSystemVirtualswitchPortArrayOutputWithContext(ctx context.Context) SystemVirtualswitchPortArrayOutput {
	return o
}

func (o SystemVirtualswitchPortArrayOutput) Index(i pulumi.IntInput) SystemVirtualswitchPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualswitchPort {
		return vs[0].([]SystemVirtualswitchPort)[vs[1].(int)]
	}).(SystemVirtualswitchPortOutput)
}

type SystemVirtualwanlinkFailAlertInterface struct {
	// Physical interface name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkFailAlertInterfaceInput is an input type that accepts SystemVirtualwanlinkFailAlertInterfaceArgs and SystemVirtualwanlinkFailAlertInterfaceOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkFailAlertInterfaceInput` via:
//
//	SystemVirtualwanlinkFailAlertInterfaceArgs{...}
type SystemVirtualwanlinkFailAlertInterfaceInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkFailAlertInterfaceOutput() SystemVirtualwanlinkFailAlertInterfaceOutput
	ToSystemVirtualwanlinkFailAlertInterfaceOutputWithContext(context.Context) SystemVirtualwanlinkFailAlertInterfaceOutput
}

type SystemVirtualwanlinkFailAlertInterfaceArgs struct {
	// Physical interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (i SystemVirtualwanlinkFailAlertInterfaceArgs) ToSystemVirtualwanlinkFailAlertInterfaceOutput() SystemVirtualwanlinkFailAlertInterfaceOutput {
	return i.ToSystemVirtualwanlinkFailAlertInterfaceOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkFailAlertInterfaceArgs) ToSystemVirtualwanlinkFailAlertInterfaceOutputWithContext(ctx context.Context) SystemVirtualwanlinkFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkFailAlertInterfaceOutput)
}

// SystemVirtualwanlinkFailAlertInterfaceArrayInput is an input type that accepts SystemVirtualwanlinkFailAlertInterfaceArray and SystemVirtualwanlinkFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkFailAlertInterfaceArrayInput` via:
//
//	SystemVirtualwanlinkFailAlertInterfaceArray{ SystemVirtualwanlinkFailAlertInterfaceArgs{...} }
type SystemVirtualwanlinkFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkFailAlertInterfaceArrayOutput() SystemVirtualwanlinkFailAlertInterfaceArrayOutput
	ToSystemVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(context.Context) SystemVirtualwanlinkFailAlertInterfaceArrayOutput
}

type SystemVirtualwanlinkFailAlertInterfaceArray []SystemVirtualwanlinkFailAlertInterfaceInput

func (SystemVirtualwanlinkFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (i SystemVirtualwanlinkFailAlertInterfaceArray) ToSystemVirtualwanlinkFailAlertInterfaceArrayOutput() SystemVirtualwanlinkFailAlertInterfaceArrayOutput {
	return i.ToSystemVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkFailAlertInterfaceArray) ToSystemVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkFailAlertInterfaceArrayOutput)
}

type SystemVirtualwanlinkFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (o SystemVirtualwanlinkFailAlertInterfaceOutput) ToSystemVirtualwanlinkFailAlertInterfaceOutput() SystemVirtualwanlinkFailAlertInterfaceOutput {
	return o
}

func (o SystemVirtualwanlinkFailAlertInterfaceOutput) ToSystemVirtualwanlinkFailAlertInterfaceOutputWithContext(ctx context.Context) SystemVirtualwanlinkFailAlertInterfaceOutput {
	return o
}

// Physical interface name.
func (o SystemVirtualwanlinkFailAlertInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkFailAlertInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkFailAlertInterface)(nil)).Elem()
}

func (o SystemVirtualwanlinkFailAlertInterfaceArrayOutput) ToSystemVirtualwanlinkFailAlertInterfaceArrayOutput() SystemVirtualwanlinkFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemVirtualwanlinkFailAlertInterfaceArrayOutput) ToSystemVirtualwanlinkFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemVirtualwanlinkFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkFailAlertInterface {
		return vs[0].([]SystemVirtualwanlinkFailAlertInterface)[vs[1].(int)]
	}).(SystemVirtualwanlinkFailAlertInterfaceOutput)
}

type SystemVirtualwanlinkHealthCheck struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Differentiated services code point (DSCP) in the IP header of the probe packet.
	Diffservcode *string `pulumi:"diffservcode"`
	// Fully qualified domain name to resolve for the DNS probe.
	DnsRequestDomain *string `pulumi:"dnsRequestDomain"`
	// Number of failures before server is considered lost (1 - 3600, default = 5).
	Failtime *int `pulumi:"failtime"`
	// HA election priority (1 - 50).
	HaPriority *int `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent *string `pulumi:"httpAgent"`
	// URL used to communicate with the server if the protocol if the protocol is HTTP.
	HttpGet *string `pulumi:"httpGet"`
	// Response string expected from the server if the protocol is HTTP.
	HttpMatch *string `pulumi:"httpMatch"`
	// Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5).
	Interval *int `pulumi:"interval"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members []SystemVirtualwanlinkHealthCheckMember `pulumi:"members"`
	// Status check or health check name.
	Name *string `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize *int `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password *string `pulumi:"password"`
	// Port number used to communicate with the server over the selected protocol.
	Port *int `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount *int `pulumi:"probeCount"`
	// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
	ProbePackets *string `pulumi:"probePackets"`
	// Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
	ProbeTimeout *int `pulumi:"probeTimeout"`
	// Protocol used to determine if the FortiGate can communicate with the server.
	Protocol *string `pulumi:"protocol"`
	// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
	Recoverytime *int `pulumi:"recoverytime"`
	// Twamp controller security mode. Valid values: `none`, `authentication`.
	SecurityMode *string `pulumi:"securityMode"`
	// IP address or FQDN name of the server.
	Server *string `pulumi:"server"`
	// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
	SlaFailLogPeriod *int `pulumi:"slaFailLogPeriod"`
	// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
	SlaPassLogPeriod *int `pulumi:"slaPassLogPeriod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas []SystemVirtualwanlinkHealthCheckSla `pulumi:"slas"`
	// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
	SystemDns *string `pulumi:"systemDns"`
	// Alert threshold for jitter (ms, default = 0).
	ThresholdAlertJitter *int `pulumi:"thresholdAlertJitter"`
	// Alert threshold for latency (ms, default = 0).
	ThresholdAlertLatency *int `pulumi:"thresholdAlertLatency"`
	// Alert threshold for packet loss (percentage, default = 0).
	ThresholdAlertPacketloss *int `pulumi:"thresholdAlertPacketloss"`
	// Warning threshold for jitter (ms, default = 0).
	ThresholdWarningJitter *int `pulumi:"thresholdWarningJitter"`
	// Warning threshold for latency (ms, default = 0).
	ThresholdWarningLatency *int `pulumi:"thresholdWarningLatency"`
	// Warning threshold for packet loss (percentage, default = 0).
	ThresholdWarningPacketloss *int `pulumi:"thresholdWarningPacketloss"`
	// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
	UpdateCascadeInterface *string `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route. Valid values: `enable`, `disable`.
	UpdateStaticRoute *string `pulumi:"updateStaticRoute"`
}

// SystemVirtualwanlinkHealthCheckInput is an input type that accepts SystemVirtualwanlinkHealthCheckArgs and SystemVirtualwanlinkHealthCheckOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkHealthCheckInput` via:
//
//	SystemVirtualwanlinkHealthCheckArgs{...}
type SystemVirtualwanlinkHealthCheckInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkHealthCheckOutput() SystemVirtualwanlinkHealthCheckOutput
	ToSystemVirtualwanlinkHealthCheckOutputWithContext(context.Context) SystemVirtualwanlinkHealthCheckOutput
}

type SystemVirtualwanlinkHealthCheckArgs struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Differentiated services code point (DSCP) in the IP header of the probe packet.
	Diffservcode pulumi.StringPtrInput `pulumi:"diffservcode"`
	// Fully qualified domain name to resolve for the DNS probe.
	DnsRequestDomain pulumi.StringPtrInput `pulumi:"dnsRequestDomain"`
	// Number of failures before server is considered lost (1 - 3600, default = 5).
	Failtime pulumi.IntPtrInput `pulumi:"failtime"`
	// HA election priority (1 - 50).
	HaPriority pulumi.IntPtrInput `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent pulumi.StringPtrInput `pulumi:"httpAgent"`
	// URL used to communicate with the server if the protocol if the protocol is HTTP.
	HttpGet pulumi.StringPtrInput `pulumi:"httpGet"`
	// Response string expected from the server if the protocol is HTTP.
	HttpMatch pulumi.StringPtrInput `pulumi:"httpMatch"`
	// Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5).
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Member sequence number list. The structure of `members` block is documented below.
	Members SystemVirtualwanlinkHealthCheckMemberArrayInput `pulumi:"members"`
	// Status check or health check name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize pulumi.IntPtrInput `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number used to communicate with the server over the selected protocol.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount pulumi.IntPtrInput `pulumi:"probeCount"`
	// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
	ProbePackets pulumi.StringPtrInput `pulumi:"probePackets"`
	// Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
	ProbeTimeout pulumi.IntPtrInput `pulumi:"probeTimeout"`
	// Protocol used to determine if the FortiGate can communicate with the server.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
	Recoverytime pulumi.IntPtrInput `pulumi:"recoverytime"`
	// Twamp controller security mode. Valid values: `none`, `authentication`.
	SecurityMode pulumi.StringPtrInput `pulumi:"securityMode"`
	// IP address or FQDN name of the server.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
	SlaFailLogPeriod pulumi.IntPtrInput `pulumi:"slaFailLogPeriod"`
	// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
	SlaPassLogPeriod pulumi.IntPtrInput `pulumi:"slaPassLogPeriod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas SystemVirtualwanlinkHealthCheckSlaArrayInput `pulumi:"slas"`
	// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
	SystemDns pulumi.StringPtrInput `pulumi:"systemDns"`
	// Alert threshold for jitter (ms, default = 0).
	ThresholdAlertJitter pulumi.IntPtrInput `pulumi:"thresholdAlertJitter"`
	// Alert threshold for latency (ms, default = 0).
	ThresholdAlertLatency pulumi.IntPtrInput `pulumi:"thresholdAlertLatency"`
	// Alert threshold for packet loss (percentage, default = 0).
	ThresholdAlertPacketloss pulumi.IntPtrInput `pulumi:"thresholdAlertPacketloss"`
	// Warning threshold for jitter (ms, default = 0).
	ThresholdWarningJitter pulumi.IntPtrInput `pulumi:"thresholdWarningJitter"`
	// Warning threshold for latency (ms, default = 0).
	ThresholdWarningLatency pulumi.IntPtrInput `pulumi:"thresholdWarningLatency"`
	// Warning threshold for packet loss (percentage, default = 0).
	ThresholdWarningPacketloss pulumi.IntPtrInput `pulumi:"thresholdWarningPacketloss"`
	// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
	UpdateCascadeInterface pulumi.StringPtrInput `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route. Valid values: `enable`, `disable`.
	UpdateStaticRoute pulumi.StringPtrInput `pulumi:"updateStaticRoute"`
}

func (SystemVirtualwanlinkHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkHealthCheck)(nil)).Elem()
}

func (i SystemVirtualwanlinkHealthCheckArgs) ToSystemVirtualwanlinkHealthCheckOutput() SystemVirtualwanlinkHealthCheckOutput {
	return i.ToSystemVirtualwanlinkHealthCheckOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkHealthCheckArgs) ToSystemVirtualwanlinkHealthCheckOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkHealthCheckOutput)
}

// SystemVirtualwanlinkHealthCheckArrayInput is an input type that accepts SystemVirtualwanlinkHealthCheckArray and SystemVirtualwanlinkHealthCheckArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkHealthCheckArrayInput` via:
//
//	SystemVirtualwanlinkHealthCheckArray{ SystemVirtualwanlinkHealthCheckArgs{...} }
type SystemVirtualwanlinkHealthCheckArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkHealthCheckArrayOutput() SystemVirtualwanlinkHealthCheckArrayOutput
	ToSystemVirtualwanlinkHealthCheckArrayOutputWithContext(context.Context) SystemVirtualwanlinkHealthCheckArrayOutput
}

type SystemVirtualwanlinkHealthCheckArray []SystemVirtualwanlinkHealthCheckInput

func (SystemVirtualwanlinkHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkHealthCheck)(nil)).Elem()
}

func (i SystemVirtualwanlinkHealthCheckArray) ToSystemVirtualwanlinkHealthCheckArrayOutput() SystemVirtualwanlinkHealthCheckArrayOutput {
	return i.ToSystemVirtualwanlinkHealthCheckArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkHealthCheckArray) ToSystemVirtualwanlinkHealthCheckArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkHealthCheckArrayOutput)
}

type SystemVirtualwanlinkHealthCheckOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkHealthCheck)(nil)).Elem()
}

func (o SystemVirtualwanlinkHealthCheckOutput) ToSystemVirtualwanlinkHealthCheckOutput() SystemVirtualwanlinkHealthCheckOutput {
	return o
}

func (o SystemVirtualwanlinkHealthCheckOutput) ToSystemVirtualwanlinkHealthCheckOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckOutput {
	return o
}

// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
func (o SystemVirtualwanlinkHealthCheckOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Differentiated services code point (DSCP) in the IP header of the probe packet.
func (o SystemVirtualwanlinkHealthCheckOutput) Diffservcode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.Diffservcode }).(pulumi.StringPtrOutput)
}

// Fully qualified domain name to resolve for the DNS probe.
func (o SystemVirtualwanlinkHealthCheckOutput) DnsRequestDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.DnsRequestDomain }).(pulumi.StringPtrOutput)
}

// Number of failures before server is considered lost (1 - 3600, default = 5).
func (o SystemVirtualwanlinkHealthCheckOutput) Failtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.Failtime }).(pulumi.IntPtrOutput)
}

// HA election priority (1 - 50).
func (o SystemVirtualwanlinkHealthCheckOutput) HaPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.HaPriority }).(pulumi.IntPtrOutput)
}

// String in the http-agent field in the HTTP header.
func (o SystemVirtualwanlinkHealthCheckOutput) HttpAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.HttpAgent }).(pulumi.StringPtrOutput)
}

// URL used to communicate with the server if the protocol if the protocol is HTTP.
func (o SystemVirtualwanlinkHealthCheckOutput) HttpGet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.HttpGet }).(pulumi.StringPtrOutput)
}

// Response string expected from the server if the protocol is HTTP.
func (o SystemVirtualwanlinkHealthCheckOutput) HttpMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.HttpMatch }).(pulumi.StringPtrOutput)
}

// Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5).
func (o SystemVirtualwanlinkHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Member sequence number list. The structure of `members` block is documented below.
func (o SystemVirtualwanlinkHealthCheckOutput) Members() SystemVirtualwanlinkHealthCheckMemberArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) []SystemVirtualwanlinkHealthCheckMember { return v.Members }).(SystemVirtualwanlinkHealthCheckMemberArrayOutput)
}

// Status check or health check name.
func (o SystemVirtualwanlinkHealthCheckOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Packet size of a twamp test session,
func (o SystemVirtualwanlinkHealthCheckOutput) PacketSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.PacketSize }).(pulumi.IntPtrOutput)
}

// Twamp controller password in authentication mode
func (o SystemVirtualwanlinkHealthCheckOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number used to communicate with the server over the selected protocol.
func (o SystemVirtualwanlinkHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
func (o SystemVirtualwanlinkHealthCheckOutput) ProbeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.ProbeCount }).(pulumi.IntPtrOutput)
}

// Enable/disable transmission of probe packets. Valid values: `disable`, `enable`.
func (o SystemVirtualwanlinkHealthCheckOutput) ProbePackets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.ProbePackets }).(pulumi.StringPtrOutput)
}

// Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
func (o SystemVirtualwanlinkHealthCheckOutput) ProbeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.ProbeTimeout }).(pulumi.IntPtrOutput)
}

// Protocol used to determine if the FortiGate can communicate with the server.
func (o SystemVirtualwanlinkHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Number of successful responses received before server is considered recovered (1 - 3600, default = 5).
func (o SystemVirtualwanlinkHealthCheckOutput) Recoverytime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.Recoverytime }).(pulumi.IntPtrOutput)
}

// Twamp controller security mode. Valid values: `none`, `authentication`.
func (o SystemVirtualwanlinkHealthCheckOutput) SecurityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.SecurityMode }).(pulumi.StringPtrOutput)
}

// IP address or FQDN name of the server.
func (o SystemVirtualwanlinkHealthCheckOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Time interval in seconds that SLA fail log messages will be generated (0 - 3600, default = 0).
func (o SystemVirtualwanlinkHealthCheckOutput) SlaFailLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.SlaFailLogPeriod }).(pulumi.IntPtrOutput)
}

// Time interval in seconds that SLA pass log messages will be generated (0 - 3600, default = 0).
func (o SystemVirtualwanlinkHealthCheckOutput) SlaPassLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.SlaPassLogPeriod }).(pulumi.IntPtrOutput)
}

// Service level agreement (SLA). The structure of `sla` block is documented below.
func (o SystemVirtualwanlinkHealthCheckOutput) Slas() SystemVirtualwanlinkHealthCheckSlaArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) []SystemVirtualwanlinkHealthCheckSla { return v.Slas }).(SystemVirtualwanlinkHealthCheckSlaArrayOutput)
}

// Enable/disable system DNS as the probe server. Valid values: `disable`, `enable`.
func (o SystemVirtualwanlinkHealthCheckOutput) SystemDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.SystemDns }).(pulumi.StringPtrOutput)
}

// Alert threshold for jitter (ms, default = 0).
func (o SystemVirtualwanlinkHealthCheckOutput) ThresholdAlertJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.ThresholdAlertJitter }).(pulumi.IntPtrOutput)
}

// Alert threshold for latency (ms, default = 0).
func (o SystemVirtualwanlinkHealthCheckOutput) ThresholdAlertLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.ThresholdAlertLatency }).(pulumi.IntPtrOutput)
}

// Alert threshold for packet loss (percentage, default = 0).
func (o SystemVirtualwanlinkHealthCheckOutput) ThresholdAlertPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.ThresholdAlertPacketloss }).(pulumi.IntPtrOutput)
}

// Warning threshold for jitter (ms, default = 0).
func (o SystemVirtualwanlinkHealthCheckOutput) ThresholdWarningJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.ThresholdWarningJitter }).(pulumi.IntPtrOutput)
}

// Warning threshold for latency (ms, default = 0).
func (o SystemVirtualwanlinkHealthCheckOutput) ThresholdWarningLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.ThresholdWarningLatency }).(pulumi.IntPtrOutput)
}

// Warning threshold for packet loss (percentage, default = 0).
func (o SystemVirtualwanlinkHealthCheckOutput) ThresholdWarningPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *int { return v.ThresholdWarningPacketloss }).(pulumi.IntPtrOutput)
}

// Enable/disable update cascade interface. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkHealthCheckOutput) UpdateCascadeInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.UpdateCascadeInterface }).(pulumi.StringPtrOutput)
}

// Enable/disable updating the static route. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkHealthCheckOutput) UpdateStaticRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheck) *string { return v.UpdateStaticRoute }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkHealthCheck)(nil)).Elem()
}

func (o SystemVirtualwanlinkHealthCheckArrayOutput) ToSystemVirtualwanlinkHealthCheckArrayOutput() SystemVirtualwanlinkHealthCheckArrayOutput {
	return o
}

func (o SystemVirtualwanlinkHealthCheckArrayOutput) ToSystemVirtualwanlinkHealthCheckArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckArrayOutput {
	return o
}

func (o SystemVirtualwanlinkHealthCheckArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkHealthCheck {
		return vs[0].([]SystemVirtualwanlinkHealthCheck)[vs[1].(int)]
	}).(SystemVirtualwanlinkHealthCheckOutput)
}

type SystemVirtualwanlinkHealthCheckMember struct {
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// SystemVirtualwanlinkHealthCheckMemberInput is an input type that accepts SystemVirtualwanlinkHealthCheckMemberArgs and SystemVirtualwanlinkHealthCheckMemberOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkHealthCheckMemberInput` via:
//
//	SystemVirtualwanlinkHealthCheckMemberArgs{...}
type SystemVirtualwanlinkHealthCheckMemberInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkHealthCheckMemberOutput() SystemVirtualwanlinkHealthCheckMemberOutput
	ToSystemVirtualwanlinkHealthCheckMemberOutputWithContext(context.Context) SystemVirtualwanlinkHealthCheckMemberOutput
}

type SystemVirtualwanlinkHealthCheckMemberArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SystemVirtualwanlinkHealthCheckMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (i SystemVirtualwanlinkHealthCheckMemberArgs) ToSystemVirtualwanlinkHealthCheckMemberOutput() SystemVirtualwanlinkHealthCheckMemberOutput {
	return i.ToSystemVirtualwanlinkHealthCheckMemberOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkHealthCheckMemberArgs) ToSystemVirtualwanlinkHealthCheckMemberOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkHealthCheckMemberOutput)
}

// SystemVirtualwanlinkHealthCheckMemberArrayInput is an input type that accepts SystemVirtualwanlinkHealthCheckMemberArray and SystemVirtualwanlinkHealthCheckMemberArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkHealthCheckMemberArrayInput` via:
//
//	SystemVirtualwanlinkHealthCheckMemberArray{ SystemVirtualwanlinkHealthCheckMemberArgs{...} }
type SystemVirtualwanlinkHealthCheckMemberArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkHealthCheckMemberArrayOutput() SystemVirtualwanlinkHealthCheckMemberArrayOutput
	ToSystemVirtualwanlinkHealthCheckMemberArrayOutputWithContext(context.Context) SystemVirtualwanlinkHealthCheckMemberArrayOutput
}

type SystemVirtualwanlinkHealthCheckMemberArray []SystemVirtualwanlinkHealthCheckMemberInput

func (SystemVirtualwanlinkHealthCheckMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (i SystemVirtualwanlinkHealthCheckMemberArray) ToSystemVirtualwanlinkHealthCheckMemberArrayOutput() SystemVirtualwanlinkHealthCheckMemberArrayOutput {
	return i.ToSystemVirtualwanlinkHealthCheckMemberArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkHealthCheckMemberArray) ToSystemVirtualwanlinkHealthCheckMemberArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkHealthCheckMemberArrayOutput)
}

type SystemVirtualwanlinkHealthCheckMemberOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkHealthCheckMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (o SystemVirtualwanlinkHealthCheckMemberOutput) ToSystemVirtualwanlinkHealthCheckMemberOutput() SystemVirtualwanlinkHealthCheckMemberOutput {
	return o
}

func (o SystemVirtualwanlinkHealthCheckMemberOutput) ToSystemVirtualwanlinkHealthCheckMemberOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckMemberOutput {
	return o
}

// Member sequence number.
func (o SystemVirtualwanlinkHealthCheckMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheckMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SystemVirtualwanlinkHealthCheckMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkHealthCheckMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkHealthCheckMember)(nil)).Elem()
}

func (o SystemVirtualwanlinkHealthCheckMemberArrayOutput) ToSystemVirtualwanlinkHealthCheckMemberArrayOutput() SystemVirtualwanlinkHealthCheckMemberArrayOutput {
	return o
}

func (o SystemVirtualwanlinkHealthCheckMemberArrayOutput) ToSystemVirtualwanlinkHealthCheckMemberArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckMemberArrayOutput {
	return o
}

func (o SystemVirtualwanlinkHealthCheckMemberArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkHealthCheckMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkHealthCheckMember {
		return vs[0].([]SystemVirtualwanlinkHealthCheckMember)[vs[1].(int)]
	}).(SystemVirtualwanlinkHealthCheckMemberOutput)
}

type SystemVirtualwanlinkHealthCheckSla struct {
	// SLA ID.
	Id *int `pulumi:"id"`
	// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	JitterThreshold *int `pulumi:"jitterThreshold"`
	// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	LatencyThreshold *int `pulumi:"latencyThreshold"`
	// Criteria on which to base link selection. Valid values: `latency`, `jitter`, `packet-loss`.
	LinkCostFactor *string `pulumi:"linkCostFactor"`
	// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
	PacketlossThreshold *int `pulumi:"packetlossThreshold"`
}

// SystemVirtualwanlinkHealthCheckSlaInput is an input type that accepts SystemVirtualwanlinkHealthCheckSlaArgs and SystemVirtualwanlinkHealthCheckSlaOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkHealthCheckSlaInput` via:
//
//	SystemVirtualwanlinkHealthCheckSlaArgs{...}
type SystemVirtualwanlinkHealthCheckSlaInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkHealthCheckSlaOutput() SystemVirtualwanlinkHealthCheckSlaOutput
	ToSystemVirtualwanlinkHealthCheckSlaOutputWithContext(context.Context) SystemVirtualwanlinkHealthCheckSlaOutput
}

type SystemVirtualwanlinkHealthCheckSlaArgs struct {
	// SLA ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	JitterThreshold pulumi.IntPtrInput `pulumi:"jitterThreshold"`
	// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
	LatencyThreshold pulumi.IntPtrInput `pulumi:"latencyThreshold"`
	// Criteria on which to base link selection. Valid values: `latency`, `jitter`, `packet-loss`.
	LinkCostFactor pulumi.StringPtrInput `pulumi:"linkCostFactor"`
	// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
	PacketlossThreshold pulumi.IntPtrInput `pulumi:"packetlossThreshold"`
}

func (SystemVirtualwanlinkHealthCheckSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (i SystemVirtualwanlinkHealthCheckSlaArgs) ToSystemVirtualwanlinkHealthCheckSlaOutput() SystemVirtualwanlinkHealthCheckSlaOutput {
	return i.ToSystemVirtualwanlinkHealthCheckSlaOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkHealthCheckSlaArgs) ToSystemVirtualwanlinkHealthCheckSlaOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkHealthCheckSlaOutput)
}

// SystemVirtualwanlinkHealthCheckSlaArrayInput is an input type that accepts SystemVirtualwanlinkHealthCheckSlaArray and SystemVirtualwanlinkHealthCheckSlaArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkHealthCheckSlaArrayInput` via:
//
//	SystemVirtualwanlinkHealthCheckSlaArray{ SystemVirtualwanlinkHealthCheckSlaArgs{...} }
type SystemVirtualwanlinkHealthCheckSlaArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkHealthCheckSlaArrayOutput() SystemVirtualwanlinkHealthCheckSlaArrayOutput
	ToSystemVirtualwanlinkHealthCheckSlaArrayOutputWithContext(context.Context) SystemVirtualwanlinkHealthCheckSlaArrayOutput
}

type SystemVirtualwanlinkHealthCheckSlaArray []SystemVirtualwanlinkHealthCheckSlaInput

func (SystemVirtualwanlinkHealthCheckSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (i SystemVirtualwanlinkHealthCheckSlaArray) ToSystemVirtualwanlinkHealthCheckSlaArrayOutput() SystemVirtualwanlinkHealthCheckSlaArrayOutput {
	return i.ToSystemVirtualwanlinkHealthCheckSlaArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkHealthCheckSlaArray) ToSystemVirtualwanlinkHealthCheckSlaArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkHealthCheckSlaArrayOutput)
}

type SystemVirtualwanlinkHealthCheckSlaOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkHealthCheckSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (o SystemVirtualwanlinkHealthCheckSlaOutput) ToSystemVirtualwanlinkHealthCheckSlaOutput() SystemVirtualwanlinkHealthCheckSlaOutput {
	return o
}

func (o SystemVirtualwanlinkHealthCheckSlaOutput) ToSystemVirtualwanlinkHealthCheckSlaOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckSlaOutput {
	return o
}

// SLA ID.
func (o SystemVirtualwanlinkHealthCheckSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheckSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
func (o SystemVirtualwanlinkHealthCheckSlaOutput) JitterThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheckSla) *int { return v.JitterThreshold }).(pulumi.IntPtrOutput)
}

// Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).
func (o SystemVirtualwanlinkHealthCheckSlaOutput) LatencyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheckSla) *int { return v.LatencyThreshold }).(pulumi.IntPtrOutput)
}

// Criteria on which to base link selection. Valid values: `latency`, `jitter`, `packet-loss`.
func (o SystemVirtualwanlinkHealthCheckSlaOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheckSla) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

// Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).
func (o SystemVirtualwanlinkHealthCheckSlaOutput) PacketlossThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkHealthCheckSla) *int { return v.PacketlossThreshold }).(pulumi.IntPtrOutput)
}

type SystemVirtualwanlinkHealthCheckSlaArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkHealthCheckSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkHealthCheckSla)(nil)).Elem()
}

func (o SystemVirtualwanlinkHealthCheckSlaArrayOutput) ToSystemVirtualwanlinkHealthCheckSlaArrayOutput() SystemVirtualwanlinkHealthCheckSlaArrayOutput {
	return o
}

func (o SystemVirtualwanlinkHealthCheckSlaArrayOutput) ToSystemVirtualwanlinkHealthCheckSlaArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkHealthCheckSlaArrayOutput {
	return o
}

func (o SystemVirtualwanlinkHealthCheckSlaArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkHealthCheckSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkHealthCheckSla {
		return vs[0].([]SystemVirtualwanlinkHealthCheckSla)[vs[1].(int)]
	}).(SystemVirtualwanlinkHealthCheckSlaOutput)
}

type SystemVirtualwanlinkMember struct {
	// Comments.
	Comment *string `pulumi:"comment"`
	// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
	Cost *int `pulumi:"cost"`
	// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
	Gateway *string `pulumi:"gateway"`
	// IPv6 gateway.
	Gateway6 *string `pulumi:"gateway6"`
	// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	IngressSpilloverThreshold *int `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// Priority of the interface (0 - 4294967295). Used for SD-WAN rules or priority rules.
	Priority *int `pulumi:"priority"`
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
	// Source IP address used in the health-check packet to the server.
	Source *string `pulumi:"source"`
	// Source IPv6 address used in the health-check packet to the server.
	Source6 *string `pulumi:"source6"`
	// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	SpilloverThreshold *int `pulumi:"spilloverThreshold"`
	// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Measured volume ratio (this value / sum of all values = percentage of link volume, 0 - 255).
	VolumeRatio *int `pulumi:"volumeRatio"`
	// Weight of this interface for weighted load balancing. (0 - 255) More traffic is directed to interfaces with higher weights.
	Weight *int `pulumi:"weight"`
}

// SystemVirtualwanlinkMemberInput is an input type that accepts SystemVirtualwanlinkMemberArgs and SystemVirtualwanlinkMemberOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkMemberInput` via:
//
//	SystemVirtualwanlinkMemberArgs{...}
type SystemVirtualwanlinkMemberInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkMemberOutput() SystemVirtualwanlinkMemberOutput
	ToSystemVirtualwanlinkMemberOutputWithContext(context.Context) SystemVirtualwanlinkMemberOutput
}

type SystemVirtualwanlinkMemberArgs struct {
	// Comments.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// IPv6 gateway.
	Gateway6 pulumi.StringPtrInput `pulumi:"gateway6"`
	// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	IngressSpilloverThreshold pulumi.IntPtrInput `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Priority of the interface (0 - 4294967295). Used for SD-WAN rules or priority rules.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
	// Source IP address used in the health-check packet to the server.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Source IPv6 address used in the health-check packet to the server.
	Source6 pulumi.StringPtrInput `pulumi:"source6"`
	// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
	SpilloverThreshold pulumi.IntPtrInput `pulumi:"spilloverThreshold"`
	// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Measured volume ratio (this value / sum of all values = percentage of link volume, 0 - 255).
	VolumeRatio pulumi.IntPtrInput `pulumi:"volumeRatio"`
	// Weight of this interface for weighted load balancing. (0 - 255) More traffic is directed to interfaces with higher weights.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (SystemVirtualwanlinkMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkMember)(nil)).Elem()
}

func (i SystemVirtualwanlinkMemberArgs) ToSystemVirtualwanlinkMemberOutput() SystemVirtualwanlinkMemberOutput {
	return i.ToSystemVirtualwanlinkMemberOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkMemberArgs) ToSystemVirtualwanlinkMemberOutputWithContext(ctx context.Context) SystemVirtualwanlinkMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkMemberOutput)
}

// SystemVirtualwanlinkMemberArrayInput is an input type that accepts SystemVirtualwanlinkMemberArray and SystemVirtualwanlinkMemberArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkMemberArrayInput` via:
//
//	SystemVirtualwanlinkMemberArray{ SystemVirtualwanlinkMemberArgs{...} }
type SystemVirtualwanlinkMemberArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkMemberArrayOutput() SystemVirtualwanlinkMemberArrayOutput
	ToSystemVirtualwanlinkMemberArrayOutputWithContext(context.Context) SystemVirtualwanlinkMemberArrayOutput
}

type SystemVirtualwanlinkMemberArray []SystemVirtualwanlinkMemberInput

func (SystemVirtualwanlinkMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkMember)(nil)).Elem()
}

func (i SystemVirtualwanlinkMemberArray) ToSystemVirtualwanlinkMemberArrayOutput() SystemVirtualwanlinkMemberArrayOutput {
	return i.ToSystemVirtualwanlinkMemberArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkMemberArray) ToSystemVirtualwanlinkMemberArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkMemberArrayOutput)
}

type SystemVirtualwanlinkMemberOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkMember)(nil)).Elem()
}

func (o SystemVirtualwanlinkMemberOutput) ToSystemVirtualwanlinkMemberOutput() SystemVirtualwanlinkMemberOutput {
	return o
}

func (o SystemVirtualwanlinkMemberOutput) ToSystemVirtualwanlinkMemberOutputWithContext(ctx context.Context) SystemVirtualwanlinkMemberOutput {
	return o
}

// Comments.
func (o SystemVirtualwanlinkMemberOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Cost of this interface for services in SLA mode (0 - 4294967295, default = 0).
func (o SystemVirtualwanlinkMemberOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// The default gateway for this interface. Usually the default gateway of the Internet service provider that this interface is connected to.
func (o SystemVirtualwanlinkMemberOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// IPv6 gateway.
func (o SystemVirtualwanlinkMemberOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

// Ingress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
func (o SystemVirtualwanlinkMemberOutput) IngressSpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *int { return v.IngressSpilloverThreshold }).(pulumi.IntPtrOutput)
}

// Interface name.
func (o SystemVirtualwanlinkMemberOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Priority of the interface (0 - 4294967295). Used for SD-WAN rules or priority rules.
func (o SystemVirtualwanlinkMemberOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Member sequence number.
func (o SystemVirtualwanlinkMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

// Source IP address used in the health-check packet to the server.
func (o SystemVirtualwanlinkMemberOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Source IPv6 address used in the health-check packet to the server.
func (o SystemVirtualwanlinkMemberOutput) Source6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *string { return v.Source6 }).(pulumi.StringPtrOutput)
}

// Egress spillover threshold for this interface (0 - 16776000 kbit/s). When this traffic volume threshold is reached, new sessions spill over to other interfaces in the SD-WAN.
func (o SystemVirtualwanlinkMemberOutput) SpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *int { return v.SpilloverThreshold }).(pulumi.IntPtrOutput)
}

// Enable/disable this interface in the SD-WAN. Valid values: `disable`, `enable`.
func (o SystemVirtualwanlinkMemberOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Measured volume ratio (this value / sum of all values = percentage of link volume, 0 - 255).
func (o SystemVirtualwanlinkMemberOutput) VolumeRatio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *int { return v.VolumeRatio }).(pulumi.IntPtrOutput)
}

// Weight of this interface for weighted load balancing. (0 - 255) More traffic is directed to interfaces with higher weights.
func (o SystemVirtualwanlinkMemberOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkMember) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SystemVirtualwanlinkMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkMember)(nil)).Elem()
}

func (o SystemVirtualwanlinkMemberArrayOutput) ToSystemVirtualwanlinkMemberArrayOutput() SystemVirtualwanlinkMemberArrayOutput {
	return o
}

func (o SystemVirtualwanlinkMemberArrayOutput) ToSystemVirtualwanlinkMemberArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkMemberArrayOutput {
	return o
}

func (o SystemVirtualwanlinkMemberArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkMember {
		return vs[0].([]SystemVirtualwanlinkMember)[vs[1].(int)]
	}).(SystemVirtualwanlinkMemberOutput)
}

type SystemVirtualwanlinkNeighbor struct {
	// SD-WAN health-check name.
	HealthCheck *string `pulumi:"healthCheck"`
	// IP address of neighbor.
	Ip *string `pulumi:"ip"`
	// Member sequence number.
	Member *int `pulumi:"member"`
	// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// SLA ID.
	SlaId *int `pulumi:"slaId"`
}

// SystemVirtualwanlinkNeighborInput is an input type that accepts SystemVirtualwanlinkNeighborArgs and SystemVirtualwanlinkNeighborOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkNeighborInput` via:
//
//	SystemVirtualwanlinkNeighborArgs{...}
type SystemVirtualwanlinkNeighborInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkNeighborOutput() SystemVirtualwanlinkNeighborOutput
	ToSystemVirtualwanlinkNeighborOutputWithContext(context.Context) SystemVirtualwanlinkNeighborOutput
}

type SystemVirtualwanlinkNeighborArgs struct {
	// SD-WAN health-check name.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// IP address of neighbor.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Member sequence number.
	Member pulumi.IntPtrInput `pulumi:"member"`
	// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// SLA ID.
	SlaId pulumi.IntPtrInput `pulumi:"slaId"`
}

func (SystemVirtualwanlinkNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkNeighbor)(nil)).Elem()
}

func (i SystemVirtualwanlinkNeighborArgs) ToSystemVirtualwanlinkNeighborOutput() SystemVirtualwanlinkNeighborOutput {
	return i.ToSystemVirtualwanlinkNeighborOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkNeighborArgs) ToSystemVirtualwanlinkNeighborOutputWithContext(ctx context.Context) SystemVirtualwanlinkNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkNeighborOutput)
}

// SystemVirtualwanlinkNeighborArrayInput is an input type that accepts SystemVirtualwanlinkNeighborArray and SystemVirtualwanlinkNeighborArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkNeighborArrayInput` via:
//
//	SystemVirtualwanlinkNeighborArray{ SystemVirtualwanlinkNeighborArgs{...} }
type SystemVirtualwanlinkNeighborArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkNeighborArrayOutput() SystemVirtualwanlinkNeighborArrayOutput
	ToSystemVirtualwanlinkNeighborArrayOutputWithContext(context.Context) SystemVirtualwanlinkNeighborArrayOutput
}

type SystemVirtualwanlinkNeighborArray []SystemVirtualwanlinkNeighborInput

func (SystemVirtualwanlinkNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkNeighbor)(nil)).Elem()
}

func (i SystemVirtualwanlinkNeighborArray) ToSystemVirtualwanlinkNeighborArrayOutput() SystemVirtualwanlinkNeighborArrayOutput {
	return i.ToSystemVirtualwanlinkNeighborArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkNeighborArray) ToSystemVirtualwanlinkNeighborArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkNeighborArrayOutput)
}

type SystemVirtualwanlinkNeighborOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkNeighbor)(nil)).Elem()
}

func (o SystemVirtualwanlinkNeighborOutput) ToSystemVirtualwanlinkNeighborOutput() SystemVirtualwanlinkNeighborOutput {
	return o
}

func (o SystemVirtualwanlinkNeighborOutput) ToSystemVirtualwanlinkNeighborOutputWithContext(ctx context.Context) SystemVirtualwanlinkNeighborOutput {
	return o
}

// SD-WAN health-check name.
func (o SystemVirtualwanlinkNeighborOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkNeighbor) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// IP address of neighbor.
func (o SystemVirtualwanlinkNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Member sequence number.
func (o SystemVirtualwanlinkNeighborOutput) Member() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkNeighbor) *int { return v.Member }).(pulumi.IntPtrOutput)
}

// Role of neighbor. Valid values: `standalone`, `primary`, `secondary`.
func (o SystemVirtualwanlinkNeighborOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkNeighbor) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// SLA ID.
func (o SystemVirtualwanlinkNeighborOutput) SlaId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkNeighbor) *int { return v.SlaId }).(pulumi.IntPtrOutput)
}

type SystemVirtualwanlinkNeighborArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkNeighbor)(nil)).Elem()
}

func (o SystemVirtualwanlinkNeighborArrayOutput) ToSystemVirtualwanlinkNeighborArrayOutput() SystemVirtualwanlinkNeighborArrayOutput {
	return o
}

func (o SystemVirtualwanlinkNeighborArrayOutput) ToSystemVirtualwanlinkNeighborArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkNeighborArrayOutput {
	return o
}

func (o SystemVirtualwanlinkNeighborArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkNeighbor {
		return vs[0].([]SystemVirtualwanlinkNeighbor)[vs[1].(int)]
	}).(SystemVirtualwanlinkNeighborOutput)
}

type SystemVirtualwanlinkService struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
	BandwidthWeight *int `pulumi:"bandwidthWeight"`
	// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
	Default *string `pulumi:"default"`
	// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpForward *string `pulumi:"dscpForward"`
	// Forward traffic DSCP tag.
	DscpForwardTag *string `pulumi:"dscpForwardTag"`
	// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpReverse *string `pulumi:"dscpReverse"`
	// Reverse traffic DSCP tag.
	DscpReverseTag *string `pulumi:"dscpReverseTag"`
	// Destination address6 name. The structure of `dst6` block is documented below.
	Dst6s []SystemVirtualwanlinkServiceDst6 `pulumi:"dst6s"`
	// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
	DstNegate *string `pulumi:"dstNegate"`
	// Destination address name. The structure of `dst` block is documented below.
	Dsts []SystemVirtualwanlinkServiceDst `pulumi:"dsts"`
	// End destination port number.
	EndPort *int `pulumi:"endPort"`
	// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
	Gateway *string `pulumi:"gateway"`
	// User groups. The structure of `groups` block is documented below.
	Groups []SystemVirtualwanlinkServiceGroup `pulumi:"groups"`
	// Health check.
	HealthCheck *string `pulumi:"healthCheck"`
	// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
	HoldDownTime *int `pulumi:"holdDownTime"`
	// Priority rule ID (1 - 4000).
	Id *int `pulumi:"id"`
	// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
	InputDeviceNegate *string `pulumi:"inputDeviceNegate"`
	// Source interface name. The structure of `inputDevice` block is documented below.
	InputDevices []SystemVirtualwanlinkServiceInputDevice `pulumi:"inputDevices"`
	// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
	InternetService *string `pulumi:"internetService"`
	// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
	InternetServiceAppCtrlGroups []SystemVirtualwanlinkServiceInternetServiceAppCtrlGroup `pulumi:"internetServiceAppCtrlGroups"`
	// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
	InternetServiceAppCtrls []SystemVirtualwanlinkServiceInternetServiceAppCtrl `pulumi:"internetServiceAppCtrls"`
	// Control-based Internet Service group list. The structure of `internetServiceCtrlGroup` block is documented below.
	InternetServiceCtrlGroups []SystemVirtualwanlinkServiceInternetServiceCtrlGroup `pulumi:"internetServiceCtrlGroups"`
	// Control-based Internet Service ID list. The structure of `internetServiceCtrl` block is documented below.
	InternetServiceCtrls []SystemVirtualwanlinkServiceInternetServiceCtrl `pulumi:"internetServiceCtrls"`
	// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups []SystemVirtualwanlinkServiceInternetServiceCustomGroup `pulumi:"internetServiceCustomGroups"`
	// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms []SystemVirtualwanlinkServiceInternetServiceCustom `pulumi:"internetServiceCustoms"`
	// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups []SystemVirtualwanlinkServiceInternetServiceGroup `pulumi:"internetServiceGroups"`
	// Internet service ID list. The structure of `internetServiceId` block is documented below.
	InternetServiceIds []SystemVirtualwanlinkServiceInternetServiceId `pulumi:"internetServiceIds"`
	// Internet service name list. The structure of `internetServiceName` block is documented below.
	InternetServiceNames []SystemVirtualwanlinkServiceInternetServiceName `pulumi:"internetServiceNames"`
	// Coefficient of jitter in the formula of custom-profile-1.
	JitterWeight *int `pulumi:"jitterWeight"`
	// Coefficient of latency in the formula of custom-profile-1.
	LatencyWeight *int `pulumi:"latencyWeight"`
	// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
	LinkCostFactor *string `pulumi:"linkCostFactor"`
	// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
	LinkCostThreshold *int `pulumi:"linkCostThreshold"`
	// Member sequence number.
	Member *int `pulumi:"member"`
	// Control how the priority rule sets the priority of interfaces in the SD-WAN. Valid values: `auto`, `manual`, `priority`, `sla`, `load-balance`.
	Mode *string `pulumi:"mode"`
	// Priority rule name.
	Name *string `pulumi:"name"`
	// Coefficient of packet-loss in the formula of custom-profile-1.
	PacketLossWeight *int `pulumi:"packetLossWeight"`
	// Member sequence number list. The structure of `priorityMembers` block is documented below.
	PriorityMembers []SystemVirtualwanlinkServicePriorityMember `pulumi:"priorityMembers"`
	// Protocol number.
	Protocol *int `pulumi:"protocol"`
	// Quality grade.
	QualityLink *int `pulumi:"qualityLink"`
	// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// IPv4 route map route-tag.
	RouteTag *int `pulumi:"routeTag"`
	// Method to compare SLA value for sla and load balance mode.  Valid values: `order`, `number`.
	SlaCompareMethod *string `pulumi:"slaCompareMethod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas []SystemVirtualwanlinkServiceSla `pulumi:"slas"`
	// Source address6 name. The structure of `src6` block is documented below.
	Src6s []SystemVirtualwanlinkServiceSrc6 `pulumi:"src6s"`
	// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
	SrcNegate *string `pulumi:"srcNegate"`
	// Source address name. The structure of `src` block is documented below.
	Srcs []SystemVirtualwanlinkServiceSrc `pulumi:"srcs"`
	// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
	StandaloneAction *string `pulumi:"standaloneAction"`
	// Start destination port number.
	StartPort *int `pulumi:"startPort"`
	// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Type of service bit pattern.
	Tos *string `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask *string `pulumi:"tosMask"`
	// User name. The structure of `users` block is documented below.
	Users []SystemVirtualwanlinkServiceUser `pulumi:"users"`
}

// SystemVirtualwanlinkServiceInput is an input type that accepts SystemVirtualwanlinkServiceArgs and SystemVirtualwanlinkServiceOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInput` via:
//
//	SystemVirtualwanlinkServiceArgs{...}
type SystemVirtualwanlinkServiceInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceOutput() SystemVirtualwanlinkServiceOutput
	ToSystemVirtualwanlinkServiceOutputWithContext(context.Context) SystemVirtualwanlinkServiceOutput
}

type SystemVirtualwanlinkServiceArgs struct {
	// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
	BandwidthWeight pulumi.IntPtrInput `pulumi:"bandwidthWeight"`
	// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
	Default pulumi.StringPtrInput `pulumi:"default"`
	// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpForward pulumi.StringPtrInput `pulumi:"dscpForward"`
	// Forward traffic DSCP tag.
	DscpForwardTag pulumi.StringPtrInput `pulumi:"dscpForwardTag"`
	// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
	DscpReverse pulumi.StringPtrInput `pulumi:"dscpReverse"`
	// Reverse traffic DSCP tag.
	DscpReverseTag pulumi.StringPtrInput `pulumi:"dscpReverseTag"`
	// Destination address6 name. The structure of `dst6` block is documented below.
	Dst6s SystemVirtualwanlinkServiceDst6ArrayInput `pulumi:"dst6s"`
	// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
	DstNegate pulumi.StringPtrInput `pulumi:"dstNegate"`
	// Destination address name. The structure of `dst` block is documented below.
	Dsts SystemVirtualwanlinkServiceDstArrayInput `pulumi:"dsts"`
	// End destination port number.
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// User groups. The structure of `groups` block is documented below.
	Groups SystemVirtualwanlinkServiceGroupArrayInput `pulumi:"groups"`
	// Health check.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
	HoldDownTime pulumi.IntPtrInput `pulumi:"holdDownTime"`
	// Priority rule ID (1 - 4000).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
	InputDeviceNegate pulumi.StringPtrInput `pulumi:"inputDeviceNegate"`
	// Source interface name. The structure of `inputDevice` block is documented below.
	InputDevices SystemVirtualwanlinkServiceInputDeviceArrayInput `pulumi:"inputDevices"`
	// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
	InternetService pulumi.StringPtrInput `pulumi:"internetService"`
	// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
	InternetServiceAppCtrlGroups SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput `pulumi:"internetServiceAppCtrlGroups"`
	// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
	InternetServiceAppCtrls SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayInput `pulumi:"internetServiceAppCtrls"`
	// Control-based Internet Service group list. The structure of `internetServiceCtrlGroup` block is documented below.
	InternetServiceCtrlGroups SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayInput `pulumi:"internetServiceCtrlGroups"`
	// Control-based Internet Service ID list. The structure of `internetServiceCtrl` block is documented below.
	InternetServiceCtrls SystemVirtualwanlinkServiceInternetServiceCtrlArrayInput `pulumi:"internetServiceCtrls"`
	// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayInput `pulumi:"internetServiceCustomGroups"`
	// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms SystemVirtualwanlinkServiceInternetServiceCustomArrayInput `pulumi:"internetServiceCustoms"`
	// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups SystemVirtualwanlinkServiceInternetServiceGroupArrayInput `pulumi:"internetServiceGroups"`
	// Internet service ID list. The structure of `internetServiceId` block is documented below.
	InternetServiceIds SystemVirtualwanlinkServiceInternetServiceIdArrayInput `pulumi:"internetServiceIds"`
	// Internet service name list. The structure of `internetServiceName` block is documented below.
	InternetServiceNames SystemVirtualwanlinkServiceInternetServiceNameArrayInput `pulumi:"internetServiceNames"`
	// Coefficient of jitter in the formula of custom-profile-1.
	JitterWeight pulumi.IntPtrInput `pulumi:"jitterWeight"`
	// Coefficient of latency in the formula of custom-profile-1.
	LatencyWeight pulumi.IntPtrInput `pulumi:"latencyWeight"`
	// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
	LinkCostFactor pulumi.StringPtrInput `pulumi:"linkCostFactor"`
	// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
	LinkCostThreshold pulumi.IntPtrInput `pulumi:"linkCostThreshold"`
	// Member sequence number.
	Member pulumi.IntPtrInput `pulumi:"member"`
	// Control how the priority rule sets the priority of interfaces in the SD-WAN. Valid values: `auto`, `manual`, `priority`, `sla`, `load-balance`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Priority rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Coefficient of packet-loss in the formula of custom-profile-1.
	PacketLossWeight pulumi.IntPtrInput `pulumi:"packetLossWeight"`
	// Member sequence number list. The structure of `priorityMembers` block is documented below.
	PriorityMembers SystemVirtualwanlinkServicePriorityMemberArrayInput `pulumi:"priorityMembers"`
	// Protocol number.
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
	// Quality grade.
	QualityLink pulumi.IntPtrInput `pulumi:"qualityLink"`
	// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// IPv4 route map route-tag.
	RouteTag pulumi.IntPtrInput `pulumi:"routeTag"`
	// Method to compare SLA value for sla and load balance mode.  Valid values: `order`, `number`.
	SlaCompareMethod pulumi.StringPtrInput `pulumi:"slaCompareMethod"`
	// Service level agreement (SLA). The structure of `sla` block is documented below.
	Slas SystemVirtualwanlinkServiceSlaArrayInput `pulumi:"slas"`
	// Source address6 name. The structure of `src6` block is documented below.
	Src6s SystemVirtualwanlinkServiceSrc6ArrayInput `pulumi:"src6s"`
	// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
	SrcNegate pulumi.StringPtrInput `pulumi:"srcNegate"`
	// Source address name. The structure of `src` block is documented below.
	Srcs SystemVirtualwanlinkServiceSrcArrayInput `pulumi:"srcs"`
	// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
	StandaloneAction pulumi.StringPtrInput `pulumi:"standaloneAction"`
	// Start destination port number.
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
	// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Type of service bit pattern.
	Tos pulumi.StringPtrInput `pulumi:"tos"`
	// Type of service evaluated bits.
	TosMask pulumi.StringPtrInput `pulumi:"tosMask"`
	// User name. The structure of `users` block is documented below.
	Users SystemVirtualwanlinkServiceUserArrayInput `pulumi:"users"`
}

func (SystemVirtualwanlinkServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkService)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceArgs) ToSystemVirtualwanlinkServiceOutput() SystemVirtualwanlinkServiceOutput {
	return i.ToSystemVirtualwanlinkServiceOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceArgs) ToSystemVirtualwanlinkServiceOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceOutput)
}

// SystemVirtualwanlinkServiceArrayInput is an input type that accepts SystemVirtualwanlinkServiceArray and SystemVirtualwanlinkServiceArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceArrayInput` via:
//
//	SystemVirtualwanlinkServiceArray{ SystemVirtualwanlinkServiceArgs{...} }
type SystemVirtualwanlinkServiceArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceArrayOutput() SystemVirtualwanlinkServiceArrayOutput
	ToSystemVirtualwanlinkServiceArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceArrayOutput
}

type SystemVirtualwanlinkServiceArray []SystemVirtualwanlinkServiceInput

func (SystemVirtualwanlinkServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkService)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceArray) ToSystemVirtualwanlinkServiceArrayOutput() SystemVirtualwanlinkServiceArrayOutput {
	return i.ToSystemVirtualwanlinkServiceArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceArray) ToSystemVirtualwanlinkServiceArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceArrayOutput)
}

type SystemVirtualwanlinkServiceOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkService)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceOutput) ToSystemVirtualwanlinkServiceOutput() SystemVirtualwanlinkServiceOutput {
	return o
}

func (o SystemVirtualwanlinkServiceOutput) ToSystemVirtualwanlinkServiceOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceOutput {
	return o
}

// Address mode (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
func (o SystemVirtualwanlinkServiceOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Coefficient of reciprocal of available bidirectional bandwidth in the formula of custom-profile-1.
func (o SystemVirtualwanlinkServiceOutput) BandwidthWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.BandwidthWeight }).(pulumi.IntPtrOutput)
}

// Enable/disable use of SD-WAN as default service. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkServiceOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.Default }).(pulumi.StringPtrOutput)
}

// Enable/disable forward traffic DSCP tag. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkServiceOutput) DscpForward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.DscpForward }).(pulumi.StringPtrOutput)
}

// Forward traffic DSCP tag.
func (o SystemVirtualwanlinkServiceOutput) DscpForwardTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.DscpForwardTag }).(pulumi.StringPtrOutput)
}

// Enable/disable reverse traffic DSCP tag. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkServiceOutput) DscpReverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.DscpReverse }).(pulumi.StringPtrOutput)
}

// Reverse traffic DSCP tag.
func (o SystemVirtualwanlinkServiceOutput) DscpReverseTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.DscpReverseTag }).(pulumi.StringPtrOutput)
}

// Destination address6 name. The structure of `dst6` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) Dst6s() SystemVirtualwanlinkServiceDst6ArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceDst6 { return v.Dst6s }).(SystemVirtualwanlinkServiceDst6ArrayOutput)
}

// Enable/disable negation of destination address match. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkServiceOutput) DstNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.DstNegate }).(pulumi.StringPtrOutput)
}

// Destination address name. The structure of `dst` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) Dsts() SystemVirtualwanlinkServiceDstArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceDst { return v.Dsts }).(SystemVirtualwanlinkServiceDstArrayOutput)
}

// End destination port number.
func (o SystemVirtualwanlinkServiceOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Enable/disable SD-WAN service gateway. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkServiceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// User groups. The structure of `groups` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) Groups() SystemVirtualwanlinkServiceGroupArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceGroup { return v.Groups }).(SystemVirtualwanlinkServiceGroupArrayOutput)
}

// Health check.
func (o SystemVirtualwanlinkServiceOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// Waiting period in seconds when switching from the back-up member to the primary member (0 - 10000000, default = 0).
func (o SystemVirtualwanlinkServiceOutput) HoldDownTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.HoldDownTime }).(pulumi.IntPtrOutput)
}

// Priority rule ID (1 - 4000).
func (o SystemVirtualwanlinkServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable negation of input device match. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkServiceOutput) InputDeviceNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.InputDeviceNegate }).(pulumi.StringPtrOutput)
}

// Source interface name. The structure of `inputDevice` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) InputDevices() SystemVirtualwanlinkServiceInputDeviceArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceInputDevice { return v.InputDevices }).(SystemVirtualwanlinkServiceInputDeviceArrayOutput)
}

// Enable/disable use of Internet service for application-based load balancing. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkServiceOutput) InternetService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.InternetService }).(pulumi.StringPtrOutput)
}

// Application control based Internet Service group list. The structure of `internetServiceAppCtrlGroup` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) InternetServiceAppCtrlGroups() SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceInternetServiceAppCtrlGroup {
		return v.InternetServiceAppCtrlGroups
	}).(SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput)
}

// Application control based Internet Service ID list. The structure of `internetServiceAppCtrl` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) InternetServiceAppCtrls() SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceInternetServiceAppCtrl {
		return v.InternetServiceAppCtrls
	}).(SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput)
}

// Control-based Internet Service group list. The structure of `internetServiceCtrlGroup` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) InternetServiceCtrlGroups() SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceInternetServiceCtrlGroup {
		return v.InternetServiceCtrlGroups
	}).(SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput)
}

// Control-based Internet Service ID list. The structure of `internetServiceCtrl` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) InternetServiceCtrls() SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceInternetServiceCtrl {
		return v.InternetServiceCtrls
	}).(SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput)
}

// Custom Internet Service group list. The structure of `internetServiceCustomGroup` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) InternetServiceCustomGroups() SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceInternetServiceCustomGroup {
		return v.InternetServiceCustomGroups
	}).(SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput)
}

// Custom Internet service name list. The structure of `internetServiceCustom` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) InternetServiceCustoms() SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceInternetServiceCustom {
		return v.InternetServiceCustoms
	}).(SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput)
}

// Internet Service group list. The structure of `internetServiceGroup` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) InternetServiceGroups() SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceInternetServiceGroup {
		return v.InternetServiceGroups
	}).(SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput)
}

// Internet service ID list. The structure of `internetServiceId` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) InternetServiceIds() SystemVirtualwanlinkServiceInternetServiceIdArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceInternetServiceId {
		return v.InternetServiceIds
	}).(SystemVirtualwanlinkServiceInternetServiceIdArrayOutput)
}

// Internet service name list. The structure of `internetServiceName` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) InternetServiceNames() SystemVirtualwanlinkServiceInternetServiceNameArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceInternetServiceName {
		return v.InternetServiceNames
	}).(SystemVirtualwanlinkServiceInternetServiceNameArrayOutput)
}

// Coefficient of jitter in the formula of custom-profile-1.
func (o SystemVirtualwanlinkServiceOutput) JitterWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.JitterWeight }).(pulumi.IntPtrOutput)
}

// Coefficient of latency in the formula of custom-profile-1.
func (o SystemVirtualwanlinkServiceOutput) LatencyWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.LatencyWeight }).(pulumi.IntPtrOutput)
}

// Link cost factor. Valid values: `latency`, `jitter`, `packet-loss`, `inbandwidth`, `outbandwidth`, `bibandwidth`, `custom-profile-1`.
func (o SystemVirtualwanlinkServiceOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

// Percentage threshold change of link cost values that will result in policy route regeneration (0 - 10000000, default = 10).
func (o SystemVirtualwanlinkServiceOutput) LinkCostThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.LinkCostThreshold }).(pulumi.IntPtrOutput)
}

// Member sequence number.
func (o SystemVirtualwanlinkServiceOutput) Member() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.Member }).(pulumi.IntPtrOutput)
}

// Control how the priority rule sets the priority of interfaces in the SD-WAN. Valid values: `auto`, `manual`, `priority`, `sla`, `load-balance`.
func (o SystemVirtualwanlinkServiceOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Priority rule name.
func (o SystemVirtualwanlinkServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Coefficient of packet-loss in the formula of custom-profile-1.
func (o SystemVirtualwanlinkServiceOutput) PacketLossWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.PacketLossWeight }).(pulumi.IntPtrOutput)
}

// Member sequence number list. The structure of `priorityMembers` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) PriorityMembers() SystemVirtualwanlinkServicePriorityMemberArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServicePriorityMember {
		return v.PriorityMembers
	}).(SystemVirtualwanlinkServicePriorityMemberArrayOutput)
}

// Protocol number.
func (o SystemVirtualwanlinkServiceOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

// Quality grade.
func (o SystemVirtualwanlinkServiceOutput) QualityLink() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.QualityLink }).(pulumi.IntPtrOutput)
}

// Service role to work with neighbor. Valid values: `standalone`, `primary`, `secondary`.
func (o SystemVirtualwanlinkServiceOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// IPv4 route map route-tag.
func (o SystemVirtualwanlinkServiceOutput) RouteTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.RouteTag }).(pulumi.IntPtrOutput)
}

// Method to compare SLA value for sla and load balance mode.  Valid values: `order`, `number`.
func (o SystemVirtualwanlinkServiceOutput) SlaCompareMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.SlaCompareMethod }).(pulumi.StringPtrOutput)
}

// Service level agreement (SLA). The structure of `sla` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) Slas() SystemVirtualwanlinkServiceSlaArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceSla { return v.Slas }).(SystemVirtualwanlinkServiceSlaArrayOutput)
}

// Source address6 name. The structure of `src6` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) Src6s() SystemVirtualwanlinkServiceSrc6ArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceSrc6 { return v.Src6s }).(SystemVirtualwanlinkServiceSrc6ArrayOutput)
}

// Enable/disable negation of source address match. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkServiceOutput) SrcNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.SrcNegate }).(pulumi.StringPtrOutput)
}

// Source address name. The structure of `src` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) Srcs() SystemVirtualwanlinkServiceSrcArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceSrc { return v.Srcs }).(SystemVirtualwanlinkServiceSrcArrayOutput)
}

// Enable/disable service when selected neighbor role is standalone while service role is not standalone. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkServiceOutput) StandaloneAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.StandaloneAction }).(pulumi.StringPtrOutput)
}

// Start destination port number.
func (o SystemVirtualwanlinkServiceOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

// Enable/disable SD-WAN service. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkServiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Type of service bit pattern.
func (o SystemVirtualwanlinkServiceOutput) Tos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.Tos }).(pulumi.StringPtrOutput)
}

// Type of service evaluated bits.
func (o SystemVirtualwanlinkServiceOutput) TosMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) *string { return v.TosMask }).(pulumi.StringPtrOutput)
}

// User name. The structure of `users` block is documented below.
func (o SystemVirtualwanlinkServiceOutput) Users() SystemVirtualwanlinkServiceUserArrayOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkService) []SystemVirtualwanlinkServiceUser { return v.Users }).(SystemVirtualwanlinkServiceUserArrayOutput)
}

type SystemVirtualwanlinkServiceArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkService)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceArrayOutput) ToSystemVirtualwanlinkServiceArrayOutput() SystemVirtualwanlinkServiceArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceArrayOutput) ToSystemVirtualwanlinkServiceArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkService {
		return vs[0].([]SystemVirtualwanlinkService)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceOutput)
}

type SystemVirtualwanlinkServiceDst6 struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceDst6Input is an input type that accepts SystemVirtualwanlinkServiceDst6Args and SystemVirtualwanlinkServiceDst6Output values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceDst6Input` via:
//
//	SystemVirtualwanlinkServiceDst6Args{...}
type SystemVirtualwanlinkServiceDst6Input interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceDst6Output() SystemVirtualwanlinkServiceDst6Output
	ToSystemVirtualwanlinkServiceDst6OutputWithContext(context.Context) SystemVirtualwanlinkServiceDst6Output
}

type SystemVirtualwanlinkServiceDst6Args struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceDst6)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceDst6Args) ToSystemVirtualwanlinkServiceDst6Output() SystemVirtualwanlinkServiceDst6Output {
	return i.ToSystemVirtualwanlinkServiceDst6OutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceDst6Args) ToSystemVirtualwanlinkServiceDst6OutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceDst6Output)
}

// SystemVirtualwanlinkServiceDst6ArrayInput is an input type that accepts SystemVirtualwanlinkServiceDst6Array and SystemVirtualwanlinkServiceDst6ArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceDst6ArrayInput` via:
//
//	SystemVirtualwanlinkServiceDst6Array{ SystemVirtualwanlinkServiceDst6Args{...} }
type SystemVirtualwanlinkServiceDst6ArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceDst6ArrayOutput() SystemVirtualwanlinkServiceDst6ArrayOutput
	ToSystemVirtualwanlinkServiceDst6ArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceDst6ArrayOutput
}

type SystemVirtualwanlinkServiceDst6Array []SystemVirtualwanlinkServiceDst6Input

func (SystemVirtualwanlinkServiceDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceDst6)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceDst6Array) ToSystemVirtualwanlinkServiceDst6ArrayOutput() SystemVirtualwanlinkServiceDst6ArrayOutput {
	return i.ToSystemVirtualwanlinkServiceDst6ArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceDst6Array) ToSystemVirtualwanlinkServiceDst6ArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceDst6ArrayOutput)
}

type SystemVirtualwanlinkServiceDst6Output struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceDst6)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceDst6Output) ToSystemVirtualwanlinkServiceDst6Output() SystemVirtualwanlinkServiceDst6Output {
	return o
}

func (o SystemVirtualwanlinkServiceDst6Output) ToSystemVirtualwanlinkServiceDst6OutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceDst6Output {
	return o
}

// Physical interface name.
//
// The `dst6` block supports:
//
// The `src6` block supports:
func (o SystemVirtualwanlinkServiceDst6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceDst6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceDst6ArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceDst6)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceDst6ArrayOutput) ToSystemVirtualwanlinkServiceDst6ArrayOutput() SystemVirtualwanlinkServiceDst6ArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceDst6ArrayOutput) ToSystemVirtualwanlinkServiceDst6ArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceDst6ArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceDst6ArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceDst6 {
		return vs[0].([]SystemVirtualwanlinkServiceDst6)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceDst6Output)
}

type SystemVirtualwanlinkServiceDst struct {
	// Address or address group name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceDstInput is an input type that accepts SystemVirtualwanlinkServiceDstArgs and SystemVirtualwanlinkServiceDstOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceDstInput` via:
//
//	SystemVirtualwanlinkServiceDstArgs{...}
type SystemVirtualwanlinkServiceDstInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceDstOutput() SystemVirtualwanlinkServiceDstOutput
	ToSystemVirtualwanlinkServiceDstOutputWithContext(context.Context) SystemVirtualwanlinkServiceDstOutput
}

type SystemVirtualwanlinkServiceDstArgs struct {
	// Address or address group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceDst)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceDstArgs) ToSystemVirtualwanlinkServiceDstOutput() SystemVirtualwanlinkServiceDstOutput {
	return i.ToSystemVirtualwanlinkServiceDstOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceDstArgs) ToSystemVirtualwanlinkServiceDstOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceDstOutput)
}

// SystemVirtualwanlinkServiceDstArrayInput is an input type that accepts SystemVirtualwanlinkServiceDstArray and SystemVirtualwanlinkServiceDstArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceDstArrayInput` via:
//
//	SystemVirtualwanlinkServiceDstArray{ SystemVirtualwanlinkServiceDstArgs{...} }
type SystemVirtualwanlinkServiceDstArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceDstArrayOutput() SystemVirtualwanlinkServiceDstArrayOutput
	ToSystemVirtualwanlinkServiceDstArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceDstArrayOutput
}

type SystemVirtualwanlinkServiceDstArray []SystemVirtualwanlinkServiceDstInput

func (SystemVirtualwanlinkServiceDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceDst)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceDstArray) ToSystemVirtualwanlinkServiceDstArrayOutput() SystemVirtualwanlinkServiceDstArrayOutput {
	return i.ToSystemVirtualwanlinkServiceDstArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceDstArray) ToSystemVirtualwanlinkServiceDstArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceDstArrayOutput)
}

type SystemVirtualwanlinkServiceDstOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceDst)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceDstOutput) ToSystemVirtualwanlinkServiceDstOutput() SystemVirtualwanlinkServiceDstOutput {
	return o
}

func (o SystemVirtualwanlinkServiceDstOutput) ToSystemVirtualwanlinkServiceDstOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceDstOutput {
	return o
}

// Address or address group name.
func (o SystemVirtualwanlinkServiceDstOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceDst) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceDstArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceDst)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceDstArrayOutput) ToSystemVirtualwanlinkServiceDstArrayOutput() SystemVirtualwanlinkServiceDstArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceDstArrayOutput) ToSystemVirtualwanlinkServiceDstArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceDstArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceDstArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceDst {
		return vs[0].([]SystemVirtualwanlinkServiceDst)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceDstOutput)
}

type SystemVirtualwanlinkServiceGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceGroupInput is an input type that accepts SystemVirtualwanlinkServiceGroupArgs and SystemVirtualwanlinkServiceGroupOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceGroupInput` via:
//
//	SystemVirtualwanlinkServiceGroupArgs{...}
type SystemVirtualwanlinkServiceGroupInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceGroupOutput() SystemVirtualwanlinkServiceGroupOutput
	ToSystemVirtualwanlinkServiceGroupOutputWithContext(context.Context) SystemVirtualwanlinkServiceGroupOutput
}

type SystemVirtualwanlinkServiceGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceGroup)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceGroupArgs) ToSystemVirtualwanlinkServiceGroupOutput() SystemVirtualwanlinkServiceGroupOutput {
	return i.ToSystemVirtualwanlinkServiceGroupOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceGroupArgs) ToSystemVirtualwanlinkServiceGroupOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceGroupOutput)
}

// SystemVirtualwanlinkServiceGroupArrayInput is an input type that accepts SystemVirtualwanlinkServiceGroupArray and SystemVirtualwanlinkServiceGroupArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceGroupArrayInput` via:
//
//	SystemVirtualwanlinkServiceGroupArray{ SystemVirtualwanlinkServiceGroupArgs{...} }
type SystemVirtualwanlinkServiceGroupArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceGroupArrayOutput() SystemVirtualwanlinkServiceGroupArrayOutput
	ToSystemVirtualwanlinkServiceGroupArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceGroupArrayOutput
}

type SystemVirtualwanlinkServiceGroupArray []SystemVirtualwanlinkServiceGroupInput

func (SystemVirtualwanlinkServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceGroup)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceGroupArray) ToSystemVirtualwanlinkServiceGroupArrayOutput() SystemVirtualwanlinkServiceGroupArrayOutput {
	return i.ToSystemVirtualwanlinkServiceGroupArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceGroupArray) ToSystemVirtualwanlinkServiceGroupArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceGroupArrayOutput)
}

type SystemVirtualwanlinkServiceGroupOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceGroup)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceGroupOutput) ToSystemVirtualwanlinkServiceGroupOutput() SystemVirtualwanlinkServiceGroupOutput {
	return o
}

func (o SystemVirtualwanlinkServiceGroupOutput) ToSystemVirtualwanlinkServiceGroupOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceGroupOutput {
	return o
}

// Group name.
func (o SystemVirtualwanlinkServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceGroup)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceGroupArrayOutput) ToSystemVirtualwanlinkServiceGroupArrayOutput() SystemVirtualwanlinkServiceGroupArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceGroupArrayOutput) ToSystemVirtualwanlinkServiceGroupArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceGroupArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceGroupArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceGroup {
		return vs[0].([]SystemVirtualwanlinkServiceGroup)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceGroupOutput)
}

type SystemVirtualwanlinkServiceInputDevice struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceInputDeviceInput is an input type that accepts SystemVirtualwanlinkServiceInputDeviceArgs and SystemVirtualwanlinkServiceInputDeviceOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInputDeviceInput` via:
//
//	SystemVirtualwanlinkServiceInputDeviceArgs{...}
type SystemVirtualwanlinkServiceInputDeviceInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInputDeviceOutput() SystemVirtualwanlinkServiceInputDeviceOutput
	ToSystemVirtualwanlinkServiceInputDeviceOutputWithContext(context.Context) SystemVirtualwanlinkServiceInputDeviceOutput
}

type SystemVirtualwanlinkServiceInputDeviceArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInputDeviceArgs) ToSystemVirtualwanlinkServiceInputDeviceOutput() SystemVirtualwanlinkServiceInputDeviceOutput {
	return i.ToSystemVirtualwanlinkServiceInputDeviceOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInputDeviceArgs) ToSystemVirtualwanlinkServiceInputDeviceOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInputDeviceOutput)
}

// SystemVirtualwanlinkServiceInputDeviceArrayInput is an input type that accepts SystemVirtualwanlinkServiceInputDeviceArray and SystemVirtualwanlinkServiceInputDeviceArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInputDeviceArrayInput` via:
//
//	SystemVirtualwanlinkServiceInputDeviceArray{ SystemVirtualwanlinkServiceInputDeviceArgs{...} }
type SystemVirtualwanlinkServiceInputDeviceArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInputDeviceArrayOutput() SystemVirtualwanlinkServiceInputDeviceArrayOutput
	ToSystemVirtualwanlinkServiceInputDeviceArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceInputDeviceArrayOutput
}

type SystemVirtualwanlinkServiceInputDeviceArray []SystemVirtualwanlinkServiceInputDeviceInput

func (SystemVirtualwanlinkServiceInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInputDeviceArray) ToSystemVirtualwanlinkServiceInputDeviceArrayOutput() SystemVirtualwanlinkServiceInputDeviceArrayOutput {
	return i.ToSystemVirtualwanlinkServiceInputDeviceArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInputDeviceArray) ToSystemVirtualwanlinkServiceInputDeviceArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInputDeviceArrayOutput)
}

type SystemVirtualwanlinkServiceInputDeviceOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInputDeviceOutput) ToSystemVirtualwanlinkServiceInputDeviceOutput() SystemVirtualwanlinkServiceInputDeviceOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInputDeviceOutput) ToSystemVirtualwanlinkServiceInputDeviceOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInputDeviceOutput {
	return o
}

// Interface name.
func (o SystemVirtualwanlinkServiceInputDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceInputDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInputDevice)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInputDeviceArrayOutput) ToSystemVirtualwanlinkServiceInputDeviceArrayOutput() SystemVirtualwanlinkServiceInputDeviceArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInputDeviceArrayOutput) ToSystemVirtualwanlinkServiceInputDeviceArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInputDeviceArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInputDeviceArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceInputDevice {
		return vs[0].([]SystemVirtualwanlinkServiceInputDevice)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceInputDeviceOutput)
}

type SystemVirtualwanlinkServiceInternetServiceAppCtrl struct {
	// Application control based Internet Service ID.
	Id *int `pulumi:"id"`
}

// SystemVirtualwanlinkServiceInternetServiceAppCtrlInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceAppCtrlArgs and SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceAppCtrlInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceAppCtrlArgs{...}
type SystemVirtualwanlinkServiceInternetServiceAppCtrlInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceAppCtrlOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput
	ToSystemVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput
}

type SystemVirtualwanlinkServiceInternetServiceAppCtrlArgs struct {
	// Application control based Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemVirtualwanlinkServiceInternetServiceAppCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceAppCtrlArgs) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceAppCtrlArgs) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput)
}

// SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceAppCtrlArray and SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceAppCtrlArray{ SystemVirtualwanlinkServiceInternetServiceAppCtrlArgs{...} }
type SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput
	ToSystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput
}

type SystemVirtualwanlinkServiceInternetServiceAppCtrlArray []SystemVirtualwanlinkServiceInternetServiceAppCtrlInput

func (SystemVirtualwanlinkServiceInternetServiceAppCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceAppCtrlArray) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceAppCtrlArray) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput)
}

type SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return o
}

// Application control based Internet Service ID.
func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceInternetServiceAppCtrl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceInternetServiceAppCtrl {
		return vs[0].([]SystemVirtualwanlinkServiceInternetServiceAppCtrl)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput)
}

type SystemVirtualwanlinkServiceInternetServiceAppCtrlGroup struct {
	// Application control based Internet Service group name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs and SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs{...}
type SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput
	ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput
}

type SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs struct {
	// Application control based Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput)
}

// SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArray and SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArray{ SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs{...} }
type SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput
	ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput
}

type SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArray []SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupInput

func (SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArray) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArray) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput)
}

type SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return o
}

// Application control based Internet Service group name.
func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceInternetServiceAppCtrlGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceInternetServiceAppCtrlGroup {
		return vs[0].([]SystemVirtualwanlinkServiceInternetServiceAppCtrlGroup)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCtrl struct {
	// Control-based Internet Service ID.
	Id *int `pulumi:"id"`
}

// SystemVirtualwanlinkServiceInternetServiceCtrlInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceCtrlArgs and SystemVirtualwanlinkServiceInternetServiceCtrlOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceCtrlInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceCtrlArgs{...}
type SystemVirtualwanlinkServiceInternetServiceCtrlInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceCtrlOutput() SystemVirtualwanlinkServiceInternetServiceCtrlOutput
	ToSystemVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlOutput
}

type SystemVirtualwanlinkServiceInternetServiceCtrlArgs struct {
	// Control-based Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemVirtualwanlinkServiceInternetServiceCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceCtrlArgs) ToSystemVirtualwanlinkServiceInternetServiceCtrlOutput() SystemVirtualwanlinkServiceInternetServiceCtrlOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceCtrlArgs) ToSystemVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceCtrlOutput)
}

// SystemVirtualwanlinkServiceInternetServiceCtrlArrayInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceCtrlArray and SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceCtrlArrayInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceCtrlArray{ SystemVirtualwanlinkServiceInternetServiceCtrlArgs{...} }
type SystemVirtualwanlinkServiceInternetServiceCtrlArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput() SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput
	ToSystemVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput
}

type SystemVirtualwanlinkServiceInternetServiceCtrlArray []SystemVirtualwanlinkServiceInternetServiceCtrlInput

func (SystemVirtualwanlinkServiceInternetServiceCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceCtrlArray) ToSystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput() SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceCtrlArray) ToSystemVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCtrlOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceCtrlOutput) ToSystemVirtualwanlinkServiceInternetServiceCtrlOutput() SystemVirtualwanlinkServiceInternetServiceCtrlOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCtrlOutput) ToSystemVirtualwanlinkServiceInternetServiceCtrlOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlOutput {
	return o
}

// Control-based Internet Service ID.
func (o SystemVirtualwanlinkServiceInternetServiceCtrlOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceInternetServiceCtrl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput() SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceCtrlArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceInternetServiceCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceInternetServiceCtrl {
		return vs[0].([]SystemVirtualwanlinkServiceInternetServiceCtrl)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceInternetServiceCtrlOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCtrlGroup struct {
	// Control-based Internet Service group name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceInternetServiceCtrlGroupInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceCtrlGroupArgs and SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceCtrlGroupInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceCtrlGroupArgs{...}
type SystemVirtualwanlinkServiceInternetServiceCtrlGroupInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput() SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput
	ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput
}

type SystemVirtualwanlinkServiceInternetServiceCtrlGroupArgs struct {
	// Control-based Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceInternetServiceCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceCtrlGroupArgs) ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput() SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceCtrlGroupArgs) ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput)
}

// SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceCtrlGroupArray and SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceCtrlGroupArray{ SystemVirtualwanlinkServiceInternetServiceCtrlGroupArgs{...} }
type SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput
	ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput
}

type SystemVirtualwanlinkServiceInternetServiceCtrlGroupArray []SystemVirtualwanlinkServiceInternetServiceCtrlGroupInput

func (SystemVirtualwanlinkServiceInternetServiceCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceCtrlGroupArray) ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceCtrlGroupArray) ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput) ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput() SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput) ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return o
}

// Control-based Internet Service group name.
func (o SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceInternetServiceCtrlGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceInternetServiceCtrlGroup {
		return vs[0].([]SystemVirtualwanlinkServiceInternetServiceCtrlGroup)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCustom struct {
	// Custom Internet service name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceInternetServiceCustomInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceCustomArgs and SystemVirtualwanlinkServiceInternetServiceCustomOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceCustomInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceCustomArgs{...}
type SystemVirtualwanlinkServiceInternetServiceCustomInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceCustomOutput() SystemVirtualwanlinkServiceInternetServiceCustomOutput
	ToSystemVirtualwanlinkServiceInternetServiceCustomOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceCustomOutput
}

type SystemVirtualwanlinkServiceInternetServiceCustomArgs struct {
	// Custom Internet service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceCustomArgs) ToSystemVirtualwanlinkServiceInternetServiceCustomOutput() SystemVirtualwanlinkServiceInternetServiceCustomOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceCustomOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceCustomArgs) ToSystemVirtualwanlinkServiceInternetServiceCustomOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceCustomOutput)
}

// SystemVirtualwanlinkServiceInternetServiceCustomArrayInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceCustomArray and SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceCustomArrayInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceCustomArray{ SystemVirtualwanlinkServiceInternetServiceCustomArgs{...} }
type SystemVirtualwanlinkServiceInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceCustomArrayOutput() SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput
	ToSystemVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput
}

type SystemVirtualwanlinkServiceInternetServiceCustomArray []SystemVirtualwanlinkServiceInternetServiceCustomInput

func (SystemVirtualwanlinkServiceInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceCustomArray) ToSystemVirtualwanlinkServiceInternetServiceCustomArrayOutput() SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceCustomArray) ToSystemVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceCustomOutput) ToSystemVirtualwanlinkServiceInternetServiceCustomOutput() SystemVirtualwanlinkServiceInternetServiceCustomOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCustomOutput) ToSystemVirtualwanlinkServiceInternetServiceCustomOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCustomOutput {
	return o
}

// Custom Internet service name.
func (o SystemVirtualwanlinkServiceInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceCustom)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceCustomArrayOutput() SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceInternetServiceCustom {
		return vs[0].([]SystemVirtualwanlinkServiceInternetServiceCustom)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceInternetServiceCustomOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceInternetServiceCustomGroupInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceCustomGroupArgs and SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceCustomGroupInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceCustomGroupArgs{...}
type SystemVirtualwanlinkServiceInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceCustomGroupOutput() SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput
	ToSystemVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput
}

type SystemVirtualwanlinkServiceInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceCustomGroupArgs) ToSystemVirtualwanlinkServiceInternetServiceCustomGroupOutput() SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceCustomGroupArgs) ToSystemVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput)
}

// SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceCustomGroupArray and SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceCustomGroupArray{ SystemVirtualwanlinkServiceInternetServiceCustomGroupArgs{...} }
type SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput
	ToSystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput
}

type SystemVirtualwanlinkServiceInternetServiceCustomGroupArray []SystemVirtualwanlinkServiceInternetServiceCustomGroupInput

func (SystemVirtualwanlinkServiceInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceCustomGroupArray) ToSystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceCustomGroupArray) ToSystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput) ToSystemVirtualwanlinkServiceInternetServiceCustomGroupOutput() SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput) ToSystemVirtualwanlinkServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceInternetServiceCustomGroup {
		return vs[0].([]SystemVirtualwanlinkServiceInternetServiceCustomGroup)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput)
}

type SystemVirtualwanlinkServiceInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceInternetServiceGroupInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceGroupArgs and SystemVirtualwanlinkServiceInternetServiceGroupOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceGroupInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceGroupArgs{...}
type SystemVirtualwanlinkServiceInternetServiceGroupInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceGroupOutput() SystemVirtualwanlinkServiceInternetServiceGroupOutput
	ToSystemVirtualwanlinkServiceInternetServiceGroupOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceGroupOutput
}

type SystemVirtualwanlinkServiceInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceGroupArgs) ToSystemVirtualwanlinkServiceInternetServiceGroupOutput() SystemVirtualwanlinkServiceInternetServiceGroupOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceGroupOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceGroupArgs) ToSystemVirtualwanlinkServiceInternetServiceGroupOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceGroupOutput)
}

// SystemVirtualwanlinkServiceInternetServiceGroupArrayInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceGroupArray and SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceGroupArrayInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceGroupArray{ SystemVirtualwanlinkServiceInternetServiceGroupArgs{...} }
type SystemVirtualwanlinkServiceInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput
	ToSystemVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput
}

type SystemVirtualwanlinkServiceInternetServiceGroupArray []SystemVirtualwanlinkServiceInternetServiceGroupInput

func (SystemVirtualwanlinkServiceInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceGroupArray) ToSystemVirtualwanlinkServiceInternetServiceGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceGroupArray) ToSystemVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput)
}

type SystemVirtualwanlinkServiceInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceGroupOutput) ToSystemVirtualwanlinkServiceInternetServiceGroupOutput() SystemVirtualwanlinkServiceInternetServiceGroupOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceGroupOutput) ToSystemVirtualwanlinkServiceInternetServiceGroupOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o SystemVirtualwanlinkServiceInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceGroup)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceGroupArrayOutput() SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceInternetServiceGroup {
		return vs[0].([]SystemVirtualwanlinkServiceInternetServiceGroup)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceInternetServiceGroupOutput)
}

type SystemVirtualwanlinkServiceInternetServiceId struct {
	// Internet service ID.
	Id *int `pulumi:"id"`
}

// SystemVirtualwanlinkServiceInternetServiceIdInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceIdArgs and SystemVirtualwanlinkServiceInternetServiceIdOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceIdInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceIdArgs{...}
type SystemVirtualwanlinkServiceInternetServiceIdInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceIdOutput() SystemVirtualwanlinkServiceInternetServiceIdOutput
	ToSystemVirtualwanlinkServiceInternetServiceIdOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceIdOutput
}

type SystemVirtualwanlinkServiceInternetServiceIdArgs struct {
	// Internet service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemVirtualwanlinkServiceInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceIdArgs) ToSystemVirtualwanlinkServiceInternetServiceIdOutput() SystemVirtualwanlinkServiceInternetServiceIdOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceIdOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceIdArgs) ToSystemVirtualwanlinkServiceInternetServiceIdOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceIdOutput)
}

// SystemVirtualwanlinkServiceInternetServiceIdArrayInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceIdArray and SystemVirtualwanlinkServiceInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceIdArrayInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceIdArray{ SystemVirtualwanlinkServiceInternetServiceIdArgs{...} }
type SystemVirtualwanlinkServiceInternetServiceIdArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceIdArrayOutput() SystemVirtualwanlinkServiceInternetServiceIdArrayOutput
	ToSystemVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceIdArrayOutput
}

type SystemVirtualwanlinkServiceInternetServiceIdArray []SystemVirtualwanlinkServiceInternetServiceIdInput

func (SystemVirtualwanlinkServiceInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceIdArray) ToSystemVirtualwanlinkServiceInternetServiceIdArrayOutput() SystemVirtualwanlinkServiceInternetServiceIdArrayOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceIdArray) ToSystemVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceIdArrayOutput)
}

type SystemVirtualwanlinkServiceInternetServiceIdOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceIdOutput) ToSystemVirtualwanlinkServiceInternetServiceIdOutput() SystemVirtualwanlinkServiceInternetServiceIdOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceIdOutput) ToSystemVirtualwanlinkServiceInternetServiceIdOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceIdOutput {
	return o
}

// Internet service ID.
func (o SystemVirtualwanlinkServiceInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemVirtualwanlinkServiceInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceId)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceIdArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceIdArrayOutput() SystemVirtualwanlinkServiceInternetServiceIdArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceIdArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceIdArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceIdArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceIdArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceInternetServiceId {
		return vs[0].([]SystemVirtualwanlinkServiceInternetServiceId)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceInternetServiceIdOutput)
}

type SystemVirtualwanlinkServiceInternetServiceName struct {
	// Internet service name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceInternetServiceNameInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceNameArgs and SystemVirtualwanlinkServiceInternetServiceNameOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceNameInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceNameArgs{...}
type SystemVirtualwanlinkServiceInternetServiceNameInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceNameOutput() SystemVirtualwanlinkServiceInternetServiceNameOutput
	ToSystemVirtualwanlinkServiceInternetServiceNameOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceNameOutput
}

type SystemVirtualwanlinkServiceInternetServiceNameArgs struct {
	// Internet service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceNameArgs) ToSystemVirtualwanlinkServiceInternetServiceNameOutput() SystemVirtualwanlinkServiceInternetServiceNameOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceNameOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceNameArgs) ToSystemVirtualwanlinkServiceInternetServiceNameOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceNameOutput)
}

// SystemVirtualwanlinkServiceInternetServiceNameArrayInput is an input type that accepts SystemVirtualwanlinkServiceInternetServiceNameArray and SystemVirtualwanlinkServiceInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceInternetServiceNameArrayInput` via:
//
//	SystemVirtualwanlinkServiceInternetServiceNameArray{ SystemVirtualwanlinkServiceInternetServiceNameArgs{...} }
type SystemVirtualwanlinkServiceInternetServiceNameArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceInternetServiceNameArrayOutput() SystemVirtualwanlinkServiceInternetServiceNameArrayOutput
	ToSystemVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceInternetServiceNameArrayOutput
}

type SystemVirtualwanlinkServiceInternetServiceNameArray []SystemVirtualwanlinkServiceInternetServiceNameInput

func (SystemVirtualwanlinkServiceInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceInternetServiceNameArray) ToSystemVirtualwanlinkServiceInternetServiceNameArrayOutput() SystemVirtualwanlinkServiceInternetServiceNameArrayOutput {
	return i.ToSystemVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceInternetServiceNameArray) ToSystemVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceInternetServiceNameArrayOutput)
}

type SystemVirtualwanlinkServiceInternetServiceNameOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceNameOutput) ToSystemVirtualwanlinkServiceInternetServiceNameOutput() SystemVirtualwanlinkServiceInternetServiceNameOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceNameOutput) ToSystemVirtualwanlinkServiceInternetServiceNameOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceNameOutput {
	return o
}

// Internet service name.
func (o SystemVirtualwanlinkServiceInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceInternetServiceName)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceInternetServiceNameArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceNameArrayOutput() SystemVirtualwanlinkServiceInternetServiceNameArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceNameArrayOutput) ToSystemVirtualwanlinkServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceInternetServiceNameArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceInternetServiceNameArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceInternetServiceName {
		return vs[0].([]SystemVirtualwanlinkServiceInternetServiceName)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceInternetServiceNameOutput)
}

type SystemVirtualwanlinkServicePriorityMember struct {
	// Member sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// SystemVirtualwanlinkServicePriorityMemberInput is an input type that accepts SystemVirtualwanlinkServicePriorityMemberArgs and SystemVirtualwanlinkServicePriorityMemberOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServicePriorityMemberInput` via:
//
//	SystemVirtualwanlinkServicePriorityMemberArgs{...}
type SystemVirtualwanlinkServicePriorityMemberInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServicePriorityMemberOutput() SystemVirtualwanlinkServicePriorityMemberOutput
	ToSystemVirtualwanlinkServicePriorityMemberOutputWithContext(context.Context) SystemVirtualwanlinkServicePriorityMemberOutput
}

type SystemVirtualwanlinkServicePriorityMemberArgs struct {
	// Member sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SystemVirtualwanlinkServicePriorityMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (i SystemVirtualwanlinkServicePriorityMemberArgs) ToSystemVirtualwanlinkServicePriorityMemberOutput() SystemVirtualwanlinkServicePriorityMemberOutput {
	return i.ToSystemVirtualwanlinkServicePriorityMemberOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServicePriorityMemberArgs) ToSystemVirtualwanlinkServicePriorityMemberOutputWithContext(ctx context.Context) SystemVirtualwanlinkServicePriorityMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServicePriorityMemberOutput)
}

// SystemVirtualwanlinkServicePriorityMemberArrayInput is an input type that accepts SystemVirtualwanlinkServicePriorityMemberArray and SystemVirtualwanlinkServicePriorityMemberArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServicePriorityMemberArrayInput` via:
//
//	SystemVirtualwanlinkServicePriorityMemberArray{ SystemVirtualwanlinkServicePriorityMemberArgs{...} }
type SystemVirtualwanlinkServicePriorityMemberArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServicePriorityMemberArrayOutput() SystemVirtualwanlinkServicePriorityMemberArrayOutput
	ToSystemVirtualwanlinkServicePriorityMemberArrayOutputWithContext(context.Context) SystemVirtualwanlinkServicePriorityMemberArrayOutput
}

type SystemVirtualwanlinkServicePriorityMemberArray []SystemVirtualwanlinkServicePriorityMemberInput

func (SystemVirtualwanlinkServicePriorityMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (i SystemVirtualwanlinkServicePriorityMemberArray) ToSystemVirtualwanlinkServicePriorityMemberArrayOutput() SystemVirtualwanlinkServicePriorityMemberArrayOutput {
	return i.ToSystemVirtualwanlinkServicePriorityMemberArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServicePriorityMemberArray) ToSystemVirtualwanlinkServicePriorityMemberArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServicePriorityMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServicePriorityMemberArrayOutput)
}

type SystemVirtualwanlinkServicePriorityMemberOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServicePriorityMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (o SystemVirtualwanlinkServicePriorityMemberOutput) ToSystemVirtualwanlinkServicePriorityMemberOutput() SystemVirtualwanlinkServicePriorityMemberOutput {
	return o
}

func (o SystemVirtualwanlinkServicePriorityMemberOutput) ToSystemVirtualwanlinkServicePriorityMemberOutputWithContext(ctx context.Context) SystemVirtualwanlinkServicePriorityMemberOutput {
	return o
}

// Member sequence number.
func (o SystemVirtualwanlinkServicePriorityMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServicePriorityMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SystemVirtualwanlinkServicePriorityMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServicePriorityMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServicePriorityMember)(nil)).Elem()
}

func (o SystemVirtualwanlinkServicePriorityMemberArrayOutput) ToSystemVirtualwanlinkServicePriorityMemberArrayOutput() SystemVirtualwanlinkServicePriorityMemberArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServicePriorityMemberArrayOutput) ToSystemVirtualwanlinkServicePriorityMemberArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServicePriorityMemberArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServicePriorityMemberArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServicePriorityMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServicePriorityMember {
		return vs[0].([]SystemVirtualwanlinkServicePriorityMember)[vs[1].(int)]
	}).(SystemVirtualwanlinkServicePriorityMemberOutput)
}

type SystemVirtualwanlinkServiceSla struct {
	// Virtual WAN Link health-check.
	HealthCheck *string `pulumi:"healthCheck"`
	// SLA ID.
	Id *int `pulumi:"id"`
}

// SystemVirtualwanlinkServiceSlaInput is an input type that accepts SystemVirtualwanlinkServiceSlaArgs and SystemVirtualwanlinkServiceSlaOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceSlaInput` via:
//
//	SystemVirtualwanlinkServiceSlaArgs{...}
type SystemVirtualwanlinkServiceSlaInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceSlaOutput() SystemVirtualwanlinkServiceSlaOutput
	ToSystemVirtualwanlinkServiceSlaOutputWithContext(context.Context) SystemVirtualwanlinkServiceSlaOutput
}

type SystemVirtualwanlinkServiceSlaArgs struct {
	// Virtual WAN Link health-check.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// SLA ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemVirtualwanlinkServiceSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceSla)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceSlaArgs) ToSystemVirtualwanlinkServiceSlaOutput() SystemVirtualwanlinkServiceSlaOutput {
	return i.ToSystemVirtualwanlinkServiceSlaOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceSlaArgs) ToSystemVirtualwanlinkServiceSlaOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceSlaOutput)
}

// SystemVirtualwanlinkServiceSlaArrayInput is an input type that accepts SystemVirtualwanlinkServiceSlaArray and SystemVirtualwanlinkServiceSlaArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceSlaArrayInput` via:
//
//	SystemVirtualwanlinkServiceSlaArray{ SystemVirtualwanlinkServiceSlaArgs{...} }
type SystemVirtualwanlinkServiceSlaArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceSlaArrayOutput() SystemVirtualwanlinkServiceSlaArrayOutput
	ToSystemVirtualwanlinkServiceSlaArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceSlaArrayOutput
}

type SystemVirtualwanlinkServiceSlaArray []SystemVirtualwanlinkServiceSlaInput

func (SystemVirtualwanlinkServiceSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceSla)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceSlaArray) ToSystemVirtualwanlinkServiceSlaArrayOutput() SystemVirtualwanlinkServiceSlaArrayOutput {
	return i.ToSystemVirtualwanlinkServiceSlaArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceSlaArray) ToSystemVirtualwanlinkServiceSlaArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceSlaArrayOutput)
}

type SystemVirtualwanlinkServiceSlaOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceSla)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceSlaOutput) ToSystemVirtualwanlinkServiceSlaOutput() SystemVirtualwanlinkServiceSlaOutput {
	return o
}

func (o SystemVirtualwanlinkServiceSlaOutput) ToSystemVirtualwanlinkServiceSlaOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSlaOutput {
	return o
}

// Virtual WAN Link health-check.
func (o SystemVirtualwanlinkServiceSlaOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceSla) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// SLA ID.
func (o SystemVirtualwanlinkServiceSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemVirtualwanlinkServiceSlaArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceSla)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceSlaArrayOutput) ToSystemVirtualwanlinkServiceSlaArrayOutput() SystemVirtualwanlinkServiceSlaArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceSlaArrayOutput) ToSystemVirtualwanlinkServiceSlaArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSlaArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceSlaArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceSla {
		return vs[0].([]SystemVirtualwanlinkServiceSla)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceSlaOutput)
}

type SystemVirtualwanlinkServiceSrc6 struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceSrc6Input is an input type that accepts SystemVirtualwanlinkServiceSrc6Args and SystemVirtualwanlinkServiceSrc6Output values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceSrc6Input` via:
//
//	SystemVirtualwanlinkServiceSrc6Args{...}
type SystemVirtualwanlinkServiceSrc6Input interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceSrc6Output() SystemVirtualwanlinkServiceSrc6Output
	ToSystemVirtualwanlinkServiceSrc6OutputWithContext(context.Context) SystemVirtualwanlinkServiceSrc6Output
}

type SystemVirtualwanlinkServiceSrc6Args struct {
	// Physical interface name.
	//
	// The `dst6` block supports:
	//
	// The `src6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceSrc6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceSrc6Args) ToSystemVirtualwanlinkServiceSrc6Output() SystemVirtualwanlinkServiceSrc6Output {
	return i.ToSystemVirtualwanlinkServiceSrc6OutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceSrc6Args) ToSystemVirtualwanlinkServiceSrc6OutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSrc6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceSrc6Output)
}

// SystemVirtualwanlinkServiceSrc6ArrayInput is an input type that accepts SystemVirtualwanlinkServiceSrc6Array and SystemVirtualwanlinkServiceSrc6ArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceSrc6ArrayInput` via:
//
//	SystemVirtualwanlinkServiceSrc6Array{ SystemVirtualwanlinkServiceSrc6Args{...} }
type SystemVirtualwanlinkServiceSrc6ArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceSrc6ArrayOutput() SystemVirtualwanlinkServiceSrc6ArrayOutput
	ToSystemVirtualwanlinkServiceSrc6ArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceSrc6ArrayOutput
}

type SystemVirtualwanlinkServiceSrc6Array []SystemVirtualwanlinkServiceSrc6Input

func (SystemVirtualwanlinkServiceSrc6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceSrc6Array) ToSystemVirtualwanlinkServiceSrc6ArrayOutput() SystemVirtualwanlinkServiceSrc6ArrayOutput {
	return i.ToSystemVirtualwanlinkServiceSrc6ArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceSrc6Array) ToSystemVirtualwanlinkServiceSrc6ArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSrc6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceSrc6ArrayOutput)
}

type SystemVirtualwanlinkServiceSrc6Output struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceSrc6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceSrc6Output) ToSystemVirtualwanlinkServiceSrc6Output() SystemVirtualwanlinkServiceSrc6Output {
	return o
}

func (o SystemVirtualwanlinkServiceSrc6Output) ToSystemVirtualwanlinkServiceSrc6OutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSrc6Output {
	return o
}

// Physical interface name.
//
// The `dst6` block supports:
//
// The `src6` block supports:
func (o SystemVirtualwanlinkServiceSrc6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceSrc6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceSrc6ArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceSrc6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceSrc6)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceSrc6ArrayOutput) ToSystemVirtualwanlinkServiceSrc6ArrayOutput() SystemVirtualwanlinkServiceSrc6ArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceSrc6ArrayOutput) ToSystemVirtualwanlinkServiceSrc6ArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSrc6ArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceSrc6ArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceSrc6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceSrc6 {
		return vs[0].([]SystemVirtualwanlinkServiceSrc6)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceSrc6Output)
}

type SystemVirtualwanlinkServiceSrc struct {
	// Address6 or address6 group name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceSrcInput is an input type that accepts SystemVirtualwanlinkServiceSrcArgs and SystemVirtualwanlinkServiceSrcOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceSrcInput` via:
//
//	SystemVirtualwanlinkServiceSrcArgs{...}
type SystemVirtualwanlinkServiceSrcInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceSrcOutput() SystemVirtualwanlinkServiceSrcOutput
	ToSystemVirtualwanlinkServiceSrcOutputWithContext(context.Context) SystemVirtualwanlinkServiceSrcOutput
}

type SystemVirtualwanlinkServiceSrcArgs struct {
	// Address6 or address6 group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceSrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceSrc)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceSrcArgs) ToSystemVirtualwanlinkServiceSrcOutput() SystemVirtualwanlinkServiceSrcOutput {
	return i.ToSystemVirtualwanlinkServiceSrcOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceSrcArgs) ToSystemVirtualwanlinkServiceSrcOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceSrcOutput)
}

// SystemVirtualwanlinkServiceSrcArrayInput is an input type that accepts SystemVirtualwanlinkServiceSrcArray and SystemVirtualwanlinkServiceSrcArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceSrcArrayInput` via:
//
//	SystemVirtualwanlinkServiceSrcArray{ SystemVirtualwanlinkServiceSrcArgs{...} }
type SystemVirtualwanlinkServiceSrcArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceSrcArrayOutput() SystemVirtualwanlinkServiceSrcArrayOutput
	ToSystemVirtualwanlinkServiceSrcArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceSrcArrayOutput
}

type SystemVirtualwanlinkServiceSrcArray []SystemVirtualwanlinkServiceSrcInput

func (SystemVirtualwanlinkServiceSrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceSrc)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceSrcArray) ToSystemVirtualwanlinkServiceSrcArrayOutput() SystemVirtualwanlinkServiceSrcArrayOutput {
	return i.ToSystemVirtualwanlinkServiceSrcArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceSrcArray) ToSystemVirtualwanlinkServiceSrcArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceSrcArrayOutput)
}

type SystemVirtualwanlinkServiceSrcOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceSrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceSrc)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceSrcOutput) ToSystemVirtualwanlinkServiceSrcOutput() SystemVirtualwanlinkServiceSrcOutput {
	return o
}

func (o SystemVirtualwanlinkServiceSrcOutput) ToSystemVirtualwanlinkServiceSrcOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSrcOutput {
	return o
}

// Address6 or address6 group name.
func (o SystemVirtualwanlinkServiceSrcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceSrc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceSrcArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceSrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceSrc)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceSrcArrayOutput) ToSystemVirtualwanlinkServiceSrcArrayOutput() SystemVirtualwanlinkServiceSrcArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceSrcArrayOutput) ToSystemVirtualwanlinkServiceSrcArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceSrcArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceSrcArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceSrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceSrc {
		return vs[0].([]SystemVirtualwanlinkServiceSrc)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceSrcOutput)
}

type SystemVirtualwanlinkServiceUser struct {
	// User name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkServiceUserInput is an input type that accepts SystemVirtualwanlinkServiceUserArgs and SystemVirtualwanlinkServiceUserOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceUserInput` via:
//
//	SystemVirtualwanlinkServiceUserArgs{...}
type SystemVirtualwanlinkServiceUserInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceUserOutput() SystemVirtualwanlinkServiceUserOutput
	ToSystemVirtualwanlinkServiceUserOutputWithContext(context.Context) SystemVirtualwanlinkServiceUserOutput
}

type SystemVirtualwanlinkServiceUserArgs struct {
	// User name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkServiceUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceUser)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceUserArgs) ToSystemVirtualwanlinkServiceUserOutput() SystemVirtualwanlinkServiceUserOutput {
	return i.ToSystemVirtualwanlinkServiceUserOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceUserArgs) ToSystemVirtualwanlinkServiceUserOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceUserOutput)
}

// SystemVirtualwanlinkServiceUserArrayInput is an input type that accepts SystemVirtualwanlinkServiceUserArray and SystemVirtualwanlinkServiceUserArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkServiceUserArrayInput` via:
//
//	SystemVirtualwanlinkServiceUserArray{ SystemVirtualwanlinkServiceUserArgs{...} }
type SystemVirtualwanlinkServiceUserArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkServiceUserArrayOutput() SystemVirtualwanlinkServiceUserArrayOutput
	ToSystemVirtualwanlinkServiceUserArrayOutputWithContext(context.Context) SystemVirtualwanlinkServiceUserArrayOutput
}

type SystemVirtualwanlinkServiceUserArray []SystemVirtualwanlinkServiceUserInput

func (SystemVirtualwanlinkServiceUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceUser)(nil)).Elem()
}

func (i SystemVirtualwanlinkServiceUserArray) ToSystemVirtualwanlinkServiceUserArrayOutput() SystemVirtualwanlinkServiceUserArrayOutput {
	return i.ToSystemVirtualwanlinkServiceUserArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkServiceUserArray) ToSystemVirtualwanlinkServiceUserArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkServiceUserArrayOutput)
}

type SystemVirtualwanlinkServiceUserOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkServiceUser)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceUserOutput) ToSystemVirtualwanlinkServiceUserOutput() SystemVirtualwanlinkServiceUserOutput {
	return o
}

func (o SystemVirtualwanlinkServiceUserOutput) ToSystemVirtualwanlinkServiceUserOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceUserOutput {
	return o
}

// User name.
func (o SystemVirtualwanlinkServiceUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkServiceUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkServiceUserArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkServiceUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkServiceUser)(nil)).Elem()
}

func (o SystemVirtualwanlinkServiceUserArrayOutput) ToSystemVirtualwanlinkServiceUserArrayOutput() SystemVirtualwanlinkServiceUserArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceUserArrayOutput) ToSystemVirtualwanlinkServiceUserArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkServiceUserArrayOutput {
	return o
}

func (o SystemVirtualwanlinkServiceUserArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkServiceUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkServiceUser {
		return vs[0].([]SystemVirtualwanlinkServiceUser)[vs[1].(int)]
	}).(SystemVirtualwanlinkServiceUserOutput)
}

type SystemVirtualwanlinkZone struct {
	// Zone name.
	Name *string `pulumi:"name"`
}

// SystemVirtualwanlinkZoneInput is an input type that accepts SystemVirtualwanlinkZoneArgs and SystemVirtualwanlinkZoneOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkZoneInput` via:
//
//	SystemVirtualwanlinkZoneArgs{...}
type SystemVirtualwanlinkZoneInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkZoneOutput() SystemVirtualwanlinkZoneOutput
	ToSystemVirtualwanlinkZoneOutputWithContext(context.Context) SystemVirtualwanlinkZoneOutput
}

type SystemVirtualwanlinkZoneArgs struct {
	// Zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualwanlinkZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkZone)(nil)).Elem()
}

func (i SystemVirtualwanlinkZoneArgs) ToSystemVirtualwanlinkZoneOutput() SystemVirtualwanlinkZoneOutput {
	return i.ToSystemVirtualwanlinkZoneOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkZoneArgs) ToSystemVirtualwanlinkZoneOutputWithContext(ctx context.Context) SystemVirtualwanlinkZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkZoneOutput)
}

// SystemVirtualwanlinkZoneArrayInput is an input type that accepts SystemVirtualwanlinkZoneArray and SystemVirtualwanlinkZoneArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkZoneArrayInput` via:
//
//	SystemVirtualwanlinkZoneArray{ SystemVirtualwanlinkZoneArgs{...} }
type SystemVirtualwanlinkZoneArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkZoneArrayOutput() SystemVirtualwanlinkZoneArrayOutput
	ToSystemVirtualwanlinkZoneArrayOutputWithContext(context.Context) SystemVirtualwanlinkZoneArrayOutput
}

type SystemVirtualwanlinkZoneArray []SystemVirtualwanlinkZoneInput

func (SystemVirtualwanlinkZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkZone)(nil)).Elem()
}

func (i SystemVirtualwanlinkZoneArray) ToSystemVirtualwanlinkZoneArrayOutput() SystemVirtualwanlinkZoneArrayOutput {
	return i.ToSystemVirtualwanlinkZoneArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkZoneArray) ToSystemVirtualwanlinkZoneArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkZoneArrayOutput)
}

type SystemVirtualwanlinkZoneOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwanlinkZone)(nil)).Elem()
}

func (o SystemVirtualwanlinkZoneOutput) ToSystemVirtualwanlinkZoneOutput() SystemVirtualwanlinkZoneOutput {
	return o
}

func (o SystemVirtualwanlinkZoneOutput) ToSystemVirtualwanlinkZoneOutputWithContext(ctx context.Context) SystemVirtualwanlinkZoneOutput {
	return o
}

// Zone name.
func (o SystemVirtualwanlinkZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwanlinkZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualwanlinkZoneArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwanlinkZone)(nil)).Elem()
}

func (o SystemVirtualwanlinkZoneArrayOutput) ToSystemVirtualwanlinkZoneArrayOutput() SystemVirtualwanlinkZoneArrayOutput {
	return o
}

func (o SystemVirtualwanlinkZoneArrayOutput) ToSystemVirtualwanlinkZoneArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkZoneArrayOutput {
	return o
}

func (o SystemVirtualwanlinkZoneArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwanlinkZone {
		return vs[0].([]SystemVirtualwanlinkZone)[vs[1].(int)]
	}).(SystemVirtualwanlinkZoneOutput)
}

type SystemVirtualwirepairMember struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemVirtualwirepairMemberInput is an input type that accepts SystemVirtualwirepairMemberArgs and SystemVirtualwirepairMemberOutput values.
// You can construct a concrete instance of `SystemVirtualwirepairMemberInput` via:
//
//	SystemVirtualwirepairMemberArgs{...}
type SystemVirtualwirepairMemberInput interface {
	pulumi.Input

	ToSystemVirtualwirepairMemberOutput() SystemVirtualwirepairMemberOutput
	ToSystemVirtualwirepairMemberOutputWithContext(context.Context) SystemVirtualwirepairMemberOutput
}

type SystemVirtualwirepairMemberArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemVirtualwirepairMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwirepairMember)(nil)).Elem()
}

func (i SystemVirtualwirepairMemberArgs) ToSystemVirtualwirepairMemberOutput() SystemVirtualwirepairMemberOutput {
	return i.ToSystemVirtualwirepairMemberOutputWithContext(context.Background())
}

func (i SystemVirtualwirepairMemberArgs) ToSystemVirtualwirepairMemberOutputWithContext(ctx context.Context) SystemVirtualwirepairMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwirepairMemberOutput)
}

// SystemVirtualwirepairMemberArrayInput is an input type that accepts SystemVirtualwirepairMemberArray and SystemVirtualwirepairMemberArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwirepairMemberArrayInput` via:
//
//	SystemVirtualwirepairMemberArray{ SystemVirtualwirepairMemberArgs{...} }
type SystemVirtualwirepairMemberArrayInput interface {
	pulumi.Input

	ToSystemVirtualwirepairMemberArrayOutput() SystemVirtualwirepairMemberArrayOutput
	ToSystemVirtualwirepairMemberArrayOutputWithContext(context.Context) SystemVirtualwirepairMemberArrayOutput
}

type SystemVirtualwirepairMemberArray []SystemVirtualwirepairMemberInput

func (SystemVirtualwirepairMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwirepairMember)(nil)).Elem()
}

func (i SystemVirtualwirepairMemberArray) ToSystemVirtualwirepairMemberArrayOutput() SystemVirtualwirepairMemberArrayOutput {
	return i.ToSystemVirtualwirepairMemberArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwirepairMemberArray) ToSystemVirtualwirepairMemberArrayOutputWithContext(ctx context.Context) SystemVirtualwirepairMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwirepairMemberArrayOutput)
}

type SystemVirtualwirepairMemberOutput struct{ *pulumi.OutputState }

func (SystemVirtualwirepairMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualwirepairMember)(nil)).Elem()
}

func (o SystemVirtualwirepairMemberOutput) ToSystemVirtualwirepairMemberOutput() SystemVirtualwirepairMemberOutput {
	return o
}

func (o SystemVirtualwirepairMemberOutput) ToSystemVirtualwirepairMemberOutputWithContext(ctx context.Context) SystemVirtualwirepairMemberOutput {
	return o
}

// Interface name.
func (o SystemVirtualwirepairMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualwirepairMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemVirtualwirepairMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwirepairMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualwirepairMember)(nil)).Elem()
}

func (o SystemVirtualwirepairMemberArrayOutput) ToSystemVirtualwirepairMemberArrayOutput() SystemVirtualwirepairMemberArrayOutput {
	return o
}

func (o SystemVirtualwirepairMemberArrayOutput) ToSystemVirtualwirepairMemberArrayOutputWithContext(ctx context.Context) SystemVirtualwirepairMemberArrayOutput {
	return o
}

func (o SystemVirtualwirepairMemberArrayOutput) Index(i pulumi.IntInput) SystemVirtualwirepairMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualwirepairMember {
		return vs[0].([]SystemVirtualwirepairMember)[vs[1].(int)]
	}).(SystemVirtualwirepairMemberOutput)
}

type SystemVxlanRemoteIp6 struct {
	// IPv6 address.
	Ip6 *string `pulumi:"ip6"`
}

// SystemVxlanRemoteIp6Input is an input type that accepts SystemVxlanRemoteIp6Args and SystemVxlanRemoteIp6Output values.
// You can construct a concrete instance of `SystemVxlanRemoteIp6Input` via:
//
//	SystemVxlanRemoteIp6Args{...}
type SystemVxlanRemoteIp6Input interface {
	pulumi.Input

	ToSystemVxlanRemoteIp6Output() SystemVxlanRemoteIp6Output
	ToSystemVxlanRemoteIp6OutputWithContext(context.Context) SystemVxlanRemoteIp6Output
}

type SystemVxlanRemoteIp6Args struct {
	// IPv6 address.
	Ip6 pulumi.StringPtrInput `pulumi:"ip6"`
}

func (SystemVxlanRemoteIp6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVxlanRemoteIp6)(nil)).Elem()
}

func (i SystemVxlanRemoteIp6Args) ToSystemVxlanRemoteIp6Output() SystemVxlanRemoteIp6Output {
	return i.ToSystemVxlanRemoteIp6OutputWithContext(context.Background())
}

func (i SystemVxlanRemoteIp6Args) ToSystemVxlanRemoteIp6OutputWithContext(ctx context.Context) SystemVxlanRemoteIp6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVxlanRemoteIp6Output)
}

// SystemVxlanRemoteIp6ArrayInput is an input type that accepts SystemVxlanRemoteIp6Array and SystemVxlanRemoteIp6ArrayOutput values.
// You can construct a concrete instance of `SystemVxlanRemoteIp6ArrayInput` via:
//
//	SystemVxlanRemoteIp6Array{ SystemVxlanRemoteIp6Args{...} }
type SystemVxlanRemoteIp6ArrayInput interface {
	pulumi.Input

	ToSystemVxlanRemoteIp6ArrayOutput() SystemVxlanRemoteIp6ArrayOutput
	ToSystemVxlanRemoteIp6ArrayOutputWithContext(context.Context) SystemVxlanRemoteIp6ArrayOutput
}

type SystemVxlanRemoteIp6Array []SystemVxlanRemoteIp6Input

func (SystemVxlanRemoteIp6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVxlanRemoteIp6)(nil)).Elem()
}

func (i SystemVxlanRemoteIp6Array) ToSystemVxlanRemoteIp6ArrayOutput() SystemVxlanRemoteIp6ArrayOutput {
	return i.ToSystemVxlanRemoteIp6ArrayOutputWithContext(context.Background())
}

func (i SystemVxlanRemoteIp6Array) ToSystemVxlanRemoteIp6ArrayOutputWithContext(ctx context.Context) SystemVxlanRemoteIp6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVxlanRemoteIp6ArrayOutput)
}

type SystemVxlanRemoteIp6Output struct{ *pulumi.OutputState }

func (SystemVxlanRemoteIp6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVxlanRemoteIp6)(nil)).Elem()
}

func (o SystemVxlanRemoteIp6Output) ToSystemVxlanRemoteIp6Output() SystemVxlanRemoteIp6Output {
	return o
}

func (o SystemVxlanRemoteIp6Output) ToSystemVxlanRemoteIp6OutputWithContext(ctx context.Context) SystemVxlanRemoteIp6Output {
	return o
}

// IPv6 address.
func (o SystemVxlanRemoteIp6Output) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVxlanRemoteIp6) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

type SystemVxlanRemoteIp6ArrayOutput struct{ *pulumi.OutputState }

func (SystemVxlanRemoteIp6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVxlanRemoteIp6)(nil)).Elem()
}

func (o SystemVxlanRemoteIp6ArrayOutput) ToSystemVxlanRemoteIp6ArrayOutput() SystemVxlanRemoteIp6ArrayOutput {
	return o
}

func (o SystemVxlanRemoteIp6ArrayOutput) ToSystemVxlanRemoteIp6ArrayOutputWithContext(ctx context.Context) SystemVxlanRemoteIp6ArrayOutput {
	return o
}

func (o SystemVxlanRemoteIp6ArrayOutput) Index(i pulumi.IntInput) SystemVxlanRemoteIp6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVxlanRemoteIp6 {
		return vs[0].([]SystemVxlanRemoteIp6)[vs[1].(int)]
	}).(SystemVxlanRemoteIp6Output)
}

type SystemVxlanRemoteIp struct {
	// IPv4 address.
	//
	// The `remoteIp6` block supports:
	Ip *string `pulumi:"ip"`
}

// SystemVxlanRemoteIpInput is an input type that accepts SystemVxlanRemoteIpArgs and SystemVxlanRemoteIpOutput values.
// You can construct a concrete instance of `SystemVxlanRemoteIpInput` via:
//
//	SystemVxlanRemoteIpArgs{...}
type SystemVxlanRemoteIpInput interface {
	pulumi.Input

	ToSystemVxlanRemoteIpOutput() SystemVxlanRemoteIpOutput
	ToSystemVxlanRemoteIpOutputWithContext(context.Context) SystemVxlanRemoteIpOutput
}

type SystemVxlanRemoteIpArgs struct {
	// IPv4 address.
	//
	// The `remoteIp6` block supports:
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SystemVxlanRemoteIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVxlanRemoteIp)(nil)).Elem()
}

func (i SystemVxlanRemoteIpArgs) ToSystemVxlanRemoteIpOutput() SystemVxlanRemoteIpOutput {
	return i.ToSystemVxlanRemoteIpOutputWithContext(context.Background())
}

func (i SystemVxlanRemoteIpArgs) ToSystemVxlanRemoteIpOutputWithContext(ctx context.Context) SystemVxlanRemoteIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVxlanRemoteIpOutput)
}

// SystemVxlanRemoteIpArrayInput is an input type that accepts SystemVxlanRemoteIpArray and SystemVxlanRemoteIpArrayOutput values.
// You can construct a concrete instance of `SystemVxlanRemoteIpArrayInput` via:
//
//	SystemVxlanRemoteIpArray{ SystemVxlanRemoteIpArgs{...} }
type SystemVxlanRemoteIpArrayInput interface {
	pulumi.Input

	ToSystemVxlanRemoteIpArrayOutput() SystemVxlanRemoteIpArrayOutput
	ToSystemVxlanRemoteIpArrayOutputWithContext(context.Context) SystemVxlanRemoteIpArrayOutput
}

type SystemVxlanRemoteIpArray []SystemVxlanRemoteIpInput

func (SystemVxlanRemoteIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVxlanRemoteIp)(nil)).Elem()
}

func (i SystemVxlanRemoteIpArray) ToSystemVxlanRemoteIpArrayOutput() SystemVxlanRemoteIpArrayOutput {
	return i.ToSystemVxlanRemoteIpArrayOutputWithContext(context.Background())
}

func (i SystemVxlanRemoteIpArray) ToSystemVxlanRemoteIpArrayOutputWithContext(ctx context.Context) SystemVxlanRemoteIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVxlanRemoteIpArrayOutput)
}

type SystemVxlanRemoteIpOutput struct{ *pulumi.OutputState }

func (SystemVxlanRemoteIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVxlanRemoteIp)(nil)).Elem()
}

func (o SystemVxlanRemoteIpOutput) ToSystemVxlanRemoteIpOutput() SystemVxlanRemoteIpOutput {
	return o
}

func (o SystemVxlanRemoteIpOutput) ToSystemVxlanRemoteIpOutputWithContext(ctx context.Context) SystemVxlanRemoteIpOutput {
	return o
}

// IPv4 address.
//
// The `remoteIp6` block supports:
func (o SystemVxlanRemoteIpOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVxlanRemoteIp) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SystemVxlanRemoteIpArrayOutput struct{ *pulumi.OutputState }

func (SystemVxlanRemoteIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVxlanRemoteIp)(nil)).Elem()
}

func (o SystemVxlanRemoteIpArrayOutput) ToSystemVxlanRemoteIpArrayOutput() SystemVxlanRemoteIpArrayOutput {
	return o
}

func (o SystemVxlanRemoteIpArrayOutput) ToSystemVxlanRemoteIpArrayOutputWithContext(ctx context.Context) SystemVxlanRemoteIpArrayOutput {
	return o
}

func (o SystemVxlanRemoteIpArrayOutput) Index(i pulumi.IntInput) SystemVxlanRemoteIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVxlanRemoteIp {
		return vs[0].([]SystemVxlanRemoteIp)[vs[1].(int)]
	}).(SystemVxlanRemoteIpOutput)
}

type SystemZoneInterface struct {
	// Select interfaces to add to the zone.
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemZoneInterfaceInput is an input type that accepts SystemZoneInterfaceArgs and SystemZoneInterfaceOutput values.
// You can construct a concrete instance of `SystemZoneInterfaceInput` via:
//
//	SystemZoneInterfaceArgs{...}
type SystemZoneInterfaceInput interface {
	pulumi.Input

	ToSystemZoneInterfaceOutput() SystemZoneInterfaceOutput
	ToSystemZoneInterfaceOutputWithContext(context.Context) SystemZoneInterfaceOutput
}

type SystemZoneInterfaceArgs struct {
	// Select interfaces to add to the zone.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemZoneInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemZoneInterface)(nil)).Elem()
}

func (i SystemZoneInterfaceArgs) ToSystemZoneInterfaceOutput() SystemZoneInterfaceOutput {
	return i.ToSystemZoneInterfaceOutputWithContext(context.Background())
}

func (i SystemZoneInterfaceArgs) ToSystemZoneInterfaceOutputWithContext(ctx context.Context) SystemZoneInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemZoneInterfaceOutput)
}

// SystemZoneInterfaceArrayInput is an input type that accepts SystemZoneInterfaceArray and SystemZoneInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemZoneInterfaceArrayInput` via:
//
//	SystemZoneInterfaceArray{ SystemZoneInterfaceArgs{...} }
type SystemZoneInterfaceArrayInput interface {
	pulumi.Input

	ToSystemZoneInterfaceArrayOutput() SystemZoneInterfaceArrayOutput
	ToSystemZoneInterfaceArrayOutputWithContext(context.Context) SystemZoneInterfaceArrayOutput
}

type SystemZoneInterfaceArray []SystemZoneInterfaceInput

func (SystemZoneInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemZoneInterface)(nil)).Elem()
}

func (i SystemZoneInterfaceArray) ToSystemZoneInterfaceArrayOutput() SystemZoneInterfaceArrayOutput {
	return i.ToSystemZoneInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemZoneInterfaceArray) ToSystemZoneInterfaceArrayOutputWithContext(ctx context.Context) SystemZoneInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemZoneInterfaceArrayOutput)
}

type SystemZoneInterfaceOutput struct{ *pulumi.OutputState }

func (SystemZoneInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemZoneInterface)(nil)).Elem()
}

func (o SystemZoneInterfaceOutput) ToSystemZoneInterfaceOutput() SystemZoneInterfaceOutput {
	return o
}

func (o SystemZoneInterfaceOutput) ToSystemZoneInterfaceOutputWithContext(ctx context.Context) SystemZoneInterfaceOutput {
	return o
}

// Select interfaces to add to the zone.
func (o SystemZoneInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemZoneInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemZoneInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemZoneInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemZoneInterface)(nil)).Elem()
}

func (o SystemZoneInterfaceArrayOutput) ToSystemZoneInterfaceArrayOutput() SystemZoneInterfaceArrayOutput {
	return o
}

func (o SystemZoneInterfaceArrayOutput) ToSystemZoneInterfaceArrayOutputWithContext(ctx context.Context) SystemZoneInterfaceArrayOutput {
	return o
}

func (o SystemZoneInterfaceArrayOutput) Index(i pulumi.IntInput) SystemZoneInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemZoneInterface {
		return vs[0].([]SystemZoneInterface)[vs[1].(int)]
	}).(SystemZoneInterfaceOutput)
}

type SystemZoneTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []SystemZoneTaggingTag `pulumi:"tags"`
}

// SystemZoneTaggingInput is an input type that accepts SystemZoneTaggingArgs and SystemZoneTaggingOutput values.
// You can construct a concrete instance of `SystemZoneTaggingInput` via:
//
//	SystemZoneTaggingArgs{...}
type SystemZoneTaggingInput interface {
	pulumi.Input

	ToSystemZoneTaggingOutput() SystemZoneTaggingOutput
	ToSystemZoneTaggingOutputWithContext(context.Context) SystemZoneTaggingOutput
}

type SystemZoneTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags SystemZoneTaggingTagArrayInput `pulumi:"tags"`
}

func (SystemZoneTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemZoneTagging)(nil)).Elem()
}

func (i SystemZoneTaggingArgs) ToSystemZoneTaggingOutput() SystemZoneTaggingOutput {
	return i.ToSystemZoneTaggingOutputWithContext(context.Background())
}

func (i SystemZoneTaggingArgs) ToSystemZoneTaggingOutputWithContext(ctx context.Context) SystemZoneTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemZoneTaggingOutput)
}

// SystemZoneTaggingArrayInput is an input type that accepts SystemZoneTaggingArray and SystemZoneTaggingArrayOutput values.
// You can construct a concrete instance of `SystemZoneTaggingArrayInput` via:
//
//	SystemZoneTaggingArray{ SystemZoneTaggingArgs{...} }
type SystemZoneTaggingArrayInput interface {
	pulumi.Input

	ToSystemZoneTaggingArrayOutput() SystemZoneTaggingArrayOutput
	ToSystemZoneTaggingArrayOutputWithContext(context.Context) SystemZoneTaggingArrayOutput
}

type SystemZoneTaggingArray []SystemZoneTaggingInput

func (SystemZoneTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemZoneTagging)(nil)).Elem()
}

func (i SystemZoneTaggingArray) ToSystemZoneTaggingArrayOutput() SystemZoneTaggingArrayOutput {
	return i.ToSystemZoneTaggingArrayOutputWithContext(context.Background())
}

func (i SystemZoneTaggingArray) ToSystemZoneTaggingArrayOutputWithContext(ctx context.Context) SystemZoneTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemZoneTaggingArrayOutput)
}

type SystemZoneTaggingOutput struct{ *pulumi.OutputState }

func (SystemZoneTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemZoneTagging)(nil)).Elem()
}

func (o SystemZoneTaggingOutput) ToSystemZoneTaggingOutput() SystemZoneTaggingOutput {
	return o
}

func (o SystemZoneTaggingOutput) ToSystemZoneTaggingOutputWithContext(ctx context.Context) SystemZoneTaggingOutput {
	return o
}

// Tag category.
func (o SystemZoneTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemZoneTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o SystemZoneTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemZoneTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o SystemZoneTaggingOutput) Tags() SystemZoneTaggingTagArrayOutput {
	return o.ApplyT(func(v SystemZoneTagging) []SystemZoneTaggingTag { return v.Tags }).(SystemZoneTaggingTagArrayOutput)
}

type SystemZoneTaggingArrayOutput struct{ *pulumi.OutputState }

func (SystemZoneTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemZoneTagging)(nil)).Elem()
}

func (o SystemZoneTaggingArrayOutput) ToSystemZoneTaggingArrayOutput() SystemZoneTaggingArrayOutput {
	return o
}

func (o SystemZoneTaggingArrayOutput) ToSystemZoneTaggingArrayOutputWithContext(ctx context.Context) SystemZoneTaggingArrayOutput {
	return o
}

func (o SystemZoneTaggingArrayOutput) Index(i pulumi.IntInput) SystemZoneTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemZoneTagging {
		return vs[0].([]SystemZoneTagging)[vs[1].(int)]
	}).(SystemZoneTaggingOutput)
}

type SystemZoneTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// SystemZoneTaggingTagInput is an input type that accepts SystemZoneTaggingTagArgs and SystemZoneTaggingTagOutput values.
// You can construct a concrete instance of `SystemZoneTaggingTagInput` via:
//
//	SystemZoneTaggingTagArgs{...}
type SystemZoneTaggingTagInput interface {
	pulumi.Input

	ToSystemZoneTaggingTagOutput() SystemZoneTaggingTagOutput
	ToSystemZoneTaggingTagOutputWithContext(context.Context) SystemZoneTaggingTagOutput
}

type SystemZoneTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemZoneTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemZoneTaggingTag)(nil)).Elem()
}

func (i SystemZoneTaggingTagArgs) ToSystemZoneTaggingTagOutput() SystemZoneTaggingTagOutput {
	return i.ToSystemZoneTaggingTagOutputWithContext(context.Background())
}

func (i SystemZoneTaggingTagArgs) ToSystemZoneTaggingTagOutputWithContext(ctx context.Context) SystemZoneTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemZoneTaggingTagOutput)
}

// SystemZoneTaggingTagArrayInput is an input type that accepts SystemZoneTaggingTagArray and SystemZoneTaggingTagArrayOutput values.
// You can construct a concrete instance of `SystemZoneTaggingTagArrayInput` via:
//
//	SystemZoneTaggingTagArray{ SystemZoneTaggingTagArgs{...} }
type SystemZoneTaggingTagArrayInput interface {
	pulumi.Input

	ToSystemZoneTaggingTagArrayOutput() SystemZoneTaggingTagArrayOutput
	ToSystemZoneTaggingTagArrayOutputWithContext(context.Context) SystemZoneTaggingTagArrayOutput
}

type SystemZoneTaggingTagArray []SystemZoneTaggingTagInput

func (SystemZoneTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemZoneTaggingTag)(nil)).Elem()
}

func (i SystemZoneTaggingTagArray) ToSystemZoneTaggingTagArrayOutput() SystemZoneTaggingTagArrayOutput {
	return i.ToSystemZoneTaggingTagArrayOutputWithContext(context.Background())
}

func (i SystemZoneTaggingTagArray) ToSystemZoneTaggingTagArrayOutputWithContext(ctx context.Context) SystemZoneTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemZoneTaggingTagArrayOutput)
}

type SystemZoneTaggingTagOutput struct{ *pulumi.OutputState }

func (SystemZoneTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemZoneTaggingTag)(nil)).Elem()
}

func (o SystemZoneTaggingTagOutput) ToSystemZoneTaggingTagOutput() SystemZoneTaggingTagOutput {
	return o
}

func (o SystemZoneTaggingTagOutput) ToSystemZoneTaggingTagOutputWithContext(ctx context.Context) SystemZoneTaggingTagOutput {
	return o
}

// Tag name.
func (o SystemZoneTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemZoneTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemZoneTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (SystemZoneTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemZoneTaggingTag)(nil)).Elem()
}

func (o SystemZoneTaggingTagArrayOutput) ToSystemZoneTaggingTagArrayOutput() SystemZoneTaggingTagArrayOutput {
	return o
}

func (o SystemZoneTaggingTagArrayOutput) ToSystemZoneTaggingTagArrayOutputWithContext(ctx context.Context) SystemZoneTaggingTagArrayOutput {
	return o
}

func (o SystemZoneTaggingTagArrayOutput) Index(i pulumi.IntInput) SystemZoneTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemZoneTaggingTag {
		return vs[0].([]SystemZoneTaggingTag)[vs[1].(int)]
	}).(SystemZoneTaggingTagOutput)
}

type Systemdhcp6ServerIpRange struct {
	// End of IP range.
	EndIp *string `pulumi:"endIp"`
	// ID.
	Id *int `pulumi:"id"`
	// Start of IP range.
	StartIp *string `pulumi:"startIp"`
}

// Systemdhcp6ServerIpRangeInput is an input type that accepts Systemdhcp6ServerIpRangeArgs and Systemdhcp6ServerIpRangeOutput values.
// You can construct a concrete instance of `Systemdhcp6ServerIpRangeInput` via:
//
//	Systemdhcp6ServerIpRangeArgs{...}
type Systemdhcp6ServerIpRangeInput interface {
	pulumi.Input

	ToSystemdhcp6ServerIpRangeOutput() Systemdhcp6ServerIpRangeOutput
	ToSystemdhcp6ServerIpRangeOutputWithContext(context.Context) Systemdhcp6ServerIpRangeOutput
}

type Systemdhcp6ServerIpRangeArgs struct {
	// End of IP range.
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start of IP range.
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (Systemdhcp6ServerIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Systemdhcp6ServerIpRange)(nil)).Elem()
}

func (i Systemdhcp6ServerIpRangeArgs) ToSystemdhcp6ServerIpRangeOutput() Systemdhcp6ServerIpRangeOutput {
	return i.ToSystemdhcp6ServerIpRangeOutputWithContext(context.Background())
}

func (i Systemdhcp6ServerIpRangeArgs) ToSystemdhcp6ServerIpRangeOutputWithContext(ctx context.Context) Systemdhcp6ServerIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Systemdhcp6ServerIpRangeOutput)
}

// Systemdhcp6ServerIpRangeArrayInput is an input type that accepts Systemdhcp6ServerIpRangeArray and Systemdhcp6ServerIpRangeArrayOutput values.
// You can construct a concrete instance of `Systemdhcp6ServerIpRangeArrayInput` via:
//
//	Systemdhcp6ServerIpRangeArray{ Systemdhcp6ServerIpRangeArgs{...} }
type Systemdhcp6ServerIpRangeArrayInput interface {
	pulumi.Input

	ToSystemdhcp6ServerIpRangeArrayOutput() Systemdhcp6ServerIpRangeArrayOutput
	ToSystemdhcp6ServerIpRangeArrayOutputWithContext(context.Context) Systemdhcp6ServerIpRangeArrayOutput
}

type Systemdhcp6ServerIpRangeArray []Systemdhcp6ServerIpRangeInput

func (Systemdhcp6ServerIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Systemdhcp6ServerIpRange)(nil)).Elem()
}

func (i Systemdhcp6ServerIpRangeArray) ToSystemdhcp6ServerIpRangeArrayOutput() Systemdhcp6ServerIpRangeArrayOutput {
	return i.ToSystemdhcp6ServerIpRangeArrayOutputWithContext(context.Background())
}

func (i Systemdhcp6ServerIpRangeArray) ToSystemdhcp6ServerIpRangeArrayOutputWithContext(ctx context.Context) Systemdhcp6ServerIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Systemdhcp6ServerIpRangeArrayOutput)
}

type Systemdhcp6ServerIpRangeOutput struct{ *pulumi.OutputState }

func (Systemdhcp6ServerIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Systemdhcp6ServerIpRange)(nil)).Elem()
}

func (o Systemdhcp6ServerIpRangeOutput) ToSystemdhcp6ServerIpRangeOutput() Systemdhcp6ServerIpRangeOutput {
	return o
}

func (o Systemdhcp6ServerIpRangeOutput) ToSystemdhcp6ServerIpRangeOutputWithContext(ctx context.Context) Systemdhcp6ServerIpRangeOutput {
	return o
}

// End of IP range.
func (o Systemdhcp6ServerIpRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Systemdhcp6ServerIpRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o Systemdhcp6ServerIpRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Systemdhcp6ServerIpRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start of IP range.
func (o Systemdhcp6ServerIpRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Systemdhcp6ServerIpRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type Systemdhcp6ServerIpRangeArrayOutput struct{ *pulumi.OutputState }

func (Systemdhcp6ServerIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Systemdhcp6ServerIpRange)(nil)).Elem()
}

func (o Systemdhcp6ServerIpRangeArrayOutput) ToSystemdhcp6ServerIpRangeArrayOutput() Systemdhcp6ServerIpRangeArrayOutput {
	return o
}

func (o Systemdhcp6ServerIpRangeArrayOutput) ToSystemdhcp6ServerIpRangeArrayOutputWithContext(ctx context.Context) Systemdhcp6ServerIpRangeArrayOutput {
	return o
}

func (o Systemdhcp6ServerIpRangeArrayOutput) Index(i pulumi.IntInput) Systemdhcp6ServerIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Systemdhcp6ServerIpRange {
		return vs[0].([]Systemdhcp6ServerIpRange)[vs[1].(int)]
	}).(Systemdhcp6ServerIpRangeOutput)
}

type Systemdhcp6ServerPrefixRange struct {
	// End of prefix range.
	EndPrefix *string `pulumi:"endPrefix"`
	// ID.
	Id *int `pulumi:"id"`
	// Prefix length.
	PrefixLength *int `pulumi:"prefixLength"`
	// Start of prefix range.
	StartPrefix *string `pulumi:"startPrefix"`
}

// Systemdhcp6ServerPrefixRangeInput is an input type that accepts Systemdhcp6ServerPrefixRangeArgs and Systemdhcp6ServerPrefixRangeOutput values.
// You can construct a concrete instance of `Systemdhcp6ServerPrefixRangeInput` via:
//
//	Systemdhcp6ServerPrefixRangeArgs{...}
type Systemdhcp6ServerPrefixRangeInput interface {
	pulumi.Input

	ToSystemdhcp6ServerPrefixRangeOutput() Systemdhcp6ServerPrefixRangeOutput
	ToSystemdhcp6ServerPrefixRangeOutputWithContext(context.Context) Systemdhcp6ServerPrefixRangeOutput
}

type Systemdhcp6ServerPrefixRangeArgs struct {
	// End of prefix range.
	EndPrefix pulumi.StringPtrInput `pulumi:"endPrefix"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Prefix length.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// Start of prefix range.
	StartPrefix pulumi.StringPtrInput `pulumi:"startPrefix"`
}

func (Systemdhcp6ServerPrefixRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Systemdhcp6ServerPrefixRange)(nil)).Elem()
}

func (i Systemdhcp6ServerPrefixRangeArgs) ToSystemdhcp6ServerPrefixRangeOutput() Systemdhcp6ServerPrefixRangeOutput {
	return i.ToSystemdhcp6ServerPrefixRangeOutputWithContext(context.Background())
}

func (i Systemdhcp6ServerPrefixRangeArgs) ToSystemdhcp6ServerPrefixRangeOutputWithContext(ctx context.Context) Systemdhcp6ServerPrefixRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Systemdhcp6ServerPrefixRangeOutput)
}

// Systemdhcp6ServerPrefixRangeArrayInput is an input type that accepts Systemdhcp6ServerPrefixRangeArray and Systemdhcp6ServerPrefixRangeArrayOutput values.
// You can construct a concrete instance of `Systemdhcp6ServerPrefixRangeArrayInput` via:
//
//	Systemdhcp6ServerPrefixRangeArray{ Systemdhcp6ServerPrefixRangeArgs{...} }
type Systemdhcp6ServerPrefixRangeArrayInput interface {
	pulumi.Input

	ToSystemdhcp6ServerPrefixRangeArrayOutput() Systemdhcp6ServerPrefixRangeArrayOutput
	ToSystemdhcp6ServerPrefixRangeArrayOutputWithContext(context.Context) Systemdhcp6ServerPrefixRangeArrayOutput
}

type Systemdhcp6ServerPrefixRangeArray []Systemdhcp6ServerPrefixRangeInput

func (Systemdhcp6ServerPrefixRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Systemdhcp6ServerPrefixRange)(nil)).Elem()
}

func (i Systemdhcp6ServerPrefixRangeArray) ToSystemdhcp6ServerPrefixRangeArrayOutput() Systemdhcp6ServerPrefixRangeArrayOutput {
	return i.ToSystemdhcp6ServerPrefixRangeArrayOutputWithContext(context.Background())
}

func (i Systemdhcp6ServerPrefixRangeArray) ToSystemdhcp6ServerPrefixRangeArrayOutputWithContext(ctx context.Context) Systemdhcp6ServerPrefixRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Systemdhcp6ServerPrefixRangeArrayOutput)
}

type Systemdhcp6ServerPrefixRangeOutput struct{ *pulumi.OutputState }

func (Systemdhcp6ServerPrefixRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Systemdhcp6ServerPrefixRange)(nil)).Elem()
}

func (o Systemdhcp6ServerPrefixRangeOutput) ToSystemdhcp6ServerPrefixRangeOutput() Systemdhcp6ServerPrefixRangeOutput {
	return o
}

func (o Systemdhcp6ServerPrefixRangeOutput) ToSystemdhcp6ServerPrefixRangeOutputWithContext(ctx context.Context) Systemdhcp6ServerPrefixRangeOutput {
	return o
}

// End of prefix range.
func (o Systemdhcp6ServerPrefixRangeOutput) EndPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Systemdhcp6ServerPrefixRange) *string { return v.EndPrefix }).(pulumi.StringPtrOutput)
}

// ID.
func (o Systemdhcp6ServerPrefixRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Systemdhcp6ServerPrefixRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Prefix length.
func (o Systemdhcp6ServerPrefixRangeOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Systemdhcp6ServerPrefixRange) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// Start of prefix range.
func (o Systemdhcp6ServerPrefixRangeOutput) StartPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Systemdhcp6ServerPrefixRange) *string { return v.StartPrefix }).(pulumi.StringPtrOutput)
}

type Systemdhcp6ServerPrefixRangeArrayOutput struct{ *pulumi.OutputState }

func (Systemdhcp6ServerPrefixRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Systemdhcp6ServerPrefixRange)(nil)).Elem()
}

func (o Systemdhcp6ServerPrefixRangeArrayOutput) ToSystemdhcp6ServerPrefixRangeArrayOutput() Systemdhcp6ServerPrefixRangeArrayOutput {
	return o
}

func (o Systemdhcp6ServerPrefixRangeArrayOutput) ToSystemdhcp6ServerPrefixRangeArrayOutputWithContext(ctx context.Context) Systemdhcp6ServerPrefixRangeArrayOutput {
	return o
}

func (o Systemdhcp6ServerPrefixRangeArrayOutput) Index(i pulumi.IntInput) Systemdhcp6ServerPrefixRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Systemdhcp6ServerPrefixRange {
		return vs[0].([]Systemdhcp6ServerPrefixRange)[vs[1].(int)]
	}).(Systemdhcp6ServerPrefixRangeOutput)
}

type SystemdhcpServerExcludeRange struct {
	// End of IP range.
	EndIp *string `pulumi:"endIp"`
	// ID.
	Id *int `pulumi:"id"`
	// Start of IP range.
	StartIp *string `pulumi:"startIp"`
	// Enable/disable vendor class identifier (VCI) matching. When enabled only DHCP requests with a matching VCI are served with this range. Valid values: `disable`, `enable`.
	VciMatch *string `pulumi:"vciMatch"`
	// One or more VCI strings in quotes separated by spaces. The structure of `vciString` block is documented below.
	VciStrings []SystemdhcpServerExcludeRangeVciString `pulumi:"vciStrings"`
}

// SystemdhcpServerExcludeRangeInput is an input type that accepts SystemdhcpServerExcludeRangeArgs and SystemdhcpServerExcludeRangeOutput values.
// You can construct a concrete instance of `SystemdhcpServerExcludeRangeInput` via:
//
//	SystemdhcpServerExcludeRangeArgs{...}
type SystemdhcpServerExcludeRangeInput interface {
	pulumi.Input

	ToSystemdhcpServerExcludeRangeOutput() SystemdhcpServerExcludeRangeOutput
	ToSystemdhcpServerExcludeRangeOutputWithContext(context.Context) SystemdhcpServerExcludeRangeOutput
}

type SystemdhcpServerExcludeRangeArgs struct {
	// End of IP range.
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start of IP range.
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
	// Enable/disable vendor class identifier (VCI) matching. When enabled only DHCP requests with a matching VCI are served with this range. Valid values: `disable`, `enable`.
	VciMatch pulumi.StringPtrInput `pulumi:"vciMatch"`
	// One or more VCI strings in quotes separated by spaces. The structure of `vciString` block is documented below.
	VciStrings SystemdhcpServerExcludeRangeVciStringArrayInput `pulumi:"vciStrings"`
}

func (SystemdhcpServerExcludeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerExcludeRange)(nil)).Elem()
}

func (i SystemdhcpServerExcludeRangeArgs) ToSystemdhcpServerExcludeRangeOutput() SystemdhcpServerExcludeRangeOutput {
	return i.ToSystemdhcpServerExcludeRangeOutputWithContext(context.Background())
}

func (i SystemdhcpServerExcludeRangeArgs) ToSystemdhcpServerExcludeRangeOutputWithContext(ctx context.Context) SystemdhcpServerExcludeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerExcludeRangeOutput)
}

// SystemdhcpServerExcludeRangeArrayInput is an input type that accepts SystemdhcpServerExcludeRangeArray and SystemdhcpServerExcludeRangeArrayOutput values.
// You can construct a concrete instance of `SystemdhcpServerExcludeRangeArrayInput` via:
//
//	SystemdhcpServerExcludeRangeArray{ SystemdhcpServerExcludeRangeArgs{...} }
type SystemdhcpServerExcludeRangeArrayInput interface {
	pulumi.Input

	ToSystemdhcpServerExcludeRangeArrayOutput() SystemdhcpServerExcludeRangeArrayOutput
	ToSystemdhcpServerExcludeRangeArrayOutputWithContext(context.Context) SystemdhcpServerExcludeRangeArrayOutput
}

type SystemdhcpServerExcludeRangeArray []SystemdhcpServerExcludeRangeInput

func (SystemdhcpServerExcludeRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerExcludeRange)(nil)).Elem()
}

func (i SystemdhcpServerExcludeRangeArray) ToSystemdhcpServerExcludeRangeArrayOutput() SystemdhcpServerExcludeRangeArrayOutput {
	return i.ToSystemdhcpServerExcludeRangeArrayOutputWithContext(context.Background())
}

func (i SystemdhcpServerExcludeRangeArray) ToSystemdhcpServerExcludeRangeArrayOutputWithContext(ctx context.Context) SystemdhcpServerExcludeRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerExcludeRangeArrayOutput)
}

type SystemdhcpServerExcludeRangeOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerExcludeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerExcludeRange)(nil)).Elem()
}

func (o SystemdhcpServerExcludeRangeOutput) ToSystemdhcpServerExcludeRangeOutput() SystemdhcpServerExcludeRangeOutput {
	return o
}

func (o SystemdhcpServerExcludeRangeOutput) ToSystemdhcpServerExcludeRangeOutputWithContext(ctx context.Context) SystemdhcpServerExcludeRangeOutput {
	return o
}

// End of IP range.
func (o SystemdhcpServerExcludeRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerExcludeRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o SystemdhcpServerExcludeRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerExcludeRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start of IP range.
func (o SystemdhcpServerExcludeRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerExcludeRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

// Enable/disable vendor class identifier (VCI) matching. When enabled only DHCP requests with a matching VCI are served with this range. Valid values: `disable`, `enable`.
func (o SystemdhcpServerExcludeRangeOutput) VciMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerExcludeRange) *string { return v.VciMatch }).(pulumi.StringPtrOutput)
}

// One or more VCI strings in quotes separated by spaces. The structure of `vciString` block is documented below.
func (o SystemdhcpServerExcludeRangeOutput) VciStrings() SystemdhcpServerExcludeRangeVciStringArrayOutput {
	return o.ApplyT(func(v SystemdhcpServerExcludeRange) []SystemdhcpServerExcludeRangeVciString { return v.VciStrings }).(SystemdhcpServerExcludeRangeVciStringArrayOutput)
}

type SystemdhcpServerExcludeRangeArrayOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerExcludeRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerExcludeRange)(nil)).Elem()
}

func (o SystemdhcpServerExcludeRangeArrayOutput) ToSystemdhcpServerExcludeRangeArrayOutput() SystemdhcpServerExcludeRangeArrayOutput {
	return o
}

func (o SystemdhcpServerExcludeRangeArrayOutput) ToSystemdhcpServerExcludeRangeArrayOutputWithContext(ctx context.Context) SystemdhcpServerExcludeRangeArrayOutput {
	return o
}

func (o SystemdhcpServerExcludeRangeArrayOutput) Index(i pulumi.IntInput) SystemdhcpServerExcludeRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemdhcpServerExcludeRange {
		return vs[0].([]SystemdhcpServerExcludeRange)[vs[1].(int)]
	}).(SystemdhcpServerExcludeRangeOutput)
}

type SystemdhcpServerExcludeRangeVciString struct {
	// VCI strings.
	VciString *string `pulumi:"vciString"`
}

// SystemdhcpServerExcludeRangeVciStringInput is an input type that accepts SystemdhcpServerExcludeRangeVciStringArgs and SystemdhcpServerExcludeRangeVciStringOutput values.
// You can construct a concrete instance of `SystemdhcpServerExcludeRangeVciStringInput` via:
//
//	SystemdhcpServerExcludeRangeVciStringArgs{...}
type SystemdhcpServerExcludeRangeVciStringInput interface {
	pulumi.Input

	ToSystemdhcpServerExcludeRangeVciStringOutput() SystemdhcpServerExcludeRangeVciStringOutput
	ToSystemdhcpServerExcludeRangeVciStringOutputWithContext(context.Context) SystemdhcpServerExcludeRangeVciStringOutput
}

type SystemdhcpServerExcludeRangeVciStringArgs struct {
	// VCI strings.
	VciString pulumi.StringPtrInput `pulumi:"vciString"`
}

func (SystemdhcpServerExcludeRangeVciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerExcludeRangeVciString)(nil)).Elem()
}

func (i SystemdhcpServerExcludeRangeVciStringArgs) ToSystemdhcpServerExcludeRangeVciStringOutput() SystemdhcpServerExcludeRangeVciStringOutput {
	return i.ToSystemdhcpServerExcludeRangeVciStringOutputWithContext(context.Background())
}

func (i SystemdhcpServerExcludeRangeVciStringArgs) ToSystemdhcpServerExcludeRangeVciStringOutputWithContext(ctx context.Context) SystemdhcpServerExcludeRangeVciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerExcludeRangeVciStringOutput)
}

// SystemdhcpServerExcludeRangeVciStringArrayInput is an input type that accepts SystemdhcpServerExcludeRangeVciStringArray and SystemdhcpServerExcludeRangeVciStringArrayOutput values.
// You can construct a concrete instance of `SystemdhcpServerExcludeRangeVciStringArrayInput` via:
//
//	SystemdhcpServerExcludeRangeVciStringArray{ SystemdhcpServerExcludeRangeVciStringArgs{...} }
type SystemdhcpServerExcludeRangeVciStringArrayInput interface {
	pulumi.Input

	ToSystemdhcpServerExcludeRangeVciStringArrayOutput() SystemdhcpServerExcludeRangeVciStringArrayOutput
	ToSystemdhcpServerExcludeRangeVciStringArrayOutputWithContext(context.Context) SystemdhcpServerExcludeRangeVciStringArrayOutput
}

type SystemdhcpServerExcludeRangeVciStringArray []SystemdhcpServerExcludeRangeVciStringInput

func (SystemdhcpServerExcludeRangeVciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerExcludeRangeVciString)(nil)).Elem()
}

func (i SystemdhcpServerExcludeRangeVciStringArray) ToSystemdhcpServerExcludeRangeVciStringArrayOutput() SystemdhcpServerExcludeRangeVciStringArrayOutput {
	return i.ToSystemdhcpServerExcludeRangeVciStringArrayOutputWithContext(context.Background())
}

func (i SystemdhcpServerExcludeRangeVciStringArray) ToSystemdhcpServerExcludeRangeVciStringArrayOutputWithContext(ctx context.Context) SystemdhcpServerExcludeRangeVciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerExcludeRangeVciStringArrayOutput)
}

type SystemdhcpServerExcludeRangeVciStringOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerExcludeRangeVciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerExcludeRangeVciString)(nil)).Elem()
}

func (o SystemdhcpServerExcludeRangeVciStringOutput) ToSystemdhcpServerExcludeRangeVciStringOutput() SystemdhcpServerExcludeRangeVciStringOutput {
	return o
}

func (o SystemdhcpServerExcludeRangeVciStringOutput) ToSystemdhcpServerExcludeRangeVciStringOutputWithContext(ctx context.Context) SystemdhcpServerExcludeRangeVciStringOutput {
	return o
}

// VCI strings.
func (o SystemdhcpServerExcludeRangeVciStringOutput) VciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerExcludeRangeVciString) *string { return v.VciString }).(pulumi.StringPtrOutput)
}

type SystemdhcpServerExcludeRangeVciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerExcludeRangeVciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerExcludeRangeVciString)(nil)).Elem()
}

func (o SystemdhcpServerExcludeRangeVciStringArrayOutput) ToSystemdhcpServerExcludeRangeVciStringArrayOutput() SystemdhcpServerExcludeRangeVciStringArrayOutput {
	return o
}

func (o SystemdhcpServerExcludeRangeVciStringArrayOutput) ToSystemdhcpServerExcludeRangeVciStringArrayOutputWithContext(ctx context.Context) SystemdhcpServerExcludeRangeVciStringArrayOutput {
	return o
}

func (o SystemdhcpServerExcludeRangeVciStringArrayOutput) Index(i pulumi.IntInput) SystemdhcpServerExcludeRangeVciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemdhcpServerExcludeRangeVciString {
		return vs[0].([]SystemdhcpServerExcludeRangeVciString)[vs[1].(int)]
	}).(SystemdhcpServerExcludeRangeVciStringOutput)
}

type SystemdhcpServerIpRange struct {
	// End of IP range.
	EndIp *string `pulumi:"endIp"`
	// ID.
	Id *int `pulumi:"id"`
	// Start of IP range.
	StartIp *string `pulumi:"startIp"`
	// Enable/disable vendor class identifier (VCI) matching. When enabled only DHCP requests with a matching VCI are served with this range. Valid values: `disable`, `enable`.
	VciMatch *string `pulumi:"vciMatch"`
	// One or more VCI strings in quotes separated by spaces. The structure of `vciString` block is documented below.
	VciStrings []SystemdhcpServerIpRangeVciString `pulumi:"vciStrings"`
}

// SystemdhcpServerIpRangeInput is an input type that accepts SystemdhcpServerIpRangeArgs and SystemdhcpServerIpRangeOutput values.
// You can construct a concrete instance of `SystemdhcpServerIpRangeInput` via:
//
//	SystemdhcpServerIpRangeArgs{...}
type SystemdhcpServerIpRangeInput interface {
	pulumi.Input

	ToSystemdhcpServerIpRangeOutput() SystemdhcpServerIpRangeOutput
	ToSystemdhcpServerIpRangeOutputWithContext(context.Context) SystemdhcpServerIpRangeOutput
}

type SystemdhcpServerIpRangeArgs struct {
	// End of IP range.
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start of IP range.
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
	// Enable/disable vendor class identifier (VCI) matching. When enabled only DHCP requests with a matching VCI are served with this range. Valid values: `disable`, `enable`.
	VciMatch pulumi.StringPtrInput `pulumi:"vciMatch"`
	// One or more VCI strings in quotes separated by spaces. The structure of `vciString` block is documented below.
	VciStrings SystemdhcpServerIpRangeVciStringArrayInput `pulumi:"vciStrings"`
}

func (SystemdhcpServerIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerIpRange)(nil)).Elem()
}

func (i SystemdhcpServerIpRangeArgs) ToSystemdhcpServerIpRangeOutput() SystemdhcpServerIpRangeOutput {
	return i.ToSystemdhcpServerIpRangeOutputWithContext(context.Background())
}

func (i SystemdhcpServerIpRangeArgs) ToSystemdhcpServerIpRangeOutputWithContext(ctx context.Context) SystemdhcpServerIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerIpRangeOutput)
}

// SystemdhcpServerIpRangeArrayInput is an input type that accepts SystemdhcpServerIpRangeArray and SystemdhcpServerIpRangeArrayOutput values.
// You can construct a concrete instance of `SystemdhcpServerIpRangeArrayInput` via:
//
//	SystemdhcpServerIpRangeArray{ SystemdhcpServerIpRangeArgs{...} }
type SystemdhcpServerIpRangeArrayInput interface {
	pulumi.Input

	ToSystemdhcpServerIpRangeArrayOutput() SystemdhcpServerIpRangeArrayOutput
	ToSystemdhcpServerIpRangeArrayOutputWithContext(context.Context) SystemdhcpServerIpRangeArrayOutput
}

type SystemdhcpServerIpRangeArray []SystemdhcpServerIpRangeInput

func (SystemdhcpServerIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerIpRange)(nil)).Elem()
}

func (i SystemdhcpServerIpRangeArray) ToSystemdhcpServerIpRangeArrayOutput() SystemdhcpServerIpRangeArrayOutput {
	return i.ToSystemdhcpServerIpRangeArrayOutputWithContext(context.Background())
}

func (i SystemdhcpServerIpRangeArray) ToSystemdhcpServerIpRangeArrayOutputWithContext(ctx context.Context) SystemdhcpServerIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerIpRangeArrayOutput)
}

type SystemdhcpServerIpRangeOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerIpRange)(nil)).Elem()
}

func (o SystemdhcpServerIpRangeOutput) ToSystemdhcpServerIpRangeOutput() SystemdhcpServerIpRangeOutput {
	return o
}

func (o SystemdhcpServerIpRangeOutput) ToSystemdhcpServerIpRangeOutputWithContext(ctx context.Context) SystemdhcpServerIpRangeOutput {
	return o
}

// End of IP range.
func (o SystemdhcpServerIpRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerIpRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o SystemdhcpServerIpRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerIpRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start of IP range.
func (o SystemdhcpServerIpRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerIpRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

// Enable/disable vendor class identifier (VCI) matching. When enabled only DHCP requests with a matching VCI are served with this range. Valid values: `disable`, `enable`.
func (o SystemdhcpServerIpRangeOutput) VciMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerIpRange) *string { return v.VciMatch }).(pulumi.StringPtrOutput)
}

// One or more VCI strings in quotes separated by spaces. The structure of `vciString` block is documented below.
func (o SystemdhcpServerIpRangeOutput) VciStrings() SystemdhcpServerIpRangeVciStringArrayOutput {
	return o.ApplyT(func(v SystemdhcpServerIpRange) []SystemdhcpServerIpRangeVciString { return v.VciStrings }).(SystemdhcpServerIpRangeVciStringArrayOutput)
}

type SystemdhcpServerIpRangeArrayOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerIpRange)(nil)).Elem()
}

func (o SystemdhcpServerIpRangeArrayOutput) ToSystemdhcpServerIpRangeArrayOutput() SystemdhcpServerIpRangeArrayOutput {
	return o
}

func (o SystemdhcpServerIpRangeArrayOutput) ToSystemdhcpServerIpRangeArrayOutputWithContext(ctx context.Context) SystemdhcpServerIpRangeArrayOutput {
	return o
}

func (o SystemdhcpServerIpRangeArrayOutput) Index(i pulumi.IntInput) SystemdhcpServerIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemdhcpServerIpRange {
		return vs[0].([]SystemdhcpServerIpRange)[vs[1].(int)]
	}).(SystemdhcpServerIpRangeOutput)
}

type SystemdhcpServerIpRangeVciString struct {
	// VCI strings.
	VciString *string `pulumi:"vciString"`
}

// SystemdhcpServerIpRangeVciStringInput is an input type that accepts SystemdhcpServerIpRangeVciStringArgs and SystemdhcpServerIpRangeVciStringOutput values.
// You can construct a concrete instance of `SystemdhcpServerIpRangeVciStringInput` via:
//
//	SystemdhcpServerIpRangeVciStringArgs{...}
type SystemdhcpServerIpRangeVciStringInput interface {
	pulumi.Input

	ToSystemdhcpServerIpRangeVciStringOutput() SystemdhcpServerIpRangeVciStringOutput
	ToSystemdhcpServerIpRangeVciStringOutputWithContext(context.Context) SystemdhcpServerIpRangeVciStringOutput
}

type SystemdhcpServerIpRangeVciStringArgs struct {
	// VCI strings.
	VciString pulumi.StringPtrInput `pulumi:"vciString"`
}

func (SystemdhcpServerIpRangeVciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerIpRangeVciString)(nil)).Elem()
}

func (i SystemdhcpServerIpRangeVciStringArgs) ToSystemdhcpServerIpRangeVciStringOutput() SystemdhcpServerIpRangeVciStringOutput {
	return i.ToSystemdhcpServerIpRangeVciStringOutputWithContext(context.Background())
}

func (i SystemdhcpServerIpRangeVciStringArgs) ToSystemdhcpServerIpRangeVciStringOutputWithContext(ctx context.Context) SystemdhcpServerIpRangeVciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerIpRangeVciStringOutput)
}

// SystemdhcpServerIpRangeVciStringArrayInput is an input type that accepts SystemdhcpServerIpRangeVciStringArray and SystemdhcpServerIpRangeVciStringArrayOutput values.
// You can construct a concrete instance of `SystemdhcpServerIpRangeVciStringArrayInput` via:
//
//	SystemdhcpServerIpRangeVciStringArray{ SystemdhcpServerIpRangeVciStringArgs{...} }
type SystemdhcpServerIpRangeVciStringArrayInput interface {
	pulumi.Input

	ToSystemdhcpServerIpRangeVciStringArrayOutput() SystemdhcpServerIpRangeVciStringArrayOutput
	ToSystemdhcpServerIpRangeVciStringArrayOutputWithContext(context.Context) SystemdhcpServerIpRangeVciStringArrayOutput
}

type SystemdhcpServerIpRangeVciStringArray []SystemdhcpServerIpRangeVciStringInput

func (SystemdhcpServerIpRangeVciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerIpRangeVciString)(nil)).Elem()
}

func (i SystemdhcpServerIpRangeVciStringArray) ToSystemdhcpServerIpRangeVciStringArrayOutput() SystemdhcpServerIpRangeVciStringArrayOutput {
	return i.ToSystemdhcpServerIpRangeVciStringArrayOutputWithContext(context.Background())
}

func (i SystemdhcpServerIpRangeVciStringArray) ToSystemdhcpServerIpRangeVciStringArrayOutputWithContext(ctx context.Context) SystemdhcpServerIpRangeVciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerIpRangeVciStringArrayOutput)
}

type SystemdhcpServerIpRangeVciStringOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerIpRangeVciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerIpRangeVciString)(nil)).Elem()
}

func (o SystemdhcpServerIpRangeVciStringOutput) ToSystemdhcpServerIpRangeVciStringOutput() SystemdhcpServerIpRangeVciStringOutput {
	return o
}

func (o SystemdhcpServerIpRangeVciStringOutput) ToSystemdhcpServerIpRangeVciStringOutputWithContext(ctx context.Context) SystemdhcpServerIpRangeVciStringOutput {
	return o
}

// VCI strings.
func (o SystemdhcpServerIpRangeVciStringOutput) VciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerIpRangeVciString) *string { return v.VciString }).(pulumi.StringPtrOutput)
}

type SystemdhcpServerIpRangeVciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerIpRangeVciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerIpRangeVciString)(nil)).Elem()
}

func (o SystemdhcpServerIpRangeVciStringArrayOutput) ToSystemdhcpServerIpRangeVciStringArrayOutput() SystemdhcpServerIpRangeVciStringArrayOutput {
	return o
}

func (o SystemdhcpServerIpRangeVciStringArrayOutput) ToSystemdhcpServerIpRangeVciStringArrayOutputWithContext(ctx context.Context) SystemdhcpServerIpRangeVciStringArrayOutput {
	return o
}

func (o SystemdhcpServerIpRangeVciStringArrayOutput) Index(i pulumi.IntInput) SystemdhcpServerIpRangeVciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemdhcpServerIpRangeVciString {
		return vs[0].([]SystemdhcpServerIpRangeVciString)[vs[1].(int)]
	}).(SystemdhcpServerIpRangeVciStringOutput)
}

type SystemdhcpServerOption struct {
	// DHCP option code.
	Code *int `pulumi:"code"`
	// ID.
	Id *int `pulumi:"id"`
	// DHCP option IPs.
	Ip *string `pulumi:"ip"`
	// DHCP option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type *string `pulumi:"type"`
	// DHCP option value.
	Value *string `pulumi:"value"`
	// Enable/disable vendor class identifier (VCI) matching. When enabled only DHCP requests with a matching VCI are served with this option. Valid values: `disable`, `enable`.
	VciMatch *string `pulumi:"vciMatch"`
	// One or more VCI strings in quotes separated by spaces. The structure of `vciString` block is documented below.
	VciStrings []SystemdhcpServerOptionVciString `pulumi:"vciStrings"`
}

// SystemdhcpServerOptionInput is an input type that accepts SystemdhcpServerOptionArgs and SystemdhcpServerOptionOutput values.
// You can construct a concrete instance of `SystemdhcpServerOptionInput` via:
//
//	SystemdhcpServerOptionArgs{...}
type SystemdhcpServerOptionInput interface {
	pulumi.Input

	ToSystemdhcpServerOptionOutput() SystemdhcpServerOptionOutput
	ToSystemdhcpServerOptionOutputWithContext(context.Context) SystemdhcpServerOptionOutput
}

type SystemdhcpServerOptionArgs struct {
	// DHCP option code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// DHCP option IPs.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// DHCP option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// DHCP option value.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Enable/disable vendor class identifier (VCI) matching. When enabled only DHCP requests with a matching VCI are served with this option. Valid values: `disable`, `enable`.
	VciMatch pulumi.StringPtrInput `pulumi:"vciMatch"`
	// One or more VCI strings in quotes separated by spaces. The structure of `vciString` block is documented below.
	VciStrings SystemdhcpServerOptionVciStringArrayInput `pulumi:"vciStrings"`
}

func (SystemdhcpServerOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerOption)(nil)).Elem()
}

func (i SystemdhcpServerOptionArgs) ToSystemdhcpServerOptionOutput() SystemdhcpServerOptionOutput {
	return i.ToSystemdhcpServerOptionOutputWithContext(context.Background())
}

func (i SystemdhcpServerOptionArgs) ToSystemdhcpServerOptionOutputWithContext(ctx context.Context) SystemdhcpServerOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerOptionOutput)
}

// SystemdhcpServerOptionArrayInput is an input type that accepts SystemdhcpServerOptionArray and SystemdhcpServerOptionArrayOutput values.
// You can construct a concrete instance of `SystemdhcpServerOptionArrayInput` via:
//
//	SystemdhcpServerOptionArray{ SystemdhcpServerOptionArgs{...} }
type SystemdhcpServerOptionArrayInput interface {
	pulumi.Input

	ToSystemdhcpServerOptionArrayOutput() SystemdhcpServerOptionArrayOutput
	ToSystemdhcpServerOptionArrayOutputWithContext(context.Context) SystemdhcpServerOptionArrayOutput
}

type SystemdhcpServerOptionArray []SystemdhcpServerOptionInput

func (SystemdhcpServerOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerOption)(nil)).Elem()
}

func (i SystemdhcpServerOptionArray) ToSystemdhcpServerOptionArrayOutput() SystemdhcpServerOptionArrayOutput {
	return i.ToSystemdhcpServerOptionArrayOutputWithContext(context.Background())
}

func (i SystemdhcpServerOptionArray) ToSystemdhcpServerOptionArrayOutputWithContext(ctx context.Context) SystemdhcpServerOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerOptionArrayOutput)
}

type SystemdhcpServerOptionOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerOption)(nil)).Elem()
}

func (o SystemdhcpServerOptionOutput) ToSystemdhcpServerOptionOutput() SystemdhcpServerOptionOutput {
	return o
}

func (o SystemdhcpServerOptionOutput) ToSystemdhcpServerOptionOutputWithContext(ctx context.Context) SystemdhcpServerOptionOutput {
	return o
}

// DHCP option code.
func (o SystemdhcpServerOptionOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerOption) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// ID.
func (o SystemdhcpServerOptionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerOption) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// DHCP option IPs.
func (o SystemdhcpServerOptionOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerOption) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// DHCP option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
func (o SystemdhcpServerOptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerOption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// DHCP option value.
func (o SystemdhcpServerOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Enable/disable vendor class identifier (VCI) matching. When enabled only DHCP requests with a matching VCI are served with this option. Valid values: `disable`, `enable`.
func (o SystemdhcpServerOptionOutput) VciMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerOption) *string { return v.VciMatch }).(pulumi.StringPtrOutput)
}

// One or more VCI strings in quotes separated by spaces. The structure of `vciString` block is documented below.
func (o SystemdhcpServerOptionOutput) VciStrings() SystemdhcpServerOptionVciStringArrayOutput {
	return o.ApplyT(func(v SystemdhcpServerOption) []SystemdhcpServerOptionVciString { return v.VciStrings }).(SystemdhcpServerOptionVciStringArrayOutput)
}

type SystemdhcpServerOptionArrayOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerOption)(nil)).Elem()
}

func (o SystemdhcpServerOptionArrayOutput) ToSystemdhcpServerOptionArrayOutput() SystemdhcpServerOptionArrayOutput {
	return o
}

func (o SystemdhcpServerOptionArrayOutput) ToSystemdhcpServerOptionArrayOutputWithContext(ctx context.Context) SystemdhcpServerOptionArrayOutput {
	return o
}

func (o SystemdhcpServerOptionArrayOutput) Index(i pulumi.IntInput) SystemdhcpServerOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemdhcpServerOption {
		return vs[0].([]SystemdhcpServerOption)[vs[1].(int)]
	}).(SystemdhcpServerOptionOutput)
}

type SystemdhcpServerOptionVciString struct {
	// VCI strings.
	VciString *string `pulumi:"vciString"`
}

// SystemdhcpServerOptionVciStringInput is an input type that accepts SystemdhcpServerOptionVciStringArgs and SystemdhcpServerOptionVciStringOutput values.
// You can construct a concrete instance of `SystemdhcpServerOptionVciStringInput` via:
//
//	SystemdhcpServerOptionVciStringArgs{...}
type SystemdhcpServerOptionVciStringInput interface {
	pulumi.Input

	ToSystemdhcpServerOptionVciStringOutput() SystemdhcpServerOptionVciStringOutput
	ToSystemdhcpServerOptionVciStringOutputWithContext(context.Context) SystemdhcpServerOptionVciStringOutput
}

type SystemdhcpServerOptionVciStringArgs struct {
	// VCI strings.
	VciString pulumi.StringPtrInput `pulumi:"vciString"`
}

func (SystemdhcpServerOptionVciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerOptionVciString)(nil)).Elem()
}

func (i SystemdhcpServerOptionVciStringArgs) ToSystemdhcpServerOptionVciStringOutput() SystemdhcpServerOptionVciStringOutput {
	return i.ToSystemdhcpServerOptionVciStringOutputWithContext(context.Background())
}

func (i SystemdhcpServerOptionVciStringArgs) ToSystemdhcpServerOptionVciStringOutputWithContext(ctx context.Context) SystemdhcpServerOptionVciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerOptionVciStringOutput)
}

// SystemdhcpServerOptionVciStringArrayInput is an input type that accepts SystemdhcpServerOptionVciStringArray and SystemdhcpServerOptionVciStringArrayOutput values.
// You can construct a concrete instance of `SystemdhcpServerOptionVciStringArrayInput` via:
//
//	SystemdhcpServerOptionVciStringArray{ SystemdhcpServerOptionVciStringArgs{...} }
type SystemdhcpServerOptionVciStringArrayInput interface {
	pulumi.Input

	ToSystemdhcpServerOptionVciStringArrayOutput() SystemdhcpServerOptionVciStringArrayOutput
	ToSystemdhcpServerOptionVciStringArrayOutputWithContext(context.Context) SystemdhcpServerOptionVciStringArrayOutput
}

type SystemdhcpServerOptionVciStringArray []SystemdhcpServerOptionVciStringInput

func (SystemdhcpServerOptionVciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerOptionVciString)(nil)).Elem()
}

func (i SystemdhcpServerOptionVciStringArray) ToSystemdhcpServerOptionVciStringArrayOutput() SystemdhcpServerOptionVciStringArrayOutput {
	return i.ToSystemdhcpServerOptionVciStringArrayOutputWithContext(context.Background())
}

func (i SystemdhcpServerOptionVciStringArray) ToSystemdhcpServerOptionVciStringArrayOutputWithContext(ctx context.Context) SystemdhcpServerOptionVciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerOptionVciStringArrayOutput)
}

type SystemdhcpServerOptionVciStringOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerOptionVciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerOptionVciString)(nil)).Elem()
}

func (o SystemdhcpServerOptionVciStringOutput) ToSystemdhcpServerOptionVciStringOutput() SystemdhcpServerOptionVciStringOutput {
	return o
}

func (o SystemdhcpServerOptionVciStringOutput) ToSystemdhcpServerOptionVciStringOutputWithContext(ctx context.Context) SystemdhcpServerOptionVciStringOutput {
	return o
}

// VCI strings.
func (o SystemdhcpServerOptionVciStringOutput) VciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerOptionVciString) *string { return v.VciString }).(pulumi.StringPtrOutput)
}

type SystemdhcpServerOptionVciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerOptionVciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerOptionVciString)(nil)).Elem()
}

func (o SystemdhcpServerOptionVciStringArrayOutput) ToSystemdhcpServerOptionVciStringArrayOutput() SystemdhcpServerOptionVciStringArrayOutput {
	return o
}

func (o SystemdhcpServerOptionVciStringArrayOutput) ToSystemdhcpServerOptionVciStringArrayOutputWithContext(ctx context.Context) SystemdhcpServerOptionVciStringArrayOutput {
	return o
}

func (o SystemdhcpServerOptionVciStringArrayOutput) Index(i pulumi.IntInput) SystemdhcpServerOptionVciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemdhcpServerOptionVciString {
		return vs[0].([]SystemdhcpServerOptionVciString)[vs[1].(int)]
	}).(SystemdhcpServerOptionVciStringOutput)
}

type SystemdhcpServerReservedAddress struct {
	// Options for the DHCP server to configure the client with the reserved MAC address. Valid values: `assign`, `block`, `reserved`.
	Action *string `pulumi:"action"`
	// Option 82 circuit-ID of the client that will get the reserved IP address.
	CircuitId *string `pulumi:"circuitId"`
	// DHCP option type. Valid values: `hex`, `string`.
	CircuitIdType *string `pulumi:"circuitIdType"`
	// Description.
	Description *string `pulumi:"description"`
	// ID.
	Id *int `pulumi:"id"`
	// IP address to be reserved for the MAC address.
	Ip *string `pulumi:"ip"`
	// MAC address of the client that will get the reserved IP address.
	Mac *string `pulumi:"mac"`
	// Option 82 remote-ID of the client that will get the reserved IP address.
	RemoteId *string `pulumi:"remoteId"`
	// DHCP option type. Valid values: `hex`, `string`.
	RemoteIdType *string `pulumi:"remoteIdType"`
	// DHCP reserved-address type. Valid values: `mac`, `option82`.
	Type *string `pulumi:"type"`
}

// SystemdhcpServerReservedAddressInput is an input type that accepts SystemdhcpServerReservedAddressArgs and SystemdhcpServerReservedAddressOutput values.
// You can construct a concrete instance of `SystemdhcpServerReservedAddressInput` via:
//
//	SystemdhcpServerReservedAddressArgs{...}
type SystemdhcpServerReservedAddressInput interface {
	pulumi.Input

	ToSystemdhcpServerReservedAddressOutput() SystemdhcpServerReservedAddressOutput
	ToSystemdhcpServerReservedAddressOutputWithContext(context.Context) SystemdhcpServerReservedAddressOutput
}

type SystemdhcpServerReservedAddressArgs struct {
	// Options for the DHCP server to configure the client with the reserved MAC address. Valid values: `assign`, `block`, `reserved`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Option 82 circuit-ID of the client that will get the reserved IP address.
	CircuitId pulumi.StringPtrInput `pulumi:"circuitId"`
	// DHCP option type. Valid values: `hex`, `string`.
	CircuitIdType pulumi.StringPtrInput `pulumi:"circuitIdType"`
	// Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IP address to be reserved for the MAC address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// MAC address of the client that will get the reserved IP address.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Option 82 remote-ID of the client that will get the reserved IP address.
	RemoteId pulumi.StringPtrInput `pulumi:"remoteId"`
	// DHCP option type. Valid values: `hex`, `string`.
	RemoteIdType pulumi.StringPtrInput `pulumi:"remoteIdType"`
	// DHCP reserved-address type. Valid values: `mac`, `option82`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SystemdhcpServerReservedAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerReservedAddress)(nil)).Elem()
}

func (i SystemdhcpServerReservedAddressArgs) ToSystemdhcpServerReservedAddressOutput() SystemdhcpServerReservedAddressOutput {
	return i.ToSystemdhcpServerReservedAddressOutputWithContext(context.Background())
}

func (i SystemdhcpServerReservedAddressArgs) ToSystemdhcpServerReservedAddressOutputWithContext(ctx context.Context) SystemdhcpServerReservedAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerReservedAddressOutput)
}

// SystemdhcpServerReservedAddressArrayInput is an input type that accepts SystemdhcpServerReservedAddressArray and SystemdhcpServerReservedAddressArrayOutput values.
// You can construct a concrete instance of `SystemdhcpServerReservedAddressArrayInput` via:
//
//	SystemdhcpServerReservedAddressArray{ SystemdhcpServerReservedAddressArgs{...} }
type SystemdhcpServerReservedAddressArrayInput interface {
	pulumi.Input

	ToSystemdhcpServerReservedAddressArrayOutput() SystemdhcpServerReservedAddressArrayOutput
	ToSystemdhcpServerReservedAddressArrayOutputWithContext(context.Context) SystemdhcpServerReservedAddressArrayOutput
}

type SystemdhcpServerReservedAddressArray []SystemdhcpServerReservedAddressInput

func (SystemdhcpServerReservedAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerReservedAddress)(nil)).Elem()
}

func (i SystemdhcpServerReservedAddressArray) ToSystemdhcpServerReservedAddressArrayOutput() SystemdhcpServerReservedAddressArrayOutput {
	return i.ToSystemdhcpServerReservedAddressArrayOutputWithContext(context.Background())
}

func (i SystemdhcpServerReservedAddressArray) ToSystemdhcpServerReservedAddressArrayOutputWithContext(ctx context.Context) SystemdhcpServerReservedAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerReservedAddressArrayOutput)
}

type SystemdhcpServerReservedAddressOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerReservedAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerReservedAddress)(nil)).Elem()
}

func (o SystemdhcpServerReservedAddressOutput) ToSystemdhcpServerReservedAddressOutput() SystemdhcpServerReservedAddressOutput {
	return o
}

func (o SystemdhcpServerReservedAddressOutput) ToSystemdhcpServerReservedAddressOutputWithContext(ctx context.Context) SystemdhcpServerReservedAddressOutput {
	return o
}

// Options for the DHCP server to configure the client with the reserved MAC address. Valid values: `assign`, `block`, `reserved`.
func (o SystemdhcpServerReservedAddressOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerReservedAddress) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Option 82 circuit-ID of the client that will get the reserved IP address.
func (o SystemdhcpServerReservedAddressOutput) CircuitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerReservedAddress) *string { return v.CircuitId }).(pulumi.StringPtrOutput)
}

// DHCP option type. Valid values: `hex`, `string`.
func (o SystemdhcpServerReservedAddressOutput) CircuitIdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerReservedAddress) *string { return v.CircuitIdType }).(pulumi.StringPtrOutput)
}

// Description.
func (o SystemdhcpServerReservedAddressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerReservedAddress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ID.
func (o SystemdhcpServerReservedAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerReservedAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IP address to be reserved for the MAC address.
func (o SystemdhcpServerReservedAddressOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerReservedAddress) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// MAC address of the client that will get the reserved IP address.
func (o SystemdhcpServerReservedAddressOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerReservedAddress) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Option 82 remote-ID of the client that will get the reserved IP address.
func (o SystemdhcpServerReservedAddressOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerReservedAddress) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

// DHCP option type. Valid values: `hex`, `string`.
func (o SystemdhcpServerReservedAddressOutput) RemoteIdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerReservedAddress) *string { return v.RemoteIdType }).(pulumi.StringPtrOutput)
}

// DHCP reserved-address type. Valid values: `mac`, `option82`.
func (o SystemdhcpServerReservedAddressOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerReservedAddress) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SystemdhcpServerReservedAddressArrayOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerReservedAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerReservedAddress)(nil)).Elem()
}

func (o SystemdhcpServerReservedAddressArrayOutput) ToSystemdhcpServerReservedAddressArrayOutput() SystemdhcpServerReservedAddressArrayOutput {
	return o
}

func (o SystemdhcpServerReservedAddressArrayOutput) ToSystemdhcpServerReservedAddressArrayOutputWithContext(ctx context.Context) SystemdhcpServerReservedAddressArrayOutput {
	return o
}

func (o SystemdhcpServerReservedAddressArrayOutput) Index(i pulumi.IntInput) SystemdhcpServerReservedAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemdhcpServerReservedAddress {
		return vs[0].([]SystemdhcpServerReservedAddress)[vs[1].(int)]
	}).(SystemdhcpServerReservedAddressOutput)
}

type SystemdhcpServerTftpServer struct {
	// TFTP server.
	TftpServer *string `pulumi:"tftpServer"`
}

// SystemdhcpServerTftpServerInput is an input type that accepts SystemdhcpServerTftpServerArgs and SystemdhcpServerTftpServerOutput values.
// You can construct a concrete instance of `SystemdhcpServerTftpServerInput` via:
//
//	SystemdhcpServerTftpServerArgs{...}
type SystemdhcpServerTftpServerInput interface {
	pulumi.Input

	ToSystemdhcpServerTftpServerOutput() SystemdhcpServerTftpServerOutput
	ToSystemdhcpServerTftpServerOutputWithContext(context.Context) SystemdhcpServerTftpServerOutput
}

type SystemdhcpServerTftpServerArgs struct {
	// TFTP server.
	TftpServer pulumi.StringPtrInput `pulumi:"tftpServer"`
}

func (SystemdhcpServerTftpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerTftpServer)(nil)).Elem()
}

func (i SystemdhcpServerTftpServerArgs) ToSystemdhcpServerTftpServerOutput() SystemdhcpServerTftpServerOutput {
	return i.ToSystemdhcpServerTftpServerOutputWithContext(context.Background())
}

func (i SystemdhcpServerTftpServerArgs) ToSystemdhcpServerTftpServerOutputWithContext(ctx context.Context) SystemdhcpServerTftpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerTftpServerOutput)
}

// SystemdhcpServerTftpServerArrayInput is an input type that accepts SystemdhcpServerTftpServerArray and SystemdhcpServerTftpServerArrayOutput values.
// You can construct a concrete instance of `SystemdhcpServerTftpServerArrayInput` via:
//
//	SystemdhcpServerTftpServerArray{ SystemdhcpServerTftpServerArgs{...} }
type SystemdhcpServerTftpServerArrayInput interface {
	pulumi.Input

	ToSystemdhcpServerTftpServerArrayOutput() SystemdhcpServerTftpServerArrayOutput
	ToSystemdhcpServerTftpServerArrayOutputWithContext(context.Context) SystemdhcpServerTftpServerArrayOutput
}

type SystemdhcpServerTftpServerArray []SystemdhcpServerTftpServerInput

func (SystemdhcpServerTftpServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerTftpServer)(nil)).Elem()
}

func (i SystemdhcpServerTftpServerArray) ToSystemdhcpServerTftpServerArrayOutput() SystemdhcpServerTftpServerArrayOutput {
	return i.ToSystemdhcpServerTftpServerArrayOutputWithContext(context.Background())
}

func (i SystemdhcpServerTftpServerArray) ToSystemdhcpServerTftpServerArrayOutputWithContext(ctx context.Context) SystemdhcpServerTftpServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerTftpServerArrayOutput)
}

type SystemdhcpServerTftpServerOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerTftpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerTftpServer)(nil)).Elem()
}

func (o SystemdhcpServerTftpServerOutput) ToSystemdhcpServerTftpServerOutput() SystemdhcpServerTftpServerOutput {
	return o
}

func (o SystemdhcpServerTftpServerOutput) ToSystemdhcpServerTftpServerOutputWithContext(ctx context.Context) SystemdhcpServerTftpServerOutput {
	return o
}

// TFTP server.
func (o SystemdhcpServerTftpServerOutput) TftpServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerTftpServer) *string { return v.TftpServer }).(pulumi.StringPtrOutput)
}

type SystemdhcpServerTftpServerArrayOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerTftpServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerTftpServer)(nil)).Elem()
}

func (o SystemdhcpServerTftpServerArrayOutput) ToSystemdhcpServerTftpServerArrayOutput() SystemdhcpServerTftpServerArrayOutput {
	return o
}

func (o SystemdhcpServerTftpServerArrayOutput) ToSystemdhcpServerTftpServerArrayOutputWithContext(ctx context.Context) SystemdhcpServerTftpServerArrayOutput {
	return o
}

func (o SystemdhcpServerTftpServerArrayOutput) Index(i pulumi.IntInput) SystemdhcpServerTftpServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemdhcpServerTftpServer {
		return vs[0].([]SystemdhcpServerTftpServer)[vs[1].(int)]
	}).(SystemdhcpServerTftpServerOutput)
}

type SystemdhcpServerVciString struct {
	// VCI strings.
	VciString *string `pulumi:"vciString"`
}

// SystemdhcpServerVciStringInput is an input type that accepts SystemdhcpServerVciStringArgs and SystemdhcpServerVciStringOutput values.
// You can construct a concrete instance of `SystemdhcpServerVciStringInput` via:
//
//	SystemdhcpServerVciStringArgs{...}
type SystemdhcpServerVciStringInput interface {
	pulumi.Input

	ToSystemdhcpServerVciStringOutput() SystemdhcpServerVciStringOutput
	ToSystemdhcpServerVciStringOutputWithContext(context.Context) SystemdhcpServerVciStringOutput
}

type SystemdhcpServerVciStringArgs struct {
	// VCI strings.
	VciString pulumi.StringPtrInput `pulumi:"vciString"`
}

func (SystemdhcpServerVciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerVciString)(nil)).Elem()
}

func (i SystemdhcpServerVciStringArgs) ToSystemdhcpServerVciStringOutput() SystemdhcpServerVciStringOutput {
	return i.ToSystemdhcpServerVciStringOutputWithContext(context.Background())
}

func (i SystemdhcpServerVciStringArgs) ToSystemdhcpServerVciStringOutputWithContext(ctx context.Context) SystemdhcpServerVciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerVciStringOutput)
}

// SystemdhcpServerVciStringArrayInput is an input type that accepts SystemdhcpServerVciStringArray and SystemdhcpServerVciStringArrayOutput values.
// You can construct a concrete instance of `SystemdhcpServerVciStringArrayInput` via:
//
//	SystemdhcpServerVciStringArray{ SystemdhcpServerVciStringArgs{...} }
type SystemdhcpServerVciStringArrayInput interface {
	pulumi.Input

	ToSystemdhcpServerVciStringArrayOutput() SystemdhcpServerVciStringArrayOutput
	ToSystemdhcpServerVciStringArrayOutputWithContext(context.Context) SystemdhcpServerVciStringArrayOutput
}

type SystemdhcpServerVciStringArray []SystemdhcpServerVciStringInput

func (SystemdhcpServerVciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerVciString)(nil)).Elem()
}

func (i SystemdhcpServerVciStringArray) ToSystemdhcpServerVciStringArrayOutput() SystemdhcpServerVciStringArrayOutput {
	return i.ToSystemdhcpServerVciStringArrayOutputWithContext(context.Background())
}

func (i SystemdhcpServerVciStringArray) ToSystemdhcpServerVciStringArrayOutputWithContext(ctx context.Context) SystemdhcpServerVciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemdhcpServerVciStringArrayOutput)
}

type SystemdhcpServerVciStringOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerVciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemdhcpServerVciString)(nil)).Elem()
}

func (o SystemdhcpServerVciStringOutput) ToSystemdhcpServerVciStringOutput() SystemdhcpServerVciStringOutput {
	return o
}

func (o SystemdhcpServerVciStringOutput) ToSystemdhcpServerVciStringOutputWithContext(ctx context.Context) SystemdhcpServerVciStringOutput {
	return o
}

// VCI strings.
func (o SystemdhcpServerVciStringOutput) VciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemdhcpServerVciString) *string { return v.VciString }).(pulumi.StringPtrOutput)
}

type SystemdhcpServerVciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemdhcpServerVciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemdhcpServerVciString)(nil)).Elem()
}

func (o SystemdhcpServerVciStringArrayOutput) ToSystemdhcpServerVciStringArrayOutput() SystemdhcpServerVciStringArrayOutput {
	return o
}

func (o SystemdhcpServerVciStringArrayOutput) ToSystemdhcpServerVciStringArrayOutputWithContext(ctx context.Context) SystemdhcpServerVciStringArrayOutput {
	return o
}

func (o SystemdhcpServerVciStringArrayOutput) Index(i pulumi.IntInput) SystemdhcpServerVciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemdhcpServerVciString {
		return vs[0].([]SystemdhcpServerVciString)[vs[1].(int)]
	}).(SystemdhcpServerVciStringOutput)
}

type SystemlldpNetworkpolicyGuest struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp *int `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority *int `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag *string `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan *int `pulumi:"vlan"`
}

// SystemlldpNetworkpolicyGuestInput is an input type that accepts SystemlldpNetworkpolicyGuestArgs and SystemlldpNetworkpolicyGuestOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyGuestInput` via:
//
//	SystemlldpNetworkpolicyGuestArgs{...}
type SystemlldpNetworkpolicyGuestInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyGuestOutput() SystemlldpNetworkpolicyGuestOutput
	ToSystemlldpNetworkpolicyGuestOutputWithContext(context.Context) SystemlldpNetworkpolicyGuestOutput
}

type SystemlldpNetworkpolicyGuestArgs struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (SystemlldpNetworkpolicyGuestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyGuest)(nil)).Elem()
}

func (i SystemlldpNetworkpolicyGuestArgs) ToSystemlldpNetworkpolicyGuestOutput() SystemlldpNetworkpolicyGuestOutput {
	return i.ToSystemlldpNetworkpolicyGuestOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyGuestArgs) ToSystemlldpNetworkpolicyGuestOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyGuestOutput)
}

func (i SystemlldpNetworkpolicyGuestArgs) ToSystemlldpNetworkpolicyGuestPtrOutput() SystemlldpNetworkpolicyGuestPtrOutput {
	return i.ToSystemlldpNetworkpolicyGuestPtrOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyGuestArgs) ToSystemlldpNetworkpolicyGuestPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyGuestOutput).ToSystemlldpNetworkpolicyGuestPtrOutputWithContext(ctx)
}

// SystemlldpNetworkpolicyGuestPtrInput is an input type that accepts SystemlldpNetworkpolicyGuestArgs, SystemlldpNetworkpolicyGuestPtr and SystemlldpNetworkpolicyGuestPtrOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyGuestPtrInput` via:
//
//	        SystemlldpNetworkpolicyGuestArgs{...}
//
//	or:
//
//	        nil
type SystemlldpNetworkpolicyGuestPtrInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyGuestPtrOutput() SystemlldpNetworkpolicyGuestPtrOutput
	ToSystemlldpNetworkpolicyGuestPtrOutputWithContext(context.Context) SystemlldpNetworkpolicyGuestPtrOutput
}

type systemlldpNetworkpolicyGuestPtrType SystemlldpNetworkpolicyGuestArgs

func SystemlldpNetworkpolicyGuestPtr(v *SystemlldpNetworkpolicyGuestArgs) SystemlldpNetworkpolicyGuestPtrInput {
	return (*systemlldpNetworkpolicyGuestPtrType)(v)
}

func (*systemlldpNetworkpolicyGuestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyGuest)(nil)).Elem()
}

func (i *systemlldpNetworkpolicyGuestPtrType) ToSystemlldpNetworkpolicyGuestPtrOutput() SystemlldpNetworkpolicyGuestPtrOutput {
	return i.ToSystemlldpNetworkpolicyGuestPtrOutputWithContext(context.Background())
}

func (i *systemlldpNetworkpolicyGuestPtrType) ToSystemlldpNetworkpolicyGuestPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyGuestPtrOutput)
}

type SystemlldpNetworkpolicyGuestOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyGuestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyGuest)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyGuestOutput) ToSystemlldpNetworkpolicyGuestOutput() SystemlldpNetworkpolicyGuestOutput {
	return o
}

func (o SystemlldpNetworkpolicyGuestOutput) ToSystemlldpNetworkpolicyGuestOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestOutput {
	return o
}

func (o SystemlldpNetworkpolicyGuestOutput) ToSystemlldpNetworkpolicyGuestPtrOutput() SystemlldpNetworkpolicyGuestPtrOutput {
	return o.ToSystemlldpNetworkpolicyGuestPtrOutputWithContext(context.Background())
}

func (o SystemlldpNetworkpolicyGuestOutput) ToSystemlldpNetworkpolicyGuestPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemlldpNetworkpolicyGuest) *SystemlldpNetworkpolicyGuest {
		return &v
	}).(SystemlldpNetworkpolicyGuestPtrOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyGuestOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyGuest) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyGuestOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyGuest) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyGuestOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyGuest) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyGuestOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyGuest) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyGuestOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyGuest) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyGuestPtrOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyGuestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyGuest)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyGuestPtrOutput) ToSystemlldpNetworkpolicyGuestPtrOutput() SystemlldpNetworkpolicyGuestPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyGuestPtrOutput) ToSystemlldpNetworkpolicyGuestPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyGuestPtrOutput) Elem() SystemlldpNetworkpolicyGuestOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuest) SystemlldpNetworkpolicyGuest {
		if v != nil {
			return *v
		}
		var ret SystemlldpNetworkpolicyGuest
		return ret
	}).(SystemlldpNetworkpolicyGuestOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyGuestPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuest) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyGuestPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuest) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyGuestPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuest) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyGuestPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuest) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyGuestPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuest) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyGuestVoiceSignaling struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp *int `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority *int `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag *string `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan *int `pulumi:"vlan"`
}

// SystemlldpNetworkpolicyGuestVoiceSignalingInput is an input type that accepts SystemlldpNetworkpolicyGuestVoiceSignalingArgs and SystemlldpNetworkpolicyGuestVoiceSignalingOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyGuestVoiceSignalingInput` via:
//
//	SystemlldpNetworkpolicyGuestVoiceSignalingArgs{...}
type SystemlldpNetworkpolicyGuestVoiceSignalingInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyGuestVoiceSignalingOutput() SystemlldpNetworkpolicyGuestVoiceSignalingOutput
	ToSystemlldpNetworkpolicyGuestVoiceSignalingOutputWithContext(context.Context) SystemlldpNetworkpolicyGuestVoiceSignalingOutput
}

type SystemlldpNetworkpolicyGuestVoiceSignalingArgs struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (SystemlldpNetworkpolicyGuestVoiceSignalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyGuestVoiceSignaling)(nil)).Elem()
}

func (i SystemlldpNetworkpolicyGuestVoiceSignalingArgs) ToSystemlldpNetworkpolicyGuestVoiceSignalingOutput() SystemlldpNetworkpolicyGuestVoiceSignalingOutput {
	return i.ToSystemlldpNetworkpolicyGuestVoiceSignalingOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyGuestVoiceSignalingArgs) ToSystemlldpNetworkpolicyGuestVoiceSignalingOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestVoiceSignalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyGuestVoiceSignalingOutput)
}

func (i SystemlldpNetworkpolicyGuestVoiceSignalingArgs) ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput() SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput {
	return i.ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyGuestVoiceSignalingArgs) ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyGuestVoiceSignalingOutput).ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutputWithContext(ctx)
}

// SystemlldpNetworkpolicyGuestVoiceSignalingPtrInput is an input type that accepts SystemlldpNetworkpolicyGuestVoiceSignalingArgs, SystemlldpNetworkpolicyGuestVoiceSignalingPtr and SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyGuestVoiceSignalingPtrInput` via:
//
//	        SystemlldpNetworkpolicyGuestVoiceSignalingArgs{...}
//
//	or:
//
//	        nil
type SystemlldpNetworkpolicyGuestVoiceSignalingPtrInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput() SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput
	ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutputWithContext(context.Context) SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput
}

type systemlldpNetworkpolicyGuestVoiceSignalingPtrType SystemlldpNetworkpolicyGuestVoiceSignalingArgs

func SystemlldpNetworkpolicyGuestVoiceSignalingPtr(v *SystemlldpNetworkpolicyGuestVoiceSignalingArgs) SystemlldpNetworkpolicyGuestVoiceSignalingPtrInput {
	return (*systemlldpNetworkpolicyGuestVoiceSignalingPtrType)(v)
}

func (*systemlldpNetworkpolicyGuestVoiceSignalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyGuestVoiceSignaling)(nil)).Elem()
}

func (i *systemlldpNetworkpolicyGuestVoiceSignalingPtrType) ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput() SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput {
	return i.ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutputWithContext(context.Background())
}

func (i *systemlldpNetworkpolicyGuestVoiceSignalingPtrType) ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput)
}

type SystemlldpNetworkpolicyGuestVoiceSignalingOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyGuestVoiceSignalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyGuestVoiceSignaling)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyGuestVoiceSignalingOutput) ToSystemlldpNetworkpolicyGuestVoiceSignalingOutput() SystemlldpNetworkpolicyGuestVoiceSignalingOutput {
	return o
}

func (o SystemlldpNetworkpolicyGuestVoiceSignalingOutput) ToSystemlldpNetworkpolicyGuestVoiceSignalingOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestVoiceSignalingOutput {
	return o
}

func (o SystemlldpNetworkpolicyGuestVoiceSignalingOutput) ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput() SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput {
	return o.ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutputWithContext(context.Background())
}

func (o SystemlldpNetworkpolicyGuestVoiceSignalingOutput) ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemlldpNetworkpolicyGuestVoiceSignaling) *SystemlldpNetworkpolicyGuestVoiceSignaling {
		return &v
	}).(SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyGuestVoiceSignalingOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyGuestVoiceSignaling) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyGuestVoiceSignalingOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyGuestVoiceSignaling) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyGuestVoiceSignalingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyGuestVoiceSignaling) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyGuestVoiceSignalingOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyGuestVoiceSignaling) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyGuestVoiceSignalingOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyGuestVoiceSignaling) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyGuestVoiceSignaling)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput) ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput() SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput) ToSystemlldpNetworkpolicyGuestVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput) Elem() SystemlldpNetworkpolicyGuestVoiceSignalingOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuestVoiceSignaling) SystemlldpNetworkpolicyGuestVoiceSignaling {
		if v != nil {
			return *v
		}
		var ret SystemlldpNetworkpolicyGuestVoiceSignaling
		return ret
	}).(SystemlldpNetworkpolicyGuestVoiceSignalingOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuestVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuestVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuestVoiceSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuestVoiceSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyGuestVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicySoftphone struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp *int `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority *int `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag *string `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan *int `pulumi:"vlan"`
}

// SystemlldpNetworkpolicySoftphoneInput is an input type that accepts SystemlldpNetworkpolicySoftphoneArgs and SystemlldpNetworkpolicySoftphoneOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicySoftphoneInput` via:
//
//	SystemlldpNetworkpolicySoftphoneArgs{...}
type SystemlldpNetworkpolicySoftphoneInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicySoftphoneOutput() SystemlldpNetworkpolicySoftphoneOutput
	ToSystemlldpNetworkpolicySoftphoneOutputWithContext(context.Context) SystemlldpNetworkpolicySoftphoneOutput
}

type SystemlldpNetworkpolicySoftphoneArgs struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (SystemlldpNetworkpolicySoftphoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicySoftphone)(nil)).Elem()
}

func (i SystemlldpNetworkpolicySoftphoneArgs) ToSystemlldpNetworkpolicySoftphoneOutput() SystemlldpNetworkpolicySoftphoneOutput {
	return i.ToSystemlldpNetworkpolicySoftphoneOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicySoftphoneArgs) ToSystemlldpNetworkpolicySoftphoneOutputWithContext(ctx context.Context) SystemlldpNetworkpolicySoftphoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicySoftphoneOutput)
}

func (i SystemlldpNetworkpolicySoftphoneArgs) ToSystemlldpNetworkpolicySoftphonePtrOutput() SystemlldpNetworkpolicySoftphonePtrOutput {
	return i.ToSystemlldpNetworkpolicySoftphonePtrOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicySoftphoneArgs) ToSystemlldpNetworkpolicySoftphonePtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicySoftphonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicySoftphoneOutput).ToSystemlldpNetworkpolicySoftphonePtrOutputWithContext(ctx)
}

// SystemlldpNetworkpolicySoftphonePtrInput is an input type that accepts SystemlldpNetworkpolicySoftphoneArgs, SystemlldpNetworkpolicySoftphonePtr and SystemlldpNetworkpolicySoftphonePtrOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicySoftphonePtrInput` via:
//
//	        SystemlldpNetworkpolicySoftphoneArgs{...}
//
//	or:
//
//	        nil
type SystemlldpNetworkpolicySoftphonePtrInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicySoftphonePtrOutput() SystemlldpNetworkpolicySoftphonePtrOutput
	ToSystemlldpNetworkpolicySoftphonePtrOutputWithContext(context.Context) SystemlldpNetworkpolicySoftphonePtrOutput
}

type systemlldpNetworkpolicySoftphonePtrType SystemlldpNetworkpolicySoftphoneArgs

func SystemlldpNetworkpolicySoftphonePtr(v *SystemlldpNetworkpolicySoftphoneArgs) SystemlldpNetworkpolicySoftphonePtrInput {
	return (*systemlldpNetworkpolicySoftphonePtrType)(v)
}

func (*systemlldpNetworkpolicySoftphonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicySoftphone)(nil)).Elem()
}

func (i *systemlldpNetworkpolicySoftphonePtrType) ToSystemlldpNetworkpolicySoftphonePtrOutput() SystemlldpNetworkpolicySoftphonePtrOutput {
	return i.ToSystemlldpNetworkpolicySoftphonePtrOutputWithContext(context.Background())
}

func (i *systemlldpNetworkpolicySoftphonePtrType) ToSystemlldpNetworkpolicySoftphonePtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicySoftphonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicySoftphonePtrOutput)
}

type SystemlldpNetworkpolicySoftphoneOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicySoftphoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicySoftphone)(nil)).Elem()
}

func (o SystemlldpNetworkpolicySoftphoneOutput) ToSystemlldpNetworkpolicySoftphoneOutput() SystemlldpNetworkpolicySoftphoneOutput {
	return o
}

func (o SystemlldpNetworkpolicySoftphoneOutput) ToSystemlldpNetworkpolicySoftphoneOutputWithContext(ctx context.Context) SystemlldpNetworkpolicySoftphoneOutput {
	return o
}

func (o SystemlldpNetworkpolicySoftphoneOutput) ToSystemlldpNetworkpolicySoftphonePtrOutput() SystemlldpNetworkpolicySoftphonePtrOutput {
	return o.ToSystemlldpNetworkpolicySoftphonePtrOutputWithContext(context.Background())
}

func (o SystemlldpNetworkpolicySoftphoneOutput) ToSystemlldpNetworkpolicySoftphonePtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicySoftphonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemlldpNetworkpolicySoftphone) *SystemlldpNetworkpolicySoftphone {
		return &v
	}).(SystemlldpNetworkpolicySoftphonePtrOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicySoftphoneOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicySoftphone) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicySoftphoneOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicySoftphone) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicySoftphoneOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicySoftphone) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicySoftphoneOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicySoftphone) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicySoftphoneOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicySoftphone) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicySoftphonePtrOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicySoftphonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicySoftphone)(nil)).Elem()
}

func (o SystemlldpNetworkpolicySoftphonePtrOutput) ToSystemlldpNetworkpolicySoftphonePtrOutput() SystemlldpNetworkpolicySoftphonePtrOutput {
	return o
}

func (o SystemlldpNetworkpolicySoftphonePtrOutput) ToSystemlldpNetworkpolicySoftphonePtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicySoftphonePtrOutput {
	return o
}

func (o SystemlldpNetworkpolicySoftphonePtrOutput) Elem() SystemlldpNetworkpolicySoftphoneOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicySoftphone) SystemlldpNetworkpolicySoftphone {
		if v != nil {
			return *v
		}
		var ret SystemlldpNetworkpolicySoftphone
		return ret
	}).(SystemlldpNetworkpolicySoftphoneOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicySoftphonePtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicySoftphone) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicySoftphonePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicySoftphone) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicySoftphonePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicySoftphone) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicySoftphonePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicySoftphone) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicySoftphonePtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicySoftphone) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyStreamingVideo struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp *int `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority *int `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag *string `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan *int `pulumi:"vlan"`
}

// SystemlldpNetworkpolicyStreamingVideoInput is an input type that accepts SystemlldpNetworkpolicyStreamingVideoArgs and SystemlldpNetworkpolicyStreamingVideoOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyStreamingVideoInput` via:
//
//	SystemlldpNetworkpolicyStreamingVideoArgs{...}
type SystemlldpNetworkpolicyStreamingVideoInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyStreamingVideoOutput() SystemlldpNetworkpolicyStreamingVideoOutput
	ToSystemlldpNetworkpolicyStreamingVideoOutputWithContext(context.Context) SystemlldpNetworkpolicyStreamingVideoOutput
}

type SystemlldpNetworkpolicyStreamingVideoArgs struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (SystemlldpNetworkpolicyStreamingVideoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyStreamingVideo)(nil)).Elem()
}

func (i SystemlldpNetworkpolicyStreamingVideoArgs) ToSystemlldpNetworkpolicyStreamingVideoOutput() SystemlldpNetworkpolicyStreamingVideoOutput {
	return i.ToSystemlldpNetworkpolicyStreamingVideoOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyStreamingVideoArgs) ToSystemlldpNetworkpolicyStreamingVideoOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyStreamingVideoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyStreamingVideoOutput)
}

func (i SystemlldpNetworkpolicyStreamingVideoArgs) ToSystemlldpNetworkpolicyStreamingVideoPtrOutput() SystemlldpNetworkpolicyStreamingVideoPtrOutput {
	return i.ToSystemlldpNetworkpolicyStreamingVideoPtrOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyStreamingVideoArgs) ToSystemlldpNetworkpolicyStreamingVideoPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyStreamingVideoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyStreamingVideoOutput).ToSystemlldpNetworkpolicyStreamingVideoPtrOutputWithContext(ctx)
}

// SystemlldpNetworkpolicyStreamingVideoPtrInput is an input type that accepts SystemlldpNetworkpolicyStreamingVideoArgs, SystemlldpNetworkpolicyStreamingVideoPtr and SystemlldpNetworkpolicyStreamingVideoPtrOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyStreamingVideoPtrInput` via:
//
//	        SystemlldpNetworkpolicyStreamingVideoArgs{...}
//
//	or:
//
//	        nil
type SystemlldpNetworkpolicyStreamingVideoPtrInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyStreamingVideoPtrOutput() SystemlldpNetworkpolicyStreamingVideoPtrOutput
	ToSystemlldpNetworkpolicyStreamingVideoPtrOutputWithContext(context.Context) SystemlldpNetworkpolicyStreamingVideoPtrOutput
}

type systemlldpNetworkpolicyStreamingVideoPtrType SystemlldpNetworkpolicyStreamingVideoArgs

func SystemlldpNetworkpolicyStreamingVideoPtr(v *SystemlldpNetworkpolicyStreamingVideoArgs) SystemlldpNetworkpolicyStreamingVideoPtrInput {
	return (*systemlldpNetworkpolicyStreamingVideoPtrType)(v)
}

func (*systemlldpNetworkpolicyStreamingVideoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyStreamingVideo)(nil)).Elem()
}

func (i *systemlldpNetworkpolicyStreamingVideoPtrType) ToSystemlldpNetworkpolicyStreamingVideoPtrOutput() SystemlldpNetworkpolicyStreamingVideoPtrOutput {
	return i.ToSystemlldpNetworkpolicyStreamingVideoPtrOutputWithContext(context.Background())
}

func (i *systemlldpNetworkpolicyStreamingVideoPtrType) ToSystemlldpNetworkpolicyStreamingVideoPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyStreamingVideoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyStreamingVideoPtrOutput)
}

type SystemlldpNetworkpolicyStreamingVideoOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyStreamingVideoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyStreamingVideo)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyStreamingVideoOutput) ToSystemlldpNetworkpolicyStreamingVideoOutput() SystemlldpNetworkpolicyStreamingVideoOutput {
	return o
}

func (o SystemlldpNetworkpolicyStreamingVideoOutput) ToSystemlldpNetworkpolicyStreamingVideoOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyStreamingVideoOutput {
	return o
}

func (o SystemlldpNetworkpolicyStreamingVideoOutput) ToSystemlldpNetworkpolicyStreamingVideoPtrOutput() SystemlldpNetworkpolicyStreamingVideoPtrOutput {
	return o.ToSystemlldpNetworkpolicyStreamingVideoPtrOutputWithContext(context.Background())
}

func (o SystemlldpNetworkpolicyStreamingVideoOutput) ToSystemlldpNetworkpolicyStreamingVideoPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyStreamingVideoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemlldpNetworkpolicyStreamingVideo) *SystemlldpNetworkpolicyStreamingVideo {
		return &v
	}).(SystemlldpNetworkpolicyStreamingVideoPtrOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyStreamingVideoOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyStreamingVideo) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyStreamingVideoOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyStreamingVideo) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyStreamingVideoOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyStreamingVideo) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyStreamingVideoOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyStreamingVideo) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyStreamingVideoOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyStreamingVideo) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyStreamingVideoPtrOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyStreamingVideoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyStreamingVideo)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyStreamingVideoPtrOutput) ToSystemlldpNetworkpolicyStreamingVideoPtrOutput() SystemlldpNetworkpolicyStreamingVideoPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyStreamingVideoPtrOutput) ToSystemlldpNetworkpolicyStreamingVideoPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyStreamingVideoPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyStreamingVideoPtrOutput) Elem() SystemlldpNetworkpolicyStreamingVideoOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyStreamingVideo) SystemlldpNetworkpolicyStreamingVideo {
		if v != nil {
			return *v
		}
		var ret SystemlldpNetworkpolicyStreamingVideo
		return ret
	}).(SystemlldpNetworkpolicyStreamingVideoOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyStreamingVideoPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyStreamingVideo) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyStreamingVideoPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyStreamingVideo) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyStreamingVideoPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyStreamingVideo) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyStreamingVideoPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyStreamingVideo) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyStreamingVideoPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyStreamingVideo) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyVideoConferencing struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp *int `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority *int `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag *string `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan *int `pulumi:"vlan"`
}

// SystemlldpNetworkpolicyVideoConferencingInput is an input type that accepts SystemlldpNetworkpolicyVideoConferencingArgs and SystemlldpNetworkpolicyVideoConferencingOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyVideoConferencingInput` via:
//
//	SystemlldpNetworkpolicyVideoConferencingArgs{...}
type SystemlldpNetworkpolicyVideoConferencingInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyVideoConferencingOutput() SystemlldpNetworkpolicyVideoConferencingOutput
	ToSystemlldpNetworkpolicyVideoConferencingOutputWithContext(context.Context) SystemlldpNetworkpolicyVideoConferencingOutput
}

type SystemlldpNetworkpolicyVideoConferencingArgs struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (SystemlldpNetworkpolicyVideoConferencingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyVideoConferencing)(nil)).Elem()
}

func (i SystemlldpNetworkpolicyVideoConferencingArgs) ToSystemlldpNetworkpolicyVideoConferencingOutput() SystemlldpNetworkpolicyVideoConferencingOutput {
	return i.ToSystemlldpNetworkpolicyVideoConferencingOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyVideoConferencingArgs) ToSystemlldpNetworkpolicyVideoConferencingOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoConferencingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVideoConferencingOutput)
}

func (i SystemlldpNetworkpolicyVideoConferencingArgs) ToSystemlldpNetworkpolicyVideoConferencingPtrOutput() SystemlldpNetworkpolicyVideoConferencingPtrOutput {
	return i.ToSystemlldpNetworkpolicyVideoConferencingPtrOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyVideoConferencingArgs) ToSystemlldpNetworkpolicyVideoConferencingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoConferencingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVideoConferencingOutput).ToSystemlldpNetworkpolicyVideoConferencingPtrOutputWithContext(ctx)
}

// SystemlldpNetworkpolicyVideoConferencingPtrInput is an input type that accepts SystemlldpNetworkpolicyVideoConferencingArgs, SystemlldpNetworkpolicyVideoConferencingPtr and SystemlldpNetworkpolicyVideoConferencingPtrOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyVideoConferencingPtrInput` via:
//
//	        SystemlldpNetworkpolicyVideoConferencingArgs{...}
//
//	or:
//
//	        nil
type SystemlldpNetworkpolicyVideoConferencingPtrInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyVideoConferencingPtrOutput() SystemlldpNetworkpolicyVideoConferencingPtrOutput
	ToSystemlldpNetworkpolicyVideoConferencingPtrOutputWithContext(context.Context) SystemlldpNetworkpolicyVideoConferencingPtrOutput
}

type systemlldpNetworkpolicyVideoConferencingPtrType SystemlldpNetworkpolicyVideoConferencingArgs

func SystemlldpNetworkpolicyVideoConferencingPtr(v *SystemlldpNetworkpolicyVideoConferencingArgs) SystemlldpNetworkpolicyVideoConferencingPtrInput {
	return (*systemlldpNetworkpolicyVideoConferencingPtrType)(v)
}

func (*systemlldpNetworkpolicyVideoConferencingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyVideoConferencing)(nil)).Elem()
}

func (i *systemlldpNetworkpolicyVideoConferencingPtrType) ToSystemlldpNetworkpolicyVideoConferencingPtrOutput() SystemlldpNetworkpolicyVideoConferencingPtrOutput {
	return i.ToSystemlldpNetworkpolicyVideoConferencingPtrOutputWithContext(context.Background())
}

func (i *systemlldpNetworkpolicyVideoConferencingPtrType) ToSystemlldpNetworkpolicyVideoConferencingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoConferencingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVideoConferencingPtrOutput)
}

type SystemlldpNetworkpolicyVideoConferencingOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyVideoConferencingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyVideoConferencing)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyVideoConferencingOutput) ToSystemlldpNetworkpolicyVideoConferencingOutput() SystemlldpNetworkpolicyVideoConferencingOutput {
	return o
}

func (o SystemlldpNetworkpolicyVideoConferencingOutput) ToSystemlldpNetworkpolicyVideoConferencingOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoConferencingOutput {
	return o
}

func (o SystemlldpNetworkpolicyVideoConferencingOutput) ToSystemlldpNetworkpolicyVideoConferencingPtrOutput() SystemlldpNetworkpolicyVideoConferencingPtrOutput {
	return o.ToSystemlldpNetworkpolicyVideoConferencingPtrOutputWithContext(context.Background())
}

func (o SystemlldpNetworkpolicyVideoConferencingOutput) ToSystemlldpNetworkpolicyVideoConferencingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoConferencingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemlldpNetworkpolicyVideoConferencing) *SystemlldpNetworkpolicyVideoConferencing {
		return &v
	}).(SystemlldpNetworkpolicyVideoConferencingPtrOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyVideoConferencingOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVideoConferencing) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyVideoConferencingOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVideoConferencing) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyVideoConferencingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVideoConferencing) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyVideoConferencingOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVideoConferencing) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyVideoConferencingOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVideoConferencing) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyVideoConferencingPtrOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyVideoConferencingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyVideoConferencing)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyVideoConferencingPtrOutput) ToSystemlldpNetworkpolicyVideoConferencingPtrOutput() SystemlldpNetworkpolicyVideoConferencingPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyVideoConferencingPtrOutput) ToSystemlldpNetworkpolicyVideoConferencingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoConferencingPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyVideoConferencingPtrOutput) Elem() SystemlldpNetworkpolicyVideoConferencingOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoConferencing) SystemlldpNetworkpolicyVideoConferencing {
		if v != nil {
			return *v
		}
		var ret SystemlldpNetworkpolicyVideoConferencing
		return ret
	}).(SystemlldpNetworkpolicyVideoConferencingOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyVideoConferencingPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoConferencing) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyVideoConferencingPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoConferencing) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyVideoConferencingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoConferencing) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyVideoConferencingPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoConferencing) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyVideoConferencingPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoConferencing) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyVideoSignaling struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp *int `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority *int `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag *string `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan *int `pulumi:"vlan"`
}

// SystemlldpNetworkpolicyVideoSignalingInput is an input type that accepts SystemlldpNetworkpolicyVideoSignalingArgs and SystemlldpNetworkpolicyVideoSignalingOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyVideoSignalingInput` via:
//
//	SystemlldpNetworkpolicyVideoSignalingArgs{...}
type SystemlldpNetworkpolicyVideoSignalingInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyVideoSignalingOutput() SystemlldpNetworkpolicyVideoSignalingOutput
	ToSystemlldpNetworkpolicyVideoSignalingOutputWithContext(context.Context) SystemlldpNetworkpolicyVideoSignalingOutput
}

type SystemlldpNetworkpolicyVideoSignalingArgs struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (SystemlldpNetworkpolicyVideoSignalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyVideoSignaling)(nil)).Elem()
}

func (i SystemlldpNetworkpolicyVideoSignalingArgs) ToSystemlldpNetworkpolicyVideoSignalingOutput() SystemlldpNetworkpolicyVideoSignalingOutput {
	return i.ToSystemlldpNetworkpolicyVideoSignalingOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyVideoSignalingArgs) ToSystemlldpNetworkpolicyVideoSignalingOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoSignalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVideoSignalingOutput)
}

func (i SystemlldpNetworkpolicyVideoSignalingArgs) ToSystemlldpNetworkpolicyVideoSignalingPtrOutput() SystemlldpNetworkpolicyVideoSignalingPtrOutput {
	return i.ToSystemlldpNetworkpolicyVideoSignalingPtrOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyVideoSignalingArgs) ToSystemlldpNetworkpolicyVideoSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVideoSignalingOutput).ToSystemlldpNetworkpolicyVideoSignalingPtrOutputWithContext(ctx)
}

// SystemlldpNetworkpolicyVideoSignalingPtrInput is an input type that accepts SystemlldpNetworkpolicyVideoSignalingArgs, SystemlldpNetworkpolicyVideoSignalingPtr and SystemlldpNetworkpolicyVideoSignalingPtrOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyVideoSignalingPtrInput` via:
//
//	        SystemlldpNetworkpolicyVideoSignalingArgs{...}
//
//	or:
//
//	        nil
type SystemlldpNetworkpolicyVideoSignalingPtrInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyVideoSignalingPtrOutput() SystemlldpNetworkpolicyVideoSignalingPtrOutput
	ToSystemlldpNetworkpolicyVideoSignalingPtrOutputWithContext(context.Context) SystemlldpNetworkpolicyVideoSignalingPtrOutput
}

type systemlldpNetworkpolicyVideoSignalingPtrType SystemlldpNetworkpolicyVideoSignalingArgs

func SystemlldpNetworkpolicyVideoSignalingPtr(v *SystemlldpNetworkpolicyVideoSignalingArgs) SystemlldpNetworkpolicyVideoSignalingPtrInput {
	return (*systemlldpNetworkpolicyVideoSignalingPtrType)(v)
}

func (*systemlldpNetworkpolicyVideoSignalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyVideoSignaling)(nil)).Elem()
}

func (i *systemlldpNetworkpolicyVideoSignalingPtrType) ToSystemlldpNetworkpolicyVideoSignalingPtrOutput() SystemlldpNetworkpolicyVideoSignalingPtrOutput {
	return i.ToSystemlldpNetworkpolicyVideoSignalingPtrOutputWithContext(context.Background())
}

func (i *systemlldpNetworkpolicyVideoSignalingPtrType) ToSystemlldpNetworkpolicyVideoSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVideoSignalingPtrOutput)
}

type SystemlldpNetworkpolicyVideoSignalingOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyVideoSignalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyVideoSignaling)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyVideoSignalingOutput) ToSystemlldpNetworkpolicyVideoSignalingOutput() SystemlldpNetworkpolicyVideoSignalingOutput {
	return o
}

func (o SystemlldpNetworkpolicyVideoSignalingOutput) ToSystemlldpNetworkpolicyVideoSignalingOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoSignalingOutput {
	return o
}

func (o SystemlldpNetworkpolicyVideoSignalingOutput) ToSystemlldpNetworkpolicyVideoSignalingPtrOutput() SystemlldpNetworkpolicyVideoSignalingPtrOutput {
	return o.ToSystemlldpNetworkpolicyVideoSignalingPtrOutputWithContext(context.Background())
}

func (o SystemlldpNetworkpolicyVideoSignalingOutput) ToSystemlldpNetworkpolicyVideoSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoSignalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemlldpNetworkpolicyVideoSignaling) *SystemlldpNetworkpolicyVideoSignaling {
		return &v
	}).(SystemlldpNetworkpolicyVideoSignalingPtrOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyVideoSignalingOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVideoSignaling) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyVideoSignalingOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVideoSignaling) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyVideoSignalingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVideoSignaling) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyVideoSignalingOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVideoSignaling) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyVideoSignalingOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVideoSignaling) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyVideoSignalingPtrOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyVideoSignalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyVideoSignaling)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyVideoSignalingPtrOutput) ToSystemlldpNetworkpolicyVideoSignalingPtrOutput() SystemlldpNetworkpolicyVideoSignalingPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyVideoSignalingPtrOutput) ToSystemlldpNetworkpolicyVideoSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVideoSignalingPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyVideoSignalingPtrOutput) Elem() SystemlldpNetworkpolicyVideoSignalingOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoSignaling) SystemlldpNetworkpolicyVideoSignaling {
		if v != nil {
			return *v
		}
		var ret SystemlldpNetworkpolicyVideoSignaling
		return ret
	}).(SystemlldpNetworkpolicyVideoSignalingOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyVideoSignalingPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyVideoSignalingPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyVideoSignalingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyVideoSignalingPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyVideoSignalingPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVideoSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyVoice struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp *int `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority *int `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag *string `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan *int `pulumi:"vlan"`
}

// SystemlldpNetworkpolicyVoiceInput is an input type that accepts SystemlldpNetworkpolicyVoiceArgs and SystemlldpNetworkpolicyVoiceOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyVoiceInput` via:
//
//	SystemlldpNetworkpolicyVoiceArgs{...}
type SystemlldpNetworkpolicyVoiceInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyVoiceOutput() SystemlldpNetworkpolicyVoiceOutput
	ToSystemlldpNetworkpolicyVoiceOutputWithContext(context.Context) SystemlldpNetworkpolicyVoiceOutput
}

type SystemlldpNetworkpolicyVoiceArgs struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (SystemlldpNetworkpolicyVoiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyVoice)(nil)).Elem()
}

func (i SystemlldpNetworkpolicyVoiceArgs) ToSystemlldpNetworkpolicyVoiceOutput() SystemlldpNetworkpolicyVoiceOutput {
	return i.ToSystemlldpNetworkpolicyVoiceOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyVoiceArgs) ToSystemlldpNetworkpolicyVoiceOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVoiceOutput)
}

func (i SystemlldpNetworkpolicyVoiceArgs) ToSystemlldpNetworkpolicyVoicePtrOutput() SystemlldpNetworkpolicyVoicePtrOutput {
	return i.ToSystemlldpNetworkpolicyVoicePtrOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyVoiceArgs) ToSystemlldpNetworkpolicyVoicePtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVoiceOutput).ToSystemlldpNetworkpolicyVoicePtrOutputWithContext(ctx)
}

// SystemlldpNetworkpolicyVoicePtrInput is an input type that accepts SystemlldpNetworkpolicyVoiceArgs, SystemlldpNetworkpolicyVoicePtr and SystemlldpNetworkpolicyVoicePtrOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyVoicePtrInput` via:
//
//	        SystemlldpNetworkpolicyVoiceArgs{...}
//
//	or:
//
//	        nil
type SystemlldpNetworkpolicyVoicePtrInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyVoicePtrOutput() SystemlldpNetworkpolicyVoicePtrOutput
	ToSystemlldpNetworkpolicyVoicePtrOutputWithContext(context.Context) SystemlldpNetworkpolicyVoicePtrOutput
}

type systemlldpNetworkpolicyVoicePtrType SystemlldpNetworkpolicyVoiceArgs

func SystemlldpNetworkpolicyVoicePtr(v *SystemlldpNetworkpolicyVoiceArgs) SystemlldpNetworkpolicyVoicePtrInput {
	return (*systemlldpNetworkpolicyVoicePtrType)(v)
}

func (*systemlldpNetworkpolicyVoicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyVoice)(nil)).Elem()
}

func (i *systemlldpNetworkpolicyVoicePtrType) ToSystemlldpNetworkpolicyVoicePtrOutput() SystemlldpNetworkpolicyVoicePtrOutput {
	return i.ToSystemlldpNetworkpolicyVoicePtrOutputWithContext(context.Background())
}

func (i *systemlldpNetworkpolicyVoicePtrType) ToSystemlldpNetworkpolicyVoicePtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVoicePtrOutput)
}

type SystemlldpNetworkpolicyVoiceOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyVoiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyVoice)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyVoiceOutput) ToSystemlldpNetworkpolicyVoiceOutput() SystemlldpNetworkpolicyVoiceOutput {
	return o
}

func (o SystemlldpNetworkpolicyVoiceOutput) ToSystemlldpNetworkpolicyVoiceOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoiceOutput {
	return o
}

func (o SystemlldpNetworkpolicyVoiceOutput) ToSystemlldpNetworkpolicyVoicePtrOutput() SystemlldpNetworkpolicyVoicePtrOutput {
	return o.ToSystemlldpNetworkpolicyVoicePtrOutputWithContext(context.Background())
}

func (o SystemlldpNetworkpolicyVoiceOutput) ToSystemlldpNetworkpolicyVoicePtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemlldpNetworkpolicyVoice) *SystemlldpNetworkpolicyVoice {
		return &v
	}).(SystemlldpNetworkpolicyVoicePtrOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyVoiceOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVoice) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyVoiceOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVoice) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyVoiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVoice) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyVoiceOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVoice) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyVoiceOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVoice) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyVoicePtrOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyVoicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyVoice)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyVoicePtrOutput) ToSystemlldpNetworkpolicyVoicePtrOutput() SystemlldpNetworkpolicyVoicePtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyVoicePtrOutput) ToSystemlldpNetworkpolicyVoicePtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoicePtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyVoicePtrOutput) Elem() SystemlldpNetworkpolicyVoiceOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoice) SystemlldpNetworkpolicyVoice {
		if v != nil {
			return *v
		}
		var ret SystemlldpNetworkpolicyVoice
		return ret
	}).(SystemlldpNetworkpolicyVoiceOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyVoicePtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoice) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyVoicePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoice) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyVoicePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoice) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyVoicePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoice) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyVoicePtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoice) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyVoiceSignaling struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp *int `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority *int `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag *string `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan *int `pulumi:"vlan"`
}

// SystemlldpNetworkpolicyVoiceSignalingInput is an input type that accepts SystemlldpNetworkpolicyVoiceSignalingArgs and SystemlldpNetworkpolicyVoiceSignalingOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyVoiceSignalingInput` via:
//
//	SystemlldpNetworkpolicyVoiceSignalingArgs{...}
type SystemlldpNetworkpolicyVoiceSignalingInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyVoiceSignalingOutput() SystemlldpNetworkpolicyVoiceSignalingOutput
	ToSystemlldpNetworkpolicyVoiceSignalingOutputWithContext(context.Context) SystemlldpNetworkpolicyVoiceSignalingOutput
}

type SystemlldpNetworkpolicyVoiceSignalingArgs struct {
	// Differentiated Services Code Point (DSCP) value to advertise.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// 802.1Q VLAN ID to advertise (1 - 4094).
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (SystemlldpNetworkpolicyVoiceSignalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyVoiceSignaling)(nil)).Elem()
}

func (i SystemlldpNetworkpolicyVoiceSignalingArgs) ToSystemlldpNetworkpolicyVoiceSignalingOutput() SystemlldpNetworkpolicyVoiceSignalingOutput {
	return i.ToSystemlldpNetworkpolicyVoiceSignalingOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyVoiceSignalingArgs) ToSystemlldpNetworkpolicyVoiceSignalingOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoiceSignalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVoiceSignalingOutput)
}

func (i SystemlldpNetworkpolicyVoiceSignalingArgs) ToSystemlldpNetworkpolicyVoiceSignalingPtrOutput() SystemlldpNetworkpolicyVoiceSignalingPtrOutput {
	return i.ToSystemlldpNetworkpolicyVoiceSignalingPtrOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyVoiceSignalingArgs) ToSystemlldpNetworkpolicyVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoiceSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVoiceSignalingOutput).ToSystemlldpNetworkpolicyVoiceSignalingPtrOutputWithContext(ctx)
}

// SystemlldpNetworkpolicyVoiceSignalingPtrInput is an input type that accepts SystemlldpNetworkpolicyVoiceSignalingArgs, SystemlldpNetworkpolicyVoiceSignalingPtr and SystemlldpNetworkpolicyVoiceSignalingPtrOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyVoiceSignalingPtrInput` via:
//
//	        SystemlldpNetworkpolicyVoiceSignalingArgs{...}
//
//	or:
//
//	        nil
type SystemlldpNetworkpolicyVoiceSignalingPtrInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyVoiceSignalingPtrOutput() SystemlldpNetworkpolicyVoiceSignalingPtrOutput
	ToSystemlldpNetworkpolicyVoiceSignalingPtrOutputWithContext(context.Context) SystemlldpNetworkpolicyVoiceSignalingPtrOutput
}

type systemlldpNetworkpolicyVoiceSignalingPtrType SystemlldpNetworkpolicyVoiceSignalingArgs

func SystemlldpNetworkpolicyVoiceSignalingPtr(v *SystemlldpNetworkpolicyVoiceSignalingArgs) SystemlldpNetworkpolicyVoiceSignalingPtrInput {
	return (*systemlldpNetworkpolicyVoiceSignalingPtrType)(v)
}

func (*systemlldpNetworkpolicyVoiceSignalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyVoiceSignaling)(nil)).Elem()
}

func (i *systemlldpNetworkpolicyVoiceSignalingPtrType) ToSystemlldpNetworkpolicyVoiceSignalingPtrOutput() SystemlldpNetworkpolicyVoiceSignalingPtrOutput {
	return i.ToSystemlldpNetworkpolicyVoiceSignalingPtrOutputWithContext(context.Background())
}

func (i *systemlldpNetworkpolicyVoiceSignalingPtrType) ToSystemlldpNetworkpolicyVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoiceSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyVoiceSignalingPtrOutput)
}

type SystemlldpNetworkpolicyVoiceSignalingOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyVoiceSignalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemlldpNetworkpolicyVoiceSignaling)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyVoiceSignalingOutput) ToSystemlldpNetworkpolicyVoiceSignalingOutput() SystemlldpNetworkpolicyVoiceSignalingOutput {
	return o
}

func (o SystemlldpNetworkpolicyVoiceSignalingOutput) ToSystemlldpNetworkpolicyVoiceSignalingOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoiceSignalingOutput {
	return o
}

func (o SystemlldpNetworkpolicyVoiceSignalingOutput) ToSystemlldpNetworkpolicyVoiceSignalingPtrOutput() SystemlldpNetworkpolicyVoiceSignalingPtrOutput {
	return o.ToSystemlldpNetworkpolicyVoiceSignalingPtrOutputWithContext(context.Background())
}

func (o SystemlldpNetworkpolicyVoiceSignalingOutput) ToSystemlldpNetworkpolicyVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoiceSignalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemlldpNetworkpolicyVoiceSignaling) *SystemlldpNetworkpolicyVoiceSignaling {
		return &v
	}).(SystemlldpNetworkpolicyVoiceSignalingPtrOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyVoiceSignalingOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVoiceSignaling) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyVoiceSignalingOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVoiceSignaling) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyVoiceSignalingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVoiceSignaling) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyVoiceSignalingOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVoiceSignaling) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyVoiceSignalingOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemlldpNetworkpolicyVoiceSignaling) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemlldpNetworkpolicyVoiceSignalingPtrOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyVoiceSignalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicyVoiceSignaling)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyVoiceSignalingPtrOutput) ToSystemlldpNetworkpolicyVoiceSignalingPtrOutput() SystemlldpNetworkpolicyVoiceSignalingPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyVoiceSignalingPtrOutput) ToSystemlldpNetworkpolicyVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyVoiceSignalingPtrOutput {
	return o
}

func (o SystemlldpNetworkpolicyVoiceSignalingPtrOutput) Elem() SystemlldpNetworkpolicyVoiceSignalingOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoiceSignaling) SystemlldpNetworkpolicyVoiceSignaling {
		if v != nil {
			return *v
		}
		var ret SystemlldpNetworkpolicyVoiceSignaling
		return ret
	}).(SystemlldpNetworkpolicyVoiceSignalingOutput)
}

// Differentiated Services Code Point (DSCP) value to advertise.
func (o SystemlldpNetworkpolicyVoiceSignalingPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

// 802.1P CoS/PCP to advertise (0 - 7; from lowest to highest priority).
func (o SystemlldpNetworkpolicyVoiceSignalingPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Enable/disable advertising this policy. Valid values: `disable`, `enable`.
func (o SystemlldpNetworkpolicyVoiceSignalingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoiceSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Advertise tagged or untagged traffic. Valid values: `none`, `dot1q`, `dot1p`.
func (o SystemlldpNetworkpolicyVoiceSignalingPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoiceSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// 802.1Q VLAN ID to advertise (1 - 4094).
func (o SystemlldpNetworkpolicyVoiceSignalingPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicyVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemsnmpCommunityHost struct {
	// Enable/disable direct management of HA cluster members. Valid values: `enable`, `disable`.
	HaDirect *string `pulumi:"haDirect"`
	// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both. Valid values: `any`, `query`, `trap`.
	HostType *string `pulumi:"hostType"`
	// Host6 entry ID.
	Id *int `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip *string `pulumi:"ip"`
	// Source IPv4 address for SNMP traps.
	SourceIp *string `pulumi:"sourceIp"`
}

// SystemsnmpCommunityHostInput is an input type that accepts SystemsnmpCommunityHostArgs and SystemsnmpCommunityHostOutput values.
// You can construct a concrete instance of `SystemsnmpCommunityHostInput` via:
//
//	SystemsnmpCommunityHostArgs{...}
type SystemsnmpCommunityHostInput interface {
	pulumi.Input

	ToSystemsnmpCommunityHostOutput() SystemsnmpCommunityHostOutput
	ToSystemsnmpCommunityHostOutputWithContext(context.Context) SystemsnmpCommunityHostOutput
}

type SystemsnmpCommunityHostArgs struct {
	// Enable/disable direct management of HA cluster members. Valid values: `enable`, `disable`.
	HaDirect pulumi.StringPtrInput `pulumi:"haDirect"`
	// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both. Valid values: `any`, `query`, `trap`.
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// Host6 entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 address of the SNMP manager (host).
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Source IPv4 address for SNMP traps.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
}

func (SystemsnmpCommunityHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemsnmpCommunityHost)(nil)).Elem()
}

func (i SystemsnmpCommunityHostArgs) ToSystemsnmpCommunityHostOutput() SystemsnmpCommunityHostOutput {
	return i.ToSystemsnmpCommunityHostOutputWithContext(context.Background())
}

func (i SystemsnmpCommunityHostArgs) ToSystemsnmpCommunityHostOutputWithContext(ctx context.Context) SystemsnmpCommunityHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpCommunityHostOutput)
}

// SystemsnmpCommunityHostArrayInput is an input type that accepts SystemsnmpCommunityHostArray and SystemsnmpCommunityHostArrayOutput values.
// You can construct a concrete instance of `SystemsnmpCommunityHostArrayInput` via:
//
//	SystemsnmpCommunityHostArray{ SystemsnmpCommunityHostArgs{...} }
type SystemsnmpCommunityHostArrayInput interface {
	pulumi.Input

	ToSystemsnmpCommunityHostArrayOutput() SystemsnmpCommunityHostArrayOutput
	ToSystemsnmpCommunityHostArrayOutputWithContext(context.Context) SystemsnmpCommunityHostArrayOutput
}

type SystemsnmpCommunityHostArray []SystemsnmpCommunityHostInput

func (SystemsnmpCommunityHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemsnmpCommunityHost)(nil)).Elem()
}

func (i SystemsnmpCommunityHostArray) ToSystemsnmpCommunityHostArrayOutput() SystemsnmpCommunityHostArrayOutput {
	return i.ToSystemsnmpCommunityHostArrayOutputWithContext(context.Background())
}

func (i SystemsnmpCommunityHostArray) ToSystemsnmpCommunityHostArrayOutputWithContext(ctx context.Context) SystemsnmpCommunityHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpCommunityHostArrayOutput)
}

type SystemsnmpCommunityHostOutput struct{ *pulumi.OutputState }

func (SystemsnmpCommunityHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemsnmpCommunityHost)(nil)).Elem()
}

func (o SystemsnmpCommunityHostOutput) ToSystemsnmpCommunityHostOutput() SystemsnmpCommunityHostOutput {
	return o
}

func (o SystemsnmpCommunityHostOutput) ToSystemsnmpCommunityHostOutputWithContext(ctx context.Context) SystemsnmpCommunityHostOutput {
	return o
}

// Enable/disable direct management of HA cluster members. Valid values: `enable`, `disable`.
func (o SystemsnmpCommunityHostOutput) HaDirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityHost) *string { return v.HaDirect }).(pulumi.StringPtrOutput)
}

// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both. Valid values: `any`, `query`, `trap`.
func (o SystemsnmpCommunityHostOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityHost) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Host6 entry ID.
func (o SystemsnmpCommunityHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 address of the SNMP manager (host).
func (o SystemsnmpCommunityHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Source IPv4 address for SNMP traps.
func (o SystemsnmpCommunityHostOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityHost) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

type SystemsnmpCommunityHostArrayOutput struct{ *pulumi.OutputState }

func (SystemsnmpCommunityHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemsnmpCommunityHost)(nil)).Elem()
}

func (o SystemsnmpCommunityHostArrayOutput) ToSystemsnmpCommunityHostArrayOutput() SystemsnmpCommunityHostArrayOutput {
	return o
}

func (o SystemsnmpCommunityHostArrayOutput) ToSystemsnmpCommunityHostArrayOutputWithContext(ctx context.Context) SystemsnmpCommunityHostArrayOutput {
	return o
}

func (o SystemsnmpCommunityHostArrayOutput) Index(i pulumi.IntInput) SystemsnmpCommunityHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemsnmpCommunityHost {
		return vs[0].([]SystemsnmpCommunityHost)[vs[1].(int)]
	}).(SystemsnmpCommunityHostOutput)
}

type SystemsnmpCommunityHosts6 struct {
	// Enable/disable direct management of HA cluster members. Valid values: `enable`, `disable`.
	HaDirect *string `pulumi:"haDirect"`
	// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both. Valid values: `any`, `query`, `trap`.
	//
	// The `hosts6` block supports:
	HostType *string `pulumi:"hostType"`
	// Host entry ID.
	Id *int `pulumi:"id"`
	// SNMP manager IPv6 address prefix.
	Ipv6 *string `pulumi:"ipv6"`
	// Source IPv6 address for SNMP traps.
	SourceIpv6 *string `pulumi:"sourceIpv6"`
}

// SystemsnmpCommunityHosts6Input is an input type that accepts SystemsnmpCommunityHosts6Args and SystemsnmpCommunityHosts6Output values.
// You can construct a concrete instance of `SystemsnmpCommunityHosts6Input` via:
//
//	SystemsnmpCommunityHosts6Args{...}
type SystemsnmpCommunityHosts6Input interface {
	pulumi.Input

	ToSystemsnmpCommunityHosts6Output() SystemsnmpCommunityHosts6Output
	ToSystemsnmpCommunityHosts6OutputWithContext(context.Context) SystemsnmpCommunityHosts6Output
}

type SystemsnmpCommunityHosts6Args struct {
	// Enable/disable direct management of HA cluster members. Valid values: `enable`, `disable`.
	HaDirect pulumi.StringPtrInput `pulumi:"haDirect"`
	// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both. Valid values: `any`, `query`, `trap`.
	//
	// The `hosts6` block supports:
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// Host entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// SNMP manager IPv6 address prefix.
	Ipv6 pulumi.StringPtrInput `pulumi:"ipv6"`
	// Source IPv6 address for SNMP traps.
	SourceIpv6 pulumi.StringPtrInput `pulumi:"sourceIpv6"`
}

func (SystemsnmpCommunityHosts6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemsnmpCommunityHosts6)(nil)).Elem()
}

func (i SystemsnmpCommunityHosts6Args) ToSystemsnmpCommunityHosts6Output() SystemsnmpCommunityHosts6Output {
	return i.ToSystemsnmpCommunityHosts6OutputWithContext(context.Background())
}

func (i SystemsnmpCommunityHosts6Args) ToSystemsnmpCommunityHosts6OutputWithContext(ctx context.Context) SystemsnmpCommunityHosts6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpCommunityHosts6Output)
}

// SystemsnmpCommunityHosts6ArrayInput is an input type that accepts SystemsnmpCommunityHosts6Array and SystemsnmpCommunityHosts6ArrayOutput values.
// You can construct a concrete instance of `SystemsnmpCommunityHosts6ArrayInput` via:
//
//	SystemsnmpCommunityHosts6Array{ SystemsnmpCommunityHosts6Args{...} }
type SystemsnmpCommunityHosts6ArrayInput interface {
	pulumi.Input

	ToSystemsnmpCommunityHosts6ArrayOutput() SystemsnmpCommunityHosts6ArrayOutput
	ToSystemsnmpCommunityHosts6ArrayOutputWithContext(context.Context) SystemsnmpCommunityHosts6ArrayOutput
}

type SystemsnmpCommunityHosts6Array []SystemsnmpCommunityHosts6Input

func (SystemsnmpCommunityHosts6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemsnmpCommunityHosts6)(nil)).Elem()
}

func (i SystemsnmpCommunityHosts6Array) ToSystemsnmpCommunityHosts6ArrayOutput() SystemsnmpCommunityHosts6ArrayOutput {
	return i.ToSystemsnmpCommunityHosts6ArrayOutputWithContext(context.Background())
}

func (i SystemsnmpCommunityHosts6Array) ToSystemsnmpCommunityHosts6ArrayOutputWithContext(ctx context.Context) SystemsnmpCommunityHosts6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpCommunityHosts6ArrayOutput)
}

type SystemsnmpCommunityHosts6Output struct{ *pulumi.OutputState }

func (SystemsnmpCommunityHosts6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemsnmpCommunityHosts6)(nil)).Elem()
}

func (o SystemsnmpCommunityHosts6Output) ToSystemsnmpCommunityHosts6Output() SystemsnmpCommunityHosts6Output {
	return o
}

func (o SystemsnmpCommunityHosts6Output) ToSystemsnmpCommunityHosts6OutputWithContext(ctx context.Context) SystemsnmpCommunityHosts6Output {
	return o
}

// Enable/disable direct management of HA cluster members. Valid values: `enable`, `disable`.
func (o SystemsnmpCommunityHosts6Output) HaDirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityHosts6) *string { return v.HaDirect }).(pulumi.StringPtrOutput)
}

// Control whether the SNMP manager sends SNMP queries, receives SNMP traps, or both. Valid values: `any`, `query`, `trap`.
//
// The `hosts6` block supports:
func (o SystemsnmpCommunityHosts6Output) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityHosts6) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Host entry ID.
func (o SystemsnmpCommunityHosts6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityHosts6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// SNMP manager IPv6 address prefix.
func (o SystemsnmpCommunityHosts6Output) Ipv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityHosts6) *string { return v.Ipv6 }).(pulumi.StringPtrOutput)
}

// Source IPv6 address for SNMP traps.
func (o SystemsnmpCommunityHosts6Output) SourceIpv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityHosts6) *string { return v.SourceIpv6 }).(pulumi.StringPtrOutput)
}

type SystemsnmpCommunityHosts6ArrayOutput struct{ *pulumi.OutputState }

func (SystemsnmpCommunityHosts6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemsnmpCommunityHosts6)(nil)).Elem()
}

func (o SystemsnmpCommunityHosts6ArrayOutput) ToSystemsnmpCommunityHosts6ArrayOutput() SystemsnmpCommunityHosts6ArrayOutput {
	return o
}

func (o SystemsnmpCommunityHosts6ArrayOutput) ToSystemsnmpCommunityHosts6ArrayOutputWithContext(ctx context.Context) SystemsnmpCommunityHosts6ArrayOutput {
	return o
}

func (o SystemsnmpCommunityHosts6ArrayOutput) Index(i pulumi.IntInput) SystemsnmpCommunityHosts6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemsnmpCommunityHosts6 {
		return vs[0].([]SystemsnmpCommunityHosts6)[vs[1].(int)]
	}).(SystemsnmpCommunityHosts6Output)
}

type SystemsnmpCommunityVdom struct {
	// VDOM name
	Name *string `pulumi:"name"`
}

// SystemsnmpCommunityVdomInput is an input type that accepts SystemsnmpCommunityVdomArgs and SystemsnmpCommunityVdomOutput values.
// You can construct a concrete instance of `SystemsnmpCommunityVdomInput` via:
//
//	SystemsnmpCommunityVdomArgs{...}
type SystemsnmpCommunityVdomInput interface {
	pulumi.Input

	ToSystemsnmpCommunityVdomOutput() SystemsnmpCommunityVdomOutput
	ToSystemsnmpCommunityVdomOutputWithContext(context.Context) SystemsnmpCommunityVdomOutput
}

type SystemsnmpCommunityVdomArgs struct {
	// VDOM name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemsnmpCommunityVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemsnmpCommunityVdom)(nil)).Elem()
}

func (i SystemsnmpCommunityVdomArgs) ToSystemsnmpCommunityVdomOutput() SystemsnmpCommunityVdomOutput {
	return i.ToSystemsnmpCommunityVdomOutputWithContext(context.Background())
}

func (i SystemsnmpCommunityVdomArgs) ToSystemsnmpCommunityVdomOutputWithContext(ctx context.Context) SystemsnmpCommunityVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpCommunityVdomOutput)
}

// SystemsnmpCommunityVdomArrayInput is an input type that accepts SystemsnmpCommunityVdomArray and SystemsnmpCommunityVdomArrayOutput values.
// You can construct a concrete instance of `SystemsnmpCommunityVdomArrayInput` via:
//
//	SystemsnmpCommunityVdomArray{ SystemsnmpCommunityVdomArgs{...} }
type SystemsnmpCommunityVdomArrayInput interface {
	pulumi.Input

	ToSystemsnmpCommunityVdomArrayOutput() SystemsnmpCommunityVdomArrayOutput
	ToSystemsnmpCommunityVdomArrayOutputWithContext(context.Context) SystemsnmpCommunityVdomArrayOutput
}

type SystemsnmpCommunityVdomArray []SystemsnmpCommunityVdomInput

func (SystemsnmpCommunityVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemsnmpCommunityVdom)(nil)).Elem()
}

func (i SystemsnmpCommunityVdomArray) ToSystemsnmpCommunityVdomArrayOutput() SystemsnmpCommunityVdomArrayOutput {
	return i.ToSystemsnmpCommunityVdomArrayOutputWithContext(context.Background())
}

func (i SystemsnmpCommunityVdomArray) ToSystemsnmpCommunityVdomArrayOutputWithContext(ctx context.Context) SystemsnmpCommunityVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpCommunityVdomArrayOutput)
}

type SystemsnmpCommunityVdomOutput struct{ *pulumi.OutputState }

func (SystemsnmpCommunityVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemsnmpCommunityVdom)(nil)).Elem()
}

func (o SystemsnmpCommunityVdomOutput) ToSystemsnmpCommunityVdomOutput() SystemsnmpCommunityVdomOutput {
	return o
}

func (o SystemsnmpCommunityVdomOutput) ToSystemsnmpCommunityVdomOutputWithContext(ctx context.Context) SystemsnmpCommunityVdomOutput {
	return o
}

// VDOM name
func (o SystemsnmpCommunityVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemsnmpCommunityVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemsnmpCommunityVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemsnmpCommunityVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemsnmpCommunityVdom)(nil)).Elem()
}

func (o SystemsnmpCommunityVdomArrayOutput) ToSystemsnmpCommunityVdomArrayOutput() SystemsnmpCommunityVdomArrayOutput {
	return o
}

func (o SystemsnmpCommunityVdomArrayOutput) ToSystemsnmpCommunityVdomArrayOutputWithContext(ctx context.Context) SystemsnmpCommunityVdomArrayOutput {
	return o
}

func (o SystemsnmpCommunityVdomArrayOutput) Index(i pulumi.IntInput) SystemsnmpCommunityVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemsnmpCommunityVdom {
		return vs[0].([]SystemsnmpCommunityVdom)[vs[1].(int)]
	}).(SystemsnmpCommunityVdomOutput)
}

type SystemsnmpUserVdom struct {
	// VDOM name
	Name *string `pulumi:"name"`
}

// SystemsnmpUserVdomInput is an input type that accepts SystemsnmpUserVdomArgs and SystemsnmpUserVdomOutput values.
// You can construct a concrete instance of `SystemsnmpUserVdomInput` via:
//
//	SystemsnmpUserVdomArgs{...}
type SystemsnmpUserVdomInput interface {
	pulumi.Input

	ToSystemsnmpUserVdomOutput() SystemsnmpUserVdomOutput
	ToSystemsnmpUserVdomOutputWithContext(context.Context) SystemsnmpUserVdomOutput
}

type SystemsnmpUserVdomArgs struct {
	// VDOM name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemsnmpUserVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemsnmpUserVdom)(nil)).Elem()
}

func (i SystemsnmpUserVdomArgs) ToSystemsnmpUserVdomOutput() SystemsnmpUserVdomOutput {
	return i.ToSystemsnmpUserVdomOutputWithContext(context.Background())
}

func (i SystemsnmpUserVdomArgs) ToSystemsnmpUserVdomOutputWithContext(ctx context.Context) SystemsnmpUserVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpUserVdomOutput)
}

// SystemsnmpUserVdomArrayInput is an input type that accepts SystemsnmpUserVdomArray and SystemsnmpUserVdomArrayOutput values.
// You can construct a concrete instance of `SystemsnmpUserVdomArrayInput` via:
//
//	SystemsnmpUserVdomArray{ SystemsnmpUserVdomArgs{...} }
type SystemsnmpUserVdomArrayInput interface {
	pulumi.Input

	ToSystemsnmpUserVdomArrayOutput() SystemsnmpUserVdomArrayOutput
	ToSystemsnmpUserVdomArrayOutputWithContext(context.Context) SystemsnmpUserVdomArrayOutput
}

type SystemsnmpUserVdomArray []SystemsnmpUserVdomInput

func (SystemsnmpUserVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemsnmpUserVdom)(nil)).Elem()
}

func (i SystemsnmpUserVdomArray) ToSystemsnmpUserVdomArrayOutput() SystemsnmpUserVdomArrayOutput {
	return i.ToSystemsnmpUserVdomArrayOutputWithContext(context.Background())
}

func (i SystemsnmpUserVdomArray) ToSystemsnmpUserVdomArrayOutputWithContext(ctx context.Context) SystemsnmpUserVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpUserVdomArrayOutput)
}

type SystemsnmpUserVdomOutput struct{ *pulumi.OutputState }

func (SystemsnmpUserVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemsnmpUserVdom)(nil)).Elem()
}

func (o SystemsnmpUserVdomOutput) ToSystemsnmpUserVdomOutput() SystemsnmpUserVdomOutput {
	return o
}

func (o SystemsnmpUserVdomOutput) ToSystemsnmpUserVdomOutputWithContext(ctx context.Context) SystemsnmpUserVdomOutput {
	return o
}

// VDOM name
func (o SystemsnmpUserVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemsnmpUserVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemsnmpUserVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemsnmpUserVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemsnmpUserVdom)(nil)).Elem()
}

func (o SystemsnmpUserVdomArrayOutput) ToSystemsnmpUserVdomArrayOutput() SystemsnmpUserVdomArrayOutput {
	return o
}

func (o SystemsnmpUserVdomArrayOutput) ToSystemsnmpUserVdomArrayOutputWithContext(ctx context.Context) SystemsnmpUserVdomArrayOutput {
	return o
}

func (o SystemsnmpUserVdomArrayOutput) Index(i pulumi.IntInput) SystemsnmpUserVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemsnmpUserVdom {
		return vs[0].([]SystemsnmpUserVdom)[vs[1].(int)]
	}).(SystemsnmpUserVdomOutput)
}

type UserDeviceTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []UserDeviceTaggingTag `pulumi:"tags"`
}

// UserDeviceTaggingInput is an input type that accepts UserDeviceTaggingArgs and UserDeviceTaggingOutput values.
// You can construct a concrete instance of `UserDeviceTaggingInput` via:
//
//	UserDeviceTaggingArgs{...}
type UserDeviceTaggingInput interface {
	pulumi.Input

	ToUserDeviceTaggingOutput() UserDeviceTaggingOutput
	ToUserDeviceTaggingOutputWithContext(context.Context) UserDeviceTaggingOutput
}

type UserDeviceTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags UserDeviceTaggingTagArrayInput `pulumi:"tags"`
}

func (UserDeviceTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDeviceTagging)(nil)).Elem()
}

func (i UserDeviceTaggingArgs) ToUserDeviceTaggingOutput() UserDeviceTaggingOutput {
	return i.ToUserDeviceTaggingOutputWithContext(context.Background())
}

func (i UserDeviceTaggingArgs) ToUserDeviceTaggingOutputWithContext(ctx context.Context) UserDeviceTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDeviceTaggingOutput)
}

// UserDeviceTaggingArrayInput is an input type that accepts UserDeviceTaggingArray and UserDeviceTaggingArrayOutput values.
// You can construct a concrete instance of `UserDeviceTaggingArrayInput` via:
//
//	UserDeviceTaggingArray{ UserDeviceTaggingArgs{...} }
type UserDeviceTaggingArrayInput interface {
	pulumi.Input

	ToUserDeviceTaggingArrayOutput() UserDeviceTaggingArrayOutput
	ToUserDeviceTaggingArrayOutputWithContext(context.Context) UserDeviceTaggingArrayOutput
}

type UserDeviceTaggingArray []UserDeviceTaggingInput

func (UserDeviceTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDeviceTagging)(nil)).Elem()
}

func (i UserDeviceTaggingArray) ToUserDeviceTaggingArrayOutput() UserDeviceTaggingArrayOutput {
	return i.ToUserDeviceTaggingArrayOutputWithContext(context.Background())
}

func (i UserDeviceTaggingArray) ToUserDeviceTaggingArrayOutputWithContext(ctx context.Context) UserDeviceTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDeviceTaggingArrayOutput)
}

type UserDeviceTaggingOutput struct{ *pulumi.OutputState }

func (UserDeviceTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDeviceTagging)(nil)).Elem()
}

func (o UserDeviceTaggingOutput) ToUserDeviceTaggingOutput() UserDeviceTaggingOutput {
	return o
}

func (o UserDeviceTaggingOutput) ToUserDeviceTaggingOutputWithContext(ctx context.Context) UserDeviceTaggingOutput {
	return o
}

// Tag category.
func (o UserDeviceTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDeviceTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o UserDeviceTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDeviceTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o UserDeviceTaggingOutput) Tags() UserDeviceTaggingTagArrayOutput {
	return o.ApplyT(func(v UserDeviceTagging) []UserDeviceTaggingTag { return v.Tags }).(UserDeviceTaggingTagArrayOutput)
}

type UserDeviceTaggingArrayOutput struct{ *pulumi.OutputState }

func (UserDeviceTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDeviceTagging)(nil)).Elem()
}

func (o UserDeviceTaggingArrayOutput) ToUserDeviceTaggingArrayOutput() UserDeviceTaggingArrayOutput {
	return o
}

func (o UserDeviceTaggingArrayOutput) ToUserDeviceTaggingArrayOutputWithContext(ctx context.Context) UserDeviceTaggingArrayOutput {
	return o
}

func (o UserDeviceTaggingArrayOutput) Index(i pulumi.IntInput) UserDeviceTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserDeviceTagging {
		return vs[0].([]UserDeviceTagging)[vs[1].(int)]
	}).(UserDeviceTaggingOutput)
}

type UserDeviceTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// UserDeviceTaggingTagInput is an input type that accepts UserDeviceTaggingTagArgs and UserDeviceTaggingTagOutput values.
// You can construct a concrete instance of `UserDeviceTaggingTagInput` via:
//
//	UserDeviceTaggingTagArgs{...}
type UserDeviceTaggingTagInput interface {
	pulumi.Input

	ToUserDeviceTaggingTagOutput() UserDeviceTaggingTagOutput
	ToUserDeviceTaggingTagOutputWithContext(context.Context) UserDeviceTaggingTagOutput
}

type UserDeviceTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserDeviceTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDeviceTaggingTag)(nil)).Elem()
}

func (i UserDeviceTaggingTagArgs) ToUserDeviceTaggingTagOutput() UserDeviceTaggingTagOutput {
	return i.ToUserDeviceTaggingTagOutputWithContext(context.Background())
}

func (i UserDeviceTaggingTagArgs) ToUserDeviceTaggingTagOutputWithContext(ctx context.Context) UserDeviceTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDeviceTaggingTagOutput)
}

// UserDeviceTaggingTagArrayInput is an input type that accepts UserDeviceTaggingTagArray and UserDeviceTaggingTagArrayOutput values.
// You can construct a concrete instance of `UserDeviceTaggingTagArrayInput` via:
//
//	UserDeviceTaggingTagArray{ UserDeviceTaggingTagArgs{...} }
type UserDeviceTaggingTagArrayInput interface {
	pulumi.Input

	ToUserDeviceTaggingTagArrayOutput() UserDeviceTaggingTagArrayOutput
	ToUserDeviceTaggingTagArrayOutputWithContext(context.Context) UserDeviceTaggingTagArrayOutput
}

type UserDeviceTaggingTagArray []UserDeviceTaggingTagInput

func (UserDeviceTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDeviceTaggingTag)(nil)).Elem()
}

func (i UserDeviceTaggingTagArray) ToUserDeviceTaggingTagArrayOutput() UserDeviceTaggingTagArrayOutput {
	return i.ToUserDeviceTaggingTagArrayOutputWithContext(context.Background())
}

func (i UserDeviceTaggingTagArray) ToUserDeviceTaggingTagArrayOutputWithContext(ctx context.Context) UserDeviceTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDeviceTaggingTagArrayOutput)
}

type UserDeviceTaggingTagOutput struct{ *pulumi.OutputState }

func (UserDeviceTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDeviceTaggingTag)(nil)).Elem()
}

func (o UserDeviceTaggingTagOutput) ToUserDeviceTaggingTagOutput() UserDeviceTaggingTagOutput {
	return o
}

func (o UserDeviceTaggingTagOutput) ToUserDeviceTaggingTagOutputWithContext(ctx context.Context) UserDeviceTaggingTagOutput {
	return o
}

// Tag name.
func (o UserDeviceTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDeviceTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserDeviceTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (UserDeviceTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDeviceTaggingTag)(nil)).Elem()
}

func (o UserDeviceTaggingTagArrayOutput) ToUserDeviceTaggingTagArrayOutput() UserDeviceTaggingTagArrayOutput {
	return o
}

func (o UserDeviceTaggingTagArrayOutput) ToUserDeviceTaggingTagArrayOutputWithContext(ctx context.Context) UserDeviceTaggingTagArrayOutput {
	return o
}

func (o UserDeviceTaggingTagArrayOutput) Index(i pulumi.IntInput) UserDeviceTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserDeviceTaggingTag {
		return vs[0].([]UserDeviceTaggingTag)[vs[1].(int)]
	}).(UserDeviceTaggingTagOutput)
}

type UserDeviceaccesslistDeviceList struct {
	// Allow or block device. Valid values: `accept`, `deny`.
	Action *string `pulumi:"action"`
	// Firewall device or device group.
	Device *string `pulumi:"device"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// UserDeviceaccesslistDeviceListInput is an input type that accepts UserDeviceaccesslistDeviceListArgs and UserDeviceaccesslistDeviceListOutput values.
// You can construct a concrete instance of `UserDeviceaccesslistDeviceListInput` via:
//
//	UserDeviceaccesslistDeviceListArgs{...}
type UserDeviceaccesslistDeviceListInput interface {
	pulumi.Input

	ToUserDeviceaccesslistDeviceListOutput() UserDeviceaccesslistDeviceListOutput
	ToUserDeviceaccesslistDeviceListOutputWithContext(context.Context) UserDeviceaccesslistDeviceListOutput
}

type UserDeviceaccesslistDeviceListArgs struct {
	// Allow or block device. Valid values: `accept`, `deny`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Firewall device or device group.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (UserDeviceaccesslistDeviceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDeviceaccesslistDeviceList)(nil)).Elem()
}

func (i UserDeviceaccesslistDeviceListArgs) ToUserDeviceaccesslistDeviceListOutput() UserDeviceaccesslistDeviceListOutput {
	return i.ToUserDeviceaccesslistDeviceListOutputWithContext(context.Background())
}

func (i UserDeviceaccesslistDeviceListArgs) ToUserDeviceaccesslistDeviceListOutputWithContext(ctx context.Context) UserDeviceaccesslistDeviceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDeviceaccesslistDeviceListOutput)
}

// UserDeviceaccesslistDeviceListArrayInput is an input type that accepts UserDeviceaccesslistDeviceListArray and UserDeviceaccesslistDeviceListArrayOutput values.
// You can construct a concrete instance of `UserDeviceaccesslistDeviceListArrayInput` via:
//
//	UserDeviceaccesslistDeviceListArray{ UserDeviceaccesslistDeviceListArgs{...} }
type UserDeviceaccesslistDeviceListArrayInput interface {
	pulumi.Input

	ToUserDeviceaccesslistDeviceListArrayOutput() UserDeviceaccesslistDeviceListArrayOutput
	ToUserDeviceaccesslistDeviceListArrayOutputWithContext(context.Context) UserDeviceaccesslistDeviceListArrayOutput
}

type UserDeviceaccesslistDeviceListArray []UserDeviceaccesslistDeviceListInput

func (UserDeviceaccesslistDeviceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDeviceaccesslistDeviceList)(nil)).Elem()
}

func (i UserDeviceaccesslistDeviceListArray) ToUserDeviceaccesslistDeviceListArrayOutput() UserDeviceaccesslistDeviceListArrayOutput {
	return i.ToUserDeviceaccesslistDeviceListArrayOutputWithContext(context.Background())
}

func (i UserDeviceaccesslistDeviceListArray) ToUserDeviceaccesslistDeviceListArrayOutputWithContext(ctx context.Context) UserDeviceaccesslistDeviceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDeviceaccesslistDeviceListArrayOutput)
}

type UserDeviceaccesslistDeviceListOutput struct{ *pulumi.OutputState }

func (UserDeviceaccesslistDeviceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDeviceaccesslistDeviceList)(nil)).Elem()
}

func (o UserDeviceaccesslistDeviceListOutput) ToUserDeviceaccesslistDeviceListOutput() UserDeviceaccesslistDeviceListOutput {
	return o
}

func (o UserDeviceaccesslistDeviceListOutput) ToUserDeviceaccesslistDeviceListOutputWithContext(ctx context.Context) UserDeviceaccesslistDeviceListOutput {
	return o
}

// Allow or block device. Valid values: `accept`, `deny`.
func (o UserDeviceaccesslistDeviceListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDeviceaccesslistDeviceList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Firewall device or device group.
func (o UserDeviceaccesslistDeviceListOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDeviceaccesslistDeviceList) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o UserDeviceaccesslistDeviceListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserDeviceaccesslistDeviceList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type UserDeviceaccesslistDeviceListArrayOutput struct{ *pulumi.OutputState }

func (UserDeviceaccesslistDeviceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDeviceaccesslistDeviceList)(nil)).Elem()
}

func (o UserDeviceaccesslistDeviceListArrayOutput) ToUserDeviceaccesslistDeviceListArrayOutput() UserDeviceaccesslistDeviceListArrayOutput {
	return o
}

func (o UserDeviceaccesslistDeviceListArrayOutput) ToUserDeviceaccesslistDeviceListArrayOutputWithContext(ctx context.Context) UserDeviceaccesslistDeviceListArrayOutput {
	return o
}

func (o UserDeviceaccesslistDeviceListArrayOutput) Index(i pulumi.IntInput) UserDeviceaccesslistDeviceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserDeviceaccesslistDeviceList {
		return vs[0].([]UserDeviceaccesslistDeviceList)[vs[1].(int)]
	}).(UserDeviceaccesslistDeviceListOutput)
}

type UserDevicegroupMember struct {
	// Device name.
	Name *string `pulumi:"name"`
}

// UserDevicegroupMemberInput is an input type that accepts UserDevicegroupMemberArgs and UserDevicegroupMemberOutput values.
// You can construct a concrete instance of `UserDevicegroupMemberInput` via:
//
//	UserDevicegroupMemberArgs{...}
type UserDevicegroupMemberInput interface {
	pulumi.Input

	ToUserDevicegroupMemberOutput() UserDevicegroupMemberOutput
	ToUserDevicegroupMemberOutputWithContext(context.Context) UserDevicegroupMemberOutput
}

type UserDevicegroupMemberArgs struct {
	// Device name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserDevicegroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDevicegroupMember)(nil)).Elem()
}

func (i UserDevicegroupMemberArgs) ToUserDevicegroupMemberOutput() UserDevicegroupMemberOutput {
	return i.ToUserDevicegroupMemberOutputWithContext(context.Background())
}

func (i UserDevicegroupMemberArgs) ToUserDevicegroupMemberOutputWithContext(ctx context.Context) UserDevicegroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDevicegroupMemberOutput)
}

// UserDevicegroupMemberArrayInput is an input type that accepts UserDevicegroupMemberArray and UserDevicegroupMemberArrayOutput values.
// You can construct a concrete instance of `UserDevicegroupMemberArrayInput` via:
//
//	UserDevicegroupMemberArray{ UserDevicegroupMemberArgs{...} }
type UserDevicegroupMemberArrayInput interface {
	pulumi.Input

	ToUserDevicegroupMemberArrayOutput() UserDevicegroupMemberArrayOutput
	ToUserDevicegroupMemberArrayOutputWithContext(context.Context) UserDevicegroupMemberArrayOutput
}

type UserDevicegroupMemberArray []UserDevicegroupMemberInput

func (UserDevicegroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDevicegroupMember)(nil)).Elem()
}

func (i UserDevicegroupMemberArray) ToUserDevicegroupMemberArrayOutput() UserDevicegroupMemberArrayOutput {
	return i.ToUserDevicegroupMemberArrayOutputWithContext(context.Background())
}

func (i UserDevicegroupMemberArray) ToUserDevicegroupMemberArrayOutputWithContext(ctx context.Context) UserDevicegroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDevicegroupMemberArrayOutput)
}

type UserDevicegroupMemberOutput struct{ *pulumi.OutputState }

func (UserDevicegroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDevicegroupMember)(nil)).Elem()
}

func (o UserDevicegroupMemberOutput) ToUserDevicegroupMemberOutput() UserDevicegroupMemberOutput {
	return o
}

func (o UserDevicegroupMemberOutput) ToUserDevicegroupMemberOutputWithContext(ctx context.Context) UserDevicegroupMemberOutput {
	return o
}

// Device name.
func (o UserDevicegroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDevicegroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserDevicegroupMemberArrayOutput struct{ *pulumi.OutputState }

func (UserDevicegroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDevicegroupMember)(nil)).Elem()
}

func (o UserDevicegroupMemberArrayOutput) ToUserDevicegroupMemberArrayOutput() UserDevicegroupMemberArrayOutput {
	return o
}

func (o UserDevicegroupMemberArrayOutput) ToUserDevicegroupMemberArrayOutputWithContext(ctx context.Context) UserDevicegroupMemberArrayOutput {
	return o
}

func (o UserDevicegroupMemberArrayOutput) Index(i pulumi.IntInput) UserDevicegroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserDevicegroupMember {
		return vs[0].([]UserDevicegroupMember)[vs[1].(int)]
	}).(UserDevicegroupMemberOutput)
}

type UserDevicegroupTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []UserDevicegroupTaggingTag `pulumi:"tags"`
}

// UserDevicegroupTaggingInput is an input type that accepts UserDevicegroupTaggingArgs and UserDevicegroupTaggingOutput values.
// You can construct a concrete instance of `UserDevicegroupTaggingInput` via:
//
//	UserDevicegroupTaggingArgs{...}
type UserDevicegroupTaggingInput interface {
	pulumi.Input

	ToUserDevicegroupTaggingOutput() UserDevicegroupTaggingOutput
	ToUserDevicegroupTaggingOutputWithContext(context.Context) UserDevicegroupTaggingOutput
}

type UserDevicegroupTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags UserDevicegroupTaggingTagArrayInput `pulumi:"tags"`
}

func (UserDevicegroupTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDevicegroupTagging)(nil)).Elem()
}

func (i UserDevicegroupTaggingArgs) ToUserDevicegroupTaggingOutput() UserDevicegroupTaggingOutput {
	return i.ToUserDevicegroupTaggingOutputWithContext(context.Background())
}

func (i UserDevicegroupTaggingArgs) ToUserDevicegroupTaggingOutputWithContext(ctx context.Context) UserDevicegroupTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDevicegroupTaggingOutput)
}

// UserDevicegroupTaggingArrayInput is an input type that accepts UserDevicegroupTaggingArray and UserDevicegroupTaggingArrayOutput values.
// You can construct a concrete instance of `UserDevicegroupTaggingArrayInput` via:
//
//	UserDevicegroupTaggingArray{ UserDevicegroupTaggingArgs{...} }
type UserDevicegroupTaggingArrayInput interface {
	pulumi.Input

	ToUserDevicegroupTaggingArrayOutput() UserDevicegroupTaggingArrayOutput
	ToUserDevicegroupTaggingArrayOutputWithContext(context.Context) UserDevicegroupTaggingArrayOutput
}

type UserDevicegroupTaggingArray []UserDevicegroupTaggingInput

func (UserDevicegroupTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDevicegroupTagging)(nil)).Elem()
}

func (i UserDevicegroupTaggingArray) ToUserDevicegroupTaggingArrayOutput() UserDevicegroupTaggingArrayOutput {
	return i.ToUserDevicegroupTaggingArrayOutputWithContext(context.Background())
}

func (i UserDevicegroupTaggingArray) ToUserDevicegroupTaggingArrayOutputWithContext(ctx context.Context) UserDevicegroupTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDevicegroupTaggingArrayOutput)
}

type UserDevicegroupTaggingOutput struct{ *pulumi.OutputState }

func (UserDevicegroupTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDevicegroupTagging)(nil)).Elem()
}

func (o UserDevicegroupTaggingOutput) ToUserDevicegroupTaggingOutput() UserDevicegroupTaggingOutput {
	return o
}

func (o UserDevicegroupTaggingOutput) ToUserDevicegroupTaggingOutputWithContext(ctx context.Context) UserDevicegroupTaggingOutput {
	return o
}

// Tag category.
func (o UserDevicegroupTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDevicegroupTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o UserDevicegroupTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDevicegroupTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o UserDevicegroupTaggingOutput) Tags() UserDevicegroupTaggingTagArrayOutput {
	return o.ApplyT(func(v UserDevicegroupTagging) []UserDevicegroupTaggingTag { return v.Tags }).(UserDevicegroupTaggingTagArrayOutput)
}

type UserDevicegroupTaggingArrayOutput struct{ *pulumi.OutputState }

func (UserDevicegroupTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDevicegroupTagging)(nil)).Elem()
}

func (o UserDevicegroupTaggingArrayOutput) ToUserDevicegroupTaggingArrayOutput() UserDevicegroupTaggingArrayOutput {
	return o
}

func (o UserDevicegroupTaggingArrayOutput) ToUserDevicegroupTaggingArrayOutputWithContext(ctx context.Context) UserDevicegroupTaggingArrayOutput {
	return o
}

func (o UserDevicegroupTaggingArrayOutput) Index(i pulumi.IntInput) UserDevicegroupTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserDevicegroupTagging {
		return vs[0].([]UserDevicegroupTagging)[vs[1].(int)]
	}).(UserDevicegroupTaggingOutput)
}

type UserDevicegroupTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// UserDevicegroupTaggingTagInput is an input type that accepts UserDevicegroupTaggingTagArgs and UserDevicegroupTaggingTagOutput values.
// You can construct a concrete instance of `UserDevicegroupTaggingTagInput` via:
//
//	UserDevicegroupTaggingTagArgs{...}
type UserDevicegroupTaggingTagInput interface {
	pulumi.Input

	ToUserDevicegroupTaggingTagOutput() UserDevicegroupTaggingTagOutput
	ToUserDevicegroupTaggingTagOutputWithContext(context.Context) UserDevicegroupTaggingTagOutput
}

type UserDevicegroupTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserDevicegroupTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDevicegroupTaggingTag)(nil)).Elem()
}

func (i UserDevicegroupTaggingTagArgs) ToUserDevicegroupTaggingTagOutput() UserDevicegroupTaggingTagOutput {
	return i.ToUserDevicegroupTaggingTagOutputWithContext(context.Background())
}

func (i UserDevicegroupTaggingTagArgs) ToUserDevicegroupTaggingTagOutputWithContext(ctx context.Context) UserDevicegroupTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDevicegroupTaggingTagOutput)
}

// UserDevicegroupTaggingTagArrayInput is an input type that accepts UserDevicegroupTaggingTagArray and UserDevicegroupTaggingTagArrayOutput values.
// You can construct a concrete instance of `UserDevicegroupTaggingTagArrayInput` via:
//
//	UserDevicegroupTaggingTagArray{ UserDevicegroupTaggingTagArgs{...} }
type UserDevicegroupTaggingTagArrayInput interface {
	pulumi.Input

	ToUserDevicegroupTaggingTagArrayOutput() UserDevicegroupTaggingTagArrayOutput
	ToUserDevicegroupTaggingTagArrayOutputWithContext(context.Context) UserDevicegroupTaggingTagArrayOutput
}

type UserDevicegroupTaggingTagArray []UserDevicegroupTaggingTagInput

func (UserDevicegroupTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDevicegroupTaggingTag)(nil)).Elem()
}

func (i UserDevicegroupTaggingTagArray) ToUserDevicegroupTaggingTagArrayOutput() UserDevicegroupTaggingTagArrayOutput {
	return i.ToUserDevicegroupTaggingTagArrayOutputWithContext(context.Background())
}

func (i UserDevicegroupTaggingTagArray) ToUserDevicegroupTaggingTagArrayOutputWithContext(ctx context.Context) UserDevicegroupTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDevicegroupTaggingTagArrayOutput)
}

type UserDevicegroupTaggingTagOutput struct{ *pulumi.OutputState }

func (UserDevicegroupTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDevicegroupTaggingTag)(nil)).Elem()
}

func (o UserDevicegroupTaggingTagOutput) ToUserDevicegroupTaggingTagOutput() UserDevicegroupTaggingTagOutput {
	return o
}

func (o UserDevicegroupTaggingTagOutput) ToUserDevicegroupTaggingTagOutputWithContext(ctx context.Context) UserDevicegroupTaggingTagOutput {
	return o
}

// Tag name.
func (o UserDevicegroupTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDevicegroupTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserDevicegroupTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (UserDevicegroupTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDevicegroupTaggingTag)(nil)).Elem()
}

func (o UserDevicegroupTaggingTagArrayOutput) ToUserDevicegroupTaggingTagArrayOutput() UserDevicegroupTaggingTagArrayOutput {
	return o
}

func (o UserDevicegroupTaggingTagArrayOutput) ToUserDevicegroupTaggingTagArrayOutputWithContext(ctx context.Context) UserDevicegroupTaggingTagArrayOutput {
	return o
}

func (o UserDevicegroupTaggingTagArrayOutput) Index(i pulumi.IntInput) UserDevicegroupTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserDevicegroupTaggingTag {
		return vs[0].([]UserDevicegroupTaggingTag)[vs[1].(int)]
	}).(UserDevicegroupTaggingTagOutput)
}

type UserDomaincontrollerExtraServer struct {
	// Server ID.
	Id *int `pulumi:"id"`
	// Domain controller IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// Port to be used for communication with the domain controller (default = 445).
	Port *int `pulumi:"port"`
	// FortiGate IPv4 address to be used for communication with the domain controller.
	SourceIpAddress *string `pulumi:"sourceIpAddress"`
	// Source port to be used for communication with the domain controller.
	SourcePort *int `pulumi:"sourcePort"`
}

// UserDomaincontrollerExtraServerInput is an input type that accepts UserDomaincontrollerExtraServerArgs and UserDomaincontrollerExtraServerOutput values.
// You can construct a concrete instance of `UserDomaincontrollerExtraServerInput` via:
//
//	UserDomaincontrollerExtraServerArgs{...}
type UserDomaincontrollerExtraServerInput interface {
	pulumi.Input

	ToUserDomaincontrollerExtraServerOutput() UserDomaincontrollerExtraServerOutput
	ToUserDomaincontrollerExtraServerOutputWithContext(context.Context) UserDomaincontrollerExtraServerOutput
}

type UserDomaincontrollerExtraServerArgs struct {
	// Server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Domain controller IP address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Port to be used for communication with the domain controller (default = 445).
	Port pulumi.IntPtrInput `pulumi:"port"`
	// FortiGate IPv4 address to be used for communication with the domain controller.
	SourceIpAddress pulumi.StringPtrInput `pulumi:"sourceIpAddress"`
	// Source port to be used for communication with the domain controller.
	SourcePort pulumi.IntPtrInput `pulumi:"sourcePort"`
}

func (UserDomaincontrollerExtraServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDomaincontrollerExtraServer)(nil)).Elem()
}

func (i UserDomaincontrollerExtraServerArgs) ToUserDomaincontrollerExtraServerOutput() UserDomaincontrollerExtraServerOutput {
	return i.ToUserDomaincontrollerExtraServerOutputWithContext(context.Background())
}

func (i UserDomaincontrollerExtraServerArgs) ToUserDomaincontrollerExtraServerOutputWithContext(ctx context.Context) UserDomaincontrollerExtraServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDomaincontrollerExtraServerOutput)
}

// UserDomaincontrollerExtraServerArrayInput is an input type that accepts UserDomaincontrollerExtraServerArray and UserDomaincontrollerExtraServerArrayOutput values.
// You can construct a concrete instance of `UserDomaincontrollerExtraServerArrayInput` via:
//
//	UserDomaincontrollerExtraServerArray{ UserDomaincontrollerExtraServerArgs{...} }
type UserDomaincontrollerExtraServerArrayInput interface {
	pulumi.Input

	ToUserDomaincontrollerExtraServerArrayOutput() UserDomaincontrollerExtraServerArrayOutput
	ToUserDomaincontrollerExtraServerArrayOutputWithContext(context.Context) UserDomaincontrollerExtraServerArrayOutput
}

type UserDomaincontrollerExtraServerArray []UserDomaincontrollerExtraServerInput

func (UserDomaincontrollerExtraServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDomaincontrollerExtraServer)(nil)).Elem()
}

func (i UserDomaincontrollerExtraServerArray) ToUserDomaincontrollerExtraServerArrayOutput() UserDomaincontrollerExtraServerArrayOutput {
	return i.ToUserDomaincontrollerExtraServerArrayOutputWithContext(context.Background())
}

func (i UserDomaincontrollerExtraServerArray) ToUserDomaincontrollerExtraServerArrayOutputWithContext(ctx context.Context) UserDomaincontrollerExtraServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDomaincontrollerExtraServerArrayOutput)
}

type UserDomaincontrollerExtraServerOutput struct{ *pulumi.OutputState }

func (UserDomaincontrollerExtraServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDomaincontrollerExtraServer)(nil)).Elem()
}

func (o UserDomaincontrollerExtraServerOutput) ToUserDomaincontrollerExtraServerOutput() UserDomaincontrollerExtraServerOutput {
	return o
}

func (o UserDomaincontrollerExtraServerOutput) ToUserDomaincontrollerExtraServerOutputWithContext(ctx context.Context) UserDomaincontrollerExtraServerOutput {
	return o
}

// Server ID.
func (o UserDomaincontrollerExtraServerOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserDomaincontrollerExtraServer) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Domain controller IP address.
func (o UserDomaincontrollerExtraServerOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDomaincontrollerExtraServer) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Port to be used for communication with the domain controller (default = 445).
func (o UserDomaincontrollerExtraServerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserDomaincontrollerExtraServer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// FortiGate IPv4 address to be used for communication with the domain controller.
func (o UserDomaincontrollerExtraServerOutput) SourceIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDomaincontrollerExtraServer) *string { return v.SourceIpAddress }).(pulumi.StringPtrOutput)
}

// Source port to be used for communication with the domain controller.
func (o UserDomaincontrollerExtraServerOutput) SourcePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserDomaincontrollerExtraServer) *int { return v.SourcePort }).(pulumi.IntPtrOutput)
}

type UserDomaincontrollerExtraServerArrayOutput struct{ *pulumi.OutputState }

func (UserDomaincontrollerExtraServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDomaincontrollerExtraServer)(nil)).Elem()
}

func (o UserDomaincontrollerExtraServerArrayOutput) ToUserDomaincontrollerExtraServerArrayOutput() UserDomaincontrollerExtraServerArrayOutput {
	return o
}

func (o UserDomaincontrollerExtraServerArrayOutput) ToUserDomaincontrollerExtraServerArrayOutputWithContext(ctx context.Context) UserDomaincontrollerExtraServerArrayOutput {
	return o
}

func (o UserDomaincontrollerExtraServerArrayOutput) Index(i pulumi.IntInput) UserDomaincontrollerExtraServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserDomaincontrollerExtraServer {
		return vs[0].([]UserDomaincontrollerExtraServer)[vs[1].(int)]
	}).(UserDomaincontrollerExtraServerOutput)
}

type UserExchangeKdcIp struct {
	// KDC IPv4 addresses for Kerberos authentication.
	Ipv4 *string `pulumi:"ipv4"`
}

// UserExchangeKdcIpInput is an input type that accepts UserExchangeKdcIpArgs and UserExchangeKdcIpOutput values.
// You can construct a concrete instance of `UserExchangeKdcIpInput` via:
//
//	UserExchangeKdcIpArgs{...}
type UserExchangeKdcIpInput interface {
	pulumi.Input

	ToUserExchangeKdcIpOutput() UserExchangeKdcIpOutput
	ToUserExchangeKdcIpOutputWithContext(context.Context) UserExchangeKdcIpOutput
}

type UserExchangeKdcIpArgs struct {
	// KDC IPv4 addresses for Kerberos authentication.
	Ipv4 pulumi.StringPtrInput `pulumi:"ipv4"`
}

func (UserExchangeKdcIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserExchangeKdcIp)(nil)).Elem()
}

func (i UserExchangeKdcIpArgs) ToUserExchangeKdcIpOutput() UserExchangeKdcIpOutput {
	return i.ToUserExchangeKdcIpOutputWithContext(context.Background())
}

func (i UserExchangeKdcIpArgs) ToUserExchangeKdcIpOutputWithContext(ctx context.Context) UserExchangeKdcIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserExchangeKdcIpOutput)
}

// UserExchangeKdcIpArrayInput is an input type that accepts UserExchangeKdcIpArray and UserExchangeKdcIpArrayOutput values.
// You can construct a concrete instance of `UserExchangeKdcIpArrayInput` via:
//
//	UserExchangeKdcIpArray{ UserExchangeKdcIpArgs{...} }
type UserExchangeKdcIpArrayInput interface {
	pulumi.Input

	ToUserExchangeKdcIpArrayOutput() UserExchangeKdcIpArrayOutput
	ToUserExchangeKdcIpArrayOutputWithContext(context.Context) UserExchangeKdcIpArrayOutput
}

type UserExchangeKdcIpArray []UserExchangeKdcIpInput

func (UserExchangeKdcIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserExchangeKdcIp)(nil)).Elem()
}

func (i UserExchangeKdcIpArray) ToUserExchangeKdcIpArrayOutput() UserExchangeKdcIpArrayOutput {
	return i.ToUserExchangeKdcIpArrayOutputWithContext(context.Background())
}

func (i UserExchangeKdcIpArray) ToUserExchangeKdcIpArrayOutputWithContext(ctx context.Context) UserExchangeKdcIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserExchangeKdcIpArrayOutput)
}

type UserExchangeKdcIpOutput struct{ *pulumi.OutputState }

func (UserExchangeKdcIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserExchangeKdcIp)(nil)).Elem()
}

func (o UserExchangeKdcIpOutput) ToUserExchangeKdcIpOutput() UserExchangeKdcIpOutput {
	return o
}

func (o UserExchangeKdcIpOutput) ToUserExchangeKdcIpOutputWithContext(ctx context.Context) UserExchangeKdcIpOutput {
	return o
}

// KDC IPv4 addresses for Kerberos authentication.
func (o UserExchangeKdcIpOutput) Ipv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserExchangeKdcIp) *string { return v.Ipv4 }).(pulumi.StringPtrOutput)
}

type UserExchangeKdcIpArrayOutput struct{ *pulumi.OutputState }

func (UserExchangeKdcIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserExchangeKdcIp)(nil)).Elem()
}

func (o UserExchangeKdcIpArrayOutput) ToUserExchangeKdcIpArrayOutput() UserExchangeKdcIpArrayOutput {
	return o
}

func (o UserExchangeKdcIpArrayOutput) ToUserExchangeKdcIpArrayOutputWithContext(ctx context.Context) UserExchangeKdcIpArrayOutput {
	return o
}

func (o UserExchangeKdcIpArrayOutput) Index(i pulumi.IntInput) UserExchangeKdcIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserExchangeKdcIp {
		return vs[0].([]UserExchangeKdcIp)[vs[1].(int)]
	}).(UserExchangeKdcIpOutput)
}

type UserFssopollingAdgrp struct {
	// Name.
	Name *string `pulumi:"name"`
}

// UserFssopollingAdgrpInput is an input type that accepts UserFssopollingAdgrpArgs and UserFssopollingAdgrpOutput values.
// You can construct a concrete instance of `UserFssopollingAdgrpInput` via:
//
//	UserFssopollingAdgrpArgs{...}
type UserFssopollingAdgrpInput interface {
	pulumi.Input

	ToUserFssopollingAdgrpOutput() UserFssopollingAdgrpOutput
	ToUserFssopollingAdgrpOutputWithContext(context.Context) UserFssopollingAdgrpOutput
}

type UserFssopollingAdgrpArgs struct {
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserFssopollingAdgrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserFssopollingAdgrp)(nil)).Elem()
}

func (i UserFssopollingAdgrpArgs) ToUserFssopollingAdgrpOutput() UserFssopollingAdgrpOutput {
	return i.ToUserFssopollingAdgrpOutputWithContext(context.Background())
}

func (i UserFssopollingAdgrpArgs) ToUserFssopollingAdgrpOutputWithContext(ctx context.Context) UserFssopollingAdgrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserFssopollingAdgrpOutput)
}

// UserFssopollingAdgrpArrayInput is an input type that accepts UserFssopollingAdgrpArray and UserFssopollingAdgrpArrayOutput values.
// You can construct a concrete instance of `UserFssopollingAdgrpArrayInput` via:
//
//	UserFssopollingAdgrpArray{ UserFssopollingAdgrpArgs{...} }
type UserFssopollingAdgrpArrayInput interface {
	pulumi.Input

	ToUserFssopollingAdgrpArrayOutput() UserFssopollingAdgrpArrayOutput
	ToUserFssopollingAdgrpArrayOutputWithContext(context.Context) UserFssopollingAdgrpArrayOutput
}

type UserFssopollingAdgrpArray []UserFssopollingAdgrpInput

func (UserFssopollingAdgrpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserFssopollingAdgrp)(nil)).Elem()
}

func (i UserFssopollingAdgrpArray) ToUserFssopollingAdgrpArrayOutput() UserFssopollingAdgrpArrayOutput {
	return i.ToUserFssopollingAdgrpArrayOutputWithContext(context.Background())
}

func (i UserFssopollingAdgrpArray) ToUserFssopollingAdgrpArrayOutputWithContext(ctx context.Context) UserFssopollingAdgrpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserFssopollingAdgrpArrayOutput)
}

type UserFssopollingAdgrpOutput struct{ *pulumi.OutputState }

func (UserFssopollingAdgrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserFssopollingAdgrp)(nil)).Elem()
}

func (o UserFssopollingAdgrpOutput) ToUserFssopollingAdgrpOutput() UserFssopollingAdgrpOutput {
	return o
}

func (o UserFssopollingAdgrpOutput) ToUserFssopollingAdgrpOutputWithContext(ctx context.Context) UserFssopollingAdgrpOutput {
	return o
}

// Name.
func (o UserFssopollingAdgrpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserFssopollingAdgrp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserFssopollingAdgrpArrayOutput struct{ *pulumi.OutputState }

func (UserFssopollingAdgrpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserFssopollingAdgrp)(nil)).Elem()
}

func (o UserFssopollingAdgrpArrayOutput) ToUserFssopollingAdgrpArrayOutput() UserFssopollingAdgrpArrayOutput {
	return o
}

func (o UserFssopollingAdgrpArrayOutput) ToUserFssopollingAdgrpArrayOutputWithContext(ctx context.Context) UserFssopollingAdgrpArrayOutput {
	return o
}

func (o UserFssopollingAdgrpArrayOutput) Index(i pulumi.IntInput) UserFssopollingAdgrpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserFssopollingAdgrp {
		return vs[0].([]UserFssopollingAdgrp)[vs[1].(int)]
	}).(UserFssopollingAdgrpOutput)
}

type UserGroupGuest struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Set the action for the company guest user field.
	Company *string `pulumi:"company"`
	// Email.
	Email *string `pulumi:"email"`
	// Expire time.
	Expiration *string `pulumi:"expiration"`
	// Guest ID.
	Id *int `pulumi:"id"`
	// Mobile phone.
	MobilePhone *string `pulumi:"mobilePhone"`
	// Guest name.
	Name *string `pulumi:"name"`
	// Guest password.
	Password *string `pulumi:"password"`
	// Set the action for the sponsor guest user field.
	Sponsor *string `pulumi:"sponsor"`
	// Guest ID.
	UserId *string `pulumi:"userId"`
}

// UserGroupGuestInput is an input type that accepts UserGroupGuestArgs and UserGroupGuestOutput values.
// You can construct a concrete instance of `UserGroupGuestInput` via:
//
//	UserGroupGuestArgs{...}
type UserGroupGuestInput interface {
	pulumi.Input

	ToUserGroupGuestOutput() UserGroupGuestOutput
	ToUserGroupGuestOutputWithContext(context.Context) UserGroupGuestOutput
}

type UserGroupGuestArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Set the action for the company guest user field.
	Company pulumi.StringPtrInput `pulumi:"company"`
	// Email.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Expire time.
	Expiration pulumi.StringPtrInput `pulumi:"expiration"`
	// Guest ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Mobile phone.
	MobilePhone pulumi.StringPtrInput `pulumi:"mobilePhone"`
	// Guest name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Guest password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Set the action for the sponsor guest user field.
	Sponsor pulumi.StringPtrInput `pulumi:"sponsor"`
	// Guest ID.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (UserGroupGuestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupGuest)(nil)).Elem()
}

func (i UserGroupGuestArgs) ToUserGroupGuestOutput() UserGroupGuestOutput {
	return i.ToUserGroupGuestOutputWithContext(context.Background())
}

func (i UserGroupGuestArgs) ToUserGroupGuestOutputWithContext(ctx context.Context) UserGroupGuestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupGuestOutput)
}

// UserGroupGuestArrayInput is an input type that accepts UserGroupGuestArray and UserGroupGuestArrayOutput values.
// You can construct a concrete instance of `UserGroupGuestArrayInput` via:
//
//	UserGroupGuestArray{ UserGroupGuestArgs{...} }
type UserGroupGuestArrayInput interface {
	pulumi.Input

	ToUserGroupGuestArrayOutput() UserGroupGuestArrayOutput
	ToUserGroupGuestArrayOutputWithContext(context.Context) UserGroupGuestArrayOutput
}

type UserGroupGuestArray []UserGroupGuestInput

func (UserGroupGuestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupGuest)(nil)).Elem()
}

func (i UserGroupGuestArray) ToUserGroupGuestArrayOutput() UserGroupGuestArrayOutput {
	return i.ToUserGroupGuestArrayOutputWithContext(context.Background())
}

func (i UserGroupGuestArray) ToUserGroupGuestArrayOutputWithContext(ctx context.Context) UserGroupGuestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupGuestArrayOutput)
}

type UserGroupGuestOutput struct{ *pulumi.OutputState }

func (UserGroupGuestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupGuest)(nil)).Elem()
}

func (o UserGroupGuestOutput) ToUserGroupGuestOutput() UserGroupGuestOutput {
	return o
}

func (o UserGroupGuestOutput) ToUserGroupGuestOutputWithContext(ctx context.Context) UserGroupGuestOutput {
	return o
}

// Comment.
func (o UserGroupGuestOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupGuest) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Set the action for the company guest user field.
func (o UserGroupGuestOutput) Company() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupGuest) *string { return v.Company }).(pulumi.StringPtrOutput)
}

// Email.
func (o UserGroupGuestOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupGuest) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Expire time.
func (o UserGroupGuestOutput) Expiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupGuest) *string { return v.Expiration }).(pulumi.StringPtrOutput)
}

// Guest ID.
func (o UserGroupGuestOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserGroupGuest) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Mobile phone.
func (o UserGroupGuestOutput) MobilePhone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupGuest) *string { return v.MobilePhone }).(pulumi.StringPtrOutput)
}

// Guest name.
func (o UserGroupGuestOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupGuest) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Guest password.
func (o UserGroupGuestOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupGuest) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Set the action for the sponsor guest user field.
func (o UserGroupGuestOutput) Sponsor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupGuest) *string { return v.Sponsor }).(pulumi.StringPtrOutput)
}

// Guest ID.
func (o UserGroupGuestOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupGuest) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type UserGroupGuestArrayOutput struct{ *pulumi.OutputState }

func (UserGroupGuestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupGuest)(nil)).Elem()
}

func (o UserGroupGuestArrayOutput) ToUserGroupGuestArrayOutput() UserGroupGuestArrayOutput {
	return o
}

func (o UserGroupGuestArrayOutput) ToUserGroupGuestArrayOutputWithContext(ctx context.Context) UserGroupGuestArrayOutput {
	return o
}

func (o UserGroupGuestArrayOutput) Index(i pulumi.IntInput) UserGroupGuestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserGroupGuest {
		return vs[0].([]UserGroupGuest)[vs[1].(int)]
	}).(UserGroupGuestOutput)
}

type UserGroupMatch struct {
	// Name of matching group on remote auththentication server.
	GroupName *string `pulumi:"groupName"`
	// ID.
	Id *int `pulumi:"id"`
	// Name of remote auth server.
	ServerName *string `pulumi:"serverName"`
}

// UserGroupMatchInput is an input type that accepts UserGroupMatchArgs and UserGroupMatchOutput values.
// You can construct a concrete instance of `UserGroupMatchInput` via:
//
//	UserGroupMatchArgs{...}
type UserGroupMatchInput interface {
	pulumi.Input

	ToUserGroupMatchOutput() UserGroupMatchOutput
	ToUserGroupMatchOutputWithContext(context.Context) UserGroupMatchOutput
}

type UserGroupMatchArgs struct {
	// Name of matching group on remote auththentication server.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name of remote auth server.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (UserGroupMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupMatch)(nil)).Elem()
}

func (i UserGroupMatchArgs) ToUserGroupMatchOutput() UserGroupMatchOutput {
	return i.ToUserGroupMatchOutputWithContext(context.Background())
}

func (i UserGroupMatchArgs) ToUserGroupMatchOutputWithContext(ctx context.Context) UserGroupMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupMatchOutput)
}

// UserGroupMatchArrayInput is an input type that accepts UserGroupMatchArray and UserGroupMatchArrayOutput values.
// You can construct a concrete instance of `UserGroupMatchArrayInput` via:
//
//	UserGroupMatchArray{ UserGroupMatchArgs{...} }
type UserGroupMatchArrayInput interface {
	pulumi.Input

	ToUserGroupMatchArrayOutput() UserGroupMatchArrayOutput
	ToUserGroupMatchArrayOutputWithContext(context.Context) UserGroupMatchArrayOutput
}

type UserGroupMatchArray []UserGroupMatchInput

func (UserGroupMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupMatch)(nil)).Elem()
}

func (i UserGroupMatchArray) ToUserGroupMatchArrayOutput() UserGroupMatchArrayOutput {
	return i.ToUserGroupMatchArrayOutputWithContext(context.Background())
}

func (i UserGroupMatchArray) ToUserGroupMatchArrayOutputWithContext(ctx context.Context) UserGroupMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupMatchArrayOutput)
}

type UserGroupMatchOutput struct{ *pulumi.OutputState }

func (UserGroupMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupMatch)(nil)).Elem()
}

func (o UserGroupMatchOutput) ToUserGroupMatchOutput() UserGroupMatchOutput {
	return o
}

func (o UserGroupMatchOutput) ToUserGroupMatchOutputWithContext(ctx context.Context) UserGroupMatchOutput {
	return o
}

// Name of matching group on remote auththentication server.
func (o UserGroupMatchOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupMatch) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// ID.
func (o UserGroupMatchOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserGroupMatch) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Name of remote auth server.
func (o UserGroupMatchOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupMatch) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

type UserGroupMatchArrayOutput struct{ *pulumi.OutputState }

func (UserGroupMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupMatch)(nil)).Elem()
}

func (o UserGroupMatchArrayOutput) ToUserGroupMatchArrayOutput() UserGroupMatchArrayOutput {
	return o
}

func (o UserGroupMatchArrayOutput) ToUserGroupMatchArrayOutputWithContext(ctx context.Context) UserGroupMatchArrayOutput {
	return o
}

func (o UserGroupMatchArrayOutput) Index(i pulumi.IntInput) UserGroupMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserGroupMatch {
		return vs[0].([]UserGroupMatch)[vs[1].(int)]
	}).(UserGroupMatchOutput)
}

type UserGroupMember struct {
	// Group member name.
	Name *string `pulumi:"name"`
}

// UserGroupMemberInput is an input type that accepts UserGroupMemberArgs and UserGroupMemberOutput values.
// You can construct a concrete instance of `UserGroupMemberInput` via:
//
//	UserGroupMemberArgs{...}
type UserGroupMemberInput interface {
	pulumi.Input

	ToUserGroupMemberOutput() UserGroupMemberOutput
	ToUserGroupMemberOutputWithContext(context.Context) UserGroupMemberOutput
}

type UserGroupMemberArgs struct {
	// Group member name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupMember)(nil)).Elem()
}

func (i UserGroupMemberArgs) ToUserGroupMemberOutput() UserGroupMemberOutput {
	return i.ToUserGroupMemberOutputWithContext(context.Background())
}

func (i UserGroupMemberArgs) ToUserGroupMemberOutputWithContext(ctx context.Context) UserGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupMemberOutput)
}

// UserGroupMemberArrayInput is an input type that accepts UserGroupMemberArray and UserGroupMemberArrayOutput values.
// You can construct a concrete instance of `UserGroupMemberArrayInput` via:
//
//	UserGroupMemberArray{ UserGroupMemberArgs{...} }
type UserGroupMemberArrayInput interface {
	pulumi.Input

	ToUserGroupMemberArrayOutput() UserGroupMemberArrayOutput
	ToUserGroupMemberArrayOutputWithContext(context.Context) UserGroupMemberArrayOutput
}

type UserGroupMemberArray []UserGroupMemberInput

func (UserGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupMember)(nil)).Elem()
}

func (i UserGroupMemberArray) ToUserGroupMemberArrayOutput() UserGroupMemberArrayOutput {
	return i.ToUserGroupMemberArrayOutputWithContext(context.Background())
}

func (i UserGroupMemberArray) ToUserGroupMemberArrayOutputWithContext(ctx context.Context) UserGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupMemberArrayOutput)
}

type UserGroupMemberOutput struct{ *pulumi.OutputState }

func (UserGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupMember)(nil)).Elem()
}

func (o UserGroupMemberOutput) ToUserGroupMemberOutput() UserGroupMemberOutput {
	return o
}

func (o UserGroupMemberOutput) ToUserGroupMemberOutputWithContext(ctx context.Context) UserGroupMemberOutput {
	return o
}

// Group member name.
func (o UserGroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (UserGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupMember)(nil)).Elem()
}

func (o UserGroupMemberArrayOutput) ToUserGroupMemberArrayOutput() UserGroupMemberArrayOutput {
	return o
}

func (o UserGroupMemberArrayOutput) ToUserGroupMemberArrayOutputWithContext(ctx context.Context) UserGroupMemberArrayOutput {
	return o
}

func (o UserGroupMemberArrayOutput) Index(i pulumi.IntInput) UserGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserGroupMember {
		return vs[0].([]UserGroupMember)[vs[1].(int)]
	}).(UserGroupMemberOutput)
}

type UserNacpolicySwitchGroup struct {
	// Managed FortiSwitch group name from available options.
	Name *string `pulumi:"name"`
}

// UserNacpolicySwitchGroupInput is an input type that accepts UserNacpolicySwitchGroupArgs and UserNacpolicySwitchGroupOutput values.
// You can construct a concrete instance of `UserNacpolicySwitchGroupInput` via:
//
//	UserNacpolicySwitchGroupArgs{...}
type UserNacpolicySwitchGroupInput interface {
	pulumi.Input

	ToUserNacpolicySwitchGroupOutput() UserNacpolicySwitchGroupOutput
	ToUserNacpolicySwitchGroupOutputWithContext(context.Context) UserNacpolicySwitchGroupOutput
}

type UserNacpolicySwitchGroupArgs struct {
	// Managed FortiSwitch group name from available options.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserNacpolicySwitchGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserNacpolicySwitchGroup)(nil)).Elem()
}

func (i UserNacpolicySwitchGroupArgs) ToUserNacpolicySwitchGroupOutput() UserNacpolicySwitchGroupOutput {
	return i.ToUserNacpolicySwitchGroupOutputWithContext(context.Background())
}

func (i UserNacpolicySwitchGroupArgs) ToUserNacpolicySwitchGroupOutputWithContext(ctx context.Context) UserNacpolicySwitchGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNacpolicySwitchGroupOutput)
}

// UserNacpolicySwitchGroupArrayInput is an input type that accepts UserNacpolicySwitchGroupArray and UserNacpolicySwitchGroupArrayOutput values.
// You can construct a concrete instance of `UserNacpolicySwitchGroupArrayInput` via:
//
//	UserNacpolicySwitchGroupArray{ UserNacpolicySwitchGroupArgs{...} }
type UserNacpolicySwitchGroupArrayInput interface {
	pulumi.Input

	ToUserNacpolicySwitchGroupArrayOutput() UserNacpolicySwitchGroupArrayOutput
	ToUserNacpolicySwitchGroupArrayOutputWithContext(context.Context) UserNacpolicySwitchGroupArrayOutput
}

type UserNacpolicySwitchGroupArray []UserNacpolicySwitchGroupInput

func (UserNacpolicySwitchGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserNacpolicySwitchGroup)(nil)).Elem()
}

func (i UserNacpolicySwitchGroupArray) ToUserNacpolicySwitchGroupArrayOutput() UserNacpolicySwitchGroupArrayOutput {
	return i.ToUserNacpolicySwitchGroupArrayOutputWithContext(context.Background())
}

func (i UserNacpolicySwitchGroupArray) ToUserNacpolicySwitchGroupArrayOutputWithContext(ctx context.Context) UserNacpolicySwitchGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNacpolicySwitchGroupArrayOutput)
}

type UserNacpolicySwitchGroupOutput struct{ *pulumi.OutputState }

func (UserNacpolicySwitchGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserNacpolicySwitchGroup)(nil)).Elem()
}

func (o UserNacpolicySwitchGroupOutput) ToUserNacpolicySwitchGroupOutput() UserNacpolicySwitchGroupOutput {
	return o
}

func (o UserNacpolicySwitchGroupOutput) ToUserNacpolicySwitchGroupOutputWithContext(ctx context.Context) UserNacpolicySwitchGroupOutput {
	return o
}

// Managed FortiSwitch group name from available options.
func (o UserNacpolicySwitchGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserNacpolicySwitchGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserNacpolicySwitchGroupArrayOutput struct{ *pulumi.OutputState }

func (UserNacpolicySwitchGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserNacpolicySwitchGroup)(nil)).Elem()
}

func (o UserNacpolicySwitchGroupArrayOutput) ToUserNacpolicySwitchGroupArrayOutput() UserNacpolicySwitchGroupArrayOutput {
	return o
}

func (o UserNacpolicySwitchGroupArrayOutput) ToUserNacpolicySwitchGroupArrayOutputWithContext(ctx context.Context) UserNacpolicySwitchGroupArrayOutput {
	return o
}

func (o UserNacpolicySwitchGroupArrayOutput) Index(i pulumi.IntInput) UserNacpolicySwitchGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserNacpolicySwitchGroup {
		return vs[0].([]UserNacpolicySwitchGroup)[vs[1].(int)]
	}).(UserNacpolicySwitchGroupOutput)
}

type UserNacpolicySwitchScope struct {
	// Managed FortiSwitch name from available options.
	SwitchId *string `pulumi:"switchId"`
}

// UserNacpolicySwitchScopeInput is an input type that accepts UserNacpolicySwitchScopeArgs and UserNacpolicySwitchScopeOutput values.
// You can construct a concrete instance of `UserNacpolicySwitchScopeInput` via:
//
//	UserNacpolicySwitchScopeArgs{...}
type UserNacpolicySwitchScopeInput interface {
	pulumi.Input

	ToUserNacpolicySwitchScopeOutput() UserNacpolicySwitchScopeOutput
	ToUserNacpolicySwitchScopeOutputWithContext(context.Context) UserNacpolicySwitchScopeOutput
}

type UserNacpolicySwitchScopeArgs struct {
	// Managed FortiSwitch name from available options.
	SwitchId pulumi.StringPtrInput `pulumi:"switchId"`
}

func (UserNacpolicySwitchScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserNacpolicySwitchScope)(nil)).Elem()
}

func (i UserNacpolicySwitchScopeArgs) ToUserNacpolicySwitchScopeOutput() UserNacpolicySwitchScopeOutput {
	return i.ToUserNacpolicySwitchScopeOutputWithContext(context.Background())
}

func (i UserNacpolicySwitchScopeArgs) ToUserNacpolicySwitchScopeOutputWithContext(ctx context.Context) UserNacpolicySwitchScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNacpolicySwitchScopeOutput)
}

// UserNacpolicySwitchScopeArrayInput is an input type that accepts UserNacpolicySwitchScopeArray and UserNacpolicySwitchScopeArrayOutput values.
// You can construct a concrete instance of `UserNacpolicySwitchScopeArrayInput` via:
//
//	UserNacpolicySwitchScopeArray{ UserNacpolicySwitchScopeArgs{...} }
type UserNacpolicySwitchScopeArrayInput interface {
	pulumi.Input

	ToUserNacpolicySwitchScopeArrayOutput() UserNacpolicySwitchScopeArrayOutput
	ToUserNacpolicySwitchScopeArrayOutputWithContext(context.Context) UserNacpolicySwitchScopeArrayOutput
}

type UserNacpolicySwitchScopeArray []UserNacpolicySwitchScopeInput

func (UserNacpolicySwitchScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserNacpolicySwitchScope)(nil)).Elem()
}

func (i UserNacpolicySwitchScopeArray) ToUserNacpolicySwitchScopeArrayOutput() UserNacpolicySwitchScopeArrayOutput {
	return i.ToUserNacpolicySwitchScopeArrayOutputWithContext(context.Background())
}

func (i UserNacpolicySwitchScopeArray) ToUserNacpolicySwitchScopeArrayOutputWithContext(ctx context.Context) UserNacpolicySwitchScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNacpolicySwitchScopeArrayOutput)
}

type UserNacpolicySwitchScopeOutput struct{ *pulumi.OutputState }

func (UserNacpolicySwitchScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserNacpolicySwitchScope)(nil)).Elem()
}

func (o UserNacpolicySwitchScopeOutput) ToUserNacpolicySwitchScopeOutput() UserNacpolicySwitchScopeOutput {
	return o
}

func (o UserNacpolicySwitchScopeOutput) ToUserNacpolicySwitchScopeOutputWithContext(ctx context.Context) UserNacpolicySwitchScopeOutput {
	return o
}

// Managed FortiSwitch name from available options.
func (o UserNacpolicySwitchScopeOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserNacpolicySwitchScope) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

type UserNacpolicySwitchScopeArrayOutput struct{ *pulumi.OutputState }

func (UserNacpolicySwitchScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserNacpolicySwitchScope)(nil)).Elem()
}

func (o UserNacpolicySwitchScopeArrayOutput) ToUserNacpolicySwitchScopeArrayOutput() UserNacpolicySwitchScopeArrayOutput {
	return o
}

func (o UserNacpolicySwitchScopeArrayOutput) ToUserNacpolicySwitchScopeArrayOutputWithContext(ctx context.Context) UserNacpolicySwitchScopeArrayOutput {
	return o
}

func (o UserNacpolicySwitchScopeArrayOutput) Index(i pulumi.IntInput) UserNacpolicySwitchScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserNacpolicySwitchScope {
		return vs[0].([]UserNacpolicySwitchScope)[vs[1].(int)]
	}).(UserNacpolicySwitchScopeOutput)
}

type UserPeergrpMember struct {
	// Peer group member name.
	Name *string `pulumi:"name"`
}

// UserPeergrpMemberInput is an input type that accepts UserPeergrpMemberArgs and UserPeergrpMemberOutput values.
// You can construct a concrete instance of `UserPeergrpMemberInput` via:
//
//	UserPeergrpMemberArgs{...}
type UserPeergrpMemberInput interface {
	pulumi.Input

	ToUserPeergrpMemberOutput() UserPeergrpMemberOutput
	ToUserPeergrpMemberOutputWithContext(context.Context) UserPeergrpMemberOutput
}

type UserPeergrpMemberArgs struct {
	// Peer group member name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserPeergrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPeergrpMember)(nil)).Elem()
}

func (i UserPeergrpMemberArgs) ToUserPeergrpMemberOutput() UserPeergrpMemberOutput {
	return i.ToUserPeergrpMemberOutputWithContext(context.Background())
}

func (i UserPeergrpMemberArgs) ToUserPeergrpMemberOutputWithContext(ctx context.Context) UserPeergrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPeergrpMemberOutput)
}

// UserPeergrpMemberArrayInput is an input type that accepts UserPeergrpMemberArray and UserPeergrpMemberArrayOutput values.
// You can construct a concrete instance of `UserPeergrpMemberArrayInput` via:
//
//	UserPeergrpMemberArray{ UserPeergrpMemberArgs{...} }
type UserPeergrpMemberArrayInput interface {
	pulumi.Input

	ToUserPeergrpMemberArrayOutput() UserPeergrpMemberArrayOutput
	ToUserPeergrpMemberArrayOutputWithContext(context.Context) UserPeergrpMemberArrayOutput
}

type UserPeergrpMemberArray []UserPeergrpMemberInput

func (UserPeergrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPeergrpMember)(nil)).Elem()
}

func (i UserPeergrpMemberArray) ToUserPeergrpMemberArrayOutput() UserPeergrpMemberArrayOutput {
	return i.ToUserPeergrpMemberArrayOutputWithContext(context.Background())
}

func (i UserPeergrpMemberArray) ToUserPeergrpMemberArrayOutputWithContext(ctx context.Context) UserPeergrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPeergrpMemberArrayOutput)
}

type UserPeergrpMemberOutput struct{ *pulumi.OutputState }

func (UserPeergrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPeergrpMember)(nil)).Elem()
}

func (o UserPeergrpMemberOutput) ToUserPeergrpMemberOutput() UserPeergrpMemberOutput {
	return o
}

func (o UserPeergrpMemberOutput) ToUserPeergrpMemberOutputWithContext(ctx context.Context) UserPeergrpMemberOutput {
	return o
}

// Peer group member name.
func (o UserPeergrpMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPeergrpMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserPeergrpMemberArrayOutput struct{ *pulumi.OutputState }

func (UserPeergrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPeergrpMember)(nil)).Elem()
}

func (o UserPeergrpMemberArrayOutput) ToUserPeergrpMemberArrayOutput() UserPeergrpMemberArrayOutput {
	return o
}

func (o UserPeergrpMemberArrayOutput) ToUserPeergrpMemberArrayOutputWithContext(ctx context.Context) UserPeergrpMemberArrayOutput {
	return o
}

func (o UserPeergrpMemberArrayOutput) Index(i pulumi.IntInput) UserPeergrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPeergrpMember {
		return vs[0].([]UserPeergrpMember)[vs[1].(int)]
	}).(UserPeergrpMemberOutput)
}

type UserQuarantineTarget struct {
	// Description for the quarantine entry.
	Description *string `pulumi:"description"`
	// Quarantine entry name.
	Entry *string `pulumi:"entry"`
	// Quarantine MACs. The structure of `macs` block is documented below.
	Macs []UserQuarantineTargetMac `pulumi:"macs"`
}

// UserQuarantineTargetInput is an input type that accepts UserQuarantineTargetArgs and UserQuarantineTargetOutput values.
// You can construct a concrete instance of `UserQuarantineTargetInput` via:
//
//	UserQuarantineTargetArgs{...}
type UserQuarantineTargetInput interface {
	pulumi.Input

	ToUserQuarantineTargetOutput() UserQuarantineTargetOutput
	ToUserQuarantineTargetOutputWithContext(context.Context) UserQuarantineTargetOutput
}

type UserQuarantineTargetArgs struct {
	// Description for the quarantine entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Quarantine entry name.
	Entry pulumi.StringPtrInput `pulumi:"entry"`
	// Quarantine MACs. The structure of `macs` block is documented below.
	Macs UserQuarantineTargetMacArrayInput `pulumi:"macs"`
}

func (UserQuarantineTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserQuarantineTarget)(nil)).Elem()
}

func (i UserQuarantineTargetArgs) ToUserQuarantineTargetOutput() UserQuarantineTargetOutput {
	return i.ToUserQuarantineTargetOutputWithContext(context.Background())
}

func (i UserQuarantineTargetArgs) ToUserQuarantineTargetOutputWithContext(ctx context.Context) UserQuarantineTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserQuarantineTargetOutput)
}

// UserQuarantineTargetArrayInput is an input type that accepts UserQuarantineTargetArray and UserQuarantineTargetArrayOutput values.
// You can construct a concrete instance of `UserQuarantineTargetArrayInput` via:
//
//	UserQuarantineTargetArray{ UserQuarantineTargetArgs{...} }
type UserQuarantineTargetArrayInput interface {
	pulumi.Input

	ToUserQuarantineTargetArrayOutput() UserQuarantineTargetArrayOutput
	ToUserQuarantineTargetArrayOutputWithContext(context.Context) UserQuarantineTargetArrayOutput
}

type UserQuarantineTargetArray []UserQuarantineTargetInput

func (UserQuarantineTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserQuarantineTarget)(nil)).Elem()
}

func (i UserQuarantineTargetArray) ToUserQuarantineTargetArrayOutput() UserQuarantineTargetArrayOutput {
	return i.ToUserQuarantineTargetArrayOutputWithContext(context.Background())
}

func (i UserQuarantineTargetArray) ToUserQuarantineTargetArrayOutputWithContext(ctx context.Context) UserQuarantineTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserQuarantineTargetArrayOutput)
}

type UserQuarantineTargetOutput struct{ *pulumi.OutputState }

func (UserQuarantineTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserQuarantineTarget)(nil)).Elem()
}

func (o UserQuarantineTargetOutput) ToUserQuarantineTargetOutput() UserQuarantineTargetOutput {
	return o
}

func (o UserQuarantineTargetOutput) ToUserQuarantineTargetOutputWithContext(ctx context.Context) UserQuarantineTargetOutput {
	return o
}

// Description for the quarantine entry.
func (o UserQuarantineTargetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserQuarantineTarget) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Quarantine entry name.
func (o UserQuarantineTargetOutput) Entry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserQuarantineTarget) *string { return v.Entry }).(pulumi.StringPtrOutput)
}

// Quarantine MACs. The structure of `macs` block is documented below.
func (o UserQuarantineTargetOutput) Macs() UserQuarantineTargetMacArrayOutput {
	return o.ApplyT(func(v UserQuarantineTarget) []UserQuarantineTargetMac { return v.Macs }).(UserQuarantineTargetMacArrayOutput)
}

type UserQuarantineTargetArrayOutput struct{ *pulumi.OutputState }

func (UserQuarantineTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserQuarantineTarget)(nil)).Elem()
}

func (o UserQuarantineTargetArrayOutput) ToUserQuarantineTargetArrayOutput() UserQuarantineTargetArrayOutput {
	return o
}

func (o UserQuarantineTargetArrayOutput) ToUserQuarantineTargetArrayOutputWithContext(ctx context.Context) UserQuarantineTargetArrayOutput {
	return o
}

func (o UserQuarantineTargetArrayOutput) Index(i pulumi.IntInput) UserQuarantineTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserQuarantineTarget {
		return vs[0].([]UserQuarantineTarget)[vs[1].(int)]
	}).(UserQuarantineTargetOutput)
}

type UserQuarantineTargetMac struct {
	// Description for the quarantine MAC.
	Description *string `pulumi:"description"`
	// Enable/Disable dropping of quarantined device traffic Valid values: `disable`, `enable`.
	Drop *string `pulumi:"drop"`
	// FSW entry id for the quarantine MAC.
	EntryId *int `pulumi:"entryId"`
	// Quarantine MAC.
	Mac *string `pulumi:"mac"`
	// Parent entry name.
	Parent *string `pulumi:"parent"`
}

// UserQuarantineTargetMacInput is an input type that accepts UserQuarantineTargetMacArgs and UserQuarantineTargetMacOutput values.
// You can construct a concrete instance of `UserQuarantineTargetMacInput` via:
//
//	UserQuarantineTargetMacArgs{...}
type UserQuarantineTargetMacInput interface {
	pulumi.Input

	ToUserQuarantineTargetMacOutput() UserQuarantineTargetMacOutput
	ToUserQuarantineTargetMacOutputWithContext(context.Context) UserQuarantineTargetMacOutput
}

type UserQuarantineTargetMacArgs struct {
	// Description for the quarantine MAC.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enable/Disable dropping of quarantined device traffic Valid values: `disable`, `enable`.
	Drop pulumi.StringPtrInput `pulumi:"drop"`
	// FSW entry id for the quarantine MAC.
	EntryId pulumi.IntPtrInput `pulumi:"entryId"`
	// Quarantine MAC.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Parent entry name.
	Parent pulumi.StringPtrInput `pulumi:"parent"`
}

func (UserQuarantineTargetMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserQuarantineTargetMac)(nil)).Elem()
}

func (i UserQuarantineTargetMacArgs) ToUserQuarantineTargetMacOutput() UserQuarantineTargetMacOutput {
	return i.ToUserQuarantineTargetMacOutputWithContext(context.Background())
}

func (i UserQuarantineTargetMacArgs) ToUserQuarantineTargetMacOutputWithContext(ctx context.Context) UserQuarantineTargetMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserQuarantineTargetMacOutput)
}

// UserQuarantineTargetMacArrayInput is an input type that accepts UserQuarantineTargetMacArray and UserQuarantineTargetMacArrayOutput values.
// You can construct a concrete instance of `UserQuarantineTargetMacArrayInput` via:
//
//	UserQuarantineTargetMacArray{ UserQuarantineTargetMacArgs{...} }
type UserQuarantineTargetMacArrayInput interface {
	pulumi.Input

	ToUserQuarantineTargetMacArrayOutput() UserQuarantineTargetMacArrayOutput
	ToUserQuarantineTargetMacArrayOutputWithContext(context.Context) UserQuarantineTargetMacArrayOutput
}

type UserQuarantineTargetMacArray []UserQuarantineTargetMacInput

func (UserQuarantineTargetMacArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserQuarantineTargetMac)(nil)).Elem()
}

func (i UserQuarantineTargetMacArray) ToUserQuarantineTargetMacArrayOutput() UserQuarantineTargetMacArrayOutput {
	return i.ToUserQuarantineTargetMacArrayOutputWithContext(context.Background())
}

func (i UserQuarantineTargetMacArray) ToUserQuarantineTargetMacArrayOutputWithContext(ctx context.Context) UserQuarantineTargetMacArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserQuarantineTargetMacArrayOutput)
}

type UserQuarantineTargetMacOutput struct{ *pulumi.OutputState }

func (UserQuarantineTargetMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserQuarantineTargetMac)(nil)).Elem()
}

func (o UserQuarantineTargetMacOutput) ToUserQuarantineTargetMacOutput() UserQuarantineTargetMacOutput {
	return o
}

func (o UserQuarantineTargetMacOutput) ToUserQuarantineTargetMacOutputWithContext(ctx context.Context) UserQuarantineTargetMacOutput {
	return o
}

// Description for the quarantine MAC.
func (o UserQuarantineTargetMacOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserQuarantineTargetMac) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable/Disable dropping of quarantined device traffic Valid values: `disable`, `enable`.
func (o UserQuarantineTargetMacOutput) Drop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserQuarantineTargetMac) *string { return v.Drop }).(pulumi.StringPtrOutput)
}

// FSW entry id for the quarantine MAC.
func (o UserQuarantineTargetMacOutput) EntryId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserQuarantineTargetMac) *int { return v.EntryId }).(pulumi.IntPtrOutput)
}

// Quarantine MAC.
func (o UserQuarantineTargetMacOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserQuarantineTargetMac) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Parent entry name.
func (o UserQuarantineTargetMacOutput) Parent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserQuarantineTargetMac) *string { return v.Parent }).(pulumi.StringPtrOutput)
}

type UserQuarantineTargetMacArrayOutput struct{ *pulumi.OutputState }

func (UserQuarantineTargetMacArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserQuarantineTargetMac)(nil)).Elem()
}

func (o UserQuarantineTargetMacArrayOutput) ToUserQuarantineTargetMacArrayOutput() UserQuarantineTargetMacArrayOutput {
	return o
}

func (o UserQuarantineTargetMacArrayOutput) ToUserQuarantineTargetMacArrayOutputWithContext(ctx context.Context) UserQuarantineTargetMacArrayOutput {
	return o
}

func (o UserQuarantineTargetMacArrayOutput) Index(i pulumi.IntInput) UserQuarantineTargetMacOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserQuarantineTargetMac {
		return vs[0].([]UserQuarantineTargetMac)[vs[1].(int)]
	}).(UserQuarantineTargetMacOutput)
}

type UserRadiusAccountingServer struct {
	// ID (0 - 4294967295).
	Id *int `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// RADIUS accounting port number.
	Port *int `pulumi:"port"`
	// Secret key.
	Secret *string `pulumi:"secret"`
	// {<name_str|ip_str>} Server CN domain name or IP.
	Server *string `pulumi:"server"`
	// Source IP address for communications to the RADIUS server.
	SourceIp *string `pulumi:"sourceIp"`
	// Status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// UserRadiusAccountingServerInput is an input type that accepts UserRadiusAccountingServerArgs and UserRadiusAccountingServerOutput values.
// You can construct a concrete instance of `UserRadiusAccountingServerInput` via:
//
//	UserRadiusAccountingServerArgs{...}
type UserRadiusAccountingServerInput interface {
	pulumi.Input

	ToUserRadiusAccountingServerOutput() UserRadiusAccountingServerOutput
	ToUserRadiusAccountingServerOutputWithContext(context.Context) UserRadiusAccountingServerOutput
}

type UserRadiusAccountingServerArgs struct {
	// ID (0 - 4294967295).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput `pulumi:"interfaceSelectMethod"`
	// RADIUS accounting port number.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Secret key.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// {<name_str|ip_str>} Server CN domain name or IP.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// Source IP address for communications to the RADIUS server.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
	// Status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (UserRadiusAccountingServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRadiusAccountingServer)(nil)).Elem()
}

func (i UserRadiusAccountingServerArgs) ToUserRadiusAccountingServerOutput() UserRadiusAccountingServerOutput {
	return i.ToUserRadiusAccountingServerOutputWithContext(context.Background())
}

func (i UserRadiusAccountingServerArgs) ToUserRadiusAccountingServerOutputWithContext(ctx context.Context) UserRadiusAccountingServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRadiusAccountingServerOutput)
}

// UserRadiusAccountingServerArrayInput is an input type that accepts UserRadiusAccountingServerArray and UserRadiusAccountingServerArrayOutput values.
// You can construct a concrete instance of `UserRadiusAccountingServerArrayInput` via:
//
//	UserRadiusAccountingServerArray{ UserRadiusAccountingServerArgs{...} }
type UserRadiusAccountingServerArrayInput interface {
	pulumi.Input

	ToUserRadiusAccountingServerArrayOutput() UserRadiusAccountingServerArrayOutput
	ToUserRadiusAccountingServerArrayOutputWithContext(context.Context) UserRadiusAccountingServerArrayOutput
}

type UserRadiusAccountingServerArray []UserRadiusAccountingServerInput

func (UserRadiusAccountingServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserRadiusAccountingServer)(nil)).Elem()
}

func (i UserRadiusAccountingServerArray) ToUserRadiusAccountingServerArrayOutput() UserRadiusAccountingServerArrayOutput {
	return i.ToUserRadiusAccountingServerArrayOutputWithContext(context.Background())
}

func (i UserRadiusAccountingServerArray) ToUserRadiusAccountingServerArrayOutputWithContext(ctx context.Context) UserRadiusAccountingServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRadiusAccountingServerArrayOutput)
}

type UserRadiusAccountingServerOutput struct{ *pulumi.OutputState }

func (UserRadiusAccountingServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRadiusAccountingServer)(nil)).Elem()
}

func (o UserRadiusAccountingServerOutput) ToUserRadiusAccountingServerOutput() UserRadiusAccountingServerOutput {
	return o
}

func (o UserRadiusAccountingServerOutput) ToUserRadiusAccountingServerOutputWithContext(ctx context.Context) UserRadiusAccountingServerOutput {
	return o
}

// ID (0 - 4294967295).
func (o UserRadiusAccountingServerOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserRadiusAccountingServer) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Specify outgoing interface to reach server.
func (o UserRadiusAccountingServerOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRadiusAccountingServer) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o UserRadiusAccountingServerOutput) InterfaceSelectMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRadiusAccountingServer) *string { return v.InterfaceSelectMethod }).(pulumi.StringPtrOutput)
}

// RADIUS accounting port number.
func (o UserRadiusAccountingServerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserRadiusAccountingServer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Secret key.
func (o UserRadiusAccountingServerOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRadiusAccountingServer) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// {<name_str|ip_str>} Server CN domain name or IP.
func (o UserRadiusAccountingServerOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRadiusAccountingServer) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Source IP address for communications to the RADIUS server.
func (o UserRadiusAccountingServerOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRadiusAccountingServer) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

// Status. Valid values: `enable`, `disable`.
func (o UserRadiusAccountingServerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRadiusAccountingServer) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type UserRadiusAccountingServerArrayOutput struct{ *pulumi.OutputState }

func (UserRadiusAccountingServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserRadiusAccountingServer)(nil)).Elem()
}

func (o UserRadiusAccountingServerArrayOutput) ToUserRadiusAccountingServerArrayOutput() UserRadiusAccountingServerArrayOutput {
	return o
}

func (o UserRadiusAccountingServerArrayOutput) ToUserRadiusAccountingServerArrayOutputWithContext(ctx context.Context) UserRadiusAccountingServerArrayOutput {
	return o
}

func (o UserRadiusAccountingServerArrayOutput) Index(i pulumi.IntInput) UserRadiusAccountingServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserRadiusAccountingServer {
		return vs[0].([]UserRadiusAccountingServer)[vs[1].(int)]
	}).(UserRadiusAccountingServerOutput)
}

type UserRadiusClass struct {
	// Class name.
	Name *string `pulumi:"name"`
}

// UserRadiusClassInput is an input type that accepts UserRadiusClassArgs and UserRadiusClassOutput values.
// You can construct a concrete instance of `UserRadiusClassInput` via:
//
//	UserRadiusClassArgs{...}
type UserRadiusClassInput interface {
	pulumi.Input

	ToUserRadiusClassOutput() UserRadiusClassOutput
	ToUserRadiusClassOutputWithContext(context.Context) UserRadiusClassOutput
}

type UserRadiusClassArgs struct {
	// Class name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserRadiusClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRadiusClass)(nil)).Elem()
}

func (i UserRadiusClassArgs) ToUserRadiusClassOutput() UserRadiusClassOutput {
	return i.ToUserRadiusClassOutputWithContext(context.Background())
}

func (i UserRadiusClassArgs) ToUserRadiusClassOutputWithContext(ctx context.Context) UserRadiusClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRadiusClassOutput)
}

// UserRadiusClassArrayInput is an input type that accepts UserRadiusClassArray and UserRadiusClassArrayOutput values.
// You can construct a concrete instance of `UserRadiusClassArrayInput` via:
//
//	UserRadiusClassArray{ UserRadiusClassArgs{...} }
type UserRadiusClassArrayInput interface {
	pulumi.Input

	ToUserRadiusClassArrayOutput() UserRadiusClassArrayOutput
	ToUserRadiusClassArrayOutputWithContext(context.Context) UserRadiusClassArrayOutput
}

type UserRadiusClassArray []UserRadiusClassInput

func (UserRadiusClassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserRadiusClass)(nil)).Elem()
}

func (i UserRadiusClassArray) ToUserRadiusClassArrayOutput() UserRadiusClassArrayOutput {
	return i.ToUserRadiusClassArrayOutputWithContext(context.Background())
}

func (i UserRadiusClassArray) ToUserRadiusClassArrayOutputWithContext(ctx context.Context) UserRadiusClassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRadiusClassArrayOutput)
}

type UserRadiusClassOutput struct{ *pulumi.OutputState }

func (UserRadiusClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRadiusClass)(nil)).Elem()
}

func (o UserRadiusClassOutput) ToUserRadiusClassOutput() UserRadiusClassOutput {
	return o
}

func (o UserRadiusClassOutput) ToUserRadiusClassOutputWithContext(ctx context.Context) UserRadiusClassOutput {
	return o
}

// Class name.
func (o UserRadiusClassOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRadiusClass) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserRadiusClassArrayOutput struct{ *pulumi.OutputState }

func (UserRadiusClassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserRadiusClass)(nil)).Elem()
}

func (o UserRadiusClassArrayOutput) ToUserRadiusClassArrayOutput() UserRadiusClassArrayOutput {
	return o
}

func (o UserRadiusClassArrayOutput) ToUserRadiusClassArrayOutputWithContext(ctx context.Context) UserRadiusClassArrayOutput {
	return o
}

func (o UserRadiusClassArrayOutput) Index(i pulumi.IntInput) UserRadiusClassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserRadiusClass {
		return vs[0].([]UserRadiusClass)[vs[1].(int)]
	}).(UserRadiusClassOutput)
}

type UserSecurityexemptlistRule struct {
	// Devices or device groups. The structure of `devices` block is documented below.
	Devices []UserSecurityexemptlistRuleDevice `pulumi:"devices"`
	// Destination addresses or address groups. The structure of `dstaddr` block is documented below.
	Dstaddrs []UserSecurityexemptlistRuleDstaddr `pulumi:"dstaddrs"`
	// ID.
	Id *int `pulumi:"id"`
	// Destination services. The structure of `service` block is documented below.
	Services []UserSecurityexemptlistRuleService `pulumi:"services"`
	// Source addresses or address groups. The structure of `srcaddr` block is documented below.
	Srcaddrs []UserSecurityexemptlistRuleSrcaddr `pulumi:"srcaddrs"`
}

// UserSecurityexemptlistRuleInput is an input type that accepts UserSecurityexemptlistRuleArgs and UserSecurityexemptlistRuleOutput values.
// You can construct a concrete instance of `UserSecurityexemptlistRuleInput` via:
//
//	UserSecurityexemptlistRuleArgs{...}
type UserSecurityexemptlistRuleInput interface {
	pulumi.Input

	ToUserSecurityexemptlistRuleOutput() UserSecurityexemptlistRuleOutput
	ToUserSecurityexemptlistRuleOutputWithContext(context.Context) UserSecurityexemptlistRuleOutput
}

type UserSecurityexemptlistRuleArgs struct {
	// Devices or device groups. The structure of `devices` block is documented below.
	Devices UserSecurityexemptlistRuleDeviceArrayInput `pulumi:"devices"`
	// Destination addresses or address groups. The structure of `dstaddr` block is documented below.
	Dstaddrs UserSecurityexemptlistRuleDstaddrArrayInput `pulumi:"dstaddrs"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Destination services. The structure of `service` block is documented below.
	Services UserSecurityexemptlistRuleServiceArrayInput `pulumi:"services"`
	// Source addresses or address groups. The structure of `srcaddr` block is documented below.
	Srcaddrs UserSecurityexemptlistRuleSrcaddrArrayInput `pulumi:"srcaddrs"`
}

func (UserSecurityexemptlistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecurityexemptlistRule)(nil)).Elem()
}

func (i UserSecurityexemptlistRuleArgs) ToUserSecurityexemptlistRuleOutput() UserSecurityexemptlistRuleOutput {
	return i.ToUserSecurityexemptlistRuleOutputWithContext(context.Background())
}

func (i UserSecurityexemptlistRuleArgs) ToUserSecurityexemptlistRuleOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecurityexemptlistRuleOutput)
}

// UserSecurityexemptlistRuleArrayInput is an input type that accepts UserSecurityexemptlistRuleArray and UserSecurityexemptlistRuleArrayOutput values.
// You can construct a concrete instance of `UserSecurityexemptlistRuleArrayInput` via:
//
//	UserSecurityexemptlistRuleArray{ UserSecurityexemptlistRuleArgs{...} }
type UserSecurityexemptlistRuleArrayInput interface {
	pulumi.Input

	ToUserSecurityexemptlistRuleArrayOutput() UserSecurityexemptlistRuleArrayOutput
	ToUserSecurityexemptlistRuleArrayOutputWithContext(context.Context) UserSecurityexemptlistRuleArrayOutput
}

type UserSecurityexemptlistRuleArray []UserSecurityexemptlistRuleInput

func (UserSecurityexemptlistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSecurityexemptlistRule)(nil)).Elem()
}

func (i UserSecurityexemptlistRuleArray) ToUserSecurityexemptlistRuleArrayOutput() UserSecurityexemptlistRuleArrayOutput {
	return i.ToUserSecurityexemptlistRuleArrayOutputWithContext(context.Background())
}

func (i UserSecurityexemptlistRuleArray) ToUserSecurityexemptlistRuleArrayOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecurityexemptlistRuleArrayOutput)
}

type UserSecurityexemptlistRuleOutput struct{ *pulumi.OutputState }

func (UserSecurityexemptlistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecurityexemptlistRule)(nil)).Elem()
}

func (o UserSecurityexemptlistRuleOutput) ToUserSecurityexemptlistRuleOutput() UserSecurityexemptlistRuleOutput {
	return o
}

func (o UserSecurityexemptlistRuleOutput) ToUserSecurityexemptlistRuleOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleOutput {
	return o
}

// Devices or device groups. The structure of `devices` block is documented below.
func (o UserSecurityexemptlistRuleOutput) Devices() UserSecurityexemptlistRuleDeviceArrayOutput {
	return o.ApplyT(func(v UserSecurityexemptlistRule) []UserSecurityexemptlistRuleDevice { return v.Devices }).(UserSecurityexemptlistRuleDeviceArrayOutput)
}

// Destination addresses or address groups. The structure of `dstaddr` block is documented below.
func (o UserSecurityexemptlistRuleOutput) Dstaddrs() UserSecurityexemptlistRuleDstaddrArrayOutput {
	return o.ApplyT(func(v UserSecurityexemptlistRule) []UserSecurityexemptlistRuleDstaddr { return v.Dstaddrs }).(UserSecurityexemptlistRuleDstaddrArrayOutput)
}

// ID.
func (o UserSecurityexemptlistRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserSecurityexemptlistRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Destination services. The structure of `service` block is documented below.
func (o UserSecurityexemptlistRuleOutput) Services() UserSecurityexemptlistRuleServiceArrayOutput {
	return o.ApplyT(func(v UserSecurityexemptlistRule) []UserSecurityexemptlistRuleService { return v.Services }).(UserSecurityexemptlistRuleServiceArrayOutput)
}

// Source addresses or address groups. The structure of `srcaddr` block is documented below.
func (o UserSecurityexemptlistRuleOutput) Srcaddrs() UserSecurityexemptlistRuleSrcaddrArrayOutput {
	return o.ApplyT(func(v UserSecurityexemptlistRule) []UserSecurityexemptlistRuleSrcaddr { return v.Srcaddrs }).(UserSecurityexemptlistRuleSrcaddrArrayOutput)
}

type UserSecurityexemptlistRuleArrayOutput struct{ *pulumi.OutputState }

func (UserSecurityexemptlistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSecurityexemptlistRule)(nil)).Elem()
}

func (o UserSecurityexemptlistRuleArrayOutput) ToUserSecurityexemptlistRuleArrayOutput() UserSecurityexemptlistRuleArrayOutput {
	return o
}

func (o UserSecurityexemptlistRuleArrayOutput) ToUserSecurityexemptlistRuleArrayOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleArrayOutput {
	return o
}

func (o UserSecurityexemptlistRuleArrayOutput) Index(i pulumi.IntInput) UserSecurityexemptlistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSecurityexemptlistRule {
		return vs[0].([]UserSecurityexemptlistRule)[vs[1].(int)]
	}).(UserSecurityexemptlistRuleOutput)
}

type UserSecurityexemptlistRuleDevice struct {
	// Device or group name.
	Name *string `pulumi:"name"`
}

// UserSecurityexemptlistRuleDeviceInput is an input type that accepts UserSecurityexemptlistRuleDeviceArgs and UserSecurityexemptlistRuleDeviceOutput values.
// You can construct a concrete instance of `UserSecurityexemptlistRuleDeviceInput` via:
//
//	UserSecurityexemptlistRuleDeviceArgs{...}
type UserSecurityexemptlistRuleDeviceInput interface {
	pulumi.Input

	ToUserSecurityexemptlistRuleDeviceOutput() UserSecurityexemptlistRuleDeviceOutput
	ToUserSecurityexemptlistRuleDeviceOutputWithContext(context.Context) UserSecurityexemptlistRuleDeviceOutput
}

type UserSecurityexemptlistRuleDeviceArgs struct {
	// Device or group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserSecurityexemptlistRuleDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecurityexemptlistRuleDevice)(nil)).Elem()
}

func (i UserSecurityexemptlistRuleDeviceArgs) ToUserSecurityexemptlistRuleDeviceOutput() UserSecurityexemptlistRuleDeviceOutput {
	return i.ToUserSecurityexemptlistRuleDeviceOutputWithContext(context.Background())
}

func (i UserSecurityexemptlistRuleDeviceArgs) ToUserSecurityexemptlistRuleDeviceOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecurityexemptlistRuleDeviceOutput)
}

// UserSecurityexemptlistRuleDeviceArrayInput is an input type that accepts UserSecurityexemptlistRuleDeviceArray and UserSecurityexemptlistRuleDeviceArrayOutput values.
// You can construct a concrete instance of `UserSecurityexemptlistRuleDeviceArrayInput` via:
//
//	UserSecurityexemptlistRuleDeviceArray{ UserSecurityexemptlistRuleDeviceArgs{...} }
type UserSecurityexemptlistRuleDeviceArrayInput interface {
	pulumi.Input

	ToUserSecurityexemptlistRuleDeviceArrayOutput() UserSecurityexemptlistRuleDeviceArrayOutput
	ToUserSecurityexemptlistRuleDeviceArrayOutputWithContext(context.Context) UserSecurityexemptlistRuleDeviceArrayOutput
}

type UserSecurityexemptlistRuleDeviceArray []UserSecurityexemptlistRuleDeviceInput

func (UserSecurityexemptlistRuleDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSecurityexemptlistRuleDevice)(nil)).Elem()
}

func (i UserSecurityexemptlistRuleDeviceArray) ToUserSecurityexemptlistRuleDeviceArrayOutput() UserSecurityexemptlistRuleDeviceArrayOutput {
	return i.ToUserSecurityexemptlistRuleDeviceArrayOutputWithContext(context.Background())
}

func (i UserSecurityexemptlistRuleDeviceArray) ToUserSecurityexemptlistRuleDeviceArrayOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecurityexemptlistRuleDeviceArrayOutput)
}

type UserSecurityexemptlistRuleDeviceOutput struct{ *pulumi.OutputState }

func (UserSecurityexemptlistRuleDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecurityexemptlistRuleDevice)(nil)).Elem()
}

func (o UserSecurityexemptlistRuleDeviceOutput) ToUserSecurityexemptlistRuleDeviceOutput() UserSecurityexemptlistRuleDeviceOutput {
	return o
}

func (o UserSecurityexemptlistRuleDeviceOutput) ToUserSecurityexemptlistRuleDeviceOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleDeviceOutput {
	return o
}

// Device or group name.
func (o UserSecurityexemptlistRuleDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSecurityexemptlistRuleDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserSecurityexemptlistRuleDeviceArrayOutput struct{ *pulumi.OutputState }

func (UserSecurityexemptlistRuleDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSecurityexemptlistRuleDevice)(nil)).Elem()
}

func (o UserSecurityexemptlistRuleDeviceArrayOutput) ToUserSecurityexemptlistRuleDeviceArrayOutput() UserSecurityexemptlistRuleDeviceArrayOutput {
	return o
}

func (o UserSecurityexemptlistRuleDeviceArrayOutput) ToUserSecurityexemptlistRuleDeviceArrayOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleDeviceArrayOutput {
	return o
}

func (o UserSecurityexemptlistRuleDeviceArrayOutput) Index(i pulumi.IntInput) UserSecurityexemptlistRuleDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSecurityexemptlistRuleDevice {
		return vs[0].([]UserSecurityexemptlistRuleDevice)[vs[1].(int)]
	}).(UserSecurityexemptlistRuleDeviceOutput)
}

type UserSecurityexemptlistRuleDstaddr struct {
	// Address or group name.
	Name *string `pulumi:"name"`
}

// UserSecurityexemptlistRuleDstaddrInput is an input type that accepts UserSecurityexemptlistRuleDstaddrArgs and UserSecurityexemptlistRuleDstaddrOutput values.
// You can construct a concrete instance of `UserSecurityexemptlistRuleDstaddrInput` via:
//
//	UserSecurityexemptlistRuleDstaddrArgs{...}
type UserSecurityexemptlistRuleDstaddrInput interface {
	pulumi.Input

	ToUserSecurityexemptlistRuleDstaddrOutput() UserSecurityexemptlistRuleDstaddrOutput
	ToUserSecurityexemptlistRuleDstaddrOutputWithContext(context.Context) UserSecurityexemptlistRuleDstaddrOutput
}

type UserSecurityexemptlistRuleDstaddrArgs struct {
	// Address or group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserSecurityexemptlistRuleDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecurityexemptlistRuleDstaddr)(nil)).Elem()
}

func (i UserSecurityexemptlistRuleDstaddrArgs) ToUserSecurityexemptlistRuleDstaddrOutput() UserSecurityexemptlistRuleDstaddrOutput {
	return i.ToUserSecurityexemptlistRuleDstaddrOutputWithContext(context.Background())
}

func (i UserSecurityexemptlistRuleDstaddrArgs) ToUserSecurityexemptlistRuleDstaddrOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecurityexemptlistRuleDstaddrOutput)
}

// UserSecurityexemptlistRuleDstaddrArrayInput is an input type that accepts UserSecurityexemptlistRuleDstaddrArray and UserSecurityexemptlistRuleDstaddrArrayOutput values.
// You can construct a concrete instance of `UserSecurityexemptlistRuleDstaddrArrayInput` via:
//
//	UserSecurityexemptlistRuleDstaddrArray{ UserSecurityexemptlistRuleDstaddrArgs{...} }
type UserSecurityexemptlistRuleDstaddrArrayInput interface {
	pulumi.Input

	ToUserSecurityexemptlistRuleDstaddrArrayOutput() UserSecurityexemptlistRuleDstaddrArrayOutput
	ToUserSecurityexemptlistRuleDstaddrArrayOutputWithContext(context.Context) UserSecurityexemptlistRuleDstaddrArrayOutput
}

type UserSecurityexemptlistRuleDstaddrArray []UserSecurityexemptlistRuleDstaddrInput

func (UserSecurityexemptlistRuleDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSecurityexemptlistRuleDstaddr)(nil)).Elem()
}

func (i UserSecurityexemptlistRuleDstaddrArray) ToUserSecurityexemptlistRuleDstaddrArrayOutput() UserSecurityexemptlistRuleDstaddrArrayOutput {
	return i.ToUserSecurityexemptlistRuleDstaddrArrayOutputWithContext(context.Background())
}

func (i UserSecurityexemptlistRuleDstaddrArray) ToUserSecurityexemptlistRuleDstaddrArrayOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecurityexemptlistRuleDstaddrArrayOutput)
}

type UserSecurityexemptlistRuleDstaddrOutput struct{ *pulumi.OutputState }

func (UserSecurityexemptlistRuleDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecurityexemptlistRuleDstaddr)(nil)).Elem()
}

func (o UserSecurityexemptlistRuleDstaddrOutput) ToUserSecurityexemptlistRuleDstaddrOutput() UserSecurityexemptlistRuleDstaddrOutput {
	return o
}

func (o UserSecurityexemptlistRuleDstaddrOutput) ToUserSecurityexemptlistRuleDstaddrOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleDstaddrOutput {
	return o
}

// Address or group name.
func (o UserSecurityexemptlistRuleDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSecurityexemptlistRuleDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserSecurityexemptlistRuleDstaddrArrayOutput struct{ *pulumi.OutputState }

func (UserSecurityexemptlistRuleDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSecurityexemptlistRuleDstaddr)(nil)).Elem()
}

func (o UserSecurityexemptlistRuleDstaddrArrayOutput) ToUserSecurityexemptlistRuleDstaddrArrayOutput() UserSecurityexemptlistRuleDstaddrArrayOutput {
	return o
}

func (o UserSecurityexemptlistRuleDstaddrArrayOutput) ToUserSecurityexemptlistRuleDstaddrArrayOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleDstaddrArrayOutput {
	return o
}

func (o UserSecurityexemptlistRuleDstaddrArrayOutput) Index(i pulumi.IntInput) UserSecurityexemptlistRuleDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSecurityexemptlistRuleDstaddr {
		return vs[0].([]UserSecurityexemptlistRuleDstaddr)[vs[1].(int)]
	}).(UserSecurityexemptlistRuleDstaddrOutput)
}

type UserSecurityexemptlistRuleService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// UserSecurityexemptlistRuleServiceInput is an input type that accepts UserSecurityexemptlistRuleServiceArgs and UserSecurityexemptlistRuleServiceOutput values.
// You can construct a concrete instance of `UserSecurityexemptlistRuleServiceInput` via:
//
//	UserSecurityexemptlistRuleServiceArgs{...}
type UserSecurityexemptlistRuleServiceInput interface {
	pulumi.Input

	ToUserSecurityexemptlistRuleServiceOutput() UserSecurityexemptlistRuleServiceOutput
	ToUserSecurityexemptlistRuleServiceOutputWithContext(context.Context) UserSecurityexemptlistRuleServiceOutput
}

type UserSecurityexemptlistRuleServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserSecurityexemptlistRuleServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecurityexemptlistRuleService)(nil)).Elem()
}

func (i UserSecurityexemptlistRuleServiceArgs) ToUserSecurityexemptlistRuleServiceOutput() UserSecurityexemptlistRuleServiceOutput {
	return i.ToUserSecurityexemptlistRuleServiceOutputWithContext(context.Background())
}

func (i UserSecurityexemptlistRuleServiceArgs) ToUserSecurityexemptlistRuleServiceOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecurityexemptlistRuleServiceOutput)
}

// UserSecurityexemptlistRuleServiceArrayInput is an input type that accepts UserSecurityexemptlistRuleServiceArray and UserSecurityexemptlistRuleServiceArrayOutput values.
// You can construct a concrete instance of `UserSecurityexemptlistRuleServiceArrayInput` via:
//
//	UserSecurityexemptlistRuleServiceArray{ UserSecurityexemptlistRuleServiceArgs{...} }
type UserSecurityexemptlistRuleServiceArrayInput interface {
	pulumi.Input

	ToUserSecurityexemptlistRuleServiceArrayOutput() UserSecurityexemptlistRuleServiceArrayOutput
	ToUserSecurityexemptlistRuleServiceArrayOutputWithContext(context.Context) UserSecurityexemptlistRuleServiceArrayOutput
}

type UserSecurityexemptlistRuleServiceArray []UserSecurityexemptlistRuleServiceInput

func (UserSecurityexemptlistRuleServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSecurityexemptlistRuleService)(nil)).Elem()
}

func (i UserSecurityexemptlistRuleServiceArray) ToUserSecurityexemptlistRuleServiceArrayOutput() UserSecurityexemptlistRuleServiceArrayOutput {
	return i.ToUserSecurityexemptlistRuleServiceArrayOutputWithContext(context.Background())
}

func (i UserSecurityexemptlistRuleServiceArray) ToUserSecurityexemptlistRuleServiceArrayOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecurityexemptlistRuleServiceArrayOutput)
}

type UserSecurityexemptlistRuleServiceOutput struct{ *pulumi.OutputState }

func (UserSecurityexemptlistRuleServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecurityexemptlistRuleService)(nil)).Elem()
}

func (o UserSecurityexemptlistRuleServiceOutput) ToUserSecurityexemptlistRuleServiceOutput() UserSecurityexemptlistRuleServiceOutput {
	return o
}

func (o UserSecurityexemptlistRuleServiceOutput) ToUserSecurityexemptlistRuleServiceOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleServiceOutput {
	return o
}

// Service name.
func (o UserSecurityexemptlistRuleServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSecurityexemptlistRuleService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserSecurityexemptlistRuleServiceArrayOutput struct{ *pulumi.OutputState }

func (UserSecurityexemptlistRuleServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSecurityexemptlistRuleService)(nil)).Elem()
}

func (o UserSecurityexemptlistRuleServiceArrayOutput) ToUserSecurityexemptlistRuleServiceArrayOutput() UserSecurityexemptlistRuleServiceArrayOutput {
	return o
}

func (o UserSecurityexemptlistRuleServiceArrayOutput) ToUserSecurityexemptlistRuleServiceArrayOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleServiceArrayOutput {
	return o
}

func (o UserSecurityexemptlistRuleServiceArrayOutput) Index(i pulumi.IntInput) UserSecurityexemptlistRuleServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSecurityexemptlistRuleService {
		return vs[0].([]UserSecurityexemptlistRuleService)[vs[1].(int)]
	}).(UserSecurityexemptlistRuleServiceOutput)
}

type UserSecurityexemptlistRuleSrcaddr struct {
	// Address or group name.
	Name *string `pulumi:"name"`
}

// UserSecurityexemptlistRuleSrcaddrInput is an input type that accepts UserSecurityexemptlistRuleSrcaddrArgs and UserSecurityexemptlistRuleSrcaddrOutput values.
// You can construct a concrete instance of `UserSecurityexemptlistRuleSrcaddrInput` via:
//
//	UserSecurityexemptlistRuleSrcaddrArgs{...}
type UserSecurityexemptlistRuleSrcaddrInput interface {
	pulumi.Input

	ToUserSecurityexemptlistRuleSrcaddrOutput() UserSecurityexemptlistRuleSrcaddrOutput
	ToUserSecurityexemptlistRuleSrcaddrOutputWithContext(context.Context) UserSecurityexemptlistRuleSrcaddrOutput
}

type UserSecurityexemptlistRuleSrcaddrArgs struct {
	// Address or group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserSecurityexemptlistRuleSrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecurityexemptlistRuleSrcaddr)(nil)).Elem()
}

func (i UserSecurityexemptlistRuleSrcaddrArgs) ToUserSecurityexemptlistRuleSrcaddrOutput() UserSecurityexemptlistRuleSrcaddrOutput {
	return i.ToUserSecurityexemptlistRuleSrcaddrOutputWithContext(context.Background())
}

func (i UserSecurityexemptlistRuleSrcaddrArgs) ToUserSecurityexemptlistRuleSrcaddrOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleSrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecurityexemptlistRuleSrcaddrOutput)
}

// UserSecurityexemptlistRuleSrcaddrArrayInput is an input type that accepts UserSecurityexemptlistRuleSrcaddrArray and UserSecurityexemptlistRuleSrcaddrArrayOutput values.
// You can construct a concrete instance of `UserSecurityexemptlistRuleSrcaddrArrayInput` via:
//
//	UserSecurityexemptlistRuleSrcaddrArray{ UserSecurityexemptlistRuleSrcaddrArgs{...} }
type UserSecurityexemptlistRuleSrcaddrArrayInput interface {
	pulumi.Input

	ToUserSecurityexemptlistRuleSrcaddrArrayOutput() UserSecurityexemptlistRuleSrcaddrArrayOutput
	ToUserSecurityexemptlistRuleSrcaddrArrayOutputWithContext(context.Context) UserSecurityexemptlistRuleSrcaddrArrayOutput
}

type UserSecurityexemptlistRuleSrcaddrArray []UserSecurityexemptlistRuleSrcaddrInput

func (UserSecurityexemptlistRuleSrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSecurityexemptlistRuleSrcaddr)(nil)).Elem()
}

func (i UserSecurityexemptlistRuleSrcaddrArray) ToUserSecurityexemptlistRuleSrcaddrArrayOutput() UserSecurityexemptlistRuleSrcaddrArrayOutput {
	return i.ToUserSecurityexemptlistRuleSrcaddrArrayOutputWithContext(context.Background())
}

func (i UserSecurityexemptlistRuleSrcaddrArray) ToUserSecurityexemptlistRuleSrcaddrArrayOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleSrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecurityexemptlistRuleSrcaddrArrayOutput)
}

type UserSecurityexemptlistRuleSrcaddrOutput struct{ *pulumi.OutputState }

func (UserSecurityexemptlistRuleSrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecurityexemptlistRuleSrcaddr)(nil)).Elem()
}

func (o UserSecurityexemptlistRuleSrcaddrOutput) ToUserSecurityexemptlistRuleSrcaddrOutput() UserSecurityexemptlistRuleSrcaddrOutput {
	return o
}

func (o UserSecurityexemptlistRuleSrcaddrOutput) ToUserSecurityexemptlistRuleSrcaddrOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleSrcaddrOutput {
	return o
}

// Address or group name.
func (o UserSecurityexemptlistRuleSrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSecurityexemptlistRuleSrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserSecurityexemptlistRuleSrcaddrArrayOutput struct{ *pulumi.OutputState }

func (UserSecurityexemptlistRuleSrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSecurityexemptlistRuleSrcaddr)(nil)).Elem()
}

func (o UserSecurityexemptlistRuleSrcaddrArrayOutput) ToUserSecurityexemptlistRuleSrcaddrArrayOutput() UserSecurityexemptlistRuleSrcaddrArrayOutput {
	return o
}

func (o UserSecurityexemptlistRuleSrcaddrArrayOutput) ToUserSecurityexemptlistRuleSrcaddrArrayOutputWithContext(ctx context.Context) UserSecurityexemptlistRuleSrcaddrArrayOutput {
	return o
}

func (o UserSecurityexemptlistRuleSrcaddrArrayOutput) Index(i pulumi.IntInput) UserSecurityexemptlistRuleSrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSecurityexemptlistRuleSrcaddr {
		return vs[0].([]UserSecurityexemptlistRuleSrcaddr)[vs[1].(int)]
	}).(UserSecurityexemptlistRuleSrcaddrOutput)
}

type UserSettingAuthPort struct {
	// ID.
	Id *int `pulumi:"id"`
	// Non-standard port for firewall user authentication.
	Port *int `pulumi:"port"`
	// Service type. Valid values: `http`, `https`, `ftp`, `telnet`.
	Type *string `pulumi:"type"`
}

// UserSettingAuthPortInput is an input type that accepts UserSettingAuthPortArgs and UserSettingAuthPortOutput values.
// You can construct a concrete instance of `UserSettingAuthPortInput` via:
//
//	UserSettingAuthPortArgs{...}
type UserSettingAuthPortInput interface {
	pulumi.Input

	ToUserSettingAuthPortOutput() UserSettingAuthPortOutput
	ToUserSettingAuthPortOutputWithContext(context.Context) UserSettingAuthPortOutput
}

type UserSettingAuthPortArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Non-standard port for firewall user authentication.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Service type. Valid values: `http`, `https`, `ftp`, `telnet`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (UserSettingAuthPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSettingAuthPort)(nil)).Elem()
}

func (i UserSettingAuthPortArgs) ToUserSettingAuthPortOutput() UserSettingAuthPortOutput {
	return i.ToUserSettingAuthPortOutputWithContext(context.Background())
}

func (i UserSettingAuthPortArgs) ToUserSettingAuthPortOutputWithContext(ctx context.Context) UserSettingAuthPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSettingAuthPortOutput)
}

// UserSettingAuthPortArrayInput is an input type that accepts UserSettingAuthPortArray and UserSettingAuthPortArrayOutput values.
// You can construct a concrete instance of `UserSettingAuthPortArrayInput` via:
//
//	UserSettingAuthPortArray{ UserSettingAuthPortArgs{...} }
type UserSettingAuthPortArrayInput interface {
	pulumi.Input

	ToUserSettingAuthPortArrayOutput() UserSettingAuthPortArrayOutput
	ToUserSettingAuthPortArrayOutputWithContext(context.Context) UserSettingAuthPortArrayOutput
}

type UserSettingAuthPortArray []UserSettingAuthPortInput

func (UserSettingAuthPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSettingAuthPort)(nil)).Elem()
}

func (i UserSettingAuthPortArray) ToUserSettingAuthPortArrayOutput() UserSettingAuthPortArrayOutput {
	return i.ToUserSettingAuthPortArrayOutputWithContext(context.Background())
}

func (i UserSettingAuthPortArray) ToUserSettingAuthPortArrayOutputWithContext(ctx context.Context) UserSettingAuthPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSettingAuthPortArrayOutput)
}

type UserSettingAuthPortOutput struct{ *pulumi.OutputState }

func (UserSettingAuthPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSettingAuthPort)(nil)).Elem()
}

func (o UserSettingAuthPortOutput) ToUserSettingAuthPortOutput() UserSettingAuthPortOutput {
	return o
}

func (o UserSettingAuthPortOutput) ToUserSettingAuthPortOutputWithContext(ctx context.Context) UserSettingAuthPortOutput {
	return o
}

// ID.
func (o UserSettingAuthPortOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserSettingAuthPort) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Non-standard port for firewall user authentication.
func (o UserSettingAuthPortOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserSettingAuthPort) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Service type. Valid values: `http`, `https`, `ftp`, `telnet`.
func (o UserSettingAuthPortOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSettingAuthPort) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type UserSettingAuthPortArrayOutput struct{ *pulumi.OutputState }

func (UserSettingAuthPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSettingAuthPort)(nil)).Elem()
}

func (o UserSettingAuthPortArrayOutput) ToUserSettingAuthPortArrayOutput() UserSettingAuthPortArrayOutput {
	return o
}

func (o UserSettingAuthPortArrayOutput) ToUserSettingAuthPortArrayOutputWithContext(ctx context.Context) UserSettingAuthPortArrayOutput {
	return o
}

func (o UserSettingAuthPortArrayOutput) Index(i pulumi.IntInput) UserSettingAuthPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSettingAuthPort {
		return vs[0].([]UserSettingAuthPort)[vs[1].(int)]
	}).(UserSettingAuthPortOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzercloudFilterFreeStyleInput)(nil)).Elem(), LogfortianalyzercloudFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzercloudFilterFreeStyleArrayInput)(nil)).Elem(), LogfortianalyzercloudFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzercloudOverridefilterFreeStyleInput)(nil)).Elem(), LogfortianalyzercloudOverridefilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzercloudOverridefilterFreeStyleArrayInput)(nil)).Elem(), LogfortianalyzercloudOverridefilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzercloudSettingSerialInput)(nil)).Elem(), LogfortianalyzercloudSettingSerialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzercloudSettingSerialArrayInput)(nil)).Elem(), LogfortianalyzercloudSettingSerialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortiguardFilterFreeStyleInput)(nil)).Elem(), LogfortiguardFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortiguardFilterFreeStyleArrayInput)(nil)).Elem(), LogfortiguardFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortiguardOverridefilterFreeStyleInput)(nil)).Elem(), LogfortiguardOverridefilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortiguardOverridefilterFreeStyleArrayInput)(nil)).Elem(), LogfortiguardOverridefilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogmemoryFilterFreeStyleInput)(nil)).Elem(), LogmemoryFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogmemoryFilterFreeStyleArrayInput)(nil)).Elem(), LogmemoryFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LognulldeviceFilterFreeStyleInput)(nil)).Elem(), LognulldeviceFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LognulldeviceFilterFreeStyleArrayInput)(nil)).Elem(), LognulldeviceFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd2FilterFreeStyleInput)(nil)).Elem(), Logsyslogd2FilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd2FilterFreeStyleArrayInput)(nil)).Elem(), Logsyslogd2FilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd2OverridefilterFreeStyleInput)(nil)).Elem(), Logsyslogd2OverridefilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd2OverridefilterFreeStyleArrayInput)(nil)).Elem(), Logsyslogd2OverridefilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd2OverridesettingCustomFieldNameInput)(nil)).Elem(), Logsyslogd2OverridesettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd2OverridesettingCustomFieldNameArrayInput)(nil)).Elem(), Logsyslogd2OverridesettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd2SettingCustomFieldNameInput)(nil)).Elem(), Logsyslogd2SettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd2SettingCustomFieldNameArrayInput)(nil)).Elem(), Logsyslogd2SettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd3FilterFreeStyleInput)(nil)).Elem(), Logsyslogd3FilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd3FilterFreeStyleArrayInput)(nil)).Elem(), Logsyslogd3FilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd3OverridefilterFreeStyleInput)(nil)).Elem(), Logsyslogd3OverridefilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd3OverridefilterFreeStyleArrayInput)(nil)).Elem(), Logsyslogd3OverridefilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd3OverridesettingCustomFieldNameInput)(nil)).Elem(), Logsyslogd3OverridesettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd3OverridesettingCustomFieldNameArrayInput)(nil)).Elem(), Logsyslogd3OverridesettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd3SettingCustomFieldNameInput)(nil)).Elem(), Logsyslogd3SettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd3SettingCustomFieldNameArrayInput)(nil)).Elem(), Logsyslogd3SettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd4FilterFreeStyleInput)(nil)).Elem(), Logsyslogd4FilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd4FilterFreeStyleArrayInput)(nil)).Elem(), Logsyslogd4FilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd4OverridefilterFreeStyleInput)(nil)).Elem(), Logsyslogd4OverridefilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd4OverridefilterFreeStyleArrayInput)(nil)).Elem(), Logsyslogd4OverridefilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd4OverridesettingCustomFieldNameInput)(nil)).Elem(), Logsyslogd4OverridesettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd4OverridesettingCustomFieldNameArrayInput)(nil)).Elem(), Logsyslogd4OverridesettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd4SettingCustomFieldNameInput)(nil)).Elem(), Logsyslogd4SettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logsyslogd4SettingCustomFieldNameArrayInput)(nil)).Elem(), Logsyslogd4SettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsyslogdFilterFreeStyleInput)(nil)).Elem(), LogsyslogdFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsyslogdFilterFreeStyleArrayInput)(nil)).Elem(), LogsyslogdFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsyslogdOverridefilterFreeStyleInput)(nil)).Elem(), LogsyslogdOverridefilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsyslogdOverridefilterFreeStyleArrayInput)(nil)).Elem(), LogsyslogdOverridefilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsyslogdOverridesettingCustomFieldNameInput)(nil)).Elem(), LogsyslogdOverridesettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsyslogdOverridesettingCustomFieldNameArrayInput)(nil)).Elem(), LogsyslogdOverridesettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsyslogdSettingCustomFieldNameInput)(nil)).Elem(), LogsyslogdSettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsyslogdSettingCustomFieldNameArrayInput)(nil)).Elem(), LogsyslogdSettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogwebtrendsFilterFreeStyleInput)(nil)).Elem(), LogwebtrendsFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogwebtrendsFilterFreeStyleArrayInput)(nil)).Elem(), LogwebtrendsFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtServicechainServiceIndexInput)(nil)).Elem(), NsxtServicechainServiceIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtServicechainServiceIndexArrayInput)(nil)).Elem(), NsxtServicechainServiceIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartCategorySeriesInput)(nil)).Elem(), ReportChartCategorySeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartCategorySeriesPtrInput)(nil)).Elem(), ReportChartCategorySeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartColumnInput)(nil)).Elem(), ReportChartColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartColumnArrayInput)(nil)).Elem(), ReportChartColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartColumnMappingInput)(nil)).Elem(), ReportChartColumnMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartColumnMappingArrayInput)(nil)).Elem(), ReportChartColumnMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartDrillDownChartInput)(nil)).Elem(), ReportChartDrillDownChartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartDrillDownChartArrayInput)(nil)).Elem(), ReportChartDrillDownChartArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartValueSeriesInput)(nil)).Elem(), ReportChartValueSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartValueSeriesPtrInput)(nil)).Elem(), ReportChartValueSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartXSeriesInput)(nil)).Elem(), ReportChartXSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartXSeriesPtrInput)(nil)).Elem(), ReportChartXSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartYSeriesInput)(nil)).Elem(), ReportChartYSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartYSeriesPtrInput)(nil)).Elem(), ReportChartYSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportDatasetFieldInput)(nil)).Elem(), ReportDatasetFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportDatasetFieldArrayInput)(nil)).Elem(), ReportDatasetFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportDatasetParameterInput)(nil)).Elem(), ReportDatasetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportDatasetParameterArrayInput)(nil)).Elem(), ReportDatasetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemInput)(nil)).Elem(), ReportLayoutBodyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemArrayInput)(nil)).Elem(), ReportLayoutBodyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemListInput)(nil)).Elem(), ReportLayoutBodyItemListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemListArrayInput)(nil)).Elem(), ReportLayoutBodyItemListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemParameterInput)(nil)).Elem(), ReportLayoutBodyItemParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemParameterArrayInput)(nil)).Elem(), ReportLayoutBodyItemParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageInput)(nil)).Elem(), ReportLayoutPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPagePtrInput)(nil)).Elem(), ReportLayoutPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageFooterInput)(nil)).Elem(), ReportLayoutPageFooterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageFooterPtrInput)(nil)).Elem(), ReportLayoutPageFooterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageFooterFooterItemInput)(nil)).Elem(), ReportLayoutPageFooterFooterItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageFooterFooterItemArrayInput)(nil)).Elem(), ReportLayoutPageFooterFooterItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageHeaderInput)(nil)).Elem(), ReportLayoutPageHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageHeaderPtrInput)(nil)).Elem(), ReportLayoutPageHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageHeaderHeaderItemInput)(nil)).Elem(), ReportLayoutPageHeaderHeaderItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageHeaderHeaderItemArrayInput)(nil)).Elem(), ReportLayoutPageHeaderHeaderItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccesslist6RuleInput)(nil)).Elem(), RouterAccesslist6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccesslist6RuleArrayInput)(nil)).Elem(), RouterAccesslist6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccesslistRuleInput)(nil)).Elem(), RouterAccesslistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccesslistRuleArrayInput)(nil)).Elem(), RouterAccesslistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAspathlistRuleInput)(nil)).Elem(), RouterAspathlistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAspathlistRuleArrayInput)(nil)).Elem(), RouterAspathlistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfd6MultihopTemplateInput)(nil)).Elem(), RouterBfd6MultihopTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfd6MultihopTemplateArrayInput)(nil)).Elem(), RouterBfd6MultihopTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfd6NeighborInput)(nil)).Elem(), RouterBfd6NeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfd6NeighborArrayInput)(nil)).Elem(), RouterBfd6NeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfdMultihopTemplateInput)(nil)).Elem(), RouterBfdMultihopTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfdMultihopTemplateArrayInput)(nil)).Elem(), RouterBfdMultihopTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfdNeighborInput)(nil)).Elem(), RouterBfdNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfdNeighborArrayInput)(nil)).Elem(), RouterBfdNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAdminDistanceInput)(nil)).Elem(), RouterBgpAdminDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAdminDistanceArrayInput)(nil)).Elem(), RouterBgpAdminDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAggregateAddress6Input)(nil)).Elem(), RouterBgpAggregateAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAggregateAddress6ArrayInput)(nil)).Elem(), RouterBgpAggregateAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAggregateAddressInput)(nil)).Elem(), RouterBgpAggregateAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAggregateAddressArrayInput)(nil)).Elem(), RouterBgpAggregateAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpConfederationPeerInput)(nil)).Elem(), RouterBgpConfederationPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpConfederationPeerArrayInput)(nil)).Elem(), RouterBgpConfederationPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborTypeInput)(nil)).Elem(), RouterBgpNeighborTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborTypeArrayInput)(nil)).Elem(), RouterBgpNeighborTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise6Input)(nil)).Elem(), RouterBgpNeighborConditionalAdvertise6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise6ArrayInput)(nil)).Elem(), RouterBgpNeighborConditionalAdvertise6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborConditionalAdvertiseInput)(nil)).Elem(), RouterBgpNeighborConditionalAdvertiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborConditionalAdvertiseArrayInput)(nil)).Elem(), RouterBgpNeighborConditionalAdvertiseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborGroupInput)(nil)).Elem(), RouterBgpNeighborGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborGroupArrayInput)(nil)).Elem(), RouterBgpNeighborGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborRange6Input)(nil)).Elem(), RouterBgpNeighborRange6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborRange6ArrayInput)(nil)).Elem(), RouterBgpNeighborRange6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborRangeInput)(nil)).Elem(), RouterBgpNeighborRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborRangeArrayInput)(nil)).Elem(), RouterBgpNeighborRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNetwork6TypeInput)(nil)).Elem(), RouterBgpNetwork6TypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNetwork6TypeArrayInput)(nil)).Elem(), RouterBgpNetwork6TypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNetworkTypeInput)(nil)).Elem(), RouterBgpNetworkTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNetworkTypeArrayInput)(nil)).Elem(), RouterBgpNetworkTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpRedistribute6Input)(nil)).Elem(), RouterBgpRedistribute6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpRedistribute6ArrayInput)(nil)).Elem(), RouterBgpRedistribute6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpRedistributeInput)(nil)).Elem(), RouterBgpRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpRedistributeArrayInput)(nil)).Elem(), RouterBgpRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrf6Input)(nil)).Elem(), RouterBgpVrf6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrf6ArrayInput)(nil)).Elem(), RouterBgpVrf6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrf6LeakTargetInput)(nil)).Elem(), RouterBgpVrf6LeakTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrf6LeakTargetArrayInput)(nil)).Elem(), RouterBgpVrf6LeakTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfInput)(nil)).Elem(), RouterBgpVrfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfArrayInput)(nil)).Elem(), RouterBgpVrfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfExportRtInput)(nil)).Elem(), RouterBgpVrfExportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfExportRtArrayInput)(nil)).Elem(), RouterBgpVrfExportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfImportRtInput)(nil)).Elem(), RouterBgpVrfImportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfImportRtArrayInput)(nil)).Elem(), RouterBgpVrfImportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeak6Input)(nil)).Elem(), RouterBgpVrfLeak6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeak6ArrayInput)(nil)).Elem(), RouterBgpVrfLeak6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeak6TargetInput)(nil)).Elem(), RouterBgpVrfLeak6TargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeak6TargetArrayInput)(nil)).Elem(), RouterBgpVrfLeak6TargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeakInput)(nil)).Elem(), RouterBgpVrfLeakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeakArrayInput)(nil)).Elem(), RouterBgpVrfLeakArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeakTargetInput)(nil)).Elem(), RouterBgpVrfLeakTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeakTargetArrayInput)(nil)).Elem(), RouterBgpVrfLeakTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterCommunitylistRuleInput)(nil)).Elem(), RouterCommunitylistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterCommunitylistRuleArrayInput)(nil)).Elem(), RouterCommunitylistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisIsisInterfaceInput)(nil)).Elem(), RouterIsisIsisInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisIsisInterfaceArrayInput)(nil)).Elem(), RouterIsisIsisInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisIsisNetInput)(nil)).Elem(), RouterIsisIsisNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisIsisNetArrayInput)(nil)).Elem(), RouterIsisIsisNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisRedistribute6Input)(nil)).Elem(), RouterIsisRedistribute6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisRedistribute6ArrayInput)(nil)).Elem(), RouterIsisRedistribute6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisRedistributeInput)(nil)).Elem(), RouterIsisRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisRedistributeArrayInput)(nil)).Elem(), RouterIsisRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisSummaryAddress6Input)(nil)).Elem(), RouterIsisSummaryAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisSummaryAddress6ArrayInput)(nil)).Elem(), RouterIsisSummaryAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisSummaryAddressInput)(nil)).Elem(), RouterIsisSummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisSummaryAddressArrayInput)(nil)).Elem(), RouterIsisSummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterKeychainKeyInput)(nil)).Elem(), RouterKeychainKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterKeychainKeyArrayInput)(nil)).Elem(), RouterKeychainKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6InterfaceInput)(nil)).Elem(), RouterMulticast6InterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6InterfaceArrayInput)(nil)).Elem(), RouterMulticast6InterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6PimSmGlobalInput)(nil)).Elem(), RouterMulticast6PimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6PimSmGlobalPtrInput)(nil)).Elem(), RouterMulticast6PimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6PimSmGlobalRpAddressInput)(nil)).Elem(), RouterMulticast6PimSmGlobalRpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6PimSmGlobalRpAddressArrayInput)(nil)).Elem(), RouterMulticast6PimSmGlobalRpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceInput)(nil)).Elem(), RouterMulticastInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceArrayInput)(nil)).Elem(), RouterMulticastInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceIgmpInput)(nil)).Elem(), RouterMulticastInterfaceIgmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceIgmpPtrInput)(nil)).Elem(), RouterMulticastInterfaceIgmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceJoinGroupInput)(nil)).Elem(), RouterMulticastInterfaceJoinGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceJoinGroupArrayInput)(nil)).Elem(), RouterMulticastInterfaceJoinGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastPimSmGlobalInput)(nil)).Elem(), RouterMulticastPimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastPimSmGlobalPtrInput)(nil)).Elem(), RouterMulticastPimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastPimSmGlobalRpAddressInput)(nil)).Elem(), RouterMulticastPimSmGlobalRpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastPimSmGlobalRpAddressArrayInput)(nil)).Elem(), RouterMulticastPimSmGlobalRpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastflowFlowInput)(nil)).Elem(), RouterMulticastflowFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastflowFlowArrayInput)(nil)).Elem(), RouterMulticastflowFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaInput)(nil)).Elem(), RouterOspf6AreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaArrayInput)(nil)).Elem(), RouterOspf6AreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaIpsecKeyInput)(nil)).Elem(), RouterOspf6AreaIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaIpsecKeyArrayInput)(nil)).Elem(), RouterOspf6AreaIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaRangeInput)(nil)).Elem(), RouterOspf6AreaRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaRangeArrayInput)(nil)).Elem(), RouterOspf6AreaRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaVirtualLinkInput)(nil)).Elem(), RouterOspf6AreaVirtualLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaVirtualLinkArrayInput)(nil)).Elem(), RouterOspf6AreaVirtualLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaVirtualLinkIpsecKeyInput)(nil)).Elem(), RouterOspf6AreaVirtualLinkIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaVirtualLinkIpsecKeyArrayInput)(nil)).Elem(), RouterOspf6AreaVirtualLinkIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceTypeInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceTypeArrayInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceIpsecKeyInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceIpsecKeyArrayInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceNeighborInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceNeighborArrayInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6PassiveInterfaceInput)(nil)).Elem(), RouterOspf6PassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6PassiveInterfaceArrayInput)(nil)).Elem(), RouterOspf6PassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6RedistributeInput)(nil)).Elem(), RouterOspf6RedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6RedistributeArrayInput)(nil)).Elem(), RouterOspf6RedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6SummaryAddressInput)(nil)).Elem(), RouterOspf6SummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6SummaryAddressArrayInput)(nil)).Elem(), RouterOspf6SummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaInput)(nil)).Elem(), RouterOspfAreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaArrayInput)(nil)).Elem(), RouterOspfAreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaFilterListInput)(nil)).Elem(), RouterOspfAreaFilterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaFilterListArrayInput)(nil)).Elem(), RouterOspfAreaFilterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaRangeInput)(nil)).Elem(), RouterOspfAreaRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaRangeArrayInput)(nil)).Elem(), RouterOspfAreaRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaVirtualLinkInput)(nil)).Elem(), RouterOspfAreaVirtualLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaVirtualLinkArrayInput)(nil)).Elem(), RouterOspfAreaVirtualLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaVirtualLinkMd5KeyInput)(nil)).Elem(), RouterOspfAreaVirtualLinkMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaVirtualLinkMd5KeyArrayInput)(nil)).Elem(), RouterOspfAreaVirtualLinkMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfDistributeListInput)(nil)).Elem(), RouterOspfDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfDistributeListArrayInput)(nil)).Elem(), RouterOspfDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfNeighborTypeInput)(nil)).Elem(), RouterOspfNeighborTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfNeighborTypeArrayInput)(nil)).Elem(), RouterOspfNeighborTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfNetworkTypeInput)(nil)).Elem(), RouterOspfNetworkTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfNetworkTypeArrayInput)(nil)).Elem(), RouterOspfNetworkTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfOspfInterfaceTypeInput)(nil)).Elem(), RouterOspfOspfInterfaceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfOspfInterfaceTypeArrayInput)(nil)).Elem(), RouterOspfOspfInterfaceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfOspfInterfaceMd5KeyInput)(nil)).Elem(), RouterOspfOspfInterfaceMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfOspfInterfaceMd5KeyArrayInput)(nil)).Elem(), RouterOspfOspfInterfaceMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfPassiveInterfaceInput)(nil)).Elem(), RouterOspfPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfPassiveInterfaceArrayInput)(nil)).Elem(), RouterOspfPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfRedistributeInput)(nil)).Elem(), RouterOspfRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfRedistributeArrayInput)(nil)).Elem(), RouterOspfRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfSummaryAddressInput)(nil)).Elem(), RouterOspfSummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfSummaryAddressArrayInput)(nil)).Elem(), RouterOspfSummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6DstaddrInput)(nil)).Elem(), RouterPolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6DstaddrArrayInput)(nil)).Elem(), RouterPolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6InternetServiceCustomInput)(nil)).Elem(), RouterPolicy6InternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6InternetServiceCustomArrayInput)(nil)).Elem(), RouterPolicy6InternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6InternetServiceIdInput)(nil)).Elem(), RouterPolicy6InternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6InternetServiceIdArrayInput)(nil)).Elem(), RouterPolicy6InternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6SrcaddrInput)(nil)).Elem(), RouterPolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6SrcaddrArrayInput)(nil)).Elem(), RouterPolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyDstInput)(nil)).Elem(), RouterPolicyDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyDstArrayInput)(nil)).Elem(), RouterPolicyDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyDstaddrInput)(nil)).Elem(), RouterPolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyDstaddrArrayInput)(nil)).Elem(), RouterPolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInputDeviceInput)(nil)).Elem(), RouterPolicyInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInputDeviceArrayInput)(nil)).Elem(), RouterPolicyInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInternetServiceCustomInput)(nil)).Elem(), RouterPolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInternetServiceCustomArrayInput)(nil)).Elem(), RouterPolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInternetServiceIdInput)(nil)).Elem(), RouterPolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInternetServiceIdArrayInput)(nil)).Elem(), RouterPolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicySrcInput)(nil)).Elem(), RouterPolicySrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicySrcArrayInput)(nil)).Elem(), RouterPolicySrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicySrcaddrInput)(nil)).Elem(), RouterPolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicySrcaddrArrayInput)(nil)).Elem(), RouterPolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPrefixlist6RuleInput)(nil)).Elem(), RouterPrefixlist6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPrefixlist6RuleArrayInput)(nil)).Elem(), RouterPrefixlist6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPrefixlistRuleInput)(nil)).Elem(), RouterPrefixlistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPrefixlistRuleArrayInput)(nil)).Elem(), RouterPrefixlistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipDistanceInput)(nil)).Elem(), RouterRipDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipDistanceArrayInput)(nil)).Elem(), RouterRipDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipDistributeListInput)(nil)).Elem(), RouterRipDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipDistributeListArrayInput)(nil)).Elem(), RouterRipDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipInterfaceInput)(nil)).Elem(), RouterRipInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipInterfaceArrayInput)(nil)).Elem(), RouterRipInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipNeighborInput)(nil)).Elem(), RouterRipNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipNeighborArrayInput)(nil)).Elem(), RouterRipNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipNetworkInput)(nil)).Elem(), RouterRipNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipNetworkArrayInput)(nil)).Elem(), RouterRipNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipOffsetListInput)(nil)).Elem(), RouterRipOffsetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipOffsetListArrayInput)(nil)).Elem(), RouterRipOffsetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipPassiveInterfaceInput)(nil)).Elem(), RouterRipPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipPassiveInterfaceArrayInput)(nil)).Elem(), RouterRipPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipRedistributeInput)(nil)).Elem(), RouterRipRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipRedistributeArrayInput)(nil)).Elem(), RouterRipRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngAggregateAddressInput)(nil)).Elem(), RouterRipngAggregateAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngAggregateAddressArrayInput)(nil)).Elem(), RouterRipngAggregateAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngDistanceInput)(nil)).Elem(), RouterRipngDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngDistanceArrayInput)(nil)).Elem(), RouterRipngDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngDistributeListInput)(nil)).Elem(), RouterRipngDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngDistributeListArrayInput)(nil)).Elem(), RouterRipngDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngInterfaceInput)(nil)).Elem(), RouterRipngInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngInterfaceArrayInput)(nil)).Elem(), RouterRipngInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngNeighborInput)(nil)).Elem(), RouterRipngNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngNeighborArrayInput)(nil)).Elem(), RouterRipngNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngNetworkInput)(nil)).Elem(), RouterRipngNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngNetworkArrayInput)(nil)).Elem(), RouterRipngNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngOffsetListInput)(nil)).Elem(), RouterRipngOffsetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngOffsetListArrayInput)(nil)).Elem(), RouterRipngOffsetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngPassiveInterfaceInput)(nil)).Elem(), RouterRipngPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngPassiveInterfaceArrayInput)(nil)).Elem(), RouterRipngPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngRedistributeInput)(nil)).Elem(), RouterRipngRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngRedistributeArrayInput)(nil)).Elem(), RouterRipngRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRoutemapRuleInput)(nil)).Elem(), RouterRoutemapRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRoutemapRuleArrayInput)(nil)).Elem(), RouterRoutemapRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRoutemapRuleSetAspathInput)(nil)).Elem(), RouterRoutemapRuleSetAspathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRoutemapRuleSetAspathArrayInput)(nil)).Elem(), RouterRoutemapRuleSetAspathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRoutemapRuleSetCommunityInput)(nil)).Elem(), RouterRoutemapRuleSetCommunityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRoutemapRuleSetCommunityArrayInput)(nil)).Elem(), RouterRoutemapRuleSetCommunityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRoutemapRuleSetExtcommunityRtInput)(nil)).Elem(), RouterRoutemapRuleSetExtcommunityRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRoutemapRuleSetExtcommunityRtArrayInput)(nil)).Elem(), RouterRoutemapRuleSetExtcommunityRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRoutemapRuleSetExtcommunitySooInput)(nil)).Elem(), RouterRoutemapRuleSetExtcommunitySooArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRoutemapRuleSetExtcommunitySooArrayInput)(nil)).Elem(), RouterRoutemapRuleSetExtcommunitySooArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterStatic6SdwanZoneInput)(nil)).Elem(), RouterStatic6SdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterStatic6SdwanZoneArrayInput)(nil)).Elem(), RouterStatic6SdwanZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterStaticSdwanZoneInput)(nil)).Elem(), RouterStaticSdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterStaticSdwanZoneArrayInput)(nil)).Elem(), RouterStaticSdwanZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise6Input)(nil)).Elem(), RouterbgpNeighborConditionalAdvertise6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise6ArrayInput)(nil)).Elem(), RouterbgpNeighborConditionalAdvertise6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterbgpNeighborConditionalAdvertiseInput)(nil)).Elem(), RouterbgpNeighborConditionalAdvertiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterbgpNeighborConditionalAdvertiseArrayInput)(nil)).Elem(), RouterbgpNeighborConditionalAdvertiseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6interfaceIpsecKeyInput)(nil)).Elem(), Routerospf6Ospf6interfaceIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6interfaceIpsecKeyArrayInput)(nil)).Elem(), Routerospf6Ospf6interfaceIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6interfaceNeighborInput)(nil)).Elem(), Routerospf6Ospf6interfaceNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6interfaceNeighborArrayInput)(nil)).Elem(), Routerospf6Ospf6interfaceNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterospfOspfinterfaceMd5KeyInput)(nil)).Elem(), RouterospfOspfinterfaceMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterospfOspfinterfaceMd5KeyArrayInput)(nil)).Elem(), RouterospfOspfinterfaceMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SctpfilterProfilePpidFilterInput)(nil)).Elem(), SctpfilterProfilePpidFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SctpfilterProfilePpidFilterArrayInput)(nil)).Elem(), SctpfilterProfilePpidFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterBwlEntryInput)(nil)).Elem(), SpamfilterBwlEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterBwlEntryArrayInput)(nil)).Elem(), SpamfilterBwlEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterBwordEntryInput)(nil)).Elem(), SpamfilterBwordEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterBwordEntryArrayInput)(nil)).Elem(), SpamfilterBwordEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterDnsblEntryInput)(nil)).Elem(), SpamfilterDnsblEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterDnsblEntryArrayInput)(nil)).Elem(), SpamfilterDnsblEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterIptrustEntryInput)(nil)).Elem(), SpamfilterIptrustEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterIptrustEntryArrayInput)(nil)).Elem(), SpamfilterIptrustEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterMheaderEntryInput)(nil)).Elem(), SpamfilterMheaderEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterMheaderEntryArrayInput)(nil)).Elem(), SpamfilterMheaderEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileGmailInput)(nil)).Elem(), SpamfilterProfileGmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileGmailPtrInput)(nil)).Elem(), SpamfilterProfileGmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileImapInput)(nil)).Elem(), SpamfilterProfileImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileImapPtrInput)(nil)).Elem(), SpamfilterProfileImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileMapiInput)(nil)).Elem(), SpamfilterProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileMapiPtrInput)(nil)).Elem(), SpamfilterProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileMsnHotmailInput)(nil)).Elem(), SpamfilterProfileMsnHotmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileMsnHotmailPtrInput)(nil)).Elem(), SpamfilterProfileMsnHotmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfilePop3Input)(nil)).Elem(), SpamfilterProfilePop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfilePop3PtrInput)(nil)).Elem(), SpamfilterProfilePop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileSmtpInput)(nil)).Elem(), SpamfilterProfileSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileSmtpPtrInput)(nil)).Elem(), SpamfilterProfileSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileYahooMailInput)(nil)).Elem(), SpamfilterProfileYahooMailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileYahooMailPtrInput)(nil)).Elem(), SpamfilterProfileYahooMailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileFileFilterInput)(nil)).Elem(), SshfilterProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileFileFilterPtrInput)(nil)).Elem(), SshfilterProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileFileFilterEntryInput)(nil)).Elem(), SshfilterProfileFileFilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileFileFilterEntryArrayInput)(nil)).Elem(), SshfilterProfileFileFilterEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileFileFilterEntryFileTypeInput)(nil)).Elem(), SshfilterProfileFileFilterEntryFileTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileFileFilterEntryFileTypeArrayInput)(nil)).Elem(), SshfilterProfileFileFilterEntryFileTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileShellCommandInput)(nil)).Elem(), SshfilterProfileShellCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileShellCommandArrayInput)(nil)).Elem(), SshfilterProfileShellCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerDynamicportpolicyPolicyInput)(nil)).Elem(), SwitchcontrollerDynamicportpolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerDynamicportpolicyPolicyArrayInput)(nil)).Elem(), SwitchcontrollerDynamicportpolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerDynamicportpolicyPolicyInterfaceTagInput)(nil)).Elem(), SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayInput)(nil)).Elem(), SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerFlowtrackingAggregateInput)(nil)).Elem(), SwitchcontrollerFlowtrackingAggregateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerFlowtrackingAggregateArrayInput)(nil)).Elem(), SwitchcontrollerFlowtrackingAggregateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerFlowtrackingCollectorInput)(nil)).Elem(), SwitchcontrollerFlowtrackingCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerFlowtrackingCollectorArrayInput)(nil)).Elem(), SwitchcontrollerFlowtrackingCollectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerFortilinksettingsNacPortsInput)(nil)).Elem(), SwitchcontrollerFortilinksettingsNacPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerFortilinksettingsNacPortsPtrInput)(nil)).Elem(), SwitchcontrollerFortilinksettingsNacPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanInput)(nil)).Elem(), SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayInput)(nil)).Elem(), SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerGlobalCustomCommandInput)(nil)).Elem(), SwitchcontrollerGlobalCustomCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerGlobalCustomCommandArrayInput)(nil)).Elem(), SwitchcontrollerGlobalCustomCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerGlobalDisableDiscoveryInput)(nil)).Elem(), SwitchcontrollerGlobalDisableDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerGlobalDisableDiscoveryArrayInput)(nil)).Elem(), SwitchcontrollerGlobalDisableDiscoveryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLldpprofileCustomTlvInput)(nil)).Elem(), SwitchcontrollerLldpprofileCustomTlvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLldpprofileCustomTlvArrayInput)(nil)).Elem(), SwitchcontrollerLldpprofileCustomTlvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLldpprofileMedLocationServiceInput)(nil)).Elem(), SwitchcontrollerLldpprofileMedLocationServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLldpprofileMedLocationServiceArrayInput)(nil)).Elem(), SwitchcontrollerLldpprofileMedLocationServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLldpprofileMedNetworkPolicyInput)(nil)).Elem(), SwitchcontrollerLldpprofileMedNetworkPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLldpprofileMedNetworkPolicyArrayInput)(nil)).Elem(), SwitchcontrollerLldpprofileMedNetworkPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLocationAddressCivicInput)(nil)).Elem(), SwitchcontrollerLocationAddressCivicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLocationAddressCivicPtrInput)(nil)).Elem(), SwitchcontrollerLocationAddressCivicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLocationCoordinatesInput)(nil)).Elem(), SwitchcontrollerLocationCoordinatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLocationCoordinatesPtrInput)(nil)).Elem(), SwitchcontrollerLocationCoordinatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLocationElinNumberInput)(nil)).Elem(), SwitchcontrollerLocationElinNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLocationElinNumberPtrInput)(nil)).Elem(), SwitchcontrollerLocationElinNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchCustomCommandInput)(nil)).Elem(), SwitchcontrollerManagedswitchCustomCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchCustomCommandArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchCustomCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchIgmpSnoopingInput)(nil)).Elem(), SwitchcontrollerManagedswitchIgmpSnoopingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchIgmpSnoopingPtrInput)(nil)).Elem(), SwitchcontrollerManagedswitchIgmpSnoopingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchIgmpSnoopingVlanInput)(nil)).Elem(), SwitchcontrollerManagedswitchIgmpSnoopingVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchIgmpSnoopingVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchIpSourceGuardInput)(nil)).Elem(), SwitchcontrollerManagedswitchIpSourceGuardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchIpSourceGuardArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchIpSourceGuardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchIpSourceGuardBindingEntryInput)(nil)).Elem(), SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchMirrorInput)(nil)).Elem(), SwitchcontrollerManagedswitchMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchMirrorArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchMirrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchMirrorSrcEgressInput)(nil)).Elem(), SwitchcontrollerManagedswitchMirrorSrcEgressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchMirrorSrcEgressArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchMirrorSrcEgressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchMirrorSrcIngressInput)(nil)).Elem(), SwitchcontrollerManagedswitchMirrorSrcIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchMirrorSrcIngressArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchMirrorSrcIngressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchN8021xSettingsInput)(nil)).Elem(), SwitchcontrollerManagedswitchN8021xSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchN8021xSettingsPtrInput)(nil)).Elem(), SwitchcontrollerManagedswitchN8021xSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortAllowedVlanInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortAllowedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortAllowedVlanArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortAllowedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortExportTagInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortExportTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortExportTagArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortExportTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortInterfaceTagInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortInterfaceTagArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortInterfaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortMemberInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortMemberArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortUntaggedVlanInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortUntaggedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchPortUntaggedVlanArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchPortUntaggedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchRemoteLogInput)(nil)).Elem(), SwitchcontrollerManagedswitchRemoteLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchRemoteLogArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchRemoteLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpCommunityInput)(nil)).Elem(), SwitchcontrollerManagedswitchSnmpCommunityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpCommunityArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchSnmpCommunityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpCommunityHostInput)(nil)).Elem(), SwitchcontrollerManagedswitchSnmpCommunityHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpCommunityHostArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchSnmpCommunityHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpSysinfoInput)(nil)).Elem(), SwitchcontrollerManagedswitchSnmpSysinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpSysinfoPtrInput)(nil)).Elem(), SwitchcontrollerManagedswitchSnmpSysinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpTrapThresholdInput)(nil)).Elem(), SwitchcontrollerManagedswitchSnmpTrapThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpTrapThresholdPtrInput)(nil)).Elem(), SwitchcontrollerManagedswitchSnmpTrapThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpUserInput)(nil)).Elem(), SwitchcontrollerManagedswitchSnmpUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSnmpUserArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchSnmpUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchStaticMacInput)(nil)).Elem(), SwitchcontrollerManagedswitchStaticMacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchStaticMacArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchStaticMacArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchStormControlInput)(nil)).Elem(), SwitchcontrollerManagedswitchStormControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchStormControlPtrInput)(nil)).Elem(), SwitchcontrollerManagedswitchStormControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchStpInstanceInput)(nil)).Elem(), SwitchcontrollerManagedswitchStpInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchStpInstanceArrayInput)(nil)).Elem(), SwitchcontrollerManagedswitchStpInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchStpSettingsInput)(nil)).Elem(), SwitchcontrollerManagedswitchStpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchStpSettingsPtrInput)(nil)).Elem(), SwitchcontrollerManagedswitchStpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSwitchLogInput)(nil)).Elem(), SwitchcontrollerManagedswitchSwitchLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSwitchLogPtrInput)(nil)).Elem(), SwitchcontrollerManagedswitchSwitchLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSwitchStpSettingsInput)(nil)).Elem(), SwitchcontrollerManagedswitchSwitchStpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerManagedswitchSwitchStpSettingsPtrInput)(nil)).Elem(), SwitchcontrollerManagedswitchSwitchStpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerQuarantineTargetInput)(nil)).Elem(), SwitchcontrollerQuarantineTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerQuarantineTargetArrayInput)(nil)).Elem(), SwitchcontrollerQuarantineTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerQuarantineTargetTagInput)(nil)).Elem(), SwitchcontrollerQuarantineTargetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerQuarantineTargetTagArrayInput)(nil)).Elem(), SwitchcontrollerQuarantineTargetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerSnmpcommunityHostInput)(nil)).Elem(), SwitchcontrollerSnmpcommunityHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerSnmpcommunityHostArrayInput)(nil)).Elem(), SwitchcontrollerSnmpcommunityHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerStpinstanceVlanRangeInput)(nil)).Elem(), SwitchcontrollerStpinstanceVlanRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerStpinstanceVlanRangeArrayInput)(nil)).Elem(), SwitchcontrollerStpinstanceVlanRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerSwitchgroupMemberInput)(nil)).Elem(), SwitchcontrollerSwitchgroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerSwitchgroupMemberArrayInput)(nil)).Elem(), SwitchcontrollerSwitchgroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetIpInput)(nil)).Elem(), SwitchcontrollerTrafficsnifferTargetIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetIpArrayInput)(nil)).Elem(), SwitchcontrollerTrafficsnifferTargetIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetMacInput)(nil)).Elem(), SwitchcontrollerTrafficsnifferTargetMacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetMacArrayInput)(nil)).Elem(), SwitchcontrollerTrafficsnifferTargetMacArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPortInput)(nil)).Elem(), SwitchcontrollerTrafficsnifferTargetPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPortArrayInput)(nil)).Elem(), SwitchcontrollerTrafficsnifferTargetPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPortInPortInput)(nil)).Elem(), SwitchcontrollerTrafficsnifferTargetPortInPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPortInPortArrayInput)(nil)).Elem(), SwitchcontrollerTrafficsnifferTargetPortInPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPortOutPortInput)(nil)).Elem(), SwitchcontrollerTrafficsnifferTargetPortOutPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerTrafficsnifferTargetPortOutPortArrayInput)(nil)).Elem(), SwitchcontrollerTrafficsnifferTargetPortOutPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVlanPortalMessageOverridesInput)(nil)).Elem(), SwitchcontrollerVlanPortalMessageOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVlanPortalMessageOverridesPtrInput)(nil)).Elem(), SwitchcontrollerVlanPortalMessageOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVlanSelectedUsergroupInput)(nil)).Elem(), SwitchcontrollerVlanSelectedUsergroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVlanSelectedUsergroupArrayInput)(nil)).Elem(), SwitchcontrollerVlanSelectedUsergroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVlanpolicyAllowedVlanInput)(nil)).Elem(), SwitchcontrollerVlanpolicyAllowedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVlanpolicyAllowedVlanArrayInput)(nil)).Elem(), SwitchcontrollerVlanpolicyAllowedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVlanpolicyUntaggedVlanInput)(nil)).Elem(), SwitchcontrollerVlanpolicyUntaggedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVlanpolicyUntaggedVlanArrayInput)(nil)).Elem(), SwitchcontrollerVlanpolicyUntaggedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerautoconfigCustomSwitchBindingInput)(nil)).Elem(), SwitchcontrollerautoconfigCustomSwitchBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerautoconfigCustomSwitchBindingArrayInput)(nil)).Elem(), SwitchcontrollerautoconfigCustomSwitchBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerqosIpdscpmapMapTypeInput)(nil)).Elem(), SwitchcontrollerqosIpdscpmapMapTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerqosIpdscpmapMapTypeArrayInput)(nil)).Elem(), SwitchcontrollerqosIpdscpmapMapTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerqosQueuepolicyCosQueueInput)(nil)).Elem(), SwitchcontrollerqosQueuepolicyCosQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerqosQueuepolicyCosQueueArrayInput)(nil)).Elem(), SwitchcontrollerqosQueuepolicyCosQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Switchcontrollersecuritypolicy8021XUserGroupInput)(nil)).Elem(), Switchcontrollersecuritypolicy8021XUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Switchcontrollersecuritypolicy8021XUserGroupArrayInput)(nil)).Elem(), Switchcontrollersecuritypolicy8021XUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileFwgrpPermissionInput)(nil)).Elem(), SystemAccprofileFwgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileFwgrpPermissionPtrInput)(nil)).Elem(), SystemAccprofileFwgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileLoggrpPermissionInput)(nil)).Elem(), SystemAccprofileLoggrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileLoggrpPermissionPtrInput)(nil)).Elem(), SystemAccprofileLoggrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileNetgrpPermissionInput)(nil)).Elem(), SystemAccprofileNetgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileNetgrpPermissionPtrInput)(nil)).Elem(), SystemAccprofileNetgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileSysgrpPermissionInput)(nil)).Elem(), SystemAccprofileSysgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileSysgrpPermissionPtrInput)(nil)).Elem(), SystemAccprofileSysgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileUtmgrpPermissionInput)(nil)).Elem(), SystemAccprofileUtmgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileUtmgrpPermissionPtrInput)(nil)).Elem(), SystemAccprofileUtmgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAcmeAccountInput)(nil)).Elem(), SystemAcmeAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAcmeAccountArrayInput)(nil)).Elem(), SystemAcmeAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAcmeInterfaceInput)(nil)).Elem(), SystemAcmeInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAcmeInterfaceArrayInput)(nil)).Elem(), SystemAcmeInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuestUsergroupInput)(nil)).Elem(), SystemAdminGuestUsergroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuestUsergroupArrayInput)(nil)).Elem(), SystemAdminGuestUsergroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardInput)(nil)).Elem(), SystemAdminGuiDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardArrayInput)(nil)).Elem(), SystemAdminGuiDashboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardWidgetInput)(nil)).Elem(), SystemAdminGuiDashboardWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardWidgetArrayInput)(nil)).Elem(), SystemAdminGuiDashboardWidgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardWidgetFilterInput)(nil)).Elem(), SystemAdminGuiDashboardWidgetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardWidgetFilterArrayInput)(nil)).Elem(), SystemAdminGuiDashboardWidgetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiGlobalMenuFavoriteInput)(nil)).Elem(), SystemAdminGuiGlobalMenuFavoriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiGlobalMenuFavoriteArrayInput)(nil)).Elem(), SystemAdminGuiGlobalMenuFavoriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiNewFeatureAcknowledgeInput)(nil)).Elem(), SystemAdminGuiNewFeatureAcknowledgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiNewFeatureAcknowledgeArrayInput)(nil)).Elem(), SystemAdminGuiNewFeatureAcknowledgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiVdomMenuFavoriteInput)(nil)).Elem(), SystemAdminGuiVdomMenuFavoriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiVdomMenuFavoriteArrayInput)(nil)).Elem(), SystemAdminGuiVdomMenuFavoriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminLoginTimeInput)(nil)).Elem(), SystemAdminLoginTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminLoginTimeArrayInput)(nil)).Elem(), SystemAdminLoginTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminVdomInput)(nil)).Elem(), SystemAdminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminVdomArrayInput)(nil)).Elem(), SystemAdminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAlarmGroupInput)(nil)).Elem(), SystemAlarmGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAlarmGroupArrayInput)(nil)).Elem(), SystemAlarmGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAlarmGroupFwPolicyViolationInput)(nil)).Elem(), SystemAlarmGroupFwPolicyViolationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAlarmGroupFwPolicyViolationArrayInput)(nil)).Elem(), SystemAlarmGroupFwPolicyViolationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemApiuserSettingTrusthostInput)(nil)).Elem(), SystemApiuserSettingTrusthostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemApiuserSettingTrusthostArrayInput)(nil)).Elem(), SystemApiuserSettingTrusthostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemApiuserTrusthostInput)(nil)).Elem(), SystemApiuserTrusthostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemApiuserTrusthostArrayInput)(nil)).Elem(), SystemApiuserTrusthostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemApiuserVdomInput)(nil)).Elem(), SystemApiuserVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemApiuserVdomArrayInput)(nil)).Elem(), SystemApiuserVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationactionEmailToInput)(nil)).Elem(), SystemAutomationactionEmailToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationactionEmailToArrayInput)(nil)).Elem(), SystemAutomationactionEmailToArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationactionHeaderInput)(nil)).Elem(), SystemAutomationactionHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationactionHeaderArrayInput)(nil)).Elem(), SystemAutomationactionHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationactionHttpHeaderInput)(nil)).Elem(), SystemAutomationactionHttpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationactionHttpHeaderArrayInput)(nil)).Elem(), SystemAutomationactionHttpHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationactionSdnConnectorInput)(nil)).Elem(), SystemAutomationactionSdnConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationactionSdnConnectorArrayInput)(nil)).Elem(), SystemAutomationactionSdnConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationdestinationDestinationInput)(nil)).Elem(), SystemAutomationdestinationDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationdestinationDestinationArrayInput)(nil)).Elem(), SystemAutomationdestinationDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationstitchActionInput)(nil)).Elem(), SystemAutomationstitchActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationstitchActionArrayInput)(nil)).Elem(), SystemAutomationstitchActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationstitchDestinationInput)(nil)).Elem(), SystemAutomationstitchDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationstitchDestinationArrayInput)(nil)).Elem(), SystemAutomationstitchDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationtriggerFieldInput)(nil)).Elem(), SystemAutomationtriggerFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationtriggerFieldArrayInput)(nil)).Elem(), SystemAutomationtriggerFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationtriggerLogidBlockInput)(nil)).Elem(), SystemAutomationtriggerLogidBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationtriggerLogidBlockArrayInput)(nil)).Elem(), SystemAutomationtriggerLogidBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationtriggerVdomInput)(nil)).Elem(), SystemAutomationtriggerVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationtriggerVdomArrayInput)(nil)).Elem(), SystemAutomationtriggerVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCentralmanagementServerListInput)(nil)).Elem(), SystemCentralmanagementServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCentralmanagementServerListArrayInput)(nil)).Elem(), SystemCentralmanagementServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClustersyncDownIntfsBeforeSessSyncInput)(nil)).Elem(), SystemClustersyncDownIntfsBeforeSessSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClustersyncDownIntfsBeforeSessSyncArrayInput)(nil)).Elem(), SystemClustersyncDownIntfsBeforeSessSyncArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClustersyncSessionSyncFilterInput)(nil)).Elem(), SystemClustersyncSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClustersyncSessionSyncFilterPtrInput)(nil)).Elem(), SystemClustersyncSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClustersyncSessionSyncFilterCustomServiceInput)(nil)).Elem(), SystemClustersyncSessionSyncFilterCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClustersyncSessionSyncFilterCustomServiceArrayInput)(nil)).Elem(), SystemClustersyncSessionSyncFilterCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClustersyncSyncvdInput)(nil)).Elem(), SystemClustersyncSyncvdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClustersyncSyncvdArrayInput)(nil)).Elem(), SystemClustersyncSyncvdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfFabricConnectorInput)(nil)).Elem(), SystemCsfFabricConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfFabricConnectorArrayInput)(nil)).Elem(), SystemCsfFabricConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfFabricDeviceInput)(nil)).Elem(), SystemCsfFabricDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfFabricDeviceArrayInput)(nil)).Elem(), SystemCsfFabricDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfTrustedListInput)(nil)).Elem(), SystemCsfTrustedListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfTrustedListArrayInput)(nil)).Elem(), SystemCsfTrustedListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDdnsDdnsServerAddrInput)(nil)).Elem(), SystemDdnsDdnsServerAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDdnsDdnsServerAddrArrayInput)(nil)).Elem(), SystemDdnsDdnsServerAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDdnsMonitorInterfaceInput)(nil)).Elem(), SystemDdnsMonitorInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDdnsMonitorInterfaceArrayInput)(nil)).Elem(), SystemDdnsMonitorInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsDomainInput)(nil)).Elem(), SystemDnsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsDomainArrayInput)(nil)).Elem(), SystemDnsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsServerHostnameInput)(nil)).Elem(), SystemDnsServerHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsServerHostnameArrayInput)(nil)).Elem(), SystemDnsServerHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsdatabaseDnsEntryInput)(nil)).Elem(), SystemDnsdatabaseDnsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsdatabaseDnsEntryArrayInput)(nil)).Elem(), SystemDnsdatabaseDnsEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFederatedupgradeNodeListInput)(nil)).Elem(), SystemFederatedupgradeNodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFederatedupgradeNodeListArrayInput)(nil)).Elem(), SystemFederatedupgradeNodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipoverrideIp6RangeInput)(nil)).Elem(), SystemGeoipoverrideIp6RangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipoverrideIp6RangeArrayInput)(nil)).Elem(), SystemGeoipoverrideIp6RangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipoverrideIpRangeInput)(nil)).Elem(), SystemGeoipoverrideIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipoverrideIpRangeArrayInput)(nil)).Elem(), SystemGeoipoverrideIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaHaMgmtInterfaceInput)(nil)).Elem(), SystemHaHaMgmtInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaHaMgmtInterfaceArrayInput)(nil)).Elem(), SystemHaHaMgmtInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaSecondaryVclusterInput)(nil)).Elem(), SystemHaSecondaryVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaSecondaryVclusterPtrInput)(nil)).Elem(), SystemHaSecondaryVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaUnicastPeerInput)(nil)).Elem(), SystemHaUnicastPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaUnicastPeerArrayInput)(nil)).Elem(), SystemHaUnicastPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaVclusterInput)(nil)).Elem(), SystemHaVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaVclusterArrayInput)(nil)).Elem(), SystemHaVclusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaVclusterVdomInput)(nil)).Elem(), SystemHaVclusterVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaVclusterVdomArrayInput)(nil)).Elem(), SystemHaVclusterVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup14Input)(nil)).Elem(), SystemIkeDhGroup14Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup14PtrInput)(nil)).Elem(), SystemIkeDhGroup14Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup15Input)(nil)).Elem(), SystemIkeDhGroup15Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup15PtrInput)(nil)).Elem(), SystemIkeDhGroup15Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup16Input)(nil)).Elem(), SystemIkeDhGroup16Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup16PtrInput)(nil)).Elem(), SystemIkeDhGroup16Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup17Input)(nil)).Elem(), SystemIkeDhGroup17Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup17PtrInput)(nil)).Elem(), SystemIkeDhGroup17Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup18Input)(nil)).Elem(), SystemIkeDhGroup18Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup18PtrInput)(nil)).Elem(), SystemIkeDhGroup18Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup19Input)(nil)).Elem(), SystemIkeDhGroup19Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup19PtrInput)(nil)).Elem(), SystemIkeDhGroup19Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup1Input)(nil)).Elem(), SystemIkeDhGroup1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup1PtrInput)(nil)).Elem(), SystemIkeDhGroup1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup20Input)(nil)).Elem(), SystemIkeDhGroup20Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup20PtrInput)(nil)).Elem(), SystemIkeDhGroup20Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup21Input)(nil)).Elem(), SystemIkeDhGroup21Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup21PtrInput)(nil)).Elem(), SystemIkeDhGroup21Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup27Input)(nil)).Elem(), SystemIkeDhGroup27Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup27PtrInput)(nil)).Elem(), SystemIkeDhGroup27Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup28Input)(nil)).Elem(), SystemIkeDhGroup28Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup28PtrInput)(nil)).Elem(), SystemIkeDhGroup28Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup29Input)(nil)).Elem(), SystemIkeDhGroup29Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup29PtrInput)(nil)).Elem(), SystemIkeDhGroup29Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup2Input)(nil)).Elem(), SystemIkeDhGroup2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup2PtrInput)(nil)).Elem(), SystemIkeDhGroup2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup30Input)(nil)).Elem(), SystemIkeDhGroup30Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup30PtrInput)(nil)).Elem(), SystemIkeDhGroup30Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup31Input)(nil)).Elem(), SystemIkeDhGroup31Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup31PtrInput)(nil)).Elem(), SystemIkeDhGroup31Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup32Input)(nil)).Elem(), SystemIkeDhGroup32Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup32PtrInput)(nil)).Elem(), SystemIkeDhGroup32Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup5Input)(nil)).Elem(), SystemIkeDhGroup5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup5PtrInput)(nil)).Elem(), SystemIkeDhGroup5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceClientOptionInput)(nil)).Elem(), SystemInterfaceClientOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceClientOptionArrayInput)(nil)).Elem(), SystemInterfaceClientOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceDhcpSnoopingServerListInput)(nil)).Elem(), SystemInterfaceDhcpSnoopingServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceDhcpSnoopingServerListArrayInput)(nil)).Elem(), SystemInterfaceDhcpSnoopingServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceFailAlertInterfaceInput)(nil)).Elem(), SystemInterfaceFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceFailAlertInterfaceArrayInput)(nil)).Elem(), SystemInterfaceFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Input)(nil)).Elem(), SystemInterfaceIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6PtrInput)(nil)).Elem(), SystemInterfaceIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Dhcp6IapdListInput)(nil)).Elem(), SystemInterfaceIpv6Dhcp6IapdListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Dhcp6IapdListArrayInput)(nil)).Elem(), SystemInterfaceIpv6Dhcp6IapdListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6DelegatedPrefixListInput)(nil)).Elem(), SystemInterfaceIpv6Ip6DelegatedPrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6DelegatedPrefixListArrayInput)(nil)).Elem(), SystemInterfaceIpv6Ip6DelegatedPrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6ExtraAddrInput)(nil)).Elem(), SystemInterfaceIpv6Ip6ExtraAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6ExtraAddrArrayInput)(nil)).Elem(), SystemInterfaceIpv6Ip6ExtraAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListInput)(nil)).Elem(), SystemInterfaceIpv6Ip6PrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListArrayInput)(nil)).Elem(), SystemInterfaceIpv6Ip6PrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListDnsslInput)(nil)).Elem(), SystemInterfaceIpv6Ip6PrefixListDnsslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListDnsslArrayInput)(nil)).Elem(), SystemInterfaceIpv6Ip6PrefixListDnsslArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Vrrp6Input)(nil)).Elem(), SystemInterfaceIpv6Vrrp6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Vrrp6ArrayInput)(nil)).Elem(), SystemInterfaceIpv6Vrrp6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceManagedDeviceInput)(nil)).Elem(), SystemInterfaceManagedDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceManagedDeviceArrayInput)(nil)).Elem(), SystemInterfaceManagedDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceMemberInput)(nil)).Elem(), SystemInterfaceMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceMemberArrayInput)(nil)).Elem(), SystemInterfaceMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceSecondaryipInput)(nil)).Elem(), SystemInterfaceSecondaryipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceSecondaryipArrayInput)(nil)).Elem(), SystemInterfaceSecondaryipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceSecurityGroupInput)(nil)).Elem(), SystemInterfaceSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceSecurityGroupArrayInput)(nil)).Elem(), SystemInterfaceSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceTaggingInput)(nil)).Elem(), SystemInterfaceTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceTaggingArrayInput)(nil)).Elem(), SystemInterfaceTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceTaggingTagInput)(nil)).Elem(), SystemInterfaceTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceTaggingTagArrayInput)(nil)).Elem(), SystemInterfaceTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceVrrpInput)(nil)).Elem(), SystemInterfaceVrrpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceVrrpArrayInput)(nil)).Elem(), SystemInterfaceVrrpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceVrrpProxyArpInput)(nil)).Elem(), SystemInterfaceVrrpProxyArpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceVrrpProxyArpArrayInput)(nil)).Elem(), SystemInterfaceVrrpProxyArpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamPoolInput)(nil)).Elem(), SystemIpamPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamPoolArrayInput)(nil)).Elem(), SystemIpamPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleInput)(nil)).Elem(), SystemIpamRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleArrayInput)(nil)).Elem(), SystemIpamRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleDeviceInput)(nil)).Elem(), SystemIpamRuleDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleDeviceArrayInput)(nil)).Elem(), SystemIpamRuleDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleInterfaceInput)(nil)).Elem(), SystemIpamRuleInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleInterfaceArrayInput)(nil)).Elem(), SystemIpamRuleInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRulePoolInput)(nil)).Elem(), SystemIpamRulePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRulePoolArrayInput)(nil)).Elem(), SystemIpamRulePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsecaggregateMemberInput)(nil)).Elem(), SystemIpsecaggregateMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsecaggregateMemberArrayInput)(nil)).Elem(), SystemIpsecaggregateMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkmonitorRouteInput)(nil)).Elem(), SystemLinkmonitorRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkmonitorRouteArrayInput)(nil)).Elem(), SystemLinkmonitorRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkmonitorServerInput)(nil)).Elem(), SystemLinkmonitorServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkmonitorServerArrayInput)(nil)).Elem(), SystemLinkmonitorServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkmonitorServerListInput)(nil)).Elem(), SystemLinkmonitorServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkmonitorServerListArrayInput)(nil)).Elem(), SystemLinkmonitorServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemMobiletunnelNetworkInput)(nil)).Elem(), SystemMobiletunnelNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemMobiletunnelNetworkArrayInput)(nil)).Elem(), SystemMobiletunnelNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNat64SecondaryPrefixInput)(nil)).Elem(), SystemNat64SecondaryPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNat64SecondaryPrefixArrayInput)(nil)).Elem(), SystemNat64SecondaryPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNdproxyMemberInput)(nil)).Elem(), SystemNdproxyMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNdproxyMemberArrayInput)(nil)).Elem(), SystemNdproxyMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNpuPriorityProtocolInput)(nil)).Elem(), SystemNpuPriorityProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNpuPriorityProtocolPtrInput)(nil)).Elem(), SystemNpuPriorityProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpInterfaceInput)(nil)).Elem(), SystemNtpInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpInterfaceArrayInput)(nil)).Elem(), SystemNtpInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpNtpserverInput)(nil)).Elem(), SystemNtpNtpserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpNtpserverArrayInput)(nil)).Elem(), SystemNtpNtpserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemObjecttaggingTagInput)(nil)).Elem(), SystemObjecttaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemObjecttaggingTagArrayInput)(nil)).Elem(), SystemObjecttaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPtpServerInterfaceInput)(nil)).Elem(), SystemPtpServerInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPtpServerInterfaceArrayInput)(nil)).Elem(), SystemPtpServerInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupAdminInput)(nil)).Elem(), SystemReplacemsggroupAdminArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupAdminArrayInput)(nil)).Elem(), SystemReplacemsggroupAdminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupAlertmailInput)(nil)).Elem(), SystemReplacemsggroupAlertmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupAlertmailArrayInput)(nil)).Elem(), SystemReplacemsggroupAlertmailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupAuthInput)(nil)).Elem(), SystemReplacemsggroupAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupAuthArrayInput)(nil)).Elem(), SystemReplacemsggroupAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupAutomationInput)(nil)).Elem(), SystemReplacemsggroupAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupAutomationArrayInput)(nil)).Elem(), SystemReplacemsggroupAutomationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupCustomMessageInput)(nil)).Elem(), SystemReplacemsggroupCustomMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupCustomMessageArrayInput)(nil)).Elem(), SystemReplacemsggroupCustomMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupDeviceDetectionPortalInput)(nil)).Elem(), SystemReplacemsggroupDeviceDetectionPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupDeviceDetectionPortalArrayInput)(nil)).Elem(), SystemReplacemsggroupDeviceDetectionPortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupEcInput)(nil)).Elem(), SystemReplacemsggroupEcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupEcArrayInput)(nil)).Elem(), SystemReplacemsggroupEcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupFortiguardWfInput)(nil)).Elem(), SystemReplacemsggroupFortiguardWfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupFortiguardWfArrayInput)(nil)).Elem(), SystemReplacemsggroupFortiguardWfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupFtpInput)(nil)).Elem(), SystemReplacemsggroupFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupFtpArrayInput)(nil)).Elem(), SystemReplacemsggroupFtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupHttpInput)(nil)).Elem(), SystemReplacemsggroupHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupHttpArrayInput)(nil)).Elem(), SystemReplacemsggroupHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupIcapInput)(nil)).Elem(), SystemReplacemsggroupIcapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupIcapArrayInput)(nil)).Elem(), SystemReplacemsggroupIcapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupMailInput)(nil)).Elem(), SystemReplacemsggroupMailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupMailArrayInput)(nil)).Elem(), SystemReplacemsggroupMailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupNacQuarInput)(nil)).Elem(), SystemReplacemsggroupNacQuarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupNacQuarArrayInput)(nil)).Elem(), SystemReplacemsggroupNacQuarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupNntpInput)(nil)).Elem(), SystemReplacemsggroupNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupNntpArrayInput)(nil)).Elem(), SystemReplacemsggroupNntpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupSpamInput)(nil)).Elem(), SystemReplacemsggroupSpamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupSpamArrayInput)(nil)).Elem(), SystemReplacemsggroupSpamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupSslvpnInput)(nil)).Elem(), SystemReplacemsggroupSslvpnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupSslvpnArrayInput)(nil)).Elem(), SystemReplacemsggroupSslvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupTrafficQuotaInput)(nil)).Elem(), SystemReplacemsggroupTrafficQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupTrafficQuotaArrayInput)(nil)).Elem(), SystemReplacemsggroupTrafficQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupUtmInput)(nil)).Elem(), SystemReplacemsggroupUtmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupUtmArrayInput)(nil)).Elem(), SystemReplacemsggroupUtmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupWebproxyInput)(nil)).Elem(), SystemReplacemsggroupWebproxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsggroupWebproxyArrayInput)(nil)).Elem(), SystemReplacemsggroupWebproxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlServiceProviderInput)(nil)).Elem(), SystemSamlServiceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlServiceProviderArrayInput)(nil)).Elem(), SystemSamlServiceProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlServiceProviderAssertionAttributeInput)(nil)).Elem(), SystemSamlServiceProviderAssertionAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlServiceProviderAssertionAttributeArrayInput)(nil)).Elem(), SystemSamlServiceProviderAssertionAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorExternalAccountListInput)(nil)).Elem(), SystemSdnconnectorExternalAccountListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorExternalAccountListArrayInput)(nil)).Elem(), SystemSdnconnectorExternalAccountListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorExternalAccountListRegionListInput)(nil)).Elem(), SystemSdnconnectorExternalAccountListRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorExternalAccountListRegionListArrayInput)(nil)).Elem(), SystemSdnconnectorExternalAccountListRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorExternalIpInput)(nil)).Elem(), SystemSdnconnectorExternalIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorExternalIpArrayInput)(nil)).Elem(), SystemSdnconnectorExternalIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorForwardingRuleInput)(nil)).Elem(), SystemSdnconnectorForwardingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorForwardingRuleArrayInput)(nil)).Elem(), SystemSdnconnectorForwardingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorGcpProjectListInput)(nil)).Elem(), SystemSdnconnectorGcpProjectListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorGcpProjectListArrayInput)(nil)).Elem(), SystemSdnconnectorGcpProjectListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorGcpProjectListGcpZoneListInput)(nil)).Elem(), SystemSdnconnectorGcpProjectListGcpZoneListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorGcpProjectListGcpZoneListArrayInput)(nil)).Elem(), SystemSdnconnectorGcpProjectListGcpZoneListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorNicInput)(nil)).Elem(), SystemSdnconnectorNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorNicArrayInput)(nil)).Elem(), SystemSdnconnectorNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorNicIpInput)(nil)).Elem(), SystemSdnconnectorNicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorNicIpArrayInput)(nil)).Elem(), SystemSdnconnectorNicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorRouteInput)(nil)).Elem(), SystemSdnconnectorRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorRouteArrayInput)(nil)).Elem(), SystemSdnconnectorRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorRouteTableInput)(nil)).Elem(), SystemSdnconnectorRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorRouteTableArrayInput)(nil)).Elem(), SystemSdnconnectorRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorRouteTableRouteInput)(nil)).Elem(), SystemSdnconnectorRouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorRouteTableRouteArrayInput)(nil)).Elem(), SystemSdnconnectorRouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorServerListInput)(nil)).Elem(), SystemSdnconnectorServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnconnectorServerListArrayInput)(nil)).Elem(), SystemSdnconnectorServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationInput)(nil)).Elem(), SystemSdwanDuplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationArrayInput)(nil)).Elem(), SystemSdwanDuplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstaddr6Input)(nil)).Elem(), SystemSdwanDuplicationDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstaddr6ArrayInput)(nil)).Elem(), SystemSdwanDuplicationDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstaddrInput)(nil)).Elem(), SystemSdwanDuplicationDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstaddrArrayInput)(nil)).Elem(), SystemSdwanDuplicationDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstintfInput)(nil)).Elem(), SystemSdwanDuplicationDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstintfArrayInput)(nil)).Elem(), SystemSdwanDuplicationDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationServiceInput)(nil)).Elem(), SystemSdwanDuplicationServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationServiceArrayInput)(nil)).Elem(), SystemSdwanDuplicationServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationServiceIdInput)(nil)).Elem(), SystemSdwanDuplicationServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationServiceIdArrayInput)(nil)).Elem(), SystemSdwanDuplicationServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcaddr6Input)(nil)).Elem(), SystemSdwanDuplicationSrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcaddr6ArrayInput)(nil)).Elem(), SystemSdwanDuplicationSrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcaddrInput)(nil)).Elem(), SystemSdwanDuplicationSrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcaddrArrayInput)(nil)).Elem(), SystemSdwanDuplicationSrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcintfInput)(nil)).Elem(), SystemSdwanDuplicationSrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcintfArrayInput)(nil)).Elem(), SystemSdwanDuplicationSrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanFailAlertInterfaceInput)(nil)).Elem(), SystemSdwanFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanFailAlertInterfaceArrayInput)(nil)).Elem(), SystemSdwanFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckInput)(nil)).Elem(), SystemSdwanHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckArrayInput)(nil)).Elem(), SystemSdwanHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckMemberInput)(nil)).Elem(), SystemSdwanHealthCheckMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckMemberArrayInput)(nil)).Elem(), SystemSdwanHealthCheckMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckSlaInput)(nil)).Elem(), SystemSdwanHealthCheckSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckSlaArrayInput)(nil)).Elem(), SystemSdwanHealthCheckSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanMemberInput)(nil)).Elem(), SystemSdwanMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanMemberArrayInput)(nil)).Elem(), SystemSdwanMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanNeighborInput)(nil)).Elem(), SystemSdwanNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanNeighborArrayInput)(nil)).Elem(), SystemSdwanNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInput)(nil)).Elem(), SystemSdwanServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceArrayInput)(nil)).Elem(), SystemSdwanServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceDst6Input)(nil)).Elem(), SystemSdwanServiceDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceDst6ArrayInput)(nil)).Elem(), SystemSdwanServiceDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceDstInput)(nil)).Elem(), SystemSdwanServiceDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceDstArrayInput)(nil)).Elem(), SystemSdwanServiceDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceGroupInput)(nil)).Elem(), SystemSdwanServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceGroupArrayInput)(nil)).Elem(), SystemSdwanServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceHealthCheckInput)(nil)).Elem(), SystemSdwanServiceHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceHealthCheckArrayInput)(nil)).Elem(), SystemSdwanServiceHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInputDeviceInput)(nil)).Elem(), SystemSdwanServiceInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInputDeviceArrayInput)(nil)).Elem(), SystemSdwanServiceInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInputZoneInput)(nil)).Elem(), SystemSdwanServiceInputZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInputZoneArrayInput)(nil)).Elem(), SystemSdwanServiceInputZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlCategoryInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlCategoryArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlGroupInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlGroupArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomInput)(nil)).Elem(), SystemSdwanServiceInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomGroupInput)(nil)).Elem(), SystemSdwanServiceInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomGroupArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceGroupInput)(nil)).Elem(), SystemSdwanServiceInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceGroupArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceNameInput)(nil)).Elem(), SystemSdwanServiceInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceNameArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServicePriorityMemberInput)(nil)).Elem(), SystemSdwanServicePriorityMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServicePriorityMemberArrayInput)(nil)).Elem(), SystemSdwanServicePriorityMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServicePriorityZoneInput)(nil)).Elem(), SystemSdwanServicePriorityZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServicePriorityZoneArrayInput)(nil)).Elem(), SystemSdwanServicePriorityZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSlaInput)(nil)).Elem(), SystemSdwanServiceSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSlaArrayInput)(nil)).Elem(), SystemSdwanServiceSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSrc6Input)(nil)).Elem(), SystemSdwanServiceSrc6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSrc6ArrayInput)(nil)).Elem(), SystemSdwanServiceSrc6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSrcInput)(nil)).Elem(), SystemSdwanServiceSrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSrcArrayInput)(nil)).Elem(), SystemSdwanServiceSrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceUserInput)(nil)).Elem(), SystemSdwanServiceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceUserArrayInput)(nil)).Elem(), SystemSdwanServiceUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanZoneInput)(nil)).Elem(), SystemSdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanZoneArrayInput)(nil)).Elem(), SystemSdwanZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSessionttlPortInput)(nil)).Elem(), SystemSessionttlPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSessionttlPortArrayInput)(nil)).Elem(), SystemSessionttlPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingsGuiDefaultPolicyColumnInput)(nil)).Elem(), SystemSettingsGuiDefaultPolicyColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingsGuiDefaultPolicyColumnArrayInput)(nil)).Elem(), SystemSettingsGuiDefaultPolicyColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSpeedtestscheduleScheduleInput)(nil)).Elem(), SystemSpeedtestscheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSpeedtestscheduleScheduleArrayInput)(nil)).Elem(), SystemSpeedtestscheduleScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSpeedtestserverHostInput)(nil)).Elem(), SystemSpeedtestserverHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSpeedtestserverHostArrayInput)(nil)).Elem(), SystemSpeedtestserverHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoadminVdomInput)(nil)).Elem(), SystemSsoadminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoadminVdomArrayInput)(nil)).Elem(), SystemSsoadminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoforticloudadminVdomInput)(nil)).Elem(), SystemSsoforticloudadminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoforticloudadminVdomArrayInput)(nil)).Elem(), SystemSsoforticloudadminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneclusterClusterPeerInput)(nil)).Elem(), SystemStandaloneclusterClusterPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneclusterClusterPeerArrayInput)(nil)).Elem(), SystemStandaloneclusterClusterPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncInput)(nil)).Elem(), SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayInput)(nil)).Elem(), SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneclusterClusterPeerSessionSyncFilterInput)(nil)).Elem(), SystemStandaloneclusterClusterPeerSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneclusterClusterPeerSessionSyncFilterPtrInput)(nil)).Elem(), SystemStandaloneclusterClusterPeerSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceInput)(nil)).Elem(), SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayInput)(nil)).Elem(), SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneclusterClusterPeerSyncvdInput)(nil)).Elem(), SystemStandaloneclusterClusterPeerSyncvdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneclusterClusterPeerSyncvdArrayInput)(nil)).Elem(), SystemStandaloneclusterClusterPeerSyncvdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSwitchinterfaceMemberInput)(nil)).Elem(), SystemSwitchinterfaceMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSwitchinterfaceMemberArrayInput)(nil)).Elem(), SystemSwitchinterfaceMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSwitchinterfaceSpanSourcePortInput)(nil)).Elem(), SystemSwitchinterfaceSpanSourcePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSwitchinterfaceSpanSourcePortArrayInput)(nil)).Elem(), SystemSwitchinterfaceSpanSourcePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomdnsServerHostnameInput)(nil)).Elem(), SystemVdomdnsServerHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomdnsServerHostnameArrayInput)(nil)).Elem(), SystemVdomdnsServerHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomexceptionVdomInput)(nil)).Elem(), SystemVdomexceptionVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomexceptionVdomArrayInput)(nil)).Elem(), SystemVdomexceptionVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualswitchPortInput)(nil)).Elem(), SystemVirtualswitchPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualswitchPortArrayInput)(nil)).Elem(), SystemVirtualswitchPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkFailAlertInterfaceInput)(nil)).Elem(), SystemVirtualwanlinkFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkFailAlertInterfaceArrayInput)(nil)).Elem(), SystemVirtualwanlinkFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkHealthCheckInput)(nil)).Elem(), SystemVirtualwanlinkHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkHealthCheckArrayInput)(nil)).Elem(), SystemVirtualwanlinkHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkHealthCheckMemberInput)(nil)).Elem(), SystemVirtualwanlinkHealthCheckMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkHealthCheckMemberArrayInput)(nil)).Elem(), SystemVirtualwanlinkHealthCheckMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkHealthCheckSlaInput)(nil)).Elem(), SystemVirtualwanlinkHealthCheckSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkHealthCheckSlaArrayInput)(nil)).Elem(), SystemVirtualwanlinkHealthCheckSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkMemberInput)(nil)).Elem(), SystemVirtualwanlinkMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkMemberArrayInput)(nil)).Elem(), SystemVirtualwanlinkMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkNeighborInput)(nil)).Elem(), SystemVirtualwanlinkNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkNeighborArrayInput)(nil)).Elem(), SystemVirtualwanlinkNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInput)(nil)).Elem(), SystemVirtualwanlinkServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceDst6Input)(nil)).Elem(), SystemVirtualwanlinkServiceDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceDst6ArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceDstInput)(nil)).Elem(), SystemVirtualwanlinkServiceDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceDstArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceGroupInput)(nil)).Elem(), SystemVirtualwanlinkServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceGroupArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInputDeviceInput)(nil)).Elem(), SystemVirtualwanlinkServiceInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInputDeviceArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceAppCtrlInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceAppCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceAppCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCtrlInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCtrlArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCtrlGroupInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCustomInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCustomArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCustomGroupInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceGroupInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceGroupArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceIdInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceIdArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceNameInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceInternetServiceNameArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServicePriorityMemberInput)(nil)).Elem(), SystemVirtualwanlinkServicePriorityMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServicePriorityMemberArrayInput)(nil)).Elem(), SystemVirtualwanlinkServicePriorityMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceSlaInput)(nil)).Elem(), SystemVirtualwanlinkServiceSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceSlaArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceSrc6Input)(nil)).Elem(), SystemVirtualwanlinkServiceSrc6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceSrc6ArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceSrc6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceSrcInput)(nil)).Elem(), SystemVirtualwanlinkServiceSrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceSrcArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceSrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceUserInput)(nil)).Elem(), SystemVirtualwanlinkServiceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkServiceUserArrayInput)(nil)).Elem(), SystemVirtualwanlinkServiceUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkZoneInput)(nil)).Elem(), SystemVirtualwanlinkZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkZoneArrayInput)(nil)).Elem(), SystemVirtualwanlinkZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwirepairMemberInput)(nil)).Elem(), SystemVirtualwirepairMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwirepairMemberArrayInput)(nil)).Elem(), SystemVirtualwirepairMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVxlanRemoteIp6Input)(nil)).Elem(), SystemVxlanRemoteIp6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVxlanRemoteIp6ArrayInput)(nil)).Elem(), SystemVxlanRemoteIp6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVxlanRemoteIpInput)(nil)).Elem(), SystemVxlanRemoteIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVxlanRemoteIpArrayInput)(nil)).Elem(), SystemVxlanRemoteIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemZoneInterfaceInput)(nil)).Elem(), SystemZoneInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemZoneInterfaceArrayInput)(nil)).Elem(), SystemZoneInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemZoneTaggingInput)(nil)).Elem(), SystemZoneTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemZoneTaggingArrayInput)(nil)).Elem(), SystemZoneTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemZoneTaggingTagInput)(nil)).Elem(), SystemZoneTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemZoneTaggingTagArrayInput)(nil)).Elem(), SystemZoneTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Systemdhcp6ServerIpRangeInput)(nil)).Elem(), Systemdhcp6ServerIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Systemdhcp6ServerIpRangeArrayInput)(nil)).Elem(), Systemdhcp6ServerIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Systemdhcp6ServerPrefixRangeInput)(nil)).Elem(), Systemdhcp6ServerPrefixRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Systemdhcp6ServerPrefixRangeArrayInput)(nil)).Elem(), Systemdhcp6ServerPrefixRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerExcludeRangeInput)(nil)).Elem(), SystemdhcpServerExcludeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerExcludeRangeArrayInput)(nil)).Elem(), SystemdhcpServerExcludeRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerExcludeRangeVciStringInput)(nil)).Elem(), SystemdhcpServerExcludeRangeVciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerExcludeRangeVciStringArrayInput)(nil)).Elem(), SystemdhcpServerExcludeRangeVciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerIpRangeInput)(nil)).Elem(), SystemdhcpServerIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerIpRangeArrayInput)(nil)).Elem(), SystemdhcpServerIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerIpRangeVciStringInput)(nil)).Elem(), SystemdhcpServerIpRangeVciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerIpRangeVciStringArrayInput)(nil)).Elem(), SystemdhcpServerIpRangeVciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerOptionInput)(nil)).Elem(), SystemdhcpServerOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerOptionArrayInput)(nil)).Elem(), SystemdhcpServerOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerOptionVciStringInput)(nil)).Elem(), SystemdhcpServerOptionVciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerOptionVciStringArrayInput)(nil)).Elem(), SystemdhcpServerOptionVciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerReservedAddressInput)(nil)).Elem(), SystemdhcpServerReservedAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerReservedAddressArrayInput)(nil)).Elem(), SystemdhcpServerReservedAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerTftpServerInput)(nil)).Elem(), SystemdhcpServerTftpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerTftpServerArrayInput)(nil)).Elem(), SystemdhcpServerTftpServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerVciStringInput)(nil)).Elem(), SystemdhcpServerVciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemdhcpServerVciStringArrayInput)(nil)).Elem(), SystemdhcpServerVciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyGuestInput)(nil)).Elem(), SystemlldpNetworkpolicyGuestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyGuestPtrInput)(nil)).Elem(), SystemlldpNetworkpolicyGuestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyGuestVoiceSignalingInput)(nil)).Elem(), SystemlldpNetworkpolicyGuestVoiceSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyGuestVoiceSignalingPtrInput)(nil)).Elem(), SystemlldpNetworkpolicyGuestVoiceSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicySoftphoneInput)(nil)).Elem(), SystemlldpNetworkpolicySoftphoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicySoftphonePtrInput)(nil)).Elem(), SystemlldpNetworkpolicySoftphoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyStreamingVideoInput)(nil)).Elem(), SystemlldpNetworkpolicyStreamingVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyStreamingVideoPtrInput)(nil)).Elem(), SystemlldpNetworkpolicyStreamingVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyVideoConferencingInput)(nil)).Elem(), SystemlldpNetworkpolicyVideoConferencingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyVideoConferencingPtrInput)(nil)).Elem(), SystemlldpNetworkpolicyVideoConferencingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyVideoSignalingInput)(nil)).Elem(), SystemlldpNetworkpolicyVideoSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyVideoSignalingPtrInput)(nil)).Elem(), SystemlldpNetworkpolicyVideoSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyVoiceInput)(nil)).Elem(), SystemlldpNetworkpolicyVoiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyVoicePtrInput)(nil)).Elem(), SystemlldpNetworkpolicyVoiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyVoiceSignalingInput)(nil)).Elem(), SystemlldpNetworkpolicyVoiceSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyVoiceSignalingPtrInput)(nil)).Elem(), SystemlldpNetworkpolicyVoiceSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpCommunityHostInput)(nil)).Elem(), SystemsnmpCommunityHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpCommunityHostArrayInput)(nil)).Elem(), SystemsnmpCommunityHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpCommunityHosts6Input)(nil)).Elem(), SystemsnmpCommunityHosts6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpCommunityHosts6ArrayInput)(nil)).Elem(), SystemsnmpCommunityHosts6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpCommunityVdomInput)(nil)).Elem(), SystemsnmpCommunityVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpCommunityVdomArrayInput)(nil)).Elem(), SystemsnmpCommunityVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpUserVdomInput)(nil)).Elem(), SystemsnmpUserVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpUserVdomArrayInput)(nil)).Elem(), SystemsnmpUserVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDeviceTaggingInput)(nil)).Elem(), UserDeviceTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDeviceTaggingArrayInput)(nil)).Elem(), UserDeviceTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDeviceTaggingTagInput)(nil)).Elem(), UserDeviceTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDeviceTaggingTagArrayInput)(nil)).Elem(), UserDeviceTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDeviceaccesslistDeviceListInput)(nil)).Elem(), UserDeviceaccesslistDeviceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDeviceaccesslistDeviceListArrayInput)(nil)).Elem(), UserDeviceaccesslistDeviceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDevicegroupMemberInput)(nil)).Elem(), UserDevicegroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDevicegroupMemberArrayInput)(nil)).Elem(), UserDevicegroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDevicegroupTaggingInput)(nil)).Elem(), UserDevicegroupTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDevicegroupTaggingArrayInput)(nil)).Elem(), UserDevicegroupTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDevicegroupTaggingTagInput)(nil)).Elem(), UserDevicegroupTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDevicegroupTaggingTagArrayInput)(nil)).Elem(), UserDevicegroupTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDomaincontrollerExtraServerInput)(nil)).Elem(), UserDomaincontrollerExtraServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDomaincontrollerExtraServerArrayInput)(nil)).Elem(), UserDomaincontrollerExtraServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserExchangeKdcIpInput)(nil)).Elem(), UserExchangeKdcIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserExchangeKdcIpArrayInput)(nil)).Elem(), UserExchangeKdcIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserFssopollingAdgrpInput)(nil)).Elem(), UserFssopollingAdgrpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserFssopollingAdgrpArrayInput)(nil)).Elem(), UserFssopollingAdgrpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupGuestInput)(nil)).Elem(), UserGroupGuestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupGuestArrayInput)(nil)).Elem(), UserGroupGuestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupMatchInput)(nil)).Elem(), UserGroupMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupMatchArrayInput)(nil)).Elem(), UserGroupMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupMemberInput)(nil)).Elem(), UserGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupMemberArrayInput)(nil)).Elem(), UserGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserNacpolicySwitchGroupInput)(nil)).Elem(), UserNacpolicySwitchGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserNacpolicySwitchGroupArrayInput)(nil)).Elem(), UserNacpolicySwitchGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserNacpolicySwitchScopeInput)(nil)).Elem(), UserNacpolicySwitchScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserNacpolicySwitchScopeArrayInput)(nil)).Elem(), UserNacpolicySwitchScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPeergrpMemberInput)(nil)).Elem(), UserPeergrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPeergrpMemberArrayInput)(nil)).Elem(), UserPeergrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserQuarantineTargetInput)(nil)).Elem(), UserQuarantineTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserQuarantineTargetArrayInput)(nil)).Elem(), UserQuarantineTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserQuarantineTargetMacInput)(nil)).Elem(), UserQuarantineTargetMacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserQuarantineTargetMacArrayInput)(nil)).Elem(), UserQuarantineTargetMacArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRadiusAccountingServerInput)(nil)).Elem(), UserRadiusAccountingServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRadiusAccountingServerArrayInput)(nil)).Elem(), UserRadiusAccountingServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRadiusClassInput)(nil)).Elem(), UserRadiusClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRadiusClassArrayInput)(nil)).Elem(), UserRadiusClassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSecurityexemptlistRuleInput)(nil)).Elem(), UserSecurityexemptlistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSecurityexemptlistRuleArrayInput)(nil)).Elem(), UserSecurityexemptlistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSecurityexemptlistRuleDeviceInput)(nil)).Elem(), UserSecurityexemptlistRuleDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSecurityexemptlistRuleDeviceArrayInput)(nil)).Elem(), UserSecurityexemptlistRuleDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSecurityexemptlistRuleDstaddrInput)(nil)).Elem(), UserSecurityexemptlistRuleDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSecurityexemptlistRuleDstaddrArrayInput)(nil)).Elem(), UserSecurityexemptlistRuleDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSecurityexemptlistRuleServiceInput)(nil)).Elem(), UserSecurityexemptlistRuleServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSecurityexemptlistRuleServiceArrayInput)(nil)).Elem(), UserSecurityexemptlistRuleServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSecurityexemptlistRuleSrcaddrInput)(nil)).Elem(), UserSecurityexemptlistRuleSrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSecurityexemptlistRuleSrcaddrArrayInput)(nil)).Elem(), UserSecurityexemptlistRuleSrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSettingAuthPortInput)(nil)).Elem(), UserSettingAuthPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSettingAuthPortArrayInput)(nil)).Elem(), UserSettingAuthPortArray{})
	pulumi.RegisterOutputType(LogfortianalyzercloudFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogfortianalyzercloudFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogfortianalyzercloudOverridefilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogfortianalyzercloudOverridefilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogfortianalyzercloudSettingSerialOutput{})
	pulumi.RegisterOutputType(LogfortianalyzercloudSettingSerialArrayOutput{})
	pulumi.RegisterOutputType(LogfortiguardFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogfortiguardFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogfortiguardOverridefilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogfortiguardOverridefilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogmemoryFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogmemoryFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LognulldeviceFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LognulldeviceFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd2FilterFreeStyleOutput{})
	pulumi.RegisterOutputType(Logsyslogd2FilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd2OverridefilterFreeStyleOutput{})
	pulumi.RegisterOutputType(Logsyslogd2OverridefilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd2OverridesettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(Logsyslogd2OverridesettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd2SettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(Logsyslogd2SettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd3FilterFreeStyleOutput{})
	pulumi.RegisterOutputType(Logsyslogd3FilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd3OverridefilterFreeStyleOutput{})
	pulumi.RegisterOutputType(Logsyslogd3OverridefilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd3OverridesettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(Logsyslogd3OverridesettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd3SettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(Logsyslogd3SettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd4FilterFreeStyleOutput{})
	pulumi.RegisterOutputType(Logsyslogd4FilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd4OverridefilterFreeStyleOutput{})
	pulumi.RegisterOutputType(Logsyslogd4OverridefilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd4OverridesettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(Logsyslogd4OverridesettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(Logsyslogd4SettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(Logsyslogd4SettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogsyslogdFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogsyslogdFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogsyslogdOverridefilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogsyslogdOverridefilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogsyslogdOverridesettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(LogsyslogdOverridesettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogsyslogdSettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(LogsyslogdSettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogwebtrendsFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogwebtrendsFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(NsxtServicechainServiceIndexOutput{})
	pulumi.RegisterOutputType(NsxtServicechainServiceIndexArrayOutput{})
	pulumi.RegisterOutputType(ReportChartCategorySeriesOutput{})
	pulumi.RegisterOutputType(ReportChartCategorySeriesPtrOutput{})
	pulumi.RegisterOutputType(ReportChartColumnOutput{})
	pulumi.RegisterOutputType(ReportChartColumnArrayOutput{})
	pulumi.RegisterOutputType(ReportChartColumnMappingOutput{})
	pulumi.RegisterOutputType(ReportChartColumnMappingArrayOutput{})
	pulumi.RegisterOutputType(ReportChartDrillDownChartOutput{})
	pulumi.RegisterOutputType(ReportChartDrillDownChartArrayOutput{})
	pulumi.RegisterOutputType(ReportChartValueSeriesOutput{})
	pulumi.RegisterOutputType(ReportChartValueSeriesPtrOutput{})
	pulumi.RegisterOutputType(ReportChartXSeriesOutput{})
	pulumi.RegisterOutputType(ReportChartXSeriesPtrOutput{})
	pulumi.RegisterOutputType(ReportChartYSeriesOutput{})
	pulumi.RegisterOutputType(ReportChartYSeriesPtrOutput{})
	pulumi.RegisterOutputType(ReportDatasetFieldOutput{})
	pulumi.RegisterOutputType(ReportDatasetFieldArrayOutput{})
	pulumi.RegisterOutputType(ReportDatasetParameterOutput{})
	pulumi.RegisterOutputType(ReportDatasetParameterArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemListOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemListArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemParameterOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemParameterArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageOutput{})
	pulumi.RegisterOutputType(ReportLayoutPagePtrOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageFooterOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageFooterPtrOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageFooterFooterItemOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageFooterFooterItemArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageHeaderOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageHeaderPtrOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageHeaderHeaderItemOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageHeaderHeaderItemArrayOutput{})
	pulumi.RegisterOutputType(RouterAccesslist6RuleOutput{})
	pulumi.RegisterOutputType(RouterAccesslist6RuleArrayOutput{})
	pulumi.RegisterOutputType(RouterAccesslistRuleOutput{})
	pulumi.RegisterOutputType(RouterAccesslistRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterAspathlistRuleOutput{})
	pulumi.RegisterOutputType(RouterAspathlistRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterBfd6MultihopTemplateOutput{})
	pulumi.RegisterOutputType(RouterBfd6MultihopTemplateArrayOutput{})
	pulumi.RegisterOutputType(RouterBfd6NeighborOutput{})
	pulumi.RegisterOutputType(RouterBfd6NeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterBfdMultihopTemplateOutput{})
	pulumi.RegisterOutputType(RouterBfdMultihopTemplateArrayOutput{})
	pulumi.RegisterOutputType(RouterBfdNeighborOutput{})
	pulumi.RegisterOutputType(RouterBfdNeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpAdminDistanceOutput{})
	pulumi.RegisterOutputType(RouterBgpAdminDistanceArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpAggregateAddress6Output{})
	pulumi.RegisterOutputType(RouterBgpAggregateAddress6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpAggregateAddressOutput{})
	pulumi.RegisterOutputType(RouterBgpAggregateAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpConfederationPeerOutput{})
	pulumi.RegisterOutputType(RouterBgpConfederationPeerArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborTypeOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborConditionalAdvertise6Output{})
	pulumi.RegisterOutputType(RouterBgpNeighborConditionalAdvertise6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborConditionalAdvertiseOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborConditionalAdvertiseArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborGroupOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborGroupArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborRange6Output{})
	pulumi.RegisterOutputType(RouterBgpNeighborRange6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborRangeOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborRangeArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNetwork6TypeOutput{})
	pulumi.RegisterOutputType(RouterBgpNetwork6TypeArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNetworkTypeOutput{})
	pulumi.RegisterOutputType(RouterBgpNetworkTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpRedistribute6Output{})
	pulumi.RegisterOutputType(RouterBgpRedistribute6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpRedistributeOutput{})
	pulumi.RegisterOutputType(RouterBgpRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrf6Output{})
	pulumi.RegisterOutputType(RouterBgpVrf6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrf6LeakTargetOutput{})
	pulumi.RegisterOutputType(RouterBgpVrf6LeakTargetArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfExportRtOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfExportRtArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfImportRtOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfImportRtArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeak6Output{})
	pulumi.RegisterOutputType(RouterBgpVrfLeak6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeak6TargetOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeak6TargetArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeakOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeakArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeakTargetOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeakTargetArrayOutput{})
	pulumi.RegisterOutputType(RouterCommunitylistRuleOutput{})
	pulumi.RegisterOutputType(RouterCommunitylistRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisIsisInterfaceOutput{})
	pulumi.RegisterOutputType(RouterIsisIsisInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisIsisNetOutput{})
	pulumi.RegisterOutputType(RouterIsisIsisNetArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisRedistribute6Output{})
	pulumi.RegisterOutputType(RouterIsisRedistribute6ArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisRedistributeOutput{})
	pulumi.RegisterOutputType(RouterIsisRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisSummaryAddress6Output{})
	pulumi.RegisterOutputType(RouterIsisSummaryAddress6ArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisSummaryAddressOutput{})
	pulumi.RegisterOutputType(RouterIsisSummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterKeychainKeyOutput{})
	pulumi.RegisterOutputType(RouterKeychainKeyArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticast6InterfaceOutput{})
	pulumi.RegisterOutputType(RouterMulticast6InterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticast6PimSmGlobalOutput{})
	pulumi.RegisterOutputType(RouterMulticast6PimSmGlobalPtrOutput{})
	pulumi.RegisterOutputType(RouterMulticast6PimSmGlobalRpAddressOutput{})
	pulumi.RegisterOutputType(RouterMulticast6PimSmGlobalRpAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceIgmpOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceIgmpPtrOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceJoinGroupOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceJoinGroupArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticastPimSmGlobalOutput{})
	pulumi.RegisterOutputType(RouterMulticastPimSmGlobalPtrOutput{})
	pulumi.RegisterOutputType(RouterMulticastPimSmGlobalRpAddressOutput{})
	pulumi.RegisterOutputType(RouterMulticastPimSmGlobalRpAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticastflowFlowOutput{})
	pulumi.RegisterOutputType(RouterMulticastflowFlowArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaIpsecKeyOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaRangeOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaRangeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaVirtualLinkOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaVirtualLinkArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaVirtualLinkIpsecKeyOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceTypeOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceIpsecKeyOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceNeighborOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceNeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6PassiveInterfaceOutput{})
	pulumi.RegisterOutputType(RouterOspf6PassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6RedistributeOutput{})
	pulumi.RegisterOutputType(RouterOspf6RedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6SummaryAddressOutput{})
	pulumi.RegisterOutputType(RouterOspf6SummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaFilterListOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaFilterListArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaRangeOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaRangeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaVirtualLinkOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaVirtualLinkArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaVirtualLinkMd5KeyOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaVirtualLinkMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfDistributeListOutput{})
	pulumi.RegisterOutputType(RouterOspfDistributeListArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfNeighborTypeOutput{})
	pulumi.RegisterOutputType(RouterOspfNeighborTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfNetworkTypeOutput{})
	pulumi.RegisterOutputType(RouterOspfNetworkTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfOspfInterfaceTypeOutput{})
	pulumi.RegisterOutputType(RouterOspfOspfInterfaceTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfOspfInterfaceMd5KeyOutput{})
	pulumi.RegisterOutputType(RouterOspfOspfInterfaceMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(RouterOspfPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfRedistributeOutput{})
	pulumi.RegisterOutputType(RouterOspfRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfSummaryAddressOutput{})
	pulumi.RegisterOutputType(RouterOspfSummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(RouterPolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicy6InternetServiceCustomOutput{})
	pulumi.RegisterOutputType(RouterPolicy6InternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicy6InternetServiceIdOutput{})
	pulumi.RegisterOutputType(RouterPolicy6InternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(RouterPolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicyDstOutput{})
	pulumi.RegisterOutputType(RouterPolicyDstArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicyDstaddrOutput{})
	pulumi.RegisterOutputType(RouterPolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicyInputDeviceOutput{})
	pulumi.RegisterOutputType(RouterPolicyInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(RouterPolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(RouterPolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicySrcOutput{})
	pulumi.RegisterOutputType(RouterPolicySrcArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicySrcaddrOutput{})
	pulumi.RegisterOutputType(RouterPolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(RouterPrefixlist6RuleOutput{})
	pulumi.RegisterOutputType(RouterPrefixlist6RuleArrayOutput{})
	pulumi.RegisterOutputType(RouterPrefixlistRuleOutput{})
	pulumi.RegisterOutputType(RouterPrefixlistRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterRipDistanceOutput{})
	pulumi.RegisterOutputType(RouterRipDistanceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipDistributeListOutput{})
	pulumi.RegisterOutputType(RouterRipDistributeListArrayOutput{})
	pulumi.RegisterOutputType(RouterRipInterfaceOutput{})
	pulumi.RegisterOutputType(RouterRipInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipNeighborOutput{})
	pulumi.RegisterOutputType(RouterRipNeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterRipNetworkOutput{})
	pulumi.RegisterOutputType(RouterRipNetworkArrayOutput{})
	pulumi.RegisterOutputType(RouterRipOffsetListOutput{})
	pulumi.RegisterOutputType(RouterRipOffsetListArrayOutput{})
	pulumi.RegisterOutputType(RouterRipPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(RouterRipPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipRedistributeOutput{})
	pulumi.RegisterOutputType(RouterRipRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngAggregateAddressOutput{})
	pulumi.RegisterOutputType(RouterRipngAggregateAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngDistanceOutput{})
	pulumi.RegisterOutputType(RouterRipngDistanceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngDistributeListOutput{})
	pulumi.RegisterOutputType(RouterRipngDistributeListArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngInterfaceOutput{})
	pulumi.RegisterOutputType(RouterRipngInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngNeighborOutput{})
	pulumi.RegisterOutputType(RouterRipngNeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngNetworkOutput{})
	pulumi.RegisterOutputType(RouterRipngNetworkArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngOffsetListOutput{})
	pulumi.RegisterOutputType(RouterRipngOffsetListArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(RouterRipngPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngRedistributeOutput{})
	pulumi.RegisterOutputType(RouterRipngRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterRoutemapRuleOutput{})
	pulumi.RegisterOutputType(RouterRoutemapRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterRoutemapRuleSetAspathOutput{})
	pulumi.RegisterOutputType(RouterRoutemapRuleSetAspathArrayOutput{})
	pulumi.RegisterOutputType(RouterRoutemapRuleSetCommunityOutput{})
	pulumi.RegisterOutputType(RouterRoutemapRuleSetCommunityArrayOutput{})
	pulumi.RegisterOutputType(RouterRoutemapRuleSetExtcommunityRtOutput{})
	pulumi.RegisterOutputType(RouterRoutemapRuleSetExtcommunityRtArrayOutput{})
	pulumi.RegisterOutputType(RouterRoutemapRuleSetExtcommunitySooOutput{})
	pulumi.RegisterOutputType(RouterRoutemapRuleSetExtcommunitySooArrayOutput{})
	pulumi.RegisterOutputType(RouterStatic6SdwanZoneOutput{})
	pulumi.RegisterOutputType(RouterStatic6SdwanZoneArrayOutput{})
	pulumi.RegisterOutputType(RouterStaticSdwanZoneOutput{})
	pulumi.RegisterOutputType(RouterStaticSdwanZoneArrayOutput{})
	pulumi.RegisterOutputType(RouterbgpNeighborConditionalAdvertise6Output{})
	pulumi.RegisterOutputType(RouterbgpNeighborConditionalAdvertise6ArrayOutput{})
	pulumi.RegisterOutputType(RouterbgpNeighborConditionalAdvertiseOutput{})
	pulumi.RegisterOutputType(RouterbgpNeighborConditionalAdvertiseArrayOutput{})
	pulumi.RegisterOutputType(Routerospf6Ospf6interfaceIpsecKeyOutput{})
	pulumi.RegisterOutputType(Routerospf6Ospf6interfaceIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(Routerospf6Ospf6interfaceNeighborOutput{})
	pulumi.RegisterOutputType(Routerospf6Ospf6interfaceNeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterospfOspfinterfaceMd5KeyOutput{})
	pulumi.RegisterOutputType(RouterospfOspfinterfaceMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(SctpfilterProfilePpidFilterOutput{})
	pulumi.RegisterOutputType(SctpfilterProfilePpidFilterArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterBwlEntryOutput{})
	pulumi.RegisterOutputType(SpamfilterBwlEntryArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterBwordEntryOutput{})
	pulumi.RegisterOutputType(SpamfilterBwordEntryArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterDnsblEntryOutput{})
	pulumi.RegisterOutputType(SpamfilterDnsblEntryArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterIptrustEntryOutput{})
	pulumi.RegisterOutputType(SpamfilterIptrustEntryArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterMheaderEntryOutput{})
	pulumi.RegisterOutputType(SpamfilterMheaderEntryArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileGmailOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileGmailPtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileImapOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileImapPtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileMapiOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileMapiPtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileMsnHotmailOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileMsnHotmailPtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfilePop3Output{})
	pulumi.RegisterOutputType(SpamfilterProfilePop3PtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileSmtpOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileSmtpPtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileYahooMailOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileYahooMailPtrOutput{})
	pulumi.RegisterOutputType(SshfilterProfileFileFilterOutput{})
	pulumi.RegisterOutputType(SshfilterProfileFileFilterPtrOutput{})
	pulumi.RegisterOutputType(SshfilterProfileFileFilterEntryOutput{})
	pulumi.RegisterOutputType(SshfilterProfileFileFilterEntryArrayOutput{})
	pulumi.RegisterOutputType(SshfilterProfileFileFilterEntryFileTypeOutput{})
	pulumi.RegisterOutputType(SshfilterProfileFileFilterEntryFileTypeArrayOutput{})
	pulumi.RegisterOutputType(SshfilterProfileShellCommandOutput{})
	pulumi.RegisterOutputType(SshfilterProfileShellCommandArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerDynamicportpolicyPolicyOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerDynamicportpolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerDynamicportpolicyPolicyInterfaceTagOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerDynamicportpolicyPolicyInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerFlowtrackingAggregateOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerFlowtrackingAggregateArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerFlowtrackingCollectorOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerFlowtrackingCollectorArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerFortilinksettingsNacPortsOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerFortilinksettingsNacPortsPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerFortilinksettingsNacPortsNacSegmentVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerGlobalCustomCommandOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerGlobalCustomCommandArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerGlobalDisableDiscoveryOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerGlobalDisableDiscoveryArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLldpprofileCustomTlvOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLldpprofileCustomTlvArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLldpprofileMedLocationServiceOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLldpprofileMedLocationServiceArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLldpprofileMedNetworkPolicyOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLocationAddressCivicOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLocationAddressCivicPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLocationCoordinatesOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLocationCoordinatesPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLocationElinNumberOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLocationElinNumberPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchCustomCommandOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchCustomCommandArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchIgmpSnoopingOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchIgmpSnoopingPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchIgmpSnoopingVlanOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchIgmpSnoopingVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchIpSourceGuardOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchIpSourceGuardArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchIpSourceGuardBindingEntryOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchIpSourceGuardBindingEntryArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchMirrorOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchMirrorArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchMirrorSrcEgressOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchMirrorSrcEgressArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchMirrorSrcIngressOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchMirrorSrcIngressArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchN8021xSettingsOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchN8021xSettingsPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortAllowedVlanOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortAllowedVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortExportTagOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortExportTagArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortInterfaceTagOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortMemberOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortMemberArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortUntaggedVlanOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchPortUntaggedVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchRemoteLogOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchRemoteLogArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSnmpCommunityOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSnmpCommunityArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSnmpCommunityHostOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSnmpCommunityHostArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSnmpSysinfoOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSnmpSysinfoPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSnmpTrapThresholdOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSnmpTrapThresholdPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSnmpUserOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSnmpUserArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchStaticMacOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchStaticMacArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchStormControlOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchStormControlPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchStpInstanceOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchStpInstanceArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchStpSettingsOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchStpSettingsPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSwitchLogOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSwitchLogPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSwitchStpSettingsOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerManagedswitchSwitchStpSettingsPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerQuarantineTargetOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerQuarantineTargetArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerQuarantineTargetTagOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerQuarantineTargetTagArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerSnmpcommunityHostOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerSnmpcommunityHostArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerStpinstanceVlanRangeOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerStpinstanceVlanRangeArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerSwitchgroupMemberOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerSwitchgroupMemberArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerTrafficsnifferTargetIpOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerTrafficsnifferTargetIpArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerTrafficsnifferTargetMacOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerTrafficsnifferTargetMacArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerTrafficsnifferTargetPortOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerTrafficsnifferTargetPortArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerTrafficsnifferTargetPortInPortOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerTrafficsnifferTargetPortInPortArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerTrafficsnifferTargetPortOutPortOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerTrafficsnifferTargetPortOutPortArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerVlanPortalMessageOverridesOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerVlanPortalMessageOverridesPtrOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerVlanSelectedUsergroupOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerVlanSelectedUsergroupArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerVlanpolicyAllowedVlanOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerVlanpolicyAllowedVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerVlanpolicyUntaggedVlanOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerVlanpolicyUntaggedVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerautoconfigCustomSwitchBindingOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerautoconfigCustomSwitchBindingArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerqosIpdscpmapMapTypeOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerqosIpdscpmapMapTypeArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerqosQueuepolicyCosQueueOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerqosQueuepolicyCosQueueArrayOutput{})
	pulumi.RegisterOutputType(Switchcontrollersecuritypolicy8021XUserGroupOutput{})
	pulumi.RegisterOutputType(Switchcontrollersecuritypolicy8021XUserGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemAccprofileFwgrpPermissionOutput{})
	pulumi.RegisterOutputType(SystemAccprofileFwgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(SystemAccprofileLoggrpPermissionOutput{})
	pulumi.RegisterOutputType(SystemAccprofileLoggrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(SystemAccprofileNetgrpPermissionOutput{})
	pulumi.RegisterOutputType(SystemAccprofileNetgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(SystemAccprofileSysgrpPermissionOutput{})
	pulumi.RegisterOutputType(SystemAccprofileSysgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(SystemAccprofileUtmgrpPermissionOutput{})
	pulumi.RegisterOutputType(SystemAccprofileUtmgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(SystemAcmeAccountOutput{})
	pulumi.RegisterOutputType(SystemAcmeAccountArrayOutput{})
	pulumi.RegisterOutputType(SystemAcmeInterfaceOutput{})
	pulumi.RegisterOutputType(SystemAcmeInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuestUsergroupOutput{})
	pulumi.RegisterOutputType(SystemAdminGuestUsergroupArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardWidgetOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardWidgetArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardWidgetFilterOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardWidgetFilterArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiGlobalMenuFavoriteOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiGlobalMenuFavoriteArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiNewFeatureAcknowledgeOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiNewFeatureAcknowledgeArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiVdomMenuFavoriteOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiVdomMenuFavoriteArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminLoginTimeOutput{})
	pulumi.RegisterOutputType(SystemAdminLoginTimeArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminVdomOutput{})
	pulumi.RegisterOutputType(SystemAdminVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemAlarmGroupOutput{})
	pulumi.RegisterOutputType(SystemAlarmGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemAlarmGroupFwPolicyViolationOutput{})
	pulumi.RegisterOutputType(SystemAlarmGroupFwPolicyViolationArrayOutput{})
	pulumi.RegisterOutputType(SystemApiuserSettingTrusthostOutput{})
	pulumi.RegisterOutputType(SystemApiuserSettingTrusthostArrayOutput{})
	pulumi.RegisterOutputType(SystemApiuserTrusthostOutput{})
	pulumi.RegisterOutputType(SystemApiuserTrusthostArrayOutput{})
	pulumi.RegisterOutputType(SystemApiuserVdomOutput{})
	pulumi.RegisterOutputType(SystemApiuserVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationactionEmailToOutput{})
	pulumi.RegisterOutputType(SystemAutomationactionEmailToArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationactionHeaderOutput{})
	pulumi.RegisterOutputType(SystemAutomationactionHeaderArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationactionHttpHeaderOutput{})
	pulumi.RegisterOutputType(SystemAutomationactionHttpHeaderArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationactionSdnConnectorOutput{})
	pulumi.RegisterOutputType(SystemAutomationactionSdnConnectorArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationdestinationDestinationOutput{})
	pulumi.RegisterOutputType(SystemAutomationdestinationDestinationArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationstitchActionOutput{})
	pulumi.RegisterOutputType(SystemAutomationstitchActionArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationstitchDestinationOutput{})
	pulumi.RegisterOutputType(SystemAutomationstitchDestinationArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationtriggerFieldOutput{})
	pulumi.RegisterOutputType(SystemAutomationtriggerFieldArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationtriggerLogidBlockOutput{})
	pulumi.RegisterOutputType(SystemAutomationtriggerLogidBlockArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationtriggerVdomOutput{})
	pulumi.RegisterOutputType(SystemAutomationtriggerVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemCentralmanagementServerListOutput{})
	pulumi.RegisterOutputType(SystemCentralmanagementServerListArrayOutput{})
	pulumi.RegisterOutputType(SystemClustersyncDownIntfsBeforeSessSyncOutput{})
	pulumi.RegisterOutputType(SystemClustersyncDownIntfsBeforeSessSyncArrayOutput{})
	pulumi.RegisterOutputType(SystemClustersyncSessionSyncFilterOutput{})
	pulumi.RegisterOutputType(SystemClustersyncSessionSyncFilterPtrOutput{})
	pulumi.RegisterOutputType(SystemClustersyncSessionSyncFilterCustomServiceOutput{})
	pulumi.RegisterOutputType(SystemClustersyncSessionSyncFilterCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(SystemClustersyncSyncvdOutput{})
	pulumi.RegisterOutputType(SystemClustersyncSyncvdArrayOutput{})
	pulumi.RegisterOutputType(SystemCsfFabricConnectorOutput{})
	pulumi.RegisterOutputType(SystemCsfFabricConnectorArrayOutput{})
	pulumi.RegisterOutputType(SystemCsfFabricDeviceOutput{})
	pulumi.RegisterOutputType(SystemCsfFabricDeviceArrayOutput{})
	pulumi.RegisterOutputType(SystemCsfTrustedListOutput{})
	pulumi.RegisterOutputType(SystemCsfTrustedListArrayOutput{})
	pulumi.RegisterOutputType(SystemDdnsDdnsServerAddrOutput{})
	pulumi.RegisterOutputType(SystemDdnsDdnsServerAddrArrayOutput{})
	pulumi.RegisterOutputType(SystemDdnsMonitorInterfaceOutput{})
	pulumi.RegisterOutputType(SystemDdnsMonitorInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemDnsDomainOutput{})
	pulumi.RegisterOutputType(SystemDnsDomainArrayOutput{})
	pulumi.RegisterOutputType(SystemDnsServerHostnameOutput{})
	pulumi.RegisterOutputType(SystemDnsServerHostnameArrayOutput{})
	pulumi.RegisterOutputType(SystemDnsdatabaseDnsEntryOutput{})
	pulumi.RegisterOutputType(SystemDnsdatabaseDnsEntryArrayOutput{})
	pulumi.RegisterOutputType(SystemFederatedupgradeNodeListOutput{})
	pulumi.RegisterOutputType(SystemFederatedupgradeNodeListArrayOutput{})
	pulumi.RegisterOutputType(SystemGeoipoverrideIp6RangeOutput{})
	pulumi.RegisterOutputType(SystemGeoipoverrideIp6RangeArrayOutput{})
	pulumi.RegisterOutputType(SystemGeoipoverrideIpRangeOutput{})
	pulumi.RegisterOutputType(SystemGeoipoverrideIpRangeArrayOutput{})
	pulumi.RegisterOutputType(SystemHaHaMgmtInterfaceOutput{})
	pulumi.RegisterOutputType(SystemHaHaMgmtInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemHaSecondaryVclusterOutput{})
	pulumi.RegisterOutputType(SystemHaSecondaryVclusterPtrOutput{})
	pulumi.RegisterOutputType(SystemHaUnicastPeerOutput{})
	pulumi.RegisterOutputType(SystemHaUnicastPeerArrayOutput{})
	pulumi.RegisterOutputType(SystemHaVclusterOutput{})
	pulumi.RegisterOutputType(SystemHaVclusterArrayOutput{})
	pulumi.RegisterOutputType(SystemHaVclusterVdomOutput{})
	pulumi.RegisterOutputType(SystemHaVclusterVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup14Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup14PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup15Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup15PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup16Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup16PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup17Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup17PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup18Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup18PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup19Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup19PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup1Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup1PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup20Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup20PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup21Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup21PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup27Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup27PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup28Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup28PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup29Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup29PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup2Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup2PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup30Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup30PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup31Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup31PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup32Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup32PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup5Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup5PtrOutput{})
	pulumi.RegisterOutputType(SystemInterfaceClientOptionOutput{})
	pulumi.RegisterOutputType(SystemInterfaceClientOptionArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceDhcpSnoopingServerListOutput{})
	pulumi.RegisterOutputType(SystemInterfaceDhcpSnoopingServerListArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(SystemInterfaceFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Output{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6PtrOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Dhcp6IapdListOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Dhcp6IapdListArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6DelegatedPrefixListOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6ExtraAddrOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6ExtraAddrArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6PrefixListOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6PrefixListArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6PrefixListDnsslOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Vrrp6Output{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Vrrp6ArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceManagedDeviceOutput{})
	pulumi.RegisterOutputType(SystemInterfaceManagedDeviceArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceMemberOutput{})
	pulumi.RegisterOutputType(SystemInterfaceMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceSecondaryipOutput{})
	pulumi.RegisterOutputType(SystemInterfaceSecondaryipArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceSecurityGroupOutput{})
	pulumi.RegisterOutputType(SystemInterfaceSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceTaggingOutput{})
	pulumi.RegisterOutputType(SystemInterfaceTaggingArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceTaggingTagOutput{})
	pulumi.RegisterOutputType(SystemInterfaceTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceVrrpOutput{})
	pulumi.RegisterOutputType(SystemInterfaceVrrpArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceVrrpProxyArpOutput{})
	pulumi.RegisterOutputType(SystemInterfaceVrrpProxyArpArrayOutput{})
	pulumi.RegisterOutputType(SystemIpamPoolOutput{})
	pulumi.RegisterOutputType(SystemIpamPoolArrayOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleArrayOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleDeviceOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleDeviceArrayOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleInterfaceOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemIpamRulePoolOutput{})
	pulumi.RegisterOutputType(SystemIpamRulePoolArrayOutput{})
	pulumi.RegisterOutputType(SystemIpsecaggregateMemberOutput{})
	pulumi.RegisterOutputType(SystemIpsecaggregateMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemLinkmonitorRouteOutput{})
	pulumi.RegisterOutputType(SystemLinkmonitorRouteArrayOutput{})
	pulumi.RegisterOutputType(SystemLinkmonitorServerOutput{})
	pulumi.RegisterOutputType(SystemLinkmonitorServerArrayOutput{})
	pulumi.RegisterOutputType(SystemLinkmonitorServerListOutput{})
	pulumi.RegisterOutputType(SystemLinkmonitorServerListArrayOutput{})
	pulumi.RegisterOutputType(SystemMobiletunnelNetworkOutput{})
	pulumi.RegisterOutputType(SystemMobiletunnelNetworkArrayOutput{})
	pulumi.RegisterOutputType(SystemNat64SecondaryPrefixOutput{})
	pulumi.RegisterOutputType(SystemNat64SecondaryPrefixArrayOutput{})
	pulumi.RegisterOutputType(SystemNdproxyMemberOutput{})
	pulumi.RegisterOutputType(SystemNdproxyMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemNpuPriorityProtocolOutput{})
	pulumi.RegisterOutputType(SystemNpuPriorityProtocolPtrOutput{})
	pulumi.RegisterOutputType(SystemNtpInterfaceOutput{})
	pulumi.RegisterOutputType(SystemNtpInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemNtpNtpserverOutput{})
	pulumi.RegisterOutputType(SystemNtpNtpserverArrayOutput{})
	pulumi.RegisterOutputType(SystemObjecttaggingTagOutput{})
	pulumi.RegisterOutputType(SystemObjecttaggingTagArrayOutput{})
	pulumi.RegisterOutputType(SystemPtpServerInterfaceOutput{})
	pulumi.RegisterOutputType(SystemPtpServerInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupAdminOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupAdminArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupAlertmailOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupAlertmailArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupAuthOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupAuthArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupAutomationOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupAutomationArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupCustomMessageOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupCustomMessageArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupDeviceDetectionPortalOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupDeviceDetectionPortalArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupEcOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupEcArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupFortiguardWfOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupFortiguardWfArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupFtpOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupFtpArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupHttpOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupHttpArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupIcapOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupIcapArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupMailOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupMailArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupNacQuarOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupNacQuarArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupNntpOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupNntpArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupSpamOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupSpamArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupSslvpnOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupSslvpnArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupTrafficQuotaOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupTrafficQuotaArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupUtmOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupUtmArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupWebproxyOutput{})
	pulumi.RegisterOutputType(SystemReplacemsggroupWebproxyArrayOutput{})
	pulumi.RegisterOutputType(SystemSamlServiceProviderOutput{})
	pulumi.RegisterOutputType(SystemSamlServiceProviderArrayOutput{})
	pulumi.RegisterOutputType(SystemSamlServiceProviderAssertionAttributeOutput{})
	pulumi.RegisterOutputType(SystemSamlServiceProviderAssertionAttributeArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorExternalAccountListOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorExternalAccountListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorExternalAccountListRegionListOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorExternalAccountListRegionListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorExternalIpOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorExternalIpArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorForwardingRuleOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorGcpProjectListOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorGcpProjectListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorGcpProjectListGcpZoneListOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorGcpProjectListGcpZoneListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorNicOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorNicArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorNicIpOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorNicIpArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorRouteOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorRouteArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorRouteTableOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorRouteTableArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorRouteTableRouteOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorServerListOutput{})
	pulumi.RegisterOutputType(SystemSdnconnectorServerListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstaddr6Output{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstaddrOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstaddrArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstintfOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstintfArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationServiceOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationServiceArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationServiceIdOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationServiceIdArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcaddr6Output{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcaddrOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcaddrArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcintfOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcintfArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(SystemSdwanFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckMemberOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckSlaOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckSlaArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanMemberOutput{})
	pulumi.RegisterOutputType(SystemSdwanMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanNeighborOutput{})
	pulumi.RegisterOutputType(SystemSdwanNeighborArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceDst6Output{})
	pulumi.RegisterOutputType(SystemSdwanServiceDst6ArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceDstOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceDstArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceGroupOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceHealthCheckOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInputDeviceOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInputZoneOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInputZoneArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlCategoryOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlGroupOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceNameOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServicePriorityMemberOutput{})
	pulumi.RegisterOutputType(SystemSdwanServicePriorityMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServicePriorityZoneOutput{})
	pulumi.RegisterOutputType(SystemSdwanServicePriorityZoneArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceSlaOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceSlaArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceSrc6Output{})
	pulumi.RegisterOutputType(SystemSdwanServiceSrc6ArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceSrcOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceSrcArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceUserOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceUserArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanZoneOutput{})
	pulumi.RegisterOutputType(SystemSdwanZoneArrayOutput{})
	pulumi.RegisterOutputType(SystemSessionttlPortOutput{})
	pulumi.RegisterOutputType(SystemSessionttlPortArrayOutput{})
	pulumi.RegisterOutputType(SystemSettingsGuiDefaultPolicyColumnOutput{})
	pulumi.RegisterOutputType(SystemSettingsGuiDefaultPolicyColumnArrayOutput{})
	pulumi.RegisterOutputType(SystemSpeedtestscheduleScheduleOutput{})
	pulumi.RegisterOutputType(SystemSpeedtestscheduleScheduleArrayOutput{})
	pulumi.RegisterOutputType(SystemSpeedtestserverHostOutput{})
	pulumi.RegisterOutputType(SystemSpeedtestserverHostArrayOutput{})
	pulumi.RegisterOutputType(SystemSsoadminVdomOutput{})
	pulumi.RegisterOutputType(SystemSsoadminVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemSsoforticloudadminVdomOutput{})
	pulumi.RegisterOutputType(SystemSsoforticloudadminVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemStandaloneclusterClusterPeerOutput{})
	pulumi.RegisterOutputType(SystemStandaloneclusterClusterPeerArrayOutput{})
	pulumi.RegisterOutputType(SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncOutput{})
	pulumi.RegisterOutputType(SystemStandaloneclusterClusterPeerDownIntfsBeforeSessSyncArrayOutput{})
	pulumi.RegisterOutputType(SystemStandaloneclusterClusterPeerSessionSyncFilterOutput{})
	pulumi.RegisterOutputType(SystemStandaloneclusterClusterPeerSessionSyncFilterPtrOutput{})
	pulumi.RegisterOutputType(SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceOutput{})
	pulumi.RegisterOutputType(SystemStandaloneclusterClusterPeerSessionSyncFilterCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(SystemStandaloneclusterClusterPeerSyncvdOutput{})
	pulumi.RegisterOutputType(SystemStandaloneclusterClusterPeerSyncvdArrayOutput{})
	pulumi.RegisterOutputType(SystemSwitchinterfaceMemberOutput{})
	pulumi.RegisterOutputType(SystemSwitchinterfaceMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemSwitchinterfaceSpanSourcePortOutput{})
	pulumi.RegisterOutputType(SystemSwitchinterfaceSpanSourcePortArrayOutput{})
	pulumi.RegisterOutputType(SystemVdomdnsServerHostnameOutput{})
	pulumi.RegisterOutputType(SystemVdomdnsServerHostnameArrayOutput{})
	pulumi.RegisterOutputType(SystemVdomexceptionVdomOutput{})
	pulumi.RegisterOutputType(SystemVdomexceptionVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualswitchPortOutput{})
	pulumi.RegisterOutputType(SystemVirtualswitchPortArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkHealthCheckOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkHealthCheckMemberOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkHealthCheckMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkHealthCheckSlaOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkHealthCheckSlaArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkMemberOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkNeighborOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkNeighborArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceDst6Output{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceDst6ArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceDstOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceDstArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceGroupOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInputDeviceOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceAppCtrlOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceAppCtrlArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceAppCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceCtrlOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceCtrlArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceCtrlGroupOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceIdOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceNameOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServicePriorityMemberOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServicePriorityMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceSlaOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceSlaArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceSrc6Output{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceSrc6ArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceSrcOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceSrcArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceUserOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkServiceUserArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkZoneOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkZoneArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwirepairMemberOutput{})
	pulumi.RegisterOutputType(SystemVirtualwirepairMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemVxlanRemoteIp6Output{})
	pulumi.RegisterOutputType(SystemVxlanRemoteIp6ArrayOutput{})
	pulumi.RegisterOutputType(SystemVxlanRemoteIpOutput{})
	pulumi.RegisterOutputType(SystemVxlanRemoteIpArrayOutput{})
	pulumi.RegisterOutputType(SystemZoneInterfaceOutput{})
	pulumi.RegisterOutputType(SystemZoneInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemZoneTaggingOutput{})
	pulumi.RegisterOutputType(SystemZoneTaggingArrayOutput{})
	pulumi.RegisterOutputType(SystemZoneTaggingTagOutput{})
	pulumi.RegisterOutputType(SystemZoneTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(Systemdhcp6ServerIpRangeOutput{})
	pulumi.RegisterOutputType(Systemdhcp6ServerIpRangeArrayOutput{})
	pulumi.RegisterOutputType(Systemdhcp6ServerPrefixRangeOutput{})
	pulumi.RegisterOutputType(Systemdhcp6ServerPrefixRangeArrayOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerExcludeRangeOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerExcludeRangeArrayOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerExcludeRangeVciStringOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerExcludeRangeVciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerIpRangeOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerIpRangeArrayOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerIpRangeVciStringOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerIpRangeVciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerOptionOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerOptionArrayOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerOptionVciStringOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerOptionVciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerReservedAddressOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerReservedAddressArrayOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerTftpServerOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerTftpServerArrayOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerVciStringOutput{})
	pulumi.RegisterOutputType(SystemdhcpServerVciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyGuestOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyGuestPtrOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyGuestVoiceSignalingOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyGuestVoiceSignalingPtrOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicySoftphoneOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicySoftphonePtrOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyStreamingVideoOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyStreamingVideoPtrOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyVideoConferencingOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyVideoConferencingPtrOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyVideoSignalingOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyVideoSignalingPtrOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyVoiceOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyVoicePtrOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyVoiceSignalingOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyVoiceSignalingPtrOutput{})
	pulumi.RegisterOutputType(SystemsnmpCommunityHostOutput{})
	pulumi.RegisterOutputType(SystemsnmpCommunityHostArrayOutput{})
	pulumi.RegisterOutputType(SystemsnmpCommunityHosts6Output{})
	pulumi.RegisterOutputType(SystemsnmpCommunityHosts6ArrayOutput{})
	pulumi.RegisterOutputType(SystemsnmpCommunityVdomOutput{})
	pulumi.RegisterOutputType(SystemsnmpCommunityVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemsnmpUserVdomOutput{})
	pulumi.RegisterOutputType(SystemsnmpUserVdomArrayOutput{})
	pulumi.RegisterOutputType(UserDeviceTaggingOutput{})
	pulumi.RegisterOutputType(UserDeviceTaggingArrayOutput{})
	pulumi.RegisterOutputType(UserDeviceTaggingTagOutput{})
	pulumi.RegisterOutputType(UserDeviceTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(UserDeviceaccesslistDeviceListOutput{})
	pulumi.RegisterOutputType(UserDeviceaccesslistDeviceListArrayOutput{})
	pulumi.RegisterOutputType(UserDevicegroupMemberOutput{})
	pulumi.RegisterOutputType(UserDevicegroupMemberArrayOutput{})
	pulumi.RegisterOutputType(UserDevicegroupTaggingOutput{})
	pulumi.RegisterOutputType(UserDevicegroupTaggingArrayOutput{})
	pulumi.RegisterOutputType(UserDevicegroupTaggingTagOutput{})
	pulumi.RegisterOutputType(UserDevicegroupTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(UserDomaincontrollerExtraServerOutput{})
	pulumi.RegisterOutputType(UserDomaincontrollerExtraServerArrayOutput{})
	pulumi.RegisterOutputType(UserExchangeKdcIpOutput{})
	pulumi.RegisterOutputType(UserExchangeKdcIpArrayOutput{})
	pulumi.RegisterOutputType(UserFssopollingAdgrpOutput{})
	pulumi.RegisterOutputType(UserFssopollingAdgrpArrayOutput{})
	pulumi.RegisterOutputType(UserGroupGuestOutput{})
	pulumi.RegisterOutputType(UserGroupGuestArrayOutput{})
	pulumi.RegisterOutputType(UserGroupMatchOutput{})
	pulumi.RegisterOutputType(UserGroupMatchArrayOutput{})
	pulumi.RegisterOutputType(UserGroupMemberOutput{})
	pulumi.RegisterOutputType(UserGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(UserNacpolicySwitchGroupOutput{})
	pulumi.RegisterOutputType(UserNacpolicySwitchGroupArrayOutput{})
	pulumi.RegisterOutputType(UserNacpolicySwitchScopeOutput{})
	pulumi.RegisterOutputType(UserNacpolicySwitchScopeArrayOutput{})
	pulumi.RegisterOutputType(UserPeergrpMemberOutput{})
	pulumi.RegisterOutputType(UserPeergrpMemberArrayOutput{})
	pulumi.RegisterOutputType(UserQuarantineTargetOutput{})
	pulumi.RegisterOutputType(UserQuarantineTargetArrayOutput{})
	pulumi.RegisterOutputType(UserQuarantineTargetMacOutput{})
	pulumi.RegisterOutputType(UserQuarantineTargetMacArrayOutput{})
	pulumi.RegisterOutputType(UserRadiusAccountingServerOutput{})
	pulumi.RegisterOutputType(UserRadiusAccountingServerArrayOutput{})
	pulumi.RegisterOutputType(UserRadiusClassOutput{})
	pulumi.RegisterOutputType(UserRadiusClassArrayOutput{})
	pulumi.RegisterOutputType(UserSecurityexemptlistRuleOutput{})
	pulumi.RegisterOutputType(UserSecurityexemptlistRuleArrayOutput{})
	pulumi.RegisterOutputType(UserSecurityexemptlistRuleDeviceOutput{})
	pulumi.RegisterOutputType(UserSecurityexemptlistRuleDeviceArrayOutput{})
	pulumi.RegisterOutputType(UserSecurityexemptlistRuleDstaddrOutput{})
	pulumi.RegisterOutputType(UserSecurityexemptlistRuleDstaddrArrayOutput{})
	pulumi.RegisterOutputType(UserSecurityexemptlistRuleServiceOutput{})
	pulumi.RegisterOutputType(UserSecurityexemptlistRuleServiceArrayOutput{})
	pulumi.RegisterOutputType(UserSecurityexemptlistRuleSrcaddrOutput{})
	pulumi.RegisterOutputType(UserSecurityexemptlistRuleSrcaddrArrayOutput{})
	pulumi.RegisterOutputType(UserSettingAuthPortOutput{})
	pulumi.RegisterOutputType(UserSettingAuthPortArrayOutput{})
}
