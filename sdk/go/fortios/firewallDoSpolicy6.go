// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPv6 DoS policies.
//
// ## Import
//
// # Firewall DosPolicy6 can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/firewallDoSpolicy6:FirewallDoSpolicy6 labelname {{policyid}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/firewallDoSpolicy6:FirewallDoSpolicy6 labelname {{policyid}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type FirewallDoSpolicy6 struct {
	pulumi.CustomResourceState

	// Anomaly name. The structure of `anomaly` block is documented below.
	Anomalies FirewallDoSpolicy6AnomalyArrayOutput `pulumi:"anomalies"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Destination address name from available addresses. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallDoSpolicy6DstaddrArrayOutput `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Incoming interface name from available interfaces.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Policy name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Policy ID.
	Policyid pulumi.IntOutput `pulumi:"policyid"`
	// Service object from available options. The structure of `service` block is documented below.
	Services FirewallDoSpolicy6ServiceArrayOutput `pulumi:"services"`
	// Source address name from available addresses. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallDoSpolicy6SrcaddrArrayOutput `pulumi:"srcaddrs"`
	// Enable/disable this policy. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallDoSpolicy6 registers a new resource with the given unique name, arguments, and options.
func NewFirewallDoSpolicy6(ctx *pulumi.Context,
	name string, args *FirewallDoSpolicy6Args, opts ...pulumi.ResourceOption) (*FirewallDoSpolicy6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dstaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Dstaddrs'")
	}
	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.Srcaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Srcaddrs'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallDoSpolicy6
	err := ctx.RegisterResource("fortios:index/firewallDoSpolicy6:FirewallDoSpolicy6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallDoSpolicy6 gets an existing FirewallDoSpolicy6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallDoSpolicy6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallDoSpolicy6State, opts ...pulumi.ResourceOption) (*FirewallDoSpolicy6, error) {
	var resource FirewallDoSpolicy6
	err := ctx.ReadResource("fortios:index/firewallDoSpolicy6:FirewallDoSpolicy6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallDoSpolicy6 resources.
type firewallDoSpolicy6State struct {
	// Anomaly name. The structure of `anomaly` block is documented below.
	Anomalies []FirewallDoSpolicy6Anomaly `pulumi:"anomalies"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Destination address name from available addresses. The structure of `dstaddr` block is documented below.
	Dstaddrs []FirewallDoSpolicy6Dstaddr `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Incoming interface name from available interfaces.
	Interface *string `pulumi:"interface"`
	// Policy name.
	Name *string `pulumi:"name"`
	// Policy ID.
	Policyid *int `pulumi:"policyid"`
	// Service object from available options. The structure of `service` block is documented below.
	Services []FirewallDoSpolicy6Service `pulumi:"services"`
	// Source address name from available addresses. The structure of `srcaddr` block is documented below.
	Srcaddrs []FirewallDoSpolicy6Srcaddr `pulumi:"srcaddrs"`
	// Enable/disable this policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallDoSpolicy6State struct {
	// Anomaly name. The structure of `anomaly` block is documented below.
	Anomalies FirewallDoSpolicy6AnomalyArrayInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Destination address name from available addresses. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallDoSpolicy6DstaddrArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Incoming interface name from available interfaces.
	Interface pulumi.StringPtrInput
	// Policy name.
	Name pulumi.StringPtrInput
	// Policy ID.
	Policyid pulumi.IntPtrInput
	// Service object from available options. The structure of `service` block is documented below.
	Services FirewallDoSpolicy6ServiceArrayInput
	// Source address name from available addresses. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallDoSpolicy6SrcaddrArrayInput
	// Enable/disable this policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallDoSpolicy6State) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallDoSpolicy6State)(nil)).Elem()
}

type firewallDoSpolicy6Args struct {
	// Anomaly name. The structure of `anomaly` block is documented below.
	Anomalies []FirewallDoSpolicy6Anomaly `pulumi:"anomalies"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Destination address name from available addresses. The structure of `dstaddr` block is documented below.
	Dstaddrs []FirewallDoSpolicy6Dstaddr `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Incoming interface name from available interfaces.
	Interface string `pulumi:"interface"`
	// Policy name.
	Name *string `pulumi:"name"`
	// Policy ID.
	Policyid *int `pulumi:"policyid"`
	// Service object from available options. The structure of `service` block is documented below.
	Services []FirewallDoSpolicy6Service `pulumi:"services"`
	// Source address name from available addresses. The structure of `srcaddr` block is documented below.
	Srcaddrs []FirewallDoSpolicy6Srcaddr `pulumi:"srcaddrs"`
	// Enable/disable this policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallDoSpolicy6 resource.
type FirewallDoSpolicy6Args struct {
	// Anomaly name. The structure of `anomaly` block is documented below.
	Anomalies FirewallDoSpolicy6AnomalyArrayInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Destination address name from available addresses. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallDoSpolicy6DstaddrArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Incoming interface name from available interfaces.
	Interface pulumi.StringInput
	// Policy name.
	Name pulumi.StringPtrInput
	// Policy ID.
	Policyid pulumi.IntPtrInput
	// Service object from available options. The structure of `service` block is documented below.
	Services FirewallDoSpolicy6ServiceArrayInput
	// Source address name from available addresses. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallDoSpolicy6SrcaddrArrayInput
	// Enable/disable this policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallDoSpolicy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallDoSpolicy6Args)(nil)).Elem()
}

type FirewallDoSpolicy6Input interface {
	pulumi.Input

	ToFirewallDoSpolicy6Output() FirewallDoSpolicy6Output
	ToFirewallDoSpolicy6OutputWithContext(ctx context.Context) FirewallDoSpolicy6Output
}

func (*FirewallDoSpolicy6) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallDoSpolicy6)(nil)).Elem()
}

func (i *FirewallDoSpolicy6) ToFirewallDoSpolicy6Output() FirewallDoSpolicy6Output {
	return i.ToFirewallDoSpolicy6OutputWithContext(context.Background())
}

func (i *FirewallDoSpolicy6) ToFirewallDoSpolicy6OutputWithContext(ctx context.Context) FirewallDoSpolicy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6Output)
}

// FirewallDoSpolicy6ArrayInput is an input type that accepts FirewallDoSpolicy6Array and FirewallDoSpolicy6ArrayOutput values.
// You can construct a concrete instance of `FirewallDoSpolicy6ArrayInput` via:
//
//	FirewallDoSpolicy6Array{ FirewallDoSpolicy6Args{...} }
type FirewallDoSpolicy6ArrayInput interface {
	pulumi.Input

	ToFirewallDoSpolicy6ArrayOutput() FirewallDoSpolicy6ArrayOutput
	ToFirewallDoSpolicy6ArrayOutputWithContext(context.Context) FirewallDoSpolicy6ArrayOutput
}

type FirewallDoSpolicy6Array []FirewallDoSpolicy6Input

func (FirewallDoSpolicy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallDoSpolicy6)(nil)).Elem()
}

func (i FirewallDoSpolicy6Array) ToFirewallDoSpolicy6ArrayOutput() FirewallDoSpolicy6ArrayOutput {
	return i.ToFirewallDoSpolicy6ArrayOutputWithContext(context.Background())
}

func (i FirewallDoSpolicy6Array) ToFirewallDoSpolicy6ArrayOutputWithContext(ctx context.Context) FirewallDoSpolicy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6ArrayOutput)
}

// FirewallDoSpolicy6MapInput is an input type that accepts FirewallDoSpolicy6Map and FirewallDoSpolicy6MapOutput values.
// You can construct a concrete instance of `FirewallDoSpolicy6MapInput` via:
//
//	FirewallDoSpolicy6Map{ "key": FirewallDoSpolicy6Args{...} }
type FirewallDoSpolicy6MapInput interface {
	pulumi.Input

	ToFirewallDoSpolicy6MapOutput() FirewallDoSpolicy6MapOutput
	ToFirewallDoSpolicy6MapOutputWithContext(context.Context) FirewallDoSpolicy6MapOutput
}

type FirewallDoSpolicy6Map map[string]FirewallDoSpolicy6Input

func (FirewallDoSpolicy6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallDoSpolicy6)(nil)).Elem()
}

func (i FirewallDoSpolicy6Map) ToFirewallDoSpolicy6MapOutput() FirewallDoSpolicy6MapOutput {
	return i.ToFirewallDoSpolicy6MapOutputWithContext(context.Background())
}

func (i FirewallDoSpolicy6Map) ToFirewallDoSpolicy6MapOutputWithContext(ctx context.Context) FirewallDoSpolicy6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6MapOutput)
}

type FirewallDoSpolicy6Output struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallDoSpolicy6)(nil)).Elem()
}

func (o FirewallDoSpolicy6Output) ToFirewallDoSpolicy6Output() FirewallDoSpolicy6Output {
	return o
}

func (o FirewallDoSpolicy6Output) ToFirewallDoSpolicy6OutputWithContext(ctx context.Context) FirewallDoSpolicy6Output {
	return o
}

// Anomaly name. The structure of `anomaly` block is documented below.
func (o FirewallDoSpolicy6Output) Anomalies() FirewallDoSpolicy6AnomalyArrayOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) FirewallDoSpolicy6AnomalyArrayOutput { return v.Anomalies }).(FirewallDoSpolicy6AnomalyArrayOutput)
}

// Comment.
func (o FirewallDoSpolicy6Output) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// Destination address name from available addresses. The structure of `dstaddr` block is documented below.
func (o FirewallDoSpolicy6Output) Dstaddrs() FirewallDoSpolicy6DstaddrArrayOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) FirewallDoSpolicy6DstaddrArrayOutput { return v.Dstaddrs }).(FirewallDoSpolicy6DstaddrArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o FirewallDoSpolicy6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Incoming interface name from available interfaces.
func (o FirewallDoSpolicy6Output) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Policy name.
func (o FirewallDoSpolicy6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Policy ID.
func (o FirewallDoSpolicy6Output) Policyid() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) pulumi.IntOutput { return v.Policyid }).(pulumi.IntOutput)
}

// Service object from available options. The structure of `service` block is documented below.
func (o FirewallDoSpolicy6Output) Services() FirewallDoSpolicy6ServiceArrayOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) FirewallDoSpolicy6ServiceArrayOutput { return v.Services }).(FirewallDoSpolicy6ServiceArrayOutput)
}

// Source address name from available addresses. The structure of `srcaddr` block is documented below.
func (o FirewallDoSpolicy6Output) Srcaddrs() FirewallDoSpolicy6SrcaddrArrayOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) FirewallDoSpolicy6SrcaddrArrayOutput { return v.Srcaddrs }).(FirewallDoSpolicy6SrcaddrArrayOutput)
}

// Enable/disable this policy. Valid values: `enable`, `disable`.
func (o FirewallDoSpolicy6Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FirewallDoSpolicy6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallDoSpolicy6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallDoSpolicy6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallDoSpolicy6)(nil)).Elem()
}

func (o FirewallDoSpolicy6ArrayOutput) ToFirewallDoSpolicy6ArrayOutput() FirewallDoSpolicy6ArrayOutput {
	return o
}

func (o FirewallDoSpolicy6ArrayOutput) ToFirewallDoSpolicy6ArrayOutputWithContext(ctx context.Context) FirewallDoSpolicy6ArrayOutput {
	return o
}

func (o FirewallDoSpolicy6ArrayOutput) Index(i pulumi.IntInput) FirewallDoSpolicy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallDoSpolicy6 {
		return vs[0].([]*FirewallDoSpolicy6)[vs[1].(int)]
	}).(FirewallDoSpolicy6Output)
}

type FirewallDoSpolicy6MapOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallDoSpolicy6)(nil)).Elem()
}

func (o FirewallDoSpolicy6MapOutput) ToFirewallDoSpolicy6MapOutput() FirewallDoSpolicy6MapOutput {
	return o
}

func (o FirewallDoSpolicy6MapOutput) ToFirewallDoSpolicy6MapOutputWithContext(ctx context.Context) FirewallDoSpolicy6MapOutput {
	return o
}

func (o FirewallDoSpolicy6MapOutput) MapIndex(k pulumi.StringInput) FirewallDoSpolicy6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallDoSpolicy6 {
		return vs[0].(map[string]*FirewallDoSpolicy6)[vs[1].(string)]
	}).(FirewallDoSpolicy6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6Input)(nil)).Elem(), &FirewallDoSpolicy6{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6ArrayInput)(nil)).Elem(), FirewallDoSpolicy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6MapInput)(nil)).Elem(), FirewallDoSpolicy6Map{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6Output{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6MapOutput{})
}
