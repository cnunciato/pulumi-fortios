// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure virtual pool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSwitchcontrollerVirtualportpool(ctx, "trname", &fortios.SwitchcontrollerVirtualportpoolArgs{
//				Description: pulumi.String("virtualport"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # SwitchController VirtualPortPool can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/switchcontrollerVirtualportpool:SwitchcontrollerVirtualportpool labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/switchcontrollerVirtualportpool:SwitchcontrollerVirtualportpool labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SwitchcontrollerVirtualportpool struct {
	pulumi.CustomResourceState

	// Virtual switch pool description.
	Description pulumi.StringOutput `pulumi:"description"`
	// Virtual switch pool name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchcontrollerVirtualportpool registers a new resource with the given unique name, arguments, and options.
func NewSwitchcontrollerVirtualportpool(ctx *pulumi.Context,
	name string, args *SwitchcontrollerVirtualportpoolArgs, opts ...pulumi.ResourceOption) (*SwitchcontrollerVirtualportpool, error) {
	if args == nil {
		args = &SwitchcontrollerVirtualportpoolArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchcontrollerVirtualportpool
	err := ctx.RegisterResource("fortios:index/switchcontrollerVirtualportpool:SwitchcontrollerVirtualportpool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchcontrollerVirtualportpool gets an existing SwitchcontrollerVirtualportpool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchcontrollerVirtualportpool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchcontrollerVirtualportpoolState, opts ...pulumi.ResourceOption) (*SwitchcontrollerVirtualportpool, error) {
	var resource SwitchcontrollerVirtualportpool
	err := ctx.ReadResource("fortios:index/switchcontrollerVirtualportpool:SwitchcontrollerVirtualportpool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchcontrollerVirtualportpool resources.
type switchcontrollerVirtualportpoolState struct {
	// Virtual switch pool description.
	Description *string `pulumi:"description"`
	// Virtual switch pool name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchcontrollerVirtualportpoolState struct {
	// Virtual switch pool description.
	Description pulumi.StringPtrInput
	// Virtual switch pool name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchcontrollerVirtualportpoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchcontrollerVirtualportpoolState)(nil)).Elem()
}

type switchcontrollerVirtualportpoolArgs struct {
	// Virtual switch pool description.
	Description *string `pulumi:"description"`
	// Virtual switch pool name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchcontrollerVirtualportpool resource.
type SwitchcontrollerVirtualportpoolArgs struct {
	// Virtual switch pool description.
	Description pulumi.StringPtrInput
	// Virtual switch pool name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchcontrollerVirtualportpoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchcontrollerVirtualportpoolArgs)(nil)).Elem()
}

type SwitchcontrollerVirtualportpoolInput interface {
	pulumi.Input

	ToSwitchcontrollerVirtualportpoolOutput() SwitchcontrollerVirtualportpoolOutput
	ToSwitchcontrollerVirtualportpoolOutputWithContext(ctx context.Context) SwitchcontrollerVirtualportpoolOutput
}

func (*SwitchcontrollerVirtualportpool) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerVirtualportpool)(nil)).Elem()
}

func (i *SwitchcontrollerVirtualportpool) ToSwitchcontrollerVirtualportpoolOutput() SwitchcontrollerVirtualportpoolOutput {
	return i.ToSwitchcontrollerVirtualportpoolOutputWithContext(context.Background())
}

func (i *SwitchcontrollerVirtualportpool) ToSwitchcontrollerVirtualportpoolOutputWithContext(ctx context.Context) SwitchcontrollerVirtualportpoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVirtualportpoolOutput)
}

// SwitchcontrollerVirtualportpoolArrayInput is an input type that accepts SwitchcontrollerVirtualportpoolArray and SwitchcontrollerVirtualportpoolArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerVirtualportpoolArrayInput` via:
//
//	SwitchcontrollerVirtualportpoolArray{ SwitchcontrollerVirtualportpoolArgs{...} }
type SwitchcontrollerVirtualportpoolArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerVirtualportpoolArrayOutput() SwitchcontrollerVirtualportpoolArrayOutput
	ToSwitchcontrollerVirtualportpoolArrayOutputWithContext(context.Context) SwitchcontrollerVirtualportpoolArrayOutput
}

type SwitchcontrollerVirtualportpoolArray []SwitchcontrollerVirtualportpoolInput

func (SwitchcontrollerVirtualportpoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchcontrollerVirtualportpool)(nil)).Elem()
}

func (i SwitchcontrollerVirtualportpoolArray) ToSwitchcontrollerVirtualportpoolArrayOutput() SwitchcontrollerVirtualportpoolArrayOutput {
	return i.ToSwitchcontrollerVirtualportpoolArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerVirtualportpoolArray) ToSwitchcontrollerVirtualportpoolArrayOutputWithContext(ctx context.Context) SwitchcontrollerVirtualportpoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVirtualportpoolArrayOutput)
}

// SwitchcontrollerVirtualportpoolMapInput is an input type that accepts SwitchcontrollerVirtualportpoolMap and SwitchcontrollerVirtualportpoolMapOutput values.
// You can construct a concrete instance of `SwitchcontrollerVirtualportpoolMapInput` via:
//
//	SwitchcontrollerVirtualportpoolMap{ "key": SwitchcontrollerVirtualportpoolArgs{...} }
type SwitchcontrollerVirtualportpoolMapInput interface {
	pulumi.Input

	ToSwitchcontrollerVirtualportpoolMapOutput() SwitchcontrollerVirtualportpoolMapOutput
	ToSwitchcontrollerVirtualportpoolMapOutputWithContext(context.Context) SwitchcontrollerVirtualportpoolMapOutput
}

type SwitchcontrollerVirtualportpoolMap map[string]SwitchcontrollerVirtualportpoolInput

func (SwitchcontrollerVirtualportpoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchcontrollerVirtualportpool)(nil)).Elem()
}

func (i SwitchcontrollerVirtualportpoolMap) ToSwitchcontrollerVirtualportpoolMapOutput() SwitchcontrollerVirtualportpoolMapOutput {
	return i.ToSwitchcontrollerVirtualportpoolMapOutputWithContext(context.Background())
}

func (i SwitchcontrollerVirtualportpoolMap) ToSwitchcontrollerVirtualportpoolMapOutputWithContext(ctx context.Context) SwitchcontrollerVirtualportpoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerVirtualportpoolMapOutput)
}

type SwitchcontrollerVirtualportpoolOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVirtualportpoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerVirtualportpool)(nil)).Elem()
}

func (o SwitchcontrollerVirtualportpoolOutput) ToSwitchcontrollerVirtualportpoolOutput() SwitchcontrollerVirtualportpoolOutput {
	return o
}

func (o SwitchcontrollerVirtualportpoolOutput) ToSwitchcontrollerVirtualportpoolOutputWithContext(ctx context.Context) SwitchcontrollerVirtualportpoolOutput {
	return o
}

// Virtual switch pool description.
func (o SwitchcontrollerVirtualportpoolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerVirtualportpool) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Virtual switch pool name.
func (o SwitchcontrollerVirtualportpoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerVirtualportpool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SwitchcontrollerVirtualportpoolOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerVirtualportpool) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerVirtualportpoolArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVirtualportpoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchcontrollerVirtualportpool)(nil)).Elem()
}

func (o SwitchcontrollerVirtualportpoolArrayOutput) ToSwitchcontrollerVirtualportpoolArrayOutput() SwitchcontrollerVirtualportpoolArrayOutput {
	return o
}

func (o SwitchcontrollerVirtualportpoolArrayOutput) ToSwitchcontrollerVirtualportpoolArrayOutputWithContext(ctx context.Context) SwitchcontrollerVirtualportpoolArrayOutput {
	return o
}

func (o SwitchcontrollerVirtualportpoolArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerVirtualportpoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchcontrollerVirtualportpool {
		return vs[0].([]*SwitchcontrollerVirtualportpool)[vs[1].(int)]
	}).(SwitchcontrollerVirtualportpoolOutput)
}

type SwitchcontrollerVirtualportpoolMapOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerVirtualportpoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchcontrollerVirtualportpool)(nil)).Elem()
}

func (o SwitchcontrollerVirtualportpoolMapOutput) ToSwitchcontrollerVirtualportpoolMapOutput() SwitchcontrollerVirtualportpoolMapOutput {
	return o
}

func (o SwitchcontrollerVirtualportpoolMapOutput) ToSwitchcontrollerVirtualportpoolMapOutputWithContext(ctx context.Context) SwitchcontrollerVirtualportpoolMapOutput {
	return o
}

func (o SwitchcontrollerVirtualportpoolMapOutput) MapIndex(k pulumi.StringInput) SwitchcontrollerVirtualportpoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchcontrollerVirtualportpool {
		return vs[0].(map[string]*SwitchcontrollerVirtualportpool)[vs[1].(string)]
	}).(SwitchcontrollerVirtualportpoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVirtualportpoolInput)(nil)).Elem(), &SwitchcontrollerVirtualportpool{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVirtualportpoolArrayInput)(nil)).Elem(), SwitchcontrollerVirtualportpoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerVirtualportpoolMapInput)(nil)).Elem(), SwitchcontrollerVirtualportpoolMap{})
	pulumi.RegisterOutputType(SwitchcontrollerVirtualportpoolOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerVirtualportpoolArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerVirtualportpoolMapOutput{})
}
