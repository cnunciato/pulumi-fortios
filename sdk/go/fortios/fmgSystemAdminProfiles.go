// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource supports Create/Read/Update/Delete admin profiles for FortiManager
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewFmgSystemAdminProfiles(ctx, "test1", &fortios.FmgSystemAdminProfilesArgs{
//				AdomPolicyPackages:                  pulumi.String("read"),
//				AdomSwitch:                          pulumi.String("read"),
//				Assignment:                          pulumi.String("read"),
//				ConfigRetrieve:                      pulumi.String("read"),
//				ConfigRevert:                        pulumi.String("read"),
//				ConsistencyCheck:                    pulumi.String("read-write"),
//				DeployManagement:                    pulumi.String("read"),
//				Description:                         pulumi.String("11"),
//				DeviceAp:                            pulumi.String("none"),
//				DeviceConfig:                        pulumi.String("read"),
//				DeviceForticlient:                   pulumi.String("read"),
//				DeviceFortiswitch:                   pulumi.String("read"),
//				DeviceManager:                       pulumi.String("read-write"),
//				DeviceOperation:                     pulumi.String("read"),
//				DeviceProfile:                       pulumi.String("read"),
//				DeviceRevisionDeletion:              pulumi.String("read"),
//				DeviceWanLinkLoadBalance:            pulumi.String("read"),
//				FortiguardCenter:                    pulumi.String("read"),
//				FortiguardCenterAdvanced:            pulumi.String("read"),
//				FortiguardCenterFirmwareManagerment: pulumi.String("read"),
//				FortiguardCenterLicensing:           pulumi.String("read"),
//				GlobalPolicyPackages:                pulumi.String("read-write"),
//				ImportPolicyPackages:                pulumi.String("read"),
//				IntfMapping:                         pulumi.String("read-write"),
//				LogViewer:                           pulumi.String("read"),
//				PolicyObjects:                       pulumi.String("read-write"),
//				Profileid:                           pulumi.String("terraform-test1"),
//				SetInstallTargets:                   pulumi.String("read-write"),
//				SystemSetting:                       pulumi.String("read"),
//				TerminalAccess:                      pulumi.String("read"),
//				VpnManager:                          pulumi.String("read"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FmgSystemAdminProfiles struct {
	pulumi.CustomResourceState

	// Adom policy packages.
	AdomPolicyPackages pulumi.StringPtrOutput `pulumi:"adomPolicyPackages"`
	// Administrator Domain.
	AdomSwitch pulumi.StringPtrOutput `pulumi:"adomSwitch"`
	// Assignment Permission.
	Assignment pulumi.StringPtrOutput `pulumi:"assignment"`
	// Configuration Retrieve.
	ConfigRetrieve pulumi.StringPtrOutput `pulumi:"configRetrieve"`
	// Revert Configuration from Revision History.
	ConfigRevert pulumi.StringPtrOutput `pulumi:"configRevert"`
	// Consistency check.
	ConsistencyCheck pulumi.StringPtrOutput `pulumi:"consistencyCheck"`
	// Install to devices.
	DeployManagement pulumi.StringPtrOutput `pulumi:"deployManagement"`
	// Description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Manage AP.
	DeviceAp pulumi.StringPtrOutput `pulumi:"deviceAp"`
	// Manage device configurations.
	DeviceConfig pulumi.StringPtrOutput `pulumi:"deviceConfig"`
	// Manage FortiClient.
	DeviceForticlient pulumi.StringPtrOutput `pulumi:"deviceForticlient"`
	// Manage FortiSwitch.
	DeviceFortiswitch pulumi.StringPtrOutput `pulumi:"deviceFortiswitch"`
	// Device Manager.
	DeviceManager pulumi.StringPtrOutput `pulumi:"deviceManager"`
	// Device add/delete/edit.
	DeviceOperation pulumi.StringPtrOutput `pulumi:"deviceOperation"`
	// Device profile permission.
	DeviceProfile pulumi.StringPtrOutput `pulumi:"deviceProfile"`
	// Delete device revision.
	DeviceRevisionDeletion pulumi.StringPtrOutput `pulumi:"deviceRevisionDeletion"`
	// Manage WAN link load balance.
	DeviceWanLinkLoadBalance pulumi.StringPtrOutput `pulumi:"deviceWanLinkLoadBalance"`
	// FortiGuard Center.
	FortiguardCenter pulumi.StringPtrOutput `pulumi:"fortiguardCenter"`
	// FortiGuard Center Advanced.
	FortiguardCenterAdvanced pulumi.StringPtrOutput `pulumi:"fortiguardCenterAdvanced"`
	// FortiGuard Center Firmware Managerment.
	FortiguardCenterFirmwareManagerment pulumi.StringPtrOutput `pulumi:"fortiguardCenterFirmwareManagerment"`
	// FortiGuard Center Licensing.
	FortiguardCenterLicensing pulumi.StringPtrOutput `pulumi:"fortiguardCenterLicensing"`
	// Global policy packages.
	GlobalPolicyPackages pulumi.StringPtrOutput `pulumi:"globalPolicyPackages"`
	// Import Policy Package.
	ImportPolicyPackages pulumi.StringPtrOutput `pulumi:"importPolicyPackages"`
	// Interface Mapping.
	IntfMapping pulumi.StringPtrOutput `pulumi:"intfMapping"`
	// Log Viewer.
	LogViewer pulumi.StringPtrOutput `pulumi:"logViewer"`
	// Policy objects permission.
	PolicyObjects pulumi.StringPtrOutput `pulumi:"policyObjects"`
	// Profile name.
	Profileid pulumi.StringOutput `pulumi:"profileid"`
	// Edit installation targets.
	SetInstallTargets pulumi.StringPtrOutput `pulumi:"setInstallTargets"`
	// System Setting.
	SystemSetting pulumi.StringPtrOutput `pulumi:"systemSetting"`
	// Terminal access.
	TerminalAccess pulumi.StringPtrOutput `pulumi:"terminalAccess"`
	// VPN Manager.
	VpnManager pulumi.StringPtrOutput `pulumi:"vpnManager"`
}

// NewFmgSystemAdminProfiles registers a new resource with the given unique name, arguments, and options.
func NewFmgSystemAdminProfiles(ctx *pulumi.Context,
	name string, args *FmgSystemAdminProfilesArgs, opts ...pulumi.ResourceOption) (*FmgSystemAdminProfiles, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Profileid == nil {
		return nil, errors.New("invalid value for required argument 'Profileid'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FmgSystemAdminProfiles
	err := ctx.RegisterResource("fortios:index/fmgSystemAdminProfiles:FmgSystemAdminProfiles", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFmgSystemAdminProfiles gets an existing FmgSystemAdminProfiles resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFmgSystemAdminProfiles(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FmgSystemAdminProfilesState, opts ...pulumi.ResourceOption) (*FmgSystemAdminProfiles, error) {
	var resource FmgSystemAdminProfiles
	err := ctx.ReadResource("fortios:index/fmgSystemAdminProfiles:FmgSystemAdminProfiles", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FmgSystemAdminProfiles resources.
type fmgSystemAdminProfilesState struct {
	// Adom policy packages.
	AdomPolicyPackages *string `pulumi:"adomPolicyPackages"`
	// Administrator Domain.
	AdomSwitch *string `pulumi:"adomSwitch"`
	// Assignment Permission.
	Assignment *string `pulumi:"assignment"`
	// Configuration Retrieve.
	ConfigRetrieve *string `pulumi:"configRetrieve"`
	// Revert Configuration from Revision History.
	ConfigRevert *string `pulumi:"configRevert"`
	// Consistency check.
	ConsistencyCheck *string `pulumi:"consistencyCheck"`
	// Install to devices.
	DeployManagement *string `pulumi:"deployManagement"`
	// Description.
	Description *string `pulumi:"description"`
	// Manage AP.
	DeviceAp *string `pulumi:"deviceAp"`
	// Manage device configurations.
	DeviceConfig *string `pulumi:"deviceConfig"`
	// Manage FortiClient.
	DeviceForticlient *string `pulumi:"deviceForticlient"`
	// Manage FortiSwitch.
	DeviceFortiswitch *string `pulumi:"deviceFortiswitch"`
	// Device Manager.
	DeviceManager *string `pulumi:"deviceManager"`
	// Device add/delete/edit.
	DeviceOperation *string `pulumi:"deviceOperation"`
	// Device profile permission.
	DeviceProfile *string `pulumi:"deviceProfile"`
	// Delete device revision.
	DeviceRevisionDeletion *string `pulumi:"deviceRevisionDeletion"`
	// Manage WAN link load balance.
	DeviceWanLinkLoadBalance *string `pulumi:"deviceWanLinkLoadBalance"`
	// FortiGuard Center.
	FortiguardCenter *string `pulumi:"fortiguardCenter"`
	// FortiGuard Center Advanced.
	FortiguardCenterAdvanced *string `pulumi:"fortiguardCenterAdvanced"`
	// FortiGuard Center Firmware Managerment.
	FortiguardCenterFirmwareManagerment *string `pulumi:"fortiguardCenterFirmwareManagerment"`
	// FortiGuard Center Licensing.
	FortiguardCenterLicensing *string `pulumi:"fortiguardCenterLicensing"`
	// Global policy packages.
	GlobalPolicyPackages *string `pulumi:"globalPolicyPackages"`
	// Import Policy Package.
	ImportPolicyPackages *string `pulumi:"importPolicyPackages"`
	// Interface Mapping.
	IntfMapping *string `pulumi:"intfMapping"`
	// Log Viewer.
	LogViewer *string `pulumi:"logViewer"`
	// Policy objects permission.
	PolicyObjects *string `pulumi:"policyObjects"`
	// Profile name.
	Profileid *string `pulumi:"profileid"`
	// Edit installation targets.
	SetInstallTargets *string `pulumi:"setInstallTargets"`
	// System Setting.
	SystemSetting *string `pulumi:"systemSetting"`
	// Terminal access.
	TerminalAccess *string `pulumi:"terminalAccess"`
	// VPN Manager.
	VpnManager *string `pulumi:"vpnManager"`
}

type FmgSystemAdminProfilesState struct {
	// Adom policy packages.
	AdomPolicyPackages pulumi.StringPtrInput
	// Administrator Domain.
	AdomSwitch pulumi.StringPtrInput
	// Assignment Permission.
	Assignment pulumi.StringPtrInput
	// Configuration Retrieve.
	ConfigRetrieve pulumi.StringPtrInput
	// Revert Configuration from Revision History.
	ConfigRevert pulumi.StringPtrInput
	// Consistency check.
	ConsistencyCheck pulumi.StringPtrInput
	// Install to devices.
	DeployManagement pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// Manage AP.
	DeviceAp pulumi.StringPtrInput
	// Manage device configurations.
	DeviceConfig pulumi.StringPtrInput
	// Manage FortiClient.
	DeviceForticlient pulumi.StringPtrInput
	// Manage FortiSwitch.
	DeviceFortiswitch pulumi.StringPtrInput
	// Device Manager.
	DeviceManager pulumi.StringPtrInput
	// Device add/delete/edit.
	DeviceOperation pulumi.StringPtrInput
	// Device profile permission.
	DeviceProfile pulumi.StringPtrInput
	// Delete device revision.
	DeviceRevisionDeletion pulumi.StringPtrInput
	// Manage WAN link load balance.
	DeviceWanLinkLoadBalance pulumi.StringPtrInput
	// FortiGuard Center.
	FortiguardCenter pulumi.StringPtrInput
	// FortiGuard Center Advanced.
	FortiguardCenterAdvanced pulumi.StringPtrInput
	// FortiGuard Center Firmware Managerment.
	FortiguardCenterFirmwareManagerment pulumi.StringPtrInput
	// FortiGuard Center Licensing.
	FortiguardCenterLicensing pulumi.StringPtrInput
	// Global policy packages.
	GlobalPolicyPackages pulumi.StringPtrInput
	// Import Policy Package.
	ImportPolicyPackages pulumi.StringPtrInput
	// Interface Mapping.
	IntfMapping pulumi.StringPtrInput
	// Log Viewer.
	LogViewer pulumi.StringPtrInput
	// Policy objects permission.
	PolicyObjects pulumi.StringPtrInput
	// Profile name.
	Profileid pulumi.StringPtrInput
	// Edit installation targets.
	SetInstallTargets pulumi.StringPtrInput
	// System Setting.
	SystemSetting pulumi.StringPtrInput
	// Terminal access.
	TerminalAccess pulumi.StringPtrInput
	// VPN Manager.
	VpnManager pulumi.StringPtrInput
}

func (FmgSystemAdminProfilesState) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgSystemAdminProfilesState)(nil)).Elem()
}

type fmgSystemAdminProfilesArgs struct {
	// Adom policy packages.
	AdomPolicyPackages *string `pulumi:"adomPolicyPackages"`
	// Administrator Domain.
	AdomSwitch *string `pulumi:"adomSwitch"`
	// Assignment Permission.
	Assignment *string `pulumi:"assignment"`
	// Configuration Retrieve.
	ConfigRetrieve *string `pulumi:"configRetrieve"`
	// Revert Configuration from Revision History.
	ConfigRevert *string `pulumi:"configRevert"`
	// Consistency check.
	ConsistencyCheck *string `pulumi:"consistencyCheck"`
	// Install to devices.
	DeployManagement *string `pulumi:"deployManagement"`
	// Description.
	Description *string `pulumi:"description"`
	// Manage AP.
	DeviceAp *string `pulumi:"deviceAp"`
	// Manage device configurations.
	DeviceConfig *string `pulumi:"deviceConfig"`
	// Manage FortiClient.
	DeviceForticlient *string `pulumi:"deviceForticlient"`
	// Manage FortiSwitch.
	DeviceFortiswitch *string `pulumi:"deviceFortiswitch"`
	// Device Manager.
	DeviceManager *string `pulumi:"deviceManager"`
	// Device add/delete/edit.
	DeviceOperation *string `pulumi:"deviceOperation"`
	// Device profile permission.
	DeviceProfile *string `pulumi:"deviceProfile"`
	// Delete device revision.
	DeviceRevisionDeletion *string `pulumi:"deviceRevisionDeletion"`
	// Manage WAN link load balance.
	DeviceWanLinkLoadBalance *string `pulumi:"deviceWanLinkLoadBalance"`
	// FortiGuard Center.
	FortiguardCenter *string `pulumi:"fortiguardCenter"`
	// FortiGuard Center Advanced.
	FortiguardCenterAdvanced *string `pulumi:"fortiguardCenterAdvanced"`
	// FortiGuard Center Firmware Managerment.
	FortiguardCenterFirmwareManagerment *string `pulumi:"fortiguardCenterFirmwareManagerment"`
	// FortiGuard Center Licensing.
	FortiguardCenterLicensing *string `pulumi:"fortiguardCenterLicensing"`
	// Global policy packages.
	GlobalPolicyPackages *string `pulumi:"globalPolicyPackages"`
	// Import Policy Package.
	ImportPolicyPackages *string `pulumi:"importPolicyPackages"`
	// Interface Mapping.
	IntfMapping *string `pulumi:"intfMapping"`
	// Log Viewer.
	LogViewer *string `pulumi:"logViewer"`
	// Policy objects permission.
	PolicyObjects *string `pulumi:"policyObjects"`
	// Profile name.
	Profileid string `pulumi:"profileid"`
	// Edit installation targets.
	SetInstallTargets *string `pulumi:"setInstallTargets"`
	// System Setting.
	SystemSetting *string `pulumi:"systemSetting"`
	// Terminal access.
	TerminalAccess *string `pulumi:"terminalAccess"`
	// VPN Manager.
	VpnManager *string `pulumi:"vpnManager"`
}

// The set of arguments for constructing a FmgSystemAdminProfiles resource.
type FmgSystemAdminProfilesArgs struct {
	// Adom policy packages.
	AdomPolicyPackages pulumi.StringPtrInput
	// Administrator Domain.
	AdomSwitch pulumi.StringPtrInput
	// Assignment Permission.
	Assignment pulumi.StringPtrInput
	// Configuration Retrieve.
	ConfigRetrieve pulumi.StringPtrInput
	// Revert Configuration from Revision History.
	ConfigRevert pulumi.StringPtrInput
	// Consistency check.
	ConsistencyCheck pulumi.StringPtrInput
	// Install to devices.
	DeployManagement pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// Manage AP.
	DeviceAp pulumi.StringPtrInput
	// Manage device configurations.
	DeviceConfig pulumi.StringPtrInput
	// Manage FortiClient.
	DeviceForticlient pulumi.StringPtrInput
	// Manage FortiSwitch.
	DeviceFortiswitch pulumi.StringPtrInput
	// Device Manager.
	DeviceManager pulumi.StringPtrInput
	// Device add/delete/edit.
	DeviceOperation pulumi.StringPtrInput
	// Device profile permission.
	DeviceProfile pulumi.StringPtrInput
	// Delete device revision.
	DeviceRevisionDeletion pulumi.StringPtrInput
	// Manage WAN link load balance.
	DeviceWanLinkLoadBalance pulumi.StringPtrInput
	// FortiGuard Center.
	FortiguardCenter pulumi.StringPtrInput
	// FortiGuard Center Advanced.
	FortiguardCenterAdvanced pulumi.StringPtrInput
	// FortiGuard Center Firmware Managerment.
	FortiguardCenterFirmwareManagerment pulumi.StringPtrInput
	// FortiGuard Center Licensing.
	FortiguardCenterLicensing pulumi.StringPtrInput
	// Global policy packages.
	GlobalPolicyPackages pulumi.StringPtrInput
	// Import Policy Package.
	ImportPolicyPackages pulumi.StringPtrInput
	// Interface Mapping.
	IntfMapping pulumi.StringPtrInput
	// Log Viewer.
	LogViewer pulumi.StringPtrInput
	// Policy objects permission.
	PolicyObjects pulumi.StringPtrInput
	// Profile name.
	Profileid pulumi.StringInput
	// Edit installation targets.
	SetInstallTargets pulumi.StringPtrInput
	// System Setting.
	SystemSetting pulumi.StringPtrInput
	// Terminal access.
	TerminalAccess pulumi.StringPtrInput
	// VPN Manager.
	VpnManager pulumi.StringPtrInput
}

func (FmgSystemAdminProfilesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgSystemAdminProfilesArgs)(nil)).Elem()
}

type FmgSystemAdminProfilesInput interface {
	pulumi.Input

	ToFmgSystemAdminProfilesOutput() FmgSystemAdminProfilesOutput
	ToFmgSystemAdminProfilesOutputWithContext(ctx context.Context) FmgSystemAdminProfilesOutput
}

func (*FmgSystemAdminProfiles) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgSystemAdminProfiles)(nil)).Elem()
}

func (i *FmgSystemAdminProfiles) ToFmgSystemAdminProfilesOutput() FmgSystemAdminProfilesOutput {
	return i.ToFmgSystemAdminProfilesOutputWithContext(context.Background())
}

func (i *FmgSystemAdminProfiles) ToFmgSystemAdminProfilesOutputWithContext(ctx context.Context) FmgSystemAdminProfilesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemAdminProfilesOutput)
}

// FmgSystemAdminProfilesArrayInput is an input type that accepts FmgSystemAdminProfilesArray and FmgSystemAdminProfilesArrayOutput values.
// You can construct a concrete instance of `FmgSystemAdminProfilesArrayInput` via:
//
//	FmgSystemAdminProfilesArray{ FmgSystemAdminProfilesArgs{...} }
type FmgSystemAdminProfilesArrayInput interface {
	pulumi.Input

	ToFmgSystemAdminProfilesArrayOutput() FmgSystemAdminProfilesArrayOutput
	ToFmgSystemAdminProfilesArrayOutputWithContext(context.Context) FmgSystemAdminProfilesArrayOutput
}

type FmgSystemAdminProfilesArray []FmgSystemAdminProfilesInput

func (FmgSystemAdminProfilesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgSystemAdminProfiles)(nil)).Elem()
}

func (i FmgSystemAdminProfilesArray) ToFmgSystemAdminProfilesArrayOutput() FmgSystemAdminProfilesArrayOutput {
	return i.ToFmgSystemAdminProfilesArrayOutputWithContext(context.Background())
}

func (i FmgSystemAdminProfilesArray) ToFmgSystemAdminProfilesArrayOutputWithContext(ctx context.Context) FmgSystemAdminProfilesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemAdminProfilesArrayOutput)
}

// FmgSystemAdminProfilesMapInput is an input type that accepts FmgSystemAdminProfilesMap and FmgSystemAdminProfilesMapOutput values.
// You can construct a concrete instance of `FmgSystemAdminProfilesMapInput` via:
//
//	FmgSystemAdminProfilesMap{ "key": FmgSystemAdminProfilesArgs{...} }
type FmgSystemAdminProfilesMapInput interface {
	pulumi.Input

	ToFmgSystemAdminProfilesMapOutput() FmgSystemAdminProfilesMapOutput
	ToFmgSystemAdminProfilesMapOutputWithContext(context.Context) FmgSystemAdminProfilesMapOutput
}

type FmgSystemAdminProfilesMap map[string]FmgSystemAdminProfilesInput

func (FmgSystemAdminProfilesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgSystemAdminProfiles)(nil)).Elem()
}

func (i FmgSystemAdminProfilesMap) ToFmgSystemAdminProfilesMapOutput() FmgSystemAdminProfilesMapOutput {
	return i.ToFmgSystemAdminProfilesMapOutputWithContext(context.Background())
}

func (i FmgSystemAdminProfilesMap) ToFmgSystemAdminProfilesMapOutputWithContext(ctx context.Context) FmgSystemAdminProfilesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemAdminProfilesMapOutput)
}

type FmgSystemAdminProfilesOutput struct{ *pulumi.OutputState }

func (FmgSystemAdminProfilesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgSystemAdminProfiles)(nil)).Elem()
}

func (o FmgSystemAdminProfilesOutput) ToFmgSystemAdminProfilesOutput() FmgSystemAdminProfilesOutput {
	return o
}

func (o FmgSystemAdminProfilesOutput) ToFmgSystemAdminProfilesOutputWithContext(ctx context.Context) FmgSystemAdminProfilesOutput {
	return o
}

// Adom policy packages.
func (o FmgSystemAdminProfilesOutput) AdomPolicyPackages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.AdomPolicyPackages }).(pulumi.StringPtrOutput)
}

// Administrator Domain.
func (o FmgSystemAdminProfilesOutput) AdomSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.AdomSwitch }).(pulumi.StringPtrOutput)
}

// Assignment Permission.
func (o FmgSystemAdminProfilesOutput) Assignment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.Assignment }).(pulumi.StringPtrOutput)
}

// Configuration Retrieve.
func (o FmgSystemAdminProfilesOutput) ConfigRetrieve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.ConfigRetrieve }).(pulumi.StringPtrOutput)
}

// Revert Configuration from Revision History.
func (o FmgSystemAdminProfilesOutput) ConfigRevert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.ConfigRevert }).(pulumi.StringPtrOutput)
}

// Consistency check.
func (o FmgSystemAdminProfilesOutput) ConsistencyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.ConsistencyCheck }).(pulumi.StringPtrOutput)
}

// Install to devices.
func (o FmgSystemAdminProfilesOutput) DeployManagement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.DeployManagement }).(pulumi.StringPtrOutput)
}

// Description.
func (o FmgSystemAdminProfilesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Manage AP.
func (o FmgSystemAdminProfilesOutput) DeviceAp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceAp }).(pulumi.StringPtrOutput)
}

// Manage device configurations.
func (o FmgSystemAdminProfilesOutput) DeviceConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceConfig }).(pulumi.StringPtrOutput)
}

// Manage FortiClient.
func (o FmgSystemAdminProfilesOutput) DeviceForticlient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceForticlient }).(pulumi.StringPtrOutput)
}

// Manage FortiSwitch.
func (o FmgSystemAdminProfilesOutput) DeviceFortiswitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceFortiswitch }).(pulumi.StringPtrOutput)
}

// Device Manager.
func (o FmgSystemAdminProfilesOutput) DeviceManager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceManager }).(pulumi.StringPtrOutput)
}

// Device add/delete/edit.
func (o FmgSystemAdminProfilesOutput) DeviceOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceOperation }).(pulumi.StringPtrOutput)
}

// Device profile permission.
func (o FmgSystemAdminProfilesOutput) DeviceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceProfile }).(pulumi.StringPtrOutput)
}

// Delete device revision.
func (o FmgSystemAdminProfilesOutput) DeviceRevisionDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceRevisionDeletion }).(pulumi.StringPtrOutput)
}

// Manage WAN link load balance.
func (o FmgSystemAdminProfilesOutput) DeviceWanLinkLoadBalance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.DeviceWanLinkLoadBalance }).(pulumi.StringPtrOutput)
}

// FortiGuard Center.
func (o FmgSystemAdminProfilesOutput) FortiguardCenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.FortiguardCenter }).(pulumi.StringPtrOutput)
}

// FortiGuard Center Advanced.
func (o FmgSystemAdminProfilesOutput) FortiguardCenterAdvanced() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.FortiguardCenterAdvanced }).(pulumi.StringPtrOutput)
}

// FortiGuard Center Firmware Managerment.
func (o FmgSystemAdminProfilesOutput) FortiguardCenterFirmwareManagerment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.FortiguardCenterFirmwareManagerment }).(pulumi.StringPtrOutput)
}

// FortiGuard Center Licensing.
func (o FmgSystemAdminProfilesOutput) FortiguardCenterLicensing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.FortiguardCenterLicensing }).(pulumi.StringPtrOutput)
}

// Global policy packages.
func (o FmgSystemAdminProfilesOutput) GlobalPolicyPackages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.GlobalPolicyPackages }).(pulumi.StringPtrOutput)
}

// Import Policy Package.
func (o FmgSystemAdminProfilesOutput) ImportPolicyPackages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.ImportPolicyPackages }).(pulumi.StringPtrOutput)
}

// Interface Mapping.
func (o FmgSystemAdminProfilesOutput) IntfMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.IntfMapping }).(pulumi.StringPtrOutput)
}

// Log Viewer.
func (o FmgSystemAdminProfilesOutput) LogViewer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.LogViewer }).(pulumi.StringPtrOutput)
}

// Policy objects permission.
func (o FmgSystemAdminProfilesOutput) PolicyObjects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.PolicyObjects }).(pulumi.StringPtrOutput)
}

// Profile name.
func (o FmgSystemAdminProfilesOutput) Profileid() pulumi.StringOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringOutput { return v.Profileid }).(pulumi.StringOutput)
}

// Edit installation targets.
func (o FmgSystemAdminProfilesOutput) SetInstallTargets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.SetInstallTargets }).(pulumi.StringPtrOutput)
}

// System Setting.
func (o FmgSystemAdminProfilesOutput) SystemSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.SystemSetting }).(pulumi.StringPtrOutput)
}

// Terminal access.
func (o FmgSystemAdminProfilesOutput) TerminalAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.TerminalAccess }).(pulumi.StringPtrOutput)
}

// VPN Manager.
func (o FmgSystemAdminProfilesOutput) VpnManager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemAdminProfiles) pulumi.StringPtrOutput { return v.VpnManager }).(pulumi.StringPtrOutput)
}

type FmgSystemAdminProfilesArrayOutput struct{ *pulumi.OutputState }

func (FmgSystemAdminProfilesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgSystemAdminProfiles)(nil)).Elem()
}

func (o FmgSystemAdminProfilesArrayOutput) ToFmgSystemAdminProfilesArrayOutput() FmgSystemAdminProfilesArrayOutput {
	return o
}

func (o FmgSystemAdminProfilesArrayOutput) ToFmgSystemAdminProfilesArrayOutputWithContext(ctx context.Context) FmgSystemAdminProfilesArrayOutput {
	return o
}

func (o FmgSystemAdminProfilesArrayOutput) Index(i pulumi.IntInput) FmgSystemAdminProfilesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FmgSystemAdminProfiles {
		return vs[0].([]*FmgSystemAdminProfiles)[vs[1].(int)]
	}).(FmgSystemAdminProfilesOutput)
}

type FmgSystemAdminProfilesMapOutput struct{ *pulumi.OutputState }

func (FmgSystemAdminProfilesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgSystemAdminProfiles)(nil)).Elem()
}

func (o FmgSystemAdminProfilesMapOutput) ToFmgSystemAdminProfilesMapOutput() FmgSystemAdminProfilesMapOutput {
	return o
}

func (o FmgSystemAdminProfilesMapOutput) ToFmgSystemAdminProfilesMapOutputWithContext(ctx context.Context) FmgSystemAdminProfilesMapOutput {
	return o
}

func (o FmgSystemAdminProfilesMapOutput) MapIndex(k pulumi.StringInput) FmgSystemAdminProfilesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FmgSystemAdminProfiles {
		return vs[0].(map[string]*FmgSystemAdminProfiles)[vs[1].(string)]
	}).(FmgSystemAdminProfilesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemAdminProfilesInput)(nil)).Elem(), &FmgSystemAdminProfiles{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemAdminProfilesArrayInput)(nil)).Elem(), FmgSystemAdminProfilesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemAdminProfilesMapInput)(nil)).Elem(), FmgSystemAdminProfilesMap{})
	pulumi.RegisterOutputType(FmgSystemAdminProfilesOutput{})
	pulumi.RegisterOutputType(FmgSystemAdminProfilesArrayOutput{})
	pulumi.RegisterOutputType(FmgSystemAdminProfilesMapOutput{})
}
