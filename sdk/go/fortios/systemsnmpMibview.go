// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SNMP Access Control MIB View configuration. Applies to FortiOS Version `>= 7.2.0`.
//
// ## Import
//
// # SystemSnmp MibView can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemsnmpMibview:SystemsnmpMibview labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemsnmpMibview:SystemsnmpMibview labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemsnmpMibview struct {
	pulumi.CustomResourceState

	// The OID subtrees to be excluded in the view. Maximum 64 allowed.
	Exclude pulumi.StringOutput `pulumi:"exclude"`
	// The OID subtrees to be included in the view. Maximum 16 allowed.
	Include pulumi.StringOutput `pulumi:"include"`
	// MIB view name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemsnmpMibview registers a new resource with the given unique name, arguments, and options.
func NewSystemsnmpMibview(ctx *pulumi.Context,
	name string, args *SystemsnmpMibviewArgs, opts ...pulumi.ResourceOption) (*SystemsnmpMibview, error) {
	if args == nil {
		args = &SystemsnmpMibviewArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemsnmpMibview
	err := ctx.RegisterResource("fortios:index/systemsnmpMibview:SystemsnmpMibview", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemsnmpMibview gets an existing SystemsnmpMibview resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemsnmpMibview(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemsnmpMibviewState, opts ...pulumi.ResourceOption) (*SystemsnmpMibview, error) {
	var resource SystemsnmpMibview
	err := ctx.ReadResource("fortios:index/systemsnmpMibview:SystemsnmpMibview", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemsnmpMibview resources.
type systemsnmpMibviewState struct {
	// The OID subtrees to be excluded in the view. Maximum 64 allowed.
	Exclude *string `pulumi:"exclude"`
	// The OID subtrees to be included in the view. Maximum 16 allowed.
	Include *string `pulumi:"include"`
	// MIB view name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemsnmpMibviewState struct {
	// The OID subtrees to be excluded in the view. Maximum 64 allowed.
	Exclude pulumi.StringPtrInput
	// The OID subtrees to be included in the view. Maximum 16 allowed.
	Include pulumi.StringPtrInput
	// MIB view name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemsnmpMibviewState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemsnmpMibviewState)(nil)).Elem()
}

type systemsnmpMibviewArgs struct {
	// The OID subtrees to be excluded in the view. Maximum 64 allowed.
	Exclude *string `pulumi:"exclude"`
	// The OID subtrees to be included in the view. Maximum 16 allowed.
	Include *string `pulumi:"include"`
	// MIB view name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemsnmpMibview resource.
type SystemsnmpMibviewArgs struct {
	// The OID subtrees to be excluded in the view. Maximum 64 allowed.
	Exclude pulumi.StringPtrInput
	// The OID subtrees to be included in the view. Maximum 16 allowed.
	Include pulumi.StringPtrInput
	// MIB view name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemsnmpMibviewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemsnmpMibviewArgs)(nil)).Elem()
}

type SystemsnmpMibviewInput interface {
	pulumi.Input

	ToSystemsnmpMibviewOutput() SystemsnmpMibviewOutput
	ToSystemsnmpMibviewOutputWithContext(ctx context.Context) SystemsnmpMibviewOutput
}

func (*SystemsnmpMibview) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemsnmpMibview)(nil)).Elem()
}

func (i *SystemsnmpMibview) ToSystemsnmpMibviewOutput() SystemsnmpMibviewOutput {
	return i.ToSystemsnmpMibviewOutputWithContext(context.Background())
}

func (i *SystemsnmpMibview) ToSystemsnmpMibviewOutputWithContext(ctx context.Context) SystemsnmpMibviewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpMibviewOutput)
}

// SystemsnmpMibviewArrayInput is an input type that accepts SystemsnmpMibviewArray and SystemsnmpMibviewArrayOutput values.
// You can construct a concrete instance of `SystemsnmpMibviewArrayInput` via:
//
//	SystemsnmpMibviewArray{ SystemsnmpMibviewArgs{...} }
type SystemsnmpMibviewArrayInput interface {
	pulumi.Input

	ToSystemsnmpMibviewArrayOutput() SystemsnmpMibviewArrayOutput
	ToSystemsnmpMibviewArrayOutputWithContext(context.Context) SystemsnmpMibviewArrayOutput
}

type SystemsnmpMibviewArray []SystemsnmpMibviewInput

func (SystemsnmpMibviewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemsnmpMibview)(nil)).Elem()
}

func (i SystemsnmpMibviewArray) ToSystemsnmpMibviewArrayOutput() SystemsnmpMibviewArrayOutput {
	return i.ToSystemsnmpMibviewArrayOutputWithContext(context.Background())
}

func (i SystemsnmpMibviewArray) ToSystemsnmpMibviewArrayOutputWithContext(ctx context.Context) SystemsnmpMibviewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpMibviewArrayOutput)
}

// SystemsnmpMibviewMapInput is an input type that accepts SystemsnmpMibviewMap and SystemsnmpMibviewMapOutput values.
// You can construct a concrete instance of `SystemsnmpMibviewMapInput` via:
//
//	SystemsnmpMibviewMap{ "key": SystemsnmpMibviewArgs{...} }
type SystemsnmpMibviewMapInput interface {
	pulumi.Input

	ToSystemsnmpMibviewMapOutput() SystemsnmpMibviewMapOutput
	ToSystemsnmpMibviewMapOutputWithContext(context.Context) SystemsnmpMibviewMapOutput
}

type SystemsnmpMibviewMap map[string]SystemsnmpMibviewInput

func (SystemsnmpMibviewMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemsnmpMibview)(nil)).Elem()
}

func (i SystemsnmpMibviewMap) ToSystemsnmpMibviewMapOutput() SystemsnmpMibviewMapOutput {
	return i.ToSystemsnmpMibviewMapOutputWithContext(context.Background())
}

func (i SystemsnmpMibviewMap) ToSystemsnmpMibviewMapOutputWithContext(ctx context.Context) SystemsnmpMibviewMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemsnmpMibviewMapOutput)
}

type SystemsnmpMibviewOutput struct{ *pulumi.OutputState }

func (SystemsnmpMibviewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemsnmpMibview)(nil)).Elem()
}

func (o SystemsnmpMibviewOutput) ToSystemsnmpMibviewOutput() SystemsnmpMibviewOutput {
	return o
}

func (o SystemsnmpMibviewOutput) ToSystemsnmpMibviewOutputWithContext(ctx context.Context) SystemsnmpMibviewOutput {
	return o
}

// The OID subtrees to be excluded in the view. Maximum 64 allowed.
func (o SystemsnmpMibviewOutput) Exclude() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemsnmpMibview) pulumi.StringOutput { return v.Exclude }).(pulumi.StringOutput)
}

// The OID subtrees to be included in the view. Maximum 16 allowed.
func (o SystemsnmpMibviewOutput) Include() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemsnmpMibview) pulumi.StringOutput { return v.Include }).(pulumi.StringOutput)
}

// MIB view name.
func (o SystemsnmpMibviewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemsnmpMibview) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemsnmpMibviewOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemsnmpMibview) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemsnmpMibviewArrayOutput struct{ *pulumi.OutputState }

func (SystemsnmpMibviewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemsnmpMibview)(nil)).Elem()
}

func (o SystemsnmpMibviewArrayOutput) ToSystemsnmpMibviewArrayOutput() SystemsnmpMibviewArrayOutput {
	return o
}

func (o SystemsnmpMibviewArrayOutput) ToSystemsnmpMibviewArrayOutputWithContext(ctx context.Context) SystemsnmpMibviewArrayOutput {
	return o
}

func (o SystemsnmpMibviewArrayOutput) Index(i pulumi.IntInput) SystemsnmpMibviewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemsnmpMibview {
		return vs[0].([]*SystemsnmpMibview)[vs[1].(int)]
	}).(SystemsnmpMibviewOutput)
}

type SystemsnmpMibviewMapOutput struct{ *pulumi.OutputState }

func (SystemsnmpMibviewMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemsnmpMibview)(nil)).Elem()
}

func (o SystemsnmpMibviewMapOutput) ToSystemsnmpMibviewMapOutput() SystemsnmpMibviewMapOutput {
	return o
}

func (o SystemsnmpMibviewMapOutput) ToSystemsnmpMibviewMapOutputWithContext(ctx context.Context) SystemsnmpMibviewMapOutput {
	return o
}

func (o SystemsnmpMibviewMapOutput) MapIndex(k pulumi.StringInput) SystemsnmpMibviewOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemsnmpMibview {
		return vs[0].(map[string]*SystemsnmpMibview)[vs[1].(string)]
	}).(SystemsnmpMibviewOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpMibviewInput)(nil)).Elem(), &SystemsnmpMibview{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpMibviewArrayInput)(nil)).Elem(), SystemsnmpMibviewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemsnmpMibviewMapInput)(nil)).Elem(), SystemsnmpMibviewMap{})
	pulumi.RegisterOutputType(SystemsnmpMibviewOutput{})
	pulumi.RegisterOutputType(SystemsnmpMibviewArrayOutput{})
	pulumi.RegisterOutputType(SystemsnmpMibviewMapOutput{})
}
