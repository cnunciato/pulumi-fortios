// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a list of `SystemIpv6tunnel`.
func GetSystemIpv6tunnellist(ctx *pulumi.Context, args *GetSystemIpv6tunnellistArgs, opts ...pulumi.InvokeOption) (*GetSystemIpv6tunnellistResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSystemIpv6tunnellistResult
	err := ctx.Invoke("fortios:index/getSystemIpv6tunnellist:getSystemIpv6tunnellist", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemIpv6tunnellist.
type GetSystemIpv6tunnellistArgs struct {
	// A filter used to scope the list. See Filter results of datasource.
	Filter *string `pulumi:"filter"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getSystemIpv6tunnellist.
type GetSystemIpv6tunnellistResult struct {
	Filter *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of the `SystemIpv6tunnel`.
	Namelists []string `pulumi:"namelists"`
	Vdomparam *string  `pulumi:"vdomparam"`
}

func GetSystemIpv6tunnellistOutput(ctx *pulumi.Context, args GetSystemIpv6tunnellistOutputArgs, opts ...pulumi.InvokeOption) GetSystemIpv6tunnellistResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSystemIpv6tunnellistResult, error) {
			args := v.(GetSystemIpv6tunnellistArgs)
			r, err := GetSystemIpv6tunnellist(ctx, &args, opts...)
			var s GetSystemIpv6tunnellistResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSystemIpv6tunnellistResultOutput)
}

// A collection of arguments for invoking getSystemIpv6tunnellist.
type GetSystemIpv6tunnellistOutputArgs struct {
	// A filter used to scope the list. See Filter results of datasource.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (GetSystemIpv6tunnellistOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemIpv6tunnellistArgs)(nil)).Elem()
}

// A collection of values returned by getSystemIpv6tunnellist.
type GetSystemIpv6tunnellistResultOutput struct{ *pulumi.OutputState }

func (GetSystemIpv6tunnellistResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemIpv6tunnellistResult)(nil)).Elem()
}

func (o GetSystemIpv6tunnellistResultOutput) ToGetSystemIpv6tunnellistResultOutput() GetSystemIpv6tunnellistResultOutput {
	return o
}

func (o GetSystemIpv6tunnellistResultOutput) ToGetSystemIpv6tunnellistResultOutputWithContext(ctx context.Context) GetSystemIpv6tunnellistResultOutput {
	return o
}

func (o GetSystemIpv6tunnellistResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSystemIpv6tunnellistResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSystemIpv6tunnellistResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemIpv6tunnellistResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of the `SystemIpv6tunnel`.
func (o GetSystemIpv6tunnellistResultOutput) Namelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSystemIpv6tunnellistResult) []string { return v.Namelists }).(pulumi.StringArrayOutput)
}

func (o GetSystemIpv6tunnellistResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSystemIpv6tunnellistResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSystemIpv6tunnellistResultOutput{})
}
