// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPv6 access lists.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewRouterAccesslist6(ctx, "trname", &fortios.RouterAccesslist6Args{
//				Comments: pulumi.String("access-list6 test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Router AccessList6 can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/routerAccesslist6:RouterAccesslist6 labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/routerAccesslist6:RouterAccesslist6 labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type RouterAccesslist6 struct {
	pulumi.CustomResourceState

	// Comment.
	Comments pulumi.StringOutput `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Rule. The structure of `rule` block is documented below.
	Rules RouterAccesslist6RuleArrayOutput `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewRouterAccesslist6 registers a new resource with the given unique name, arguments, and options.
func NewRouterAccesslist6(ctx *pulumi.Context,
	name string, args *RouterAccesslist6Args, opts ...pulumi.ResourceOption) (*RouterAccesslist6, error) {
	if args == nil {
		args = &RouterAccesslist6Args{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource RouterAccesslist6
	err := ctx.RegisterResource("fortios:index/routerAccesslist6:RouterAccesslist6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterAccesslist6 gets an existing RouterAccesslist6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterAccesslist6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterAccesslist6State, opts ...pulumi.ResourceOption) (*RouterAccesslist6, error) {
	var resource RouterAccesslist6
	err := ctx.ReadResource("fortios:index/routerAccesslist6:RouterAccesslist6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterAccesslist6 resources.
type routerAccesslist6State struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name.
	Name *string `pulumi:"name"`
	// Rule. The structure of `rule` block is documented below.
	Rules []RouterAccesslist6Rule `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type RouterAccesslist6State struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Rule. The structure of `rule` block is documented below.
	Rules RouterAccesslist6RuleArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (RouterAccesslist6State) ElementType() reflect.Type {
	return reflect.TypeOf((*routerAccesslist6State)(nil)).Elem()
}

type routerAccesslist6Args struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name.
	Name *string `pulumi:"name"`
	// Rule. The structure of `rule` block is documented below.
	Rules []RouterAccesslist6Rule `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a RouterAccesslist6 resource.
type RouterAccesslist6Args struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Rule. The structure of `rule` block is documented below.
	Rules RouterAccesslist6RuleArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (RouterAccesslist6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*routerAccesslist6Args)(nil)).Elem()
}

type RouterAccesslist6Input interface {
	pulumi.Input

	ToRouterAccesslist6Output() RouterAccesslist6Output
	ToRouterAccesslist6OutputWithContext(ctx context.Context) RouterAccesslist6Output
}

func (*RouterAccesslist6) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterAccesslist6)(nil)).Elem()
}

func (i *RouterAccesslist6) ToRouterAccesslist6Output() RouterAccesslist6Output {
	return i.ToRouterAccesslist6OutputWithContext(context.Background())
}

func (i *RouterAccesslist6) ToRouterAccesslist6OutputWithContext(ctx context.Context) RouterAccesslist6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccesslist6Output)
}

// RouterAccesslist6ArrayInput is an input type that accepts RouterAccesslist6Array and RouterAccesslist6ArrayOutput values.
// You can construct a concrete instance of `RouterAccesslist6ArrayInput` via:
//
//	RouterAccesslist6Array{ RouterAccesslist6Args{...} }
type RouterAccesslist6ArrayInput interface {
	pulumi.Input

	ToRouterAccesslist6ArrayOutput() RouterAccesslist6ArrayOutput
	ToRouterAccesslist6ArrayOutputWithContext(context.Context) RouterAccesslist6ArrayOutput
}

type RouterAccesslist6Array []RouterAccesslist6Input

func (RouterAccesslist6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterAccesslist6)(nil)).Elem()
}

func (i RouterAccesslist6Array) ToRouterAccesslist6ArrayOutput() RouterAccesslist6ArrayOutput {
	return i.ToRouterAccesslist6ArrayOutputWithContext(context.Background())
}

func (i RouterAccesslist6Array) ToRouterAccesslist6ArrayOutputWithContext(ctx context.Context) RouterAccesslist6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccesslist6ArrayOutput)
}

// RouterAccesslist6MapInput is an input type that accepts RouterAccesslist6Map and RouterAccesslist6MapOutput values.
// You can construct a concrete instance of `RouterAccesslist6MapInput` via:
//
//	RouterAccesslist6Map{ "key": RouterAccesslist6Args{...} }
type RouterAccesslist6MapInput interface {
	pulumi.Input

	ToRouterAccesslist6MapOutput() RouterAccesslist6MapOutput
	ToRouterAccesslist6MapOutputWithContext(context.Context) RouterAccesslist6MapOutput
}

type RouterAccesslist6Map map[string]RouterAccesslist6Input

func (RouterAccesslist6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterAccesslist6)(nil)).Elem()
}

func (i RouterAccesslist6Map) ToRouterAccesslist6MapOutput() RouterAccesslist6MapOutput {
	return i.ToRouterAccesslist6MapOutputWithContext(context.Background())
}

func (i RouterAccesslist6Map) ToRouterAccesslist6MapOutputWithContext(ctx context.Context) RouterAccesslist6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccesslist6MapOutput)
}

type RouterAccesslist6Output struct{ *pulumi.OutputState }

func (RouterAccesslist6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterAccesslist6)(nil)).Elem()
}

func (o RouterAccesslist6Output) ToRouterAccesslist6Output() RouterAccesslist6Output {
	return o
}

func (o RouterAccesslist6Output) ToRouterAccesslist6OutputWithContext(ctx context.Context) RouterAccesslist6Output {
	return o
}

// Comment.
func (o RouterAccesslist6Output) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterAccesslist6) pulumi.StringOutput { return v.Comments }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o RouterAccesslist6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterAccesslist6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Name.
func (o RouterAccesslist6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterAccesslist6) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Rule. The structure of `rule` block is documented below.
func (o RouterAccesslist6Output) Rules() RouterAccesslist6RuleArrayOutput {
	return o.ApplyT(func(v *RouterAccesslist6) RouterAccesslist6RuleArrayOutput { return v.Rules }).(RouterAccesslist6RuleArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o RouterAccesslist6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterAccesslist6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type RouterAccesslist6ArrayOutput struct{ *pulumi.OutputState }

func (RouterAccesslist6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterAccesslist6)(nil)).Elem()
}

func (o RouterAccesslist6ArrayOutput) ToRouterAccesslist6ArrayOutput() RouterAccesslist6ArrayOutput {
	return o
}

func (o RouterAccesslist6ArrayOutput) ToRouterAccesslist6ArrayOutputWithContext(ctx context.Context) RouterAccesslist6ArrayOutput {
	return o
}

func (o RouterAccesslist6ArrayOutput) Index(i pulumi.IntInput) RouterAccesslist6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterAccesslist6 {
		return vs[0].([]*RouterAccesslist6)[vs[1].(int)]
	}).(RouterAccesslist6Output)
}

type RouterAccesslist6MapOutput struct{ *pulumi.OutputState }

func (RouterAccesslist6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterAccesslist6)(nil)).Elem()
}

func (o RouterAccesslist6MapOutput) ToRouterAccesslist6MapOutput() RouterAccesslist6MapOutput {
	return o
}

func (o RouterAccesslist6MapOutput) ToRouterAccesslist6MapOutputWithContext(ctx context.Context) RouterAccesslist6MapOutput {
	return o
}

func (o RouterAccesslist6MapOutput) MapIndex(k pulumi.StringInput) RouterAccesslist6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterAccesslist6 {
		return vs[0].(map[string]*RouterAccesslist6)[vs[1].(string)]
	}).(RouterAccesslist6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccesslist6Input)(nil)).Elem(), &RouterAccesslist6{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccesslist6ArrayInput)(nil)).Elem(), RouterAccesslist6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccesslist6MapInput)(nil)).Elem(), RouterAccesslist6Map{})
	pulumi.RegisterOutputType(RouterAccesslist6Output{})
	pulumi.RegisterOutputType(RouterAccesslist6ArrayOutput{})
	pulumi.RegisterOutputType(RouterAccesslist6MapOutput{})
}
