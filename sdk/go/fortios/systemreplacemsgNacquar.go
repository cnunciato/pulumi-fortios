// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Replacement messages.
//
// ## Import
//
// # SystemReplacemsg NacQuar can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgNacquar:SystemreplacemsgNacquar labelname {{msg_type}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgNacquar:SystemreplacemsgNacquar labelname {{msg_type}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemreplacemsgNacquar struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemreplacemsgNacquar registers a new resource with the given unique name, arguments, and options.
func NewSystemreplacemsgNacquar(ctx *pulumi.Context,
	name string, args *SystemreplacemsgNacquarArgs, opts ...pulumi.ResourceOption) (*SystemreplacemsgNacquar, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemreplacemsgNacquar
	err := ctx.RegisterResource("fortios:index/systemreplacemsgNacquar:SystemreplacemsgNacquar", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemreplacemsgNacquar gets an existing SystemreplacemsgNacquar resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemreplacemsgNacquar(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemreplacemsgNacquarState, opts ...pulumi.ResourceOption) (*SystemreplacemsgNacquar, error) {
	var resource SystemreplacemsgNacquar
	err := ctx.ReadResource("fortios:index/systemreplacemsgNacquar:SystemreplacemsgNacquar", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemreplacemsgNacquar resources.
type systemreplacemsgNacquarState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemreplacemsgNacquarState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgNacquarState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgNacquarState)(nil)).Elem()
}

type systemreplacemsgNacquarArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemreplacemsgNacquar resource.
type SystemreplacemsgNacquarArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgNacquarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgNacquarArgs)(nil)).Elem()
}

type SystemreplacemsgNacquarInput interface {
	pulumi.Input

	ToSystemreplacemsgNacquarOutput() SystemreplacemsgNacquarOutput
	ToSystemreplacemsgNacquarOutputWithContext(ctx context.Context) SystemreplacemsgNacquarOutput
}

func (*SystemreplacemsgNacquar) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgNacquar)(nil)).Elem()
}

func (i *SystemreplacemsgNacquar) ToSystemreplacemsgNacquarOutput() SystemreplacemsgNacquarOutput {
	return i.ToSystemreplacemsgNacquarOutputWithContext(context.Background())
}

func (i *SystemreplacemsgNacquar) ToSystemreplacemsgNacquarOutputWithContext(ctx context.Context) SystemreplacemsgNacquarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgNacquarOutput)
}

// SystemreplacemsgNacquarArrayInput is an input type that accepts SystemreplacemsgNacquarArray and SystemreplacemsgNacquarArrayOutput values.
// You can construct a concrete instance of `SystemreplacemsgNacquarArrayInput` via:
//
//	SystemreplacemsgNacquarArray{ SystemreplacemsgNacquarArgs{...} }
type SystemreplacemsgNacquarArrayInput interface {
	pulumi.Input

	ToSystemreplacemsgNacquarArrayOutput() SystemreplacemsgNacquarArrayOutput
	ToSystemreplacemsgNacquarArrayOutputWithContext(context.Context) SystemreplacemsgNacquarArrayOutput
}

type SystemreplacemsgNacquarArray []SystemreplacemsgNacquarInput

func (SystemreplacemsgNacquarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgNacquar)(nil)).Elem()
}

func (i SystemreplacemsgNacquarArray) ToSystemreplacemsgNacquarArrayOutput() SystemreplacemsgNacquarArrayOutput {
	return i.ToSystemreplacemsgNacquarArrayOutputWithContext(context.Background())
}

func (i SystemreplacemsgNacquarArray) ToSystemreplacemsgNacquarArrayOutputWithContext(ctx context.Context) SystemreplacemsgNacquarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgNacquarArrayOutput)
}

// SystemreplacemsgNacquarMapInput is an input type that accepts SystemreplacemsgNacquarMap and SystemreplacemsgNacquarMapOutput values.
// You can construct a concrete instance of `SystemreplacemsgNacquarMapInput` via:
//
//	SystemreplacemsgNacquarMap{ "key": SystemreplacemsgNacquarArgs{...} }
type SystemreplacemsgNacquarMapInput interface {
	pulumi.Input

	ToSystemreplacemsgNacquarMapOutput() SystemreplacemsgNacquarMapOutput
	ToSystemreplacemsgNacquarMapOutputWithContext(context.Context) SystemreplacemsgNacquarMapOutput
}

type SystemreplacemsgNacquarMap map[string]SystemreplacemsgNacquarInput

func (SystemreplacemsgNacquarMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgNacquar)(nil)).Elem()
}

func (i SystemreplacemsgNacquarMap) ToSystemreplacemsgNacquarMapOutput() SystemreplacemsgNacquarMapOutput {
	return i.ToSystemreplacemsgNacquarMapOutputWithContext(context.Background())
}

func (i SystemreplacemsgNacquarMap) ToSystemreplacemsgNacquarMapOutputWithContext(ctx context.Context) SystemreplacemsgNacquarMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgNacquarMapOutput)
}

type SystemreplacemsgNacquarOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgNacquarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgNacquar)(nil)).Elem()
}

func (o SystemreplacemsgNacquarOutput) ToSystemreplacemsgNacquarOutput() SystemreplacemsgNacquarOutput {
	return o
}

func (o SystemreplacemsgNacquarOutput) ToSystemreplacemsgNacquarOutputWithContext(ctx context.Context) SystemreplacemsgNacquarOutput {
	return o
}

// Message string.
func (o SystemreplacemsgNacquarOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgNacquar) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemreplacemsgNacquarOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgNacquar) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemreplacemsgNacquarOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgNacquar) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o SystemreplacemsgNacquarOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgNacquar) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemreplacemsgNacquarOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgNacquar) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemreplacemsgNacquarArrayOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgNacquarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgNacquar)(nil)).Elem()
}

func (o SystemreplacemsgNacquarArrayOutput) ToSystemreplacemsgNacquarArrayOutput() SystemreplacemsgNacquarArrayOutput {
	return o
}

func (o SystemreplacemsgNacquarArrayOutput) ToSystemreplacemsgNacquarArrayOutputWithContext(ctx context.Context) SystemreplacemsgNacquarArrayOutput {
	return o
}

func (o SystemreplacemsgNacquarArrayOutput) Index(i pulumi.IntInput) SystemreplacemsgNacquarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemreplacemsgNacquar {
		return vs[0].([]*SystemreplacemsgNacquar)[vs[1].(int)]
	}).(SystemreplacemsgNacquarOutput)
}

type SystemreplacemsgNacquarMapOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgNacquarMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgNacquar)(nil)).Elem()
}

func (o SystemreplacemsgNacquarMapOutput) ToSystemreplacemsgNacquarMapOutput() SystemreplacemsgNacquarMapOutput {
	return o
}

func (o SystemreplacemsgNacquarMapOutput) ToSystemreplacemsgNacquarMapOutputWithContext(ctx context.Context) SystemreplacemsgNacquarMapOutput {
	return o
}

func (o SystemreplacemsgNacquarMapOutput) MapIndex(k pulumi.StringInput) SystemreplacemsgNacquarOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemreplacemsgNacquar {
		return vs[0].(map[string]*SystemreplacemsgNacquar)[vs[1].(string)]
	}).(SystemreplacemsgNacquarOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgNacquarInput)(nil)).Elem(), &SystemreplacemsgNacquar{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgNacquarArrayInput)(nil)).Elem(), SystemreplacemsgNacquarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgNacquarMapInput)(nil)).Elem(), SystemreplacemsgNacquarMap{})
	pulumi.RegisterOutputType(SystemreplacemsgNacquarOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgNacquarArrayOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgNacquarMapOutput{})
}
