// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SSL-VPN host check software.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewVpnsslwebHostchecksoftware(ctx, "trname", &fortios.VpnsslwebHostchecksoftwareArgs{
//				OsType: pulumi.String("windows"),
//				Type:   pulumi.String("fw"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # VpnSslWeb HostCheckSoftware can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/vpnsslwebHostchecksoftware:VpnsslwebHostchecksoftware labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/vpnsslwebHostchecksoftware:VpnsslwebHostchecksoftware labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type VpnsslwebHostchecksoftware struct {
	pulumi.CustomResourceState

	// Check item list. The structure of `checkItemList` block is documented below.
	CheckItemLists VpnsslwebHostchecksoftwareCheckItemListArrayOutput `pulumi:"checkItemLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Globally unique ID.
	Guid pulumi.StringOutput `pulumi:"guid"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// OS type. Valid values: `windows`, `macos`.
	OsType pulumi.StringOutput `pulumi:"osType"`
	// Type. Valid values: `av`, `fw`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Version.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewVpnsslwebHostchecksoftware registers a new resource with the given unique name, arguments, and options.
func NewVpnsslwebHostchecksoftware(ctx *pulumi.Context,
	name string, args *VpnsslwebHostchecksoftwareArgs, opts ...pulumi.ResourceOption) (*VpnsslwebHostchecksoftware, error) {
	if args == nil {
		args = &VpnsslwebHostchecksoftwareArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource VpnsslwebHostchecksoftware
	err := ctx.RegisterResource("fortios:index/vpnsslwebHostchecksoftware:VpnsslwebHostchecksoftware", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnsslwebHostchecksoftware gets an existing VpnsslwebHostchecksoftware resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnsslwebHostchecksoftware(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnsslwebHostchecksoftwareState, opts ...pulumi.ResourceOption) (*VpnsslwebHostchecksoftware, error) {
	var resource VpnsslwebHostchecksoftware
	err := ctx.ReadResource("fortios:index/vpnsslwebHostchecksoftware:VpnsslwebHostchecksoftware", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnsslwebHostchecksoftware resources.
type vpnsslwebHostchecksoftwareState struct {
	// Check item list. The structure of `checkItemList` block is documented below.
	CheckItemLists []VpnsslwebHostchecksoftwareCheckItemList `pulumi:"checkItemLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Globally unique ID.
	Guid *string `pulumi:"guid"`
	// Name.
	Name *string `pulumi:"name"`
	// OS type. Valid values: `windows`, `macos`.
	OsType *string `pulumi:"osType"`
	// Type. Valid values: `av`, `fw`.
	Type *string `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Version.
	Version *string `pulumi:"version"`
}

type VpnsslwebHostchecksoftwareState struct {
	// Check item list. The structure of `checkItemList` block is documented below.
	CheckItemLists VpnsslwebHostchecksoftwareCheckItemListArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Globally unique ID.
	Guid pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// OS type. Valid values: `windows`, `macos`.
	OsType pulumi.StringPtrInput
	// Type. Valid values: `av`, `fw`.
	Type pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Version.
	Version pulumi.StringPtrInput
}

func (VpnsslwebHostchecksoftwareState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnsslwebHostchecksoftwareState)(nil)).Elem()
}

type vpnsslwebHostchecksoftwareArgs struct {
	// Check item list. The structure of `checkItemList` block is documented below.
	CheckItemLists []VpnsslwebHostchecksoftwareCheckItemList `pulumi:"checkItemLists"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Globally unique ID.
	Guid *string `pulumi:"guid"`
	// Name.
	Name *string `pulumi:"name"`
	// OS type. Valid values: `windows`, `macos`.
	OsType *string `pulumi:"osType"`
	// Type. Valid values: `av`, `fw`.
	Type *string `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Version.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a VpnsslwebHostchecksoftware resource.
type VpnsslwebHostchecksoftwareArgs struct {
	// Check item list. The structure of `checkItemList` block is documented below.
	CheckItemLists VpnsslwebHostchecksoftwareCheckItemListArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Globally unique ID.
	Guid pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// OS type. Valid values: `windows`, `macos`.
	OsType pulumi.StringPtrInput
	// Type. Valid values: `av`, `fw`.
	Type pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Version.
	Version pulumi.StringPtrInput
}

func (VpnsslwebHostchecksoftwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnsslwebHostchecksoftwareArgs)(nil)).Elem()
}

type VpnsslwebHostchecksoftwareInput interface {
	pulumi.Input

	ToVpnsslwebHostchecksoftwareOutput() VpnsslwebHostchecksoftwareOutput
	ToVpnsslwebHostchecksoftwareOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareOutput
}

func (*VpnsslwebHostchecksoftware) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnsslwebHostchecksoftware)(nil)).Elem()
}

func (i *VpnsslwebHostchecksoftware) ToVpnsslwebHostchecksoftwareOutput() VpnsslwebHostchecksoftwareOutput {
	return i.ToVpnsslwebHostchecksoftwareOutputWithContext(context.Background())
}

func (i *VpnsslwebHostchecksoftware) ToVpnsslwebHostchecksoftwareOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebHostchecksoftwareOutput)
}

// VpnsslwebHostchecksoftwareArrayInput is an input type that accepts VpnsslwebHostchecksoftwareArray and VpnsslwebHostchecksoftwareArrayOutput values.
// You can construct a concrete instance of `VpnsslwebHostchecksoftwareArrayInput` via:
//
//	VpnsslwebHostchecksoftwareArray{ VpnsslwebHostchecksoftwareArgs{...} }
type VpnsslwebHostchecksoftwareArrayInput interface {
	pulumi.Input

	ToVpnsslwebHostchecksoftwareArrayOutput() VpnsslwebHostchecksoftwareArrayOutput
	ToVpnsslwebHostchecksoftwareArrayOutputWithContext(context.Context) VpnsslwebHostchecksoftwareArrayOutput
}

type VpnsslwebHostchecksoftwareArray []VpnsslwebHostchecksoftwareInput

func (VpnsslwebHostchecksoftwareArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnsslwebHostchecksoftware)(nil)).Elem()
}

func (i VpnsslwebHostchecksoftwareArray) ToVpnsslwebHostchecksoftwareArrayOutput() VpnsslwebHostchecksoftwareArrayOutput {
	return i.ToVpnsslwebHostchecksoftwareArrayOutputWithContext(context.Background())
}

func (i VpnsslwebHostchecksoftwareArray) ToVpnsslwebHostchecksoftwareArrayOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebHostchecksoftwareArrayOutput)
}

// VpnsslwebHostchecksoftwareMapInput is an input type that accepts VpnsslwebHostchecksoftwareMap and VpnsslwebHostchecksoftwareMapOutput values.
// You can construct a concrete instance of `VpnsslwebHostchecksoftwareMapInput` via:
//
//	VpnsslwebHostchecksoftwareMap{ "key": VpnsslwebHostchecksoftwareArgs{...} }
type VpnsslwebHostchecksoftwareMapInput interface {
	pulumi.Input

	ToVpnsslwebHostchecksoftwareMapOutput() VpnsslwebHostchecksoftwareMapOutput
	ToVpnsslwebHostchecksoftwareMapOutputWithContext(context.Context) VpnsslwebHostchecksoftwareMapOutput
}

type VpnsslwebHostchecksoftwareMap map[string]VpnsslwebHostchecksoftwareInput

func (VpnsslwebHostchecksoftwareMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnsslwebHostchecksoftware)(nil)).Elem()
}

func (i VpnsslwebHostchecksoftwareMap) ToVpnsslwebHostchecksoftwareMapOutput() VpnsslwebHostchecksoftwareMapOutput {
	return i.ToVpnsslwebHostchecksoftwareMapOutputWithContext(context.Background())
}

func (i VpnsslwebHostchecksoftwareMap) ToVpnsslwebHostchecksoftwareMapOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnsslwebHostchecksoftwareMapOutput)
}

type VpnsslwebHostchecksoftwareOutput struct{ *pulumi.OutputState }

func (VpnsslwebHostchecksoftwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnsslwebHostchecksoftware)(nil)).Elem()
}

func (o VpnsslwebHostchecksoftwareOutput) ToVpnsslwebHostchecksoftwareOutput() VpnsslwebHostchecksoftwareOutput {
	return o
}

func (o VpnsslwebHostchecksoftwareOutput) ToVpnsslwebHostchecksoftwareOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareOutput {
	return o
}

// Check item list. The structure of `checkItemList` block is documented below.
func (o VpnsslwebHostchecksoftwareOutput) CheckItemLists() VpnsslwebHostchecksoftwareCheckItemListArrayOutput {
	return o.ApplyT(func(v *VpnsslwebHostchecksoftware) VpnsslwebHostchecksoftwareCheckItemListArrayOutput {
		return v.CheckItemLists
	}).(VpnsslwebHostchecksoftwareCheckItemListArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o VpnsslwebHostchecksoftwareOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnsslwebHostchecksoftware) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Globally unique ID.
func (o VpnsslwebHostchecksoftwareOutput) Guid() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnsslwebHostchecksoftware) pulumi.StringOutput { return v.Guid }).(pulumi.StringOutput)
}

// Name.
func (o VpnsslwebHostchecksoftwareOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnsslwebHostchecksoftware) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// OS type. Valid values: `windows`, `macos`.
func (o VpnsslwebHostchecksoftwareOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnsslwebHostchecksoftware) pulumi.StringOutput { return v.OsType }).(pulumi.StringOutput)
}

// Type. Valid values: `av`, `fw`.
func (o VpnsslwebHostchecksoftwareOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnsslwebHostchecksoftware) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o VpnsslwebHostchecksoftwareOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnsslwebHostchecksoftware) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Version.
func (o VpnsslwebHostchecksoftwareOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnsslwebHostchecksoftware) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type VpnsslwebHostchecksoftwareArrayOutput struct{ *pulumi.OutputState }

func (VpnsslwebHostchecksoftwareArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnsslwebHostchecksoftware)(nil)).Elem()
}

func (o VpnsslwebHostchecksoftwareArrayOutput) ToVpnsslwebHostchecksoftwareArrayOutput() VpnsslwebHostchecksoftwareArrayOutput {
	return o
}

func (o VpnsslwebHostchecksoftwareArrayOutput) ToVpnsslwebHostchecksoftwareArrayOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareArrayOutput {
	return o
}

func (o VpnsslwebHostchecksoftwareArrayOutput) Index(i pulumi.IntInput) VpnsslwebHostchecksoftwareOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnsslwebHostchecksoftware {
		return vs[0].([]*VpnsslwebHostchecksoftware)[vs[1].(int)]
	}).(VpnsslwebHostchecksoftwareOutput)
}

type VpnsslwebHostchecksoftwareMapOutput struct{ *pulumi.OutputState }

func (VpnsslwebHostchecksoftwareMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnsslwebHostchecksoftware)(nil)).Elem()
}

func (o VpnsslwebHostchecksoftwareMapOutput) ToVpnsslwebHostchecksoftwareMapOutput() VpnsslwebHostchecksoftwareMapOutput {
	return o
}

func (o VpnsslwebHostchecksoftwareMapOutput) ToVpnsslwebHostchecksoftwareMapOutputWithContext(ctx context.Context) VpnsslwebHostchecksoftwareMapOutput {
	return o
}

func (o VpnsslwebHostchecksoftwareMapOutput) MapIndex(k pulumi.StringInput) VpnsslwebHostchecksoftwareOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnsslwebHostchecksoftware {
		return vs[0].(map[string]*VpnsslwebHostchecksoftware)[vs[1].(string)]
	}).(VpnsslwebHostchecksoftwareOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebHostchecksoftwareInput)(nil)).Elem(), &VpnsslwebHostchecksoftware{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebHostchecksoftwareArrayInput)(nil)).Elem(), VpnsslwebHostchecksoftwareArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnsslwebHostchecksoftwareMapInput)(nil)).Elem(), VpnsslwebHostchecksoftwareMap{})
	pulumi.RegisterOutputType(VpnsslwebHostchecksoftwareOutput{})
	pulumi.RegisterOutputType(VpnsslwebHostchecksoftwareArrayOutput{})
	pulumi.RegisterOutputType(VpnsslwebHostchecksoftwareMapOutput{})
}
