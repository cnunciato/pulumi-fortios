// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure LLDP network policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSystemlldpNetworkpolicy(ctx, "trname", &fortios.SystemlldpNetworkpolicyArgs{
//				Comment: pulumi.String("test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # SystemLldp NetworkPolicy can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemlldpNetworkpolicy:SystemlldpNetworkpolicy labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemlldpNetworkpolicy:SystemlldpNetworkpolicy labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemlldpNetworkpolicy struct {
	pulumi.CustomResourceState

	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Guest. The structure of `guest` block is documented below.
	Guest SystemlldpNetworkpolicyGuestOutput `pulumi:"guest"`
	// Guest Voice Signaling. The structure of `guestVoiceSignaling` block is documented below.
	GuestVoiceSignaling SystemlldpNetworkpolicyGuestVoiceSignalingOutput `pulumi:"guestVoiceSignaling"`
	// LLDP network policy name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Softphone. The structure of `softphone` block is documented below.
	Softphone SystemlldpNetworkpolicySoftphoneOutput `pulumi:"softphone"`
	// Streaming Video. The structure of `streamingVideo` block is documented below.
	StreamingVideo SystemlldpNetworkpolicyStreamingVideoOutput `pulumi:"streamingVideo"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Video Conferencing. The structure of `videoConferencing` block is documented below.
	VideoConferencing SystemlldpNetworkpolicyVideoConferencingOutput `pulumi:"videoConferencing"`
	// Video Signaling. The structure of `videoSignaling` block is documented below.
	VideoSignaling SystemlldpNetworkpolicyVideoSignalingOutput `pulumi:"videoSignaling"`
	// Voice. The structure of `voice` block is documented below.
	Voice SystemlldpNetworkpolicyVoiceOutput `pulumi:"voice"`
	// Voice signaling. The structure of `voiceSignaling` block is documented below.
	VoiceSignaling SystemlldpNetworkpolicyVoiceSignalingOutput `pulumi:"voiceSignaling"`
}

// NewSystemlldpNetworkpolicy registers a new resource with the given unique name, arguments, and options.
func NewSystemlldpNetworkpolicy(ctx *pulumi.Context,
	name string, args *SystemlldpNetworkpolicyArgs, opts ...pulumi.ResourceOption) (*SystemlldpNetworkpolicy, error) {
	if args == nil {
		args = &SystemlldpNetworkpolicyArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemlldpNetworkpolicy
	err := ctx.RegisterResource("fortios:index/systemlldpNetworkpolicy:SystemlldpNetworkpolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemlldpNetworkpolicy gets an existing SystemlldpNetworkpolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemlldpNetworkpolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemlldpNetworkpolicyState, opts ...pulumi.ResourceOption) (*SystemlldpNetworkpolicy, error) {
	var resource SystemlldpNetworkpolicy
	err := ctx.ReadResource("fortios:index/systemlldpNetworkpolicy:SystemlldpNetworkpolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemlldpNetworkpolicy resources.
type systemlldpNetworkpolicyState struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Guest. The structure of `guest` block is documented below.
	Guest *SystemlldpNetworkpolicyGuest `pulumi:"guest"`
	// Guest Voice Signaling. The structure of `guestVoiceSignaling` block is documented below.
	GuestVoiceSignaling *SystemlldpNetworkpolicyGuestVoiceSignaling `pulumi:"guestVoiceSignaling"`
	// LLDP network policy name.
	Name *string `pulumi:"name"`
	// Softphone. The structure of `softphone` block is documented below.
	Softphone *SystemlldpNetworkpolicySoftphone `pulumi:"softphone"`
	// Streaming Video. The structure of `streamingVideo` block is documented below.
	StreamingVideo *SystemlldpNetworkpolicyStreamingVideo `pulumi:"streamingVideo"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Video Conferencing. The structure of `videoConferencing` block is documented below.
	VideoConferencing *SystemlldpNetworkpolicyVideoConferencing `pulumi:"videoConferencing"`
	// Video Signaling. The structure of `videoSignaling` block is documented below.
	VideoSignaling *SystemlldpNetworkpolicyVideoSignaling `pulumi:"videoSignaling"`
	// Voice. The structure of `voice` block is documented below.
	Voice *SystemlldpNetworkpolicyVoice `pulumi:"voice"`
	// Voice signaling. The structure of `voiceSignaling` block is documented below.
	VoiceSignaling *SystemlldpNetworkpolicyVoiceSignaling `pulumi:"voiceSignaling"`
}

type SystemlldpNetworkpolicyState struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Guest. The structure of `guest` block is documented below.
	Guest SystemlldpNetworkpolicyGuestPtrInput
	// Guest Voice Signaling. The structure of `guestVoiceSignaling` block is documented below.
	GuestVoiceSignaling SystemlldpNetworkpolicyGuestVoiceSignalingPtrInput
	// LLDP network policy name.
	Name pulumi.StringPtrInput
	// Softphone. The structure of `softphone` block is documented below.
	Softphone SystemlldpNetworkpolicySoftphonePtrInput
	// Streaming Video. The structure of `streamingVideo` block is documented below.
	StreamingVideo SystemlldpNetworkpolicyStreamingVideoPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Video Conferencing. The structure of `videoConferencing` block is documented below.
	VideoConferencing SystemlldpNetworkpolicyVideoConferencingPtrInput
	// Video Signaling. The structure of `videoSignaling` block is documented below.
	VideoSignaling SystemlldpNetworkpolicyVideoSignalingPtrInput
	// Voice. The structure of `voice` block is documented below.
	Voice SystemlldpNetworkpolicyVoicePtrInput
	// Voice signaling. The structure of `voiceSignaling` block is documented below.
	VoiceSignaling SystemlldpNetworkpolicyVoiceSignalingPtrInput
}

func (SystemlldpNetworkpolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemlldpNetworkpolicyState)(nil)).Elem()
}

type systemlldpNetworkpolicyArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Guest. The structure of `guest` block is documented below.
	Guest *SystemlldpNetworkpolicyGuest `pulumi:"guest"`
	// Guest Voice Signaling. The structure of `guestVoiceSignaling` block is documented below.
	GuestVoiceSignaling *SystemlldpNetworkpolicyGuestVoiceSignaling `pulumi:"guestVoiceSignaling"`
	// LLDP network policy name.
	Name *string `pulumi:"name"`
	// Softphone. The structure of `softphone` block is documented below.
	Softphone *SystemlldpNetworkpolicySoftphone `pulumi:"softphone"`
	// Streaming Video. The structure of `streamingVideo` block is documented below.
	StreamingVideo *SystemlldpNetworkpolicyStreamingVideo `pulumi:"streamingVideo"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Video Conferencing. The structure of `videoConferencing` block is documented below.
	VideoConferencing *SystemlldpNetworkpolicyVideoConferencing `pulumi:"videoConferencing"`
	// Video Signaling. The structure of `videoSignaling` block is documented below.
	VideoSignaling *SystemlldpNetworkpolicyVideoSignaling `pulumi:"videoSignaling"`
	// Voice. The structure of `voice` block is documented below.
	Voice *SystemlldpNetworkpolicyVoice `pulumi:"voice"`
	// Voice signaling. The structure of `voiceSignaling` block is documented below.
	VoiceSignaling *SystemlldpNetworkpolicyVoiceSignaling `pulumi:"voiceSignaling"`
}

// The set of arguments for constructing a SystemlldpNetworkpolicy resource.
type SystemlldpNetworkpolicyArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Guest. The structure of `guest` block is documented below.
	Guest SystemlldpNetworkpolicyGuestPtrInput
	// Guest Voice Signaling. The structure of `guestVoiceSignaling` block is documented below.
	GuestVoiceSignaling SystemlldpNetworkpolicyGuestVoiceSignalingPtrInput
	// LLDP network policy name.
	Name pulumi.StringPtrInput
	// Softphone. The structure of `softphone` block is documented below.
	Softphone SystemlldpNetworkpolicySoftphonePtrInput
	// Streaming Video. The structure of `streamingVideo` block is documented below.
	StreamingVideo SystemlldpNetworkpolicyStreamingVideoPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Video Conferencing. The structure of `videoConferencing` block is documented below.
	VideoConferencing SystemlldpNetworkpolicyVideoConferencingPtrInput
	// Video Signaling. The structure of `videoSignaling` block is documented below.
	VideoSignaling SystemlldpNetworkpolicyVideoSignalingPtrInput
	// Voice. The structure of `voice` block is documented below.
	Voice SystemlldpNetworkpolicyVoicePtrInput
	// Voice signaling. The structure of `voiceSignaling` block is documented below.
	VoiceSignaling SystemlldpNetworkpolicyVoiceSignalingPtrInput
}

func (SystemlldpNetworkpolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemlldpNetworkpolicyArgs)(nil)).Elem()
}

type SystemlldpNetworkpolicyInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyOutput() SystemlldpNetworkpolicyOutput
	ToSystemlldpNetworkpolicyOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyOutput
}

func (*SystemlldpNetworkpolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicy)(nil)).Elem()
}

func (i *SystemlldpNetworkpolicy) ToSystemlldpNetworkpolicyOutput() SystemlldpNetworkpolicyOutput {
	return i.ToSystemlldpNetworkpolicyOutputWithContext(context.Background())
}

func (i *SystemlldpNetworkpolicy) ToSystemlldpNetworkpolicyOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyOutput)
}

// SystemlldpNetworkpolicyArrayInput is an input type that accepts SystemlldpNetworkpolicyArray and SystemlldpNetworkpolicyArrayOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyArrayInput` via:
//
//	SystemlldpNetworkpolicyArray{ SystemlldpNetworkpolicyArgs{...} }
type SystemlldpNetworkpolicyArrayInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyArrayOutput() SystemlldpNetworkpolicyArrayOutput
	ToSystemlldpNetworkpolicyArrayOutputWithContext(context.Context) SystemlldpNetworkpolicyArrayOutput
}

type SystemlldpNetworkpolicyArray []SystemlldpNetworkpolicyInput

func (SystemlldpNetworkpolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemlldpNetworkpolicy)(nil)).Elem()
}

func (i SystemlldpNetworkpolicyArray) ToSystemlldpNetworkpolicyArrayOutput() SystemlldpNetworkpolicyArrayOutput {
	return i.ToSystemlldpNetworkpolicyArrayOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyArray) ToSystemlldpNetworkpolicyArrayOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyArrayOutput)
}

// SystemlldpNetworkpolicyMapInput is an input type that accepts SystemlldpNetworkpolicyMap and SystemlldpNetworkpolicyMapOutput values.
// You can construct a concrete instance of `SystemlldpNetworkpolicyMapInput` via:
//
//	SystemlldpNetworkpolicyMap{ "key": SystemlldpNetworkpolicyArgs{...} }
type SystemlldpNetworkpolicyMapInput interface {
	pulumi.Input

	ToSystemlldpNetworkpolicyMapOutput() SystemlldpNetworkpolicyMapOutput
	ToSystemlldpNetworkpolicyMapOutputWithContext(context.Context) SystemlldpNetworkpolicyMapOutput
}

type SystemlldpNetworkpolicyMap map[string]SystemlldpNetworkpolicyInput

func (SystemlldpNetworkpolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemlldpNetworkpolicy)(nil)).Elem()
}

func (i SystemlldpNetworkpolicyMap) ToSystemlldpNetworkpolicyMapOutput() SystemlldpNetworkpolicyMapOutput {
	return i.ToSystemlldpNetworkpolicyMapOutputWithContext(context.Background())
}

func (i SystemlldpNetworkpolicyMap) ToSystemlldpNetworkpolicyMapOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemlldpNetworkpolicyMapOutput)
}

type SystemlldpNetworkpolicyOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemlldpNetworkpolicy)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyOutput) ToSystemlldpNetworkpolicyOutput() SystemlldpNetworkpolicyOutput {
	return o
}

func (o SystemlldpNetworkpolicyOutput) ToSystemlldpNetworkpolicyOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyOutput {
	return o
}

// Comment.
func (o SystemlldpNetworkpolicyOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Guest. The structure of `guest` block is documented below.
func (o SystemlldpNetworkpolicyOutput) Guest() SystemlldpNetworkpolicyGuestOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) SystemlldpNetworkpolicyGuestOutput { return v.Guest }).(SystemlldpNetworkpolicyGuestOutput)
}

// Guest Voice Signaling. The structure of `guestVoiceSignaling` block is documented below.
func (o SystemlldpNetworkpolicyOutput) GuestVoiceSignaling() SystemlldpNetworkpolicyGuestVoiceSignalingOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) SystemlldpNetworkpolicyGuestVoiceSignalingOutput {
		return v.GuestVoiceSignaling
	}).(SystemlldpNetworkpolicyGuestVoiceSignalingOutput)
}

// LLDP network policy name.
func (o SystemlldpNetworkpolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Softphone. The structure of `softphone` block is documented below.
func (o SystemlldpNetworkpolicyOutput) Softphone() SystemlldpNetworkpolicySoftphoneOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) SystemlldpNetworkpolicySoftphoneOutput { return v.Softphone }).(SystemlldpNetworkpolicySoftphoneOutput)
}

// Streaming Video. The structure of `streamingVideo` block is documented below.
func (o SystemlldpNetworkpolicyOutput) StreamingVideo() SystemlldpNetworkpolicyStreamingVideoOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) SystemlldpNetworkpolicyStreamingVideoOutput { return v.StreamingVideo }).(SystemlldpNetworkpolicyStreamingVideoOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemlldpNetworkpolicyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Video Conferencing. The structure of `videoConferencing` block is documented below.
func (o SystemlldpNetworkpolicyOutput) VideoConferencing() SystemlldpNetworkpolicyVideoConferencingOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) SystemlldpNetworkpolicyVideoConferencingOutput {
		return v.VideoConferencing
	}).(SystemlldpNetworkpolicyVideoConferencingOutput)
}

// Video Signaling. The structure of `videoSignaling` block is documented below.
func (o SystemlldpNetworkpolicyOutput) VideoSignaling() SystemlldpNetworkpolicyVideoSignalingOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) SystemlldpNetworkpolicyVideoSignalingOutput { return v.VideoSignaling }).(SystemlldpNetworkpolicyVideoSignalingOutput)
}

// Voice. The structure of `voice` block is documented below.
func (o SystemlldpNetworkpolicyOutput) Voice() SystemlldpNetworkpolicyVoiceOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) SystemlldpNetworkpolicyVoiceOutput { return v.Voice }).(SystemlldpNetworkpolicyVoiceOutput)
}

// Voice signaling. The structure of `voiceSignaling` block is documented below.
func (o SystemlldpNetworkpolicyOutput) VoiceSignaling() SystemlldpNetworkpolicyVoiceSignalingOutput {
	return o.ApplyT(func(v *SystemlldpNetworkpolicy) SystemlldpNetworkpolicyVoiceSignalingOutput { return v.VoiceSignaling }).(SystemlldpNetworkpolicyVoiceSignalingOutput)
}

type SystemlldpNetworkpolicyArrayOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemlldpNetworkpolicy)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyArrayOutput) ToSystemlldpNetworkpolicyArrayOutput() SystemlldpNetworkpolicyArrayOutput {
	return o
}

func (o SystemlldpNetworkpolicyArrayOutput) ToSystemlldpNetworkpolicyArrayOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyArrayOutput {
	return o
}

func (o SystemlldpNetworkpolicyArrayOutput) Index(i pulumi.IntInput) SystemlldpNetworkpolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemlldpNetworkpolicy {
		return vs[0].([]*SystemlldpNetworkpolicy)[vs[1].(int)]
	}).(SystemlldpNetworkpolicyOutput)
}

type SystemlldpNetworkpolicyMapOutput struct{ *pulumi.OutputState }

func (SystemlldpNetworkpolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemlldpNetworkpolicy)(nil)).Elem()
}

func (o SystemlldpNetworkpolicyMapOutput) ToSystemlldpNetworkpolicyMapOutput() SystemlldpNetworkpolicyMapOutput {
	return o
}

func (o SystemlldpNetworkpolicyMapOutput) ToSystemlldpNetworkpolicyMapOutputWithContext(ctx context.Context) SystemlldpNetworkpolicyMapOutput {
	return o
}

func (o SystemlldpNetworkpolicyMapOutput) MapIndex(k pulumi.StringInput) SystemlldpNetworkpolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemlldpNetworkpolicy {
		return vs[0].(map[string]*SystemlldpNetworkpolicy)[vs[1].(string)]
	}).(SystemlldpNetworkpolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyInput)(nil)).Elem(), &SystemlldpNetworkpolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyArrayInput)(nil)).Elem(), SystemlldpNetworkpolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemlldpNetworkpolicyMapInput)(nil)).Elem(), SystemlldpNetworkpolicyMap{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyArrayOutput{})
	pulumi.RegisterOutputType(SystemlldpNetworkpolicyMapOutput{})
}
