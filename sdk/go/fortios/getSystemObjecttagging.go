// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on an fortios system objecttagging
func LookupSystemObjecttagging(ctx *pulumi.Context, args *LookupSystemObjecttaggingArgs, opts ...pulumi.InvokeOption) (*LookupSystemObjecttaggingResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSystemObjecttaggingResult
	err := ctx.Invoke("fortios:index/getSystemObjecttagging:getSystemObjecttagging", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemObjecttagging.
type LookupSystemObjecttaggingArgs struct {
	// Specify the category of the desired system objecttagging.
	Category string `pulumi:"category"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getSystemObjecttagging.
type LookupSystemObjecttaggingResult struct {
	// Address.
	Address string `pulumi:"address"`
	// Tag Category.
	Category string `pulumi:"category"`
	// Color of icon on the GUI.
	Color int `pulumi:"color"`
	// Device.
	Device string `pulumi:"device"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Interface.
	Interface string `pulumi:"interface"`
	// Allow multiple tag selection.
	Multiple string `pulumi:"multiple"`
	// Tags. The structure of `tags` block is documented below.
	Tags      []GetSystemObjecttaggingTag `pulumi:"tags"`
	Vdomparam *string                     `pulumi:"vdomparam"`
}

func LookupSystemObjecttaggingOutput(ctx *pulumi.Context, args LookupSystemObjecttaggingOutputArgs, opts ...pulumi.InvokeOption) LookupSystemObjecttaggingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSystemObjecttaggingResult, error) {
			args := v.(LookupSystemObjecttaggingArgs)
			r, err := LookupSystemObjecttagging(ctx, &args, opts...)
			var s LookupSystemObjecttaggingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSystemObjecttaggingResultOutput)
}

// A collection of arguments for invoking getSystemObjecttagging.
type LookupSystemObjecttaggingOutputArgs struct {
	// Specify the category of the desired system objecttagging.
	Category pulumi.StringInput `pulumi:"category"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupSystemObjecttaggingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemObjecttaggingArgs)(nil)).Elem()
}

// A collection of values returned by getSystemObjecttagging.
type LookupSystemObjecttaggingResultOutput struct{ *pulumi.OutputState }

func (LookupSystemObjecttaggingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemObjecttaggingResult)(nil)).Elem()
}

func (o LookupSystemObjecttaggingResultOutput) ToLookupSystemObjecttaggingResultOutput() LookupSystemObjecttaggingResultOutput {
	return o
}

func (o LookupSystemObjecttaggingResultOutput) ToLookupSystemObjecttaggingResultOutputWithContext(ctx context.Context) LookupSystemObjecttaggingResultOutput {
	return o
}

// Address.
func (o LookupSystemObjecttaggingResultOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemObjecttaggingResult) string { return v.Address }).(pulumi.StringOutput)
}

// Tag Category.
func (o LookupSystemObjecttaggingResultOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemObjecttaggingResult) string { return v.Category }).(pulumi.StringOutput)
}

// Color of icon on the GUI.
func (o LookupSystemObjecttaggingResultOutput) Color() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemObjecttaggingResult) int { return v.Color }).(pulumi.IntOutput)
}

// Device.
func (o LookupSystemObjecttaggingResultOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemObjecttaggingResult) string { return v.Device }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSystemObjecttaggingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemObjecttaggingResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface.
func (o LookupSystemObjecttaggingResultOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemObjecttaggingResult) string { return v.Interface }).(pulumi.StringOutput)
}

// Allow multiple tag selection.
func (o LookupSystemObjecttaggingResultOutput) Multiple() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemObjecttaggingResult) string { return v.Multiple }).(pulumi.StringOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o LookupSystemObjecttaggingResultOutput) Tags() GetSystemObjecttaggingTagArrayOutput {
	return o.ApplyT(func(v LookupSystemObjecttaggingResult) []GetSystemObjecttaggingTag { return v.Tags }).(GetSystemObjecttaggingTagArrayOutput)
}

func (o LookupSystemObjecttaggingResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSystemObjecttaggingResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemObjecttaggingResultOutput{})
}
