// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Convert IP/Mask to CIDR
//
// ## Example Usage
// ### Example1
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			trnameSystemInterface, err := fortios.LookupSystemInterface(ctx, &fortios.LookupSystemInterfaceArgs{
//				Name: "port3",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			trnameIpmaskCidr, err := fortios.GetIpmaskCidr(ctx, &fortios.GetIpmaskCidrArgs{
//				Ipmask: pulumi.StringRef(trnameSystemInterface.Ip),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("output1", trnameIpmaskCidr.Cidr)
//			return nil
//		})
//	}
//
// ```
// ### Example2
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			trnameSystemInterface, err := fortios.LookupSystemInterface(ctx, &fortios.LookupSystemInterfaceArgs{
//				Name: "port3",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			trnameIpmaskCidr, err := fortios.GetIpmaskCidr(ctx, &fortios.GetIpmaskCidrArgs{
//				Ipmask: pulumi.StringRef(trnameSystemInterface.Ip),
//				Ipmasklists: []string{
//					"21.1.1.1 255.255.255.0",
//					"22.1.1.1 255.255.255.240",
//					"23.1.1.1 255.255.255.224",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("outputConv1", trnameIpmaskCidr.Cidr)
//			ctx.Export("outputConv2", trnameIpmaskCidr.Cidrlists)
//			ctx.Export("outputOrignal", trnameSystemInterface.Ip)
//			return nil
//		})
//	}
//
// ```
func GetIpmaskCidr(ctx *pulumi.Context, args *GetIpmaskCidrArgs, opts ...pulumi.InvokeOption) (*GetIpmaskCidrResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetIpmaskCidrResult
	err := ctx.Invoke("fortios:index/getIpmaskCidr:getIpmaskCidr", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpmaskCidr.
type GetIpmaskCidrArgs struct {
	// Specify IP/MASK.
	Ipmask *string `pulumi:"ipmask"`
	// Specify IP/MASK list.
	Ipmasklists []string `pulumi:"ipmasklists"`
}

// A collection of values returned by getIpmaskCidr.
type GetIpmaskCidrResult struct {
	// Classless Inter-Domain Routing of the IP/MASK.
	Cidr string `pulumi:"cidr"`
	// Classless Inter-Domain Routing list converted from the IP/MASK list.
	Cidrlists []string `pulumi:"cidrlists"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// IP/MASK.
	Ipmask *string `pulumi:"ipmask"`
	// IP/MASK list.
	Ipmasklists []string `pulumi:"ipmasklists"`
}

func GetIpmaskCidrOutput(ctx *pulumi.Context, args GetIpmaskCidrOutputArgs, opts ...pulumi.InvokeOption) GetIpmaskCidrResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIpmaskCidrResult, error) {
			args := v.(GetIpmaskCidrArgs)
			r, err := GetIpmaskCidr(ctx, &args, opts...)
			var s GetIpmaskCidrResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIpmaskCidrResultOutput)
}

// A collection of arguments for invoking getIpmaskCidr.
type GetIpmaskCidrOutputArgs struct {
	// Specify IP/MASK.
	Ipmask pulumi.StringPtrInput `pulumi:"ipmask"`
	// Specify IP/MASK list.
	Ipmasklists pulumi.StringArrayInput `pulumi:"ipmasklists"`
}

func (GetIpmaskCidrOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpmaskCidrArgs)(nil)).Elem()
}

// A collection of values returned by getIpmaskCidr.
type GetIpmaskCidrResultOutput struct{ *pulumi.OutputState }

func (GetIpmaskCidrResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpmaskCidrResult)(nil)).Elem()
}

func (o GetIpmaskCidrResultOutput) ToGetIpmaskCidrResultOutput() GetIpmaskCidrResultOutput {
	return o
}

func (o GetIpmaskCidrResultOutput) ToGetIpmaskCidrResultOutputWithContext(ctx context.Context) GetIpmaskCidrResultOutput {
	return o
}

// Classless Inter-Domain Routing of the IP/MASK.
func (o GetIpmaskCidrResultOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpmaskCidrResult) string { return v.Cidr }).(pulumi.StringOutput)
}

// Classless Inter-Domain Routing list converted from the IP/MASK list.
func (o GetIpmaskCidrResultOutput) Cidrlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpmaskCidrResult) []string { return v.Cidrlists }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpmaskCidrResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpmaskCidrResult) string { return v.Id }).(pulumi.StringOutput)
}

// IP/MASK.
func (o GetIpmaskCidrResultOutput) Ipmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpmaskCidrResult) *string { return v.Ipmask }).(pulumi.StringPtrOutput)
}

// IP/MASK list.
func (o GetIpmaskCidrResultOutput) Ipmasklists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpmaskCidrResult) []string { return v.Ipmasklists }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpmaskCidrResultOutput{})
}
