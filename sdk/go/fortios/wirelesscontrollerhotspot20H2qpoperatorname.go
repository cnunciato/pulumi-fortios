// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure operator friendly name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewWirelesscontrollerhotspot20H2qpoperatorname(ctx, "trname", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # WirelessControllerHotspot20 H2QpOperatorName can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/wirelesscontrollerhotspot20H2qpoperatorname:Wirelesscontrollerhotspot20H2qpoperatorname labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/wirelesscontrollerhotspot20H2qpoperatorname:Wirelesscontrollerhotspot20H2qpoperatorname labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type Wirelesscontrollerhotspot20H2qpoperatorname struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Friendly name ID.
	Name pulumi.StringOutput `pulumi:"name"`
	// Name list. The structure of `valueList` block is documented below.
	ValueLists Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWirelesscontrollerhotspot20H2qpoperatorname registers a new resource with the given unique name, arguments, and options.
func NewWirelesscontrollerhotspot20H2qpoperatorname(ctx *pulumi.Context,
	name string, args *Wirelesscontrollerhotspot20H2qpoperatornameArgs, opts ...pulumi.ResourceOption) (*Wirelesscontrollerhotspot20H2qpoperatorname, error) {
	if args == nil {
		args = &Wirelesscontrollerhotspot20H2qpoperatornameArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource Wirelesscontrollerhotspot20H2qpoperatorname
	err := ctx.RegisterResource("fortios:index/wirelesscontrollerhotspot20H2qpoperatorname:Wirelesscontrollerhotspot20H2qpoperatorname", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelesscontrollerhotspot20H2qpoperatorname gets an existing Wirelesscontrollerhotspot20H2qpoperatorname resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelesscontrollerhotspot20H2qpoperatorname(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Wirelesscontrollerhotspot20H2qpoperatornameState, opts ...pulumi.ResourceOption) (*Wirelesscontrollerhotspot20H2qpoperatorname, error) {
	var resource Wirelesscontrollerhotspot20H2qpoperatorname
	err := ctx.ReadResource("fortios:index/wirelesscontrollerhotspot20H2qpoperatorname:Wirelesscontrollerhotspot20H2qpoperatorname", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Wirelesscontrollerhotspot20H2qpoperatorname resources.
type wirelesscontrollerhotspot20H2qpoperatornameState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Friendly name ID.
	Name *string `pulumi:"name"`
	// Name list. The structure of `valueList` block is documented below.
	ValueLists []Wirelesscontrollerhotspot20H2qpoperatornameValueList `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Wirelesscontrollerhotspot20H2qpoperatornameState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Friendly name ID.
	Name pulumi.StringPtrInput
	// Name list. The structure of `valueList` block is documented below.
	ValueLists Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Wirelesscontrollerhotspot20H2qpoperatornameState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelesscontrollerhotspot20H2qpoperatornameState)(nil)).Elem()
}

type wirelesscontrollerhotspot20H2qpoperatornameArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Friendly name ID.
	Name *string `pulumi:"name"`
	// Name list. The structure of `valueList` block is documented below.
	ValueLists []Wirelesscontrollerhotspot20H2qpoperatornameValueList `pulumi:"valueLists"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Wirelesscontrollerhotspot20H2qpoperatorname resource.
type Wirelesscontrollerhotspot20H2qpoperatornameArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Friendly name ID.
	Name pulumi.StringPtrInput
	// Name list. The structure of `valueList` block is documented below.
	ValueLists Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Wirelesscontrollerhotspot20H2qpoperatornameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelesscontrollerhotspot20H2qpoperatornameArgs)(nil)).Elem()
}

type Wirelesscontrollerhotspot20H2qpoperatornameInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qpoperatornameOutput() Wirelesscontrollerhotspot20H2qpoperatornameOutput
	ToWirelesscontrollerhotspot20H2qpoperatornameOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameOutput
}

func (*Wirelesscontrollerhotspot20H2qpoperatorname) ElementType() reflect.Type {
	return reflect.TypeOf((**Wirelesscontrollerhotspot20H2qpoperatorname)(nil)).Elem()
}

func (i *Wirelesscontrollerhotspot20H2qpoperatorname) ToWirelesscontrollerhotspot20H2qpoperatornameOutput() Wirelesscontrollerhotspot20H2qpoperatornameOutput {
	return i.ToWirelesscontrollerhotspot20H2qpoperatornameOutputWithContext(context.Background())
}

func (i *Wirelesscontrollerhotspot20H2qpoperatorname) ToWirelesscontrollerhotspot20H2qpoperatornameOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qpoperatornameOutput)
}

// Wirelesscontrollerhotspot20H2qpoperatornameArrayInput is an input type that accepts Wirelesscontrollerhotspot20H2qpoperatornameArray and Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qpoperatornameArrayInput` via:
//
//	Wirelesscontrollerhotspot20H2qpoperatornameArray{ Wirelesscontrollerhotspot20H2qpoperatornameArgs{...} }
type Wirelesscontrollerhotspot20H2qpoperatornameArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qpoperatornameArrayOutput() Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput
	ToWirelesscontrollerhotspot20H2qpoperatornameArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput
}

type Wirelesscontrollerhotspot20H2qpoperatornameArray []Wirelesscontrollerhotspot20H2qpoperatornameInput

func (Wirelesscontrollerhotspot20H2qpoperatornameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Wirelesscontrollerhotspot20H2qpoperatorname)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qpoperatornameArray) ToWirelesscontrollerhotspot20H2qpoperatornameArrayOutput() Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput {
	return i.ToWirelesscontrollerhotspot20H2qpoperatornameArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qpoperatornameArray) ToWirelesscontrollerhotspot20H2qpoperatornameArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput)
}

// Wirelesscontrollerhotspot20H2qpoperatornameMapInput is an input type that accepts Wirelesscontrollerhotspot20H2qpoperatornameMap and Wirelesscontrollerhotspot20H2qpoperatornameMapOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20H2qpoperatornameMapInput` via:
//
//	Wirelesscontrollerhotspot20H2qpoperatornameMap{ "key": Wirelesscontrollerhotspot20H2qpoperatornameArgs{...} }
type Wirelesscontrollerhotspot20H2qpoperatornameMapInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20H2qpoperatornameMapOutput() Wirelesscontrollerhotspot20H2qpoperatornameMapOutput
	ToWirelesscontrollerhotspot20H2qpoperatornameMapOutputWithContext(context.Context) Wirelesscontrollerhotspot20H2qpoperatornameMapOutput
}

type Wirelesscontrollerhotspot20H2qpoperatornameMap map[string]Wirelesscontrollerhotspot20H2qpoperatornameInput

func (Wirelesscontrollerhotspot20H2qpoperatornameMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Wirelesscontrollerhotspot20H2qpoperatorname)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20H2qpoperatornameMap) ToWirelesscontrollerhotspot20H2qpoperatornameMapOutput() Wirelesscontrollerhotspot20H2qpoperatornameMapOutput {
	return i.ToWirelesscontrollerhotspot20H2qpoperatornameMapOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20H2qpoperatornameMap) ToWirelesscontrollerhotspot20H2qpoperatornameMapOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20H2qpoperatornameMapOutput)
}

type Wirelesscontrollerhotspot20H2qpoperatornameOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qpoperatornameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Wirelesscontrollerhotspot20H2qpoperatorname)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameOutput) ToWirelesscontrollerhotspot20H2qpoperatornameOutput() Wirelesscontrollerhotspot20H2qpoperatornameOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameOutput) ToWirelesscontrollerhotspot20H2qpoperatornameOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Wirelesscontrollerhotspot20H2qpoperatornameOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20H2qpoperatorname) pulumi.StringPtrOutput {
		return v.DynamicSortSubtable
	}).(pulumi.StringPtrOutput)
}

// Friendly name ID.
func (o Wirelesscontrollerhotspot20H2qpoperatornameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20H2qpoperatorname) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name list. The structure of `valueList` block is documented below.
func (o Wirelesscontrollerhotspot20H2qpoperatornameOutput) ValueLists() Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20H2qpoperatorname) Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput {
		return v.ValueLists
	}).(Wirelesscontrollerhotspot20H2qpoperatornameValueListArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Wirelesscontrollerhotspot20H2qpoperatornameOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20H2qpoperatorname) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Wirelesscontrollerhotspot20H2qpoperatorname)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput) ToWirelesscontrollerhotspot20H2qpoperatornameArrayOutput() Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput) ToWirelesscontrollerhotspot20H2qpoperatornameArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20H2qpoperatornameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Wirelesscontrollerhotspot20H2qpoperatorname {
		return vs[0].([]*Wirelesscontrollerhotspot20H2qpoperatorname)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20H2qpoperatornameOutput)
}

type Wirelesscontrollerhotspot20H2qpoperatornameMapOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20H2qpoperatornameMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Wirelesscontrollerhotspot20H2qpoperatorname)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameMapOutput) ToWirelesscontrollerhotspot20H2qpoperatornameMapOutput() Wirelesscontrollerhotspot20H2qpoperatornameMapOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameMapOutput) ToWirelesscontrollerhotspot20H2qpoperatornameMapOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20H2qpoperatornameMapOutput {
	return o
}

func (o Wirelesscontrollerhotspot20H2qpoperatornameMapOutput) MapIndex(k pulumi.StringInput) Wirelesscontrollerhotspot20H2qpoperatornameOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Wirelesscontrollerhotspot20H2qpoperatorname {
		return vs[0].(map[string]*Wirelesscontrollerhotspot20H2qpoperatorname)[vs[1].(string)]
	}).(Wirelesscontrollerhotspot20H2qpoperatornameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpoperatornameInput)(nil)).Elem(), &Wirelesscontrollerhotspot20H2qpoperatorname{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpoperatornameArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qpoperatornameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20H2qpoperatornameMapInput)(nil)).Elem(), Wirelesscontrollerhotspot20H2qpoperatornameMap{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qpoperatornameOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qpoperatornameArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20H2qpoperatornameMapOutput{})
}
