// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// FortiExtender extender profile configuration. Applies to FortiOS Version `>= 7.2.1`.
//
// ## Import
//
// # ExtensionController ExtenderProfile can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/extensioncontrollerExtenderprofile:ExtensioncontrollerExtenderprofile labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/extensioncontrollerExtenderprofile:ExtensioncontrollerExtenderprofile labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type ExtensioncontrollerExtenderprofile struct {
	pulumi.CustomResourceState

	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess pulumi.StringOutput `pulumi:"allowaccess"`
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit pulumi.IntOutput `pulumi:"bandwidthLimit"`
	// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
	Cellular ExtensioncontrollerExtenderprofileCellularOutput `pulumi:"cellular"`
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth pulumi.StringOutput `pulumi:"enforceBandwidth"`
	// Extension option. Valid values: `wan-extension`, `lan-extension`.
	Extension pulumi.StringOutput `pulumi:"extension"`
	// ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
	LanExtension ExtensioncontrollerExtenderprofileLanExtensionOutput `pulumi:"lanExtension"`
	// Set the managed extender's administrator password.
	LoginPassword pulumi.StringPtrOutput `pulumi:"loginPassword"`
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange pulumi.StringOutput `pulumi:"loginPasswordChange"`
	// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
	Model pulumi.StringOutput `pulumi:"model"`
	// FortiExtender profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewExtensioncontrollerExtenderprofile registers a new resource with the given unique name, arguments, and options.
func NewExtensioncontrollerExtenderprofile(ctx *pulumi.Context,
	name string, args *ExtensioncontrollerExtenderprofileArgs, opts ...pulumi.ResourceOption) (*ExtensioncontrollerExtenderprofile, error) {
	if args == nil {
		args = &ExtensioncontrollerExtenderprofileArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ExtensioncontrollerExtenderprofile
	err := ctx.RegisterResource("fortios:index/extensioncontrollerExtenderprofile:ExtensioncontrollerExtenderprofile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtensioncontrollerExtenderprofile gets an existing ExtensioncontrollerExtenderprofile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtensioncontrollerExtenderprofile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtensioncontrollerExtenderprofileState, opts ...pulumi.ResourceOption) (*ExtensioncontrollerExtenderprofile, error) {
	var resource ExtensioncontrollerExtenderprofile
	err := ctx.ReadResource("fortios:index/extensioncontrollerExtenderprofile:ExtensioncontrollerExtenderprofile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExtensioncontrollerExtenderprofile resources.
type extensioncontrollerExtenderprofileState struct {
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess *string `pulumi:"allowaccess"`
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit *int `pulumi:"bandwidthLimit"`
	// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
	Cellular *ExtensioncontrollerExtenderprofileCellular `pulumi:"cellular"`
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth *string `pulumi:"enforceBandwidth"`
	// Extension option. Valid values: `wan-extension`, `lan-extension`.
	Extension *string `pulumi:"extension"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
	LanExtension *ExtensioncontrollerExtenderprofileLanExtension `pulumi:"lanExtension"`
	// Set the managed extender's administrator password.
	LoginPassword *string `pulumi:"loginPassword"`
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange *string `pulumi:"loginPasswordChange"`
	// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
	Model *string `pulumi:"model"`
	// FortiExtender profile name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ExtensioncontrollerExtenderprofileState struct {
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess pulumi.StringPtrInput
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit pulumi.IntPtrInput
	// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
	Cellular ExtensioncontrollerExtenderprofileCellularPtrInput
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth pulumi.StringPtrInput
	// Extension option. Valid values: `wan-extension`, `lan-extension`.
	Extension pulumi.StringPtrInput
	// ID.
	Fosid pulumi.IntPtrInput
	// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
	LanExtension ExtensioncontrollerExtenderprofileLanExtensionPtrInput
	// Set the managed extender's administrator password.
	LoginPassword pulumi.StringPtrInput
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange pulumi.StringPtrInput
	// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
	Model pulumi.StringPtrInput
	// FortiExtender profile name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ExtensioncontrollerExtenderprofileState) ElementType() reflect.Type {
	return reflect.TypeOf((*extensioncontrollerExtenderprofileState)(nil)).Elem()
}

type extensioncontrollerExtenderprofileArgs struct {
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess *string `pulumi:"allowaccess"`
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit *int `pulumi:"bandwidthLimit"`
	// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
	Cellular *ExtensioncontrollerExtenderprofileCellular `pulumi:"cellular"`
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth *string `pulumi:"enforceBandwidth"`
	// Extension option. Valid values: `wan-extension`, `lan-extension`.
	Extension *string `pulumi:"extension"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
	LanExtension *ExtensioncontrollerExtenderprofileLanExtension `pulumi:"lanExtension"`
	// Set the managed extender's administrator password.
	LoginPassword *string `pulumi:"loginPassword"`
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange *string `pulumi:"loginPasswordChange"`
	// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
	Model *string `pulumi:"model"`
	// FortiExtender profile name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a ExtensioncontrollerExtenderprofile resource.
type ExtensioncontrollerExtenderprofileArgs struct {
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess pulumi.StringPtrInput
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit pulumi.IntPtrInput
	// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
	Cellular ExtensioncontrollerExtenderprofileCellularPtrInput
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth pulumi.StringPtrInput
	// Extension option. Valid values: `wan-extension`, `lan-extension`.
	Extension pulumi.StringPtrInput
	// ID.
	Fosid pulumi.IntPtrInput
	// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
	LanExtension ExtensioncontrollerExtenderprofileLanExtensionPtrInput
	// Set the managed extender's administrator password.
	LoginPassword pulumi.StringPtrInput
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange pulumi.StringPtrInput
	// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
	Model pulumi.StringPtrInput
	// FortiExtender profile name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ExtensioncontrollerExtenderprofileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extensioncontrollerExtenderprofileArgs)(nil)).Elem()
}

type ExtensioncontrollerExtenderprofileInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileOutput() ExtensioncontrollerExtenderprofileOutput
	ToExtensioncontrollerExtenderprofileOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileOutput
}

func (*ExtensioncontrollerExtenderprofile) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofile)(nil)).Elem()
}

func (i *ExtensioncontrollerExtenderprofile) ToExtensioncontrollerExtenderprofileOutput() ExtensioncontrollerExtenderprofileOutput {
	return i.ToExtensioncontrollerExtenderprofileOutputWithContext(context.Background())
}

func (i *ExtensioncontrollerExtenderprofile) ToExtensioncontrollerExtenderprofileOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileOutput)
}

// ExtensioncontrollerExtenderprofileArrayInput is an input type that accepts ExtensioncontrollerExtenderprofileArray and ExtensioncontrollerExtenderprofileArrayOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileArrayInput` via:
//
//	ExtensioncontrollerExtenderprofileArray{ ExtensioncontrollerExtenderprofileArgs{...} }
type ExtensioncontrollerExtenderprofileArrayInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileArrayOutput() ExtensioncontrollerExtenderprofileArrayOutput
	ToExtensioncontrollerExtenderprofileArrayOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileArrayOutput
}

type ExtensioncontrollerExtenderprofileArray []ExtensioncontrollerExtenderprofileInput

func (ExtensioncontrollerExtenderprofileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtensioncontrollerExtenderprofile)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileArray) ToExtensioncontrollerExtenderprofileArrayOutput() ExtensioncontrollerExtenderprofileArrayOutput {
	return i.ToExtensioncontrollerExtenderprofileArrayOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileArray) ToExtensioncontrollerExtenderprofileArrayOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileArrayOutput)
}

// ExtensioncontrollerExtenderprofileMapInput is an input type that accepts ExtensioncontrollerExtenderprofileMap and ExtensioncontrollerExtenderprofileMapOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileMapInput` via:
//
//	ExtensioncontrollerExtenderprofileMap{ "key": ExtensioncontrollerExtenderprofileArgs{...} }
type ExtensioncontrollerExtenderprofileMapInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileMapOutput() ExtensioncontrollerExtenderprofileMapOutput
	ToExtensioncontrollerExtenderprofileMapOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileMapOutput
}

type ExtensioncontrollerExtenderprofileMap map[string]ExtensioncontrollerExtenderprofileInput

func (ExtensioncontrollerExtenderprofileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtensioncontrollerExtenderprofile)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileMap) ToExtensioncontrollerExtenderprofileMapOutput() ExtensioncontrollerExtenderprofileMapOutput {
	return i.ToExtensioncontrollerExtenderprofileMapOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileMap) ToExtensioncontrollerExtenderprofileMapOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileMapOutput)
}

type ExtensioncontrollerExtenderprofileOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofile)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileOutput) ToExtensioncontrollerExtenderprofileOutput() ExtensioncontrollerExtenderprofileOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileOutput) ToExtensioncontrollerExtenderprofileOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileOutput {
	return o
}

// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
func (o ExtensioncontrollerExtenderprofileOutput) Allowaccess() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) pulumi.StringOutput { return v.Allowaccess }).(pulumi.StringOutput)
}

// FortiExtender LAN extension bandwidth limit (Mbps).
func (o ExtensioncontrollerExtenderprofileOutput) BandwidthLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) pulumi.IntOutput { return v.BandwidthLimit }).(pulumi.IntOutput)
}

// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
func (o ExtensioncontrollerExtenderprofileOutput) Cellular() ExtensioncontrollerExtenderprofileCellularOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) ExtensioncontrollerExtenderprofileCellularOutput {
		return v.Cellular
	}).(ExtensioncontrollerExtenderprofileCellularOutput)
}

// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
func (o ExtensioncontrollerExtenderprofileOutput) EnforceBandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) pulumi.StringOutput { return v.EnforceBandwidth }).(pulumi.StringOutput)
}

// Extension option. Valid values: `wan-extension`, `lan-extension`.
func (o ExtensioncontrollerExtenderprofileOutput) Extension() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) pulumi.StringOutput { return v.Extension }).(pulumi.StringOutput)
}

// ID.
func (o ExtensioncontrollerExtenderprofileOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
func (o ExtensioncontrollerExtenderprofileOutput) LanExtension() ExtensioncontrollerExtenderprofileLanExtensionOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) ExtensioncontrollerExtenderprofileLanExtensionOutput {
		return v.LanExtension
	}).(ExtensioncontrollerExtenderprofileLanExtensionOutput)
}

// Set the managed extender's administrator password.
func (o ExtensioncontrollerExtenderprofileOutput) LoginPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) pulumi.StringPtrOutput { return v.LoginPassword }).(pulumi.StringPtrOutput)
}

// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
func (o ExtensioncontrollerExtenderprofileOutput) LoginPasswordChange() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) pulumi.StringOutput { return v.LoginPasswordChange }).(pulumi.StringOutput)
}

// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
func (o ExtensioncontrollerExtenderprofileOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) pulumi.StringOutput { return v.Model }).(pulumi.StringOutput)
}

// FortiExtender profile name.
func (o ExtensioncontrollerExtenderprofileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ExtensioncontrollerExtenderprofileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileArrayOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtensioncontrollerExtenderprofile)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileArrayOutput) ToExtensioncontrollerExtenderprofileArrayOutput() ExtensioncontrollerExtenderprofileArrayOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileArrayOutput) ToExtensioncontrollerExtenderprofileArrayOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileArrayOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileArrayOutput) Index(i pulumi.IntInput) ExtensioncontrollerExtenderprofileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExtensioncontrollerExtenderprofile {
		return vs[0].([]*ExtensioncontrollerExtenderprofile)[vs[1].(int)]
	}).(ExtensioncontrollerExtenderprofileOutput)
}

type ExtensioncontrollerExtenderprofileMapOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtensioncontrollerExtenderprofile)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileMapOutput) ToExtensioncontrollerExtenderprofileMapOutput() ExtensioncontrollerExtenderprofileMapOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileMapOutput) ToExtensioncontrollerExtenderprofileMapOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileMapOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileMapOutput) MapIndex(k pulumi.StringInput) ExtensioncontrollerExtenderprofileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExtensioncontrollerExtenderprofile {
		return vs[0].(map[string]*ExtensioncontrollerExtenderprofile)[vs[1].(string)]
	}).(ExtensioncontrollerExtenderprofileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileInput)(nil)).Elem(), &ExtensioncontrollerExtenderprofile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileArrayInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileMapInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileMap{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileArrayOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileMapOutput{})
}
