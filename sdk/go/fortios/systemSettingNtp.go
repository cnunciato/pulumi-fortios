// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to configure Network Time Protocol (NTP) servers of FortiOS.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `SystemNtp`, we recommend that you use the new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSystemSettingNtp(ctx, "test2", &fortios.SystemSettingNtpArgs{
//				Ntpservers: pulumi.StringArray{
//					pulumi.String("1.1.1.1"),
//					pulumi.String("3.3.3.3"),
//				},
//				Ntpsync: pulumi.String("disable"),
//				Type:    pulumi.String("custom"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SystemSettingNtp struct {
	pulumi.CustomResourceState

	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers pulumi.StringArrayOutput `pulumi:"ntpservers"`
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync pulumi.StringOutput `pulumi:"ntpsync"`
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSystemSettingNtp registers a new resource with the given unique name, arguments, and options.
func NewSystemSettingNtp(ctx *pulumi.Context,
	name string, args *SystemSettingNtpArgs, opts ...pulumi.ResourceOption) (*SystemSettingNtp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemSettingNtp
	err := ctx.RegisterResource("fortios:index/systemSettingNtp:SystemSettingNtp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSettingNtp gets an existing SystemSettingNtp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSettingNtp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSettingNtpState, opts ...pulumi.ResourceOption) (*SystemSettingNtp, error) {
	var resource SystemSettingNtp
	err := ctx.ReadResource("fortios:index/systemSettingNtp:SystemSettingNtp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSettingNtp resources.
type systemSettingNtpState struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers []string `pulumi:"ntpservers"`
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync *string `pulumi:"ntpsync"`
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type *string `pulumi:"type"`
}

type SystemSettingNtpState struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers pulumi.StringArrayInput
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync pulumi.StringPtrInput
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type pulumi.StringPtrInput
}

func (SystemSettingNtpState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSettingNtpState)(nil)).Elem()
}

type systemSettingNtpArgs struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers []string `pulumi:"ntpservers"`
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync *string `pulumi:"ntpsync"`
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a SystemSettingNtp resource.
type SystemSettingNtpArgs struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers pulumi.StringArrayInput
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync pulumi.StringPtrInput
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type pulumi.StringInput
}

func (SystemSettingNtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSettingNtpArgs)(nil)).Elem()
}

type SystemSettingNtpInput interface {
	pulumi.Input

	ToSystemSettingNtpOutput() SystemSettingNtpOutput
	ToSystemSettingNtpOutputWithContext(ctx context.Context) SystemSettingNtpOutput
}

func (*SystemSettingNtp) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSettingNtp)(nil)).Elem()
}

func (i *SystemSettingNtp) ToSystemSettingNtpOutput() SystemSettingNtpOutput {
	return i.ToSystemSettingNtpOutputWithContext(context.Background())
}

func (i *SystemSettingNtp) ToSystemSettingNtpOutputWithContext(ctx context.Context) SystemSettingNtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingNtpOutput)
}

// SystemSettingNtpArrayInput is an input type that accepts SystemSettingNtpArray and SystemSettingNtpArrayOutput values.
// You can construct a concrete instance of `SystemSettingNtpArrayInput` via:
//
//	SystemSettingNtpArray{ SystemSettingNtpArgs{...} }
type SystemSettingNtpArrayInput interface {
	pulumi.Input

	ToSystemSettingNtpArrayOutput() SystemSettingNtpArrayOutput
	ToSystemSettingNtpArrayOutputWithContext(context.Context) SystemSettingNtpArrayOutput
}

type SystemSettingNtpArray []SystemSettingNtpInput

func (SystemSettingNtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSettingNtp)(nil)).Elem()
}

func (i SystemSettingNtpArray) ToSystemSettingNtpArrayOutput() SystemSettingNtpArrayOutput {
	return i.ToSystemSettingNtpArrayOutputWithContext(context.Background())
}

func (i SystemSettingNtpArray) ToSystemSettingNtpArrayOutputWithContext(ctx context.Context) SystemSettingNtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingNtpArrayOutput)
}

// SystemSettingNtpMapInput is an input type that accepts SystemSettingNtpMap and SystemSettingNtpMapOutput values.
// You can construct a concrete instance of `SystemSettingNtpMapInput` via:
//
//	SystemSettingNtpMap{ "key": SystemSettingNtpArgs{...} }
type SystemSettingNtpMapInput interface {
	pulumi.Input

	ToSystemSettingNtpMapOutput() SystemSettingNtpMapOutput
	ToSystemSettingNtpMapOutputWithContext(context.Context) SystemSettingNtpMapOutput
}

type SystemSettingNtpMap map[string]SystemSettingNtpInput

func (SystemSettingNtpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSettingNtp)(nil)).Elem()
}

func (i SystemSettingNtpMap) ToSystemSettingNtpMapOutput() SystemSettingNtpMapOutput {
	return i.ToSystemSettingNtpMapOutputWithContext(context.Background())
}

func (i SystemSettingNtpMap) ToSystemSettingNtpMapOutputWithContext(ctx context.Context) SystemSettingNtpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingNtpMapOutput)
}

type SystemSettingNtpOutput struct{ *pulumi.OutputState }

func (SystemSettingNtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSettingNtp)(nil)).Elem()
}

func (o SystemSettingNtpOutput) ToSystemSettingNtpOutput() SystemSettingNtpOutput {
	return o
}

func (o SystemSettingNtpOutput) ToSystemSettingNtpOutputWithContext(ctx context.Context) SystemSettingNtpOutput {
	return o
}

// Configure the FortiGate to connect to any available third-party NTP server.
func (o SystemSettingNtpOutput) Ntpservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SystemSettingNtp) pulumi.StringArrayOutput { return v.Ntpservers }).(pulumi.StringArrayOutput)
}

// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
func (o SystemSettingNtpOutput) Ntpsync() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSettingNtp) pulumi.StringOutput { return v.Ntpsync }).(pulumi.StringOutput)
}

// Use the FortiGuard NTP server or any other available NTP Server.
func (o SystemSettingNtpOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSettingNtp) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type SystemSettingNtpArrayOutput struct{ *pulumi.OutputState }

func (SystemSettingNtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSettingNtp)(nil)).Elem()
}

func (o SystemSettingNtpArrayOutput) ToSystemSettingNtpArrayOutput() SystemSettingNtpArrayOutput {
	return o
}

func (o SystemSettingNtpArrayOutput) ToSystemSettingNtpArrayOutputWithContext(ctx context.Context) SystemSettingNtpArrayOutput {
	return o
}

func (o SystemSettingNtpArrayOutput) Index(i pulumi.IntInput) SystemSettingNtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSettingNtp {
		return vs[0].([]*SystemSettingNtp)[vs[1].(int)]
	}).(SystemSettingNtpOutput)
}

type SystemSettingNtpMapOutput struct{ *pulumi.OutputState }

func (SystemSettingNtpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSettingNtp)(nil)).Elem()
}

func (o SystemSettingNtpMapOutput) ToSystemSettingNtpMapOutput() SystemSettingNtpMapOutput {
	return o
}

func (o SystemSettingNtpMapOutput) ToSystemSettingNtpMapOutputWithContext(ctx context.Context) SystemSettingNtpMapOutput {
	return o
}

func (o SystemSettingNtpMapOutput) MapIndex(k pulumi.StringInput) SystemSettingNtpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSettingNtp {
		return vs[0].(map[string]*SystemSettingNtp)[vs[1].(string)]
	}).(SystemSettingNtpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingNtpInput)(nil)).Elem(), &SystemSettingNtp{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingNtpArrayInput)(nil)).Elem(), SystemSettingNtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingNtpMapInput)(nil)).Elem(), SystemSettingNtpMap{})
	pulumi.RegisterOutputType(SystemSettingNtpOutput{})
	pulumi.RegisterOutputType(SystemSettingNtpArrayOutput{})
	pulumi.RegisterOutputType(SystemSettingNtpMapOutput{})
}
