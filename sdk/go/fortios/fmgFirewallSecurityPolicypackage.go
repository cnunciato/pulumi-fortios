// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource supports Create/Read/Update/Delete firewall security policypackage on FortiManager which could be installed to the FortiGate later
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewFmgFirewallSecurityPolicypackage(ctx, "test1", &fortios.FmgFirewallSecurityPolicypackageArgs{
//				Target: pulumi.String("FGVM64-test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FmgFirewallSecurityPolicypackage struct {
	pulumi.CustomResourceState

	// Source ADOM name. default is 'root'
	Adom pulumi.StringPtrOutput `pulumi:"adom"`
	// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
	InspectionMode pulumi.StringPtrOutput `pulumi:"inspectionMode"`
	// Security policy package name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The installation target.
	Target pulumi.StringPtrOutput `pulumi:"target"`
	// Vdom of managed device. default is 'root'
	Vdom pulumi.StringPtrOutput `pulumi:"vdom"`
}

// NewFmgFirewallSecurityPolicypackage registers a new resource with the given unique name, arguments, and options.
func NewFmgFirewallSecurityPolicypackage(ctx *pulumi.Context,
	name string, args *FmgFirewallSecurityPolicypackageArgs, opts ...pulumi.ResourceOption) (*FmgFirewallSecurityPolicypackage, error) {
	if args == nil {
		args = &FmgFirewallSecurityPolicypackageArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FmgFirewallSecurityPolicypackage
	err := ctx.RegisterResource("fortios:index/fmgFirewallSecurityPolicypackage:FmgFirewallSecurityPolicypackage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFmgFirewallSecurityPolicypackage gets an existing FmgFirewallSecurityPolicypackage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFmgFirewallSecurityPolicypackage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FmgFirewallSecurityPolicypackageState, opts ...pulumi.ResourceOption) (*FmgFirewallSecurityPolicypackage, error) {
	var resource FmgFirewallSecurityPolicypackage
	err := ctx.ReadResource("fortios:index/fmgFirewallSecurityPolicypackage:FmgFirewallSecurityPolicypackage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FmgFirewallSecurityPolicypackage resources.
type fmgFirewallSecurityPolicypackageState struct {
	// Source ADOM name. default is 'root'
	Adom *string `pulumi:"adom"`
	// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
	InspectionMode *string `pulumi:"inspectionMode"`
	// Security policy package name.
	Name *string `pulumi:"name"`
	// The installation target.
	Target *string `pulumi:"target"`
	// Vdom of managed device. default is 'root'
	Vdom *string `pulumi:"vdom"`
}

type FmgFirewallSecurityPolicypackageState struct {
	// Source ADOM name. default is 'root'
	Adom pulumi.StringPtrInput
	// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
	InspectionMode pulumi.StringPtrInput
	// Security policy package name.
	Name pulumi.StringPtrInput
	// The installation target.
	Target pulumi.StringPtrInput
	// Vdom of managed device. default is 'root'
	Vdom pulumi.StringPtrInput
}

func (FmgFirewallSecurityPolicypackageState) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgFirewallSecurityPolicypackageState)(nil)).Elem()
}

type fmgFirewallSecurityPolicypackageArgs struct {
	// Source ADOM name. default is 'root'
	Adom *string `pulumi:"adom"`
	// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
	InspectionMode *string `pulumi:"inspectionMode"`
	// Security policy package name.
	Name *string `pulumi:"name"`
	// The installation target.
	Target *string `pulumi:"target"`
	// Vdom of managed device. default is 'root'
	Vdom *string `pulumi:"vdom"`
}

// The set of arguments for constructing a FmgFirewallSecurityPolicypackage resource.
type FmgFirewallSecurityPolicypackageArgs struct {
	// Source ADOM name. default is 'root'
	Adom pulumi.StringPtrInput
	// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
	InspectionMode pulumi.StringPtrInput
	// Security policy package name.
	Name pulumi.StringPtrInput
	// The installation target.
	Target pulumi.StringPtrInput
	// Vdom of managed device. default is 'root'
	Vdom pulumi.StringPtrInput
}

func (FmgFirewallSecurityPolicypackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgFirewallSecurityPolicypackageArgs)(nil)).Elem()
}

type FmgFirewallSecurityPolicypackageInput interface {
	pulumi.Input

	ToFmgFirewallSecurityPolicypackageOutput() FmgFirewallSecurityPolicypackageOutput
	ToFmgFirewallSecurityPolicypackageOutputWithContext(ctx context.Context) FmgFirewallSecurityPolicypackageOutput
}

func (*FmgFirewallSecurityPolicypackage) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgFirewallSecurityPolicypackage)(nil)).Elem()
}

func (i *FmgFirewallSecurityPolicypackage) ToFmgFirewallSecurityPolicypackageOutput() FmgFirewallSecurityPolicypackageOutput {
	return i.ToFmgFirewallSecurityPolicypackageOutputWithContext(context.Background())
}

func (i *FmgFirewallSecurityPolicypackage) ToFmgFirewallSecurityPolicypackageOutputWithContext(ctx context.Context) FmgFirewallSecurityPolicypackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgFirewallSecurityPolicypackageOutput)
}

// FmgFirewallSecurityPolicypackageArrayInput is an input type that accepts FmgFirewallSecurityPolicypackageArray and FmgFirewallSecurityPolicypackageArrayOutput values.
// You can construct a concrete instance of `FmgFirewallSecurityPolicypackageArrayInput` via:
//
//	FmgFirewallSecurityPolicypackageArray{ FmgFirewallSecurityPolicypackageArgs{...} }
type FmgFirewallSecurityPolicypackageArrayInput interface {
	pulumi.Input

	ToFmgFirewallSecurityPolicypackageArrayOutput() FmgFirewallSecurityPolicypackageArrayOutput
	ToFmgFirewallSecurityPolicypackageArrayOutputWithContext(context.Context) FmgFirewallSecurityPolicypackageArrayOutput
}

type FmgFirewallSecurityPolicypackageArray []FmgFirewallSecurityPolicypackageInput

func (FmgFirewallSecurityPolicypackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgFirewallSecurityPolicypackage)(nil)).Elem()
}

func (i FmgFirewallSecurityPolicypackageArray) ToFmgFirewallSecurityPolicypackageArrayOutput() FmgFirewallSecurityPolicypackageArrayOutput {
	return i.ToFmgFirewallSecurityPolicypackageArrayOutputWithContext(context.Background())
}

func (i FmgFirewallSecurityPolicypackageArray) ToFmgFirewallSecurityPolicypackageArrayOutputWithContext(ctx context.Context) FmgFirewallSecurityPolicypackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgFirewallSecurityPolicypackageArrayOutput)
}

// FmgFirewallSecurityPolicypackageMapInput is an input type that accepts FmgFirewallSecurityPolicypackageMap and FmgFirewallSecurityPolicypackageMapOutput values.
// You can construct a concrete instance of `FmgFirewallSecurityPolicypackageMapInput` via:
//
//	FmgFirewallSecurityPolicypackageMap{ "key": FmgFirewallSecurityPolicypackageArgs{...} }
type FmgFirewallSecurityPolicypackageMapInput interface {
	pulumi.Input

	ToFmgFirewallSecurityPolicypackageMapOutput() FmgFirewallSecurityPolicypackageMapOutput
	ToFmgFirewallSecurityPolicypackageMapOutputWithContext(context.Context) FmgFirewallSecurityPolicypackageMapOutput
}

type FmgFirewallSecurityPolicypackageMap map[string]FmgFirewallSecurityPolicypackageInput

func (FmgFirewallSecurityPolicypackageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgFirewallSecurityPolicypackage)(nil)).Elem()
}

func (i FmgFirewallSecurityPolicypackageMap) ToFmgFirewallSecurityPolicypackageMapOutput() FmgFirewallSecurityPolicypackageMapOutput {
	return i.ToFmgFirewallSecurityPolicypackageMapOutputWithContext(context.Background())
}

func (i FmgFirewallSecurityPolicypackageMap) ToFmgFirewallSecurityPolicypackageMapOutputWithContext(ctx context.Context) FmgFirewallSecurityPolicypackageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgFirewallSecurityPolicypackageMapOutput)
}

type FmgFirewallSecurityPolicypackageOutput struct{ *pulumi.OutputState }

func (FmgFirewallSecurityPolicypackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgFirewallSecurityPolicypackage)(nil)).Elem()
}

func (o FmgFirewallSecurityPolicypackageOutput) ToFmgFirewallSecurityPolicypackageOutput() FmgFirewallSecurityPolicypackageOutput {
	return o
}

func (o FmgFirewallSecurityPolicypackageOutput) ToFmgFirewallSecurityPolicypackageOutputWithContext(ctx context.Context) FmgFirewallSecurityPolicypackageOutput {
	return o
}

// Source ADOM name. default is 'root'
func (o FmgFirewallSecurityPolicypackageOutput) Adom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgFirewallSecurityPolicypackage) pulumi.StringPtrOutput { return v.Adom }).(pulumi.StringPtrOutput)
}

// Inspection Mode. Enum:[flow, proxy]. default is 'flow'
func (o FmgFirewallSecurityPolicypackageOutput) InspectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgFirewallSecurityPolicypackage) pulumi.StringPtrOutput { return v.InspectionMode }).(pulumi.StringPtrOutput)
}

// Security policy package name.
func (o FmgFirewallSecurityPolicypackageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FmgFirewallSecurityPolicypackage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The installation target.
func (o FmgFirewallSecurityPolicypackageOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgFirewallSecurityPolicypackage) pulumi.StringPtrOutput { return v.Target }).(pulumi.StringPtrOutput)
}

// Vdom of managed device. default is 'root'
func (o FmgFirewallSecurityPolicypackageOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgFirewallSecurityPolicypackage) pulumi.StringPtrOutput { return v.Vdom }).(pulumi.StringPtrOutput)
}

type FmgFirewallSecurityPolicypackageArrayOutput struct{ *pulumi.OutputState }

func (FmgFirewallSecurityPolicypackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgFirewallSecurityPolicypackage)(nil)).Elem()
}

func (o FmgFirewallSecurityPolicypackageArrayOutput) ToFmgFirewallSecurityPolicypackageArrayOutput() FmgFirewallSecurityPolicypackageArrayOutput {
	return o
}

func (o FmgFirewallSecurityPolicypackageArrayOutput) ToFmgFirewallSecurityPolicypackageArrayOutputWithContext(ctx context.Context) FmgFirewallSecurityPolicypackageArrayOutput {
	return o
}

func (o FmgFirewallSecurityPolicypackageArrayOutput) Index(i pulumi.IntInput) FmgFirewallSecurityPolicypackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FmgFirewallSecurityPolicypackage {
		return vs[0].([]*FmgFirewallSecurityPolicypackage)[vs[1].(int)]
	}).(FmgFirewallSecurityPolicypackageOutput)
}

type FmgFirewallSecurityPolicypackageMapOutput struct{ *pulumi.OutputState }

func (FmgFirewallSecurityPolicypackageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgFirewallSecurityPolicypackage)(nil)).Elem()
}

func (o FmgFirewallSecurityPolicypackageMapOutput) ToFmgFirewallSecurityPolicypackageMapOutput() FmgFirewallSecurityPolicypackageMapOutput {
	return o
}

func (o FmgFirewallSecurityPolicypackageMapOutput) ToFmgFirewallSecurityPolicypackageMapOutputWithContext(ctx context.Context) FmgFirewallSecurityPolicypackageMapOutput {
	return o
}

func (o FmgFirewallSecurityPolicypackageMapOutput) MapIndex(k pulumi.StringInput) FmgFirewallSecurityPolicypackageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FmgFirewallSecurityPolicypackage {
		return vs[0].(map[string]*FmgFirewallSecurityPolicypackage)[vs[1].(string)]
	}).(FmgFirewallSecurityPolicypackageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FmgFirewallSecurityPolicypackageInput)(nil)).Elem(), &FmgFirewallSecurityPolicypackage{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgFirewallSecurityPolicypackageArrayInput)(nil)).Elem(), FmgFirewallSecurityPolicypackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgFirewallSecurityPolicypackageMapInput)(nil)).Elem(), FmgFirewallSecurityPolicypackageMap{})
	pulumi.RegisterOutputType(FmgFirewallSecurityPolicypackageOutput{})
	pulumi.RegisterOutputType(FmgFirewallSecurityPolicypackageArrayOutput{})
	pulumi.RegisterOutputType(FmgFirewallSecurityPolicypackageMapOutput{})
}
