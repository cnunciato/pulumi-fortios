// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// OSPF interface configuration.
//
// > The provider supports the definition of Ospf-Interface in Router Ospf `RouterOspf`, and also allows the definition of separate Ospf-Interface resources `RouterospfOspfinterface`, but do not use a `RouterOspf` with in-line Ospf-Interface in conjunction with any `RouterospfOspfinterface` resources, otherwise conflicts and overwrite will occur.
//
// ## Import
//
// # Routerospf OspfInterface can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/routerospfOspfinterface:RouterospfOspfinterface labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/routerospfOspfinterface:RouterospfOspfinterface labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type RouterospfOspfinterface struct {
	pulumi.CustomResourceState

	// Authentication type.
	Authentication pulumi.StringOutput `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey pulumi.StringPtrOutput `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringOutput `pulumi:"bfd"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntOutput `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
	DatabaseFilterOut pulumi.StringOutput `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval pulumi.IntOutput `pulumi:"deadInterval"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Hello interval.
	HelloInterval pulumi.IntOutput `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier pulumi.IntOutput `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// IP address.
	Ip pulumi.StringOutput `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain pulumi.StringOutput `pulumi:"keychain"`
	// MD5 key.
	Md5Key pulumi.StringOutput `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringOutput `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys RouterospfOspfinterfaceMd5KeyArrayOutput `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu pulumi.IntOutput `pulumi:"mtu"`
	// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
	MtuIgnore pulumi.StringOutput `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType pulumi.StringOutput `pulumi:"networkType"`
	// Prefix length.
	PrefixLength pulumi.IntOutput `pulumi:"prefixLength"`
	// Priority.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout pulumi.IntOutput `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval pulumi.IntOutput `pulumi:"retransmitInterval"`
	// Enable/disable status. Valid values: `disable`, `enable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Transmit delay.
	TransmitDelay pulumi.IntOutput `pulumi:"transmitDelay"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	//
	// The `md5Keys` block supports:
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewRouterospfOspfinterface registers a new resource with the given unique name, arguments, and options.
func NewRouterospfOspfinterface(ctx *pulumi.Context,
	name string, args *RouterospfOspfinterfaceArgs, opts ...pulumi.ResourceOption) (*RouterospfOspfinterface, error) {
	if args == nil {
		args = &RouterospfOspfinterfaceArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource RouterospfOspfinterface
	err := ctx.RegisterResource("fortios:index/routerospfOspfinterface:RouterospfOspfinterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterospfOspfinterface gets an existing RouterospfOspfinterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterospfOspfinterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterospfOspfinterfaceState, opts ...pulumi.ResourceOption) (*RouterospfOspfinterface, error) {
	var resource RouterospfOspfinterface
	err := ctx.ReadResource("fortios:index/routerospfOspfinterface:RouterospfOspfinterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterospfOspfinterface resources.
type routerospfOspfinterfaceState struct {
	// Authentication type.
	Authentication *string `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey *string `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
	DatabaseFilterOut *string `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier *int `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface *string `pulumi:"interface"`
	// IP address.
	Ip *string `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain *string `pulumi:"keychain"`
	// MD5 key.
	Md5Key *string `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain *string `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys []RouterospfOspfinterfaceMd5Key `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu *int `pulumi:"mtu"`
	// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
	MtuIgnore *string `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name *string `pulumi:"name"`
	// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType *string `pulumi:"networkType"`
	// Prefix length.
	PrefixLength *int `pulumi:"prefixLength"`
	// Priority.
	Priority *int `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout *int `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Enable/disable status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	//
	// The `md5Keys` block supports:
	Vdomparam *string `pulumi:"vdomparam"`
}

type RouterospfOspfinterfaceState struct {
	// Authentication type.
	Authentication pulumi.StringPtrInput
	// Authentication key.
	AuthenticationKey pulumi.StringPtrInput
	// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput
	// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
	DatabaseFilterOut pulumi.StringPtrInput
	// Dead interval.
	DeadInterval pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Hello interval.
	HelloInterval pulumi.IntPtrInput
	// Number of hello packets within dead interval.
	HelloMultiplier pulumi.IntPtrInput
	// Configuration interface name.
	Interface pulumi.StringPtrInput
	// IP address.
	Ip pulumi.StringPtrInput
	// Message-digest key-chain name.
	Keychain pulumi.StringPtrInput
	// MD5 key.
	Md5Key pulumi.StringPtrInput
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringPtrInput
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys RouterospfOspfinterfaceMd5KeyArrayInput
	// MTU for database description packets.
	Mtu pulumi.IntPtrInput
	// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
	MtuIgnore pulumi.StringPtrInput
	// Interface entry name.
	Name pulumi.StringPtrInput
	// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType pulumi.StringPtrInput
	// Prefix length.
	PrefixLength pulumi.IntPtrInput
	// Priority.
	Priority pulumi.IntPtrInput
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout pulumi.IntPtrInput
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput
	// Enable/disable status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	//
	// The `md5Keys` block supports:
	Vdomparam pulumi.StringPtrInput
}

func (RouterospfOspfinterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerospfOspfinterfaceState)(nil)).Elem()
}

type routerospfOspfinterfaceArgs struct {
	// Authentication type.
	Authentication *string `pulumi:"authentication"`
	// Authentication key.
	AuthenticationKey *string `pulumi:"authenticationKey"`
	// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost *int `pulumi:"cost"`
	// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
	DatabaseFilterOut *string `pulumi:"databaseFilterOut"`
	// Dead interval.
	DeadInterval *int `pulumi:"deadInterval"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Hello interval.
	HelloInterval *int `pulumi:"helloInterval"`
	// Number of hello packets within dead interval.
	HelloMultiplier *int `pulumi:"helloMultiplier"`
	// Configuration interface name.
	Interface *string `pulumi:"interface"`
	// IP address.
	Ip *string `pulumi:"ip"`
	// Message-digest key-chain name.
	Keychain *string `pulumi:"keychain"`
	// MD5 key.
	Md5Key *string `pulumi:"md5Key"`
	// Authentication MD5 key-chain name.
	Md5Keychain *string `pulumi:"md5Keychain"`
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys []RouterospfOspfinterfaceMd5Key `pulumi:"md5Keys"`
	// MTU for database description packets.
	Mtu *int `pulumi:"mtu"`
	// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
	MtuIgnore *string `pulumi:"mtuIgnore"`
	// Interface entry name.
	Name *string `pulumi:"name"`
	// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType *string `pulumi:"networkType"`
	// Prefix length.
	PrefixLength *int `pulumi:"prefixLength"`
	// Priority.
	Priority *int `pulumi:"priority"`
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout *int `pulumi:"resyncTimeout"`
	// Retransmit interval.
	RetransmitInterval *int `pulumi:"retransmitInterval"`
	// Enable/disable status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Transmit delay.
	TransmitDelay *int `pulumi:"transmitDelay"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	//
	// The `md5Keys` block supports:
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a RouterospfOspfinterface resource.
type RouterospfOspfinterfaceArgs struct {
	// Authentication type.
	Authentication pulumi.StringPtrInput
	// Authentication key.
	AuthenticationKey pulumi.StringPtrInput
	// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
	Cost pulumi.IntPtrInput
	// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
	DatabaseFilterOut pulumi.StringPtrInput
	// Dead interval.
	DeadInterval pulumi.IntPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Hello interval.
	HelloInterval pulumi.IntPtrInput
	// Number of hello packets within dead interval.
	HelloMultiplier pulumi.IntPtrInput
	// Configuration interface name.
	Interface pulumi.StringPtrInput
	// IP address.
	Ip pulumi.StringPtrInput
	// Message-digest key-chain name.
	Keychain pulumi.StringPtrInput
	// MD5 key.
	Md5Key pulumi.StringPtrInput
	// Authentication MD5 key-chain name.
	Md5Keychain pulumi.StringPtrInput
	// MD5 key. The structure of `md5Keys` block is documented below.
	Md5Keys RouterospfOspfinterfaceMd5KeyArrayInput
	// MTU for database description packets.
	Mtu pulumi.IntPtrInput
	// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
	MtuIgnore pulumi.StringPtrInput
	// Interface entry name.
	Name pulumi.StringPtrInput
	// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
	NetworkType pulumi.StringPtrInput
	// Prefix length.
	PrefixLength pulumi.IntPtrInput
	// Priority.
	Priority pulumi.IntPtrInput
	// Graceful restart neighbor resynchronization timeout.
	ResyncTimeout pulumi.IntPtrInput
	// Retransmit interval.
	RetransmitInterval pulumi.IntPtrInput
	// Enable/disable status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Transmit delay.
	TransmitDelay pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	//
	// The `md5Keys` block supports:
	Vdomparam pulumi.StringPtrInput
}

func (RouterospfOspfinterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerospfOspfinterfaceArgs)(nil)).Elem()
}

type RouterospfOspfinterfaceInput interface {
	pulumi.Input

	ToRouterospfOspfinterfaceOutput() RouterospfOspfinterfaceOutput
	ToRouterospfOspfinterfaceOutputWithContext(ctx context.Context) RouterospfOspfinterfaceOutput
}

func (*RouterospfOspfinterface) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterospfOspfinterface)(nil)).Elem()
}

func (i *RouterospfOspfinterface) ToRouterospfOspfinterfaceOutput() RouterospfOspfinterfaceOutput {
	return i.ToRouterospfOspfinterfaceOutputWithContext(context.Background())
}

func (i *RouterospfOspfinterface) ToRouterospfOspfinterfaceOutputWithContext(ctx context.Context) RouterospfOspfinterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterospfOspfinterfaceOutput)
}

// RouterospfOspfinterfaceArrayInput is an input type that accepts RouterospfOspfinterfaceArray and RouterospfOspfinterfaceArrayOutput values.
// You can construct a concrete instance of `RouterospfOspfinterfaceArrayInput` via:
//
//	RouterospfOspfinterfaceArray{ RouterospfOspfinterfaceArgs{...} }
type RouterospfOspfinterfaceArrayInput interface {
	pulumi.Input

	ToRouterospfOspfinterfaceArrayOutput() RouterospfOspfinterfaceArrayOutput
	ToRouterospfOspfinterfaceArrayOutputWithContext(context.Context) RouterospfOspfinterfaceArrayOutput
}

type RouterospfOspfinterfaceArray []RouterospfOspfinterfaceInput

func (RouterospfOspfinterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterospfOspfinterface)(nil)).Elem()
}

func (i RouterospfOspfinterfaceArray) ToRouterospfOspfinterfaceArrayOutput() RouterospfOspfinterfaceArrayOutput {
	return i.ToRouterospfOspfinterfaceArrayOutputWithContext(context.Background())
}

func (i RouterospfOspfinterfaceArray) ToRouterospfOspfinterfaceArrayOutputWithContext(ctx context.Context) RouterospfOspfinterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterospfOspfinterfaceArrayOutput)
}

// RouterospfOspfinterfaceMapInput is an input type that accepts RouterospfOspfinterfaceMap and RouterospfOspfinterfaceMapOutput values.
// You can construct a concrete instance of `RouterospfOspfinterfaceMapInput` via:
//
//	RouterospfOspfinterfaceMap{ "key": RouterospfOspfinterfaceArgs{...} }
type RouterospfOspfinterfaceMapInput interface {
	pulumi.Input

	ToRouterospfOspfinterfaceMapOutput() RouterospfOspfinterfaceMapOutput
	ToRouterospfOspfinterfaceMapOutputWithContext(context.Context) RouterospfOspfinterfaceMapOutput
}

type RouterospfOspfinterfaceMap map[string]RouterospfOspfinterfaceInput

func (RouterospfOspfinterfaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterospfOspfinterface)(nil)).Elem()
}

func (i RouterospfOspfinterfaceMap) ToRouterospfOspfinterfaceMapOutput() RouterospfOspfinterfaceMapOutput {
	return i.ToRouterospfOspfinterfaceMapOutputWithContext(context.Background())
}

func (i RouterospfOspfinterfaceMap) ToRouterospfOspfinterfaceMapOutputWithContext(ctx context.Context) RouterospfOspfinterfaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterospfOspfinterfaceMapOutput)
}

type RouterospfOspfinterfaceOutput struct{ *pulumi.OutputState }

func (RouterospfOspfinterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterospfOspfinterface)(nil)).Elem()
}

func (o RouterospfOspfinterfaceOutput) ToRouterospfOspfinterfaceOutput() RouterospfOspfinterfaceOutput {
	return o
}

func (o RouterospfOspfinterfaceOutput) ToRouterospfOspfinterfaceOutputWithContext(ctx context.Context) RouterospfOspfinterfaceOutput {
	return o
}

// Authentication type.
func (o RouterospfOspfinterfaceOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.Authentication }).(pulumi.StringOutput)
}

// Authentication key.
func (o RouterospfOspfinterfaceOutput) AuthenticationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringPtrOutput { return v.AuthenticationKey }).(pulumi.StringPtrOutput)
}

// Bidirectional Forwarding Detection (BFD). Valid values: `global`, `enable`, `disable`.
func (o RouterospfOspfinterfaceOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.Bfd }).(pulumi.StringOutput)
}

// Comment.
func (o RouterospfOspfinterfaceOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
func (o RouterospfOspfinterfaceOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.IntOutput { return v.Cost }).(pulumi.IntOutput)
}

// Enable/disable control of flooding out LSAs. Valid values: `enable`, `disable`.
func (o RouterospfOspfinterfaceOutput) DatabaseFilterOut() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.DatabaseFilterOut }).(pulumi.StringOutput)
}

// Dead interval.
func (o RouterospfOspfinterfaceOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.IntOutput { return v.DeadInterval }).(pulumi.IntOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o RouterospfOspfinterfaceOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Hello interval.
func (o RouterospfOspfinterfaceOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.IntOutput { return v.HelloInterval }).(pulumi.IntOutput)
}

// Number of hello packets within dead interval.
func (o RouterospfOspfinterfaceOutput) HelloMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.IntOutput { return v.HelloMultiplier }).(pulumi.IntOutput)
}

// Configuration interface name.
func (o RouterospfOspfinterfaceOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// IP address.
func (o RouterospfOspfinterfaceOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// Message-digest key-chain name.
func (o RouterospfOspfinterfaceOutput) Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.Keychain }).(pulumi.StringOutput)
}

// MD5 key.
func (o RouterospfOspfinterfaceOutput) Md5Key() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.Md5Key }).(pulumi.StringOutput)
}

// Authentication MD5 key-chain name.
func (o RouterospfOspfinterfaceOutput) Md5Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.Md5Keychain }).(pulumi.StringOutput)
}

// MD5 key. The structure of `md5Keys` block is documented below.
func (o RouterospfOspfinterfaceOutput) Md5Keys() RouterospfOspfinterfaceMd5KeyArrayOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) RouterospfOspfinterfaceMd5KeyArrayOutput { return v.Md5Keys }).(RouterospfOspfinterfaceMd5KeyArrayOutput)
}

// MTU for database description packets.
func (o RouterospfOspfinterfaceOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.IntOutput { return v.Mtu }).(pulumi.IntOutput)
}

// Enable/disable ignore MTU. Valid values: `enable`, `disable`.
func (o RouterospfOspfinterfaceOutput) MtuIgnore() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.MtuIgnore }).(pulumi.StringOutput)
}

// Interface entry name.
func (o RouterospfOspfinterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network type. Valid values: `broadcast`, `non-broadcast`, `point-to-point`, `point-to-multipoint`, `point-to-multipoint-non-broadcast`.
func (o RouterospfOspfinterfaceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.NetworkType }).(pulumi.StringOutput)
}

// Prefix length.
func (o RouterospfOspfinterfaceOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.IntOutput { return v.PrefixLength }).(pulumi.IntOutput)
}

// Priority.
func (o RouterospfOspfinterfaceOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// Graceful restart neighbor resynchronization timeout.
func (o RouterospfOspfinterfaceOutput) ResyncTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.IntOutput { return v.ResyncTimeout }).(pulumi.IntOutput)
}

// Retransmit interval.
func (o RouterospfOspfinterfaceOutput) RetransmitInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.IntOutput { return v.RetransmitInterval }).(pulumi.IntOutput)
}

// Enable/disable status. Valid values: `disable`, `enable`.
func (o RouterospfOspfinterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Transmit delay.
func (o RouterospfOspfinterfaceOutput) TransmitDelay() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.IntOutput { return v.TransmitDelay }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
//
// The `md5Keys` block supports:
func (o RouterospfOspfinterfaceOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterospfOspfinterface) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type RouterospfOspfinterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterospfOspfinterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterospfOspfinterface)(nil)).Elem()
}

func (o RouterospfOspfinterfaceArrayOutput) ToRouterospfOspfinterfaceArrayOutput() RouterospfOspfinterfaceArrayOutput {
	return o
}

func (o RouterospfOspfinterfaceArrayOutput) ToRouterospfOspfinterfaceArrayOutputWithContext(ctx context.Context) RouterospfOspfinterfaceArrayOutput {
	return o
}

func (o RouterospfOspfinterfaceArrayOutput) Index(i pulumi.IntInput) RouterospfOspfinterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterospfOspfinterface {
		return vs[0].([]*RouterospfOspfinterface)[vs[1].(int)]
	}).(RouterospfOspfinterfaceOutput)
}

type RouterospfOspfinterfaceMapOutput struct{ *pulumi.OutputState }

func (RouterospfOspfinterfaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterospfOspfinterface)(nil)).Elem()
}

func (o RouterospfOspfinterfaceMapOutput) ToRouterospfOspfinterfaceMapOutput() RouterospfOspfinterfaceMapOutput {
	return o
}

func (o RouterospfOspfinterfaceMapOutput) ToRouterospfOspfinterfaceMapOutputWithContext(ctx context.Context) RouterospfOspfinterfaceMapOutput {
	return o
}

func (o RouterospfOspfinterfaceMapOutput) MapIndex(k pulumi.StringInput) RouterospfOspfinterfaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterospfOspfinterface {
		return vs[0].(map[string]*RouterospfOspfinterface)[vs[1].(string)]
	}).(RouterospfOspfinterfaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterospfOspfinterfaceInput)(nil)).Elem(), &RouterospfOspfinterface{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterospfOspfinterfaceArrayInput)(nil)).Elem(), RouterospfOspfinterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterospfOspfinterfaceMapInput)(nil)).Elem(), RouterospfOspfinterfaceMap{})
	pulumi.RegisterOutputType(RouterospfOspfinterfaceOutput{})
	pulumi.RegisterOutputType(RouterospfOspfinterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterospfOspfinterfaceMapOutput{})
}
