// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure multicast addresses.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewFirewallMulticastaddress(ctx, "trname", &fortios.FirewallMulticastaddressArgs{
//				Color:      pulumi.Int(0),
//				EndIp:      pulumi.String("224.0.0.22"),
//				StartIp:    pulumi.String("224.0.0.11"),
//				Subnet:     pulumi.String("224.0.0.11 224.0.0.22"),
//				Type:       pulumi.String("multicastrange"),
//				Visibility: pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Firewall MulticastAddress can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/firewallMulticastaddress:FirewallMulticastaddress labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/firewallMulticastaddress:FirewallMulticastaddress labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type FirewallMulticastaddress struct {
	pulumi.CustomResourceState

	// Interface associated with the address object. When setting up a policy, only addresses associated with this interface are available.
	AssociatedInterface pulumi.StringOutput `pulumi:"associatedInterface"`
	// Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
	Color pulumi.IntOutput `pulumi:"color"`
	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Final IPv4 address (inclusive) in the range for the address.
	EndIp pulumi.StringOutput `pulumi:"endIp"`
	// Multicast address name.
	Name pulumi.StringOutput `pulumi:"name"`
	// First IPv4 address (inclusive) in the range for the address.
	StartIp pulumi.StringOutput `pulumi:"startIp"`
	// Broadcast address and subnet.
	Subnet pulumi.StringOutput `pulumi:"subnet"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings FirewallMulticastaddressTaggingArrayOutput `pulumi:"taggings"`
	// Type of address object: multicast IP address range or broadcast IP/mask to be treated as a multicast address. Valid values: `multicastrange`, `broadcastmask`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable visibility of the multicast address on the GUI. Valid values: `enable`, `disable`.
	Visibility pulumi.StringOutput `pulumi:"visibility"`
}

// NewFirewallMulticastaddress registers a new resource with the given unique name, arguments, and options.
func NewFirewallMulticastaddress(ctx *pulumi.Context,
	name string, args *FirewallMulticastaddressArgs, opts ...pulumi.ResourceOption) (*FirewallMulticastaddress, error) {
	if args == nil {
		args = &FirewallMulticastaddressArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallMulticastaddress
	err := ctx.RegisterResource("fortios:index/firewallMulticastaddress:FirewallMulticastaddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallMulticastaddress gets an existing FirewallMulticastaddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallMulticastaddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallMulticastaddressState, opts ...pulumi.ResourceOption) (*FirewallMulticastaddress, error) {
	var resource FirewallMulticastaddress
	err := ctx.ReadResource("fortios:index/firewallMulticastaddress:FirewallMulticastaddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallMulticastaddress resources.
type firewallMulticastaddressState struct {
	// Interface associated with the address object. When setting up a policy, only addresses associated with this interface are available.
	AssociatedInterface *string `pulumi:"associatedInterface"`
	// Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
	Color *int `pulumi:"color"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Final IPv4 address (inclusive) in the range for the address.
	EndIp *string `pulumi:"endIp"`
	// Multicast address name.
	Name *string `pulumi:"name"`
	// First IPv4 address (inclusive) in the range for the address.
	StartIp *string `pulumi:"startIp"`
	// Broadcast address and subnet.
	Subnet *string `pulumi:"subnet"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings []FirewallMulticastaddressTagging `pulumi:"taggings"`
	// Type of address object: multicast IP address range or broadcast IP/mask to be treated as a multicast address. Valid values: `multicastrange`, `broadcastmask`.
	Type *string `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable visibility of the multicast address on the GUI. Valid values: `enable`, `disable`.
	Visibility *string `pulumi:"visibility"`
}

type FirewallMulticastaddressState struct {
	// Interface associated with the address object. When setting up a policy, only addresses associated with this interface are available.
	AssociatedInterface pulumi.StringPtrInput
	// Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
	Color pulumi.IntPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Final IPv4 address (inclusive) in the range for the address.
	EndIp pulumi.StringPtrInput
	// Multicast address name.
	Name pulumi.StringPtrInput
	// First IPv4 address (inclusive) in the range for the address.
	StartIp pulumi.StringPtrInput
	// Broadcast address and subnet.
	Subnet pulumi.StringPtrInput
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings FirewallMulticastaddressTaggingArrayInput
	// Type of address object: multicast IP address range or broadcast IP/mask to be treated as a multicast address. Valid values: `multicastrange`, `broadcastmask`.
	Type pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable visibility of the multicast address on the GUI. Valid values: `enable`, `disable`.
	Visibility pulumi.StringPtrInput
}

func (FirewallMulticastaddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallMulticastaddressState)(nil)).Elem()
}

type firewallMulticastaddressArgs struct {
	// Interface associated with the address object. When setting up a policy, only addresses associated with this interface are available.
	AssociatedInterface *string `pulumi:"associatedInterface"`
	// Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
	Color *int `pulumi:"color"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Final IPv4 address (inclusive) in the range for the address.
	EndIp *string `pulumi:"endIp"`
	// Multicast address name.
	Name *string `pulumi:"name"`
	// First IPv4 address (inclusive) in the range for the address.
	StartIp *string `pulumi:"startIp"`
	// Broadcast address and subnet.
	Subnet *string `pulumi:"subnet"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings []FirewallMulticastaddressTagging `pulumi:"taggings"`
	// Type of address object: multicast IP address range or broadcast IP/mask to be treated as a multicast address. Valid values: `multicastrange`, `broadcastmask`.
	Type *string `pulumi:"type"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable visibility of the multicast address on the GUI. Valid values: `enable`, `disable`.
	Visibility *string `pulumi:"visibility"`
}

// The set of arguments for constructing a FirewallMulticastaddress resource.
type FirewallMulticastaddressArgs struct {
	// Interface associated with the address object. When setting up a policy, only addresses associated with this interface are available.
	AssociatedInterface pulumi.StringPtrInput
	// Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
	Color pulumi.IntPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Final IPv4 address (inclusive) in the range for the address.
	EndIp pulumi.StringPtrInput
	// Multicast address name.
	Name pulumi.StringPtrInput
	// First IPv4 address (inclusive) in the range for the address.
	StartIp pulumi.StringPtrInput
	// Broadcast address and subnet.
	Subnet pulumi.StringPtrInput
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings FirewallMulticastaddressTaggingArrayInput
	// Type of address object: multicast IP address range or broadcast IP/mask to be treated as a multicast address. Valid values: `multicastrange`, `broadcastmask`.
	Type pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable visibility of the multicast address on the GUI. Valid values: `enable`, `disable`.
	Visibility pulumi.StringPtrInput
}

func (FirewallMulticastaddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallMulticastaddressArgs)(nil)).Elem()
}

type FirewallMulticastaddressInput interface {
	pulumi.Input

	ToFirewallMulticastaddressOutput() FirewallMulticastaddressOutput
	ToFirewallMulticastaddressOutputWithContext(ctx context.Context) FirewallMulticastaddressOutput
}

func (*FirewallMulticastaddress) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallMulticastaddress)(nil)).Elem()
}

func (i *FirewallMulticastaddress) ToFirewallMulticastaddressOutput() FirewallMulticastaddressOutput {
	return i.ToFirewallMulticastaddressOutputWithContext(context.Background())
}

func (i *FirewallMulticastaddress) ToFirewallMulticastaddressOutputWithContext(ctx context.Context) FirewallMulticastaddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddressOutput)
}

// FirewallMulticastaddressArrayInput is an input type that accepts FirewallMulticastaddressArray and FirewallMulticastaddressArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastaddressArrayInput` via:
//
//	FirewallMulticastaddressArray{ FirewallMulticastaddressArgs{...} }
type FirewallMulticastaddressArrayInput interface {
	pulumi.Input

	ToFirewallMulticastaddressArrayOutput() FirewallMulticastaddressArrayOutput
	ToFirewallMulticastaddressArrayOutputWithContext(context.Context) FirewallMulticastaddressArrayOutput
}

type FirewallMulticastaddressArray []FirewallMulticastaddressInput

func (FirewallMulticastaddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallMulticastaddress)(nil)).Elem()
}

func (i FirewallMulticastaddressArray) ToFirewallMulticastaddressArrayOutput() FirewallMulticastaddressArrayOutput {
	return i.ToFirewallMulticastaddressArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastaddressArray) ToFirewallMulticastaddressArrayOutputWithContext(ctx context.Context) FirewallMulticastaddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddressArrayOutput)
}

// FirewallMulticastaddressMapInput is an input type that accepts FirewallMulticastaddressMap and FirewallMulticastaddressMapOutput values.
// You can construct a concrete instance of `FirewallMulticastaddressMapInput` via:
//
//	FirewallMulticastaddressMap{ "key": FirewallMulticastaddressArgs{...} }
type FirewallMulticastaddressMapInput interface {
	pulumi.Input

	ToFirewallMulticastaddressMapOutput() FirewallMulticastaddressMapOutput
	ToFirewallMulticastaddressMapOutputWithContext(context.Context) FirewallMulticastaddressMapOutput
}

type FirewallMulticastaddressMap map[string]FirewallMulticastaddressInput

func (FirewallMulticastaddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallMulticastaddress)(nil)).Elem()
}

func (i FirewallMulticastaddressMap) ToFirewallMulticastaddressMapOutput() FirewallMulticastaddressMapOutput {
	return i.ToFirewallMulticastaddressMapOutputWithContext(context.Background())
}

func (i FirewallMulticastaddressMap) ToFirewallMulticastaddressMapOutputWithContext(ctx context.Context) FirewallMulticastaddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddressMapOutput)
}

type FirewallMulticastaddressOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallMulticastaddress)(nil)).Elem()
}

func (o FirewallMulticastaddressOutput) ToFirewallMulticastaddressOutput() FirewallMulticastaddressOutput {
	return o
}

func (o FirewallMulticastaddressOutput) ToFirewallMulticastaddressOutputWithContext(ctx context.Context) FirewallMulticastaddressOutput {
	return o
}

// Interface associated with the address object. When setting up a policy, only addresses associated with this interface are available.
func (o FirewallMulticastaddressOutput) AssociatedInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.StringOutput { return v.AssociatedInterface }).(pulumi.StringOutput)
}

// Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
func (o FirewallMulticastaddressOutput) Color() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.IntOutput { return v.Color }).(pulumi.IntOutput)
}

// Comment.
func (o FirewallMulticastaddressOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o FirewallMulticastaddressOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Final IPv4 address (inclusive) in the range for the address.
func (o FirewallMulticastaddressOutput) EndIp() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.StringOutput { return v.EndIp }).(pulumi.StringOutput)
}

// Multicast address name.
func (o FirewallMulticastaddressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// First IPv4 address (inclusive) in the range for the address.
func (o FirewallMulticastaddressOutput) StartIp() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.StringOutput { return v.StartIp }).(pulumi.StringOutput)
}

// Broadcast address and subnet.
func (o FirewallMulticastaddressOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.StringOutput { return v.Subnet }).(pulumi.StringOutput)
}

// Config object tagging. The structure of `tagging` block is documented below.
func (o FirewallMulticastaddressOutput) Taggings() FirewallMulticastaddressTaggingArrayOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) FirewallMulticastaddressTaggingArrayOutput { return v.Taggings }).(FirewallMulticastaddressTaggingArrayOutput)
}

// Type of address object: multicast IP address range or broadcast IP/mask to be treated as a multicast address. Valid values: `multicastrange`, `broadcastmask`.
func (o FirewallMulticastaddressOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FirewallMulticastaddressOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable visibility of the multicast address on the GUI. Valid values: `enable`, `disable`.
func (o FirewallMulticastaddressOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastaddress) pulumi.StringOutput { return v.Visibility }).(pulumi.StringOutput)
}

type FirewallMulticastaddressArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallMulticastaddress)(nil)).Elem()
}

func (o FirewallMulticastaddressArrayOutput) ToFirewallMulticastaddressArrayOutput() FirewallMulticastaddressArrayOutput {
	return o
}

func (o FirewallMulticastaddressArrayOutput) ToFirewallMulticastaddressArrayOutputWithContext(ctx context.Context) FirewallMulticastaddressArrayOutput {
	return o
}

func (o FirewallMulticastaddressArrayOutput) Index(i pulumi.IntInput) FirewallMulticastaddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallMulticastaddress {
		return vs[0].([]*FirewallMulticastaddress)[vs[1].(int)]
	}).(FirewallMulticastaddressOutput)
}

type FirewallMulticastaddressMapOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallMulticastaddress)(nil)).Elem()
}

func (o FirewallMulticastaddressMapOutput) ToFirewallMulticastaddressMapOutput() FirewallMulticastaddressMapOutput {
	return o
}

func (o FirewallMulticastaddressMapOutput) ToFirewallMulticastaddressMapOutputWithContext(ctx context.Context) FirewallMulticastaddressMapOutput {
	return o
}

func (o FirewallMulticastaddressMapOutput) MapIndex(k pulumi.StringInput) FirewallMulticastaddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallMulticastaddress {
		return vs[0].(map[string]*FirewallMulticastaddress)[vs[1].(string)]
	}).(FirewallMulticastaddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddressInput)(nil)).Elem(), &FirewallMulticastaddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddressArrayInput)(nil)).Elem(), FirewallMulticastaddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddressMapInput)(nil)).Elem(), FirewallMulticastaddressMap{})
	pulumi.RegisterOutputType(FirewallMulticastaddressOutput{})
	pulumi.RegisterOutputType(FirewallMulticastaddressArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastaddressMapOutput{})
}
