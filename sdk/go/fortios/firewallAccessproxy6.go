// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPv6 access proxy. Applies to FortiOS Version `>= 7.0.1`.
//
// ## Import
//
// # Firewall AccessProxy6 can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/firewallAccessproxy6:FirewallAccessproxy6 labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/firewallAccessproxy6:FirewallAccessproxy6 labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type FirewallAccessproxy6 struct {
	pulumi.CustomResourceState

	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb pulumi.StringOutput `pulumi:"addVhostDomainToDnsdb"`
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s FirewallAccessproxy6ApiGateway6ArrayOutput `pulumi:"apiGateway6s"`
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways FirewallAccessproxy6ApiGatewayArrayOutput `pulumi:"apiGateways"`
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal pulumi.StringOutput `pulumi:"authPortal"`
	// Virtual host for authentication portal.
	AuthVirtualHost pulumi.StringOutput `pulumi:"authVirtualHost"`
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert pulumi.StringOutput `pulumi:"clientCert"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringOutput `pulumi:"decryptedTrafficMirror"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Action of an empty client certificate.
	EmptyCertAction pulumi.StringOutput `pulumi:"emptyCertAction"`
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic pulumi.StringOutput `pulumi:"logBlockedTraffic"`
	// Access Proxy name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect pulumi.StringOutput `pulumi:"userAgentDetect"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Virtual IP name.
	Vip pulumi.StringOutput `pulumi:"vip"`
}

// NewFirewallAccessproxy6 registers a new resource with the given unique name, arguments, and options.
func NewFirewallAccessproxy6(ctx *pulumi.Context,
	name string, args *FirewallAccessproxy6Args, opts ...pulumi.ResourceOption) (*FirewallAccessproxy6, error) {
	if args == nil {
		args = &FirewallAccessproxy6Args{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallAccessproxy6
	err := ctx.RegisterResource("fortios:index/firewallAccessproxy6:FirewallAccessproxy6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallAccessproxy6 gets an existing FirewallAccessproxy6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallAccessproxy6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallAccessproxy6State, opts ...pulumi.ResourceOption) (*FirewallAccessproxy6, error) {
	var resource FirewallAccessproxy6
	err := ctx.ReadResource("fortios:index/firewallAccessproxy6:FirewallAccessproxy6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallAccessproxy6 resources.
type firewallAccessproxy6State struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb *string `pulumi:"addVhostDomainToDnsdb"`
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s []FirewallAccessproxy6ApiGateway6 `pulumi:"apiGateway6s"`
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways []FirewallAccessproxy6ApiGateway `pulumi:"apiGateways"`
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal *string `pulumi:"authPortal"`
	// Virtual host for authentication portal.
	AuthVirtualHost *string `pulumi:"authVirtualHost"`
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert *string `pulumi:"clientCert"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror *string `pulumi:"decryptedTrafficMirror"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Action of an empty client certificate.
	EmptyCertAction *string `pulumi:"emptyCertAction"`
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic *string `pulumi:"logBlockedTraffic"`
	// Access Proxy name.
	Name *string `pulumi:"name"`
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect *string `pulumi:"userAgentDetect"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual IP name.
	Vip *string `pulumi:"vip"`
}

type FirewallAccessproxy6State struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb pulumi.StringPtrInput
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s FirewallAccessproxy6ApiGateway6ArrayInput
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways FirewallAccessproxy6ApiGatewayArrayInput
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal pulumi.StringPtrInput
	// Virtual host for authentication portal.
	AuthVirtualHost pulumi.StringPtrInput
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert pulumi.StringPtrInput
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Action of an empty client certificate.
	EmptyCertAction pulumi.StringPtrInput
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic pulumi.StringPtrInput
	// Access Proxy name.
	Name pulumi.StringPtrInput
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual IP name.
	Vip pulumi.StringPtrInput
}

func (FirewallAccessproxy6State) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAccessproxy6State)(nil)).Elem()
}

type firewallAccessproxy6Args struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb *string `pulumi:"addVhostDomainToDnsdb"`
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s []FirewallAccessproxy6ApiGateway6 `pulumi:"apiGateway6s"`
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways []FirewallAccessproxy6ApiGateway `pulumi:"apiGateways"`
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal *string `pulumi:"authPortal"`
	// Virtual host for authentication portal.
	AuthVirtualHost *string `pulumi:"authVirtualHost"`
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert *string `pulumi:"clientCert"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror *string `pulumi:"decryptedTrafficMirror"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Action of an empty client certificate.
	EmptyCertAction *string `pulumi:"emptyCertAction"`
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic *string `pulumi:"logBlockedTraffic"`
	// Access Proxy name.
	Name *string `pulumi:"name"`
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect *string `pulumi:"userAgentDetect"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual IP name.
	Vip *string `pulumi:"vip"`
}

// The set of arguments for constructing a FirewallAccessproxy6 resource.
type FirewallAccessproxy6Args struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb pulumi.StringPtrInput
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s FirewallAccessproxy6ApiGateway6ArrayInput
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways FirewallAccessproxy6ApiGatewayArrayInput
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal pulumi.StringPtrInput
	// Virtual host for authentication portal.
	AuthVirtualHost pulumi.StringPtrInput
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert pulumi.StringPtrInput
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Action of an empty client certificate.
	EmptyCertAction pulumi.StringPtrInput
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic pulumi.StringPtrInput
	// Access Proxy name.
	Name pulumi.StringPtrInput
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual IP name.
	Vip pulumi.StringPtrInput
}

func (FirewallAccessproxy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAccessproxy6Args)(nil)).Elem()
}

type FirewallAccessproxy6Input interface {
	pulumi.Input

	ToFirewallAccessproxy6Output() FirewallAccessproxy6Output
	ToFirewallAccessproxy6OutputWithContext(ctx context.Context) FirewallAccessproxy6Output
}

func (*FirewallAccessproxy6) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAccessproxy6)(nil)).Elem()
}

func (i *FirewallAccessproxy6) ToFirewallAccessproxy6Output() FirewallAccessproxy6Output {
	return i.ToFirewallAccessproxy6OutputWithContext(context.Background())
}

func (i *FirewallAccessproxy6) ToFirewallAccessproxy6OutputWithContext(ctx context.Context) FirewallAccessproxy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6Output)
}

// FirewallAccessproxy6ArrayInput is an input type that accepts FirewallAccessproxy6Array and FirewallAccessproxy6ArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ArrayInput` via:
//
//	FirewallAccessproxy6Array{ FirewallAccessproxy6Args{...} }
type FirewallAccessproxy6ArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ArrayOutput() FirewallAccessproxy6ArrayOutput
	ToFirewallAccessproxy6ArrayOutputWithContext(context.Context) FirewallAccessproxy6ArrayOutput
}

type FirewallAccessproxy6Array []FirewallAccessproxy6Input

func (FirewallAccessproxy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAccessproxy6)(nil)).Elem()
}

func (i FirewallAccessproxy6Array) ToFirewallAccessproxy6ArrayOutput() FirewallAccessproxy6ArrayOutput {
	return i.ToFirewallAccessproxy6ArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6Array) ToFirewallAccessproxy6ArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ArrayOutput)
}

// FirewallAccessproxy6MapInput is an input type that accepts FirewallAccessproxy6Map and FirewallAccessproxy6MapOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6MapInput` via:
//
//	FirewallAccessproxy6Map{ "key": FirewallAccessproxy6Args{...} }
type FirewallAccessproxy6MapInput interface {
	pulumi.Input

	ToFirewallAccessproxy6MapOutput() FirewallAccessproxy6MapOutput
	ToFirewallAccessproxy6MapOutputWithContext(context.Context) FirewallAccessproxy6MapOutput
}

type FirewallAccessproxy6Map map[string]FirewallAccessproxy6Input

func (FirewallAccessproxy6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAccessproxy6)(nil)).Elem()
}

func (i FirewallAccessproxy6Map) ToFirewallAccessproxy6MapOutput() FirewallAccessproxy6MapOutput {
	return i.ToFirewallAccessproxy6MapOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6Map) ToFirewallAccessproxy6MapOutputWithContext(ctx context.Context) FirewallAccessproxy6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6MapOutput)
}

type FirewallAccessproxy6Output struct{ *pulumi.OutputState }

func (FirewallAccessproxy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAccessproxy6)(nil)).Elem()
}

func (o FirewallAccessproxy6Output) ToFirewallAccessproxy6Output() FirewallAccessproxy6Output {
	return o
}

func (o FirewallAccessproxy6Output) ToFirewallAccessproxy6OutputWithContext(ctx context.Context) FirewallAccessproxy6Output {
	return o
}

// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
func (o FirewallAccessproxy6Output) AddVhostDomainToDnsdb() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringOutput { return v.AddVhostDomainToDnsdb }).(pulumi.StringOutput)
}

// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
func (o FirewallAccessproxy6Output) ApiGateway6s() FirewallAccessproxy6ApiGateway6ArrayOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) FirewallAccessproxy6ApiGateway6ArrayOutput { return v.ApiGateway6s }).(FirewallAccessproxy6ApiGateway6ArrayOutput)
}

// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
func (o FirewallAccessproxy6Output) ApiGateways() FirewallAccessproxy6ApiGatewayArrayOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) FirewallAccessproxy6ApiGatewayArrayOutput { return v.ApiGateways }).(FirewallAccessproxy6ApiGatewayArrayOutput)
}

// Enable/disable authentication portal. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6Output) AuthPortal() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringOutput { return v.AuthPortal }).(pulumi.StringOutput)
}

// Virtual host for authentication portal.
func (o FirewallAccessproxy6Output) AuthVirtualHost() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringOutput { return v.AuthVirtualHost }).(pulumi.StringOutput)
}

// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6Output) ClientCert() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringOutput { return v.ClientCert }).(pulumi.StringOutput)
}

// Decrypted traffic mirror.
func (o FirewallAccessproxy6Output) DecryptedTrafficMirror() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringOutput { return v.DecryptedTrafficMirror }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o FirewallAccessproxy6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Action of an empty client certificate.
func (o FirewallAccessproxy6Output) EmptyCertAction() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringOutput { return v.EmptyCertAction }).(pulumi.StringOutput)
}

// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
func (o FirewallAccessproxy6Output) LogBlockedTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringOutput { return v.LogBlockedTraffic }).(pulumi.StringOutput)
}

// Access Proxy name.
func (o FirewallAccessproxy6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6Output) UserAgentDetect() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringOutput { return v.UserAgentDetect }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FirewallAccessproxy6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Virtual IP name.
func (o FirewallAccessproxy6Output) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy6) pulumi.StringOutput { return v.Vip }).(pulumi.StringOutput)
}

type FirewallAccessproxy6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAccessproxy6)(nil)).Elem()
}

func (o FirewallAccessproxy6ArrayOutput) ToFirewallAccessproxy6ArrayOutput() FirewallAccessproxy6ArrayOutput {
	return o
}

func (o FirewallAccessproxy6ArrayOutput) ToFirewallAccessproxy6ArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ArrayOutput {
	return o
}

func (o FirewallAccessproxy6ArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallAccessproxy6 {
		return vs[0].([]*FirewallAccessproxy6)[vs[1].(int)]
	}).(FirewallAccessproxy6Output)
}

type FirewallAccessproxy6MapOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAccessproxy6)(nil)).Elem()
}

func (o FirewallAccessproxy6MapOutput) ToFirewallAccessproxy6MapOutput() FirewallAccessproxy6MapOutput {
	return o
}

func (o FirewallAccessproxy6MapOutput) ToFirewallAccessproxy6MapOutputWithContext(ctx context.Context) FirewallAccessproxy6MapOutput {
	return o
}

func (o FirewallAccessproxy6MapOutput) MapIndex(k pulumi.StringInput) FirewallAccessproxy6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallAccessproxy6 {
		return vs[0].(map[string]*FirewallAccessproxy6)[vs[1].(string)]
	}).(FirewallAccessproxy6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6Input)(nil)).Elem(), &FirewallAccessproxy6{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ArrayInput)(nil)).Elem(), FirewallAccessproxy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6MapInput)(nil)).Elem(), FirewallAccessproxy6Map{})
	pulumi.RegisterOutputType(FirewallAccessproxy6Output{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6MapOutput{})
}
