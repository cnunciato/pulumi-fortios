// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiNDR. Applies to FortiOS Version `>= 7.2.0`.
//
// ## Import
//
// # System Fortindr can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemFortindr:SystemFortindr labelname SystemFortindr
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemFortindr:SystemFortindr labelname SystemFortindr
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemFortindr struct {
	pulumi.CustomResourceState

	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// Source IP address for communications to FortiNDR.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemFortindr registers a new resource with the given unique name, arguments, and options.
func NewSystemFortindr(ctx *pulumi.Context,
	name string, args *SystemFortindrArgs, opts ...pulumi.ResourceOption) (*SystemFortindr, error) {
	if args == nil {
		args = &SystemFortindrArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemFortindr
	err := ctx.RegisterResource("fortios:index/systemFortindr:SystemFortindr", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemFortindr gets an existing SystemFortindr resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemFortindr(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemFortindrState, opts ...pulumi.ResourceOption) (*SystemFortindr, error) {
	var resource SystemFortindr
	err := ctx.ReadResource("fortios:index/systemFortindr:SystemFortindr", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemFortindr resources.
type systemFortindrState struct {
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communications to FortiNDR.
	SourceIp *string `pulumi:"sourceIp"`
	// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemFortindrState struct {
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Source IP address for communications to FortiNDR.
	SourceIp pulumi.StringPtrInput
	// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemFortindrState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFortindrState)(nil)).Elem()
}

type systemFortindrArgs struct {
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communications to FortiNDR.
	SourceIp *string `pulumi:"sourceIp"`
	// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemFortindr resource.
type SystemFortindrArgs struct {
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Source IP address for communications to FortiNDR.
	SourceIp pulumi.StringPtrInput
	// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemFortindrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFortindrArgs)(nil)).Elem()
}

type SystemFortindrInput interface {
	pulumi.Input

	ToSystemFortindrOutput() SystemFortindrOutput
	ToSystemFortindrOutputWithContext(ctx context.Context) SystemFortindrOutput
}

func (*SystemFortindr) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFortindr)(nil)).Elem()
}

func (i *SystemFortindr) ToSystemFortindrOutput() SystemFortindrOutput {
	return i.ToSystemFortindrOutputWithContext(context.Background())
}

func (i *SystemFortindr) ToSystemFortindrOutputWithContext(ctx context.Context) SystemFortindrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortindrOutput)
}

// SystemFortindrArrayInput is an input type that accepts SystemFortindrArray and SystemFortindrArrayOutput values.
// You can construct a concrete instance of `SystemFortindrArrayInput` via:
//
//	SystemFortindrArray{ SystemFortindrArgs{...} }
type SystemFortindrArrayInput interface {
	pulumi.Input

	ToSystemFortindrArrayOutput() SystemFortindrArrayOutput
	ToSystemFortindrArrayOutputWithContext(context.Context) SystemFortindrArrayOutput
}

type SystemFortindrArray []SystemFortindrInput

func (SystemFortindrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemFortindr)(nil)).Elem()
}

func (i SystemFortindrArray) ToSystemFortindrArrayOutput() SystemFortindrArrayOutput {
	return i.ToSystemFortindrArrayOutputWithContext(context.Background())
}

func (i SystemFortindrArray) ToSystemFortindrArrayOutputWithContext(ctx context.Context) SystemFortindrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortindrArrayOutput)
}

// SystemFortindrMapInput is an input type that accepts SystemFortindrMap and SystemFortindrMapOutput values.
// You can construct a concrete instance of `SystemFortindrMapInput` via:
//
//	SystemFortindrMap{ "key": SystemFortindrArgs{...} }
type SystemFortindrMapInput interface {
	pulumi.Input

	ToSystemFortindrMapOutput() SystemFortindrMapOutput
	ToSystemFortindrMapOutputWithContext(context.Context) SystemFortindrMapOutput
}

type SystemFortindrMap map[string]SystemFortindrInput

func (SystemFortindrMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemFortindr)(nil)).Elem()
}

func (i SystemFortindrMap) ToSystemFortindrMapOutput() SystemFortindrMapOutput {
	return i.ToSystemFortindrMapOutputWithContext(context.Background())
}

func (i SystemFortindrMap) ToSystemFortindrMapOutputWithContext(ctx context.Context) SystemFortindrMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortindrMapOutput)
}

type SystemFortindrOutput struct{ *pulumi.OutputState }

func (SystemFortindrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFortindr)(nil)).Elem()
}

func (o SystemFortindrOutput) ToSystemFortindrOutput() SystemFortindrOutput {
	return o
}

func (o SystemFortindrOutput) ToSystemFortindrOutputWithContext(ctx context.Context) SystemFortindrOutput {
	return o
}

// Specify outgoing interface to reach server.
func (o SystemFortindrOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortindr) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o SystemFortindrOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortindr) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

// Source IP address for communications to FortiNDR.
func (o SystemFortindrOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortindr) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

// Enable/disable FortiNDR. Valid values: `disable`, `enable`.
func (o SystemFortindrOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortindr) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemFortindrOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemFortindr) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemFortindrArrayOutput struct{ *pulumi.OutputState }

func (SystemFortindrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemFortindr)(nil)).Elem()
}

func (o SystemFortindrArrayOutput) ToSystemFortindrArrayOutput() SystemFortindrArrayOutput {
	return o
}

func (o SystemFortindrArrayOutput) ToSystemFortindrArrayOutputWithContext(ctx context.Context) SystemFortindrArrayOutput {
	return o
}

func (o SystemFortindrArrayOutput) Index(i pulumi.IntInput) SystemFortindrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemFortindr {
		return vs[0].([]*SystemFortindr)[vs[1].(int)]
	}).(SystemFortindrOutput)
}

type SystemFortindrMapOutput struct{ *pulumi.OutputState }

func (SystemFortindrMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemFortindr)(nil)).Elem()
}

func (o SystemFortindrMapOutput) ToSystemFortindrMapOutput() SystemFortindrMapOutput {
	return o
}

func (o SystemFortindrMapOutput) ToSystemFortindrMapOutputWithContext(ctx context.Context) SystemFortindrMapOutput {
	return o
}

func (o SystemFortindrMapOutput) MapIndex(k pulumi.StringInput) SystemFortindrOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemFortindr {
		return vs[0].(map[string]*SystemFortindr)[vs[1].(string)]
	}).(SystemFortindrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFortindrInput)(nil)).Elem(), &SystemFortindr{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFortindrArrayInput)(nil)).Elem(), SystemFortindrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFortindrMapInput)(nil)).Elem(), SystemFortindrMap{})
	pulumi.RegisterOutputType(SystemFortindrOutput{})
	pulumi.RegisterOutputType(SystemFortindrArrayOutput{})
	pulumi.RegisterOutputType(SystemFortindrMapOutput{})
}
