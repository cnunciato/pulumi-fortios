// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on an fortios router authpath
func LookupRouterAuthpath(ctx *pulumi.Context, args *LookupRouterAuthpathArgs, opts ...pulumi.InvokeOption) (*LookupRouterAuthpathResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupRouterAuthpathResult
	err := ctx.Invoke("fortios:index/getRouterAuthpath:getRouterAuthpath", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouterAuthpath.
type LookupRouterAuthpathArgs struct {
	// Specify the name of the desired router authpath.
	Name string `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getRouterAuthpath.
type LookupRouterAuthpathResult struct {
	// Outgoing interface.
	Device string `pulumi:"device"`
	// Gateway IP address.
	Gateway string `pulumi:"gateway"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the entry.
	Name      string  `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupRouterAuthpathOutput(ctx *pulumi.Context, args LookupRouterAuthpathOutputArgs, opts ...pulumi.InvokeOption) LookupRouterAuthpathResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRouterAuthpathResult, error) {
			args := v.(LookupRouterAuthpathArgs)
			r, err := LookupRouterAuthpath(ctx, &args, opts...)
			var s LookupRouterAuthpathResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRouterAuthpathResultOutput)
}

// A collection of arguments for invoking getRouterAuthpath.
type LookupRouterAuthpathOutputArgs struct {
	// Specify the name of the desired router authpath.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupRouterAuthpathOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouterAuthpathArgs)(nil)).Elem()
}

// A collection of values returned by getRouterAuthpath.
type LookupRouterAuthpathResultOutput struct{ *pulumi.OutputState }

func (LookupRouterAuthpathResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouterAuthpathResult)(nil)).Elem()
}

func (o LookupRouterAuthpathResultOutput) ToLookupRouterAuthpathResultOutput() LookupRouterAuthpathResultOutput {
	return o
}

func (o LookupRouterAuthpathResultOutput) ToLookupRouterAuthpathResultOutputWithContext(ctx context.Context) LookupRouterAuthpathResultOutput {
	return o
}

// Outgoing interface.
func (o LookupRouterAuthpathResultOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterAuthpathResult) string { return v.Device }).(pulumi.StringOutput)
}

// Gateway IP address.
func (o LookupRouterAuthpathResultOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterAuthpathResult) string { return v.Gateway }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRouterAuthpathResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterAuthpathResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the entry.
func (o LookupRouterAuthpathResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterAuthpathResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRouterAuthpathResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouterAuthpathResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouterAuthpathResultOutput{})
}
