// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Replacement messages.
//
// ## Import
//
// # SystemReplacemsg Webproxy can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgWebproxy:SystemreplacemsgWebproxy labelname {{msg_type}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgWebproxy:SystemreplacemsgWebproxy labelname {{msg_type}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemreplacemsgWebproxy struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemreplacemsgWebproxy registers a new resource with the given unique name, arguments, and options.
func NewSystemreplacemsgWebproxy(ctx *pulumi.Context,
	name string, args *SystemreplacemsgWebproxyArgs, opts ...pulumi.ResourceOption) (*SystemreplacemsgWebproxy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemreplacemsgWebproxy
	err := ctx.RegisterResource("fortios:index/systemreplacemsgWebproxy:SystemreplacemsgWebproxy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemreplacemsgWebproxy gets an existing SystemreplacemsgWebproxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemreplacemsgWebproxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemreplacemsgWebproxyState, opts ...pulumi.ResourceOption) (*SystemreplacemsgWebproxy, error) {
	var resource SystemreplacemsgWebproxy
	err := ctx.ReadResource("fortios:index/systemreplacemsgWebproxy:SystemreplacemsgWebproxy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemreplacemsgWebproxy resources.
type systemreplacemsgWebproxyState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemreplacemsgWebproxyState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgWebproxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgWebproxyState)(nil)).Elem()
}

type systemreplacemsgWebproxyArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemreplacemsgWebproxy resource.
type SystemreplacemsgWebproxyArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgWebproxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgWebproxyArgs)(nil)).Elem()
}

type SystemreplacemsgWebproxyInput interface {
	pulumi.Input

	ToSystemreplacemsgWebproxyOutput() SystemreplacemsgWebproxyOutput
	ToSystemreplacemsgWebproxyOutputWithContext(ctx context.Context) SystemreplacemsgWebproxyOutput
}

func (*SystemreplacemsgWebproxy) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgWebproxy)(nil)).Elem()
}

func (i *SystemreplacemsgWebproxy) ToSystemreplacemsgWebproxyOutput() SystemreplacemsgWebproxyOutput {
	return i.ToSystemreplacemsgWebproxyOutputWithContext(context.Background())
}

func (i *SystemreplacemsgWebproxy) ToSystemreplacemsgWebproxyOutputWithContext(ctx context.Context) SystemreplacemsgWebproxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgWebproxyOutput)
}

// SystemreplacemsgWebproxyArrayInput is an input type that accepts SystemreplacemsgWebproxyArray and SystemreplacemsgWebproxyArrayOutput values.
// You can construct a concrete instance of `SystemreplacemsgWebproxyArrayInput` via:
//
//	SystemreplacemsgWebproxyArray{ SystemreplacemsgWebproxyArgs{...} }
type SystemreplacemsgWebproxyArrayInput interface {
	pulumi.Input

	ToSystemreplacemsgWebproxyArrayOutput() SystemreplacemsgWebproxyArrayOutput
	ToSystemreplacemsgWebproxyArrayOutputWithContext(context.Context) SystemreplacemsgWebproxyArrayOutput
}

type SystemreplacemsgWebproxyArray []SystemreplacemsgWebproxyInput

func (SystemreplacemsgWebproxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgWebproxy)(nil)).Elem()
}

func (i SystemreplacemsgWebproxyArray) ToSystemreplacemsgWebproxyArrayOutput() SystemreplacemsgWebproxyArrayOutput {
	return i.ToSystemreplacemsgWebproxyArrayOutputWithContext(context.Background())
}

func (i SystemreplacemsgWebproxyArray) ToSystemreplacemsgWebproxyArrayOutputWithContext(ctx context.Context) SystemreplacemsgWebproxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgWebproxyArrayOutput)
}

// SystemreplacemsgWebproxyMapInput is an input type that accepts SystemreplacemsgWebproxyMap and SystemreplacemsgWebproxyMapOutput values.
// You can construct a concrete instance of `SystemreplacemsgWebproxyMapInput` via:
//
//	SystemreplacemsgWebproxyMap{ "key": SystemreplacemsgWebproxyArgs{...} }
type SystemreplacemsgWebproxyMapInput interface {
	pulumi.Input

	ToSystemreplacemsgWebproxyMapOutput() SystemreplacemsgWebproxyMapOutput
	ToSystemreplacemsgWebproxyMapOutputWithContext(context.Context) SystemreplacemsgWebproxyMapOutput
}

type SystemreplacemsgWebproxyMap map[string]SystemreplacemsgWebproxyInput

func (SystemreplacemsgWebproxyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgWebproxy)(nil)).Elem()
}

func (i SystemreplacemsgWebproxyMap) ToSystemreplacemsgWebproxyMapOutput() SystemreplacemsgWebproxyMapOutput {
	return i.ToSystemreplacemsgWebproxyMapOutputWithContext(context.Background())
}

func (i SystemreplacemsgWebproxyMap) ToSystemreplacemsgWebproxyMapOutputWithContext(ctx context.Context) SystemreplacemsgWebproxyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgWebproxyMapOutput)
}

type SystemreplacemsgWebproxyOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgWebproxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgWebproxy)(nil)).Elem()
}

func (o SystemreplacemsgWebproxyOutput) ToSystemreplacemsgWebproxyOutput() SystemreplacemsgWebproxyOutput {
	return o
}

func (o SystemreplacemsgWebproxyOutput) ToSystemreplacemsgWebproxyOutputWithContext(ctx context.Context) SystemreplacemsgWebproxyOutput {
	return o
}

// Message string.
func (o SystemreplacemsgWebproxyOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgWebproxy) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemreplacemsgWebproxyOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgWebproxy) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemreplacemsgWebproxyOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgWebproxy) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o SystemreplacemsgWebproxyOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgWebproxy) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemreplacemsgWebproxyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgWebproxy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemreplacemsgWebproxyArrayOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgWebproxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgWebproxy)(nil)).Elem()
}

func (o SystemreplacemsgWebproxyArrayOutput) ToSystemreplacemsgWebproxyArrayOutput() SystemreplacemsgWebproxyArrayOutput {
	return o
}

func (o SystemreplacemsgWebproxyArrayOutput) ToSystemreplacemsgWebproxyArrayOutputWithContext(ctx context.Context) SystemreplacemsgWebproxyArrayOutput {
	return o
}

func (o SystemreplacemsgWebproxyArrayOutput) Index(i pulumi.IntInput) SystemreplacemsgWebproxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemreplacemsgWebproxy {
		return vs[0].([]*SystemreplacemsgWebproxy)[vs[1].(int)]
	}).(SystemreplacemsgWebproxyOutput)
}

type SystemreplacemsgWebproxyMapOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgWebproxyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgWebproxy)(nil)).Elem()
}

func (o SystemreplacemsgWebproxyMapOutput) ToSystemreplacemsgWebproxyMapOutput() SystemreplacemsgWebproxyMapOutput {
	return o
}

func (o SystemreplacemsgWebproxyMapOutput) ToSystemreplacemsgWebproxyMapOutputWithContext(ctx context.Context) SystemreplacemsgWebproxyMapOutput {
	return o
}

func (o SystemreplacemsgWebproxyMapOutput) MapIndex(k pulumi.StringInput) SystemreplacemsgWebproxyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemreplacemsgWebproxy {
		return vs[0].(map[string]*SystemreplacemsgWebproxy)[vs[1].(string)]
	}).(SystemreplacemsgWebproxyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgWebproxyInput)(nil)).Elem(), &SystemreplacemsgWebproxy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgWebproxyArrayInput)(nil)).Elem(), SystemreplacemsgWebproxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgWebproxyMapInput)(nil)).Elem(), SystemreplacemsgWebproxyMap{})
	pulumi.RegisterOutputType(SystemreplacemsgWebproxyOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgWebproxyArrayOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgWebproxyMapOutput{})
}
