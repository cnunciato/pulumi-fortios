// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure device groups. Applies to FortiOS Version `<= 6.2.0`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			trnames12, err := fortios.NewUserDevice(ctx, "trnames12", &fortios.UserDeviceArgs{
//				Alias:    pulumi.String("user_devices2"),
//				Category: pulumi.String("amazon-device"),
//				Mac:      pulumi.String("08:00:20:0a:1c:1d"),
//				Type:     pulumi.String("unknown"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = fortios.NewUserDevicegroup(ctx, "trname", &fortios.UserDevicegroupArgs{
//				Members: fortios.UserDevicegroupMemberArray{
//					&fortios.UserDevicegroupMemberArgs{
//						Name: trnames12.Alias,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # User DeviceGroup can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/userDevicegroup:UserDevicegroup labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/userDevicegroup:UserDevicegroup labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type UserDevicegroup struct {
	pulumi.CustomResourceState

	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Device group member. The structure of `member` block is documented below.
	Members UserDevicegroupMemberArrayOutput `pulumi:"members"`
	// Device group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings UserDevicegroupTaggingArrayOutput `pulumi:"taggings"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewUserDevicegroup registers a new resource with the given unique name, arguments, and options.
func NewUserDevicegroup(ctx *pulumi.Context,
	name string, args *UserDevicegroupArgs, opts ...pulumi.ResourceOption) (*UserDevicegroup, error) {
	if args == nil {
		args = &UserDevicegroupArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource UserDevicegroup
	err := ctx.RegisterResource("fortios:index/userDevicegroup:UserDevicegroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserDevicegroup gets an existing UserDevicegroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserDevicegroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserDevicegroupState, opts ...pulumi.ResourceOption) (*UserDevicegroup, error) {
	var resource UserDevicegroup
	err := ctx.ReadResource("fortios:index/userDevicegroup:UserDevicegroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserDevicegroup resources.
type userDevicegroupState struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Device group member. The structure of `member` block is documented below.
	Members []UserDevicegroupMember `pulumi:"members"`
	// Device group name.
	Name *string `pulumi:"name"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings []UserDevicegroupTagging `pulumi:"taggings"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type UserDevicegroupState struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Device group member. The structure of `member` block is documented below.
	Members UserDevicegroupMemberArrayInput
	// Device group name.
	Name pulumi.StringPtrInput
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings UserDevicegroupTaggingArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (UserDevicegroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*userDevicegroupState)(nil)).Elem()
}

type userDevicegroupArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Device group member. The structure of `member` block is documented below.
	Members []UserDevicegroupMember `pulumi:"members"`
	// Device group name.
	Name *string `pulumi:"name"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings []UserDevicegroupTagging `pulumi:"taggings"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a UserDevicegroup resource.
type UserDevicegroupArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Device group member. The structure of `member` block is documented below.
	Members UserDevicegroupMemberArrayInput
	// Device group name.
	Name pulumi.StringPtrInput
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings UserDevicegroupTaggingArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (UserDevicegroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userDevicegroupArgs)(nil)).Elem()
}

type UserDevicegroupInput interface {
	pulumi.Input

	ToUserDevicegroupOutput() UserDevicegroupOutput
	ToUserDevicegroupOutputWithContext(ctx context.Context) UserDevicegroupOutput
}

func (*UserDevicegroup) ElementType() reflect.Type {
	return reflect.TypeOf((**UserDevicegroup)(nil)).Elem()
}

func (i *UserDevicegroup) ToUserDevicegroupOutput() UserDevicegroupOutput {
	return i.ToUserDevicegroupOutputWithContext(context.Background())
}

func (i *UserDevicegroup) ToUserDevicegroupOutputWithContext(ctx context.Context) UserDevicegroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDevicegroupOutput)
}

// UserDevicegroupArrayInput is an input type that accepts UserDevicegroupArray and UserDevicegroupArrayOutput values.
// You can construct a concrete instance of `UserDevicegroupArrayInput` via:
//
//	UserDevicegroupArray{ UserDevicegroupArgs{...} }
type UserDevicegroupArrayInput interface {
	pulumi.Input

	ToUserDevicegroupArrayOutput() UserDevicegroupArrayOutput
	ToUserDevicegroupArrayOutputWithContext(context.Context) UserDevicegroupArrayOutput
}

type UserDevicegroupArray []UserDevicegroupInput

func (UserDevicegroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserDevicegroup)(nil)).Elem()
}

func (i UserDevicegroupArray) ToUserDevicegroupArrayOutput() UserDevicegroupArrayOutput {
	return i.ToUserDevicegroupArrayOutputWithContext(context.Background())
}

func (i UserDevicegroupArray) ToUserDevicegroupArrayOutputWithContext(ctx context.Context) UserDevicegroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDevicegroupArrayOutput)
}

// UserDevicegroupMapInput is an input type that accepts UserDevicegroupMap and UserDevicegroupMapOutput values.
// You can construct a concrete instance of `UserDevicegroupMapInput` via:
//
//	UserDevicegroupMap{ "key": UserDevicegroupArgs{...} }
type UserDevicegroupMapInput interface {
	pulumi.Input

	ToUserDevicegroupMapOutput() UserDevicegroupMapOutput
	ToUserDevicegroupMapOutputWithContext(context.Context) UserDevicegroupMapOutput
}

type UserDevicegroupMap map[string]UserDevicegroupInput

func (UserDevicegroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserDevicegroup)(nil)).Elem()
}

func (i UserDevicegroupMap) ToUserDevicegroupMapOutput() UserDevicegroupMapOutput {
	return i.ToUserDevicegroupMapOutputWithContext(context.Background())
}

func (i UserDevicegroupMap) ToUserDevicegroupMapOutputWithContext(ctx context.Context) UserDevicegroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDevicegroupMapOutput)
}

type UserDevicegroupOutput struct{ *pulumi.OutputState }

func (UserDevicegroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserDevicegroup)(nil)).Elem()
}

func (o UserDevicegroupOutput) ToUserDevicegroupOutput() UserDevicegroupOutput {
	return o
}

func (o UserDevicegroupOutput) ToUserDevicegroupOutputWithContext(ctx context.Context) UserDevicegroupOutput {
	return o
}

// Comment.
func (o UserDevicegroupOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserDevicegroup) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o UserDevicegroupOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserDevicegroup) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Device group member. The structure of `member` block is documented below.
func (o UserDevicegroupOutput) Members() UserDevicegroupMemberArrayOutput {
	return o.ApplyT(func(v *UserDevicegroup) UserDevicegroupMemberArrayOutput { return v.Members }).(UserDevicegroupMemberArrayOutput)
}

// Device group name.
func (o UserDevicegroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UserDevicegroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Config object tagging. The structure of `tagging` block is documented below.
func (o UserDevicegroupOutput) Taggings() UserDevicegroupTaggingArrayOutput {
	return o.ApplyT(func(v *UserDevicegroup) UserDevicegroupTaggingArrayOutput { return v.Taggings }).(UserDevicegroupTaggingArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o UserDevicegroupOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserDevicegroup) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type UserDevicegroupArrayOutput struct{ *pulumi.OutputState }

func (UserDevicegroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserDevicegroup)(nil)).Elem()
}

func (o UserDevicegroupArrayOutput) ToUserDevicegroupArrayOutput() UserDevicegroupArrayOutput {
	return o
}

func (o UserDevicegroupArrayOutput) ToUserDevicegroupArrayOutputWithContext(ctx context.Context) UserDevicegroupArrayOutput {
	return o
}

func (o UserDevicegroupArrayOutput) Index(i pulumi.IntInput) UserDevicegroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserDevicegroup {
		return vs[0].([]*UserDevicegroup)[vs[1].(int)]
	}).(UserDevicegroupOutput)
}

type UserDevicegroupMapOutput struct{ *pulumi.OutputState }

func (UserDevicegroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserDevicegroup)(nil)).Elem()
}

func (o UserDevicegroupMapOutput) ToUserDevicegroupMapOutput() UserDevicegroupMapOutput {
	return o
}

func (o UserDevicegroupMapOutput) ToUserDevicegroupMapOutputWithContext(ctx context.Context) UserDevicegroupMapOutput {
	return o
}

func (o UserDevicegroupMapOutput) MapIndex(k pulumi.StringInput) UserDevicegroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserDevicegroup {
		return vs[0].(map[string]*UserDevicegroup)[vs[1].(string)]
	}).(UserDevicegroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserDevicegroupInput)(nil)).Elem(), &UserDevicegroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDevicegroupArrayInput)(nil)).Elem(), UserDevicegroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDevicegroupMapInput)(nil)).Elem(), UserDevicegroupMap{})
	pulumi.RegisterOutputType(UserDevicegroupOutput{})
	pulumi.RegisterOutputType(UserDevicegroupArrayOutput{})
	pulumi.RegisterOutputType(UserDevicegroupMapOutput{})
}
