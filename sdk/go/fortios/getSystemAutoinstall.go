// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios system autoinstall
func LookupSystemAutoinstall(ctx *pulumi.Context, args *LookupSystemAutoinstallArgs, opts ...pulumi.InvokeOption) (*LookupSystemAutoinstallResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSystemAutoinstallResult
	err := ctx.Invoke("fortios:index/getSystemAutoinstall:getSystemAutoinstall", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemAutoinstall.
type LookupSystemAutoinstallArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getSystemAutoinstall.
type LookupSystemAutoinstallResult struct {
	// Enable/disable auto install the config in USB disk.
	AutoInstallConfig string `pulumi:"autoInstallConfig"`
	// Enable/disable auto install the image in USB disk.
	AutoInstallImage string `pulumi:"autoInstallImage"`
	// Default config file name in USB disk.
	DefaultConfigFile string `pulumi:"defaultConfigFile"`
	// Default image file name in USB disk.
	DefaultImageFile string `pulumi:"defaultImageFile"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupSystemAutoinstallOutput(ctx *pulumi.Context, args LookupSystemAutoinstallOutputArgs, opts ...pulumi.InvokeOption) LookupSystemAutoinstallResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSystemAutoinstallResult, error) {
			args := v.(LookupSystemAutoinstallArgs)
			r, err := LookupSystemAutoinstall(ctx, &args, opts...)
			var s LookupSystemAutoinstallResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSystemAutoinstallResultOutput)
}

// A collection of arguments for invoking getSystemAutoinstall.
type LookupSystemAutoinstallOutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupSystemAutoinstallOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemAutoinstallArgs)(nil)).Elem()
}

// A collection of values returned by getSystemAutoinstall.
type LookupSystemAutoinstallResultOutput struct{ *pulumi.OutputState }

func (LookupSystemAutoinstallResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemAutoinstallResult)(nil)).Elem()
}

func (o LookupSystemAutoinstallResultOutput) ToLookupSystemAutoinstallResultOutput() LookupSystemAutoinstallResultOutput {
	return o
}

func (o LookupSystemAutoinstallResultOutput) ToLookupSystemAutoinstallResultOutputWithContext(ctx context.Context) LookupSystemAutoinstallResultOutput {
	return o
}

// Enable/disable auto install the config in USB disk.
func (o LookupSystemAutoinstallResultOutput) AutoInstallConfig() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemAutoinstallResult) string { return v.AutoInstallConfig }).(pulumi.StringOutput)
}

// Enable/disable auto install the image in USB disk.
func (o LookupSystemAutoinstallResultOutput) AutoInstallImage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemAutoinstallResult) string { return v.AutoInstallImage }).(pulumi.StringOutput)
}

// Default config file name in USB disk.
func (o LookupSystemAutoinstallResultOutput) DefaultConfigFile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemAutoinstallResult) string { return v.DefaultConfigFile }).(pulumi.StringOutput)
}

// Default image file name in USB disk.
func (o LookupSystemAutoinstallResultOutput) DefaultImageFile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemAutoinstallResult) string { return v.DefaultImageFile }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSystemAutoinstallResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemAutoinstallResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSystemAutoinstallResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSystemAutoinstallResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemAutoinstallResultOutput{})
}
