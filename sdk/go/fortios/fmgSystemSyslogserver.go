// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource supports Create/Delete system syslog server for FortiManager.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewFmgSystemSyslogserver(ctx, "test1", &fortios.FmgSystemSyslogserverArgs{
//				Ip:   pulumi.String("1.1.1.1"),
//				Port: pulumi.Int(99),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FmgSystemSyslogserver struct {
	pulumi.CustomResourceState

	// Ipaddress of the syslog server.
	Ip pulumi.StringPtrOutput `pulumi:"ip"`
	// Syslog server name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Port of the syslog server.
	Port pulumi.IntPtrOutput `pulumi:"port"`
}

// NewFmgSystemSyslogserver registers a new resource with the given unique name, arguments, and options.
func NewFmgSystemSyslogserver(ctx *pulumi.Context,
	name string, args *FmgSystemSyslogserverArgs, opts ...pulumi.ResourceOption) (*FmgSystemSyslogserver, error) {
	if args == nil {
		args = &FmgSystemSyslogserverArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FmgSystemSyslogserver
	err := ctx.RegisterResource("fortios:index/fmgSystemSyslogserver:FmgSystemSyslogserver", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFmgSystemSyslogserver gets an existing FmgSystemSyslogserver resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFmgSystemSyslogserver(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FmgSystemSyslogserverState, opts ...pulumi.ResourceOption) (*FmgSystemSyslogserver, error) {
	var resource FmgSystemSyslogserver
	err := ctx.ReadResource("fortios:index/fmgSystemSyslogserver:FmgSystemSyslogserver", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FmgSystemSyslogserver resources.
type fmgSystemSyslogserverState struct {
	// Ipaddress of the syslog server.
	Ip *string `pulumi:"ip"`
	// Syslog server name.
	Name *string `pulumi:"name"`
	// Port of the syslog server.
	Port *int `pulumi:"port"`
}

type FmgSystemSyslogserverState struct {
	// Ipaddress of the syslog server.
	Ip pulumi.StringPtrInput
	// Syslog server name.
	Name pulumi.StringPtrInput
	// Port of the syslog server.
	Port pulumi.IntPtrInput
}

func (FmgSystemSyslogserverState) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgSystemSyslogserverState)(nil)).Elem()
}

type fmgSystemSyslogserverArgs struct {
	// Ipaddress of the syslog server.
	Ip *string `pulumi:"ip"`
	// Syslog server name.
	Name *string `pulumi:"name"`
	// Port of the syslog server.
	Port *int `pulumi:"port"`
}

// The set of arguments for constructing a FmgSystemSyslogserver resource.
type FmgSystemSyslogserverArgs struct {
	// Ipaddress of the syslog server.
	Ip pulumi.StringPtrInput
	// Syslog server name.
	Name pulumi.StringPtrInput
	// Port of the syslog server.
	Port pulumi.IntPtrInput
}

func (FmgSystemSyslogserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fmgSystemSyslogserverArgs)(nil)).Elem()
}

type FmgSystemSyslogserverInput interface {
	pulumi.Input

	ToFmgSystemSyslogserverOutput() FmgSystemSyslogserverOutput
	ToFmgSystemSyslogserverOutputWithContext(ctx context.Context) FmgSystemSyslogserverOutput
}

func (*FmgSystemSyslogserver) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgSystemSyslogserver)(nil)).Elem()
}

func (i *FmgSystemSyslogserver) ToFmgSystemSyslogserverOutput() FmgSystemSyslogserverOutput {
	return i.ToFmgSystemSyslogserverOutputWithContext(context.Background())
}

func (i *FmgSystemSyslogserver) ToFmgSystemSyslogserverOutputWithContext(ctx context.Context) FmgSystemSyslogserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemSyslogserverOutput)
}

// FmgSystemSyslogserverArrayInput is an input type that accepts FmgSystemSyslogserverArray and FmgSystemSyslogserverArrayOutput values.
// You can construct a concrete instance of `FmgSystemSyslogserverArrayInput` via:
//
//	FmgSystemSyslogserverArray{ FmgSystemSyslogserverArgs{...} }
type FmgSystemSyslogserverArrayInput interface {
	pulumi.Input

	ToFmgSystemSyslogserverArrayOutput() FmgSystemSyslogserverArrayOutput
	ToFmgSystemSyslogserverArrayOutputWithContext(context.Context) FmgSystemSyslogserverArrayOutput
}

type FmgSystemSyslogserverArray []FmgSystemSyslogserverInput

func (FmgSystemSyslogserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgSystemSyslogserver)(nil)).Elem()
}

func (i FmgSystemSyslogserverArray) ToFmgSystemSyslogserverArrayOutput() FmgSystemSyslogserverArrayOutput {
	return i.ToFmgSystemSyslogserverArrayOutputWithContext(context.Background())
}

func (i FmgSystemSyslogserverArray) ToFmgSystemSyslogserverArrayOutputWithContext(ctx context.Context) FmgSystemSyslogserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemSyslogserverArrayOutput)
}

// FmgSystemSyslogserverMapInput is an input type that accepts FmgSystemSyslogserverMap and FmgSystemSyslogserverMapOutput values.
// You can construct a concrete instance of `FmgSystemSyslogserverMapInput` via:
//
//	FmgSystemSyslogserverMap{ "key": FmgSystemSyslogserverArgs{...} }
type FmgSystemSyslogserverMapInput interface {
	pulumi.Input

	ToFmgSystemSyslogserverMapOutput() FmgSystemSyslogserverMapOutput
	ToFmgSystemSyslogserverMapOutputWithContext(context.Context) FmgSystemSyslogserverMapOutput
}

type FmgSystemSyslogserverMap map[string]FmgSystemSyslogserverInput

func (FmgSystemSyslogserverMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgSystemSyslogserver)(nil)).Elem()
}

func (i FmgSystemSyslogserverMap) ToFmgSystemSyslogserverMapOutput() FmgSystemSyslogserverMapOutput {
	return i.ToFmgSystemSyslogserverMapOutputWithContext(context.Background())
}

func (i FmgSystemSyslogserverMap) ToFmgSystemSyslogserverMapOutputWithContext(ctx context.Context) FmgSystemSyslogserverMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FmgSystemSyslogserverMapOutput)
}

type FmgSystemSyslogserverOutput struct{ *pulumi.OutputState }

func (FmgSystemSyslogserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FmgSystemSyslogserver)(nil)).Elem()
}

func (o FmgSystemSyslogserverOutput) ToFmgSystemSyslogserverOutput() FmgSystemSyslogserverOutput {
	return o
}

func (o FmgSystemSyslogserverOutput) ToFmgSystemSyslogserverOutputWithContext(ctx context.Context) FmgSystemSyslogserverOutput {
	return o
}

// Ipaddress of the syslog server.
func (o FmgSystemSyslogserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FmgSystemSyslogserver) pulumi.StringPtrOutput { return v.Ip }).(pulumi.StringPtrOutput)
}

// Syslog server name.
func (o FmgSystemSyslogserverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FmgSystemSyslogserver) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Port of the syslog server.
func (o FmgSystemSyslogserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FmgSystemSyslogserver) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

type FmgSystemSyslogserverArrayOutput struct{ *pulumi.OutputState }

func (FmgSystemSyslogserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FmgSystemSyslogserver)(nil)).Elem()
}

func (o FmgSystemSyslogserverArrayOutput) ToFmgSystemSyslogserverArrayOutput() FmgSystemSyslogserverArrayOutput {
	return o
}

func (o FmgSystemSyslogserverArrayOutput) ToFmgSystemSyslogserverArrayOutputWithContext(ctx context.Context) FmgSystemSyslogserverArrayOutput {
	return o
}

func (o FmgSystemSyslogserverArrayOutput) Index(i pulumi.IntInput) FmgSystemSyslogserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FmgSystemSyslogserver {
		return vs[0].([]*FmgSystemSyslogserver)[vs[1].(int)]
	}).(FmgSystemSyslogserverOutput)
}

type FmgSystemSyslogserverMapOutput struct{ *pulumi.OutputState }

func (FmgSystemSyslogserverMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FmgSystemSyslogserver)(nil)).Elem()
}

func (o FmgSystemSyslogserverMapOutput) ToFmgSystemSyslogserverMapOutput() FmgSystemSyslogserverMapOutput {
	return o
}

func (o FmgSystemSyslogserverMapOutput) ToFmgSystemSyslogserverMapOutputWithContext(ctx context.Context) FmgSystemSyslogserverMapOutput {
	return o
}

func (o FmgSystemSyslogserverMapOutput) MapIndex(k pulumi.StringInput) FmgSystemSyslogserverOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FmgSystemSyslogserver {
		return vs[0].(map[string]*FmgSystemSyslogserver)[vs[1].(string)]
	}).(FmgSystemSyslogserverOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemSyslogserverInput)(nil)).Elem(), &FmgSystemSyslogserver{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemSyslogserverArrayInput)(nil)).Elem(), FmgSystemSyslogserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FmgSystemSyslogserverMapInput)(nil)).Elem(), FmgSystemSyslogserverMap{})
	pulumi.RegisterOutputType(FmgSystemSyslogserverOutput{})
	pulumi.RegisterOutputType(FmgSystemSyslogserverArrayOutput{})
	pulumi.RegisterOutputType(FmgSystemSyslogserverMapOutput{})
}
