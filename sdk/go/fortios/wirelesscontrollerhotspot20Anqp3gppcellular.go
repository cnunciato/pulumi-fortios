// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure 3GPP public land mobile network (PLMN).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewWirelesscontrollerhotspot20Anqp3gppcellular(ctx, "trname", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # WirelessControllerHotspot20 Anqp3GppCellular can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/wirelesscontrollerhotspot20Anqp3gppcellular:Wirelesscontrollerhotspot20Anqp3gppcellular labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/wirelesscontrollerhotspot20Anqp3gppcellular:Wirelesscontrollerhotspot20Anqp3gppcellular labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type Wirelesscontrollerhotspot20Anqp3gppcellular struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
	MccMncLists Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput `pulumi:"mccMncLists"`
	// 3GPP PLMN name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWirelesscontrollerhotspot20Anqp3gppcellular registers a new resource with the given unique name, arguments, and options.
func NewWirelesscontrollerhotspot20Anqp3gppcellular(ctx *pulumi.Context,
	name string, args *Wirelesscontrollerhotspot20Anqp3gppcellularArgs, opts ...pulumi.ResourceOption) (*Wirelesscontrollerhotspot20Anqp3gppcellular, error) {
	if args == nil {
		args = &Wirelesscontrollerhotspot20Anqp3gppcellularArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource Wirelesscontrollerhotspot20Anqp3gppcellular
	err := ctx.RegisterResource("fortios:index/wirelesscontrollerhotspot20Anqp3gppcellular:Wirelesscontrollerhotspot20Anqp3gppcellular", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelesscontrollerhotspot20Anqp3gppcellular gets an existing Wirelesscontrollerhotspot20Anqp3gppcellular resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelesscontrollerhotspot20Anqp3gppcellular(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Wirelesscontrollerhotspot20Anqp3gppcellularState, opts ...pulumi.ResourceOption) (*Wirelesscontrollerhotspot20Anqp3gppcellular, error) {
	var resource Wirelesscontrollerhotspot20Anqp3gppcellular
	err := ctx.ReadResource("fortios:index/wirelesscontrollerhotspot20Anqp3gppcellular:Wirelesscontrollerhotspot20Anqp3gppcellular", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Wirelesscontrollerhotspot20Anqp3gppcellular resources.
type wirelesscontrollerhotspot20Anqp3gppcellularState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
	MccMncLists []Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList `pulumi:"mccMncLists"`
	// 3GPP PLMN name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type Wirelesscontrollerhotspot20Anqp3gppcellularState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
	MccMncLists Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayInput
	// 3GPP PLMN name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Wirelesscontrollerhotspot20Anqp3gppcellularState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelesscontrollerhotspot20Anqp3gppcellularState)(nil)).Elem()
}

type wirelesscontrollerhotspot20Anqp3gppcellularArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
	MccMncLists []Wirelesscontrollerhotspot20Anqp3gppcellularMccMncList `pulumi:"mccMncLists"`
	// 3GPP PLMN name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a Wirelesscontrollerhotspot20Anqp3gppcellular resource.
type Wirelesscontrollerhotspot20Anqp3gppcellularArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
	MccMncLists Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayInput
	// 3GPP PLMN name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (Wirelesscontrollerhotspot20Anqp3gppcellularArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelesscontrollerhotspot20Anqp3gppcellularArgs)(nil)).Elem()
}

type Wirelesscontrollerhotspot20Anqp3gppcellularInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20Anqp3gppcellularOutput() Wirelesscontrollerhotspot20Anqp3gppcellularOutput
	ToWirelesscontrollerhotspot20Anqp3gppcellularOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularOutput
}

func (*Wirelesscontrollerhotspot20Anqp3gppcellular) ElementType() reflect.Type {
	return reflect.TypeOf((**Wirelesscontrollerhotspot20Anqp3gppcellular)(nil)).Elem()
}

func (i *Wirelesscontrollerhotspot20Anqp3gppcellular) ToWirelesscontrollerhotspot20Anqp3gppcellularOutput() Wirelesscontrollerhotspot20Anqp3gppcellularOutput {
	return i.ToWirelesscontrollerhotspot20Anqp3gppcellularOutputWithContext(context.Background())
}

func (i *Wirelesscontrollerhotspot20Anqp3gppcellular) ToWirelesscontrollerhotspot20Anqp3gppcellularOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20Anqp3gppcellularOutput)
}

// Wirelesscontrollerhotspot20Anqp3gppcellularArrayInput is an input type that accepts Wirelesscontrollerhotspot20Anqp3gppcellularArray and Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20Anqp3gppcellularArrayInput` via:
//
//	Wirelesscontrollerhotspot20Anqp3gppcellularArray{ Wirelesscontrollerhotspot20Anqp3gppcellularArgs{...} }
type Wirelesscontrollerhotspot20Anqp3gppcellularArrayInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20Anqp3gppcellularArrayOutput() Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput
	ToWirelesscontrollerhotspot20Anqp3gppcellularArrayOutputWithContext(context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput
}

type Wirelesscontrollerhotspot20Anqp3gppcellularArray []Wirelesscontrollerhotspot20Anqp3gppcellularInput

func (Wirelesscontrollerhotspot20Anqp3gppcellularArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Wirelesscontrollerhotspot20Anqp3gppcellular)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20Anqp3gppcellularArray) ToWirelesscontrollerhotspot20Anqp3gppcellularArrayOutput() Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput {
	return i.ToWirelesscontrollerhotspot20Anqp3gppcellularArrayOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20Anqp3gppcellularArray) ToWirelesscontrollerhotspot20Anqp3gppcellularArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput)
}

// Wirelesscontrollerhotspot20Anqp3gppcellularMapInput is an input type that accepts Wirelesscontrollerhotspot20Anqp3gppcellularMap and Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput values.
// You can construct a concrete instance of `Wirelesscontrollerhotspot20Anqp3gppcellularMapInput` via:
//
//	Wirelesscontrollerhotspot20Anqp3gppcellularMap{ "key": Wirelesscontrollerhotspot20Anqp3gppcellularArgs{...} }
type Wirelesscontrollerhotspot20Anqp3gppcellularMapInput interface {
	pulumi.Input

	ToWirelesscontrollerhotspot20Anqp3gppcellularMapOutput() Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput
	ToWirelesscontrollerhotspot20Anqp3gppcellularMapOutputWithContext(context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput
}

type Wirelesscontrollerhotspot20Anqp3gppcellularMap map[string]Wirelesscontrollerhotspot20Anqp3gppcellularInput

func (Wirelesscontrollerhotspot20Anqp3gppcellularMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Wirelesscontrollerhotspot20Anqp3gppcellular)(nil)).Elem()
}

func (i Wirelesscontrollerhotspot20Anqp3gppcellularMap) ToWirelesscontrollerhotspot20Anqp3gppcellularMapOutput() Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput {
	return i.ToWirelesscontrollerhotspot20Anqp3gppcellularMapOutputWithContext(context.Background())
}

func (i Wirelesscontrollerhotspot20Anqp3gppcellularMap) ToWirelesscontrollerhotspot20Anqp3gppcellularMapOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput)
}

type Wirelesscontrollerhotspot20Anqp3gppcellularOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20Anqp3gppcellularOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Wirelesscontrollerhotspot20Anqp3gppcellular)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularOutput) ToWirelesscontrollerhotspot20Anqp3gppcellularOutput() Wirelesscontrollerhotspot20Anqp3gppcellularOutput {
	return o
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularOutput) ToWirelesscontrollerhotspot20Anqp3gppcellularOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o Wirelesscontrollerhotspot20Anqp3gppcellularOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20Anqp3gppcellular) pulumi.StringPtrOutput {
		return v.DynamicSortSubtable
	}).(pulumi.StringPtrOutput)
}

// Mobile Country Code and Mobile Network Code configuration. The structure of `mccMncList` block is documented below.
func (o Wirelesscontrollerhotspot20Anqp3gppcellularOutput) MccMncLists() Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20Anqp3gppcellular) Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput {
		return v.MccMncLists
	}).(Wirelesscontrollerhotspot20Anqp3gppcellularMccMncListArrayOutput)
}

// 3GPP PLMN name.
func (o Wirelesscontrollerhotspot20Anqp3gppcellularOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20Anqp3gppcellular) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o Wirelesscontrollerhotspot20Anqp3gppcellularOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wirelesscontrollerhotspot20Anqp3gppcellular) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Wirelesscontrollerhotspot20Anqp3gppcellular)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput) ToWirelesscontrollerhotspot20Anqp3gppcellularArrayOutput() Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput) ToWirelesscontrollerhotspot20Anqp3gppcellularArrayOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput {
	return o
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput) Index(i pulumi.IntInput) Wirelesscontrollerhotspot20Anqp3gppcellularOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Wirelesscontrollerhotspot20Anqp3gppcellular {
		return vs[0].([]*Wirelesscontrollerhotspot20Anqp3gppcellular)[vs[1].(int)]
	}).(Wirelesscontrollerhotspot20Anqp3gppcellularOutput)
}

type Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput struct{ *pulumi.OutputState }

func (Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Wirelesscontrollerhotspot20Anqp3gppcellular)(nil)).Elem()
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput) ToWirelesscontrollerhotspot20Anqp3gppcellularMapOutput() Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput {
	return o
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput) ToWirelesscontrollerhotspot20Anqp3gppcellularMapOutputWithContext(ctx context.Context) Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput {
	return o
}

func (o Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput) MapIndex(k pulumi.StringInput) Wirelesscontrollerhotspot20Anqp3gppcellularOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Wirelesscontrollerhotspot20Anqp3gppcellular {
		return vs[0].(map[string]*Wirelesscontrollerhotspot20Anqp3gppcellular)[vs[1].(string)]
	}).(Wirelesscontrollerhotspot20Anqp3gppcellularOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20Anqp3gppcellularInput)(nil)).Elem(), &Wirelesscontrollerhotspot20Anqp3gppcellular{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20Anqp3gppcellularArrayInput)(nil)).Elem(), Wirelesscontrollerhotspot20Anqp3gppcellularArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Wirelesscontrollerhotspot20Anqp3gppcellularMapInput)(nil)).Elem(), Wirelesscontrollerhotspot20Anqp3gppcellularMap{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20Anqp3gppcellularOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20Anqp3gppcellularArrayOutput{})
	pulumi.RegisterOutputType(Wirelesscontrollerhotspot20Anqp3gppcellularMapOutput{})
}
