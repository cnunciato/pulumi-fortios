// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure user defined IPv6 local-in policies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewFirewallLocalinpolicy6(ctx, "trname", &fortios.FirewallLocalinpolicy6Args{
//				Action: pulumi.String("accept"),
//				Dstaddrs: fortios.FirewallLocalinpolicy6DstaddrArray{
//					&fortios.FirewallLocalinpolicy6DstaddrArgs{
//						Name: pulumi.String("all"),
//					},
//				},
//				Intf:     pulumi.String("port4"),
//				Policyid: pulumi.Int(1),
//				Schedule: pulumi.String("always"),
//				Services: fortios.FirewallLocalinpolicy6ServiceArray{
//					&fortios.FirewallLocalinpolicy6ServiceArgs{
//						Name: pulumi.String("ALL"),
//					},
//				},
//				Srcaddrs: fortios.FirewallLocalinpolicy6SrcaddrArray{
//					&fortios.FirewallLocalinpolicy6SrcaddrArgs{
//						Name: pulumi.String("all"),
//					},
//				},
//				Status: pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Firewall LocalInPolicy6 can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/firewallLocalinpolicy6:FirewallLocalinpolicy6 labelname {{policyid}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/firewallLocalinpolicy6:FirewallLocalinpolicy6 labelname {{policyid}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type FirewallLocalinpolicy6 struct {
	pulumi.CustomResourceState

	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringOutput `pulumi:"dstaddrNegate"`
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallLocalinpolicy6DstaddrArrayOutput `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Incoming interface name from available options.
	Intf pulumi.StringOutput `pulumi:"intf"`
	// User defined local in policy ID.
	Policyid pulumi.IntOutput `pulumi:"policyid"`
	// Schedule object from available options.
	Schedule pulumi.StringOutput `pulumi:"schedule"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringOutput `pulumi:"serviceNegate"`
	// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
	Services FirewallLocalinpolicy6ServiceArrayOutput `pulumi:"services"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringOutput `pulumi:"srcaddrNegate"`
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallLocalinpolicy6SrcaddrArrayOutput `pulumi:"srcaddrs"`
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallLocalinpolicy6 registers a new resource with the given unique name, arguments, and options.
func NewFirewallLocalinpolicy6(ctx *pulumi.Context,
	name string, args *FirewallLocalinpolicy6Args, opts ...pulumi.ResourceOption) (*FirewallLocalinpolicy6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dstaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Dstaddrs'")
	}
	if args.Intf == nil {
		return nil, errors.New("invalid value for required argument 'Intf'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	if args.Services == nil {
		return nil, errors.New("invalid value for required argument 'Services'")
	}
	if args.Srcaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Srcaddrs'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallLocalinpolicy6
	err := ctx.RegisterResource("fortios:index/firewallLocalinpolicy6:FirewallLocalinpolicy6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallLocalinpolicy6 gets an existing FirewallLocalinpolicy6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallLocalinpolicy6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallLocalinpolicy6State, opts ...pulumi.ResourceOption) (*FirewallLocalinpolicy6, error) {
	var resource FirewallLocalinpolicy6
	err := ctx.ReadResource("fortios:index/firewallLocalinpolicy6:FirewallLocalinpolicy6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallLocalinpolicy6 resources.
type firewallLocalinpolicy6State struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action *string `pulumi:"action"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate *string `pulumi:"dstaddrNegate"`
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs []FirewallLocalinpolicy6Dstaddr `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Incoming interface name from available options.
	Intf *string `pulumi:"intf"`
	// User defined local in policy ID.
	Policyid *int `pulumi:"policyid"`
	// Schedule object from available options.
	Schedule *string `pulumi:"schedule"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate *string `pulumi:"serviceNegate"`
	// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
	Services []FirewallLocalinpolicy6Service `pulumi:"services"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate *string `pulumi:"srcaddrNegate"`
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs []FirewallLocalinpolicy6Srcaddr `pulumi:"srcaddrs"`
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallLocalinpolicy6State struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringPtrInput
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallLocalinpolicy6DstaddrArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Incoming interface name from available options.
	Intf pulumi.StringPtrInput
	// User defined local in policy ID.
	Policyid pulumi.IntPtrInput
	// Schedule object from available options.
	Schedule pulumi.StringPtrInput
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringPtrInput
	// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
	Services FirewallLocalinpolicy6ServiceArrayInput
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringPtrInput
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallLocalinpolicy6SrcaddrArrayInput
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallLocalinpolicy6State) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallLocalinpolicy6State)(nil)).Elem()
}

type firewallLocalinpolicy6Args struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action *string `pulumi:"action"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate *string `pulumi:"dstaddrNegate"`
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs []FirewallLocalinpolicy6Dstaddr `pulumi:"dstaddrs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Incoming interface name from available options.
	Intf string `pulumi:"intf"`
	// User defined local in policy ID.
	Policyid *int `pulumi:"policyid"`
	// Schedule object from available options.
	Schedule string `pulumi:"schedule"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate *string `pulumi:"serviceNegate"`
	// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
	Services []FirewallLocalinpolicy6Service `pulumi:"services"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate *string `pulumi:"srcaddrNegate"`
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs []FirewallLocalinpolicy6Srcaddr `pulumi:"srcaddrs"`
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallLocalinpolicy6 resource.
type FirewallLocalinpolicy6Args struct {
	// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
	Action pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringPtrInput
	// Destination address object from available options. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallLocalinpolicy6DstaddrArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Incoming interface name from available options.
	Intf pulumi.StringInput
	// User defined local in policy ID.
	Policyid pulumi.IntPtrInput
	// Schedule object from available options.
	Schedule pulumi.StringInput
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringPtrInput
	// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
	Services FirewallLocalinpolicy6ServiceArrayInput
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringPtrInput
	// Source address object from available options. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallLocalinpolicy6SrcaddrArrayInput
	// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallLocalinpolicy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallLocalinpolicy6Args)(nil)).Elem()
}

type FirewallLocalinpolicy6Input interface {
	pulumi.Input

	ToFirewallLocalinpolicy6Output() FirewallLocalinpolicy6Output
	ToFirewallLocalinpolicy6OutputWithContext(ctx context.Context) FirewallLocalinpolicy6Output
}

func (*FirewallLocalinpolicy6) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallLocalinpolicy6)(nil)).Elem()
}

func (i *FirewallLocalinpolicy6) ToFirewallLocalinpolicy6Output() FirewallLocalinpolicy6Output {
	return i.ToFirewallLocalinpolicy6OutputWithContext(context.Background())
}

func (i *FirewallLocalinpolicy6) ToFirewallLocalinpolicy6OutputWithContext(ctx context.Context) FirewallLocalinpolicy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicy6Output)
}

// FirewallLocalinpolicy6ArrayInput is an input type that accepts FirewallLocalinpolicy6Array and FirewallLocalinpolicy6ArrayOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicy6ArrayInput` via:
//
//	FirewallLocalinpolicy6Array{ FirewallLocalinpolicy6Args{...} }
type FirewallLocalinpolicy6ArrayInput interface {
	pulumi.Input

	ToFirewallLocalinpolicy6ArrayOutput() FirewallLocalinpolicy6ArrayOutput
	ToFirewallLocalinpolicy6ArrayOutputWithContext(context.Context) FirewallLocalinpolicy6ArrayOutput
}

type FirewallLocalinpolicy6Array []FirewallLocalinpolicy6Input

func (FirewallLocalinpolicy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallLocalinpolicy6)(nil)).Elem()
}

func (i FirewallLocalinpolicy6Array) ToFirewallLocalinpolicy6ArrayOutput() FirewallLocalinpolicy6ArrayOutput {
	return i.ToFirewallLocalinpolicy6ArrayOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicy6Array) ToFirewallLocalinpolicy6ArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicy6ArrayOutput)
}

// FirewallLocalinpolicy6MapInput is an input type that accepts FirewallLocalinpolicy6Map and FirewallLocalinpolicy6MapOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicy6MapInput` via:
//
//	FirewallLocalinpolicy6Map{ "key": FirewallLocalinpolicy6Args{...} }
type FirewallLocalinpolicy6MapInput interface {
	pulumi.Input

	ToFirewallLocalinpolicy6MapOutput() FirewallLocalinpolicy6MapOutput
	ToFirewallLocalinpolicy6MapOutputWithContext(context.Context) FirewallLocalinpolicy6MapOutput
}

type FirewallLocalinpolicy6Map map[string]FirewallLocalinpolicy6Input

func (FirewallLocalinpolicy6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallLocalinpolicy6)(nil)).Elem()
}

func (i FirewallLocalinpolicy6Map) ToFirewallLocalinpolicy6MapOutput() FirewallLocalinpolicy6MapOutput {
	return i.ToFirewallLocalinpolicy6MapOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicy6Map) ToFirewallLocalinpolicy6MapOutputWithContext(ctx context.Context) FirewallLocalinpolicy6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicy6MapOutput)
}

type FirewallLocalinpolicy6Output struct{ *pulumi.OutputState }

func (FirewallLocalinpolicy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallLocalinpolicy6)(nil)).Elem()
}

func (o FirewallLocalinpolicy6Output) ToFirewallLocalinpolicy6Output() FirewallLocalinpolicy6Output {
	return o
}

func (o FirewallLocalinpolicy6Output) ToFirewallLocalinpolicy6OutputWithContext(ctx context.Context) FirewallLocalinpolicy6Output {
	return o
}

// Action performed on traffic matching the policy (default = deny). Valid values: `accept`, `deny`.
func (o FirewallLocalinpolicy6Output) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Comment.
func (o FirewallLocalinpolicy6Output) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
func (o FirewallLocalinpolicy6Output) DstaddrNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringOutput { return v.DstaddrNegate }).(pulumi.StringOutput)
}

// Destination address object from available options. The structure of `dstaddr` block is documented below.
func (o FirewallLocalinpolicy6Output) Dstaddrs() FirewallLocalinpolicy6DstaddrArrayOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) FirewallLocalinpolicy6DstaddrArrayOutput { return v.Dstaddrs }).(FirewallLocalinpolicy6DstaddrArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o FirewallLocalinpolicy6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Incoming interface name from available options.
func (o FirewallLocalinpolicy6Output) Intf() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringOutput { return v.Intf }).(pulumi.StringOutput)
}

// User defined local in policy ID.
func (o FirewallLocalinpolicy6Output) Policyid() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.IntOutput { return v.Policyid }).(pulumi.IntOutput)
}

// Schedule object from available options.
func (o FirewallLocalinpolicy6Output) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringOutput { return v.Schedule }).(pulumi.StringOutput)
}

// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
func (o FirewallLocalinpolicy6Output) ServiceNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringOutput { return v.ServiceNegate }).(pulumi.StringOutput)
}

// Service object from available options. Separate names with a space. The structure of `service` block is documented below.
func (o FirewallLocalinpolicy6Output) Services() FirewallLocalinpolicy6ServiceArrayOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) FirewallLocalinpolicy6ServiceArrayOutput { return v.Services }).(FirewallLocalinpolicy6ServiceArrayOutput)
}

// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
func (o FirewallLocalinpolicy6Output) SrcaddrNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringOutput { return v.SrcaddrNegate }).(pulumi.StringOutput)
}

// Source address object from available options. The structure of `srcaddr` block is documented below.
func (o FirewallLocalinpolicy6Output) Srcaddrs() FirewallLocalinpolicy6SrcaddrArrayOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) FirewallLocalinpolicy6SrcaddrArrayOutput { return v.Srcaddrs }).(FirewallLocalinpolicy6SrcaddrArrayOutput)
}

// Enable/disable this local-in policy. Valid values: `enable`, `disable`.
func (o FirewallLocalinpolicy6Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
func (o FirewallLocalinpolicy6Output) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FirewallLocalinpolicy6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallLocalinpolicy6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallLocalinpolicy6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallLocalinpolicy6)(nil)).Elem()
}

func (o FirewallLocalinpolicy6ArrayOutput) ToFirewallLocalinpolicy6ArrayOutput() FirewallLocalinpolicy6ArrayOutput {
	return o
}

func (o FirewallLocalinpolicy6ArrayOutput) ToFirewallLocalinpolicy6ArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicy6ArrayOutput {
	return o
}

func (o FirewallLocalinpolicy6ArrayOutput) Index(i pulumi.IntInput) FirewallLocalinpolicy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallLocalinpolicy6 {
		return vs[0].([]*FirewallLocalinpolicy6)[vs[1].(int)]
	}).(FirewallLocalinpolicy6Output)
}

type FirewallLocalinpolicy6MapOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicy6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallLocalinpolicy6)(nil)).Elem()
}

func (o FirewallLocalinpolicy6MapOutput) ToFirewallLocalinpolicy6MapOutput() FirewallLocalinpolicy6MapOutput {
	return o
}

func (o FirewallLocalinpolicy6MapOutput) ToFirewallLocalinpolicy6MapOutputWithContext(ctx context.Context) FirewallLocalinpolicy6MapOutput {
	return o
}

func (o FirewallLocalinpolicy6MapOutput) MapIndex(k pulumi.StringInput) FirewallLocalinpolicy6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallLocalinpolicy6 {
		return vs[0].(map[string]*FirewallLocalinpolicy6)[vs[1].(string)]
	}).(FirewallLocalinpolicy6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicy6Input)(nil)).Elem(), &FirewallLocalinpolicy6{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicy6ArrayInput)(nil)).Elem(), FirewallLocalinpolicy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicy6MapInput)(nil)).Elem(), FirewallLocalinpolicy6Map{})
	pulumi.RegisterOutputType(FirewallLocalinpolicy6Output{})
	pulumi.RegisterOutputType(FirewallLocalinpolicy6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicy6MapOutput{})
}
