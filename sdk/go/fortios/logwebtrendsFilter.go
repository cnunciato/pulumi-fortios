// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Filters for WebTrends.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewLogwebtrendsFilter(ctx, "trname", &fortios.LogwebtrendsFilterArgs{
//				Anomaly:          pulumi.String("enable"),
//				Dns:              pulumi.String("enable"),
//				FilterType:       pulumi.String("include"),
//				ForwardTraffic:   pulumi.String("enable"),
//				Gtp:              pulumi.String("enable"),
//				LocalTraffic:     pulumi.String("enable"),
//				MulticastTraffic: pulumi.String("enable"),
//				Severity:         pulumi.String("information"),
//				SnifferTraffic:   pulumi.String("enable"),
//				Ssh:              pulumi.String("enable"),
//				Voip:             pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # LogWebtrends Filter can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/logwebtrendsFilter:LogwebtrendsFilter labelname LogWebtrendsFilter
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/logwebtrendsFilter:LogwebtrendsFilter labelname LogWebtrendsFilter
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type LogwebtrendsFilter struct {
	pulumi.CustomResourceState

	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringOutput `pulumi:"anomaly"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringOutput `pulumi:"dns"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Webtrends log filter.
	Filter pulumi.StringOutput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringOutput `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringOutput `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogwebtrendsFilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringOutput `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringOutput `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringOutput `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringOutput `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringOutput `pulumi:"netscanVulnerability"`
	// Lowest severity level to log to WebTrends. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringOutput `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringOutput `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringOutput `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringOutput `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringOutput `pulumi:"ztnaTraffic"`
}

// NewLogwebtrendsFilter registers a new resource with the given unique name, arguments, and options.
func NewLogwebtrendsFilter(ctx *pulumi.Context,
	name string, args *LogwebtrendsFilterArgs, opts ...pulumi.ResourceOption) (*LogwebtrendsFilter, error) {
	if args == nil {
		args = &LogwebtrendsFilterArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LogwebtrendsFilter
	err := ctx.RegisterResource("fortios:index/logwebtrendsFilter:LogwebtrendsFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogwebtrendsFilter gets an existing LogwebtrendsFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogwebtrendsFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogwebtrendsFilterState, opts ...pulumi.ResourceOption) (*LogwebtrendsFilter, error) {
	var resource LogwebtrendsFilter
	err := ctx.ReadResource("fortios:index/logwebtrendsFilter:LogwebtrendsFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogwebtrendsFilter resources.
type logwebtrendsFilterState struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly *string `pulumi:"anomaly"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns *string `pulumi:"dns"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Webtrends log filter.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic *string `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles []LogwebtrendsFilterFreeStyle `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp *string `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic *string `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic *string `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery *string `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability *string `pulumi:"netscanVulnerability"`
	// Lowest severity level to log to WebTrends. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic *string `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh *string `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip *string `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic *string `pulumi:"ztnaTraffic"`
}

type LogwebtrendsFilterState struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringPtrInput
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Webtrends log filter.
	Filter pulumi.StringPtrInput
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringPtrInput
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogwebtrendsFilterFreeStyleArrayInput
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringPtrInput
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringPtrInput
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringPtrInput
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringPtrInput
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringPtrInput
	// Lowest severity level to log to WebTrends. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringPtrInput
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringPtrInput
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringPtrInput
}

func (LogwebtrendsFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logwebtrendsFilterState)(nil)).Elem()
}

type logwebtrendsFilterArgs struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly *string `pulumi:"anomaly"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns *string `pulumi:"dns"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Webtrends log filter.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic *string `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles []LogwebtrendsFilterFreeStyle `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp *string `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic *string `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic *string `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery *string `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability *string `pulumi:"netscanVulnerability"`
	// Lowest severity level to log to WebTrends. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic *string `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh *string `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip *string `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic *string `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogwebtrendsFilter resource.
type LogwebtrendsFilterArgs struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringPtrInput
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Webtrends log filter.
	Filter pulumi.StringPtrInput
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringPtrInput
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogwebtrendsFilterFreeStyleArrayInput
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringPtrInput
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringPtrInput
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringPtrInput
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringPtrInput
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringPtrInput
	// Lowest severity level to log to WebTrends. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringPtrInput
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringPtrInput
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringPtrInput
}

func (LogwebtrendsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logwebtrendsFilterArgs)(nil)).Elem()
}

type LogwebtrendsFilterInput interface {
	pulumi.Input

	ToLogwebtrendsFilterOutput() LogwebtrendsFilterOutput
	ToLogwebtrendsFilterOutputWithContext(ctx context.Context) LogwebtrendsFilterOutput
}

func (*LogwebtrendsFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogwebtrendsFilter)(nil)).Elem()
}

func (i *LogwebtrendsFilter) ToLogwebtrendsFilterOutput() LogwebtrendsFilterOutput {
	return i.ToLogwebtrendsFilterOutputWithContext(context.Background())
}

func (i *LogwebtrendsFilter) ToLogwebtrendsFilterOutputWithContext(ctx context.Context) LogwebtrendsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogwebtrendsFilterOutput)
}

// LogwebtrendsFilterArrayInput is an input type that accepts LogwebtrendsFilterArray and LogwebtrendsFilterArrayOutput values.
// You can construct a concrete instance of `LogwebtrendsFilterArrayInput` via:
//
//	LogwebtrendsFilterArray{ LogwebtrendsFilterArgs{...} }
type LogwebtrendsFilterArrayInput interface {
	pulumi.Input

	ToLogwebtrendsFilterArrayOutput() LogwebtrendsFilterArrayOutput
	ToLogwebtrendsFilterArrayOutputWithContext(context.Context) LogwebtrendsFilterArrayOutput
}

type LogwebtrendsFilterArray []LogwebtrendsFilterInput

func (LogwebtrendsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogwebtrendsFilter)(nil)).Elem()
}

func (i LogwebtrendsFilterArray) ToLogwebtrendsFilterArrayOutput() LogwebtrendsFilterArrayOutput {
	return i.ToLogwebtrendsFilterArrayOutputWithContext(context.Background())
}

func (i LogwebtrendsFilterArray) ToLogwebtrendsFilterArrayOutputWithContext(ctx context.Context) LogwebtrendsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogwebtrendsFilterArrayOutput)
}

// LogwebtrendsFilterMapInput is an input type that accepts LogwebtrendsFilterMap and LogwebtrendsFilterMapOutput values.
// You can construct a concrete instance of `LogwebtrendsFilterMapInput` via:
//
//	LogwebtrendsFilterMap{ "key": LogwebtrendsFilterArgs{...} }
type LogwebtrendsFilterMapInput interface {
	pulumi.Input

	ToLogwebtrendsFilterMapOutput() LogwebtrendsFilterMapOutput
	ToLogwebtrendsFilterMapOutputWithContext(context.Context) LogwebtrendsFilterMapOutput
}

type LogwebtrendsFilterMap map[string]LogwebtrendsFilterInput

func (LogwebtrendsFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogwebtrendsFilter)(nil)).Elem()
}

func (i LogwebtrendsFilterMap) ToLogwebtrendsFilterMapOutput() LogwebtrendsFilterMapOutput {
	return i.ToLogwebtrendsFilterMapOutputWithContext(context.Background())
}

func (i LogwebtrendsFilterMap) ToLogwebtrendsFilterMapOutputWithContext(ctx context.Context) LogwebtrendsFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogwebtrendsFilterMapOutput)
}

type LogwebtrendsFilterOutput struct{ *pulumi.OutputState }

func (LogwebtrendsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogwebtrendsFilter)(nil)).Elem()
}

func (o LogwebtrendsFilterOutput) ToLogwebtrendsFilterOutput() LogwebtrendsFilterOutput {
	return o
}

func (o LogwebtrendsFilterOutput) ToLogwebtrendsFilterOutputWithContext(ctx context.Context) LogwebtrendsFilterOutput {
	return o
}

// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
func (o LogwebtrendsFilterOutput) Anomaly() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.Anomaly }).(pulumi.StringOutput)
}

// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
func (o LogwebtrendsFilterOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o LogwebtrendsFilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Webtrends log filter.
func (o LogwebtrendsFilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogwebtrendsFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
func (o LogwebtrendsFilterOutput) ForwardTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.ForwardTraffic }).(pulumi.StringOutput)
}

// Free Style Filters The structure of `freeStyle` block is documented below.
func (o LogwebtrendsFilterOutput) FreeStyles() LogwebtrendsFilterFreeStyleArrayOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) LogwebtrendsFilterFreeStyleArrayOutput { return v.FreeStyles }).(LogwebtrendsFilterFreeStyleArrayOutput)
}

// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
func (o LogwebtrendsFilterOutput) Gtp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.Gtp }).(pulumi.StringOutput)
}

// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
func (o LogwebtrendsFilterOutput) LocalTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.LocalTraffic }).(pulumi.StringOutput)
}

// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
func (o LogwebtrendsFilterOutput) MulticastTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.MulticastTraffic }).(pulumi.StringOutput)
}

// Enable/disable netscan discovery event logging.
func (o LogwebtrendsFilterOutput) NetscanDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.NetscanDiscovery }).(pulumi.StringOutput)
}

// Enable/disable netscan vulnerability event logging.
func (o LogwebtrendsFilterOutput) NetscanVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.NetscanVulnerability }).(pulumi.StringOutput)
}

// Lowest severity level to log to WebTrends. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
func (o LogwebtrendsFilterOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
func (o LogwebtrendsFilterOutput) SnifferTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.SnifferTraffic }).(pulumi.StringOutput)
}

// Enable/disable SSH logging. Valid values: `enable`, `disable`.
func (o LogwebtrendsFilterOutput) Ssh() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.Ssh }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o LogwebtrendsFilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
func (o LogwebtrendsFilterOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.Voip }).(pulumi.StringOutput)
}

// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
func (o LogwebtrendsFilterOutput) ZtnaTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogwebtrendsFilter) pulumi.StringOutput { return v.ZtnaTraffic }).(pulumi.StringOutput)
}

type LogwebtrendsFilterArrayOutput struct{ *pulumi.OutputState }

func (LogwebtrendsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogwebtrendsFilter)(nil)).Elem()
}

func (o LogwebtrendsFilterArrayOutput) ToLogwebtrendsFilterArrayOutput() LogwebtrendsFilterArrayOutput {
	return o
}

func (o LogwebtrendsFilterArrayOutput) ToLogwebtrendsFilterArrayOutputWithContext(ctx context.Context) LogwebtrendsFilterArrayOutput {
	return o
}

func (o LogwebtrendsFilterArrayOutput) Index(i pulumi.IntInput) LogwebtrendsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogwebtrendsFilter {
		return vs[0].([]*LogwebtrendsFilter)[vs[1].(int)]
	}).(LogwebtrendsFilterOutput)
}

type LogwebtrendsFilterMapOutput struct{ *pulumi.OutputState }

func (LogwebtrendsFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogwebtrendsFilter)(nil)).Elem()
}

func (o LogwebtrendsFilterMapOutput) ToLogwebtrendsFilterMapOutput() LogwebtrendsFilterMapOutput {
	return o
}

func (o LogwebtrendsFilterMapOutput) ToLogwebtrendsFilterMapOutputWithContext(ctx context.Context) LogwebtrendsFilterMapOutput {
	return o
}

func (o LogwebtrendsFilterMapOutput) MapIndex(k pulumi.StringInput) LogwebtrendsFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogwebtrendsFilter {
		return vs[0].(map[string]*LogwebtrendsFilter)[vs[1].(string)]
	}).(LogwebtrendsFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogwebtrendsFilterInput)(nil)).Elem(), &LogwebtrendsFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogwebtrendsFilterArrayInput)(nil)).Elem(), LogwebtrendsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogwebtrendsFilterMapInput)(nil)).Elem(), LogwebtrendsFilterMap{})
	pulumi.RegisterOutputType(LogwebtrendsFilterOutput{})
	pulumi.RegisterOutputType(LogwebtrendsFilterArrayOutput{})
	pulumi.RegisterOutputType(LogwebtrendsFilterMapOutput{})
}
