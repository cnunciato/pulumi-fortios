// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPv6 neighbor discovery proxy (RFC4389).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSystemNdproxy(ctx, "trname", &fortios.SystemNdproxyArgs{
//				Status: pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # System NdProxy can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemNdproxy:SystemNdproxy labelname SystemNdProxy
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemNdproxy:SystemNdproxy labelname SystemNdProxy
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemNdproxy struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
	Members SystemNdproxyMemberArrayOutput `pulumi:"members"`
	// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemNdproxy registers a new resource with the given unique name, arguments, and options.
func NewSystemNdproxy(ctx *pulumi.Context,
	name string, args *SystemNdproxyArgs, opts ...pulumi.ResourceOption) (*SystemNdproxy, error) {
	if args == nil {
		args = &SystemNdproxyArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemNdproxy
	err := ctx.RegisterResource("fortios:index/systemNdproxy:SystemNdproxy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemNdproxy gets an existing SystemNdproxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemNdproxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemNdproxyState, opts ...pulumi.ResourceOption) (*SystemNdproxy, error) {
	var resource SystemNdproxy
	err := ctx.ReadResource("fortios:index/systemNdproxy:SystemNdproxy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemNdproxy resources.
type systemNdproxyState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
	Members []SystemNdproxyMember `pulumi:"members"`
	// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemNdproxyState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
	Members SystemNdproxyMemberArrayInput
	// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemNdproxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemNdproxyState)(nil)).Elem()
}

type systemNdproxyArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
	Members []SystemNdproxyMember `pulumi:"members"`
	// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemNdproxy resource.
type SystemNdproxyArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
	Members SystemNdproxyMemberArrayInput
	// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemNdproxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemNdproxyArgs)(nil)).Elem()
}

type SystemNdproxyInput interface {
	pulumi.Input

	ToSystemNdproxyOutput() SystemNdproxyOutput
	ToSystemNdproxyOutputWithContext(ctx context.Context) SystemNdproxyOutput
}

func (*SystemNdproxy) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNdproxy)(nil)).Elem()
}

func (i *SystemNdproxy) ToSystemNdproxyOutput() SystemNdproxyOutput {
	return i.ToSystemNdproxyOutputWithContext(context.Background())
}

func (i *SystemNdproxy) ToSystemNdproxyOutputWithContext(ctx context.Context) SystemNdproxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNdproxyOutput)
}

// SystemNdproxyArrayInput is an input type that accepts SystemNdproxyArray and SystemNdproxyArrayOutput values.
// You can construct a concrete instance of `SystemNdproxyArrayInput` via:
//
//	SystemNdproxyArray{ SystemNdproxyArgs{...} }
type SystemNdproxyArrayInput interface {
	pulumi.Input

	ToSystemNdproxyArrayOutput() SystemNdproxyArrayOutput
	ToSystemNdproxyArrayOutputWithContext(context.Context) SystemNdproxyArrayOutput
}

type SystemNdproxyArray []SystemNdproxyInput

func (SystemNdproxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemNdproxy)(nil)).Elem()
}

func (i SystemNdproxyArray) ToSystemNdproxyArrayOutput() SystemNdproxyArrayOutput {
	return i.ToSystemNdproxyArrayOutputWithContext(context.Background())
}

func (i SystemNdproxyArray) ToSystemNdproxyArrayOutputWithContext(ctx context.Context) SystemNdproxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNdproxyArrayOutput)
}

// SystemNdproxyMapInput is an input type that accepts SystemNdproxyMap and SystemNdproxyMapOutput values.
// You can construct a concrete instance of `SystemNdproxyMapInput` via:
//
//	SystemNdproxyMap{ "key": SystemNdproxyArgs{...} }
type SystemNdproxyMapInput interface {
	pulumi.Input

	ToSystemNdproxyMapOutput() SystemNdproxyMapOutput
	ToSystemNdproxyMapOutputWithContext(context.Context) SystemNdproxyMapOutput
}

type SystemNdproxyMap map[string]SystemNdproxyInput

func (SystemNdproxyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemNdproxy)(nil)).Elem()
}

func (i SystemNdproxyMap) ToSystemNdproxyMapOutput() SystemNdproxyMapOutput {
	return i.ToSystemNdproxyMapOutputWithContext(context.Background())
}

func (i SystemNdproxyMap) ToSystemNdproxyMapOutputWithContext(ctx context.Context) SystemNdproxyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNdproxyMapOutput)
}

type SystemNdproxyOutput struct{ *pulumi.OutputState }

func (SystemNdproxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNdproxy)(nil)).Elem()
}

func (o SystemNdproxyOutput) ToSystemNdproxyOutput() SystemNdproxyOutput {
	return o
}

func (o SystemNdproxyOutput) ToSystemNdproxyOutputWithContext(ctx context.Context) SystemNdproxyOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SystemNdproxyOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNdproxy) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Interfaces using the neighbor discovery proxy. The structure of `member` block is documented below.
func (o SystemNdproxyOutput) Members() SystemNdproxyMemberArrayOutput {
	return o.ApplyT(func(v *SystemNdproxy) SystemNdproxyMemberArrayOutput { return v.Members }).(SystemNdproxyMemberArrayOutput)
}

// Enable/disable neighbor discovery proxy. Valid values: `enable`, `disable`.
func (o SystemNdproxyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemNdproxy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemNdproxyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNdproxy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemNdproxyArrayOutput struct{ *pulumi.OutputState }

func (SystemNdproxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemNdproxy)(nil)).Elem()
}

func (o SystemNdproxyArrayOutput) ToSystemNdproxyArrayOutput() SystemNdproxyArrayOutput {
	return o
}

func (o SystemNdproxyArrayOutput) ToSystemNdproxyArrayOutputWithContext(ctx context.Context) SystemNdproxyArrayOutput {
	return o
}

func (o SystemNdproxyArrayOutput) Index(i pulumi.IntInput) SystemNdproxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemNdproxy {
		return vs[0].([]*SystemNdproxy)[vs[1].(int)]
	}).(SystemNdproxyOutput)
}

type SystemNdproxyMapOutput struct{ *pulumi.OutputState }

func (SystemNdproxyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemNdproxy)(nil)).Elem()
}

func (o SystemNdproxyMapOutput) ToSystemNdproxyMapOutput() SystemNdproxyMapOutput {
	return o
}

func (o SystemNdproxyMapOutput) ToSystemNdproxyMapOutputWithContext(ctx context.Context) SystemNdproxyMapOutput {
	return o
}

func (o SystemNdproxyMapOutput) MapIndex(k pulumi.StringInput) SystemNdproxyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemNdproxy {
		return vs[0].(map[string]*SystemNdproxy)[vs[1].(string)]
	}).(SystemNdproxyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNdproxyInput)(nil)).Elem(), &SystemNdproxy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNdproxyArrayInput)(nil)).Elem(), SystemNdproxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNdproxyMapInput)(nil)).Elem(), SystemNdproxyMap{})
	pulumi.RegisterOutputType(SystemNdproxyOutput{})
	pulumi.RegisterOutputType(SystemNdproxyArrayOutput{})
	pulumi.RegisterOutputType(SystemNdproxyMapOutput{})
}
