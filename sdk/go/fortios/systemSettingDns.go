// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to configure DNS of FortiOS.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `SystemDns`, we recommend that you use the new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSystemSettingDns(ctx, "test1", &fortios.SystemSettingDnsArgs{
//				DnsOverTls: pulumi.String("disable"),
//				Primary:    pulumi.String("208.91.112.53"),
//				Secondary:  pulumi.String("208.91.112.22"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SystemSettingDns struct {
	pulumi.CustomResourceState

	// Enable/disable/enforce DNS over TLS(available since v6.2.0). Enum: [ disable, enable, enforce ]
	DnsOverTls pulumi.StringOutput `pulumi:"dnsOverTls"`
	// Primary DNS server IP address.
	Primary pulumi.StringOutput `pulumi:"primary"`
	// Secondary DNS server IP address.
	Secondary pulumi.StringOutput `pulumi:"secondary"`
}

// NewSystemSettingDns registers a new resource with the given unique name, arguments, and options.
func NewSystemSettingDns(ctx *pulumi.Context,
	name string, args *SystemSettingDnsArgs, opts ...pulumi.ResourceOption) (*SystemSettingDns, error) {
	if args == nil {
		args = &SystemSettingDnsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemSettingDns
	err := ctx.RegisterResource("fortios:index/systemSettingDns:SystemSettingDns", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSettingDns gets an existing SystemSettingDns resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSettingDns(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSettingDnsState, opts ...pulumi.ResourceOption) (*SystemSettingDns, error) {
	var resource SystemSettingDns
	err := ctx.ReadResource("fortios:index/systemSettingDns:SystemSettingDns", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSettingDns resources.
type systemSettingDnsState struct {
	// Enable/disable/enforce DNS over TLS(available since v6.2.0). Enum: [ disable, enable, enforce ]
	DnsOverTls *string `pulumi:"dnsOverTls"`
	// Primary DNS server IP address.
	Primary *string `pulumi:"primary"`
	// Secondary DNS server IP address.
	Secondary *string `pulumi:"secondary"`
}

type SystemSettingDnsState struct {
	// Enable/disable/enforce DNS over TLS(available since v6.2.0). Enum: [ disable, enable, enforce ]
	DnsOverTls pulumi.StringPtrInput
	// Primary DNS server IP address.
	Primary pulumi.StringPtrInput
	// Secondary DNS server IP address.
	Secondary pulumi.StringPtrInput
}

func (SystemSettingDnsState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSettingDnsState)(nil)).Elem()
}

type systemSettingDnsArgs struct {
	// Enable/disable/enforce DNS over TLS(available since v6.2.0). Enum: [ disable, enable, enforce ]
	DnsOverTls *string `pulumi:"dnsOverTls"`
	// Primary DNS server IP address.
	Primary *string `pulumi:"primary"`
	// Secondary DNS server IP address.
	Secondary *string `pulumi:"secondary"`
}

// The set of arguments for constructing a SystemSettingDns resource.
type SystemSettingDnsArgs struct {
	// Enable/disable/enforce DNS over TLS(available since v6.2.0). Enum: [ disable, enable, enforce ]
	DnsOverTls pulumi.StringPtrInput
	// Primary DNS server IP address.
	Primary pulumi.StringPtrInput
	// Secondary DNS server IP address.
	Secondary pulumi.StringPtrInput
}

func (SystemSettingDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSettingDnsArgs)(nil)).Elem()
}

type SystemSettingDnsInput interface {
	pulumi.Input

	ToSystemSettingDnsOutput() SystemSettingDnsOutput
	ToSystemSettingDnsOutputWithContext(ctx context.Context) SystemSettingDnsOutput
}

func (*SystemSettingDns) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSettingDns)(nil)).Elem()
}

func (i *SystemSettingDns) ToSystemSettingDnsOutput() SystemSettingDnsOutput {
	return i.ToSystemSettingDnsOutputWithContext(context.Background())
}

func (i *SystemSettingDns) ToSystemSettingDnsOutputWithContext(ctx context.Context) SystemSettingDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingDnsOutput)
}

// SystemSettingDnsArrayInput is an input type that accepts SystemSettingDnsArray and SystemSettingDnsArrayOutput values.
// You can construct a concrete instance of `SystemSettingDnsArrayInput` via:
//
//	SystemSettingDnsArray{ SystemSettingDnsArgs{...} }
type SystemSettingDnsArrayInput interface {
	pulumi.Input

	ToSystemSettingDnsArrayOutput() SystemSettingDnsArrayOutput
	ToSystemSettingDnsArrayOutputWithContext(context.Context) SystemSettingDnsArrayOutput
}

type SystemSettingDnsArray []SystemSettingDnsInput

func (SystemSettingDnsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSettingDns)(nil)).Elem()
}

func (i SystemSettingDnsArray) ToSystemSettingDnsArrayOutput() SystemSettingDnsArrayOutput {
	return i.ToSystemSettingDnsArrayOutputWithContext(context.Background())
}

func (i SystemSettingDnsArray) ToSystemSettingDnsArrayOutputWithContext(ctx context.Context) SystemSettingDnsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingDnsArrayOutput)
}

// SystemSettingDnsMapInput is an input type that accepts SystemSettingDnsMap and SystemSettingDnsMapOutput values.
// You can construct a concrete instance of `SystemSettingDnsMapInput` via:
//
//	SystemSettingDnsMap{ "key": SystemSettingDnsArgs{...} }
type SystemSettingDnsMapInput interface {
	pulumi.Input

	ToSystemSettingDnsMapOutput() SystemSettingDnsMapOutput
	ToSystemSettingDnsMapOutputWithContext(context.Context) SystemSettingDnsMapOutput
}

type SystemSettingDnsMap map[string]SystemSettingDnsInput

func (SystemSettingDnsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSettingDns)(nil)).Elem()
}

func (i SystemSettingDnsMap) ToSystemSettingDnsMapOutput() SystemSettingDnsMapOutput {
	return i.ToSystemSettingDnsMapOutputWithContext(context.Background())
}

func (i SystemSettingDnsMap) ToSystemSettingDnsMapOutputWithContext(ctx context.Context) SystemSettingDnsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingDnsMapOutput)
}

type SystemSettingDnsOutput struct{ *pulumi.OutputState }

func (SystemSettingDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSettingDns)(nil)).Elem()
}

func (o SystemSettingDnsOutput) ToSystemSettingDnsOutput() SystemSettingDnsOutput {
	return o
}

func (o SystemSettingDnsOutput) ToSystemSettingDnsOutputWithContext(ctx context.Context) SystemSettingDnsOutput {
	return o
}

// Enable/disable/enforce DNS over TLS(available since v6.2.0). Enum: [ disable, enable, enforce ]
func (o SystemSettingDnsOutput) DnsOverTls() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSettingDns) pulumi.StringOutput { return v.DnsOverTls }).(pulumi.StringOutput)
}

// Primary DNS server IP address.
func (o SystemSettingDnsOutput) Primary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSettingDns) pulumi.StringOutput { return v.Primary }).(pulumi.StringOutput)
}

// Secondary DNS server IP address.
func (o SystemSettingDnsOutput) Secondary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSettingDns) pulumi.StringOutput { return v.Secondary }).(pulumi.StringOutput)
}

type SystemSettingDnsArrayOutput struct{ *pulumi.OutputState }

func (SystemSettingDnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSettingDns)(nil)).Elem()
}

func (o SystemSettingDnsArrayOutput) ToSystemSettingDnsArrayOutput() SystemSettingDnsArrayOutput {
	return o
}

func (o SystemSettingDnsArrayOutput) ToSystemSettingDnsArrayOutputWithContext(ctx context.Context) SystemSettingDnsArrayOutput {
	return o
}

func (o SystemSettingDnsArrayOutput) Index(i pulumi.IntInput) SystemSettingDnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSettingDns {
		return vs[0].([]*SystemSettingDns)[vs[1].(int)]
	}).(SystemSettingDnsOutput)
}

type SystemSettingDnsMapOutput struct{ *pulumi.OutputState }

func (SystemSettingDnsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSettingDns)(nil)).Elem()
}

func (o SystemSettingDnsMapOutput) ToSystemSettingDnsMapOutput() SystemSettingDnsMapOutput {
	return o
}

func (o SystemSettingDnsMapOutput) ToSystemSettingDnsMapOutputWithContext(ctx context.Context) SystemSettingDnsMapOutput {
	return o
}

func (o SystemSettingDnsMapOutput) MapIndex(k pulumi.StringInput) SystemSettingDnsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSettingDns {
		return vs[0].(map[string]*SystemSettingDns)[vs[1].(string)]
	}).(SystemSettingDnsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingDnsInput)(nil)).Elem(), &SystemSettingDns{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingDnsArrayInput)(nil)).Elem(), SystemSettingDnsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingDnsMapInput)(nil)).Elem(), SystemSettingDnsMap{})
	pulumi.RegisterOutputType(SystemSettingDnsOutput{})
	pulumi.RegisterOutputType(SystemSettingDnsArrayOutput{})
	pulumi.RegisterOutputType(SystemSettingDnsMapOutput{})
}
