// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on an fortios router multicastflow
func LookupRouterMulticastflow(ctx *pulumi.Context, args *LookupRouterMulticastflowArgs, opts ...pulumi.InvokeOption) (*LookupRouterMulticastflowResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupRouterMulticastflowResult
	err := ctx.Invoke("fortios:index/getRouterMulticastflow:getRouterMulticastflow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouterMulticastflow.
type LookupRouterMulticastflowArgs struct {
	// Specify the name of the desired router multicastflow.
	Name string `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getRouterMulticastflow.
type LookupRouterMulticastflowResult struct {
	// Comment.
	Comments string `pulumi:"comments"`
	// Multicast-flow entries. The structure of `flows` block is documented below.
	Flows []GetRouterMulticastflowFlow `pulumi:"flows"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name.
	Name      string  `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupRouterMulticastflowOutput(ctx *pulumi.Context, args LookupRouterMulticastflowOutputArgs, opts ...pulumi.InvokeOption) LookupRouterMulticastflowResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRouterMulticastflowResult, error) {
			args := v.(LookupRouterMulticastflowArgs)
			r, err := LookupRouterMulticastflow(ctx, &args, opts...)
			var s LookupRouterMulticastflowResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRouterMulticastflowResultOutput)
}

// A collection of arguments for invoking getRouterMulticastflow.
type LookupRouterMulticastflowOutputArgs struct {
	// Specify the name of the desired router multicastflow.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupRouterMulticastflowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouterMulticastflowArgs)(nil)).Elem()
}

// A collection of values returned by getRouterMulticastflow.
type LookupRouterMulticastflowResultOutput struct{ *pulumi.OutputState }

func (LookupRouterMulticastflowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouterMulticastflowResult)(nil)).Elem()
}

func (o LookupRouterMulticastflowResultOutput) ToLookupRouterMulticastflowResultOutput() LookupRouterMulticastflowResultOutput {
	return o
}

func (o LookupRouterMulticastflowResultOutput) ToLookupRouterMulticastflowResultOutputWithContext(ctx context.Context) LookupRouterMulticastflowResultOutput {
	return o
}

// Comment.
func (o LookupRouterMulticastflowResultOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterMulticastflowResult) string { return v.Comments }).(pulumi.StringOutput)
}

// Multicast-flow entries. The structure of `flows` block is documented below.
func (o LookupRouterMulticastflowResultOutput) Flows() GetRouterMulticastflowFlowArrayOutput {
	return o.ApplyT(func(v LookupRouterMulticastflowResult) []GetRouterMulticastflowFlow { return v.Flows }).(GetRouterMulticastflowFlowArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRouterMulticastflowResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterMulticastflowResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name.
func (o LookupRouterMulticastflowResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterMulticastflowResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRouterMulticastflowResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouterMulticastflowResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouterMulticastflowResultOutput{})
}
