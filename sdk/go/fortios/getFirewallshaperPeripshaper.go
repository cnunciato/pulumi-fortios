// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on an fortios firewallshaper peripshaper
func LookupFirewallshaperPeripshaper(ctx *pulumi.Context, args *LookupFirewallshaperPeripshaperArgs, opts ...pulumi.InvokeOption) (*LookupFirewallshaperPeripshaperResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupFirewallshaperPeripshaperResult
	err := ctx.Invoke("fortios:index/getFirewallshaperPeripshaper:getFirewallshaperPeripshaper", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFirewallshaperPeripshaper.
type LookupFirewallshaperPeripshaperArgs struct {
	// Specify the name of the desired firewallshaper peripshaper.
	Name string `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getFirewallshaperPeripshaper.
type LookupFirewallshaperPeripshaperResult struct {
	// Unit of measurement for maximum bandwidth for this shaper (Kbps, Mbps or Gbps).
	BandwidthUnit string `pulumi:"bandwidthUnit"`
	// Enable/disable changing the Forward (original) DiffServ setting applied to traffic accepted by this shaper.
	DiffservForward string `pulumi:"diffservForward"`
	// Enable/disable changing the Reverse (reply) DiffServ setting applied to traffic accepted by this shaper.
	DiffservReverse string `pulumi:"diffservReverse"`
	// Forward (original) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeForward string `pulumi:"diffservcodeForward"`
	// Reverse (reply) DiffServ setting to be applied to traffic accepted by this shaper.
	DiffservcodeRev string `pulumi:"diffservcodeRev"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Upper bandwidth limit enforced by this shaper (0 - 16776000). 0 means no limit. Units depend on the bandwidth-unit setting.
	MaxBandwidth int `pulumi:"maxBandwidth"`
	// Maximum number of concurrent sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentSession int `pulumi:"maxConcurrentSession"`
	// Maximum number of concurrent TCP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentTcpSession int `pulumi:"maxConcurrentTcpSession"`
	// Maximum number of concurrent UDP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
	MaxConcurrentUdpSession int `pulumi:"maxConcurrentUdpSession"`
	// Traffic shaper name.
	Name      string  `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupFirewallshaperPeripshaperOutput(ctx *pulumi.Context, args LookupFirewallshaperPeripshaperOutputArgs, opts ...pulumi.InvokeOption) LookupFirewallshaperPeripshaperResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFirewallshaperPeripshaperResult, error) {
			args := v.(LookupFirewallshaperPeripshaperArgs)
			r, err := LookupFirewallshaperPeripshaper(ctx, &args, opts...)
			var s LookupFirewallshaperPeripshaperResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFirewallshaperPeripshaperResultOutput)
}

// A collection of arguments for invoking getFirewallshaperPeripshaper.
type LookupFirewallshaperPeripshaperOutputArgs struct {
	// Specify the name of the desired firewallshaper peripshaper.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupFirewallshaperPeripshaperOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallshaperPeripshaperArgs)(nil)).Elem()
}

// A collection of values returned by getFirewallshaperPeripshaper.
type LookupFirewallshaperPeripshaperResultOutput struct{ *pulumi.OutputState }

func (LookupFirewallshaperPeripshaperResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallshaperPeripshaperResult)(nil)).Elem()
}

func (o LookupFirewallshaperPeripshaperResultOutput) ToLookupFirewallshaperPeripshaperResultOutput() LookupFirewallshaperPeripshaperResultOutput {
	return o
}

func (o LookupFirewallshaperPeripshaperResultOutput) ToLookupFirewallshaperPeripshaperResultOutputWithContext(ctx context.Context) LookupFirewallshaperPeripshaperResultOutput {
	return o
}

// Unit of measurement for maximum bandwidth for this shaper (Kbps, Mbps or Gbps).
func (o LookupFirewallshaperPeripshaperResultOutput) BandwidthUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) string { return v.BandwidthUnit }).(pulumi.StringOutput)
}

// Enable/disable changing the Forward (original) DiffServ setting applied to traffic accepted by this shaper.
func (o LookupFirewallshaperPeripshaperResultOutput) DiffservForward() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) string { return v.DiffservForward }).(pulumi.StringOutput)
}

// Enable/disable changing the Reverse (reply) DiffServ setting applied to traffic accepted by this shaper.
func (o LookupFirewallshaperPeripshaperResultOutput) DiffservReverse() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) string { return v.DiffservReverse }).(pulumi.StringOutput)
}

// Forward (original) DiffServ setting to be applied to traffic accepted by this shaper.
func (o LookupFirewallshaperPeripshaperResultOutput) DiffservcodeForward() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) string { return v.DiffservcodeForward }).(pulumi.StringOutput)
}

// Reverse (reply) DiffServ setting to be applied to traffic accepted by this shaper.
func (o LookupFirewallshaperPeripshaperResultOutput) DiffservcodeRev() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) string { return v.DiffservcodeRev }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFirewallshaperPeripshaperResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) string { return v.Id }).(pulumi.StringOutput)
}

// Upper bandwidth limit enforced by this shaper (0 - 16776000). 0 means no limit. Units depend on the bandwidth-unit setting.
func (o LookupFirewallshaperPeripshaperResultOutput) MaxBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) int { return v.MaxBandwidth }).(pulumi.IntOutput)
}

// Maximum number of concurrent sessions allowed by this shaper (0 - 2097000). 0 means no limit.
func (o LookupFirewallshaperPeripshaperResultOutput) MaxConcurrentSession() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) int { return v.MaxConcurrentSession }).(pulumi.IntOutput)
}

// Maximum number of concurrent TCP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
func (o LookupFirewallshaperPeripshaperResultOutput) MaxConcurrentTcpSession() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) int { return v.MaxConcurrentTcpSession }).(pulumi.IntOutput)
}

// Maximum number of concurrent UDP sessions allowed by this shaper (0 - 2097000). 0 means no limit.
func (o LookupFirewallshaperPeripshaperResultOutput) MaxConcurrentUdpSession() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) int { return v.MaxConcurrentUdpSession }).(pulumi.IntOutput)
}

// Traffic shaper name.
func (o LookupFirewallshaperPeripshaperResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupFirewallshaperPeripshaperResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallshaperPeripshaperResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFirewallshaperPeripshaperResultOutput{})
}
