// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Replacement messages. Applies to FortiOS Version `<= 6.4.1`.
//
// ## Import
//
// # SystemReplacemsg DeviceDetectionPortal can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgDevicedetectionportal:SystemreplacemsgDevicedetectionportal labelname {{msg_type}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgDevicedetectionportal:SystemreplacemsgDevicedetectionportal labelname {{msg_type}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemreplacemsgDevicedetectionportal struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemreplacemsgDevicedetectionportal registers a new resource with the given unique name, arguments, and options.
func NewSystemreplacemsgDevicedetectionportal(ctx *pulumi.Context,
	name string, args *SystemreplacemsgDevicedetectionportalArgs, opts ...pulumi.ResourceOption) (*SystemreplacemsgDevicedetectionportal, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemreplacemsgDevicedetectionportal
	err := ctx.RegisterResource("fortios:index/systemreplacemsgDevicedetectionportal:SystemreplacemsgDevicedetectionportal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemreplacemsgDevicedetectionportal gets an existing SystemreplacemsgDevicedetectionportal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemreplacemsgDevicedetectionportal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemreplacemsgDevicedetectionportalState, opts ...pulumi.ResourceOption) (*SystemreplacemsgDevicedetectionportal, error) {
	var resource SystemreplacemsgDevicedetectionportal
	err := ctx.ReadResource("fortios:index/systemreplacemsgDevicedetectionportal:SystemreplacemsgDevicedetectionportal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemreplacemsgDevicedetectionportal resources.
type systemreplacemsgDevicedetectionportalState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemreplacemsgDevicedetectionportalState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgDevicedetectionportalState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgDevicedetectionportalState)(nil)).Elem()
}

type systemreplacemsgDevicedetectionportalArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemreplacemsgDevicedetectionportal resource.
type SystemreplacemsgDevicedetectionportalArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgDevicedetectionportalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgDevicedetectionportalArgs)(nil)).Elem()
}

type SystemreplacemsgDevicedetectionportalInput interface {
	pulumi.Input

	ToSystemreplacemsgDevicedetectionportalOutput() SystemreplacemsgDevicedetectionportalOutput
	ToSystemreplacemsgDevicedetectionportalOutputWithContext(ctx context.Context) SystemreplacemsgDevicedetectionportalOutput
}

func (*SystemreplacemsgDevicedetectionportal) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgDevicedetectionportal)(nil)).Elem()
}

func (i *SystemreplacemsgDevicedetectionportal) ToSystemreplacemsgDevicedetectionportalOutput() SystemreplacemsgDevicedetectionportalOutput {
	return i.ToSystemreplacemsgDevicedetectionportalOutputWithContext(context.Background())
}

func (i *SystemreplacemsgDevicedetectionportal) ToSystemreplacemsgDevicedetectionportalOutputWithContext(ctx context.Context) SystemreplacemsgDevicedetectionportalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgDevicedetectionportalOutput)
}

// SystemreplacemsgDevicedetectionportalArrayInput is an input type that accepts SystemreplacemsgDevicedetectionportalArray and SystemreplacemsgDevicedetectionportalArrayOutput values.
// You can construct a concrete instance of `SystemreplacemsgDevicedetectionportalArrayInput` via:
//
//	SystemreplacemsgDevicedetectionportalArray{ SystemreplacemsgDevicedetectionportalArgs{...} }
type SystemreplacemsgDevicedetectionportalArrayInput interface {
	pulumi.Input

	ToSystemreplacemsgDevicedetectionportalArrayOutput() SystemreplacemsgDevicedetectionportalArrayOutput
	ToSystemreplacemsgDevicedetectionportalArrayOutputWithContext(context.Context) SystemreplacemsgDevicedetectionportalArrayOutput
}

type SystemreplacemsgDevicedetectionportalArray []SystemreplacemsgDevicedetectionportalInput

func (SystemreplacemsgDevicedetectionportalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgDevicedetectionportal)(nil)).Elem()
}

func (i SystemreplacemsgDevicedetectionportalArray) ToSystemreplacemsgDevicedetectionportalArrayOutput() SystemreplacemsgDevicedetectionportalArrayOutput {
	return i.ToSystemreplacemsgDevicedetectionportalArrayOutputWithContext(context.Background())
}

func (i SystemreplacemsgDevicedetectionportalArray) ToSystemreplacemsgDevicedetectionportalArrayOutputWithContext(ctx context.Context) SystemreplacemsgDevicedetectionportalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgDevicedetectionportalArrayOutput)
}

// SystemreplacemsgDevicedetectionportalMapInput is an input type that accepts SystemreplacemsgDevicedetectionportalMap and SystemreplacemsgDevicedetectionportalMapOutput values.
// You can construct a concrete instance of `SystemreplacemsgDevicedetectionportalMapInput` via:
//
//	SystemreplacemsgDevicedetectionportalMap{ "key": SystemreplacemsgDevicedetectionportalArgs{...} }
type SystemreplacemsgDevicedetectionportalMapInput interface {
	pulumi.Input

	ToSystemreplacemsgDevicedetectionportalMapOutput() SystemreplacemsgDevicedetectionportalMapOutput
	ToSystemreplacemsgDevicedetectionportalMapOutputWithContext(context.Context) SystemreplacemsgDevicedetectionportalMapOutput
}

type SystemreplacemsgDevicedetectionportalMap map[string]SystemreplacemsgDevicedetectionportalInput

func (SystemreplacemsgDevicedetectionportalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgDevicedetectionportal)(nil)).Elem()
}

func (i SystemreplacemsgDevicedetectionportalMap) ToSystemreplacemsgDevicedetectionportalMapOutput() SystemreplacemsgDevicedetectionportalMapOutput {
	return i.ToSystemreplacemsgDevicedetectionportalMapOutputWithContext(context.Background())
}

func (i SystemreplacemsgDevicedetectionportalMap) ToSystemreplacemsgDevicedetectionportalMapOutputWithContext(ctx context.Context) SystemreplacemsgDevicedetectionportalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgDevicedetectionportalMapOutput)
}

type SystemreplacemsgDevicedetectionportalOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgDevicedetectionportalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgDevicedetectionportal)(nil)).Elem()
}

func (o SystemreplacemsgDevicedetectionportalOutput) ToSystemreplacemsgDevicedetectionportalOutput() SystemreplacemsgDevicedetectionportalOutput {
	return o
}

func (o SystemreplacemsgDevicedetectionportalOutput) ToSystemreplacemsgDevicedetectionportalOutputWithContext(ctx context.Context) SystemreplacemsgDevicedetectionportalOutput {
	return o
}

// Message string.
func (o SystemreplacemsgDevicedetectionportalOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgDevicedetectionportal) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemreplacemsgDevicedetectionportalOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgDevicedetectionportal) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemreplacemsgDevicedetectionportalOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgDevicedetectionportal) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o SystemreplacemsgDevicedetectionportalOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgDevicedetectionportal) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemreplacemsgDevicedetectionportalOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgDevicedetectionportal) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemreplacemsgDevicedetectionportalArrayOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgDevicedetectionportalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgDevicedetectionportal)(nil)).Elem()
}

func (o SystemreplacemsgDevicedetectionportalArrayOutput) ToSystemreplacemsgDevicedetectionportalArrayOutput() SystemreplacemsgDevicedetectionportalArrayOutput {
	return o
}

func (o SystemreplacemsgDevicedetectionportalArrayOutput) ToSystemreplacemsgDevicedetectionportalArrayOutputWithContext(ctx context.Context) SystemreplacemsgDevicedetectionportalArrayOutput {
	return o
}

func (o SystemreplacemsgDevicedetectionportalArrayOutput) Index(i pulumi.IntInput) SystemreplacemsgDevicedetectionportalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemreplacemsgDevicedetectionportal {
		return vs[0].([]*SystemreplacemsgDevicedetectionportal)[vs[1].(int)]
	}).(SystemreplacemsgDevicedetectionportalOutput)
}

type SystemreplacemsgDevicedetectionportalMapOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgDevicedetectionportalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgDevicedetectionportal)(nil)).Elem()
}

func (o SystemreplacemsgDevicedetectionportalMapOutput) ToSystemreplacemsgDevicedetectionportalMapOutput() SystemreplacemsgDevicedetectionportalMapOutput {
	return o
}

func (o SystemreplacemsgDevicedetectionportalMapOutput) ToSystemreplacemsgDevicedetectionportalMapOutputWithContext(ctx context.Context) SystemreplacemsgDevicedetectionportalMapOutput {
	return o
}

func (o SystemreplacemsgDevicedetectionportalMapOutput) MapIndex(k pulumi.StringInput) SystemreplacemsgDevicedetectionportalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemreplacemsgDevicedetectionportal {
		return vs[0].(map[string]*SystemreplacemsgDevicedetectionportal)[vs[1].(string)]
	}).(SystemreplacemsgDevicedetectionportalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgDevicedetectionportalInput)(nil)).Elem(), &SystemreplacemsgDevicedetectionportal{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgDevicedetectionportalArrayInput)(nil)).Elem(), SystemreplacemsgDevicedetectionportalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgDevicedetectionportalMapInput)(nil)).Elem(), SystemreplacemsgDevicedetectionportalMap{})
	pulumi.RegisterOutputType(SystemreplacemsgDevicedetectionportalOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgDevicedetectionportalArrayOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgDevicedetectionportalMapOutput{})
}
