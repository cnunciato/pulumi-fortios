// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiSwitch LLDP profiles.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSwitchcontrollerLldpprofile(ctx, "trname", &fortios.SwitchcontrollerLldpprofileArgs{
//				AutoIsl:               pulumi.String("enable"),
//				AutoIslHelloTimer:     pulumi.Int(3),
//				AutoIslPortGroup:      pulumi.Int(0),
//				AutoIslReceiveTimeout: pulumi.Int(60),
//				MedTlvs:               pulumi.String("inventory-management network-policy"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # SwitchController LldpProfile can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/switchcontrollerLldpprofile:SwitchcontrollerLldpprofile labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/switchcontrollerLldpprofile:SwitchcontrollerLldpprofile labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SwitchcontrollerLldpprofile struct {
	pulumi.CustomResourceState

	// Enable/disable auto inter-switch LAG. Valid values: `disable`, `enable`.
	AutoIsl pulumi.StringOutput `pulumi:"autoIsl"`
	// Auto inter-switch LAG hello timer duration (1 - 30 sec, default = 3).
	AutoIslHelloTimer pulumi.IntOutput `pulumi:"autoIslHelloTimer"`
	// Auto inter-switch LAG port group ID (0 - 9).
	AutoIslPortGroup pulumi.IntOutput `pulumi:"autoIslPortGroup"`
	// Auto inter-switch LAG timeout if no response is received (3 - 90 sec, default = 9).
	AutoIslReceiveTimeout pulumi.IntOutput `pulumi:"autoIslReceiveTimeout"`
	// Enable/disable MCLAG inter chassis link. Valid values: `disable`, `enable`.
	AutoMclagIcl pulumi.StringOutput `pulumi:"autoMclagIcl"`
	// Configuration method to edit custom TLV entries. The structure of `customTlvs` block is documented below.
	CustomTlvs SwitchcontrollerLldpprofileCustomTlvArrayOutput `pulumi:"customTlvs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Configuration method to edit Media Endpoint Discovery (MED) location service type-length-value (TLV) categories. The structure of `medLocationService` block is documented below.
	MedLocationServices SwitchcontrollerLldpprofileMedLocationServiceArrayOutput `pulumi:"medLocationServices"`
	// Configuration method to edit Media Endpoint Discovery (MED) network policy type-length-value (TLV) categories. The structure of `medNetworkPolicy` block is documented below.
	MedNetworkPolicies SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput `pulumi:"medNetworkPolicies"`
	// Transmitted LLDP-MED TLVs (type-length-value descriptions): inventory management TLV and/or network policy TLV.
	MedTlvs pulumi.StringOutput `pulumi:"medTlvs"`
	// Transmitted IEEE 802.1 TLVs. Valid values: `port-vlan-id`.
	N8021Tlvs pulumi.StringOutput `pulumi:"n8021Tlvs"`
	// Transmitted IEEE 802.3 TLVs.
	N8023Tlvs pulumi.StringOutput `pulumi:"n8023Tlvs"`
	// Profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchcontrollerLldpprofile registers a new resource with the given unique name, arguments, and options.
func NewSwitchcontrollerLldpprofile(ctx *pulumi.Context,
	name string, args *SwitchcontrollerLldpprofileArgs, opts ...pulumi.ResourceOption) (*SwitchcontrollerLldpprofile, error) {
	if args == nil {
		args = &SwitchcontrollerLldpprofileArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchcontrollerLldpprofile
	err := ctx.RegisterResource("fortios:index/switchcontrollerLldpprofile:SwitchcontrollerLldpprofile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchcontrollerLldpprofile gets an existing SwitchcontrollerLldpprofile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchcontrollerLldpprofile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchcontrollerLldpprofileState, opts ...pulumi.ResourceOption) (*SwitchcontrollerLldpprofile, error) {
	var resource SwitchcontrollerLldpprofile
	err := ctx.ReadResource("fortios:index/switchcontrollerLldpprofile:SwitchcontrollerLldpprofile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchcontrollerLldpprofile resources.
type switchcontrollerLldpprofileState struct {
	// Enable/disable auto inter-switch LAG. Valid values: `disable`, `enable`.
	AutoIsl *string `pulumi:"autoIsl"`
	// Auto inter-switch LAG hello timer duration (1 - 30 sec, default = 3).
	AutoIslHelloTimer *int `pulumi:"autoIslHelloTimer"`
	// Auto inter-switch LAG port group ID (0 - 9).
	AutoIslPortGroup *int `pulumi:"autoIslPortGroup"`
	// Auto inter-switch LAG timeout if no response is received (3 - 90 sec, default = 9).
	AutoIslReceiveTimeout *int `pulumi:"autoIslReceiveTimeout"`
	// Enable/disable MCLAG inter chassis link. Valid values: `disable`, `enable`.
	AutoMclagIcl *string `pulumi:"autoMclagIcl"`
	// Configuration method to edit custom TLV entries. The structure of `customTlvs` block is documented below.
	CustomTlvs []SwitchcontrollerLldpprofileCustomTlv `pulumi:"customTlvs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Configuration method to edit Media Endpoint Discovery (MED) location service type-length-value (TLV) categories. The structure of `medLocationService` block is documented below.
	MedLocationServices []SwitchcontrollerLldpprofileMedLocationService `pulumi:"medLocationServices"`
	// Configuration method to edit Media Endpoint Discovery (MED) network policy type-length-value (TLV) categories. The structure of `medNetworkPolicy` block is documented below.
	MedNetworkPolicies []SwitchcontrollerLldpprofileMedNetworkPolicy `pulumi:"medNetworkPolicies"`
	// Transmitted LLDP-MED TLVs (type-length-value descriptions): inventory management TLV and/or network policy TLV.
	MedTlvs *string `pulumi:"medTlvs"`
	// Transmitted IEEE 802.1 TLVs. Valid values: `port-vlan-id`.
	N8021Tlvs *string `pulumi:"n8021Tlvs"`
	// Transmitted IEEE 802.3 TLVs.
	N8023Tlvs *string `pulumi:"n8023Tlvs"`
	// Profile name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchcontrollerLldpprofileState struct {
	// Enable/disable auto inter-switch LAG. Valid values: `disable`, `enable`.
	AutoIsl pulumi.StringPtrInput
	// Auto inter-switch LAG hello timer duration (1 - 30 sec, default = 3).
	AutoIslHelloTimer pulumi.IntPtrInput
	// Auto inter-switch LAG port group ID (0 - 9).
	AutoIslPortGroup pulumi.IntPtrInput
	// Auto inter-switch LAG timeout if no response is received (3 - 90 sec, default = 9).
	AutoIslReceiveTimeout pulumi.IntPtrInput
	// Enable/disable MCLAG inter chassis link. Valid values: `disable`, `enable`.
	AutoMclagIcl pulumi.StringPtrInput
	// Configuration method to edit custom TLV entries. The structure of `customTlvs` block is documented below.
	CustomTlvs SwitchcontrollerLldpprofileCustomTlvArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Configuration method to edit Media Endpoint Discovery (MED) location service type-length-value (TLV) categories. The structure of `medLocationService` block is documented below.
	MedLocationServices SwitchcontrollerLldpprofileMedLocationServiceArrayInput
	// Configuration method to edit Media Endpoint Discovery (MED) network policy type-length-value (TLV) categories. The structure of `medNetworkPolicy` block is documented below.
	MedNetworkPolicies SwitchcontrollerLldpprofileMedNetworkPolicyArrayInput
	// Transmitted LLDP-MED TLVs (type-length-value descriptions): inventory management TLV and/or network policy TLV.
	MedTlvs pulumi.StringPtrInput
	// Transmitted IEEE 802.1 TLVs. Valid values: `port-vlan-id`.
	N8021Tlvs pulumi.StringPtrInput
	// Transmitted IEEE 802.3 TLVs.
	N8023Tlvs pulumi.StringPtrInput
	// Profile name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchcontrollerLldpprofileState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchcontrollerLldpprofileState)(nil)).Elem()
}

type switchcontrollerLldpprofileArgs struct {
	// Enable/disable auto inter-switch LAG. Valid values: `disable`, `enable`.
	AutoIsl *string `pulumi:"autoIsl"`
	// Auto inter-switch LAG hello timer duration (1 - 30 sec, default = 3).
	AutoIslHelloTimer *int `pulumi:"autoIslHelloTimer"`
	// Auto inter-switch LAG port group ID (0 - 9).
	AutoIslPortGroup *int `pulumi:"autoIslPortGroup"`
	// Auto inter-switch LAG timeout if no response is received (3 - 90 sec, default = 9).
	AutoIslReceiveTimeout *int `pulumi:"autoIslReceiveTimeout"`
	// Enable/disable MCLAG inter chassis link. Valid values: `disable`, `enable`.
	AutoMclagIcl *string `pulumi:"autoMclagIcl"`
	// Configuration method to edit custom TLV entries. The structure of `customTlvs` block is documented below.
	CustomTlvs []SwitchcontrollerLldpprofileCustomTlv `pulumi:"customTlvs"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Configuration method to edit Media Endpoint Discovery (MED) location service type-length-value (TLV) categories. The structure of `medLocationService` block is documented below.
	MedLocationServices []SwitchcontrollerLldpprofileMedLocationService `pulumi:"medLocationServices"`
	// Configuration method to edit Media Endpoint Discovery (MED) network policy type-length-value (TLV) categories. The structure of `medNetworkPolicy` block is documented below.
	MedNetworkPolicies []SwitchcontrollerLldpprofileMedNetworkPolicy `pulumi:"medNetworkPolicies"`
	// Transmitted LLDP-MED TLVs (type-length-value descriptions): inventory management TLV and/or network policy TLV.
	MedTlvs *string `pulumi:"medTlvs"`
	// Transmitted IEEE 802.1 TLVs. Valid values: `port-vlan-id`.
	N8021Tlvs *string `pulumi:"n8021Tlvs"`
	// Transmitted IEEE 802.3 TLVs.
	N8023Tlvs *string `pulumi:"n8023Tlvs"`
	// Profile name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchcontrollerLldpprofile resource.
type SwitchcontrollerLldpprofileArgs struct {
	// Enable/disable auto inter-switch LAG. Valid values: `disable`, `enable`.
	AutoIsl pulumi.StringPtrInput
	// Auto inter-switch LAG hello timer duration (1 - 30 sec, default = 3).
	AutoIslHelloTimer pulumi.IntPtrInput
	// Auto inter-switch LAG port group ID (0 - 9).
	AutoIslPortGroup pulumi.IntPtrInput
	// Auto inter-switch LAG timeout if no response is received (3 - 90 sec, default = 9).
	AutoIslReceiveTimeout pulumi.IntPtrInput
	// Enable/disable MCLAG inter chassis link. Valid values: `disable`, `enable`.
	AutoMclagIcl pulumi.StringPtrInput
	// Configuration method to edit custom TLV entries. The structure of `customTlvs` block is documented below.
	CustomTlvs SwitchcontrollerLldpprofileCustomTlvArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Configuration method to edit Media Endpoint Discovery (MED) location service type-length-value (TLV) categories. The structure of `medLocationService` block is documented below.
	MedLocationServices SwitchcontrollerLldpprofileMedLocationServiceArrayInput
	// Configuration method to edit Media Endpoint Discovery (MED) network policy type-length-value (TLV) categories. The structure of `medNetworkPolicy` block is documented below.
	MedNetworkPolicies SwitchcontrollerLldpprofileMedNetworkPolicyArrayInput
	// Transmitted LLDP-MED TLVs (type-length-value descriptions): inventory management TLV and/or network policy TLV.
	MedTlvs pulumi.StringPtrInput
	// Transmitted IEEE 802.1 TLVs. Valid values: `port-vlan-id`.
	N8021Tlvs pulumi.StringPtrInput
	// Transmitted IEEE 802.3 TLVs.
	N8023Tlvs pulumi.StringPtrInput
	// Profile name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchcontrollerLldpprofileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchcontrollerLldpprofileArgs)(nil)).Elem()
}

type SwitchcontrollerLldpprofileInput interface {
	pulumi.Input

	ToSwitchcontrollerLldpprofileOutput() SwitchcontrollerLldpprofileOutput
	ToSwitchcontrollerLldpprofileOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileOutput
}

func (*SwitchcontrollerLldpprofile) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerLldpprofile)(nil)).Elem()
}

func (i *SwitchcontrollerLldpprofile) ToSwitchcontrollerLldpprofileOutput() SwitchcontrollerLldpprofileOutput {
	return i.ToSwitchcontrollerLldpprofileOutputWithContext(context.Background())
}

func (i *SwitchcontrollerLldpprofile) ToSwitchcontrollerLldpprofileOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLldpprofileOutput)
}

// SwitchcontrollerLldpprofileArrayInput is an input type that accepts SwitchcontrollerLldpprofileArray and SwitchcontrollerLldpprofileArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerLldpprofileArrayInput` via:
//
//	SwitchcontrollerLldpprofileArray{ SwitchcontrollerLldpprofileArgs{...} }
type SwitchcontrollerLldpprofileArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerLldpprofileArrayOutput() SwitchcontrollerLldpprofileArrayOutput
	ToSwitchcontrollerLldpprofileArrayOutputWithContext(context.Context) SwitchcontrollerLldpprofileArrayOutput
}

type SwitchcontrollerLldpprofileArray []SwitchcontrollerLldpprofileInput

func (SwitchcontrollerLldpprofileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchcontrollerLldpprofile)(nil)).Elem()
}

func (i SwitchcontrollerLldpprofileArray) ToSwitchcontrollerLldpprofileArrayOutput() SwitchcontrollerLldpprofileArrayOutput {
	return i.ToSwitchcontrollerLldpprofileArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerLldpprofileArray) ToSwitchcontrollerLldpprofileArrayOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLldpprofileArrayOutput)
}

// SwitchcontrollerLldpprofileMapInput is an input type that accepts SwitchcontrollerLldpprofileMap and SwitchcontrollerLldpprofileMapOutput values.
// You can construct a concrete instance of `SwitchcontrollerLldpprofileMapInput` via:
//
//	SwitchcontrollerLldpprofileMap{ "key": SwitchcontrollerLldpprofileArgs{...} }
type SwitchcontrollerLldpprofileMapInput interface {
	pulumi.Input

	ToSwitchcontrollerLldpprofileMapOutput() SwitchcontrollerLldpprofileMapOutput
	ToSwitchcontrollerLldpprofileMapOutputWithContext(context.Context) SwitchcontrollerLldpprofileMapOutput
}

type SwitchcontrollerLldpprofileMap map[string]SwitchcontrollerLldpprofileInput

func (SwitchcontrollerLldpprofileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchcontrollerLldpprofile)(nil)).Elem()
}

func (i SwitchcontrollerLldpprofileMap) ToSwitchcontrollerLldpprofileMapOutput() SwitchcontrollerLldpprofileMapOutput {
	return i.ToSwitchcontrollerLldpprofileMapOutputWithContext(context.Background())
}

func (i SwitchcontrollerLldpprofileMap) ToSwitchcontrollerLldpprofileMapOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerLldpprofileMapOutput)
}

type SwitchcontrollerLldpprofileOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLldpprofileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerLldpprofile)(nil)).Elem()
}

func (o SwitchcontrollerLldpprofileOutput) ToSwitchcontrollerLldpprofileOutput() SwitchcontrollerLldpprofileOutput {
	return o
}

func (o SwitchcontrollerLldpprofileOutput) ToSwitchcontrollerLldpprofileOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileOutput {
	return o
}

// Enable/disable auto inter-switch LAG. Valid values: `disable`, `enable`.
func (o SwitchcontrollerLldpprofileOutput) AutoIsl() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.StringOutput { return v.AutoIsl }).(pulumi.StringOutput)
}

// Auto inter-switch LAG hello timer duration (1 - 30 sec, default = 3).
func (o SwitchcontrollerLldpprofileOutput) AutoIslHelloTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.IntOutput { return v.AutoIslHelloTimer }).(pulumi.IntOutput)
}

// Auto inter-switch LAG port group ID (0 - 9).
func (o SwitchcontrollerLldpprofileOutput) AutoIslPortGroup() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.IntOutput { return v.AutoIslPortGroup }).(pulumi.IntOutput)
}

// Auto inter-switch LAG timeout if no response is received (3 - 90 sec, default = 9).
func (o SwitchcontrollerLldpprofileOutput) AutoIslReceiveTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.IntOutput { return v.AutoIslReceiveTimeout }).(pulumi.IntOutput)
}

// Enable/disable MCLAG inter chassis link. Valid values: `disable`, `enable`.
func (o SwitchcontrollerLldpprofileOutput) AutoMclagIcl() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.StringOutput { return v.AutoMclagIcl }).(pulumi.StringOutput)
}

// Configuration method to edit custom TLV entries. The structure of `customTlvs` block is documented below.
func (o SwitchcontrollerLldpprofileOutput) CustomTlvs() SwitchcontrollerLldpprofileCustomTlvArrayOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) SwitchcontrollerLldpprofileCustomTlvArrayOutput {
		return v.CustomTlvs
	}).(SwitchcontrollerLldpprofileCustomTlvArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SwitchcontrollerLldpprofileOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Configuration method to edit Media Endpoint Discovery (MED) location service type-length-value (TLV) categories. The structure of `medLocationService` block is documented below.
func (o SwitchcontrollerLldpprofileOutput) MedLocationServices() SwitchcontrollerLldpprofileMedLocationServiceArrayOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) SwitchcontrollerLldpprofileMedLocationServiceArrayOutput {
		return v.MedLocationServices
	}).(SwitchcontrollerLldpprofileMedLocationServiceArrayOutput)
}

// Configuration method to edit Media Endpoint Discovery (MED) network policy type-length-value (TLV) categories. The structure of `medNetworkPolicy` block is documented below.
func (o SwitchcontrollerLldpprofileOutput) MedNetworkPolicies() SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput {
		return v.MedNetworkPolicies
	}).(SwitchcontrollerLldpprofileMedNetworkPolicyArrayOutput)
}

// Transmitted LLDP-MED TLVs (type-length-value descriptions): inventory management TLV and/or network policy TLV.
func (o SwitchcontrollerLldpprofileOutput) MedTlvs() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.StringOutput { return v.MedTlvs }).(pulumi.StringOutput)
}

// Transmitted IEEE 802.1 TLVs. Valid values: `port-vlan-id`.
func (o SwitchcontrollerLldpprofileOutput) N8021Tlvs() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.StringOutput { return v.N8021Tlvs }).(pulumi.StringOutput)
}

// Transmitted IEEE 802.3 TLVs.
func (o SwitchcontrollerLldpprofileOutput) N8023Tlvs() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.StringOutput { return v.N8023Tlvs }).(pulumi.StringOutput)
}

// Profile name.
func (o SwitchcontrollerLldpprofileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SwitchcontrollerLldpprofileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerLldpprofile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerLldpprofileArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLldpprofileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchcontrollerLldpprofile)(nil)).Elem()
}

func (o SwitchcontrollerLldpprofileArrayOutput) ToSwitchcontrollerLldpprofileArrayOutput() SwitchcontrollerLldpprofileArrayOutput {
	return o
}

func (o SwitchcontrollerLldpprofileArrayOutput) ToSwitchcontrollerLldpprofileArrayOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileArrayOutput {
	return o
}

func (o SwitchcontrollerLldpprofileArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerLldpprofileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchcontrollerLldpprofile {
		return vs[0].([]*SwitchcontrollerLldpprofile)[vs[1].(int)]
	}).(SwitchcontrollerLldpprofileOutput)
}

type SwitchcontrollerLldpprofileMapOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerLldpprofileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchcontrollerLldpprofile)(nil)).Elem()
}

func (o SwitchcontrollerLldpprofileMapOutput) ToSwitchcontrollerLldpprofileMapOutput() SwitchcontrollerLldpprofileMapOutput {
	return o
}

func (o SwitchcontrollerLldpprofileMapOutput) ToSwitchcontrollerLldpprofileMapOutputWithContext(ctx context.Context) SwitchcontrollerLldpprofileMapOutput {
	return o
}

func (o SwitchcontrollerLldpprofileMapOutput) MapIndex(k pulumi.StringInput) SwitchcontrollerLldpprofileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchcontrollerLldpprofile {
		return vs[0].(map[string]*SwitchcontrollerLldpprofile)[vs[1].(string)]
	}).(SwitchcontrollerLldpprofileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLldpprofileInput)(nil)).Elem(), &SwitchcontrollerLldpprofile{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLldpprofileArrayInput)(nil)).Elem(), SwitchcontrollerLldpprofileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerLldpprofileMapInput)(nil)).Elem(), SwitchcontrollerLldpprofileMap{})
	pulumi.RegisterOutputType(SwitchcontrollerLldpprofileOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLldpprofileArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerLldpprofileMapOutput{})
}
