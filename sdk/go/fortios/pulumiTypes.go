// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AntivirusProfileCifs struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// AntivirusProfileCifsInput is an input type that accepts AntivirusProfileCifsArgs and AntivirusProfileCifsOutput values.
// You can construct a concrete instance of `AntivirusProfileCifsInput` via:
//
//	AntivirusProfileCifsArgs{...}
type AntivirusProfileCifsInput interface {
	pulumi.Input

	ToAntivirusProfileCifsOutput() AntivirusProfileCifsOutput
	ToAntivirusProfileCifsOutputWithContext(context.Context) AntivirusProfileCifsOutput
}

type AntivirusProfileCifsArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (AntivirusProfileCifsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileCifs)(nil)).Elem()
}

func (i AntivirusProfileCifsArgs) ToAntivirusProfileCifsOutput() AntivirusProfileCifsOutput {
	return i.ToAntivirusProfileCifsOutputWithContext(context.Background())
}

func (i AntivirusProfileCifsArgs) ToAntivirusProfileCifsOutputWithContext(ctx context.Context) AntivirusProfileCifsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileCifsOutput)
}

func (i AntivirusProfileCifsArgs) ToAntivirusProfileCifsPtrOutput() AntivirusProfileCifsPtrOutput {
	return i.ToAntivirusProfileCifsPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileCifsArgs) ToAntivirusProfileCifsPtrOutputWithContext(ctx context.Context) AntivirusProfileCifsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileCifsOutput).ToAntivirusProfileCifsPtrOutputWithContext(ctx)
}

// AntivirusProfileCifsPtrInput is an input type that accepts AntivirusProfileCifsArgs, AntivirusProfileCifsPtr and AntivirusProfileCifsPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileCifsPtrInput` via:
//
//	        AntivirusProfileCifsArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileCifsPtrInput interface {
	pulumi.Input

	ToAntivirusProfileCifsPtrOutput() AntivirusProfileCifsPtrOutput
	ToAntivirusProfileCifsPtrOutputWithContext(context.Context) AntivirusProfileCifsPtrOutput
}

type antivirusProfileCifsPtrType AntivirusProfileCifsArgs

func AntivirusProfileCifsPtr(v *AntivirusProfileCifsArgs) AntivirusProfileCifsPtrInput {
	return (*antivirusProfileCifsPtrType)(v)
}

func (*antivirusProfileCifsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileCifs)(nil)).Elem()
}

func (i *antivirusProfileCifsPtrType) ToAntivirusProfileCifsPtrOutput() AntivirusProfileCifsPtrOutput {
	return i.ToAntivirusProfileCifsPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileCifsPtrType) ToAntivirusProfileCifsPtrOutputWithContext(ctx context.Context) AntivirusProfileCifsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileCifsPtrOutput)
}

type AntivirusProfileCifsOutput struct{ *pulumi.OutputState }

func (AntivirusProfileCifsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileCifs)(nil)).Elem()
}

func (o AntivirusProfileCifsOutput) ToAntivirusProfileCifsOutput() AntivirusProfileCifsOutput {
	return o
}

func (o AntivirusProfileCifsOutput) ToAntivirusProfileCifsOutputWithContext(ctx context.Context) AntivirusProfileCifsOutput {
	return o
}

func (o AntivirusProfileCifsOutput) ToAntivirusProfileCifsPtrOutput() AntivirusProfileCifsPtrOutput {
	return o.ToAntivirusProfileCifsPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileCifsOutput) ToAntivirusProfileCifsPtrOutputWithContext(ctx context.Context) AntivirusProfileCifsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileCifs) *AntivirusProfileCifs {
		return &v
	}).(AntivirusProfileCifsPtrOutput)
}

// Select the archive types to block.
func (o AntivirusProfileCifsOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileCifsOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileCifsOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileCifsOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileCifsOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileCifsOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileCifsOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileCifsOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileCifsOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileCifsOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileCifsOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileCifs) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type AntivirusProfileCifsPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileCifsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileCifs)(nil)).Elem()
}

func (o AntivirusProfileCifsPtrOutput) ToAntivirusProfileCifsPtrOutput() AntivirusProfileCifsPtrOutput {
	return o
}

func (o AntivirusProfileCifsPtrOutput) ToAntivirusProfileCifsPtrOutputWithContext(ctx context.Context) AntivirusProfileCifsPtrOutput {
	return o
}

func (o AntivirusProfileCifsPtrOutput) Elem() AntivirusProfileCifsOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) AntivirusProfileCifs {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileCifs
		return ret
	}).(AntivirusProfileCifsOutput)
}

// Select the archive types to block.
func (o AntivirusProfileCifsPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileCifsPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileCifsPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileCifsPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileCifsPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileCifsPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileCifsPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileCifsPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable CIFS AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileCifsPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileCifsPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileCifsPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileCifs) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileContentDisarm struct {
	// Enable/disable inserting a cover page into the disarmed document. Valid values: `disable`, `enable`.
	CoverPage *string `pulumi:"coverPage"`
	// Enable/disable only detect disarmable files, do not alter content. Valid values: `disable`, `enable`.
	DetectOnly *string `pulumi:"detectOnly"`
	// Action to be taken if CDR engine encounters an unrecoverable error. Valid values: `block`, `log-only`, `ignore`.
	ErrorAction *string `pulumi:"errorAction"`
	// Enable/disable stripping of PowerPoint action events in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeAction *string `pulumi:"officeAction"`
	// Enable/disable stripping of Dynamic Data Exchange events in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeDde *string `pulumi:"officeDde"`
	// Enable/disable stripping of embedded objects in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeEmbed *string `pulumi:"officeEmbed"`
	// Enable/disable stripping of hyperlinks in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeHylink *string `pulumi:"officeHylink"`
	// Enable/disable stripping of linked objects in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeLinked *string `pulumi:"officeLinked"`
	// Enable/disable stripping of macros in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeMacro *string `pulumi:"officeMacro"`
	// Destination to send original file if active content is removed. Valid values: `fortisandbox`, `quarantine`, `discard`.
	OriginalFileDestination *string `pulumi:"originalFileDestination"`
	// Enable/disable stripping of actions that submit data to other targets in PDF documents. Valid values: `disable`, `enable`.
	PdfActForm *string `pulumi:"pdfActForm"`
	// Enable/disable stripping of links to other PDFs in PDF documents. Valid values: `disable`, `enable`.
	PdfActGotor *string `pulumi:"pdfActGotor"`
	// Enable/disable stripping of actions that execute JavaScript code in PDF documents. Valid values: `disable`, `enable`.
	PdfActJava *string `pulumi:"pdfActJava"`
	// Enable/disable stripping of links to external applications in PDF documents. Valid values: `disable`, `enable`.
	PdfActLaunch *string `pulumi:"pdfActLaunch"`
	// Enable/disable stripping of embedded movies in PDF documents. Valid values: `disable`, `enable`.
	PdfActMovie *string `pulumi:"pdfActMovie"`
	// Enable/disable stripping of embedded sound files in PDF documents. Valid values: `disable`, `enable`.
	PdfActSound *string `pulumi:"pdfActSound"`
	// Enable/disable stripping of embedded files in PDF documents. Valid values: `disable`, `enable`.
	PdfEmbedfile *string `pulumi:"pdfEmbedfile"`
	// Enable/disable stripping of hyperlinks from PDF documents. Valid values: `disable`, `enable`.
	PdfHyperlink *string `pulumi:"pdfHyperlink"`
	// Enable/disable stripping of JavaScript code in PDF documents. Valid values: `disable`, `enable`.
	PdfJavacode *string `pulumi:"pdfJavacode"`
}

// AntivirusProfileContentDisarmInput is an input type that accepts AntivirusProfileContentDisarmArgs and AntivirusProfileContentDisarmOutput values.
// You can construct a concrete instance of `AntivirusProfileContentDisarmInput` via:
//
//	AntivirusProfileContentDisarmArgs{...}
type AntivirusProfileContentDisarmInput interface {
	pulumi.Input

	ToAntivirusProfileContentDisarmOutput() AntivirusProfileContentDisarmOutput
	ToAntivirusProfileContentDisarmOutputWithContext(context.Context) AntivirusProfileContentDisarmOutput
}

type AntivirusProfileContentDisarmArgs struct {
	// Enable/disable inserting a cover page into the disarmed document. Valid values: `disable`, `enable`.
	CoverPage pulumi.StringPtrInput `pulumi:"coverPage"`
	// Enable/disable only detect disarmable files, do not alter content. Valid values: `disable`, `enable`.
	DetectOnly pulumi.StringPtrInput `pulumi:"detectOnly"`
	// Action to be taken if CDR engine encounters an unrecoverable error. Valid values: `block`, `log-only`, `ignore`.
	ErrorAction pulumi.StringPtrInput `pulumi:"errorAction"`
	// Enable/disable stripping of PowerPoint action events in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeAction pulumi.StringPtrInput `pulumi:"officeAction"`
	// Enable/disable stripping of Dynamic Data Exchange events in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeDde pulumi.StringPtrInput `pulumi:"officeDde"`
	// Enable/disable stripping of embedded objects in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeEmbed pulumi.StringPtrInput `pulumi:"officeEmbed"`
	// Enable/disable stripping of hyperlinks in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeHylink pulumi.StringPtrInput `pulumi:"officeHylink"`
	// Enable/disable stripping of linked objects in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeLinked pulumi.StringPtrInput `pulumi:"officeLinked"`
	// Enable/disable stripping of macros in Microsoft Office documents. Valid values: `disable`, `enable`.
	OfficeMacro pulumi.StringPtrInput `pulumi:"officeMacro"`
	// Destination to send original file if active content is removed. Valid values: `fortisandbox`, `quarantine`, `discard`.
	OriginalFileDestination pulumi.StringPtrInput `pulumi:"originalFileDestination"`
	// Enable/disable stripping of actions that submit data to other targets in PDF documents. Valid values: `disable`, `enable`.
	PdfActForm pulumi.StringPtrInput `pulumi:"pdfActForm"`
	// Enable/disable stripping of links to other PDFs in PDF documents. Valid values: `disable`, `enable`.
	PdfActGotor pulumi.StringPtrInput `pulumi:"pdfActGotor"`
	// Enable/disable stripping of actions that execute JavaScript code in PDF documents. Valid values: `disable`, `enable`.
	PdfActJava pulumi.StringPtrInput `pulumi:"pdfActJava"`
	// Enable/disable stripping of links to external applications in PDF documents. Valid values: `disable`, `enable`.
	PdfActLaunch pulumi.StringPtrInput `pulumi:"pdfActLaunch"`
	// Enable/disable stripping of embedded movies in PDF documents. Valid values: `disable`, `enable`.
	PdfActMovie pulumi.StringPtrInput `pulumi:"pdfActMovie"`
	// Enable/disable stripping of embedded sound files in PDF documents. Valid values: `disable`, `enable`.
	PdfActSound pulumi.StringPtrInput `pulumi:"pdfActSound"`
	// Enable/disable stripping of embedded files in PDF documents. Valid values: `disable`, `enable`.
	PdfEmbedfile pulumi.StringPtrInput `pulumi:"pdfEmbedfile"`
	// Enable/disable stripping of hyperlinks from PDF documents. Valid values: `disable`, `enable`.
	PdfHyperlink pulumi.StringPtrInput `pulumi:"pdfHyperlink"`
	// Enable/disable stripping of JavaScript code in PDF documents. Valid values: `disable`, `enable`.
	PdfJavacode pulumi.StringPtrInput `pulumi:"pdfJavacode"`
}

func (AntivirusProfileContentDisarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileContentDisarm)(nil)).Elem()
}

func (i AntivirusProfileContentDisarmArgs) ToAntivirusProfileContentDisarmOutput() AntivirusProfileContentDisarmOutput {
	return i.ToAntivirusProfileContentDisarmOutputWithContext(context.Background())
}

func (i AntivirusProfileContentDisarmArgs) ToAntivirusProfileContentDisarmOutputWithContext(ctx context.Context) AntivirusProfileContentDisarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileContentDisarmOutput)
}

func (i AntivirusProfileContentDisarmArgs) ToAntivirusProfileContentDisarmPtrOutput() AntivirusProfileContentDisarmPtrOutput {
	return i.ToAntivirusProfileContentDisarmPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileContentDisarmArgs) ToAntivirusProfileContentDisarmPtrOutputWithContext(ctx context.Context) AntivirusProfileContentDisarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileContentDisarmOutput).ToAntivirusProfileContentDisarmPtrOutputWithContext(ctx)
}

// AntivirusProfileContentDisarmPtrInput is an input type that accepts AntivirusProfileContentDisarmArgs, AntivirusProfileContentDisarmPtr and AntivirusProfileContentDisarmPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileContentDisarmPtrInput` via:
//
//	        AntivirusProfileContentDisarmArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileContentDisarmPtrInput interface {
	pulumi.Input

	ToAntivirusProfileContentDisarmPtrOutput() AntivirusProfileContentDisarmPtrOutput
	ToAntivirusProfileContentDisarmPtrOutputWithContext(context.Context) AntivirusProfileContentDisarmPtrOutput
}

type antivirusProfileContentDisarmPtrType AntivirusProfileContentDisarmArgs

func AntivirusProfileContentDisarmPtr(v *AntivirusProfileContentDisarmArgs) AntivirusProfileContentDisarmPtrInput {
	return (*antivirusProfileContentDisarmPtrType)(v)
}

func (*antivirusProfileContentDisarmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileContentDisarm)(nil)).Elem()
}

func (i *antivirusProfileContentDisarmPtrType) ToAntivirusProfileContentDisarmPtrOutput() AntivirusProfileContentDisarmPtrOutput {
	return i.ToAntivirusProfileContentDisarmPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileContentDisarmPtrType) ToAntivirusProfileContentDisarmPtrOutputWithContext(ctx context.Context) AntivirusProfileContentDisarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileContentDisarmPtrOutput)
}

type AntivirusProfileContentDisarmOutput struct{ *pulumi.OutputState }

func (AntivirusProfileContentDisarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileContentDisarm)(nil)).Elem()
}

func (o AntivirusProfileContentDisarmOutput) ToAntivirusProfileContentDisarmOutput() AntivirusProfileContentDisarmOutput {
	return o
}

func (o AntivirusProfileContentDisarmOutput) ToAntivirusProfileContentDisarmOutputWithContext(ctx context.Context) AntivirusProfileContentDisarmOutput {
	return o
}

func (o AntivirusProfileContentDisarmOutput) ToAntivirusProfileContentDisarmPtrOutput() AntivirusProfileContentDisarmPtrOutput {
	return o.ToAntivirusProfileContentDisarmPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileContentDisarmOutput) ToAntivirusProfileContentDisarmPtrOutputWithContext(ctx context.Context) AntivirusProfileContentDisarmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileContentDisarm) *AntivirusProfileContentDisarm {
		return &v
	}).(AntivirusProfileContentDisarmPtrOutput)
}

// Enable/disable inserting a cover page into the disarmed document. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) CoverPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.CoverPage }).(pulumi.StringPtrOutput)
}

// Enable/disable only detect disarmable files, do not alter content. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) DetectOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.DetectOnly }).(pulumi.StringPtrOutput)
}

// Action to be taken if CDR engine encounters an unrecoverable error. Valid values: `block`, `log-only`, `ignore`.
func (o AntivirusProfileContentDisarmOutput) ErrorAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.ErrorAction }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of PowerPoint action events in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) OfficeAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.OfficeAction }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of Dynamic Data Exchange events in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) OfficeDde() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.OfficeDde }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded objects in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) OfficeEmbed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.OfficeEmbed }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of hyperlinks in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) OfficeHylink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.OfficeHylink }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of linked objects in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) OfficeLinked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.OfficeLinked }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of macros in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) OfficeMacro() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.OfficeMacro }).(pulumi.StringPtrOutput)
}

// Destination to send original file if active content is removed. Valid values: `fortisandbox`, `quarantine`, `discard`.
func (o AntivirusProfileContentDisarmOutput) OriginalFileDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.OriginalFileDestination }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of actions that submit data to other targets in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) PdfActForm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.PdfActForm }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of links to other PDFs in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) PdfActGotor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.PdfActGotor }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of actions that execute JavaScript code in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) PdfActJava() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.PdfActJava }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of links to external applications in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) PdfActLaunch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.PdfActLaunch }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded movies in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) PdfActMovie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.PdfActMovie }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded sound files in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) PdfActSound() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.PdfActSound }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded files in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) PdfEmbedfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.PdfEmbedfile }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of hyperlinks from PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) PdfHyperlink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.PdfHyperlink }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of JavaScript code in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmOutput) PdfJavacode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileContentDisarm) *string { return v.PdfJavacode }).(pulumi.StringPtrOutput)
}

type AntivirusProfileContentDisarmPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileContentDisarmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileContentDisarm)(nil)).Elem()
}

func (o AntivirusProfileContentDisarmPtrOutput) ToAntivirusProfileContentDisarmPtrOutput() AntivirusProfileContentDisarmPtrOutput {
	return o
}

func (o AntivirusProfileContentDisarmPtrOutput) ToAntivirusProfileContentDisarmPtrOutputWithContext(ctx context.Context) AntivirusProfileContentDisarmPtrOutput {
	return o
}

func (o AntivirusProfileContentDisarmPtrOutput) Elem() AntivirusProfileContentDisarmOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) AntivirusProfileContentDisarm {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileContentDisarm
		return ret
	}).(AntivirusProfileContentDisarmOutput)
}

// Enable/disable inserting a cover page into the disarmed document. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) CoverPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.CoverPage
	}).(pulumi.StringPtrOutput)
}

// Enable/disable only detect disarmable files, do not alter content. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) DetectOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.DetectOnly
	}).(pulumi.StringPtrOutput)
}

// Action to be taken if CDR engine encounters an unrecoverable error. Valid values: `block`, `log-only`, `ignore`.
func (o AntivirusProfileContentDisarmPtrOutput) ErrorAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.ErrorAction
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of PowerPoint action events in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) OfficeAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeAction
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of Dynamic Data Exchange events in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) OfficeDde() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeDde
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded objects in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) OfficeEmbed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeEmbed
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of hyperlinks in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) OfficeHylink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeHylink
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of linked objects in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) OfficeLinked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeLinked
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of macros in Microsoft Office documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) OfficeMacro() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OfficeMacro
	}).(pulumi.StringPtrOutput)
}

// Destination to send original file if active content is removed. Valid values: `fortisandbox`, `quarantine`, `discard`.
func (o AntivirusProfileContentDisarmPtrOutput) OriginalFileDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.OriginalFileDestination
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of actions that submit data to other targets in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) PdfActForm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActForm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of links to other PDFs in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) PdfActGotor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActGotor
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of actions that execute JavaScript code in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) PdfActJava() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActJava
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of links to external applications in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) PdfActLaunch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActLaunch
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded movies in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) PdfActMovie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActMovie
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded sound files in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) PdfActSound() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfActSound
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of embedded files in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) PdfEmbedfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfEmbedfile
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of hyperlinks from PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) PdfHyperlink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfHyperlink
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of JavaScript code in PDF documents. Valid values: `disable`, `enable`.
func (o AntivirusProfileContentDisarmPtrOutput) PdfJavacode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileContentDisarm) *string {
		if v == nil {
			return nil
		}
		return v.PdfJavacode
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileExternalBlocklist struct {
	// External blocklist.
	Name *string `pulumi:"name"`
}

// AntivirusProfileExternalBlocklistInput is an input type that accepts AntivirusProfileExternalBlocklistArgs and AntivirusProfileExternalBlocklistOutput values.
// You can construct a concrete instance of `AntivirusProfileExternalBlocklistInput` via:
//
//	AntivirusProfileExternalBlocklistArgs{...}
type AntivirusProfileExternalBlocklistInput interface {
	pulumi.Input

	ToAntivirusProfileExternalBlocklistOutput() AntivirusProfileExternalBlocklistOutput
	ToAntivirusProfileExternalBlocklistOutputWithContext(context.Context) AntivirusProfileExternalBlocklistOutput
}

type AntivirusProfileExternalBlocklistArgs struct {
	// External blocklist.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AntivirusProfileExternalBlocklistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileExternalBlocklist)(nil)).Elem()
}

func (i AntivirusProfileExternalBlocklistArgs) ToAntivirusProfileExternalBlocklistOutput() AntivirusProfileExternalBlocklistOutput {
	return i.ToAntivirusProfileExternalBlocklistOutputWithContext(context.Background())
}

func (i AntivirusProfileExternalBlocklistArgs) ToAntivirusProfileExternalBlocklistOutputWithContext(ctx context.Context) AntivirusProfileExternalBlocklistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileExternalBlocklistOutput)
}

// AntivirusProfileExternalBlocklistArrayInput is an input type that accepts AntivirusProfileExternalBlocklistArray and AntivirusProfileExternalBlocklistArrayOutput values.
// You can construct a concrete instance of `AntivirusProfileExternalBlocklistArrayInput` via:
//
//	AntivirusProfileExternalBlocklistArray{ AntivirusProfileExternalBlocklistArgs{...} }
type AntivirusProfileExternalBlocklistArrayInput interface {
	pulumi.Input

	ToAntivirusProfileExternalBlocklistArrayOutput() AntivirusProfileExternalBlocklistArrayOutput
	ToAntivirusProfileExternalBlocklistArrayOutputWithContext(context.Context) AntivirusProfileExternalBlocklistArrayOutput
}

type AntivirusProfileExternalBlocklistArray []AntivirusProfileExternalBlocklistInput

func (AntivirusProfileExternalBlocklistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AntivirusProfileExternalBlocklist)(nil)).Elem()
}

func (i AntivirusProfileExternalBlocklistArray) ToAntivirusProfileExternalBlocklistArrayOutput() AntivirusProfileExternalBlocklistArrayOutput {
	return i.ToAntivirusProfileExternalBlocklistArrayOutputWithContext(context.Background())
}

func (i AntivirusProfileExternalBlocklistArray) ToAntivirusProfileExternalBlocklistArrayOutputWithContext(ctx context.Context) AntivirusProfileExternalBlocklistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileExternalBlocklistArrayOutput)
}

type AntivirusProfileExternalBlocklistOutput struct{ *pulumi.OutputState }

func (AntivirusProfileExternalBlocklistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileExternalBlocklist)(nil)).Elem()
}

func (o AntivirusProfileExternalBlocklistOutput) ToAntivirusProfileExternalBlocklistOutput() AntivirusProfileExternalBlocklistOutput {
	return o
}

func (o AntivirusProfileExternalBlocklistOutput) ToAntivirusProfileExternalBlocklistOutputWithContext(ctx context.Context) AntivirusProfileExternalBlocklistOutput {
	return o
}

// External blocklist.
func (o AntivirusProfileExternalBlocklistOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileExternalBlocklist) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AntivirusProfileExternalBlocklistArrayOutput struct{ *pulumi.OutputState }

func (AntivirusProfileExternalBlocklistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AntivirusProfileExternalBlocklist)(nil)).Elem()
}

func (o AntivirusProfileExternalBlocklistArrayOutput) ToAntivirusProfileExternalBlocklistArrayOutput() AntivirusProfileExternalBlocklistArrayOutput {
	return o
}

func (o AntivirusProfileExternalBlocklistArrayOutput) ToAntivirusProfileExternalBlocklistArrayOutputWithContext(ctx context.Context) AntivirusProfileExternalBlocklistArrayOutput {
	return o
}

func (o AntivirusProfileExternalBlocklistArrayOutput) Index(i pulumi.IntInput) AntivirusProfileExternalBlocklistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AntivirusProfileExternalBlocklist {
		return vs[0].([]AntivirusProfileExternalBlocklist)[vs[1].(int)]
	}).(AntivirusProfileExternalBlocklistOutput)
}

type AntivirusProfileFtp struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable FTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// AntivirusProfileFtpInput is an input type that accepts AntivirusProfileFtpArgs and AntivirusProfileFtpOutput values.
// You can construct a concrete instance of `AntivirusProfileFtpInput` via:
//
//	AntivirusProfileFtpArgs{...}
type AntivirusProfileFtpInput interface {
	pulumi.Input

	ToAntivirusProfileFtpOutput() AntivirusProfileFtpOutput
	ToAntivirusProfileFtpOutputWithContext(context.Context) AntivirusProfileFtpOutput
}

type AntivirusProfileFtpArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable FTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (AntivirusProfileFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileFtp)(nil)).Elem()
}

func (i AntivirusProfileFtpArgs) ToAntivirusProfileFtpOutput() AntivirusProfileFtpOutput {
	return i.ToAntivirusProfileFtpOutputWithContext(context.Background())
}

func (i AntivirusProfileFtpArgs) ToAntivirusProfileFtpOutputWithContext(ctx context.Context) AntivirusProfileFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileFtpOutput)
}

func (i AntivirusProfileFtpArgs) ToAntivirusProfileFtpPtrOutput() AntivirusProfileFtpPtrOutput {
	return i.ToAntivirusProfileFtpPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileFtpArgs) ToAntivirusProfileFtpPtrOutputWithContext(ctx context.Context) AntivirusProfileFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileFtpOutput).ToAntivirusProfileFtpPtrOutputWithContext(ctx)
}

// AntivirusProfileFtpPtrInput is an input type that accepts AntivirusProfileFtpArgs, AntivirusProfileFtpPtr and AntivirusProfileFtpPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileFtpPtrInput` via:
//
//	        AntivirusProfileFtpArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileFtpPtrInput interface {
	pulumi.Input

	ToAntivirusProfileFtpPtrOutput() AntivirusProfileFtpPtrOutput
	ToAntivirusProfileFtpPtrOutputWithContext(context.Context) AntivirusProfileFtpPtrOutput
}

type antivirusProfileFtpPtrType AntivirusProfileFtpArgs

func AntivirusProfileFtpPtr(v *AntivirusProfileFtpArgs) AntivirusProfileFtpPtrInput {
	return (*antivirusProfileFtpPtrType)(v)
}

func (*antivirusProfileFtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileFtp)(nil)).Elem()
}

func (i *antivirusProfileFtpPtrType) ToAntivirusProfileFtpPtrOutput() AntivirusProfileFtpPtrOutput {
	return i.ToAntivirusProfileFtpPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileFtpPtrType) ToAntivirusProfileFtpPtrOutputWithContext(ctx context.Context) AntivirusProfileFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileFtpPtrOutput)
}

type AntivirusProfileFtpOutput struct{ *pulumi.OutputState }

func (AntivirusProfileFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileFtp)(nil)).Elem()
}

func (o AntivirusProfileFtpOutput) ToAntivirusProfileFtpOutput() AntivirusProfileFtpOutput {
	return o
}

func (o AntivirusProfileFtpOutput) ToAntivirusProfileFtpOutputWithContext(ctx context.Context) AntivirusProfileFtpOutput {
	return o
}

func (o AntivirusProfileFtpOutput) ToAntivirusProfileFtpPtrOutput() AntivirusProfileFtpPtrOutput {
	return o.ToAntivirusProfileFtpPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileFtpOutput) ToAntivirusProfileFtpPtrOutputWithContext(ctx context.Context) AntivirusProfileFtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileFtp) *AntivirusProfileFtp {
		return &v
	}).(AntivirusProfileFtpPtrOutput)
}

// Select the archive types to block.
func (o AntivirusProfileFtpOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileFtpOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileFtpOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileFtpOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileFtpOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileFtpOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileFtpOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileFtpOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable FTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileFtpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileFtpOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileFtpOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileFtp) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type AntivirusProfileFtpPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileFtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileFtp)(nil)).Elem()
}

func (o AntivirusProfileFtpPtrOutput) ToAntivirusProfileFtpPtrOutput() AntivirusProfileFtpPtrOutput {
	return o
}

func (o AntivirusProfileFtpPtrOutput) ToAntivirusProfileFtpPtrOutputWithContext(ctx context.Context) AntivirusProfileFtpPtrOutput {
	return o
}

func (o AntivirusProfileFtpPtrOutput) Elem() AntivirusProfileFtpOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) AntivirusProfileFtp {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileFtp
		return ret
	}).(AntivirusProfileFtpOutput)
}

// Select the archive types to block.
func (o AntivirusProfileFtpPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileFtpPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileFtpPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileFtpPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileFtpPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileFtpPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileFtpPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileFtpPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileFtpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileFtpPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileFtpPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileFtp) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileHttp struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm *string `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
	// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
	UnknownContentEncoding *string `pulumi:"unknownContentEncoding"`
}

// AntivirusProfileHttpInput is an input type that accepts AntivirusProfileHttpArgs and AntivirusProfileHttpOutput values.
// You can construct a concrete instance of `AntivirusProfileHttpInput` via:
//
//	AntivirusProfileHttpArgs{...}
type AntivirusProfileHttpInput interface {
	pulumi.Input

	ToAntivirusProfileHttpOutput() AntivirusProfileHttpOutput
	ToAntivirusProfileHttpOutputWithContext(context.Context) AntivirusProfileHttpOutput
}

type AntivirusProfileHttpArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm pulumi.StringPtrInput `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
	UnknownContentEncoding pulumi.StringPtrInput `pulumi:"unknownContentEncoding"`
}

func (AntivirusProfileHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileHttp)(nil)).Elem()
}

func (i AntivirusProfileHttpArgs) ToAntivirusProfileHttpOutput() AntivirusProfileHttpOutput {
	return i.ToAntivirusProfileHttpOutputWithContext(context.Background())
}

func (i AntivirusProfileHttpArgs) ToAntivirusProfileHttpOutputWithContext(ctx context.Context) AntivirusProfileHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileHttpOutput)
}

func (i AntivirusProfileHttpArgs) ToAntivirusProfileHttpPtrOutput() AntivirusProfileHttpPtrOutput {
	return i.ToAntivirusProfileHttpPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileHttpArgs) ToAntivirusProfileHttpPtrOutputWithContext(ctx context.Context) AntivirusProfileHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileHttpOutput).ToAntivirusProfileHttpPtrOutputWithContext(ctx)
}

// AntivirusProfileHttpPtrInput is an input type that accepts AntivirusProfileHttpArgs, AntivirusProfileHttpPtr and AntivirusProfileHttpPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileHttpPtrInput` via:
//
//	        AntivirusProfileHttpArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileHttpPtrInput interface {
	pulumi.Input

	ToAntivirusProfileHttpPtrOutput() AntivirusProfileHttpPtrOutput
	ToAntivirusProfileHttpPtrOutputWithContext(context.Context) AntivirusProfileHttpPtrOutput
}

type antivirusProfileHttpPtrType AntivirusProfileHttpArgs

func AntivirusProfileHttpPtr(v *AntivirusProfileHttpArgs) AntivirusProfileHttpPtrInput {
	return (*antivirusProfileHttpPtrType)(v)
}

func (*antivirusProfileHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileHttp)(nil)).Elem()
}

func (i *antivirusProfileHttpPtrType) ToAntivirusProfileHttpPtrOutput() AntivirusProfileHttpPtrOutput {
	return i.ToAntivirusProfileHttpPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileHttpPtrType) ToAntivirusProfileHttpPtrOutputWithContext(ctx context.Context) AntivirusProfileHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileHttpPtrOutput)
}

type AntivirusProfileHttpOutput struct{ *pulumi.OutputState }

func (AntivirusProfileHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileHttp)(nil)).Elem()
}

func (o AntivirusProfileHttpOutput) ToAntivirusProfileHttpOutput() AntivirusProfileHttpOutput {
	return o
}

func (o AntivirusProfileHttpOutput) ToAntivirusProfileHttpOutputWithContext(ctx context.Context) AntivirusProfileHttpOutput {
	return o
}

func (o AntivirusProfileHttpOutput) ToAntivirusProfileHttpPtrOutput() AntivirusProfileHttpPtrOutput {
	return o.ToAntivirusProfileHttpPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileHttpOutput) ToAntivirusProfileHttpPtrOutputWithContext(ctx context.Context) AntivirusProfileHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileHttp) *AntivirusProfileHttp {
		return &v
	}).(AntivirusProfileHttpPtrOutput)
}

// Select the archive types to block.
func (o AntivirusProfileHttpOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileHttpOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileHttpOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o AntivirusProfileHttpOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.ContentDisarm }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileHttpOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileHttpOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileHttpOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileHttpOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileHttpOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileHttpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileHttpOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileHttpOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
func (o AntivirusProfileHttpOutput) UnknownContentEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileHttp) *string { return v.UnknownContentEncoding }).(pulumi.StringPtrOutput)
}

type AntivirusProfileHttpPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileHttp)(nil)).Elem()
}

func (o AntivirusProfileHttpPtrOutput) ToAntivirusProfileHttpPtrOutput() AntivirusProfileHttpPtrOutput {
	return o
}

func (o AntivirusProfileHttpPtrOutput) ToAntivirusProfileHttpPtrOutputWithContext(ctx context.Context) AntivirusProfileHttpPtrOutput {
	return o
}

func (o AntivirusProfileHttpPtrOutput) Elem() AntivirusProfileHttpOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) AntivirusProfileHttp {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileHttp
		return ret
	}).(AntivirusProfileHttpOutput)
}

// Select the archive types to block.
func (o AntivirusProfileHttpPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileHttpPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileHttpPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o AntivirusProfileHttpPtrOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.ContentDisarm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileHttpPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileHttpPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileHttpPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileHttpPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileHttpPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileHttpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileHttpPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileHttpPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

// Configure the action the FortiGate unit will take on unknown content-encoding. Valid values: `block`, `inspect`, `bypass`.
func (o AntivirusProfileHttpPtrOutput) UnknownContentEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileHttp) *string {
		if v == nil {
			return nil
		}
		return v.UnknownContentEncoding
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileImap struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm *string `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables *string `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable POP3 AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// AntivirusProfileImapInput is an input type that accepts AntivirusProfileImapArgs and AntivirusProfileImapOutput values.
// You can construct a concrete instance of `AntivirusProfileImapInput` via:
//
//	AntivirusProfileImapArgs{...}
type AntivirusProfileImapInput interface {
	pulumi.Input

	ToAntivirusProfileImapOutput() AntivirusProfileImapOutput
	ToAntivirusProfileImapOutputWithContext(context.Context) AntivirusProfileImapOutput
}

type AntivirusProfileImapArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm pulumi.StringPtrInput `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables pulumi.StringPtrInput `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable POP3 AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (AntivirusProfileImapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileImap)(nil)).Elem()
}

func (i AntivirusProfileImapArgs) ToAntivirusProfileImapOutput() AntivirusProfileImapOutput {
	return i.ToAntivirusProfileImapOutputWithContext(context.Background())
}

func (i AntivirusProfileImapArgs) ToAntivirusProfileImapOutputWithContext(ctx context.Context) AntivirusProfileImapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileImapOutput)
}

func (i AntivirusProfileImapArgs) ToAntivirusProfileImapPtrOutput() AntivirusProfileImapPtrOutput {
	return i.ToAntivirusProfileImapPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileImapArgs) ToAntivirusProfileImapPtrOutputWithContext(ctx context.Context) AntivirusProfileImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileImapOutput).ToAntivirusProfileImapPtrOutputWithContext(ctx)
}

// AntivirusProfileImapPtrInput is an input type that accepts AntivirusProfileImapArgs, AntivirusProfileImapPtr and AntivirusProfileImapPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileImapPtrInput` via:
//
//	        AntivirusProfileImapArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileImapPtrInput interface {
	pulumi.Input

	ToAntivirusProfileImapPtrOutput() AntivirusProfileImapPtrOutput
	ToAntivirusProfileImapPtrOutputWithContext(context.Context) AntivirusProfileImapPtrOutput
}

type antivirusProfileImapPtrType AntivirusProfileImapArgs

func AntivirusProfileImapPtr(v *AntivirusProfileImapArgs) AntivirusProfileImapPtrInput {
	return (*antivirusProfileImapPtrType)(v)
}

func (*antivirusProfileImapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileImap)(nil)).Elem()
}

func (i *antivirusProfileImapPtrType) ToAntivirusProfileImapPtrOutput() AntivirusProfileImapPtrOutput {
	return i.ToAntivirusProfileImapPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileImapPtrType) ToAntivirusProfileImapPtrOutputWithContext(ctx context.Context) AntivirusProfileImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileImapPtrOutput)
}

type AntivirusProfileImapOutput struct{ *pulumi.OutputState }

func (AntivirusProfileImapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileImap)(nil)).Elem()
}

func (o AntivirusProfileImapOutput) ToAntivirusProfileImapOutput() AntivirusProfileImapOutput {
	return o
}

func (o AntivirusProfileImapOutput) ToAntivirusProfileImapOutputWithContext(ctx context.Context) AntivirusProfileImapOutput {
	return o
}

func (o AntivirusProfileImapOutput) ToAntivirusProfileImapPtrOutput() AntivirusProfileImapPtrOutput {
	return o.ToAntivirusProfileImapPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileImapOutput) ToAntivirusProfileImapPtrOutputWithContext(ctx context.Context) AntivirusProfileImapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileImap) *AntivirusProfileImap {
		return &v
	}).(AntivirusProfileImapPtrOutput)
}

// Select the archive types to block.
func (o AntivirusProfileImapOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileImapOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileImapOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o AntivirusProfileImapOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.ContentDisarm }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileImapOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o AntivirusProfileImapOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.Executables }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileImapOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileImapOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileImapOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileImapOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable POP3 AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileImapOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileImapOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileImapOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileImap) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type AntivirusProfileImapPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileImapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileImap)(nil)).Elem()
}

func (o AntivirusProfileImapPtrOutput) ToAntivirusProfileImapPtrOutput() AntivirusProfileImapPtrOutput {
	return o
}

func (o AntivirusProfileImapPtrOutput) ToAntivirusProfileImapPtrOutputWithContext(ctx context.Context) AntivirusProfileImapPtrOutput {
	return o
}

func (o AntivirusProfileImapPtrOutput) Elem() AntivirusProfileImapOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) AntivirusProfileImap {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileImap
		return ret
	}).(AntivirusProfileImapOutput)
}

// Select the archive types to block.
func (o AntivirusProfileImapPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileImapPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileImapPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o AntivirusProfileImapPtrOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.ContentDisarm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileImapPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o AntivirusProfileImapPtrOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Executables
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileImapPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileImapPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileImapPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileImapPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable POP3 AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileImapPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileImapPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileImapPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileMapi struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables *string `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable MAPI AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// AntivirusProfileMapiInput is an input type that accepts AntivirusProfileMapiArgs and AntivirusProfileMapiOutput values.
// You can construct a concrete instance of `AntivirusProfileMapiInput` via:
//
//	AntivirusProfileMapiArgs{...}
type AntivirusProfileMapiInput interface {
	pulumi.Input

	ToAntivirusProfileMapiOutput() AntivirusProfileMapiOutput
	ToAntivirusProfileMapiOutputWithContext(context.Context) AntivirusProfileMapiOutput
}

type AntivirusProfileMapiArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables pulumi.StringPtrInput `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable MAPI AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (AntivirusProfileMapiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileMapi)(nil)).Elem()
}

func (i AntivirusProfileMapiArgs) ToAntivirusProfileMapiOutput() AntivirusProfileMapiOutput {
	return i.ToAntivirusProfileMapiOutputWithContext(context.Background())
}

func (i AntivirusProfileMapiArgs) ToAntivirusProfileMapiOutputWithContext(ctx context.Context) AntivirusProfileMapiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileMapiOutput)
}

func (i AntivirusProfileMapiArgs) ToAntivirusProfileMapiPtrOutput() AntivirusProfileMapiPtrOutput {
	return i.ToAntivirusProfileMapiPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileMapiArgs) ToAntivirusProfileMapiPtrOutputWithContext(ctx context.Context) AntivirusProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileMapiOutput).ToAntivirusProfileMapiPtrOutputWithContext(ctx)
}

// AntivirusProfileMapiPtrInput is an input type that accepts AntivirusProfileMapiArgs, AntivirusProfileMapiPtr and AntivirusProfileMapiPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileMapiPtrInput` via:
//
//	        AntivirusProfileMapiArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileMapiPtrInput interface {
	pulumi.Input

	ToAntivirusProfileMapiPtrOutput() AntivirusProfileMapiPtrOutput
	ToAntivirusProfileMapiPtrOutputWithContext(context.Context) AntivirusProfileMapiPtrOutput
}

type antivirusProfileMapiPtrType AntivirusProfileMapiArgs

func AntivirusProfileMapiPtr(v *AntivirusProfileMapiArgs) AntivirusProfileMapiPtrInput {
	return (*antivirusProfileMapiPtrType)(v)
}

func (*antivirusProfileMapiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileMapi)(nil)).Elem()
}

func (i *antivirusProfileMapiPtrType) ToAntivirusProfileMapiPtrOutput() AntivirusProfileMapiPtrOutput {
	return i.ToAntivirusProfileMapiPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileMapiPtrType) ToAntivirusProfileMapiPtrOutputWithContext(ctx context.Context) AntivirusProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileMapiPtrOutput)
}

type AntivirusProfileMapiOutput struct{ *pulumi.OutputState }

func (AntivirusProfileMapiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileMapi)(nil)).Elem()
}

func (o AntivirusProfileMapiOutput) ToAntivirusProfileMapiOutput() AntivirusProfileMapiOutput {
	return o
}

func (o AntivirusProfileMapiOutput) ToAntivirusProfileMapiOutputWithContext(ctx context.Context) AntivirusProfileMapiOutput {
	return o
}

func (o AntivirusProfileMapiOutput) ToAntivirusProfileMapiPtrOutput() AntivirusProfileMapiPtrOutput {
	return o.ToAntivirusProfileMapiPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileMapiOutput) ToAntivirusProfileMapiPtrOutputWithContext(ctx context.Context) AntivirusProfileMapiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileMapi) *AntivirusProfileMapi {
		return &v
	}).(AntivirusProfileMapiPtrOutput)
}

// Select the archive types to block.
func (o AntivirusProfileMapiOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileMapiOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileMapiOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileMapiOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o AntivirusProfileMapiOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.Executables }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileMapiOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileMapiOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileMapiOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileMapiOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable MAPI AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileMapiOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileMapiOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileMapiOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileMapi) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type AntivirusProfileMapiPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileMapiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileMapi)(nil)).Elem()
}

func (o AntivirusProfileMapiPtrOutput) ToAntivirusProfileMapiPtrOutput() AntivirusProfileMapiPtrOutput {
	return o
}

func (o AntivirusProfileMapiPtrOutput) ToAntivirusProfileMapiPtrOutputWithContext(ctx context.Context) AntivirusProfileMapiPtrOutput {
	return o
}

func (o AntivirusProfileMapiPtrOutput) Elem() AntivirusProfileMapiOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) AntivirusProfileMapi {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileMapi
		return ret
	}).(AntivirusProfileMapiOutput)
}

// Select the archive types to block.
func (o AntivirusProfileMapiPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileMapiPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileMapiPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileMapiPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o AntivirusProfileMapiPtrOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Executables
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileMapiPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileMapiPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileMapiPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileMapiPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable MAPI AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileMapiPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileMapiPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileMapiPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileNacQuar struct {
	// Duration of quarantine.
	Expiry *string `pulumi:"expiry"`
	// Enable/Disable quarantining infected hosts to the banned user list. Valid values: `none`, `quar-src-ip`.
	Infected *string `pulumi:"infected"`
	// Enable/disable AntiVirus quarantine logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
}

// AntivirusProfileNacQuarInput is an input type that accepts AntivirusProfileNacQuarArgs and AntivirusProfileNacQuarOutput values.
// You can construct a concrete instance of `AntivirusProfileNacQuarInput` via:
//
//	AntivirusProfileNacQuarArgs{...}
type AntivirusProfileNacQuarInput interface {
	pulumi.Input

	ToAntivirusProfileNacQuarOutput() AntivirusProfileNacQuarOutput
	ToAntivirusProfileNacQuarOutputWithContext(context.Context) AntivirusProfileNacQuarOutput
}

type AntivirusProfileNacQuarArgs struct {
	// Duration of quarantine.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// Enable/Disable quarantining infected hosts to the banned user list. Valid values: `none`, `quar-src-ip`.
	Infected pulumi.StringPtrInput `pulumi:"infected"`
	// Enable/disable AntiVirus quarantine logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (AntivirusProfileNacQuarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileNacQuar)(nil)).Elem()
}

func (i AntivirusProfileNacQuarArgs) ToAntivirusProfileNacQuarOutput() AntivirusProfileNacQuarOutput {
	return i.ToAntivirusProfileNacQuarOutputWithContext(context.Background())
}

func (i AntivirusProfileNacQuarArgs) ToAntivirusProfileNacQuarOutputWithContext(ctx context.Context) AntivirusProfileNacQuarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileNacQuarOutput)
}

func (i AntivirusProfileNacQuarArgs) ToAntivirusProfileNacQuarPtrOutput() AntivirusProfileNacQuarPtrOutput {
	return i.ToAntivirusProfileNacQuarPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileNacQuarArgs) ToAntivirusProfileNacQuarPtrOutputWithContext(ctx context.Context) AntivirusProfileNacQuarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileNacQuarOutput).ToAntivirusProfileNacQuarPtrOutputWithContext(ctx)
}

// AntivirusProfileNacQuarPtrInput is an input type that accepts AntivirusProfileNacQuarArgs, AntivirusProfileNacQuarPtr and AntivirusProfileNacQuarPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileNacQuarPtrInput` via:
//
//	        AntivirusProfileNacQuarArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileNacQuarPtrInput interface {
	pulumi.Input

	ToAntivirusProfileNacQuarPtrOutput() AntivirusProfileNacQuarPtrOutput
	ToAntivirusProfileNacQuarPtrOutputWithContext(context.Context) AntivirusProfileNacQuarPtrOutput
}

type antivirusProfileNacQuarPtrType AntivirusProfileNacQuarArgs

func AntivirusProfileNacQuarPtr(v *AntivirusProfileNacQuarArgs) AntivirusProfileNacQuarPtrInput {
	return (*antivirusProfileNacQuarPtrType)(v)
}

func (*antivirusProfileNacQuarPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileNacQuar)(nil)).Elem()
}

func (i *antivirusProfileNacQuarPtrType) ToAntivirusProfileNacQuarPtrOutput() AntivirusProfileNacQuarPtrOutput {
	return i.ToAntivirusProfileNacQuarPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileNacQuarPtrType) ToAntivirusProfileNacQuarPtrOutputWithContext(ctx context.Context) AntivirusProfileNacQuarPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileNacQuarPtrOutput)
}

type AntivirusProfileNacQuarOutput struct{ *pulumi.OutputState }

func (AntivirusProfileNacQuarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileNacQuar)(nil)).Elem()
}

func (o AntivirusProfileNacQuarOutput) ToAntivirusProfileNacQuarOutput() AntivirusProfileNacQuarOutput {
	return o
}

func (o AntivirusProfileNacQuarOutput) ToAntivirusProfileNacQuarOutputWithContext(ctx context.Context) AntivirusProfileNacQuarOutput {
	return o
}

func (o AntivirusProfileNacQuarOutput) ToAntivirusProfileNacQuarPtrOutput() AntivirusProfileNacQuarPtrOutput {
	return o.ToAntivirusProfileNacQuarPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileNacQuarOutput) ToAntivirusProfileNacQuarPtrOutputWithContext(ctx context.Context) AntivirusProfileNacQuarPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileNacQuar) *AntivirusProfileNacQuar {
		return &v
	}).(AntivirusProfileNacQuarPtrOutput)
}

// Duration of quarantine.
func (o AntivirusProfileNacQuarOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNacQuar) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// Enable/Disable quarantining infected hosts to the banned user list. Valid values: `none`, `quar-src-ip`.
func (o AntivirusProfileNacQuarOutput) Infected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNacQuar) *string { return v.Infected }).(pulumi.StringPtrOutput)
}

// Enable/disable AntiVirus quarantine logging. Valid values: `enable`, `disable`.
func (o AntivirusProfileNacQuarOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNacQuar) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type AntivirusProfileNacQuarPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileNacQuarPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileNacQuar)(nil)).Elem()
}

func (o AntivirusProfileNacQuarPtrOutput) ToAntivirusProfileNacQuarPtrOutput() AntivirusProfileNacQuarPtrOutput {
	return o
}

func (o AntivirusProfileNacQuarPtrOutput) ToAntivirusProfileNacQuarPtrOutputWithContext(ctx context.Context) AntivirusProfileNacQuarPtrOutput {
	return o
}

func (o AntivirusProfileNacQuarPtrOutput) Elem() AntivirusProfileNacQuarOutput {
	return o.ApplyT(func(v *AntivirusProfileNacQuar) AntivirusProfileNacQuar {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileNacQuar
		return ret
	}).(AntivirusProfileNacQuarOutput)
}

// Duration of quarantine.
func (o AntivirusProfileNacQuarPtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNacQuar) *string {
		if v == nil {
			return nil
		}
		return v.Expiry
	}).(pulumi.StringPtrOutput)
}

// Enable/Disable quarantining infected hosts to the banned user list. Valid values: `none`, `quar-src-ip`.
func (o AntivirusProfileNacQuarPtrOutput) Infected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNacQuar) *string {
		if v == nil {
			return nil
		}
		return v.Infected
	}).(pulumi.StringPtrOutput)
}

// Enable/disable AntiVirus quarantine logging. Valid values: `enable`, `disable`.
func (o AntivirusProfileNacQuarPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNacQuar) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileNntp struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable NNTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// AntivirusProfileNntpInput is an input type that accepts AntivirusProfileNntpArgs and AntivirusProfileNntpOutput values.
// You can construct a concrete instance of `AntivirusProfileNntpInput` via:
//
//	AntivirusProfileNntpArgs{...}
type AntivirusProfileNntpInput interface {
	pulumi.Input

	ToAntivirusProfileNntpOutput() AntivirusProfileNntpOutput
	ToAntivirusProfileNntpOutputWithContext(context.Context) AntivirusProfileNntpOutput
}

type AntivirusProfileNntpArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable NNTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (AntivirusProfileNntpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileNntp)(nil)).Elem()
}

func (i AntivirusProfileNntpArgs) ToAntivirusProfileNntpOutput() AntivirusProfileNntpOutput {
	return i.ToAntivirusProfileNntpOutputWithContext(context.Background())
}

func (i AntivirusProfileNntpArgs) ToAntivirusProfileNntpOutputWithContext(ctx context.Context) AntivirusProfileNntpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileNntpOutput)
}

func (i AntivirusProfileNntpArgs) ToAntivirusProfileNntpPtrOutput() AntivirusProfileNntpPtrOutput {
	return i.ToAntivirusProfileNntpPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileNntpArgs) ToAntivirusProfileNntpPtrOutputWithContext(ctx context.Context) AntivirusProfileNntpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileNntpOutput).ToAntivirusProfileNntpPtrOutputWithContext(ctx)
}

// AntivirusProfileNntpPtrInput is an input type that accepts AntivirusProfileNntpArgs, AntivirusProfileNntpPtr and AntivirusProfileNntpPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileNntpPtrInput` via:
//
//	        AntivirusProfileNntpArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileNntpPtrInput interface {
	pulumi.Input

	ToAntivirusProfileNntpPtrOutput() AntivirusProfileNntpPtrOutput
	ToAntivirusProfileNntpPtrOutputWithContext(context.Context) AntivirusProfileNntpPtrOutput
}

type antivirusProfileNntpPtrType AntivirusProfileNntpArgs

func AntivirusProfileNntpPtr(v *AntivirusProfileNntpArgs) AntivirusProfileNntpPtrInput {
	return (*antivirusProfileNntpPtrType)(v)
}

func (*antivirusProfileNntpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileNntp)(nil)).Elem()
}

func (i *antivirusProfileNntpPtrType) ToAntivirusProfileNntpPtrOutput() AntivirusProfileNntpPtrOutput {
	return i.ToAntivirusProfileNntpPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileNntpPtrType) ToAntivirusProfileNntpPtrOutputWithContext(ctx context.Context) AntivirusProfileNntpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileNntpPtrOutput)
}

type AntivirusProfileNntpOutput struct{ *pulumi.OutputState }

func (AntivirusProfileNntpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileNntp)(nil)).Elem()
}

func (o AntivirusProfileNntpOutput) ToAntivirusProfileNntpOutput() AntivirusProfileNntpOutput {
	return o
}

func (o AntivirusProfileNntpOutput) ToAntivirusProfileNntpOutputWithContext(ctx context.Context) AntivirusProfileNntpOutput {
	return o
}

func (o AntivirusProfileNntpOutput) ToAntivirusProfileNntpPtrOutput() AntivirusProfileNntpPtrOutput {
	return o.ToAntivirusProfileNntpPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileNntpOutput) ToAntivirusProfileNntpPtrOutputWithContext(ctx context.Context) AntivirusProfileNntpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileNntp) *AntivirusProfileNntp {
		return &v
	}).(AntivirusProfileNntpPtrOutput)
}

// Select the archive types to block.
func (o AntivirusProfileNntpOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileNntpOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileNntpOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileNntpOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileNntpOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileNntpOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileNntpOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileNntpOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable NNTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileNntpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileNntpOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileNntpOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileNntp) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type AntivirusProfileNntpPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileNntpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileNntp)(nil)).Elem()
}

func (o AntivirusProfileNntpPtrOutput) ToAntivirusProfileNntpPtrOutput() AntivirusProfileNntpPtrOutput {
	return o
}

func (o AntivirusProfileNntpPtrOutput) ToAntivirusProfileNntpPtrOutputWithContext(ctx context.Context) AntivirusProfileNntpPtrOutput {
	return o
}

func (o AntivirusProfileNntpPtrOutput) Elem() AntivirusProfileNntpOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) AntivirusProfileNntp {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileNntp
		return ret
	}).(AntivirusProfileNntpOutput)
}

// Select the archive types to block.
func (o AntivirusProfileNntpPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileNntpPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileNntpPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileNntpPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileNntpPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileNntpPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileNntpPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileNntpPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable NNTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileNntpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileNntpPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileNntpPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileNntp) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileOutbreakPrevention struct {
	// Enable/disable external malware blocklist. Valid values: `disable`, `enable`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable FortiGuard Virus outbreak prevention service. Valid values: `disable`, `enable`.
	FtgdService *string `pulumi:"ftgdService"`
}

// AntivirusProfileOutbreakPreventionInput is an input type that accepts AntivirusProfileOutbreakPreventionArgs and AntivirusProfileOutbreakPreventionOutput values.
// You can construct a concrete instance of `AntivirusProfileOutbreakPreventionInput` via:
//
//	AntivirusProfileOutbreakPreventionArgs{...}
type AntivirusProfileOutbreakPreventionInput interface {
	pulumi.Input

	ToAntivirusProfileOutbreakPreventionOutput() AntivirusProfileOutbreakPreventionOutput
	ToAntivirusProfileOutbreakPreventionOutputWithContext(context.Context) AntivirusProfileOutbreakPreventionOutput
}

type AntivirusProfileOutbreakPreventionArgs struct {
	// Enable/disable external malware blocklist. Valid values: `disable`, `enable`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable FortiGuard Virus outbreak prevention service. Valid values: `disable`, `enable`.
	FtgdService pulumi.StringPtrInput `pulumi:"ftgdService"`
}

func (AntivirusProfileOutbreakPreventionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileOutbreakPrevention)(nil)).Elem()
}

func (i AntivirusProfileOutbreakPreventionArgs) ToAntivirusProfileOutbreakPreventionOutput() AntivirusProfileOutbreakPreventionOutput {
	return i.ToAntivirusProfileOutbreakPreventionOutputWithContext(context.Background())
}

func (i AntivirusProfileOutbreakPreventionArgs) ToAntivirusProfileOutbreakPreventionOutputWithContext(ctx context.Context) AntivirusProfileOutbreakPreventionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileOutbreakPreventionOutput)
}

func (i AntivirusProfileOutbreakPreventionArgs) ToAntivirusProfileOutbreakPreventionPtrOutput() AntivirusProfileOutbreakPreventionPtrOutput {
	return i.ToAntivirusProfileOutbreakPreventionPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileOutbreakPreventionArgs) ToAntivirusProfileOutbreakPreventionPtrOutputWithContext(ctx context.Context) AntivirusProfileOutbreakPreventionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileOutbreakPreventionOutput).ToAntivirusProfileOutbreakPreventionPtrOutputWithContext(ctx)
}

// AntivirusProfileOutbreakPreventionPtrInput is an input type that accepts AntivirusProfileOutbreakPreventionArgs, AntivirusProfileOutbreakPreventionPtr and AntivirusProfileOutbreakPreventionPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileOutbreakPreventionPtrInput` via:
//
//	        AntivirusProfileOutbreakPreventionArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileOutbreakPreventionPtrInput interface {
	pulumi.Input

	ToAntivirusProfileOutbreakPreventionPtrOutput() AntivirusProfileOutbreakPreventionPtrOutput
	ToAntivirusProfileOutbreakPreventionPtrOutputWithContext(context.Context) AntivirusProfileOutbreakPreventionPtrOutput
}

type antivirusProfileOutbreakPreventionPtrType AntivirusProfileOutbreakPreventionArgs

func AntivirusProfileOutbreakPreventionPtr(v *AntivirusProfileOutbreakPreventionArgs) AntivirusProfileOutbreakPreventionPtrInput {
	return (*antivirusProfileOutbreakPreventionPtrType)(v)
}

func (*antivirusProfileOutbreakPreventionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileOutbreakPrevention)(nil)).Elem()
}

func (i *antivirusProfileOutbreakPreventionPtrType) ToAntivirusProfileOutbreakPreventionPtrOutput() AntivirusProfileOutbreakPreventionPtrOutput {
	return i.ToAntivirusProfileOutbreakPreventionPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileOutbreakPreventionPtrType) ToAntivirusProfileOutbreakPreventionPtrOutputWithContext(ctx context.Context) AntivirusProfileOutbreakPreventionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileOutbreakPreventionPtrOutput)
}

type AntivirusProfileOutbreakPreventionOutput struct{ *pulumi.OutputState }

func (AntivirusProfileOutbreakPreventionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileOutbreakPrevention)(nil)).Elem()
}

func (o AntivirusProfileOutbreakPreventionOutput) ToAntivirusProfileOutbreakPreventionOutput() AntivirusProfileOutbreakPreventionOutput {
	return o
}

func (o AntivirusProfileOutbreakPreventionOutput) ToAntivirusProfileOutbreakPreventionOutputWithContext(ctx context.Context) AntivirusProfileOutbreakPreventionOutput {
	return o
}

func (o AntivirusProfileOutbreakPreventionOutput) ToAntivirusProfileOutbreakPreventionPtrOutput() AntivirusProfileOutbreakPreventionPtrOutput {
	return o.ToAntivirusProfileOutbreakPreventionPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileOutbreakPreventionOutput) ToAntivirusProfileOutbreakPreventionPtrOutputWithContext(ctx context.Context) AntivirusProfileOutbreakPreventionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileOutbreakPrevention) *AntivirusProfileOutbreakPrevention {
		return &v
	}).(AntivirusProfileOutbreakPreventionPtrOutput)
}

// Enable/disable external malware blocklist. Valid values: `disable`, `enable`.
func (o AntivirusProfileOutbreakPreventionOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileOutbreakPrevention) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiGuard Virus outbreak prevention service. Valid values: `disable`, `enable`.
func (o AntivirusProfileOutbreakPreventionOutput) FtgdService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileOutbreakPrevention) *string { return v.FtgdService }).(pulumi.StringPtrOutput)
}

type AntivirusProfileOutbreakPreventionPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileOutbreakPreventionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileOutbreakPrevention)(nil)).Elem()
}

func (o AntivirusProfileOutbreakPreventionPtrOutput) ToAntivirusProfileOutbreakPreventionPtrOutput() AntivirusProfileOutbreakPreventionPtrOutput {
	return o
}

func (o AntivirusProfileOutbreakPreventionPtrOutput) ToAntivirusProfileOutbreakPreventionPtrOutputWithContext(ctx context.Context) AntivirusProfileOutbreakPreventionPtrOutput {
	return o
}

func (o AntivirusProfileOutbreakPreventionPtrOutput) Elem() AntivirusProfileOutbreakPreventionOutput {
	return o.ApplyT(func(v *AntivirusProfileOutbreakPrevention) AntivirusProfileOutbreakPrevention {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileOutbreakPrevention
		return ret
	}).(AntivirusProfileOutbreakPreventionOutput)
}

// Enable/disable external malware blocklist. Valid values: `disable`, `enable`.
func (o AntivirusProfileOutbreakPreventionPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileOutbreakPrevention) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiGuard Virus outbreak prevention service. Valid values: `disable`, `enable`.
func (o AntivirusProfileOutbreakPreventionPtrOutput) FtgdService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileOutbreakPrevention) *string {
		if v == nil {
			return nil
		}
		return v.FtgdService
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfilePop3 struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
	ContentDisarm *string `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables *string `pulumi:"executables"`
	// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// AntivirusProfilePop3Input is an input type that accepts AntivirusProfilePop3Args and AntivirusProfilePop3Output values.
// You can construct a concrete instance of `AntivirusProfilePop3Input` via:
//
//	AntivirusProfilePop3Args{...}
type AntivirusProfilePop3Input interface {
	pulumi.Input

	ToAntivirusProfilePop3Output() AntivirusProfilePop3Output
	ToAntivirusProfilePop3OutputWithContext(context.Context) AntivirusProfilePop3Output
}

type AntivirusProfilePop3Args struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
	ContentDisarm pulumi.StringPtrInput `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables pulumi.StringPtrInput `pulumi:"executables"`
	// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (AntivirusProfilePop3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfilePop3)(nil)).Elem()
}

func (i AntivirusProfilePop3Args) ToAntivirusProfilePop3Output() AntivirusProfilePop3Output {
	return i.ToAntivirusProfilePop3OutputWithContext(context.Background())
}

func (i AntivirusProfilePop3Args) ToAntivirusProfilePop3OutputWithContext(ctx context.Context) AntivirusProfilePop3Output {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfilePop3Output)
}

func (i AntivirusProfilePop3Args) ToAntivirusProfilePop3PtrOutput() AntivirusProfilePop3PtrOutput {
	return i.ToAntivirusProfilePop3PtrOutputWithContext(context.Background())
}

func (i AntivirusProfilePop3Args) ToAntivirusProfilePop3PtrOutputWithContext(ctx context.Context) AntivirusProfilePop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfilePop3Output).ToAntivirusProfilePop3PtrOutputWithContext(ctx)
}

// AntivirusProfilePop3PtrInput is an input type that accepts AntivirusProfilePop3Args, AntivirusProfilePop3Ptr and AntivirusProfilePop3PtrOutput values.
// You can construct a concrete instance of `AntivirusProfilePop3PtrInput` via:
//
//	        AntivirusProfilePop3Args{...}
//
//	or:
//
//	        nil
type AntivirusProfilePop3PtrInput interface {
	pulumi.Input

	ToAntivirusProfilePop3PtrOutput() AntivirusProfilePop3PtrOutput
	ToAntivirusProfilePop3PtrOutputWithContext(context.Context) AntivirusProfilePop3PtrOutput
}

type antivirusProfilePop3PtrType AntivirusProfilePop3Args

func AntivirusProfilePop3Ptr(v *AntivirusProfilePop3Args) AntivirusProfilePop3PtrInput {
	return (*antivirusProfilePop3PtrType)(v)
}

func (*antivirusProfilePop3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfilePop3)(nil)).Elem()
}

func (i *antivirusProfilePop3PtrType) ToAntivirusProfilePop3PtrOutput() AntivirusProfilePop3PtrOutput {
	return i.ToAntivirusProfilePop3PtrOutputWithContext(context.Background())
}

func (i *antivirusProfilePop3PtrType) ToAntivirusProfilePop3PtrOutputWithContext(ctx context.Context) AntivirusProfilePop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfilePop3PtrOutput)
}

type AntivirusProfilePop3Output struct{ *pulumi.OutputState }

func (AntivirusProfilePop3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfilePop3)(nil)).Elem()
}

func (o AntivirusProfilePop3Output) ToAntivirusProfilePop3Output() AntivirusProfilePop3Output {
	return o
}

func (o AntivirusProfilePop3Output) ToAntivirusProfilePop3OutputWithContext(ctx context.Context) AntivirusProfilePop3Output {
	return o
}

func (o AntivirusProfilePop3Output) ToAntivirusProfilePop3PtrOutput() AntivirusProfilePop3PtrOutput {
	return o.ToAntivirusProfilePop3PtrOutputWithContext(context.Background())
}

func (o AntivirusProfilePop3Output) ToAntivirusProfilePop3PtrOutputWithContext(ctx context.Context) AntivirusProfilePop3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfilePop3) *AntivirusProfilePop3 {
		return &v
	}).(AntivirusProfilePop3PtrOutput)
}

// Select the archive types to block.
func (o AntivirusProfilePop3Output) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfilePop3Output) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfilePop3Output) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
func (o AntivirusProfilePop3Output) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.ContentDisarm }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfilePop3Output) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o AntivirusProfilePop3Output) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.Executables }).(pulumi.StringPtrOutput)
}

// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
func (o AntivirusProfilePop3Output) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfilePop3Output) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfilePop3Output) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfilePop3Output) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfilePop3Output) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
func (o AntivirusProfilePop3Output) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfilePop3Output) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfilePop3) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type AntivirusProfilePop3PtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfilePop3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfilePop3)(nil)).Elem()
}

func (o AntivirusProfilePop3PtrOutput) ToAntivirusProfilePop3PtrOutput() AntivirusProfilePop3PtrOutput {
	return o
}

func (o AntivirusProfilePop3PtrOutput) ToAntivirusProfilePop3PtrOutputWithContext(ctx context.Context) AntivirusProfilePop3PtrOutput {
	return o
}

func (o AntivirusProfilePop3PtrOutput) Elem() AntivirusProfilePop3Output {
	return o.ApplyT(func(v *AntivirusProfilePop3) AntivirusProfilePop3 {
		if v != nil {
			return *v
		}
		var ret AntivirusProfilePop3
		return ret
	}).(AntivirusProfilePop3Output)
}

// Select the archive types to block.
func (o AntivirusProfilePop3PtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfilePop3PtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfilePop3PtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// AV Content Disarm and Reconstruction settings. The structure of `contentDisarm` block is documented below.
func (o AntivirusProfilePop3PtrOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.ContentDisarm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfilePop3PtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o AntivirusProfilePop3PtrOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Executables
	}).(pulumi.StringPtrOutput)
}

// One or more external malware block lists. The structure of `externalBlocklist` block is documented below.
func (o AntivirusProfilePop3PtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfilePop3PtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfilePop3PtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfilePop3PtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfilePop3PtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Configure Virus Outbreak Prevention settings. The structure of `outbreakPrevention` block is documented below.
func (o AntivirusProfilePop3PtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfilePop3PtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileSmb struct {
	// Select the archive types to block. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable/disable SMB AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service. Valid values: `disabled`, `files`, `full-archive`.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
}

// AntivirusProfileSmbInput is an input type that accepts AntivirusProfileSmbArgs and AntivirusProfileSmbOutput values.
// You can construct a concrete instance of `AntivirusProfileSmbInput` via:
//
//	AntivirusProfileSmbArgs{...}
type AntivirusProfileSmbInput interface {
	pulumi.Input

	ToAntivirusProfileSmbOutput() AntivirusProfileSmbOutput
	ToAntivirusProfileSmbOutputWithContext(context.Context) AntivirusProfileSmbOutput
}

type AntivirusProfileSmbArgs struct {
	// Select the archive types to block. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable/disable SMB AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service. Valid values: `disabled`, `files`, `full-archive`.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
}

func (AntivirusProfileSmbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileSmb)(nil)).Elem()
}

func (i AntivirusProfileSmbArgs) ToAntivirusProfileSmbOutput() AntivirusProfileSmbOutput {
	return i.ToAntivirusProfileSmbOutputWithContext(context.Background())
}

func (i AntivirusProfileSmbArgs) ToAntivirusProfileSmbOutputWithContext(ctx context.Context) AntivirusProfileSmbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileSmbOutput)
}

func (i AntivirusProfileSmbArgs) ToAntivirusProfileSmbPtrOutput() AntivirusProfileSmbPtrOutput {
	return i.ToAntivirusProfileSmbPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileSmbArgs) ToAntivirusProfileSmbPtrOutputWithContext(ctx context.Context) AntivirusProfileSmbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileSmbOutput).ToAntivirusProfileSmbPtrOutputWithContext(ctx)
}

// AntivirusProfileSmbPtrInput is an input type that accepts AntivirusProfileSmbArgs, AntivirusProfileSmbPtr and AntivirusProfileSmbPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileSmbPtrInput` via:
//
//	        AntivirusProfileSmbArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileSmbPtrInput interface {
	pulumi.Input

	ToAntivirusProfileSmbPtrOutput() AntivirusProfileSmbPtrOutput
	ToAntivirusProfileSmbPtrOutputWithContext(context.Context) AntivirusProfileSmbPtrOutput
}

type antivirusProfileSmbPtrType AntivirusProfileSmbArgs

func AntivirusProfileSmbPtr(v *AntivirusProfileSmbArgs) AntivirusProfileSmbPtrInput {
	return (*antivirusProfileSmbPtrType)(v)
}

func (*antivirusProfileSmbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileSmb)(nil)).Elem()
}

func (i *antivirusProfileSmbPtrType) ToAntivirusProfileSmbPtrOutput() AntivirusProfileSmbPtrOutput {
	return i.ToAntivirusProfileSmbPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileSmbPtrType) ToAntivirusProfileSmbPtrOutputWithContext(ctx context.Context) AntivirusProfileSmbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileSmbPtrOutput)
}

type AntivirusProfileSmbOutput struct{ *pulumi.OutputState }

func (AntivirusProfileSmbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileSmb)(nil)).Elem()
}

func (o AntivirusProfileSmbOutput) ToAntivirusProfileSmbOutput() AntivirusProfileSmbOutput {
	return o
}

func (o AntivirusProfileSmbOutput) ToAntivirusProfileSmbOutputWithContext(ctx context.Context) AntivirusProfileSmbOutput {
	return o
}

func (o AntivirusProfileSmbOutput) ToAntivirusProfileSmbPtrOutput() AntivirusProfileSmbPtrOutput {
	return o.ToAntivirusProfileSmbPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileSmbOutput) ToAntivirusProfileSmbPtrOutputWithContext(ctx context.Context) AntivirusProfileSmbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileSmb) *AntivirusProfileSmb {
		return &v
	}).(AntivirusProfileSmbPtrOutput)
}

// Select the archive types to block. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
func (o AntivirusProfileSmbOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmb) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
func (o AntivirusProfileSmbOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmb) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileSmbOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmb) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable/disable SMB AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileSmbOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmb) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service. Valid values: `disabled`, `files`, `full-archive`.
func (o AntivirusProfileSmbOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmb) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

type AntivirusProfileSmbPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileSmbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileSmb)(nil)).Elem()
}

func (o AntivirusProfileSmbPtrOutput) ToAntivirusProfileSmbPtrOutput() AntivirusProfileSmbPtrOutput {
	return o
}

func (o AntivirusProfileSmbPtrOutput) ToAntivirusProfileSmbPtrOutputWithContext(ctx context.Context) AntivirusProfileSmbPtrOutput {
	return o
}

func (o AntivirusProfileSmbPtrOutput) Elem() AntivirusProfileSmbOutput {
	return o.ApplyT(func(v *AntivirusProfileSmb) AntivirusProfileSmb {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileSmb
		return ret
	}).(AntivirusProfileSmbOutput)
}

// Select the archive types to block. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
func (o AntivirusProfileSmbPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmb) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log. Valid values: `encrypted`, `corrupted`, `partiallycorrupted`, `multipart`, `nested`, `mailbomb`, `fileslimit`, `timeout`, `unhandled`.
func (o AntivirusProfileSmbPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmb) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileSmbPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmb) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SMB AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileSmbPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmb) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service. Valid values: `disabled`, `files`, `full-archive`.
func (o AntivirusProfileSmbPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmb) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileSmtp struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm *string `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables *string `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable SMTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// AntivirusProfileSmtpInput is an input type that accepts AntivirusProfileSmtpArgs and AntivirusProfileSmtpOutput values.
// You can construct a concrete instance of `AntivirusProfileSmtpInput` via:
//
//	AntivirusProfileSmtpArgs{...}
type AntivirusProfileSmtpInput interface {
	pulumi.Input

	ToAntivirusProfileSmtpOutput() AntivirusProfileSmtpOutput
	ToAntivirusProfileSmtpOutputWithContext(context.Context) AntivirusProfileSmtpOutput
}

type AntivirusProfileSmtpArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
	ContentDisarm pulumi.StringPtrInput `pulumi:"contentDisarm"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
	Executables pulumi.StringPtrInput `pulumi:"executables"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable SMTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (AntivirusProfileSmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileSmtp)(nil)).Elem()
}

func (i AntivirusProfileSmtpArgs) ToAntivirusProfileSmtpOutput() AntivirusProfileSmtpOutput {
	return i.ToAntivirusProfileSmtpOutputWithContext(context.Background())
}

func (i AntivirusProfileSmtpArgs) ToAntivirusProfileSmtpOutputWithContext(ctx context.Context) AntivirusProfileSmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileSmtpOutput)
}

func (i AntivirusProfileSmtpArgs) ToAntivirusProfileSmtpPtrOutput() AntivirusProfileSmtpPtrOutput {
	return i.ToAntivirusProfileSmtpPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileSmtpArgs) ToAntivirusProfileSmtpPtrOutputWithContext(ctx context.Context) AntivirusProfileSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileSmtpOutput).ToAntivirusProfileSmtpPtrOutputWithContext(ctx)
}

// AntivirusProfileSmtpPtrInput is an input type that accepts AntivirusProfileSmtpArgs, AntivirusProfileSmtpPtr and AntivirusProfileSmtpPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileSmtpPtrInput` via:
//
//	        AntivirusProfileSmtpArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileSmtpPtrInput interface {
	pulumi.Input

	ToAntivirusProfileSmtpPtrOutput() AntivirusProfileSmtpPtrOutput
	ToAntivirusProfileSmtpPtrOutputWithContext(context.Context) AntivirusProfileSmtpPtrOutput
}

type antivirusProfileSmtpPtrType AntivirusProfileSmtpArgs

func AntivirusProfileSmtpPtr(v *AntivirusProfileSmtpArgs) AntivirusProfileSmtpPtrInput {
	return (*antivirusProfileSmtpPtrType)(v)
}

func (*antivirusProfileSmtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileSmtp)(nil)).Elem()
}

func (i *antivirusProfileSmtpPtrType) ToAntivirusProfileSmtpPtrOutput() AntivirusProfileSmtpPtrOutput {
	return i.ToAntivirusProfileSmtpPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileSmtpPtrType) ToAntivirusProfileSmtpPtrOutputWithContext(ctx context.Context) AntivirusProfileSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileSmtpPtrOutput)
}

type AntivirusProfileSmtpOutput struct{ *pulumi.OutputState }

func (AntivirusProfileSmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileSmtp)(nil)).Elem()
}

func (o AntivirusProfileSmtpOutput) ToAntivirusProfileSmtpOutput() AntivirusProfileSmtpOutput {
	return o
}

func (o AntivirusProfileSmtpOutput) ToAntivirusProfileSmtpOutputWithContext(ctx context.Context) AntivirusProfileSmtpOutput {
	return o
}

func (o AntivirusProfileSmtpOutput) ToAntivirusProfileSmtpPtrOutput() AntivirusProfileSmtpPtrOutput {
	return o.ToAntivirusProfileSmtpPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileSmtpOutput) ToAntivirusProfileSmtpPtrOutputWithContext(ctx context.Context) AntivirusProfileSmtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileSmtp) *AntivirusProfileSmtp {
		return &v
	}).(AntivirusProfileSmtpPtrOutput)
}

// Select the archive types to block.
func (o AntivirusProfileSmtpOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileSmtpOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSmtpOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o AntivirusProfileSmtpOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.ContentDisarm }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileSmtpOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o AntivirusProfileSmtpOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.Executables }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSmtpOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSmtpOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSmtpOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSmtpOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileSmtpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileSmtpOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileSmtpOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSmtp) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type AntivirusProfileSmtpPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileSmtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileSmtp)(nil)).Elem()
}

func (o AntivirusProfileSmtpPtrOutput) ToAntivirusProfileSmtpPtrOutput() AntivirusProfileSmtpPtrOutput {
	return o
}

func (o AntivirusProfileSmtpPtrOutput) ToAntivirusProfileSmtpPtrOutputWithContext(ctx context.Context) AntivirusProfileSmtpPtrOutput {
	return o
}

func (o AntivirusProfileSmtpPtrOutput) Elem() AntivirusProfileSmtpOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) AntivirusProfileSmtp {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileSmtp
		return ret
	}).(AntivirusProfileSmtpOutput)
}

// Select the archive types to block.
func (o AntivirusProfileSmtpPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileSmtpPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSmtpPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable Content Disarm and Reconstruction for this protocol. Valid values: `disable`, `enable`.
func (o AntivirusProfileSmtpPtrOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ContentDisarm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileSmtpPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Treat Windows executable files as viruses for the purpose of blocking or monitoring. Valid values: `default`, `virus`.
func (o AntivirusProfileSmtpPtrOutput) Executables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Executables
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSmtpPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSmtpPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSmtpPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSmtpPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileSmtpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileSmtpPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileSmtpPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type AntivirusProfileSsh struct {
	// Select the archive types to block.
	ArchiveBlock *string `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog *string `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan *string `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator *string `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist *string `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai *string `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr *string `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Enable/disable SFTP and SCP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options *string `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention *string `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine *string `pulumi:"quarantine"`
}

// AntivirusProfileSshInput is an input type that accepts AntivirusProfileSshArgs and AntivirusProfileSshOutput values.
// You can construct a concrete instance of `AntivirusProfileSshInput` via:
//
//	AntivirusProfileSshArgs{...}
type AntivirusProfileSshInput interface {
	pulumi.Input

	ToAntivirusProfileSshOutput() AntivirusProfileSshOutput
	ToAntivirusProfileSshOutputWithContext(context.Context) AntivirusProfileSshOutput
}

type AntivirusProfileSshArgs struct {
	// Select the archive types to block.
	ArchiveBlock pulumi.StringPtrInput `pulumi:"archiveBlock"`
	// Select the archive types to log.
	ArchiveLog pulumi.StringPtrInput `pulumi:"archiveLog"`
	// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
	AvScan pulumi.StringPtrInput `pulumi:"avScan"`
	// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
	Emulator pulumi.StringPtrInput `pulumi:"emulator"`
	// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
	ExternalBlocklist pulumi.StringPtrInput `pulumi:"externalBlocklist"`
	// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Enable/disable SFTP and SCP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Enable Virus Outbreak Prevention service.
	OutbreakPrevention pulumi.StringPtrInput `pulumi:"outbreakPrevention"`
	// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
}

func (AntivirusProfileSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileSsh)(nil)).Elem()
}

func (i AntivirusProfileSshArgs) ToAntivirusProfileSshOutput() AntivirusProfileSshOutput {
	return i.ToAntivirusProfileSshOutputWithContext(context.Background())
}

func (i AntivirusProfileSshArgs) ToAntivirusProfileSshOutputWithContext(ctx context.Context) AntivirusProfileSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileSshOutput)
}

func (i AntivirusProfileSshArgs) ToAntivirusProfileSshPtrOutput() AntivirusProfileSshPtrOutput {
	return i.ToAntivirusProfileSshPtrOutputWithContext(context.Background())
}

func (i AntivirusProfileSshArgs) ToAntivirusProfileSshPtrOutputWithContext(ctx context.Context) AntivirusProfileSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileSshOutput).ToAntivirusProfileSshPtrOutputWithContext(ctx)
}

// AntivirusProfileSshPtrInput is an input type that accepts AntivirusProfileSshArgs, AntivirusProfileSshPtr and AntivirusProfileSshPtrOutput values.
// You can construct a concrete instance of `AntivirusProfileSshPtrInput` via:
//
//	        AntivirusProfileSshArgs{...}
//
//	or:
//
//	        nil
type AntivirusProfileSshPtrInput interface {
	pulumi.Input

	ToAntivirusProfileSshPtrOutput() AntivirusProfileSshPtrOutput
	ToAntivirusProfileSshPtrOutputWithContext(context.Context) AntivirusProfileSshPtrOutput
}

type antivirusProfileSshPtrType AntivirusProfileSshArgs

func AntivirusProfileSshPtr(v *AntivirusProfileSshArgs) AntivirusProfileSshPtrInput {
	return (*antivirusProfileSshPtrType)(v)
}

func (*antivirusProfileSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileSsh)(nil)).Elem()
}

func (i *antivirusProfileSshPtrType) ToAntivirusProfileSshPtrOutput() AntivirusProfileSshPtrOutput {
	return i.ToAntivirusProfileSshPtrOutputWithContext(context.Background())
}

func (i *antivirusProfileSshPtrType) ToAntivirusProfileSshPtrOutputWithContext(ctx context.Context) AntivirusProfileSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusProfileSshPtrOutput)
}

type AntivirusProfileSshOutput struct{ *pulumi.OutputState }

func (AntivirusProfileSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusProfileSsh)(nil)).Elem()
}

func (o AntivirusProfileSshOutput) ToAntivirusProfileSshOutput() AntivirusProfileSshOutput {
	return o
}

func (o AntivirusProfileSshOutput) ToAntivirusProfileSshOutputWithContext(ctx context.Context) AntivirusProfileSshOutput {
	return o
}

func (o AntivirusProfileSshOutput) ToAntivirusProfileSshPtrOutput() AntivirusProfileSshPtrOutput {
	return o.ToAntivirusProfileSshPtrOutputWithContext(context.Background())
}

func (o AntivirusProfileSshOutput) ToAntivirusProfileSshPtrOutputWithContext(ctx context.Context) AntivirusProfileSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AntivirusProfileSsh) *AntivirusProfileSsh {
		return &v
	}).(AntivirusProfileSshPtrOutput)
}

// Select the archive types to block.
func (o AntivirusProfileSshOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.ArchiveBlock }).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileSshOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.ArchiveLog }).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSshOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.AvScan }).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileSshOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.Emulator }).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSshOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.ExternalBlocklist }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSshOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSshOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSshOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Enable/disable SFTP and SCP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileSshOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileSshOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.OutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileSshOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AntivirusProfileSsh) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

type AntivirusProfileSshPtrOutput struct{ *pulumi.OutputState }

func (AntivirusProfileSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusProfileSsh)(nil)).Elem()
}

func (o AntivirusProfileSshPtrOutput) ToAntivirusProfileSshPtrOutput() AntivirusProfileSshPtrOutput {
	return o
}

func (o AntivirusProfileSshPtrOutput) ToAntivirusProfileSshPtrOutputWithContext(ctx context.Context) AntivirusProfileSshPtrOutput {
	return o
}

func (o AntivirusProfileSshPtrOutput) Elem() AntivirusProfileSshOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) AntivirusProfileSsh {
		if v != nil {
			return *v
		}
		var ret AntivirusProfileSsh
		return ret
	}).(AntivirusProfileSshOutput)
}

// Select the archive types to block.
func (o AntivirusProfileSshPtrOutput) ArchiveBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBlock
	}).(pulumi.StringPtrOutput)
}

// Select the archive types to log.
func (o AntivirusProfileSshPtrOutput) ArchiveLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveLog
	}).(pulumi.StringPtrOutput)
}

// Enable AntiVirus scan service. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSshPtrOutput) AvScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.AvScan
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the virus emulator. Valid values: `enable`, `disable`.
func (o AntivirusProfileSshPtrOutput) Emulator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Emulator
	}).(pulumi.StringPtrOutput)
}

// Enable external-blocklist. Analyzes files including the content of archives. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSshPtrOutput) ExternalBlocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.ExternalBlocklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of files by FortiAI server. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSshPtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiNDR. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSshPtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Enable scanning of files by FortiSandbox. Valid values: `disable`, `block`, `monitor`.
func (o AntivirusProfileSshPtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SFTP and SCP AntiVirus scanning, monitoring, and quarantine. Valid values: `scan`, `avmonitor`, `quarantine`.
func (o AntivirusProfileSshPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Enable Virus Outbreak Prevention service.
func (o AntivirusProfileSshPtrOutput) OutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.OutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine for infected files. Valid values: `disable`, `enable`.
func (o AntivirusProfileSshPtrOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusProfileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Quarantine
	}).(pulumi.StringPtrOutput)
}

type ApplicationGroupApplication struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// ApplicationGroupApplicationInput is an input type that accepts ApplicationGroupApplicationArgs and ApplicationGroupApplicationOutput values.
// You can construct a concrete instance of `ApplicationGroupApplicationInput` via:
//
//	ApplicationGroupApplicationArgs{...}
type ApplicationGroupApplicationInput interface {
	pulumi.Input

	ToApplicationGroupApplicationOutput() ApplicationGroupApplicationOutput
	ToApplicationGroupApplicationOutputWithContext(context.Context) ApplicationGroupApplicationOutput
}

type ApplicationGroupApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ApplicationGroupApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGroupApplication)(nil)).Elem()
}

func (i ApplicationGroupApplicationArgs) ToApplicationGroupApplicationOutput() ApplicationGroupApplicationOutput {
	return i.ToApplicationGroupApplicationOutputWithContext(context.Background())
}

func (i ApplicationGroupApplicationArgs) ToApplicationGroupApplicationOutputWithContext(ctx context.Context) ApplicationGroupApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGroupApplicationOutput)
}

// ApplicationGroupApplicationArrayInput is an input type that accepts ApplicationGroupApplicationArray and ApplicationGroupApplicationArrayOutput values.
// You can construct a concrete instance of `ApplicationGroupApplicationArrayInput` via:
//
//	ApplicationGroupApplicationArray{ ApplicationGroupApplicationArgs{...} }
type ApplicationGroupApplicationArrayInput interface {
	pulumi.Input

	ToApplicationGroupApplicationArrayOutput() ApplicationGroupApplicationArrayOutput
	ToApplicationGroupApplicationArrayOutputWithContext(context.Context) ApplicationGroupApplicationArrayOutput
}

type ApplicationGroupApplicationArray []ApplicationGroupApplicationInput

func (ApplicationGroupApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGroupApplication)(nil)).Elem()
}

func (i ApplicationGroupApplicationArray) ToApplicationGroupApplicationArrayOutput() ApplicationGroupApplicationArrayOutput {
	return i.ToApplicationGroupApplicationArrayOutputWithContext(context.Background())
}

func (i ApplicationGroupApplicationArray) ToApplicationGroupApplicationArrayOutputWithContext(ctx context.Context) ApplicationGroupApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGroupApplicationArrayOutput)
}

type ApplicationGroupApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationGroupApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGroupApplication)(nil)).Elem()
}

func (o ApplicationGroupApplicationOutput) ToApplicationGroupApplicationOutput() ApplicationGroupApplicationOutput {
	return o
}

func (o ApplicationGroupApplicationOutput) ToApplicationGroupApplicationOutputWithContext(ctx context.Context) ApplicationGroupApplicationOutput {
	return o
}

// Application IDs.
func (o ApplicationGroupApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGroupApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ApplicationGroupApplicationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGroupApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGroupApplication)(nil)).Elem()
}

func (o ApplicationGroupApplicationArrayOutput) ToApplicationGroupApplicationArrayOutput() ApplicationGroupApplicationArrayOutput {
	return o
}

func (o ApplicationGroupApplicationArrayOutput) ToApplicationGroupApplicationArrayOutputWithContext(ctx context.Context) ApplicationGroupApplicationArrayOutput {
	return o
}

func (o ApplicationGroupApplicationArrayOutput) Index(i pulumi.IntInput) ApplicationGroupApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGroupApplication {
		return vs[0].([]ApplicationGroupApplication)[vs[1].(int)]
	}).(ApplicationGroupApplicationOutput)
}

type ApplicationGroupCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// ApplicationGroupCategoryInput is an input type that accepts ApplicationGroupCategoryArgs and ApplicationGroupCategoryOutput values.
// You can construct a concrete instance of `ApplicationGroupCategoryInput` via:
//
//	ApplicationGroupCategoryArgs{...}
type ApplicationGroupCategoryInput interface {
	pulumi.Input

	ToApplicationGroupCategoryOutput() ApplicationGroupCategoryOutput
	ToApplicationGroupCategoryOutputWithContext(context.Context) ApplicationGroupCategoryOutput
}

type ApplicationGroupCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ApplicationGroupCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGroupCategory)(nil)).Elem()
}

func (i ApplicationGroupCategoryArgs) ToApplicationGroupCategoryOutput() ApplicationGroupCategoryOutput {
	return i.ToApplicationGroupCategoryOutputWithContext(context.Background())
}

func (i ApplicationGroupCategoryArgs) ToApplicationGroupCategoryOutputWithContext(ctx context.Context) ApplicationGroupCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGroupCategoryOutput)
}

// ApplicationGroupCategoryArrayInput is an input type that accepts ApplicationGroupCategoryArray and ApplicationGroupCategoryArrayOutput values.
// You can construct a concrete instance of `ApplicationGroupCategoryArrayInput` via:
//
//	ApplicationGroupCategoryArray{ ApplicationGroupCategoryArgs{...} }
type ApplicationGroupCategoryArrayInput interface {
	pulumi.Input

	ToApplicationGroupCategoryArrayOutput() ApplicationGroupCategoryArrayOutput
	ToApplicationGroupCategoryArrayOutputWithContext(context.Context) ApplicationGroupCategoryArrayOutput
}

type ApplicationGroupCategoryArray []ApplicationGroupCategoryInput

func (ApplicationGroupCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGroupCategory)(nil)).Elem()
}

func (i ApplicationGroupCategoryArray) ToApplicationGroupCategoryArrayOutput() ApplicationGroupCategoryArrayOutput {
	return i.ToApplicationGroupCategoryArrayOutputWithContext(context.Background())
}

func (i ApplicationGroupCategoryArray) ToApplicationGroupCategoryArrayOutputWithContext(ctx context.Context) ApplicationGroupCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGroupCategoryArrayOutput)
}

type ApplicationGroupCategoryOutput struct{ *pulumi.OutputState }

func (ApplicationGroupCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGroupCategory)(nil)).Elem()
}

func (o ApplicationGroupCategoryOutput) ToApplicationGroupCategoryOutput() ApplicationGroupCategoryOutput {
	return o
}

func (o ApplicationGroupCategoryOutput) ToApplicationGroupCategoryOutputWithContext(ctx context.Context) ApplicationGroupCategoryOutput {
	return o
}

// Category IDs.
func (o ApplicationGroupCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGroupCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ApplicationGroupCategoryArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGroupCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGroupCategory)(nil)).Elem()
}

func (o ApplicationGroupCategoryArrayOutput) ToApplicationGroupCategoryArrayOutput() ApplicationGroupCategoryArrayOutput {
	return o
}

func (o ApplicationGroupCategoryArrayOutput) ToApplicationGroupCategoryArrayOutputWithContext(ctx context.Context) ApplicationGroupCategoryArrayOutput {
	return o
}

func (o ApplicationGroupCategoryArrayOutput) Index(i pulumi.IntInput) ApplicationGroupCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGroupCategory {
		return vs[0].([]ApplicationGroupCategory)[vs[1].(int)]
	}).(ApplicationGroupCategoryOutput)
}

type ApplicationGroupRisk struct {
	// Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).
	Level *int `pulumi:"level"`
}

// ApplicationGroupRiskInput is an input type that accepts ApplicationGroupRiskArgs and ApplicationGroupRiskOutput values.
// You can construct a concrete instance of `ApplicationGroupRiskInput` via:
//
//	ApplicationGroupRiskArgs{...}
type ApplicationGroupRiskInput interface {
	pulumi.Input

	ToApplicationGroupRiskOutput() ApplicationGroupRiskOutput
	ToApplicationGroupRiskOutputWithContext(context.Context) ApplicationGroupRiskOutput
}

type ApplicationGroupRiskArgs struct {
	// Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).
	Level pulumi.IntPtrInput `pulumi:"level"`
}

func (ApplicationGroupRiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGroupRisk)(nil)).Elem()
}

func (i ApplicationGroupRiskArgs) ToApplicationGroupRiskOutput() ApplicationGroupRiskOutput {
	return i.ToApplicationGroupRiskOutputWithContext(context.Background())
}

func (i ApplicationGroupRiskArgs) ToApplicationGroupRiskOutputWithContext(ctx context.Context) ApplicationGroupRiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGroupRiskOutput)
}

// ApplicationGroupRiskArrayInput is an input type that accepts ApplicationGroupRiskArray and ApplicationGroupRiskArrayOutput values.
// You can construct a concrete instance of `ApplicationGroupRiskArrayInput` via:
//
//	ApplicationGroupRiskArray{ ApplicationGroupRiskArgs{...} }
type ApplicationGroupRiskArrayInput interface {
	pulumi.Input

	ToApplicationGroupRiskArrayOutput() ApplicationGroupRiskArrayOutput
	ToApplicationGroupRiskArrayOutputWithContext(context.Context) ApplicationGroupRiskArrayOutput
}

type ApplicationGroupRiskArray []ApplicationGroupRiskInput

func (ApplicationGroupRiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGroupRisk)(nil)).Elem()
}

func (i ApplicationGroupRiskArray) ToApplicationGroupRiskArrayOutput() ApplicationGroupRiskArrayOutput {
	return i.ToApplicationGroupRiskArrayOutputWithContext(context.Background())
}

func (i ApplicationGroupRiskArray) ToApplicationGroupRiskArrayOutputWithContext(ctx context.Context) ApplicationGroupRiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGroupRiskArrayOutput)
}

type ApplicationGroupRiskOutput struct{ *pulumi.OutputState }

func (ApplicationGroupRiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGroupRisk)(nil)).Elem()
}

func (o ApplicationGroupRiskOutput) ToApplicationGroupRiskOutput() ApplicationGroupRiskOutput {
	return o
}

func (o ApplicationGroupRiskOutput) ToApplicationGroupRiskOutputWithContext(ctx context.Context) ApplicationGroupRiskOutput {
	return o
}

// Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).
func (o ApplicationGroupRiskOutput) Level() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGroupRisk) *int { return v.Level }).(pulumi.IntPtrOutput)
}

type ApplicationGroupRiskArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGroupRiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGroupRisk)(nil)).Elem()
}

func (o ApplicationGroupRiskArrayOutput) ToApplicationGroupRiskArrayOutput() ApplicationGroupRiskArrayOutput {
	return o
}

func (o ApplicationGroupRiskArrayOutput) ToApplicationGroupRiskArrayOutputWithContext(ctx context.Context) ApplicationGroupRiskArrayOutput {
	return o
}

func (o ApplicationGroupRiskArrayOutput) Index(i pulumi.IntInput) ApplicationGroupRiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGroupRisk {
		return vs[0].([]ApplicationGroupRisk)[vs[1].(int)]
	}).(ApplicationGroupRiskOutput)
}

type ApplicationListDefaultNetworkService struct {
	// Entry ID.
	Id *int `pulumi:"id"`
	// Port number.
	Port *int `pulumi:"port"`
	// Network protocols. Valid values: `http`, `ssh`, `telnet`, `ftp`, `dns`, `smtp`, `pop3`, `imap`, `snmp`, `nntp`, `https`.
	Services *string `pulumi:"services"`
	// Action for protocols not white listed under selected port. Valid values: `pass`, `monitor`, `block`.
	ViolationAction *string `pulumi:"violationAction"`
}

// ApplicationListDefaultNetworkServiceInput is an input type that accepts ApplicationListDefaultNetworkServiceArgs and ApplicationListDefaultNetworkServiceOutput values.
// You can construct a concrete instance of `ApplicationListDefaultNetworkServiceInput` via:
//
//	ApplicationListDefaultNetworkServiceArgs{...}
type ApplicationListDefaultNetworkServiceInput interface {
	pulumi.Input

	ToApplicationListDefaultNetworkServiceOutput() ApplicationListDefaultNetworkServiceOutput
	ToApplicationListDefaultNetworkServiceOutputWithContext(context.Context) ApplicationListDefaultNetworkServiceOutput
}

type ApplicationListDefaultNetworkServiceArgs struct {
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Port number.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Network protocols. Valid values: `http`, `ssh`, `telnet`, `ftp`, `dns`, `smtp`, `pop3`, `imap`, `snmp`, `nntp`, `https`.
	Services pulumi.StringPtrInput `pulumi:"services"`
	// Action for protocols not white listed under selected port. Valid values: `pass`, `monitor`, `block`.
	ViolationAction pulumi.StringPtrInput `pulumi:"violationAction"`
}

func (ApplicationListDefaultNetworkServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListDefaultNetworkService)(nil)).Elem()
}

func (i ApplicationListDefaultNetworkServiceArgs) ToApplicationListDefaultNetworkServiceOutput() ApplicationListDefaultNetworkServiceOutput {
	return i.ToApplicationListDefaultNetworkServiceOutputWithContext(context.Background())
}

func (i ApplicationListDefaultNetworkServiceArgs) ToApplicationListDefaultNetworkServiceOutputWithContext(ctx context.Context) ApplicationListDefaultNetworkServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListDefaultNetworkServiceOutput)
}

// ApplicationListDefaultNetworkServiceArrayInput is an input type that accepts ApplicationListDefaultNetworkServiceArray and ApplicationListDefaultNetworkServiceArrayOutput values.
// You can construct a concrete instance of `ApplicationListDefaultNetworkServiceArrayInput` via:
//
//	ApplicationListDefaultNetworkServiceArray{ ApplicationListDefaultNetworkServiceArgs{...} }
type ApplicationListDefaultNetworkServiceArrayInput interface {
	pulumi.Input

	ToApplicationListDefaultNetworkServiceArrayOutput() ApplicationListDefaultNetworkServiceArrayOutput
	ToApplicationListDefaultNetworkServiceArrayOutputWithContext(context.Context) ApplicationListDefaultNetworkServiceArrayOutput
}

type ApplicationListDefaultNetworkServiceArray []ApplicationListDefaultNetworkServiceInput

func (ApplicationListDefaultNetworkServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListDefaultNetworkService)(nil)).Elem()
}

func (i ApplicationListDefaultNetworkServiceArray) ToApplicationListDefaultNetworkServiceArrayOutput() ApplicationListDefaultNetworkServiceArrayOutput {
	return i.ToApplicationListDefaultNetworkServiceArrayOutputWithContext(context.Background())
}

func (i ApplicationListDefaultNetworkServiceArray) ToApplicationListDefaultNetworkServiceArrayOutputWithContext(ctx context.Context) ApplicationListDefaultNetworkServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListDefaultNetworkServiceArrayOutput)
}

type ApplicationListDefaultNetworkServiceOutput struct{ *pulumi.OutputState }

func (ApplicationListDefaultNetworkServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListDefaultNetworkService)(nil)).Elem()
}

func (o ApplicationListDefaultNetworkServiceOutput) ToApplicationListDefaultNetworkServiceOutput() ApplicationListDefaultNetworkServiceOutput {
	return o
}

func (o ApplicationListDefaultNetworkServiceOutput) ToApplicationListDefaultNetworkServiceOutputWithContext(ctx context.Context) ApplicationListDefaultNetworkServiceOutput {
	return o
}

// Entry ID.
func (o ApplicationListDefaultNetworkServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListDefaultNetworkService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Port number.
func (o ApplicationListDefaultNetworkServiceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListDefaultNetworkService) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Network protocols. Valid values: `http`, `ssh`, `telnet`, `ftp`, `dns`, `smtp`, `pop3`, `imap`, `snmp`, `nntp`, `https`.
func (o ApplicationListDefaultNetworkServiceOutput) Services() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListDefaultNetworkService) *string { return v.Services }).(pulumi.StringPtrOutput)
}

// Action for protocols not white listed under selected port. Valid values: `pass`, `monitor`, `block`.
func (o ApplicationListDefaultNetworkServiceOutput) ViolationAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListDefaultNetworkService) *string { return v.ViolationAction }).(pulumi.StringPtrOutput)
}

type ApplicationListDefaultNetworkServiceArrayOutput struct{ *pulumi.OutputState }

func (ApplicationListDefaultNetworkServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListDefaultNetworkService)(nil)).Elem()
}

func (o ApplicationListDefaultNetworkServiceArrayOutput) ToApplicationListDefaultNetworkServiceArrayOutput() ApplicationListDefaultNetworkServiceArrayOutput {
	return o
}

func (o ApplicationListDefaultNetworkServiceArrayOutput) ToApplicationListDefaultNetworkServiceArrayOutputWithContext(ctx context.Context) ApplicationListDefaultNetworkServiceArrayOutput {
	return o
}

func (o ApplicationListDefaultNetworkServiceArrayOutput) Index(i pulumi.IntInput) ApplicationListDefaultNetworkServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationListDefaultNetworkService {
		return vs[0].([]ApplicationListDefaultNetworkService)[vs[1].(int)]
	}).(ApplicationListDefaultNetworkServiceOutput)
}

type ApplicationListEntry struct {
	// Pass or block traffic, or reset connection for traffic from this application. Valid values: `pass`, `block`, `reset`.
	Action *string `pulumi:"action"`
	// ID of allowed applications. The structure of `application` block is documented below.
	Applications []ApplicationListEntryApplication `pulumi:"applications"`
	// Application behavior filter.
	Behavior *string `pulumi:"behavior"`
	// Category ID list. The structure of `category` block is documented below.
	Categories []ApplicationListEntryCategory `pulumi:"categories"`
	// ID of excluded applications. The structure of `exclusion` block is documented below.
	Exclusions []ApplicationListEntryExclusion `pulumi:"exclusions"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Enable/disable logging for this application list. Valid values: `disable`, `enable`.
	Log *string `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Application parameters. The structure of `parameters` block is documented below.
	Parameters []ApplicationListEntryParameter `pulumi:"parameters"`
	// Per-IP traffic shaper.
	PerIpShaper *string `pulumi:"perIpShaper"`
	// Application popularity filter (1 - 5, from least to most popular). Valid values: `1`, `2`, `3`, `4`, `5`.
	Popularity *string `pulumi:"popularity"`
	// Application protocol filter.
	Protocols *string `pulumi:"protocols"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine *string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry *string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog *string `pulumi:"quarantineLog"`
	// Count of the rate.
	RateCount *int `pulumi:"rateCount"`
	// Duration (sec) of the rate.
	RateDuration *int `pulumi:"rateDuration"`
	// Rate limit mode. Valid values: `periodical`, `continuous`.
	RateMode *string `pulumi:"rateMode"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`, `dhcp-client-mac`, `dns-domain`.
	RateTrack *string `pulumi:"rateTrack"`
	// Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical). The structure of `risk` block is documented below.
	Risks []ApplicationListEntryRisk `pulumi:"risks"`
	// Session TTL (0 = default).
	SessionTtl *int `pulumi:"sessionTtl"`
	// Traffic shaper.
	Shaper *string `pulumi:"shaper"`
	// Reverse traffic shaper.
	ShaperReverse *string `pulumi:"shaperReverse"`
	// Application Sub-category ID list. The structure of `subCategory` block is documented below.
	SubCategories []ApplicationListEntrySubCategory `pulumi:"subCategories"`
	// Application technology filter.
	Technology *string `pulumi:"technology"`
	// Application vendor filter.
	Vendor *string `pulumi:"vendor"`
}

// ApplicationListEntryInput is an input type that accepts ApplicationListEntryArgs and ApplicationListEntryOutput values.
// You can construct a concrete instance of `ApplicationListEntryInput` via:
//
//	ApplicationListEntryArgs{...}
type ApplicationListEntryInput interface {
	pulumi.Input

	ToApplicationListEntryOutput() ApplicationListEntryOutput
	ToApplicationListEntryOutputWithContext(context.Context) ApplicationListEntryOutput
}

type ApplicationListEntryArgs struct {
	// Pass or block traffic, or reset connection for traffic from this application. Valid values: `pass`, `block`, `reset`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// ID of allowed applications. The structure of `application` block is documented below.
	Applications ApplicationListEntryApplicationArrayInput `pulumi:"applications"`
	// Application behavior filter.
	Behavior pulumi.StringPtrInput `pulumi:"behavior"`
	// Category ID list. The structure of `category` block is documented below.
	Categories ApplicationListEntryCategoryArrayInput `pulumi:"categories"`
	// ID of excluded applications. The structure of `exclusion` block is documented below.
	Exclusions ApplicationListEntryExclusionArrayInput `pulumi:"exclusions"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable logging for this application list. Valid values: `disable`, `enable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput `pulumi:"logPacket"`
	// Application parameters. The structure of `parameters` block is documented below.
	Parameters ApplicationListEntryParameterArrayInput `pulumi:"parameters"`
	// Per-IP traffic shaper.
	PerIpShaper pulumi.StringPtrInput `pulumi:"perIpShaper"`
	// Application popularity filter (1 - 5, from least to most popular). Valid values: `1`, `2`, `3`, `4`, `5`.
	Popularity pulumi.StringPtrInput `pulumi:"popularity"`
	// Application protocol filter.
	Protocols pulumi.StringPtrInput `pulumi:"protocols"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringPtrInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog pulumi.StringPtrInput `pulumi:"quarantineLog"`
	// Count of the rate.
	RateCount pulumi.IntPtrInput `pulumi:"rateCount"`
	// Duration (sec) of the rate.
	RateDuration pulumi.IntPtrInput `pulumi:"rateDuration"`
	// Rate limit mode. Valid values: `periodical`, `continuous`.
	RateMode pulumi.StringPtrInput `pulumi:"rateMode"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`, `dhcp-client-mac`, `dns-domain`.
	RateTrack pulumi.StringPtrInput `pulumi:"rateTrack"`
	// Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical). The structure of `risk` block is documented below.
	Risks ApplicationListEntryRiskArrayInput `pulumi:"risks"`
	// Session TTL (0 = default).
	SessionTtl pulumi.IntPtrInput `pulumi:"sessionTtl"`
	// Traffic shaper.
	Shaper pulumi.StringPtrInput `pulumi:"shaper"`
	// Reverse traffic shaper.
	ShaperReverse pulumi.StringPtrInput `pulumi:"shaperReverse"`
	// Application Sub-category ID list. The structure of `subCategory` block is documented below.
	SubCategories ApplicationListEntrySubCategoryArrayInput `pulumi:"subCategories"`
	// Application technology filter.
	Technology pulumi.StringPtrInput `pulumi:"technology"`
	// Application vendor filter.
	Vendor pulumi.StringPtrInput `pulumi:"vendor"`
}

func (ApplicationListEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntry)(nil)).Elem()
}

func (i ApplicationListEntryArgs) ToApplicationListEntryOutput() ApplicationListEntryOutput {
	return i.ToApplicationListEntryOutputWithContext(context.Background())
}

func (i ApplicationListEntryArgs) ToApplicationListEntryOutputWithContext(ctx context.Context) ApplicationListEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryOutput)
}

// ApplicationListEntryArrayInput is an input type that accepts ApplicationListEntryArray and ApplicationListEntryArrayOutput values.
// You can construct a concrete instance of `ApplicationListEntryArrayInput` via:
//
//	ApplicationListEntryArray{ ApplicationListEntryArgs{...} }
type ApplicationListEntryArrayInput interface {
	pulumi.Input

	ToApplicationListEntryArrayOutput() ApplicationListEntryArrayOutput
	ToApplicationListEntryArrayOutputWithContext(context.Context) ApplicationListEntryArrayOutput
}

type ApplicationListEntryArray []ApplicationListEntryInput

func (ApplicationListEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntry)(nil)).Elem()
}

func (i ApplicationListEntryArray) ToApplicationListEntryArrayOutput() ApplicationListEntryArrayOutput {
	return i.ToApplicationListEntryArrayOutputWithContext(context.Background())
}

func (i ApplicationListEntryArray) ToApplicationListEntryArrayOutputWithContext(ctx context.Context) ApplicationListEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryArrayOutput)
}

type ApplicationListEntryOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntry)(nil)).Elem()
}

func (o ApplicationListEntryOutput) ToApplicationListEntryOutput() ApplicationListEntryOutput {
	return o
}

func (o ApplicationListEntryOutput) ToApplicationListEntryOutputWithContext(ctx context.Context) ApplicationListEntryOutput {
	return o
}

// Pass or block traffic, or reset connection for traffic from this application. Valid values: `pass`, `block`, `reset`.
func (o ApplicationListEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// ID of allowed applications. The structure of `application` block is documented below.
func (o ApplicationListEntryOutput) Applications() ApplicationListEntryApplicationArrayOutput {
	return o.ApplyT(func(v ApplicationListEntry) []ApplicationListEntryApplication { return v.Applications }).(ApplicationListEntryApplicationArrayOutput)
}

// Application behavior filter.
func (o ApplicationListEntryOutput) Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.Behavior }).(pulumi.StringPtrOutput)
}

// Category ID list. The structure of `category` block is documented below.
func (o ApplicationListEntryOutput) Categories() ApplicationListEntryCategoryArrayOutput {
	return o.ApplyT(func(v ApplicationListEntry) []ApplicationListEntryCategory { return v.Categories }).(ApplicationListEntryCategoryArrayOutput)
}

// ID of excluded applications. The structure of `exclusion` block is documented below.
func (o ApplicationListEntryOutput) Exclusions() ApplicationListEntryExclusionArrayOutput {
	return o.ApplyT(func(v ApplicationListEntry) []ApplicationListEntryExclusion { return v.Exclusions }).(ApplicationListEntryExclusionArrayOutput)
}

// Entry ID.
func (o ApplicationListEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable logging for this application list. Valid values: `disable`, `enable`.
func (o ApplicationListEntryOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable packet logging. Valid values: `disable`, `enable`.
func (o ApplicationListEntryOutput) LogPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.LogPacket }).(pulumi.StringPtrOutput)
}

// Application parameters. The structure of `parameters` block is documented below.
func (o ApplicationListEntryOutput) Parameters() ApplicationListEntryParameterArrayOutput {
	return o.ApplyT(func(v ApplicationListEntry) []ApplicationListEntryParameter { return v.Parameters }).(ApplicationListEntryParameterArrayOutput)
}

// Per-IP traffic shaper.
func (o ApplicationListEntryOutput) PerIpShaper() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.PerIpShaper }).(pulumi.StringPtrOutput)
}

// Application popularity filter (1 - 5, from least to most popular). Valid values: `1`, `2`, `3`, `4`, `5`.
func (o ApplicationListEntryOutput) Popularity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.Popularity }).(pulumi.StringPtrOutput)
}

// Application protocol filter.
func (o ApplicationListEntryOutput) Protocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.Protocols }).(pulumi.StringPtrOutput)
}

// Quarantine method. Valid values: `none`, `attacker`.
func (o ApplicationListEntryOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o ApplicationListEntryOutput) QuarantineExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.QuarantineExpiry }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
func (o ApplicationListEntryOutput) QuarantineLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.QuarantineLog }).(pulumi.StringPtrOutput)
}

// Count of the rate.
func (o ApplicationListEntryOutput) RateCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *int { return v.RateCount }).(pulumi.IntPtrOutput)
}

// Duration (sec) of the rate.
func (o ApplicationListEntryOutput) RateDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *int { return v.RateDuration }).(pulumi.IntPtrOutput)
}

// Rate limit mode. Valid values: `periodical`, `continuous`.
func (o ApplicationListEntryOutput) RateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.RateMode }).(pulumi.StringPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`, `dhcp-client-mac`, `dns-domain`.
func (o ApplicationListEntryOutput) RateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.RateTrack }).(pulumi.StringPtrOutput)
}

// Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical). The structure of `risk` block is documented below.
func (o ApplicationListEntryOutput) Risks() ApplicationListEntryRiskArrayOutput {
	return o.ApplyT(func(v ApplicationListEntry) []ApplicationListEntryRisk { return v.Risks }).(ApplicationListEntryRiskArrayOutput)
}

// Session TTL (0 = default).
func (o ApplicationListEntryOutput) SessionTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *int { return v.SessionTtl }).(pulumi.IntPtrOutput)
}

// Traffic shaper.
func (o ApplicationListEntryOutput) Shaper() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.Shaper }).(pulumi.StringPtrOutput)
}

// Reverse traffic shaper.
func (o ApplicationListEntryOutput) ShaperReverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.ShaperReverse }).(pulumi.StringPtrOutput)
}

// Application Sub-category ID list. The structure of `subCategory` block is documented below.
func (o ApplicationListEntryOutput) SubCategories() ApplicationListEntrySubCategoryArrayOutput {
	return o.ApplyT(func(v ApplicationListEntry) []ApplicationListEntrySubCategory { return v.SubCategories }).(ApplicationListEntrySubCategoryArrayOutput)
}

// Application technology filter.
func (o ApplicationListEntryOutput) Technology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.Technology }).(pulumi.StringPtrOutput)
}

// Application vendor filter.
func (o ApplicationListEntryOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntry) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

type ApplicationListEntryArrayOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntry)(nil)).Elem()
}

func (o ApplicationListEntryArrayOutput) ToApplicationListEntryArrayOutput() ApplicationListEntryArrayOutput {
	return o
}

func (o ApplicationListEntryArrayOutput) ToApplicationListEntryArrayOutputWithContext(ctx context.Context) ApplicationListEntryArrayOutput {
	return o
}

func (o ApplicationListEntryArrayOutput) Index(i pulumi.IntInput) ApplicationListEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationListEntry {
		return vs[0].([]ApplicationListEntry)[vs[1].(int)]
	}).(ApplicationListEntryOutput)
}

type ApplicationListEntryApplication struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// ApplicationListEntryApplicationInput is an input type that accepts ApplicationListEntryApplicationArgs and ApplicationListEntryApplicationOutput values.
// You can construct a concrete instance of `ApplicationListEntryApplicationInput` via:
//
//	ApplicationListEntryApplicationArgs{...}
type ApplicationListEntryApplicationInput interface {
	pulumi.Input

	ToApplicationListEntryApplicationOutput() ApplicationListEntryApplicationOutput
	ToApplicationListEntryApplicationOutputWithContext(context.Context) ApplicationListEntryApplicationOutput
}

type ApplicationListEntryApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ApplicationListEntryApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryApplication)(nil)).Elem()
}

func (i ApplicationListEntryApplicationArgs) ToApplicationListEntryApplicationOutput() ApplicationListEntryApplicationOutput {
	return i.ToApplicationListEntryApplicationOutputWithContext(context.Background())
}

func (i ApplicationListEntryApplicationArgs) ToApplicationListEntryApplicationOutputWithContext(ctx context.Context) ApplicationListEntryApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryApplicationOutput)
}

// ApplicationListEntryApplicationArrayInput is an input type that accepts ApplicationListEntryApplicationArray and ApplicationListEntryApplicationArrayOutput values.
// You can construct a concrete instance of `ApplicationListEntryApplicationArrayInput` via:
//
//	ApplicationListEntryApplicationArray{ ApplicationListEntryApplicationArgs{...} }
type ApplicationListEntryApplicationArrayInput interface {
	pulumi.Input

	ToApplicationListEntryApplicationArrayOutput() ApplicationListEntryApplicationArrayOutput
	ToApplicationListEntryApplicationArrayOutputWithContext(context.Context) ApplicationListEntryApplicationArrayOutput
}

type ApplicationListEntryApplicationArray []ApplicationListEntryApplicationInput

func (ApplicationListEntryApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryApplication)(nil)).Elem()
}

func (i ApplicationListEntryApplicationArray) ToApplicationListEntryApplicationArrayOutput() ApplicationListEntryApplicationArrayOutput {
	return i.ToApplicationListEntryApplicationArrayOutputWithContext(context.Background())
}

func (i ApplicationListEntryApplicationArray) ToApplicationListEntryApplicationArrayOutputWithContext(ctx context.Context) ApplicationListEntryApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryApplicationArrayOutput)
}

type ApplicationListEntryApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryApplication)(nil)).Elem()
}

func (o ApplicationListEntryApplicationOutput) ToApplicationListEntryApplicationOutput() ApplicationListEntryApplicationOutput {
	return o
}

func (o ApplicationListEntryApplicationOutput) ToApplicationListEntryApplicationOutputWithContext(ctx context.Context) ApplicationListEntryApplicationOutput {
	return o
}

// Application IDs.
func (o ApplicationListEntryApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntryApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ApplicationListEntryApplicationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryApplication)(nil)).Elem()
}

func (o ApplicationListEntryApplicationArrayOutput) ToApplicationListEntryApplicationArrayOutput() ApplicationListEntryApplicationArrayOutput {
	return o
}

func (o ApplicationListEntryApplicationArrayOutput) ToApplicationListEntryApplicationArrayOutputWithContext(ctx context.Context) ApplicationListEntryApplicationArrayOutput {
	return o
}

func (o ApplicationListEntryApplicationArrayOutput) Index(i pulumi.IntInput) ApplicationListEntryApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationListEntryApplication {
		return vs[0].([]ApplicationListEntryApplication)[vs[1].(int)]
	}).(ApplicationListEntryApplicationOutput)
}

type ApplicationListEntryCategory struct {
	// Application category ID.
	Id *int `pulumi:"id"`
}

// ApplicationListEntryCategoryInput is an input type that accepts ApplicationListEntryCategoryArgs and ApplicationListEntryCategoryOutput values.
// You can construct a concrete instance of `ApplicationListEntryCategoryInput` via:
//
//	ApplicationListEntryCategoryArgs{...}
type ApplicationListEntryCategoryInput interface {
	pulumi.Input

	ToApplicationListEntryCategoryOutput() ApplicationListEntryCategoryOutput
	ToApplicationListEntryCategoryOutputWithContext(context.Context) ApplicationListEntryCategoryOutput
}

type ApplicationListEntryCategoryArgs struct {
	// Application category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ApplicationListEntryCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryCategory)(nil)).Elem()
}

func (i ApplicationListEntryCategoryArgs) ToApplicationListEntryCategoryOutput() ApplicationListEntryCategoryOutput {
	return i.ToApplicationListEntryCategoryOutputWithContext(context.Background())
}

func (i ApplicationListEntryCategoryArgs) ToApplicationListEntryCategoryOutputWithContext(ctx context.Context) ApplicationListEntryCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryCategoryOutput)
}

// ApplicationListEntryCategoryArrayInput is an input type that accepts ApplicationListEntryCategoryArray and ApplicationListEntryCategoryArrayOutput values.
// You can construct a concrete instance of `ApplicationListEntryCategoryArrayInput` via:
//
//	ApplicationListEntryCategoryArray{ ApplicationListEntryCategoryArgs{...} }
type ApplicationListEntryCategoryArrayInput interface {
	pulumi.Input

	ToApplicationListEntryCategoryArrayOutput() ApplicationListEntryCategoryArrayOutput
	ToApplicationListEntryCategoryArrayOutputWithContext(context.Context) ApplicationListEntryCategoryArrayOutput
}

type ApplicationListEntryCategoryArray []ApplicationListEntryCategoryInput

func (ApplicationListEntryCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryCategory)(nil)).Elem()
}

func (i ApplicationListEntryCategoryArray) ToApplicationListEntryCategoryArrayOutput() ApplicationListEntryCategoryArrayOutput {
	return i.ToApplicationListEntryCategoryArrayOutputWithContext(context.Background())
}

func (i ApplicationListEntryCategoryArray) ToApplicationListEntryCategoryArrayOutputWithContext(ctx context.Context) ApplicationListEntryCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryCategoryArrayOutput)
}

type ApplicationListEntryCategoryOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryCategory)(nil)).Elem()
}

func (o ApplicationListEntryCategoryOutput) ToApplicationListEntryCategoryOutput() ApplicationListEntryCategoryOutput {
	return o
}

func (o ApplicationListEntryCategoryOutput) ToApplicationListEntryCategoryOutputWithContext(ctx context.Context) ApplicationListEntryCategoryOutput {
	return o
}

// Application category ID.
func (o ApplicationListEntryCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntryCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ApplicationListEntryCategoryArrayOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryCategory)(nil)).Elem()
}

func (o ApplicationListEntryCategoryArrayOutput) ToApplicationListEntryCategoryArrayOutput() ApplicationListEntryCategoryArrayOutput {
	return o
}

func (o ApplicationListEntryCategoryArrayOutput) ToApplicationListEntryCategoryArrayOutputWithContext(ctx context.Context) ApplicationListEntryCategoryArrayOutput {
	return o
}

func (o ApplicationListEntryCategoryArrayOutput) Index(i pulumi.IntInput) ApplicationListEntryCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationListEntryCategory {
		return vs[0].([]ApplicationListEntryCategory)[vs[1].(int)]
	}).(ApplicationListEntryCategoryOutput)
}

type ApplicationListEntryExclusion struct {
	// Excluded application IDs.
	Id *int `pulumi:"id"`
}

// ApplicationListEntryExclusionInput is an input type that accepts ApplicationListEntryExclusionArgs and ApplicationListEntryExclusionOutput values.
// You can construct a concrete instance of `ApplicationListEntryExclusionInput` via:
//
//	ApplicationListEntryExclusionArgs{...}
type ApplicationListEntryExclusionInput interface {
	pulumi.Input

	ToApplicationListEntryExclusionOutput() ApplicationListEntryExclusionOutput
	ToApplicationListEntryExclusionOutputWithContext(context.Context) ApplicationListEntryExclusionOutput
}

type ApplicationListEntryExclusionArgs struct {
	// Excluded application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ApplicationListEntryExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryExclusion)(nil)).Elem()
}

func (i ApplicationListEntryExclusionArgs) ToApplicationListEntryExclusionOutput() ApplicationListEntryExclusionOutput {
	return i.ToApplicationListEntryExclusionOutputWithContext(context.Background())
}

func (i ApplicationListEntryExclusionArgs) ToApplicationListEntryExclusionOutputWithContext(ctx context.Context) ApplicationListEntryExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryExclusionOutput)
}

// ApplicationListEntryExclusionArrayInput is an input type that accepts ApplicationListEntryExclusionArray and ApplicationListEntryExclusionArrayOutput values.
// You can construct a concrete instance of `ApplicationListEntryExclusionArrayInput` via:
//
//	ApplicationListEntryExclusionArray{ ApplicationListEntryExclusionArgs{...} }
type ApplicationListEntryExclusionArrayInput interface {
	pulumi.Input

	ToApplicationListEntryExclusionArrayOutput() ApplicationListEntryExclusionArrayOutput
	ToApplicationListEntryExclusionArrayOutputWithContext(context.Context) ApplicationListEntryExclusionArrayOutput
}

type ApplicationListEntryExclusionArray []ApplicationListEntryExclusionInput

func (ApplicationListEntryExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryExclusion)(nil)).Elem()
}

func (i ApplicationListEntryExclusionArray) ToApplicationListEntryExclusionArrayOutput() ApplicationListEntryExclusionArrayOutput {
	return i.ToApplicationListEntryExclusionArrayOutputWithContext(context.Background())
}

func (i ApplicationListEntryExclusionArray) ToApplicationListEntryExclusionArrayOutputWithContext(ctx context.Context) ApplicationListEntryExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryExclusionArrayOutput)
}

type ApplicationListEntryExclusionOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryExclusion)(nil)).Elem()
}

func (o ApplicationListEntryExclusionOutput) ToApplicationListEntryExclusionOutput() ApplicationListEntryExclusionOutput {
	return o
}

func (o ApplicationListEntryExclusionOutput) ToApplicationListEntryExclusionOutputWithContext(ctx context.Context) ApplicationListEntryExclusionOutput {
	return o
}

// Excluded application IDs.
func (o ApplicationListEntryExclusionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntryExclusion) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ApplicationListEntryExclusionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryExclusion)(nil)).Elem()
}

func (o ApplicationListEntryExclusionArrayOutput) ToApplicationListEntryExclusionArrayOutput() ApplicationListEntryExclusionArrayOutput {
	return o
}

func (o ApplicationListEntryExclusionArrayOutput) ToApplicationListEntryExclusionArrayOutputWithContext(ctx context.Context) ApplicationListEntryExclusionArrayOutput {
	return o
}

func (o ApplicationListEntryExclusionArrayOutput) Index(i pulumi.IntInput) ApplicationListEntryExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationListEntryExclusion {
		return vs[0].([]ApplicationListEntryExclusion)[vs[1].(int)]
	}).(ApplicationListEntryExclusionOutput)
}

type ApplicationListEntryParameter struct {
	// Parameter ID.
	Id *int `pulumi:"id"`
	// Parameter tuple members. The structure of `members` block is documented below.
	Members []ApplicationListEntryParameterMember `pulumi:"members"`
	// Parameter value.
	Value *string `pulumi:"value"`
}

// ApplicationListEntryParameterInput is an input type that accepts ApplicationListEntryParameterArgs and ApplicationListEntryParameterOutput values.
// You can construct a concrete instance of `ApplicationListEntryParameterInput` via:
//
//	ApplicationListEntryParameterArgs{...}
type ApplicationListEntryParameterInput interface {
	pulumi.Input

	ToApplicationListEntryParameterOutput() ApplicationListEntryParameterOutput
	ToApplicationListEntryParameterOutputWithContext(context.Context) ApplicationListEntryParameterOutput
}

type ApplicationListEntryParameterArgs struct {
	// Parameter ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Parameter tuple members. The structure of `members` block is documented below.
	Members ApplicationListEntryParameterMemberArrayInput `pulumi:"members"`
	// Parameter value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationListEntryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryParameter)(nil)).Elem()
}

func (i ApplicationListEntryParameterArgs) ToApplicationListEntryParameterOutput() ApplicationListEntryParameterOutput {
	return i.ToApplicationListEntryParameterOutputWithContext(context.Background())
}

func (i ApplicationListEntryParameterArgs) ToApplicationListEntryParameterOutputWithContext(ctx context.Context) ApplicationListEntryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryParameterOutput)
}

// ApplicationListEntryParameterArrayInput is an input type that accepts ApplicationListEntryParameterArray and ApplicationListEntryParameterArrayOutput values.
// You can construct a concrete instance of `ApplicationListEntryParameterArrayInput` via:
//
//	ApplicationListEntryParameterArray{ ApplicationListEntryParameterArgs{...} }
type ApplicationListEntryParameterArrayInput interface {
	pulumi.Input

	ToApplicationListEntryParameterArrayOutput() ApplicationListEntryParameterArrayOutput
	ToApplicationListEntryParameterArrayOutputWithContext(context.Context) ApplicationListEntryParameterArrayOutput
}

type ApplicationListEntryParameterArray []ApplicationListEntryParameterInput

func (ApplicationListEntryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryParameter)(nil)).Elem()
}

func (i ApplicationListEntryParameterArray) ToApplicationListEntryParameterArrayOutput() ApplicationListEntryParameterArrayOutput {
	return i.ToApplicationListEntryParameterArrayOutputWithContext(context.Background())
}

func (i ApplicationListEntryParameterArray) ToApplicationListEntryParameterArrayOutputWithContext(ctx context.Context) ApplicationListEntryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryParameterArrayOutput)
}

type ApplicationListEntryParameterOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryParameter)(nil)).Elem()
}

func (o ApplicationListEntryParameterOutput) ToApplicationListEntryParameterOutput() ApplicationListEntryParameterOutput {
	return o
}

func (o ApplicationListEntryParameterOutput) ToApplicationListEntryParameterOutputWithContext(ctx context.Context) ApplicationListEntryParameterOutput {
	return o
}

// Parameter ID.
func (o ApplicationListEntryParameterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntryParameter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Parameter tuple members. The structure of `members` block is documented below.
func (o ApplicationListEntryParameterOutput) Members() ApplicationListEntryParameterMemberArrayOutput {
	return o.ApplyT(func(v ApplicationListEntryParameter) []ApplicationListEntryParameterMember { return v.Members }).(ApplicationListEntryParameterMemberArrayOutput)
}

// Parameter value.
func (o ApplicationListEntryParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntryParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationListEntryParameterArrayOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryParameter)(nil)).Elem()
}

func (o ApplicationListEntryParameterArrayOutput) ToApplicationListEntryParameterArrayOutput() ApplicationListEntryParameterArrayOutput {
	return o
}

func (o ApplicationListEntryParameterArrayOutput) ToApplicationListEntryParameterArrayOutputWithContext(ctx context.Context) ApplicationListEntryParameterArrayOutput {
	return o
}

func (o ApplicationListEntryParameterArrayOutput) Index(i pulumi.IntInput) ApplicationListEntryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationListEntryParameter {
		return vs[0].([]ApplicationListEntryParameter)[vs[1].(int)]
	}).(ApplicationListEntryParameterOutput)
}

type ApplicationListEntryParameterMember struct {
	// Parameter.
	Id *int `pulumi:"id"`
	// Parameter name.
	Name *string `pulumi:"name"`
	// Parameter value.
	Value *string `pulumi:"value"`
}

// ApplicationListEntryParameterMemberInput is an input type that accepts ApplicationListEntryParameterMemberArgs and ApplicationListEntryParameterMemberOutput values.
// You can construct a concrete instance of `ApplicationListEntryParameterMemberInput` via:
//
//	ApplicationListEntryParameterMemberArgs{...}
type ApplicationListEntryParameterMemberInput interface {
	pulumi.Input

	ToApplicationListEntryParameterMemberOutput() ApplicationListEntryParameterMemberOutput
	ToApplicationListEntryParameterMemberOutputWithContext(context.Context) ApplicationListEntryParameterMemberOutput
}

type ApplicationListEntryParameterMemberArgs struct {
	// Parameter.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameter value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationListEntryParameterMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryParameterMember)(nil)).Elem()
}

func (i ApplicationListEntryParameterMemberArgs) ToApplicationListEntryParameterMemberOutput() ApplicationListEntryParameterMemberOutput {
	return i.ToApplicationListEntryParameterMemberOutputWithContext(context.Background())
}

func (i ApplicationListEntryParameterMemberArgs) ToApplicationListEntryParameterMemberOutputWithContext(ctx context.Context) ApplicationListEntryParameterMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryParameterMemberOutput)
}

// ApplicationListEntryParameterMemberArrayInput is an input type that accepts ApplicationListEntryParameterMemberArray and ApplicationListEntryParameterMemberArrayOutput values.
// You can construct a concrete instance of `ApplicationListEntryParameterMemberArrayInput` via:
//
//	ApplicationListEntryParameterMemberArray{ ApplicationListEntryParameterMemberArgs{...} }
type ApplicationListEntryParameterMemberArrayInput interface {
	pulumi.Input

	ToApplicationListEntryParameterMemberArrayOutput() ApplicationListEntryParameterMemberArrayOutput
	ToApplicationListEntryParameterMemberArrayOutputWithContext(context.Context) ApplicationListEntryParameterMemberArrayOutput
}

type ApplicationListEntryParameterMemberArray []ApplicationListEntryParameterMemberInput

func (ApplicationListEntryParameterMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryParameterMember)(nil)).Elem()
}

func (i ApplicationListEntryParameterMemberArray) ToApplicationListEntryParameterMemberArrayOutput() ApplicationListEntryParameterMemberArrayOutput {
	return i.ToApplicationListEntryParameterMemberArrayOutputWithContext(context.Background())
}

func (i ApplicationListEntryParameterMemberArray) ToApplicationListEntryParameterMemberArrayOutputWithContext(ctx context.Context) ApplicationListEntryParameterMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryParameterMemberArrayOutput)
}

type ApplicationListEntryParameterMemberOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryParameterMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryParameterMember)(nil)).Elem()
}

func (o ApplicationListEntryParameterMemberOutput) ToApplicationListEntryParameterMemberOutput() ApplicationListEntryParameterMemberOutput {
	return o
}

func (o ApplicationListEntryParameterMemberOutput) ToApplicationListEntryParameterMemberOutputWithContext(ctx context.Context) ApplicationListEntryParameterMemberOutput {
	return o
}

// Parameter.
func (o ApplicationListEntryParameterMemberOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntryParameterMember) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Parameter name.
func (o ApplicationListEntryParameterMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntryParameterMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameter value.
func (o ApplicationListEntryParameterMemberOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationListEntryParameterMember) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationListEntryParameterMemberArrayOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryParameterMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryParameterMember)(nil)).Elem()
}

func (o ApplicationListEntryParameterMemberArrayOutput) ToApplicationListEntryParameterMemberArrayOutput() ApplicationListEntryParameterMemberArrayOutput {
	return o
}

func (o ApplicationListEntryParameterMemberArrayOutput) ToApplicationListEntryParameterMemberArrayOutputWithContext(ctx context.Context) ApplicationListEntryParameterMemberArrayOutput {
	return o
}

func (o ApplicationListEntryParameterMemberArrayOutput) Index(i pulumi.IntInput) ApplicationListEntryParameterMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationListEntryParameterMember {
		return vs[0].([]ApplicationListEntryParameterMember)[vs[1].(int)]
	}).(ApplicationListEntryParameterMemberOutput)
}

type ApplicationListEntryRisk struct {
	// Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).
	Level *int `pulumi:"level"`
}

// ApplicationListEntryRiskInput is an input type that accepts ApplicationListEntryRiskArgs and ApplicationListEntryRiskOutput values.
// You can construct a concrete instance of `ApplicationListEntryRiskInput` via:
//
//	ApplicationListEntryRiskArgs{...}
type ApplicationListEntryRiskInput interface {
	pulumi.Input

	ToApplicationListEntryRiskOutput() ApplicationListEntryRiskOutput
	ToApplicationListEntryRiskOutputWithContext(context.Context) ApplicationListEntryRiskOutput
}

type ApplicationListEntryRiskArgs struct {
	// Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).
	Level pulumi.IntPtrInput `pulumi:"level"`
}

func (ApplicationListEntryRiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryRisk)(nil)).Elem()
}

func (i ApplicationListEntryRiskArgs) ToApplicationListEntryRiskOutput() ApplicationListEntryRiskOutput {
	return i.ToApplicationListEntryRiskOutputWithContext(context.Background())
}

func (i ApplicationListEntryRiskArgs) ToApplicationListEntryRiskOutputWithContext(ctx context.Context) ApplicationListEntryRiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryRiskOutput)
}

// ApplicationListEntryRiskArrayInput is an input type that accepts ApplicationListEntryRiskArray and ApplicationListEntryRiskArrayOutput values.
// You can construct a concrete instance of `ApplicationListEntryRiskArrayInput` via:
//
//	ApplicationListEntryRiskArray{ ApplicationListEntryRiskArgs{...} }
type ApplicationListEntryRiskArrayInput interface {
	pulumi.Input

	ToApplicationListEntryRiskArrayOutput() ApplicationListEntryRiskArrayOutput
	ToApplicationListEntryRiskArrayOutputWithContext(context.Context) ApplicationListEntryRiskArrayOutput
}

type ApplicationListEntryRiskArray []ApplicationListEntryRiskInput

func (ApplicationListEntryRiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryRisk)(nil)).Elem()
}

func (i ApplicationListEntryRiskArray) ToApplicationListEntryRiskArrayOutput() ApplicationListEntryRiskArrayOutput {
	return i.ToApplicationListEntryRiskArrayOutputWithContext(context.Background())
}

func (i ApplicationListEntryRiskArray) ToApplicationListEntryRiskArrayOutputWithContext(ctx context.Context) ApplicationListEntryRiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntryRiskArrayOutput)
}

type ApplicationListEntryRiskOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryRiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntryRisk)(nil)).Elem()
}

func (o ApplicationListEntryRiskOutput) ToApplicationListEntryRiskOutput() ApplicationListEntryRiskOutput {
	return o
}

func (o ApplicationListEntryRiskOutput) ToApplicationListEntryRiskOutputWithContext(ctx context.Context) ApplicationListEntryRiskOutput {
	return o
}

// Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).
func (o ApplicationListEntryRiskOutput) Level() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntryRisk) *int { return v.Level }).(pulumi.IntPtrOutput)
}

type ApplicationListEntryRiskArrayOutput struct{ *pulumi.OutputState }

func (ApplicationListEntryRiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntryRisk)(nil)).Elem()
}

func (o ApplicationListEntryRiskArrayOutput) ToApplicationListEntryRiskArrayOutput() ApplicationListEntryRiskArrayOutput {
	return o
}

func (o ApplicationListEntryRiskArrayOutput) ToApplicationListEntryRiskArrayOutputWithContext(ctx context.Context) ApplicationListEntryRiskArrayOutput {
	return o
}

func (o ApplicationListEntryRiskArrayOutput) Index(i pulumi.IntInput) ApplicationListEntryRiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationListEntryRisk {
		return vs[0].([]ApplicationListEntryRisk)[vs[1].(int)]
	}).(ApplicationListEntryRiskOutput)
}

type ApplicationListEntrySubCategory struct {
	// Application sub-category ID.
	Id *int `pulumi:"id"`
}

// ApplicationListEntrySubCategoryInput is an input type that accepts ApplicationListEntrySubCategoryArgs and ApplicationListEntrySubCategoryOutput values.
// You can construct a concrete instance of `ApplicationListEntrySubCategoryInput` via:
//
//	ApplicationListEntrySubCategoryArgs{...}
type ApplicationListEntrySubCategoryInput interface {
	pulumi.Input

	ToApplicationListEntrySubCategoryOutput() ApplicationListEntrySubCategoryOutput
	ToApplicationListEntrySubCategoryOutputWithContext(context.Context) ApplicationListEntrySubCategoryOutput
}

type ApplicationListEntrySubCategoryArgs struct {
	// Application sub-category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ApplicationListEntrySubCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntrySubCategory)(nil)).Elem()
}

func (i ApplicationListEntrySubCategoryArgs) ToApplicationListEntrySubCategoryOutput() ApplicationListEntrySubCategoryOutput {
	return i.ToApplicationListEntrySubCategoryOutputWithContext(context.Background())
}

func (i ApplicationListEntrySubCategoryArgs) ToApplicationListEntrySubCategoryOutputWithContext(ctx context.Context) ApplicationListEntrySubCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntrySubCategoryOutput)
}

// ApplicationListEntrySubCategoryArrayInput is an input type that accepts ApplicationListEntrySubCategoryArray and ApplicationListEntrySubCategoryArrayOutput values.
// You can construct a concrete instance of `ApplicationListEntrySubCategoryArrayInput` via:
//
//	ApplicationListEntrySubCategoryArray{ ApplicationListEntrySubCategoryArgs{...} }
type ApplicationListEntrySubCategoryArrayInput interface {
	pulumi.Input

	ToApplicationListEntrySubCategoryArrayOutput() ApplicationListEntrySubCategoryArrayOutput
	ToApplicationListEntrySubCategoryArrayOutputWithContext(context.Context) ApplicationListEntrySubCategoryArrayOutput
}

type ApplicationListEntrySubCategoryArray []ApplicationListEntrySubCategoryInput

func (ApplicationListEntrySubCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntrySubCategory)(nil)).Elem()
}

func (i ApplicationListEntrySubCategoryArray) ToApplicationListEntrySubCategoryArrayOutput() ApplicationListEntrySubCategoryArrayOutput {
	return i.ToApplicationListEntrySubCategoryArrayOutputWithContext(context.Background())
}

func (i ApplicationListEntrySubCategoryArray) ToApplicationListEntrySubCategoryArrayOutputWithContext(ctx context.Context) ApplicationListEntrySubCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListEntrySubCategoryArrayOutput)
}

type ApplicationListEntrySubCategoryOutput struct{ *pulumi.OutputState }

func (ApplicationListEntrySubCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationListEntrySubCategory)(nil)).Elem()
}

func (o ApplicationListEntrySubCategoryOutput) ToApplicationListEntrySubCategoryOutput() ApplicationListEntrySubCategoryOutput {
	return o
}

func (o ApplicationListEntrySubCategoryOutput) ToApplicationListEntrySubCategoryOutputWithContext(ctx context.Context) ApplicationListEntrySubCategoryOutput {
	return o
}

// Application sub-category ID.
func (o ApplicationListEntrySubCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationListEntrySubCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ApplicationListEntrySubCategoryArrayOutput struct{ *pulumi.OutputState }

func (ApplicationListEntrySubCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationListEntrySubCategory)(nil)).Elem()
}

func (o ApplicationListEntrySubCategoryArrayOutput) ToApplicationListEntrySubCategoryArrayOutput() ApplicationListEntrySubCategoryArrayOutput {
	return o
}

func (o ApplicationListEntrySubCategoryArrayOutput) ToApplicationListEntrySubCategoryArrayOutputWithContext(ctx context.Context) ApplicationListEntrySubCategoryArrayOutput {
	return o
}

func (o ApplicationListEntrySubCategoryArrayOutput) Index(i pulumi.IntInput) ApplicationListEntrySubCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationListEntrySubCategory {
		return vs[0].([]ApplicationListEntrySubCategory)[vs[1].(int)]
	}).(ApplicationListEntrySubCategoryOutput)
}

type ApplicationNameMetadata struct {
	// ID.
	Id *int `pulumi:"id"`
	// Meta ID.
	Metaid *int `pulumi:"metaid"`
	// Value ID.
	Valueid *int `pulumi:"valueid"`
}

// ApplicationNameMetadataInput is an input type that accepts ApplicationNameMetadataArgs and ApplicationNameMetadataOutput values.
// You can construct a concrete instance of `ApplicationNameMetadataInput` via:
//
//	ApplicationNameMetadataArgs{...}
type ApplicationNameMetadataInput interface {
	pulumi.Input

	ToApplicationNameMetadataOutput() ApplicationNameMetadataOutput
	ToApplicationNameMetadataOutputWithContext(context.Context) ApplicationNameMetadataOutput
}

type ApplicationNameMetadataArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Meta ID.
	Metaid pulumi.IntPtrInput `pulumi:"metaid"`
	// Value ID.
	Valueid pulumi.IntPtrInput `pulumi:"valueid"`
}

func (ApplicationNameMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationNameMetadata)(nil)).Elem()
}

func (i ApplicationNameMetadataArgs) ToApplicationNameMetadataOutput() ApplicationNameMetadataOutput {
	return i.ToApplicationNameMetadataOutputWithContext(context.Background())
}

func (i ApplicationNameMetadataArgs) ToApplicationNameMetadataOutputWithContext(ctx context.Context) ApplicationNameMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationNameMetadataOutput)
}

// ApplicationNameMetadataArrayInput is an input type that accepts ApplicationNameMetadataArray and ApplicationNameMetadataArrayOutput values.
// You can construct a concrete instance of `ApplicationNameMetadataArrayInput` via:
//
//	ApplicationNameMetadataArray{ ApplicationNameMetadataArgs{...} }
type ApplicationNameMetadataArrayInput interface {
	pulumi.Input

	ToApplicationNameMetadataArrayOutput() ApplicationNameMetadataArrayOutput
	ToApplicationNameMetadataArrayOutputWithContext(context.Context) ApplicationNameMetadataArrayOutput
}

type ApplicationNameMetadataArray []ApplicationNameMetadataInput

func (ApplicationNameMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationNameMetadata)(nil)).Elem()
}

func (i ApplicationNameMetadataArray) ToApplicationNameMetadataArrayOutput() ApplicationNameMetadataArrayOutput {
	return i.ToApplicationNameMetadataArrayOutputWithContext(context.Background())
}

func (i ApplicationNameMetadataArray) ToApplicationNameMetadataArrayOutputWithContext(ctx context.Context) ApplicationNameMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationNameMetadataArrayOutput)
}

type ApplicationNameMetadataOutput struct{ *pulumi.OutputState }

func (ApplicationNameMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationNameMetadata)(nil)).Elem()
}

func (o ApplicationNameMetadataOutput) ToApplicationNameMetadataOutput() ApplicationNameMetadataOutput {
	return o
}

func (o ApplicationNameMetadataOutput) ToApplicationNameMetadataOutputWithContext(ctx context.Context) ApplicationNameMetadataOutput {
	return o
}

// ID.
func (o ApplicationNameMetadataOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationNameMetadata) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Meta ID.
func (o ApplicationNameMetadataOutput) Metaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationNameMetadata) *int { return v.Metaid }).(pulumi.IntPtrOutput)
}

// Value ID.
func (o ApplicationNameMetadataOutput) Valueid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationNameMetadata) *int { return v.Valueid }).(pulumi.IntPtrOutput)
}

type ApplicationNameMetadataArrayOutput struct{ *pulumi.OutputState }

func (ApplicationNameMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationNameMetadata)(nil)).Elem()
}

func (o ApplicationNameMetadataArrayOutput) ToApplicationNameMetadataArrayOutput() ApplicationNameMetadataArrayOutput {
	return o
}

func (o ApplicationNameMetadataArrayOutput) ToApplicationNameMetadataArrayOutputWithContext(ctx context.Context) ApplicationNameMetadataArrayOutput {
	return o
}

func (o ApplicationNameMetadataArrayOutput) Index(i pulumi.IntInput) ApplicationNameMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationNameMetadata {
		return vs[0].([]ApplicationNameMetadata)[vs[1].(int)]
	}).(ApplicationNameMetadataOutput)
}

type ApplicationNameParameter struct {
	// Parameter name.
	Name *string `pulumi:"name"`
}

// ApplicationNameParameterInput is an input type that accepts ApplicationNameParameterArgs and ApplicationNameParameterOutput values.
// You can construct a concrete instance of `ApplicationNameParameterInput` via:
//
//	ApplicationNameParameterArgs{...}
type ApplicationNameParameterInput interface {
	pulumi.Input

	ToApplicationNameParameterOutput() ApplicationNameParameterOutput
	ToApplicationNameParameterOutputWithContext(context.Context) ApplicationNameParameterOutput
}

type ApplicationNameParameterArgs struct {
	// Parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationNameParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationNameParameter)(nil)).Elem()
}

func (i ApplicationNameParameterArgs) ToApplicationNameParameterOutput() ApplicationNameParameterOutput {
	return i.ToApplicationNameParameterOutputWithContext(context.Background())
}

func (i ApplicationNameParameterArgs) ToApplicationNameParameterOutputWithContext(ctx context.Context) ApplicationNameParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationNameParameterOutput)
}

// ApplicationNameParameterArrayInput is an input type that accepts ApplicationNameParameterArray and ApplicationNameParameterArrayOutput values.
// You can construct a concrete instance of `ApplicationNameParameterArrayInput` via:
//
//	ApplicationNameParameterArray{ ApplicationNameParameterArgs{...} }
type ApplicationNameParameterArrayInput interface {
	pulumi.Input

	ToApplicationNameParameterArrayOutput() ApplicationNameParameterArrayOutput
	ToApplicationNameParameterArrayOutputWithContext(context.Context) ApplicationNameParameterArrayOutput
}

type ApplicationNameParameterArray []ApplicationNameParameterInput

func (ApplicationNameParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationNameParameter)(nil)).Elem()
}

func (i ApplicationNameParameterArray) ToApplicationNameParameterArrayOutput() ApplicationNameParameterArrayOutput {
	return i.ToApplicationNameParameterArrayOutputWithContext(context.Background())
}

func (i ApplicationNameParameterArray) ToApplicationNameParameterArrayOutputWithContext(ctx context.Context) ApplicationNameParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationNameParameterArrayOutput)
}

type ApplicationNameParameterOutput struct{ *pulumi.OutputState }

func (ApplicationNameParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationNameParameter)(nil)).Elem()
}

func (o ApplicationNameParameterOutput) ToApplicationNameParameterOutput() ApplicationNameParameterOutput {
	return o
}

func (o ApplicationNameParameterOutput) ToApplicationNameParameterOutputWithContext(ctx context.Context) ApplicationNameParameterOutput {
	return o
}

// Parameter name.
func (o ApplicationNameParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationNameParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationNameParameterArrayOutput struct{ *pulumi.OutputState }

func (ApplicationNameParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationNameParameter)(nil)).Elem()
}

func (o ApplicationNameParameterArrayOutput) ToApplicationNameParameterArrayOutput() ApplicationNameParameterArrayOutput {
	return o
}

func (o ApplicationNameParameterArrayOutput) ToApplicationNameParameterArrayOutputWithContext(ctx context.Context) ApplicationNameParameterArrayOutput {
	return o
}

func (o ApplicationNameParameterArrayOutput) Index(i pulumi.IntInput) ApplicationNameParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationNameParameter {
		return vs[0].([]ApplicationNameParameter)[vs[1].(int)]
	}).(ApplicationNameParameterOutput)
}

type AuthenticationRuleDstaddr6 struct {
	// Authentication rule name.
	Name *string `pulumi:"name"`
}

// AuthenticationRuleDstaddr6Input is an input type that accepts AuthenticationRuleDstaddr6Args and AuthenticationRuleDstaddr6Output values.
// You can construct a concrete instance of `AuthenticationRuleDstaddr6Input` via:
//
//	AuthenticationRuleDstaddr6Args{...}
type AuthenticationRuleDstaddr6Input interface {
	pulumi.Input

	ToAuthenticationRuleDstaddr6Output() AuthenticationRuleDstaddr6Output
	ToAuthenticationRuleDstaddr6OutputWithContext(context.Context) AuthenticationRuleDstaddr6Output
}

type AuthenticationRuleDstaddr6Args struct {
	// Authentication rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthenticationRuleDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationRuleDstaddr6)(nil)).Elem()
}

func (i AuthenticationRuleDstaddr6Args) ToAuthenticationRuleDstaddr6Output() AuthenticationRuleDstaddr6Output {
	return i.ToAuthenticationRuleDstaddr6OutputWithContext(context.Background())
}

func (i AuthenticationRuleDstaddr6Args) ToAuthenticationRuleDstaddr6OutputWithContext(ctx context.Context) AuthenticationRuleDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationRuleDstaddr6Output)
}

// AuthenticationRuleDstaddr6ArrayInput is an input type that accepts AuthenticationRuleDstaddr6Array and AuthenticationRuleDstaddr6ArrayOutput values.
// You can construct a concrete instance of `AuthenticationRuleDstaddr6ArrayInput` via:
//
//	AuthenticationRuleDstaddr6Array{ AuthenticationRuleDstaddr6Args{...} }
type AuthenticationRuleDstaddr6ArrayInput interface {
	pulumi.Input

	ToAuthenticationRuleDstaddr6ArrayOutput() AuthenticationRuleDstaddr6ArrayOutput
	ToAuthenticationRuleDstaddr6ArrayOutputWithContext(context.Context) AuthenticationRuleDstaddr6ArrayOutput
}

type AuthenticationRuleDstaddr6Array []AuthenticationRuleDstaddr6Input

func (AuthenticationRuleDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationRuleDstaddr6)(nil)).Elem()
}

func (i AuthenticationRuleDstaddr6Array) ToAuthenticationRuleDstaddr6ArrayOutput() AuthenticationRuleDstaddr6ArrayOutput {
	return i.ToAuthenticationRuleDstaddr6ArrayOutputWithContext(context.Background())
}

func (i AuthenticationRuleDstaddr6Array) ToAuthenticationRuleDstaddr6ArrayOutputWithContext(ctx context.Context) AuthenticationRuleDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationRuleDstaddr6ArrayOutput)
}

type AuthenticationRuleDstaddr6Output struct{ *pulumi.OutputState }

func (AuthenticationRuleDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationRuleDstaddr6)(nil)).Elem()
}

func (o AuthenticationRuleDstaddr6Output) ToAuthenticationRuleDstaddr6Output() AuthenticationRuleDstaddr6Output {
	return o
}

func (o AuthenticationRuleDstaddr6Output) ToAuthenticationRuleDstaddr6OutputWithContext(ctx context.Context) AuthenticationRuleDstaddr6Output {
	return o
}

// Authentication rule name.
func (o AuthenticationRuleDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationRuleDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthenticationRuleDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationRuleDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationRuleDstaddr6)(nil)).Elem()
}

func (o AuthenticationRuleDstaddr6ArrayOutput) ToAuthenticationRuleDstaddr6ArrayOutput() AuthenticationRuleDstaddr6ArrayOutput {
	return o
}

func (o AuthenticationRuleDstaddr6ArrayOutput) ToAuthenticationRuleDstaddr6ArrayOutputWithContext(ctx context.Context) AuthenticationRuleDstaddr6ArrayOutput {
	return o
}

func (o AuthenticationRuleDstaddr6ArrayOutput) Index(i pulumi.IntInput) AuthenticationRuleDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthenticationRuleDstaddr6 {
		return vs[0].([]AuthenticationRuleDstaddr6)[vs[1].(int)]
	}).(AuthenticationRuleDstaddr6Output)
}

type AuthenticationRuleDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// AuthenticationRuleDstaddrInput is an input type that accepts AuthenticationRuleDstaddrArgs and AuthenticationRuleDstaddrOutput values.
// You can construct a concrete instance of `AuthenticationRuleDstaddrInput` via:
//
//	AuthenticationRuleDstaddrArgs{...}
type AuthenticationRuleDstaddrInput interface {
	pulumi.Input

	ToAuthenticationRuleDstaddrOutput() AuthenticationRuleDstaddrOutput
	ToAuthenticationRuleDstaddrOutputWithContext(context.Context) AuthenticationRuleDstaddrOutput
}

type AuthenticationRuleDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthenticationRuleDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationRuleDstaddr)(nil)).Elem()
}

func (i AuthenticationRuleDstaddrArgs) ToAuthenticationRuleDstaddrOutput() AuthenticationRuleDstaddrOutput {
	return i.ToAuthenticationRuleDstaddrOutputWithContext(context.Background())
}

func (i AuthenticationRuleDstaddrArgs) ToAuthenticationRuleDstaddrOutputWithContext(ctx context.Context) AuthenticationRuleDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationRuleDstaddrOutput)
}

// AuthenticationRuleDstaddrArrayInput is an input type that accepts AuthenticationRuleDstaddrArray and AuthenticationRuleDstaddrArrayOutput values.
// You can construct a concrete instance of `AuthenticationRuleDstaddrArrayInput` via:
//
//	AuthenticationRuleDstaddrArray{ AuthenticationRuleDstaddrArgs{...} }
type AuthenticationRuleDstaddrArrayInput interface {
	pulumi.Input

	ToAuthenticationRuleDstaddrArrayOutput() AuthenticationRuleDstaddrArrayOutput
	ToAuthenticationRuleDstaddrArrayOutputWithContext(context.Context) AuthenticationRuleDstaddrArrayOutput
}

type AuthenticationRuleDstaddrArray []AuthenticationRuleDstaddrInput

func (AuthenticationRuleDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationRuleDstaddr)(nil)).Elem()
}

func (i AuthenticationRuleDstaddrArray) ToAuthenticationRuleDstaddrArrayOutput() AuthenticationRuleDstaddrArrayOutput {
	return i.ToAuthenticationRuleDstaddrArrayOutputWithContext(context.Background())
}

func (i AuthenticationRuleDstaddrArray) ToAuthenticationRuleDstaddrArrayOutputWithContext(ctx context.Context) AuthenticationRuleDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationRuleDstaddrArrayOutput)
}

type AuthenticationRuleDstaddrOutput struct{ *pulumi.OutputState }

func (AuthenticationRuleDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationRuleDstaddr)(nil)).Elem()
}

func (o AuthenticationRuleDstaddrOutput) ToAuthenticationRuleDstaddrOutput() AuthenticationRuleDstaddrOutput {
	return o
}

func (o AuthenticationRuleDstaddrOutput) ToAuthenticationRuleDstaddrOutputWithContext(ctx context.Context) AuthenticationRuleDstaddrOutput {
	return o
}

// Address name.
func (o AuthenticationRuleDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationRuleDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthenticationRuleDstaddrArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationRuleDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationRuleDstaddr)(nil)).Elem()
}

func (o AuthenticationRuleDstaddrArrayOutput) ToAuthenticationRuleDstaddrArrayOutput() AuthenticationRuleDstaddrArrayOutput {
	return o
}

func (o AuthenticationRuleDstaddrArrayOutput) ToAuthenticationRuleDstaddrArrayOutputWithContext(ctx context.Context) AuthenticationRuleDstaddrArrayOutput {
	return o
}

func (o AuthenticationRuleDstaddrArrayOutput) Index(i pulumi.IntInput) AuthenticationRuleDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthenticationRuleDstaddr {
		return vs[0].([]AuthenticationRuleDstaddr)[vs[1].(int)]
	}).(AuthenticationRuleDstaddrOutput)
}

type AuthenticationRuleSrcaddr6 struct {
	// Authentication rule name.
	Name *string `pulumi:"name"`
}

// AuthenticationRuleSrcaddr6Input is an input type that accepts AuthenticationRuleSrcaddr6Args and AuthenticationRuleSrcaddr6Output values.
// You can construct a concrete instance of `AuthenticationRuleSrcaddr6Input` via:
//
//	AuthenticationRuleSrcaddr6Args{...}
type AuthenticationRuleSrcaddr6Input interface {
	pulumi.Input

	ToAuthenticationRuleSrcaddr6Output() AuthenticationRuleSrcaddr6Output
	ToAuthenticationRuleSrcaddr6OutputWithContext(context.Context) AuthenticationRuleSrcaddr6Output
}

type AuthenticationRuleSrcaddr6Args struct {
	// Authentication rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthenticationRuleSrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationRuleSrcaddr6)(nil)).Elem()
}

func (i AuthenticationRuleSrcaddr6Args) ToAuthenticationRuleSrcaddr6Output() AuthenticationRuleSrcaddr6Output {
	return i.ToAuthenticationRuleSrcaddr6OutputWithContext(context.Background())
}

func (i AuthenticationRuleSrcaddr6Args) ToAuthenticationRuleSrcaddr6OutputWithContext(ctx context.Context) AuthenticationRuleSrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationRuleSrcaddr6Output)
}

// AuthenticationRuleSrcaddr6ArrayInput is an input type that accepts AuthenticationRuleSrcaddr6Array and AuthenticationRuleSrcaddr6ArrayOutput values.
// You can construct a concrete instance of `AuthenticationRuleSrcaddr6ArrayInput` via:
//
//	AuthenticationRuleSrcaddr6Array{ AuthenticationRuleSrcaddr6Args{...} }
type AuthenticationRuleSrcaddr6ArrayInput interface {
	pulumi.Input

	ToAuthenticationRuleSrcaddr6ArrayOutput() AuthenticationRuleSrcaddr6ArrayOutput
	ToAuthenticationRuleSrcaddr6ArrayOutputWithContext(context.Context) AuthenticationRuleSrcaddr6ArrayOutput
}

type AuthenticationRuleSrcaddr6Array []AuthenticationRuleSrcaddr6Input

func (AuthenticationRuleSrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationRuleSrcaddr6)(nil)).Elem()
}

func (i AuthenticationRuleSrcaddr6Array) ToAuthenticationRuleSrcaddr6ArrayOutput() AuthenticationRuleSrcaddr6ArrayOutput {
	return i.ToAuthenticationRuleSrcaddr6ArrayOutputWithContext(context.Background())
}

func (i AuthenticationRuleSrcaddr6Array) ToAuthenticationRuleSrcaddr6ArrayOutputWithContext(ctx context.Context) AuthenticationRuleSrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationRuleSrcaddr6ArrayOutput)
}

type AuthenticationRuleSrcaddr6Output struct{ *pulumi.OutputState }

func (AuthenticationRuleSrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationRuleSrcaddr6)(nil)).Elem()
}

func (o AuthenticationRuleSrcaddr6Output) ToAuthenticationRuleSrcaddr6Output() AuthenticationRuleSrcaddr6Output {
	return o
}

func (o AuthenticationRuleSrcaddr6Output) ToAuthenticationRuleSrcaddr6OutputWithContext(ctx context.Context) AuthenticationRuleSrcaddr6Output {
	return o
}

// Authentication rule name.
func (o AuthenticationRuleSrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationRuleSrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthenticationRuleSrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationRuleSrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationRuleSrcaddr6)(nil)).Elem()
}

func (o AuthenticationRuleSrcaddr6ArrayOutput) ToAuthenticationRuleSrcaddr6ArrayOutput() AuthenticationRuleSrcaddr6ArrayOutput {
	return o
}

func (o AuthenticationRuleSrcaddr6ArrayOutput) ToAuthenticationRuleSrcaddr6ArrayOutputWithContext(ctx context.Context) AuthenticationRuleSrcaddr6ArrayOutput {
	return o
}

func (o AuthenticationRuleSrcaddr6ArrayOutput) Index(i pulumi.IntInput) AuthenticationRuleSrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthenticationRuleSrcaddr6 {
		return vs[0].([]AuthenticationRuleSrcaddr6)[vs[1].(int)]
	}).(AuthenticationRuleSrcaddr6Output)
}

type AuthenticationRuleSrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// AuthenticationRuleSrcaddrInput is an input type that accepts AuthenticationRuleSrcaddrArgs and AuthenticationRuleSrcaddrOutput values.
// You can construct a concrete instance of `AuthenticationRuleSrcaddrInput` via:
//
//	AuthenticationRuleSrcaddrArgs{...}
type AuthenticationRuleSrcaddrInput interface {
	pulumi.Input

	ToAuthenticationRuleSrcaddrOutput() AuthenticationRuleSrcaddrOutput
	ToAuthenticationRuleSrcaddrOutputWithContext(context.Context) AuthenticationRuleSrcaddrOutput
}

type AuthenticationRuleSrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthenticationRuleSrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationRuleSrcaddr)(nil)).Elem()
}

func (i AuthenticationRuleSrcaddrArgs) ToAuthenticationRuleSrcaddrOutput() AuthenticationRuleSrcaddrOutput {
	return i.ToAuthenticationRuleSrcaddrOutputWithContext(context.Background())
}

func (i AuthenticationRuleSrcaddrArgs) ToAuthenticationRuleSrcaddrOutputWithContext(ctx context.Context) AuthenticationRuleSrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationRuleSrcaddrOutput)
}

// AuthenticationRuleSrcaddrArrayInput is an input type that accepts AuthenticationRuleSrcaddrArray and AuthenticationRuleSrcaddrArrayOutput values.
// You can construct a concrete instance of `AuthenticationRuleSrcaddrArrayInput` via:
//
//	AuthenticationRuleSrcaddrArray{ AuthenticationRuleSrcaddrArgs{...} }
type AuthenticationRuleSrcaddrArrayInput interface {
	pulumi.Input

	ToAuthenticationRuleSrcaddrArrayOutput() AuthenticationRuleSrcaddrArrayOutput
	ToAuthenticationRuleSrcaddrArrayOutputWithContext(context.Context) AuthenticationRuleSrcaddrArrayOutput
}

type AuthenticationRuleSrcaddrArray []AuthenticationRuleSrcaddrInput

func (AuthenticationRuleSrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationRuleSrcaddr)(nil)).Elem()
}

func (i AuthenticationRuleSrcaddrArray) ToAuthenticationRuleSrcaddrArrayOutput() AuthenticationRuleSrcaddrArrayOutput {
	return i.ToAuthenticationRuleSrcaddrArrayOutputWithContext(context.Background())
}

func (i AuthenticationRuleSrcaddrArray) ToAuthenticationRuleSrcaddrArrayOutputWithContext(ctx context.Context) AuthenticationRuleSrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationRuleSrcaddrArrayOutput)
}

type AuthenticationRuleSrcaddrOutput struct{ *pulumi.OutputState }

func (AuthenticationRuleSrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationRuleSrcaddr)(nil)).Elem()
}

func (o AuthenticationRuleSrcaddrOutput) ToAuthenticationRuleSrcaddrOutput() AuthenticationRuleSrcaddrOutput {
	return o
}

func (o AuthenticationRuleSrcaddrOutput) ToAuthenticationRuleSrcaddrOutputWithContext(ctx context.Context) AuthenticationRuleSrcaddrOutput {
	return o
}

// Address name.
func (o AuthenticationRuleSrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationRuleSrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthenticationRuleSrcaddrArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationRuleSrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationRuleSrcaddr)(nil)).Elem()
}

func (o AuthenticationRuleSrcaddrArrayOutput) ToAuthenticationRuleSrcaddrArrayOutput() AuthenticationRuleSrcaddrArrayOutput {
	return o
}

func (o AuthenticationRuleSrcaddrArrayOutput) ToAuthenticationRuleSrcaddrArrayOutputWithContext(ctx context.Context) AuthenticationRuleSrcaddrArrayOutput {
	return o
}

func (o AuthenticationRuleSrcaddrArrayOutput) Index(i pulumi.IntInput) AuthenticationRuleSrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthenticationRuleSrcaddr {
		return vs[0].([]AuthenticationRuleSrcaddr)[vs[1].(int)]
	}).(AuthenticationRuleSrcaddrOutput)
}

type AuthenticationRuleSrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// AuthenticationRuleSrcintfInput is an input type that accepts AuthenticationRuleSrcintfArgs and AuthenticationRuleSrcintfOutput values.
// You can construct a concrete instance of `AuthenticationRuleSrcintfInput` via:
//
//	AuthenticationRuleSrcintfArgs{...}
type AuthenticationRuleSrcintfInput interface {
	pulumi.Input

	ToAuthenticationRuleSrcintfOutput() AuthenticationRuleSrcintfOutput
	ToAuthenticationRuleSrcintfOutputWithContext(context.Context) AuthenticationRuleSrcintfOutput
}

type AuthenticationRuleSrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthenticationRuleSrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationRuleSrcintf)(nil)).Elem()
}

func (i AuthenticationRuleSrcintfArgs) ToAuthenticationRuleSrcintfOutput() AuthenticationRuleSrcintfOutput {
	return i.ToAuthenticationRuleSrcintfOutputWithContext(context.Background())
}

func (i AuthenticationRuleSrcintfArgs) ToAuthenticationRuleSrcintfOutputWithContext(ctx context.Context) AuthenticationRuleSrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationRuleSrcintfOutput)
}

// AuthenticationRuleSrcintfArrayInput is an input type that accepts AuthenticationRuleSrcintfArray and AuthenticationRuleSrcintfArrayOutput values.
// You can construct a concrete instance of `AuthenticationRuleSrcintfArrayInput` via:
//
//	AuthenticationRuleSrcintfArray{ AuthenticationRuleSrcintfArgs{...} }
type AuthenticationRuleSrcintfArrayInput interface {
	pulumi.Input

	ToAuthenticationRuleSrcintfArrayOutput() AuthenticationRuleSrcintfArrayOutput
	ToAuthenticationRuleSrcintfArrayOutputWithContext(context.Context) AuthenticationRuleSrcintfArrayOutput
}

type AuthenticationRuleSrcintfArray []AuthenticationRuleSrcintfInput

func (AuthenticationRuleSrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationRuleSrcintf)(nil)).Elem()
}

func (i AuthenticationRuleSrcintfArray) ToAuthenticationRuleSrcintfArrayOutput() AuthenticationRuleSrcintfArrayOutput {
	return i.ToAuthenticationRuleSrcintfArrayOutputWithContext(context.Background())
}

func (i AuthenticationRuleSrcintfArray) ToAuthenticationRuleSrcintfArrayOutputWithContext(ctx context.Context) AuthenticationRuleSrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationRuleSrcintfArrayOutput)
}

type AuthenticationRuleSrcintfOutput struct{ *pulumi.OutputState }

func (AuthenticationRuleSrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationRuleSrcintf)(nil)).Elem()
}

func (o AuthenticationRuleSrcintfOutput) ToAuthenticationRuleSrcintfOutput() AuthenticationRuleSrcintfOutput {
	return o
}

func (o AuthenticationRuleSrcintfOutput) ToAuthenticationRuleSrcintfOutputWithContext(ctx context.Context) AuthenticationRuleSrcintfOutput {
	return o
}

// Interface name.
func (o AuthenticationRuleSrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationRuleSrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthenticationRuleSrcintfArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationRuleSrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationRuleSrcintf)(nil)).Elem()
}

func (o AuthenticationRuleSrcintfArrayOutput) ToAuthenticationRuleSrcintfArrayOutput() AuthenticationRuleSrcintfArrayOutput {
	return o
}

func (o AuthenticationRuleSrcintfArrayOutput) ToAuthenticationRuleSrcintfArrayOutputWithContext(ctx context.Context) AuthenticationRuleSrcintfArrayOutput {
	return o
}

func (o AuthenticationRuleSrcintfArrayOutput) Index(i pulumi.IntInput) AuthenticationRuleSrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthenticationRuleSrcintf {
		return vs[0].([]AuthenticationRuleSrcintf)[vs[1].(int)]
	}).(AuthenticationRuleSrcintfOutput)
}

type AuthenticationSchemeUserDatabase struct {
	// Authentication server name.
	Name *string `pulumi:"name"`
}

// AuthenticationSchemeUserDatabaseInput is an input type that accepts AuthenticationSchemeUserDatabaseArgs and AuthenticationSchemeUserDatabaseOutput values.
// You can construct a concrete instance of `AuthenticationSchemeUserDatabaseInput` via:
//
//	AuthenticationSchemeUserDatabaseArgs{...}
type AuthenticationSchemeUserDatabaseInput interface {
	pulumi.Input

	ToAuthenticationSchemeUserDatabaseOutput() AuthenticationSchemeUserDatabaseOutput
	ToAuthenticationSchemeUserDatabaseOutputWithContext(context.Context) AuthenticationSchemeUserDatabaseOutput
}

type AuthenticationSchemeUserDatabaseArgs struct {
	// Authentication server name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthenticationSchemeUserDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSchemeUserDatabase)(nil)).Elem()
}

func (i AuthenticationSchemeUserDatabaseArgs) ToAuthenticationSchemeUserDatabaseOutput() AuthenticationSchemeUserDatabaseOutput {
	return i.ToAuthenticationSchemeUserDatabaseOutputWithContext(context.Background())
}

func (i AuthenticationSchemeUserDatabaseArgs) ToAuthenticationSchemeUserDatabaseOutputWithContext(ctx context.Context) AuthenticationSchemeUserDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSchemeUserDatabaseOutput)
}

// AuthenticationSchemeUserDatabaseArrayInput is an input type that accepts AuthenticationSchemeUserDatabaseArray and AuthenticationSchemeUserDatabaseArrayOutput values.
// You can construct a concrete instance of `AuthenticationSchemeUserDatabaseArrayInput` via:
//
//	AuthenticationSchemeUserDatabaseArray{ AuthenticationSchemeUserDatabaseArgs{...} }
type AuthenticationSchemeUserDatabaseArrayInput interface {
	pulumi.Input

	ToAuthenticationSchemeUserDatabaseArrayOutput() AuthenticationSchemeUserDatabaseArrayOutput
	ToAuthenticationSchemeUserDatabaseArrayOutputWithContext(context.Context) AuthenticationSchemeUserDatabaseArrayOutput
}

type AuthenticationSchemeUserDatabaseArray []AuthenticationSchemeUserDatabaseInput

func (AuthenticationSchemeUserDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationSchemeUserDatabase)(nil)).Elem()
}

func (i AuthenticationSchemeUserDatabaseArray) ToAuthenticationSchemeUserDatabaseArrayOutput() AuthenticationSchemeUserDatabaseArrayOutput {
	return i.ToAuthenticationSchemeUserDatabaseArrayOutputWithContext(context.Background())
}

func (i AuthenticationSchemeUserDatabaseArray) ToAuthenticationSchemeUserDatabaseArrayOutputWithContext(ctx context.Context) AuthenticationSchemeUserDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSchemeUserDatabaseArrayOutput)
}

type AuthenticationSchemeUserDatabaseOutput struct{ *pulumi.OutputState }

func (AuthenticationSchemeUserDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSchemeUserDatabase)(nil)).Elem()
}

func (o AuthenticationSchemeUserDatabaseOutput) ToAuthenticationSchemeUserDatabaseOutput() AuthenticationSchemeUserDatabaseOutput {
	return o
}

func (o AuthenticationSchemeUserDatabaseOutput) ToAuthenticationSchemeUserDatabaseOutputWithContext(ctx context.Context) AuthenticationSchemeUserDatabaseOutput {
	return o
}

// Authentication server name.
func (o AuthenticationSchemeUserDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationSchemeUserDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthenticationSchemeUserDatabaseArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationSchemeUserDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationSchemeUserDatabase)(nil)).Elem()
}

func (o AuthenticationSchemeUserDatabaseArrayOutput) ToAuthenticationSchemeUserDatabaseArrayOutput() AuthenticationSchemeUserDatabaseArrayOutput {
	return o
}

func (o AuthenticationSchemeUserDatabaseArrayOutput) ToAuthenticationSchemeUserDatabaseArrayOutputWithContext(ctx context.Context) AuthenticationSchemeUserDatabaseArrayOutput {
	return o
}

func (o AuthenticationSchemeUserDatabaseArrayOutput) Index(i pulumi.IntInput) AuthenticationSchemeUserDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthenticationSchemeUserDatabase {
		return vs[0].([]AuthenticationSchemeUserDatabase)[vs[1].(int)]
	}).(AuthenticationSchemeUserDatabaseOutput)
}

type AuthenticationSettingDevRange struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// AuthenticationSettingDevRangeInput is an input type that accepts AuthenticationSettingDevRangeArgs and AuthenticationSettingDevRangeOutput values.
// You can construct a concrete instance of `AuthenticationSettingDevRangeInput` via:
//
//	AuthenticationSettingDevRangeArgs{...}
type AuthenticationSettingDevRangeInput interface {
	pulumi.Input

	ToAuthenticationSettingDevRangeOutput() AuthenticationSettingDevRangeOutput
	ToAuthenticationSettingDevRangeOutputWithContext(context.Context) AuthenticationSettingDevRangeOutput
}

type AuthenticationSettingDevRangeArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthenticationSettingDevRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingDevRange)(nil)).Elem()
}

func (i AuthenticationSettingDevRangeArgs) ToAuthenticationSettingDevRangeOutput() AuthenticationSettingDevRangeOutput {
	return i.ToAuthenticationSettingDevRangeOutputWithContext(context.Background())
}

func (i AuthenticationSettingDevRangeArgs) ToAuthenticationSettingDevRangeOutputWithContext(ctx context.Context) AuthenticationSettingDevRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingDevRangeOutput)
}

// AuthenticationSettingDevRangeArrayInput is an input type that accepts AuthenticationSettingDevRangeArray and AuthenticationSettingDevRangeArrayOutput values.
// You can construct a concrete instance of `AuthenticationSettingDevRangeArrayInput` via:
//
//	AuthenticationSettingDevRangeArray{ AuthenticationSettingDevRangeArgs{...} }
type AuthenticationSettingDevRangeArrayInput interface {
	pulumi.Input

	ToAuthenticationSettingDevRangeArrayOutput() AuthenticationSettingDevRangeArrayOutput
	ToAuthenticationSettingDevRangeArrayOutputWithContext(context.Context) AuthenticationSettingDevRangeArrayOutput
}

type AuthenticationSettingDevRangeArray []AuthenticationSettingDevRangeInput

func (AuthenticationSettingDevRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationSettingDevRange)(nil)).Elem()
}

func (i AuthenticationSettingDevRangeArray) ToAuthenticationSettingDevRangeArrayOutput() AuthenticationSettingDevRangeArrayOutput {
	return i.ToAuthenticationSettingDevRangeArrayOutputWithContext(context.Background())
}

func (i AuthenticationSettingDevRangeArray) ToAuthenticationSettingDevRangeArrayOutputWithContext(ctx context.Context) AuthenticationSettingDevRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingDevRangeArrayOutput)
}

type AuthenticationSettingDevRangeOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingDevRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingDevRange)(nil)).Elem()
}

func (o AuthenticationSettingDevRangeOutput) ToAuthenticationSettingDevRangeOutput() AuthenticationSettingDevRangeOutput {
	return o
}

func (o AuthenticationSettingDevRangeOutput) ToAuthenticationSettingDevRangeOutputWithContext(ctx context.Context) AuthenticationSettingDevRangeOutput {
	return o
}

// Address name.
func (o AuthenticationSettingDevRangeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationSettingDevRange) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthenticationSettingDevRangeArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingDevRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationSettingDevRange)(nil)).Elem()
}

func (o AuthenticationSettingDevRangeArrayOutput) ToAuthenticationSettingDevRangeArrayOutput() AuthenticationSettingDevRangeArrayOutput {
	return o
}

func (o AuthenticationSettingDevRangeArrayOutput) ToAuthenticationSettingDevRangeArrayOutputWithContext(ctx context.Context) AuthenticationSettingDevRangeArrayOutput {
	return o
}

func (o AuthenticationSettingDevRangeArrayOutput) Index(i pulumi.IntInput) AuthenticationSettingDevRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthenticationSettingDevRange {
		return vs[0].([]AuthenticationSettingDevRange)[vs[1].(int)]
	}).(AuthenticationSettingDevRangeOutput)
}

type AuthenticationSettingUserCertCa struct {
	// CA certificate list.
	Name *string `pulumi:"name"`
}

// AuthenticationSettingUserCertCaInput is an input type that accepts AuthenticationSettingUserCertCaArgs and AuthenticationSettingUserCertCaOutput values.
// You can construct a concrete instance of `AuthenticationSettingUserCertCaInput` via:
//
//	AuthenticationSettingUserCertCaArgs{...}
type AuthenticationSettingUserCertCaInput interface {
	pulumi.Input

	ToAuthenticationSettingUserCertCaOutput() AuthenticationSettingUserCertCaOutput
	ToAuthenticationSettingUserCertCaOutputWithContext(context.Context) AuthenticationSettingUserCertCaOutput
}

type AuthenticationSettingUserCertCaArgs struct {
	// CA certificate list.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthenticationSettingUserCertCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingUserCertCa)(nil)).Elem()
}

func (i AuthenticationSettingUserCertCaArgs) ToAuthenticationSettingUserCertCaOutput() AuthenticationSettingUserCertCaOutput {
	return i.ToAuthenticationSettingUserCertCaOutputWithContext(context.Background())
}

func (i AuthenticationSettingUserCertCaArgs) ToAuthenticationSettingUserCertCaOutputWithContext(ctx context.Context) AuthenticationSettingUserCertCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingUserCertCaOutput)
}

// AuthenticationSettingUserCertCaArrayInput is an input type that accepts AuthenticationSettingUserCertCaArray and AuthenticationSettingUserCertCaArrayOutput values.
// You can construct a concrete instance of `AuthenticationSettingUserCertCaArrayInput` via:
//
//	AuthenticationSettingUserCertCaArray{ AuthenticationSettingUserCertCaArgs{...} }
type AuthenticationSettingUserCertCaArrayInput interface {
	pulumi.Input

	ToAuthenticationSettingUserCertCaArrayOutput() AuthenticationSettingUserCertCaArrayOutput
	ToAuthenticationSettingUserCertCaArrayOutputWithContext(context.Context) AuthenticationSettingUserCertCaArrayOutput
}

type AuthenticationSettingUserCertCaArray []AuthenticationSettingUserCertCaInput

func (AuthenticationSettingUserCertCaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationSettingUserCertCa)(nil)).Elem()
}

func (i AuthenticationSettingUserCertCaArray) ToAuthenticationSettingUserCertCaArrayOutput() AuthenticationSettingUserCertCaArrayOutput {
	return i.ToAuthenticationSettingUserCertCaArrayOutputWithContext(context.Background())
}

func (i AuthenticationSettingUserCertCaArray) ToAuthenticationSettingUserCertCaArrayOutputWithContext(ctx context.Context) AuthenticationSettingUserCertCaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingUserCertCaArrayOutput)
}

type AuthenticationSettingUserCertCaOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingUserCertCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingUserCertCa)(nil)).Elem()
}

func (o AuthenticationSettingUserCertCaOutput) ToAuthenticationSettingUserCertCaOutput() AuthenticationSettingUserCertCaOutput {
	return o
}

func (o AuthenticationSettingUserCertCaOutput) ToAuthenticationSettingUserCertCaOutputWithContext(ctx context.Context) AuthenticationSettingUserCertCaOutput {
	return o
}

// CA certificate list.
func (o AuthenticationSettingUserCertCaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationSettingUserCertCa) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthenticationSettingUserCertCaArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingUserCertCaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationSettingUserCertCa)(nil)).Elem()
}

func (o AuthenticationSettingUserCertCaArrayOutput) ToAuthenticationSettingUserCertCaArrayOutput() AuthenticationSettingUserCertCaArrayOutput {
	return o
}

func (o AuthenticationSettingUserCertCaArrayOutput) ToAuthenticationSettingUserCertCaArrayOutputWithContext(ctx context.Context) AuthenticationSettingUserCertCaArrayOutput {
	return o
}

func (o AuthenticationSettingUserCertCaArrayOutput) Index(i pulumi.IntInput) AuthenticationSettingUserCertCaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthenticationSettingUserCertCa {
		return vs[0].([]AuthenticationSettingUserCertCa)[vs[1].(int)]
	}).(AuthenticationSettingUserCertCaOutput)
}

type CifsProfileFileFilter struct {
	// File filter entries. The structure of `entries` block is documented below.
	Entries []CifsProfileFileFilterEntry `pulumi:"entries"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable file filter. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// CifsProfileFileFilterInput is an input type that accepts CifsProfileFileFilterArgs and CifsProfileFileFilterOutput values.
// You can construct a concrete instance of `CifsProfileFileFilterInput` via:
//
//	CifsProfileFileFilterArgs{...}
type CifsProfileFileFilterInput interface {
	pulumi.Input

	ToCifsProfileFileFilterOutput() CifsProfileFileFilterOutput
	ToCifsProfileFileFilterOutputWithContext(context.Context) CifsProfileFileFilterOutput
}

type CifsProfileFileFilterArgs struct {
	// File filter entries. The structure of `entries` block is documented below.
	Entries CifsProfileFileFilterEntryArrayInput `pulumi:"entries"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable file filter. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (CifsProfileFileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CifsProfileFileFilter)(nil)).Elem()
}

func (i CifsProfileFileFilterArgs) ToCifsProfileFileFilterOutput() CifsProfileFileFilterOutput {
	return i.ToCifsProfileFileFilterOutputWithContext(context.Background())
}

func (i CifsProfileFileFilterArgs) ToCifsProfileFileFilterOutputWithContext(ctx context.Context) CifsProfileFileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CifsProfileFileFilterOutput)
}

func (i CifsProfileFileFilterArgs) ToCifsProfileFileFilterPtrOutput() CifsProfileFileFilterPtrOutput {
	return i.ToCifsProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i CifsProfileFileFilterArgs) ToCifsProfileFileFilterPtrOutputWithContext(ctx context.Context) CifsProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CifsProfileFileFilterOutput).ToCifsProfileFileFilterPtrOutputWithContext(ctx)
}

// CifsProfileFileFilterPtrInput is an input type that accepts CifsProfileFileFilterArgs, CifsProfileFileFilterPtr and CifsProfileFileFilterPtrOutput values.
// You can construct a concrete instance of `CifsProfileFileFilterPtrInput` via:
//
//	        CifsProfileFileFilterArgs{...}
//
//	or:
//
//	        nil
type CifsProfileFileFilterPtrInput interface {
	pulumi.Input

	ToCifsProfileFileFilterPtrOutput() CifsProfileFileFilterPtrOutput
	ToCifsProfileFileFilterPtrOutputWithContext(context.Context) CifsProfileFileFilterPtrOutput
}

type cifsProfileFileFilterPtrType CifsProfileFileFilterArgs

func CifsProfileFileFilterPtr(v *CifsProfileFileFilterArgs) CifsProfileFileFilterPtrInput {
	return (*cifsProfileFileFilterPtrType)(v)
}

func (*cifsProfileFileFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CifsProfileFileFilter)(nil)).Elem()
}

func (i *cifsProfileFileFilterPtrType) ToCifsProfileFileFilterPtrOutput() CifsProfileFileFilterPtrOutput {
	return i.ToCifsProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i *cifsProfileFileFilterPtrType) ToCifsProfileFileFilterPtrOutputWithContext(ctx context.Context) CifsProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CifsProfileFileFilterPtrOutput)
}

type CifsProfileFileFilterOutput struct{ *pulumi.OutputState }

func (CifsProfileFileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CifsProfileFileFilter)(nil)).Elem()
}

func (o CifsProfileFileFilterOutput) ToCifsProfileFileFilterOutput() CifsProfileFileFilterOutput {
	return o
}

func (o CifsProfileFileFilterOutput) ToCifsProfileFileFilterOutputWithContext(ctx context.Context) CifsProfileFileFilterOutput {
	return o
}

func (o CifsProfileFileFilterOutput) ToCifsProfileFileFilterPtrOutput() CifsProfileFileFilterPtrOutput {
	return o.ToCifsProfileFileFilterPtrOutputWithContext(context.Background())
}

func (o CifsProfileFileFilterOutput) ToCifsProfileFileFilterPtrOutputWithContext(ctx context.Context) CifsProfileFileFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CifsProfileFileFilter) *CifsProfileFileFilter {
		return &v
	}).(CifsProfileFileFilterPtrOutput)
}

// File filter entries. The structure of `entries` block is documented below.
func (o CifsProfileFileFilterOutput) Entries() CifsProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v CifsProfileFileFilter) []CifsProfileFileFilterEntry { return v.Entries }).(CifsProfileFileFilterEntryArrayOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o CifsProfileFileFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CifsProfileFileFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable file filter. Valid values: `enable`, `disable`.
func (o CifsProfileFileFilterOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CifsProfileFileFilter) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type CifsProfileFileFilterPtrOutput struct{ *pulumi.OutputState }

func (CifsProfileFileFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CifsProfileFileFilter)(nil)).Elem()
}

func (o CifsProfileFileFilterPtrOutput) ToCifsProfileFileFilterPtrOutput() CifsProfileFileFilterPtrOutput {
	return o
}

func (o CifsProfileFileFilterPtrOutput) ToCifsProfileFileFilterPtrOutputWithContext(ctx context.Context) CifsProfileFileFilterPtrOutput {
	return o
}

func (o CifsProfileFileFilterPtrOutput) Elem() CifsProfileFileFilterOutput {
	return o.ApplyT(func(v *CifsProfileFileFilter) CifsProfileFileFilter {
		if v != nil {
			return *v
		}
		var ret CifsProfileFileFilter
		return ret
	}).(CifsProfileFileFilterOutput)
}

// File filter entries. The structure of `entries` block is documented below.
func (o CifsProfileFileFilterPtrOutput) Entries() CifsProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v *CifsProfileFileFilter) []CifsProfileFileFilterEntry {
		if v == nil {
			return nil
		}
		return v.Entries
	}).(CifsProfileFileFilterEntryArrayOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o CifsProfileFileFilterPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CifsProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable file filter. Valid values: `enable`, `disable`.
func (o CifsProfileFileFilterPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CifsProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type CifsProfileFileFilterEntry struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action *string `pulumi:"action"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
	Direction *string `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes []CifsProfileFileFilterEntryFileType `pulumi:"fileTypes"`
	// Add a file filter.
	Filter *string `pulumi:"filter"`
}

// CifsProfileFileFilterEntryInput is an input type that accepts CifsProfileFileFilterEntryArgs and CifsProfileFileFilterEntryOutput values.
// You can construct a concrete instance of `CifsProfileFileFilterEntryInput` via:
//
//	CifsProfileFileFilterEntryArgs{...}
type CifsProfileFileFilterEntryInput interface {
	pulumi.Input

	ToCifsProfileFileFilterEntryOutput() CifsProfileFileFilterEntryOutput
	ToCifsProfileFileFilterEntryOutputWithContext(context.Context) CifsProfileFileFilterEntryOutput
}

type CifsProfileFileFilterEntryArgs struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes CifsProfileFileFilterEntryFileTypeArrayInput `pulumi:"fileTypes"`
	// Add a file filter.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
}

func (CifsProfileFileFilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CifsProfileFileFilterEntry)(nil)).Elem()
}

func (i CifsProfileFileFilterEntryArgs) ToCifsProfileFileFilterEntryOutput() CifsProfileFileFilterEntryOutput {
	return i.ToCifsProfileFileFilterEntryOutputWithContext(context.Background())
}

func (i CifsProfileFileFilterEntryArgs) ToCifsProfileFileFilterEntryOutputWithContext(ctx context.Context) CifsProfileFileFilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CifsProfileFileFilterEntryOutput)
}

// CifsProfileFileFilterEntryArrayInput is an input type that accepts CifsProfileFileFilterEntryArray and CifsProfileFileFilterEntryArrayOutput values.
// You can construct a concrete instance of `CifsProfileFileFilterEntryArrayInput` via:
//
//	CifsProfileFileFilterEntryArray{ CifsProfileFileFilterEntryArgs{...} }
type CifsProfileFileFilterEntryArrayInput interface {
	pulumi.Input

	ToCifsProfileFileFilterEntryArrayOutput() CifsProfileFileFilterEntryArrayOutput
	ToCifsProfileFileFilterEntryArrayOutputWithContext(context.Context) CifsProfileFileFilterEntryArrayOutput
}

type CifsProfileFileFilterEntryArray []CifsProfileFileFilterEntryInput

func (CifsProfileFileFilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CifsProfileFileFilterEntry)(nil)).Elem()
}

func (i CifsProfileFileFilterEntryArray) ToCifsProfileFileFilterEntryArrayOutput() CifsProfileFileFilterEntryArrayOutput {
	return i.ToCifsProfileFileFilterEntryArrayOutputWithContext(context.Background())
}

func (i CifsProfileFileFilterEntryArray) ToCifsProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) CifsProfileFileFilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CifsProfileFileFilterEntryArrayOutput)
}

type CifsProfileFileFilterEntryOutput struct{ *pulumi.OutputState }

func (CifsProfileFileFilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CifsProfileFileFilterEntry)(nil)).Elem()
}

func (o CifsProfileFileFilterEntryOutput) ToCifsProfileFileFilterEntryOutput() CifsProfileFileFilterEntryOutput {
	return o
}

func (o CifsProfileFileFilterEntryOutput) ToCifsProfileFileFilterEntryOutputWithContext(ctx context.Context) CifsProfileFileFilterEntryOutput {
	return o
}

// Action taken for matched file. Valid values: `log`, `block`.
func (o CifsProfileFileFilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CifsProfileFileFilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Comment.
func (o CifsProfileFileFilterEntryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CifsProfileFileFilterEntry) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
func (o CifsProfileFileFilterEntryOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CifsProfileFileFilterEntry) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Select file type. The structure of `fileType` block is documented below.
func (o CifsProfileFileFilterEntryOutput) FileTypes() CifsProfileFileFilterEntryFileTypeArrayOutput {
	return o.ApplyT(func(v CifsProfileFileFilterEntry) []CifsProfileFileFilterEntryFileType { return v.FileTypes }).(CifsProfileFileFilterEntryFileTypeArrayOutput)
}

// Add a file filter.
func (o CifsProfileFileFilterEntryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CifsProfileFileFilterEntry) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

type CifsProfileFileFilterEntryArrayOutput struct{ *pulumi.OutputState }

func (CifsProfileFileFilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CifsProfileFileFilterEntry)(nil)).Elem()
}

func (o CifsProfileFileFilterEntryArrayOutput) ToCifsProfileFileFilterEntryArrayOutput() CifsProfileFileFilterEntryArrayOutput {
	return o
}

func (o CifsProfileFileFilterEntryArrayOutput) ToCifsProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) CifsProfileFileFilterEntryArrayOutput {
	return o
}

func (o CifsProfileFileFilterEntryArrayOutput) Index(i pulumi.IntInput) CifsProfileFileFilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CifsProfileFileFilterEntry {
		return vs[0].([]CifsProfileFileFilterEntry)[vs[1].(int)]
	}).(CifsProfileFileFilterEntryOutput)
}

type CifsProfileFileFilterEntryFileType struct {
	// File type name.
	Name *string `pulumi:"name"`
}

// CifsProfileFileFilterEntryFileTypeInput is an input type that accepts CifsProfileFileFilterEntryFileTypeArgs and CifsProfileFileFilterEntryFileTypeOutput values.
// You can construct a concrete instance of `CifsProfileFileFilterEntryFileTypeInput` via:
//
//	CifsProfileFileFilterEntryFileTypeArgs{...}
type CifsProfileFileFilterEntryFileTypeInput interface {
	pulumi.Input

	ToCifsProfileFileFilterEntryFileTypeOutput() CifsProfileFileFilterEntryFileTypeOutput
	ToCifsProfileFileFilterEntryFileTypeOutputWithContext(context.Context) CifsProfileFileFilterEntryFileTypeOutput
}

type CifsProfileFileFilterEntryFileTypeArgs struct {
	// File type name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CifsProfileFileFilterEntryFileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CifsProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i CifsProfileFileFilterEntryFileTypeArgs) ToCifsProfileFileFilterEntryFileTypeOutput() CifsProfileFileFilterEntryFileTypeOutput {
	return i.ToCifsProfileFileFilterEntryFileTypeOutputWithContext(context.Background())
}

func (i CifsProfileFileFilterEntryFileTypeArgs) ToCifsProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) CifsProfileFileFilterEntryFileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CifsProfileFileFilterEntryFileTypeOutput)
}

// CifsProfileFileFilterEntryFileTypeArrayInput is an input type that accepts CifsProfileFileFilterEntryFileTypeArray and CifsProfileFileFilterEntryFileTypeArrayOutput values.
// You can construct a concrete instance of `CifsProfileFileFilterEntryFileTypeArrayInput` via:
//
//	CifsProfileFileFilterEntryFileTypeArray{ CifsProfileFileFilterEntryFileTypeArgs{...} }
type CifsProfileFileFilterEntryFileTypeArrayInput interface {
	pulumi.Input

	ToCifsProfileFileFilterEntryFileTypeArrayOutput() CifsProfileFileFilterEntryFileTypeArrayOutput
	ToCifsProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Context) CifsProfileFileFilterEntryFileTypeArrayOutput
}

type CifsProfileFileFilterEntryFileTypeArray []CifsProfileFileFilterEntryFileTypeInput

func (CifsProfileFileFilterEntryFileTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CifsProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i CifsProfileFileFilterEntryFileTypeArray) ToCifsProfileFileFilterEntryFileTypeArrayOutput() CifsProfileFileFilterEntryFileTypeArrayOutput {
	return i.ToCifsProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Background())
}

func (i CifsProfileFileFilterEntryFileTypeArray) ToCifsProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) CifsProfileFileFilterEntryFileTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CifsProfileFileFilterEntryFileTypeArrayOutput)
}

type CifsProfileFileFilterEntryFileTypeOutput struct{ *pulumi.OutputState }

func (CifsProfileFileFilterEntryFileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CifsProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o CifsProfileFileFilterEntryFileTypeOutput) ToCifsProfileFileFilterEntryFileTypeOutput() CifsProfileFileFilterEntryFileTypeOutput {
	return o
}

func (o CifsProfileFileFilterEntryFileTypeOutput) ToCifsProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) CifsProfileFileFilterEntryFileTypeOutput {
	return o
}

// File type name.
func (o CifsProfileFileFilterEntryFileTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CifsProfileFileFilterEntryFileType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CifsProfileFileFilterEntryFileTypeArrayOutput struct{ *pulumi.OutputState }

func (CifsProfileFileFilterEntryFileTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CifsProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o CifsProfileFileFilterEntryFileTypeArrayOutput) ToCifsProfileFileFilterEntryFileTypeArrayOutput() CifsProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o CifsProfileFileFilterEntryFileTypeArrayOutput) ToCifsProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) CifsProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o CifsProfileFileFilterEntryFileTypeArrayOutput) Index(i pulumi.IntInput) CifsProfileFileFilterEntryFileTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CifsProfileFileFilterEntryFileType {
		return vs[0].([]CifsProfileFileFilterEntryFileType)[vs[1].(int)]
	}).(CifsProfileFileFilterEntryFileTypeOutput)
}

type CifsProfileServerKeytab struct {
	// Base64 encoded keytab file containing credential of the server.
	Keytab *string `pulumi:"keytab"`
	// Service principal.  For example, "host/cifsserver.example.com@example.com".
	Principal *string `pulumi:"principal"`
}

// CifsProfileServerKeytabInput is an input type that accepts CifsProfileServerKeytabArgs and CifsProfileServerKeytabOutput values.
// You can construct a concrete instance of `CifsProfileServerKeytabInput` via:
//
//	CifsProfileServerKeytabArgs{...}
type CifsProfileServerKeytabInput interface {
	pulumi.Input

	ToCifsProfileServerKeytabOutput() CifsProfileServerKeytabOutput
	ToCifsProfileServerKeytabOutputWithContext(context.Context) CifsProfileServerKeytabOutput
}

type CifsProfileServerKeytabArgs struct {
	// Base64 encoded keytab file containing credential of the server.
	Keytab pulumi.StringPtrInput `pulumi:"keytab"`
	// Service principal.  For example, "host/cifsserver.example.com@example.com".
	Principal pulumi.StringPtrInput `pulumi:"principal"`
}

func (CifsProfileServerKeytabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CifsProfileServerKeytab)(nil)).Elem()
}

func (i CifsProfileServerKeytabArgs) ToCifsProfileServerKeytabOutput() CifsProfileServerKeytabOutput {
	return i.ToCifsProfileServerKeytabOutputWithContext(context.Background())
}

func (i CifsProfileServerKeytabArgs) ToCifsProfileServerKeytabOutputWithContext(ctx context.Context) CifsProfileServerKeytabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CifsProfileServerKeytabOutput)
}

// CifsProfileServerKeytabArrayInput is an input type that accepts CifsProfileServerKeytabArray and CifsProfileServerKeytabArrayOutput values.
// You can construct a concrete instance of `CifsProfileServerKeytabArrayInput` via:
//
//	CifsProfileServerKeytabArray{ CifsProfileServerKeytabArgs{...} }
type CifsProfileServerKeytabArrayInput interface {
	pulumi.Input

	ToCifsProfileServerKeytabArrayOutput() CifsProfileServerKeytabArrayOutput
	ToCifsProfileServerKeytabArrayOutputWithContext(context.Context) CifsProfileServerKeytabArrayOutput
}

type CifsProfileServerKeytabArray []CifsProfileServerKeytabInput

func (CifsProfileServerKeytabArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CifsProfileServerKeytab)(nil)).Elem()
}

func (i CifsProfileServerKeytabArray) ToCifsProfileServerKeytabArrayOutput() CifsProfileServerKeytabArrayOutput {
	return i.ToCifsProfileServerKeytabArrayOutputWithContext(context.Background())
}

func (i CifsProfileServerKeytabArray) ToCifsProfileServerKeytabArrayOutputWithContext(ctx context.Context) CifsProfileServerKeytabArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CifsProfileServerKeytabArrayOutput)
}

type CifsProfileServerKeytabOutput struct{ *pulumi.OutputState }

func (CifsProfileServerKeytabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CifsProfileServerKeytab)(nil)).Elem()
}

func (o CifsProfileServerKeytabOutput) ToCifsProfileServerKeytabOutput() CifsProfileServerKeytabOutput {
	return o
}

func (o CifsProfileServerKeytabOutput) ToCifsProfileServerKeytabOutputWithContext(ctx context.Context) CifsProfileServerKeytabOutput {
	return o
}

// Base64 encoded keytab file containing credential of the server.
func (o CifsProfileServerKeytabOutput) Keytab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CifsProfileServerKeytab) *string { return v.Keytab }).(pulumi.StringPtrOutput)
}

// Service principal.  For example, "host/cifsserver.example.com@example.com".
func (o CifsProfileServerKeytabOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CifsProfileServerKeytab) *string { return v.Principal }).(pulumi.StringPtrOutput)
}

type CifsProfileServerKeytabArrayOutput struct{ *pulumi.OutputState }

func (CifsProfileServerKeytabArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CifsProfileServerKeytab)(nil)).Elem()
}

func (o CifsProfileServerKeytabArrayOutput) ToCifsProfileServerKeytabArrayOutput() CifsProfileServerKeytabArrayOutput {
	return o
}

func (o CifsProfileServerKeytabArrayOutput) ToCifsProfileServerKeytabArrayOutputWithContext(ctx context.Context) CifsProfileServerKeytabArrayOutput {
	return o
}

func (o CifsProfileServerKeytabArrayOutput) Index(i pulumi.IntInput) CifsProfileServerKeytabOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CifsProfileServerKeytab {
		return vs[0].([]CifsProfileServerKeytab)[vs[1].(int)]
	}).(CifsProfileServerKeytabOutput)
}

type DlpDictionaryEntry struct {
	// Optional comments.
	Comment *string `pulumi:"comment"`
	// ID.
	Id *int `pulumi:"id"`
	// Enable/disable ignore case. Valid values: `enable`, `disable`.
	IgnoreCase *string `pulumi:"ignoreCase"`
	// Pattern to match.
	Pattern *string `pulumi:"pattern"`
	// Enable/disable repeat match. Valid values: `enable`, `disable`.
	Repeat *string `pulumi:"repeat"`
	// Enable/disable this pattern. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Pattern type to match.
	Type *string `pulumi:"type"`
}

// DlpDictionaryEntryInput is an input type that accepts DlpDictionaryEntryArgs and DlpDictionaryEntryOutput values.
// You can construct a concrete instance of `DlpDictionaryEntryInput` via:
//
//	DlpDictionaryEntryArgs{...}
type DlpDictionaryEntryInput interface {
	pulumi.Input

	ToDlpDictionaryEntryOutput() DlpDictionaryEntryOutput
	ToDlpDictionaryEntryOutputWithContext(context.Context) DlpDictionaryEntryOutput
}

type DlpDictionaryEntryArgs struct {
	// Optional comments.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable ignore case. Valid values: `enable`, `disable`.
	IgnoreCase pulumi.StringPtrInput `pulumi:"ignoreCase"`
	// Pattern to match.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Enable/disable repeat match. Valid values: `enable`, `disable`.
	Repeat pulumi.StringPtrInput `pulumi:"repeat"`
	// Enable/disable this pattern. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Pattern type to match.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DlpDictionaryEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpDictionaryEntry)(nil)).Elem()
}

func (i DlpDictionaryEntryArgs) ToDlpDictionaryEntryOutput() DlpDictionaryEntryOutput {
	return i.ToDlpDictionaryEntryOutputWithContext(context.Background())
}

func (i DlpDictionaryEntryArgs) ToDlpDictionaryEntryOutputWithContext(ctx context.Context) DlpDictionaryEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpDictionaryEntryOutput)
}

// DlpDictionaryEntryArrayInput is an input type that accepts DlpDictionaryEntryArray and DlpDictionaryEntryArrayOutput values.
// You can construct a concrete instance of `DlpDictionaryEntryArrayInput` via:
//
//	DlpDictionaryEntryArray{ DlpDictionaryEntryArgs{...} }
type DlpDictionaryEntryArrayInput interface {
	pulumi.Input

	ToDlpDictionaryEntryArrayOutput() DlpDictionaryEntryArrayOutput
	ToDlpDictionaryEntryArrayOutputWithContext(context.Context) DlpDictionaryEntryArrayOutput
}

type DlpDictionaryEntryArray []DlpDictionaryEntryInput

func (DlpDictionaryEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpDictionaryEntry)(nil)).Elem()
}

func (i DlpDictionaryEntryArray) ToDlpDictionaryEntryArrayOutput() DlpDictionaryEntryArrayOutput {
	return i.ToDlpDictionaryEntryArrayOutputWithContext(context.Background())
}

func (i DlpDictionaryEntryArray) ToDlpDictionaryEntryArrayOutputWithContext(ctx context.Context) DlpDictionaryEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpDictionaryEntryArrayOutput)
}

type DlpDictionaryEntryOutput struct{ *pulumi.OutputState }

func (DlpDictionaryEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpDictionaryEntry)(nil)).Elem()
}

func (o DlpDictionaryEntryOutput) ToDlpDictionaryEntryOutput() DlpDictionaryEntryOutput {
	return o
}

func (o DlpDictionaryEntryOutput) ToDlpDictionaryEntryOutputWithContext(ctx context.Context) DlpDictionaryEntryOutput {
	return o
}

// Optional comments.
func (o DlpDictionaryEntryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpDictionaryEntry) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// ID.
func (o DlpDictionaryEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpDictionaryEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable ignore case. Valid values: `enable`, `disable`.
func (o DlpDictionaryEntryOutput) IgnoreCase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpDictionaryEntry) *string { return v.IgnoreCase }).(pulumi.StringPtrOutput)
}

// Pattern to match.
func (o DlpDictionaryEntryOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpDictionaryEntry) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Enable/disable repeat match. Valid values: `enable`, `disable`.
func (o DlpDictionaryEntryOutput) Repeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpDictionaryEntry) *string { return v.Repeat }).(pulumi.StringPtrOutput)
}

// Enable/disable this pattern. Valid values: `enable`, `disable`.
func (o DlpDictionaryEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpDictionaryEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Pattern type to match.
func (o DlpDictionaryEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpDictionaryEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DlpDictionaryEntryArrayOutput struct{ *pulumi.OutputState }

func (DlpDictionaryEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpDictionaryEntry)(nil)).Elem()
}

func (o DlpDictionaryEntryArrayOutput) ToDlpDictionaryEntryArrayOutput() DlpDictionaryEntryArrayOutput {
	return o
}

func (o DlpDictionaryEntryArrayOutput) ToDlpDictionaryEntryArrayOutputWithContext(ctx context.Context) DlpDictionaryEntryArrayOutput {
	return o
}

func (o DlpDictionaryEntryArrayOutput) Index(i pulumi.IntInput) DlpDictionaryEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DlpDictionaryEntry {
		return vs[0].([]DlpDictionaryEntry)[vs[1].(int)]
	}).(DlpDictionaryEntryOutput)
}

type DlpFilepatternEntry struct {
	// Select a file type.
	FileType *string `pulumi:"fileType"`
	// Filter by file name pattern or by file type. Valid values: `pattern`, `type`.
	FilterType *string `pulumi:"filterType"`
	// Add a file name pattern.
	Pattern *string `pulumi:"pattern"`
}

// DlpFilepatternEntryInput is an input type that accepts DlpFilepatternEntryArgs and DlpFilepatternEntryOutput values.
// You can construct a concrete instance of `DlpFilepatternEntryInput` via:
//
//	DlpFilepatternEntryArgs{...}
type DlpFilepatternEntryInput interface {
	pulumi.Input

	ToDlpFilepatternEntryOutput() DlpFilepatternEntryOutput
	ToDlpFilepatternEntryOutputWithContext(context.Context) DlpFilepatternEntryOutput
}

type DlpFilepatternEntryArgs struct {
	// Select a file type.
	FileType pulumi.StringPtrInput `pulumi:"fileType"`
	// Filter by file name pattern or by file type. Valid values: `pattern`, `type`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Add a file name pattern.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
}

func (DlpFilepatternEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpFilepatternEntry)(nil)).Elem()
}

func (i DlpFilepatternEntryArgs) ToDlpFilepatternEntryOutput() DlpFilepatternEntryOutput {
	return i.ToDlpFilepatternEntryOutputWithContext(context.Background())
}

func (i DlpFilepatternEntryArgs) ToDlpFilepatternEntryOutputWithContext(ctx context.Context) DlpFilepatternEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpFilepatternEntryOutput)
}

// DlpFilepatternEntryArrayInput is an input type that accepts DlpFilepatternEntryArray and DlpFilepatternEntryArrayOutput values.
// You can construct a concrete instance of `DlpFilepatternEntryArrayInput` via:
//
//	DlpFilepatternEntryArray{ DlpFilepatternEntryArgs{...} }
type DlpFilepatternEntryArrayInput interface {
	pulumi.Input

	ToDlpFilepatternEntryArrayOutput() DlpFilepatternEntryArrayOutput
	ToDlpFilepatternEntryArrayOutputWithContext(context.Context) DlpFilepatternEntryArrayOutput
}

type DlpFilepatternEntryArray []DlpFilepatternEntryInput

func (DlpFilepatternEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpFilepatternEntry)(nil)).Elem()
}

func (i DlpFilepatternEntryArray) ToDlpFilepatternEntryArrayOutput() DlpFilepatternEntryArrayOutput {
	return i.ToDlpFilepatternEntryArrayOutputWithContext(context.Background())
}

func (i DlpFilepatternEntryArray) ToDlpFilepatternEntryArrayOutputWithContext(ctx context.Context) DlpFilepatternEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpFilepatternEntryArrayOutput)
}

type DlpFilepatternEntryOutput struct{ *pulumi.OutputState }

func (DlpFilepatternEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpFilepatternEntry)(nil)).Elem()
}

func (o DlpFilepatternEntryOutput) ToDlpFilepatternEntryOutput() DlpFilepatternEntryOutput {
	return o
}

func (o DlpFilepatternEntryOutput) ToDlpFilepatternEntryOutputWithContext(ctx context.Context) DlpFilepatternEntryOutput {
	return o
}

// Select a file type.
func (o DlpFilepatternEntryOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpFilepatternEntry) *string { return v.FileType }).(pulumi.StringPtrOutput)
}

// Filter by file name pattern or by file type. Valid values: `pattern`, `type`.
func (o DlpFilepatternEntryOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpFilepatternEntry) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Add a file name pattern.
func (o DlpFilepatternEntryOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpFilepatternEntry) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

type DlpFilepatternEntryArrayOutput struct{ *pulumi.OutputState }

func (DlpFilepatternEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpFilepatternEntry)(nil)).Elem()
}

func (o DlpFilepatternEntryArrayOutput) ToDlpFilepatternEntryArrayOutput() DlpFilepatternEntryArrayOutput {
	return o
}

func (o DlpFilepatternEntryArrayOutput) ToDlpFilepatternEntryArrayOutputWithContext(ctx context.Context) DlpFilepatternEntryArrayOutput {
	return o
}

func (o DlpFilepatternEntryArrayOutput) Index(i pulumi.IntInput) DlpFilepatternEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DlpFilepatternEntry {
		return vs[0].([]DlpFilepatternEntry)[vs[1].(int)]
	}).(DlpFilepatternEntryOutput)
}

type DlpProfileRule struct {
	// Action to take with content that this DLP profile matches. Valid values: `allow`, `log-only`, `block`, `quarantine-ip`.
	Action *string `pulumi:"action"`
	// Enable/disable DLP archiving. Valid values: `disable`, `enable`.
	Archive *string `pulumi:"archive"`
	// Quarantine duration in days, hours, minutes (format = dddhhmm).
	Expiry *string `pulumi:"expiry"`
	// Match files this size or larger (0 - 4294967295 kbytes).
	FileSize *int `pulumi:"fileSize"`
	// Select the number of a DLP file pattern table to match.
	FileType *int `pulumi:"fileType"`
	// Select the type of content to match. Valid values: `sensor`, `mip`, `fingerprint`, `encrypted`, `none`.
	FilterBy *string `pulumi:"filterBy"`
	// ID.
	Id *int `pulumi:"id"`
	// MIP label dictionary.
	Label *string `pulumi:"label"`
	// Percentage of fingerprints in the fingerprint databases designated with the selected sensitivity to match.
	MatchPercentage *int `pulumi:"matchPercentage"`
	// Filter name.
	Name *string `pulumi:"name"`
	// Check messages or files over one or more of these protocols. Valid values: `smtp`, `pop3`, `imap`, `http-get`, `http-post`, `ftp`, `nntp`, `mapi`, `ssh`, `cifs`.
	Proto *string `pulumi:"proto"`
	// Select a DLP file pattern sensitivity to match. The structure of `sensitivity` block is documented below.
	Sensitivities []DlpProfileRuleSensitivity `pulumi:"sensitivities"`
	// Select DLP sensors. The structure of `sensor` block is documented below.
	Sensors []DlpProfileRuleSensor `pulumi:"sensors"`
	// Select the severity or threat level that matches this filter. Valid values: `info`, `low`, `medium`, `high`, `critical`.
	Severity *string `pulumi:"severity"`
	// Select whether to check the content of messages (an email message) or files (downloaded files or email attachments). Valid values: `file`, `message`.
	Type *string `pulumi:"type"`
}

// DlpProfileRuleInput is an input type that accepts DlpProfileRuleArgs and DlpProfileRuleOutput values.
// You can construct a concrete instance of `DlpProfileRuleInput` via:
//
//	DlpProfileRuleArgs{...}
type DlpProfileRuleInput interface {
	pulumi.Input

	ToDlpProfileRuleOutput() DlpProfileRuleOutput
	ToDlpProfileRuleOutputWithContext(context.Context) DlpProfileRuleOutput
}

type DlpProfileRuleArgs struct {
	// Action to take with content that this DLP profile matches. Valid values: `allow`, `log-only`, `block`, `quarantine-ip`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable DLP archiving. Valid values: `disable`, `enable`.
	Archive pulumi.StringPtrInput `pulumi:"archive"`
	// Quarantine duration in days, hours, minutes (format = dddhhmm).
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// Match files this size or larger (0 - 4294967295 kbytes).
	FileSize pulumi.IntPtrInput `pulumi:"fileSize"`
	// Select the number of a DLP file pattern table to match.
	FileType pulumi.IntPtrInput `pulumi:"fileType"`
	// Select the type of content to match. Valid values: `sensor`, `mip`, `fingerprint`, `encrypted`, `none`.
	FilterBy pulumi.StringPtrInput `pulumi:"filterBy"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// MIP label dictionary.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Percentage of fingerprints in the fingerprint databases designated with the selected sensitivity to match.
	MatchPercentage pulumi.IntPtrInput `pulumi:"matchPercentage"`
	// Filter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Check messages or files over one or more of these protocols. Valid values: `smtp`, `pop3`, `imap`, `http-get`, `http-post`, `ftp`, `nntp`, `mapi`, `ssh`, `cifs`.
	Proto pulumi.StringPtrInput `pulumi:"proto"`
	// Select a DLP file pattern sensitivity to match. The structure of `sensitivity` block is documented below.
	Sensitivities DlpProfileRuleSensitivityArrayInput `pulumi:"sensitivities"`
	// Select DLP sensors. The structure of `sensor` block is documented below.
	Sensors DlpProfileRuleSensorArrayInput `pulumi:"sensors"`
	// Select the severity or threat level that matches this filter. Valid values: `info`, `low`, `medium`, `high`, `critical`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Select whether to check the content of messages (an email message) or files (downloaded files or email attachments). Valid values: `file`, `message`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DlpProfileRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpProfileRule)(nil)).Elem()
}

func (i DlpProfileRuleArgs) ToDlpProfileRuleOutput() DlpProfileRuleOutput {
	return i.ToDlpProfileRuleOutputWithContext(context.Background())
}

func (i DlpProfileRuleArgs) ToDlpProfileRuleOutputWithContext(ctx context.Context) DlpProfileRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpProfileRuleOutput)
}

// DlpProfileRuleArrayInput is an input type that accepts DlpProfileRuleArray and DlpProfileRuleArrayOutput values.
// You can construct a concrete instance of `DlpProfileRuleArrayInput` via:
//
//	DlpProfileRuleArray{ DlpProfileRuleArgs{...} }
type DlpProfileRuleArrayInput interface {
	pulumi.Input

	ToDlpProfileRuleArrayOutput() DlpProfileRuleArrayOutput
	ToDlpProfileRuleArrayOutputWithContext(context.Context) DlpProfileRuleArrayOutput
}

type DlpProfileRuleArray []DlpProfileRuleInput

func (DlpProfileRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpProfileRule)(nil)).Elem()
}

func (i DlpProfileRuleArray) ToDlpProfileRuleArrayOutput() DlpProfileRuleArrayOutput {
	return i.ToDlpProfileRuleArrayOutputWithContext(context.Background())
}

func (i DlpProfileRuleArray) ToDlpProfileRuleArrayOutputWithContext(ctx context.Context) DlpProfileRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpProfileRuleArrayOutput)
}

type DlpProfileRuleOutput struct{ *pulumi.OutputState }

func (DlpProfileRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpProfileRule)(nil)).Elem()
}

func (o DlpProfileRuleOutput) ToDlpProfileRuleOutput() DlpProfileRuleOutput {
	return o
}

func (o DlpProfileRuleOutput) ToDlpProfileRuleOutputWithContext(ctx context.Context) DlpProfileRuleOutput {
	return o
}

// Action to take with content that this DLP profile matches. Valid values: `allow`, `log-only`, `block`, `quarantine-ip`.
func (o DlpProfileRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable DLP archiving. Valid values: `disable`, `enable`.
func (o DlpProfileRuleOutput) Archive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *string { return v.Archive }).(pulumi.StringPtrOutput)
}

// Quarantine duration in days, hours, minutes (format = dddhhmm).
func (o DlpProfileRuleOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// Match files this size or larger (0 - 4294967295 kbytes).
func (o DlpProfileRuleOutput) FileSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *int { return v.FileSize }).(pulumi.IntPtrOutput)
}

// Select the number of a DLP file pattern table to match.
func (o DlpProfileRuleOutput) FileType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *int { return v.FileType }).(pulumi.IntPtrOutput)
}

// Select the type of content to match. Valid values: `sensor`, `mip`, `fingerprint`, `encrypted`, `none`.
func (o DlpProfileRuleOutput) FilterBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *string { return v.FilterBy }).(pulumi.StringPtrOutput)
}

// ID.
func (o DlpProfileRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// MIP label dictionary.
func (o DlpProfileRuleOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Percentage of fingerprints in the fingerprint databases designated with the selected sensitivity to match.
func (o DlpProfileRuleOutput) MatchPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *int { return v.MatchPercentage }).(pulumi.IntPtrOutput)
}

// Filter name.
func (o DlpProfileRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Check messages or files over one or more of these protocols. Valid values: `smtp`, `pop3`, `imap`, `http-get`, `http-post`, `ftp`, `nntp`, `mapi`, `ssh`, `cifs`.
func (o DlpProfileRuleOutput) Proto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *string { return v.Proto }).(pulumi.StringPtrOutput)
}

// Select a DLP file pattern sensitivity to match. The structure of `sensitivity` block is documented below.
func (o DlpProfileRuleOutput) Sensitivities() DlpProfileRuleSensitivityArrayOutput {
	return o.ApplyT(func(v DlpProfileRule) []DlpProfileRuleSensitivity { return v.Sensitivities }).(DlpProfileRuleSensitivityArrayOutput)
}

// Select DLP sensors. The structure of `sensor` block is documented below.
func (o DlpProfileRuleOutput) Sensors() DlpProfileRuleSensorArrayOutput {
	return o.ApplyT(func(v DlpProfileRule) []DlpProfileRuleSensor { return v.Sensors }).(DlpProfileRuleSensorArrayOutput)
}

// Select the severity or threat level that matches this filter. Valid values: `info`, `low`, `medium`, `high`, `critical`.
func (o DlpProfileRuleOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Select whether to check the content of messages (an email message) or files (downloaded files or email attachments). Valid values: `file`, `message`.
func (o DlpProfileRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DlpProfileRuleArrayOutput struct{ *pulumi.OutputState }

func (DlpProfileRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpProfileRule)(nil)).Elem()
}

func (o DlpProfileRuleArrayOutput) ToDlpProfileRuleArrayOutput() DlpProfileRuleArrayOutput {
	return o
}

func (o DlpProfileRuleArrayOutput) ToDlpProfileRuleArrayOutputWithContext(ctx context.Context) DlpProfileRuleArrayOutput {
	return o
}

func (o DlpProfileRuleArrayOutput) Index(i pulumi.IntInput) DlpProfileRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DlpProfileRule {
		return vs[0].([]DlpProfileRule)[vs[1].(int)]
	}).(DlpProfileRuleOutput)
}

type DlpProfileRuleSensitivity struct {
	// Select a DLP sensitivity.
	Name *string `pulumi:"name"`
}

// DlpProfileRuleSensitivityInput is an input type that accepts DlpProfileRuleSensitivityArgs and DlpProfileRuleSensitivityOutput values.
// You can construct a concrete instance of `DlpProfileRuleSensitivityInput` via:
//
//	DlpProfileRuleSensitivityArgs{...}
type DlpProfileRuleSensitivityInput interface {
	pulumi.Input

	ToDlpProfileRuleSensitivityOutput() DlpProfileRuleSensitivityOutput
	ToDlpProfileRuleSensitivityOutputWithContext(context.Context) DlpProfileRuleSensitivityOutput
}

type DlpProfileRuleSensitivityArgs struct {
	// Select a DLP sensitivity.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DlpProfileRuleSensitivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpProfileRuleSensitivity)(nil)).Elem()
}

func (i DlpProfileRuleSensitivityArgs) ToDlpProfileRuleSensitivityOutput() DlpProfileRuleSensitivityOutput {
	return i.ToDlpProfileRuleSensitivityOutputWithContext(context.Background())
}

func (i DlpProfileRuleSensitivityArgs) ToDlpProfileRuleSensitivityOutputWithContext(ctx context.Context) DlpProfileRuleSensitivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpProfileRuleSensitivityOutput)
}

// DlpProfileRuleSensitivityArrayInput is an input type that accepts DlpProfileRuleSensitivityArray and DlpProfileRuleSensitivityArrayOutput values.
// You can construct a concrete instance of `DlpProfileRuleSensitivityArrayInput` via:
//
//	DlpProfileRuleSensitivityArray{ DlpProfileRuleSensitivityArgs{...} }
type DlpProfileRuleSensitivityArrayInput interface {
	pulumi.Input

	ToDlpProfileRuleSensitivityArrayOutput() DlpProfileRuleSensitivityArrayOutput
	ToDlpProfileRuleSensitivityArrayOutputWithContext(context.Context) DlpProfileRuleSensitivityArrayOutput
}

type DlpProfileRuleSensitivityArray []DlpProfileRuleSensitivityInput

func (DlpProfileRuleSensitivityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpProfileRuleSensitivity)(nil)).Elem()
}

func (i DlpProfileRuleSensitivityArray) ToDlpProfileRuleSensitivityArrayOutput() DlpProfileRuleSensitivityArrayOutput {
	return i.ToDlpProfileRuleSensitivityArrayOutputWithContext(context.Background())
}

func (i DlpProfileRuleSensitivityArray) ToDlpProfileRuleSensitivityArrayOutputWithContext(ctx context.Context) DlpProfileRuleSensitivityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpProfileRuleSensitivityArrayOutput)
}

type DlpProfileRuleSensitivityOutput struct{ *pulumi.OutputState }

func (DlpProfileRuleSensitivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpProfileRuleSensitivity)(nil)).Elem()
}

func (o DlpProfileRuleSensitivityOutput) ToDlpProfileRuleSensitivityOutput() DlpProfileRuleSensitivityOutput {
	return o
}

func (o DlpProfileRuleSensitivityOutput) ToDlpProfileRuleSensitivityOutputWithContext(ctx context.Context) DlpProfileRuleSensitivityOutput {
	return o
}

// Select a DLP sensitivity.
func (o DlpProfileRuleSensitivityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRuleSensitivity) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DlpProfileRuleSensitivityArrayOutput struct{ *pulumi.OutputState }

func (DlpProfileRuleSensitivityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpProfileRuleSensitivity)(nil)).Elem()
}

func (o DlpProfileRuleSensitivityArrayOutput) ToDlpProfileRuleSensitivityArrayOutput() DlpProfileRuleSensitivityArrayOutput {
	return o
}

func (o DlpProfileRuleSensitivityArrayOutput) ToDlpProfileRuleSensitivityArrayOutputWithContext(ctx context.Context) DlpProfileRuleSensitivityArrayOutput {
	return o
}

func (o DlpProfileRuleSensitivityArrayOutput) Index(i pulumi.IntInput) DlpProfileRuleSensitivityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DlpProfileRuleSensitivity {
		return vs[0].([]DlpProfileRuleSensitivity)[vs[1].(int)]
	}).(DlpProfileRuleSensitivityOutput)
}

type DlpProfileRuleSensor struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// DlpProfileRuleSensorInput is an input type that accepts DlpProfileRuleSensorArgs and DlpProfileRuleSensorOutput values.
// You can construct a concrete instance of `DlpProfileRuleSensorInput` via:
//
//	DlpProfileRuleSensorArgs{...}
type DlpProfileRuleSensorInput interface {
	pulumi.Input

	ToDlpProfileRuleSensorOutput() DlpProfileRuleSensorOutput
	ToDlpProfileRuleSensorOutputWithContext(context.Context) DlpProfileRuleSensorOutput
}

type DlpProfileRuleSensorArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DlpProfileRuleSensorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpProfileRuleSensor)(nil)).Elem()
}

func (i DlpProfileRuleSensorArgs) ToDlpProfileRuleSensorOutput() DlpProfileRuleSensorOutput {
	return i.ToDlpProfileRuleSensorOutputWithContext(context.Background())
}

func (i DlpProfileRuleSensorArgs) ToDlpProfileRuleSensorOutputWithContext(ctx context.Context) DlpProfileRuleSensorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpProfileRuleSensorOutput)
}

// DlpProfileRuleSensorArrayInput is an input type that accepts DlpProfileRuleSensorArray and DlpProfileRuleSensorArrayOutput values.
// You can construct a concrete instance of `DlpProfileRuleSensorArrayInput` via:
//
//	DlpProfileRuleSensorArray{ DlpProfileRuleSensorArgs{...} }
type DlpProfileRuleSensorArrayInput interface {
	pulumi.Input

	ToDlpProfileRuleSensorArrayOutput() DlpProfileRuleSensorArrayOutput
	ToDlpProfileRuleSensorArrayOutputWithContext(context.Context) DlpProfileRuleSensorArrayOutput
}

type DlpProfileRuleSensorArray []DlpProfileRuleSensorInput

func (DlpProfileRuleSensorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpProfileRuleSensor)(nil)).Elem()
}

func (i DlpProfileRuleSensorArray) ToDlpProfileRuleSensorArrayOutput() DlpProfileRuleSensorArrayOutput {
	return i.ToDlpProfileRuleSensorArrayOutputWithContext(context.Background())
}

func (i DlpProfileRuleSensorArray) ToDlpProfileRuleSensorArrayOutputWithContext(ctx context.Context) DlpProfileRuleSensorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpProfileRuleSensorArrayOutput)
}

type DlpProfileRuleSensorOutput struct{ *pulumi.OutputState }

func (DlpProfileRuleSensorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpProfileRuleSensor)(nil)).Elem()
}

func (o DlpProfileRuleSensorOutput) ToDlpProfileRuleSensorOutput() DlpProfileRuleSensorOutput {
	return o
}

func (o DlpProfileRuleSensorOutput) ToDlpProfileRuleSensorOutputWithContext(ctx context.Context) DlpProfileRuleSensorOutput {
	return o
}

// Address name.
func (o DlpProfileRuleSensorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpProfileRuleSensor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DlpProfileRuleSensorArrayOutput struct{ *pulumi.OutputState }

func (DlpProfileRuleSensorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpProfileRuleSensor)(nil)).Elem()
}

func (o DlpProfileRuleSensorArrayOutput) ToDlpProfileRuleSensorArrayOutput() DlpProfileRuleSensorArrayOutput {
	return o
}

func (o DlpProfileRuleSensorArrayOutput) ToDlpProfileRuleSensorArrayOutputWithContext(ctx context.Context) DlpProfileRuleSensorArrayOutput {
	return o
}

func (o DlpProfileRuleSensorArrayOutput) Index(i pulumi.IntInput) DlpProfileRuleSensorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DlpProfileRuleSensor {
		return vs[0].([]DlpProfileRuleSensor)[vs[1].(int)]
	}).(DlpProfileRuleSensorOutput)
}

type DlpSensorEntry struct {
	// Count of dictionary matches to trigger sensor entry match (Dictionary might not be able to trigger more than once based on its 'repeat' option, 1 - 255, default = 1).
	Count *int `pulumi:"count"`
	// Select a DLP dictionary.
	Dictionary *string `pulumi:"dictionary"`
	// ID.
	Id *int `pulumi:"id"`
	// Enable/disable this entry. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// DlpSensorEntryInput is an input type that accepts DlpSensorEntryArgs and DlpSensorEntryOutput values.
// You can construct a concrete instance of `DlpSensorEntryInput` via:
//
//	DlpSensorEntryArgs{...}
type DlpSensorEntryInput interface {
	pulumi.Input

	ToDlpSensorEntryOutput() DlpSensorEntryOutput
	ToDlpSensorEntryOutputWithContext(context.Context) DlpSensorEntryOutput
}

type DlpSensorEntryArgs struct {
	// Count of dictionary matches to trigger sensor entry match (Dictionary might not be able to trigger more than once based on its 'repeat' option, 1 - 255, default = 1).
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Select a DLP dictionary.
	Dictionary pulumi.StringPtrInput `pulumi:"dictionary"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable this entry. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (DlpSensorEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpSensorEntry)(nil)).Elem()
}

func (i DlpSensorEntryArgs) ToDlpSensorEntryOutput() DlpSensorEntryOutput {
	return i.ToDlpSensorEntryOutputWithContext(context.Background())
}

func (i DlpSensorEntryArgs) ToDlpSensorEntryOutputWithContext(ctx context.Context) DlpSensorEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpSensorEntryOutput)
}

// DlpSensorEntryArrayInput is an input type that accepts DlpSensorEntryArray and DlpSensorEntryArrayOutput values.
// You can construct a concrete instance of `DlpSensorEntryArrayInput` via:
//
//	DlpSensorEntryArray{ DlpSensorEntryArgs{...} }
type DlpSensorEntryArrayInput interface {
	pulumi.Input

	ToDlpSensorEntryArrayOutput() DlpSensorEntryArrayOutput
	ToDlpSensorEntryArrayOutputWithContext(context.Context) DlpSensorEntryArrayOutput
}

type DlpSensorEntryArray []DlpSensorEntryInput

func (DlpSensorEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpSensorEntry)(nil)).Elem()
}

func (i DlpSensorEntryArray) ToDlpSensorEntryArrayOutput() DlpSensorEntryArrayOutput {
	return i.ToDlpSensorEntryArrayOutputWithContext(context.Background())
}

func (i DlpSensorEntryArray) ToDlpSensorEntryArrayOutputWithContext(ctx context.Context) DlpSensorEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpSensorEntryArrayOutput)
}

type DlpSensorEntryOutput struct{ *pulumi.OutputState }

func (DlpSensorEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpSensorEntry)(nil)).Elem()
}

func (o DlpSensorEntryOutput) ToDlpSensorEntryOutput() DlpSensorEntryOutput {
	return o
}

func (o DlpSensorEntryOutput) ToDlpSensorEntryOutputWithContext(ctx context.Context) DlpSensorEntryOutput {
	return o
}

// Count of dictionary matches to trigger sensor entry match (Dictionary might not be able to trigger more than once based on its 'repeat' option, 1 - 255, default = 1).
func (o DlpSensorEntryOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpSensorEntry) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Select a DLP dictionary.
func (o DlpSensorEntryOutput) Dictionary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorEntry) *string { return v.Dictionary }).(pulumi.StringPtrOutput)
}

// ID.
func (o DlpSensorEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpSensorEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable this entry. Valid values: `enable`, `disable`.
func (o DlpSensorEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DlpSensorEntryArrayOutput struct{ *pulumi.OutputState }

func (DlpSensorEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpSensorEntry)(nil)).Elem()
}

func (o DlpSensorEntryArrayOutput) ToDlpSensorEntryArrayOutput() DlpSensorEntryArrayOutput {
	return o
}

func (o DlpSensorEntryArrayOutput) ToDlpSensorEntryArrayOutputWithContext(ctx context.Context) DlpSensorEntryArrayOutput {
	return o
}

func (o DlpSensorEntryArrayOutput) Index(i pulumi.IntInput) DlpSensorEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DlpSensorEntry {
		return vs[0].([]DlpSensorEntry)[vs[1].(int)]
	}).(DlpSensorEntryOutput)
}

type DlpSensorFilter struct {
	// Action to take with content that this DLP sensor matches. Valid values: `allow`, `log-only`, `block`, `quarantine-ip`.
	Action *string `pulumi:"action"`
	// Enable/disable DLP archiving. Valid values: `disable`, `enable`.
	Archive *string `pulumi:"archive"`
	// Enter a company identifier watermark to match. Only watermarks that your company has placed on the files are matched.
	CompanyIdentifier *string `pulumi:"companyIdentifier"`
	// Quarantine duration in days, hours, minutes format (dddhhmm).
	Expiry *string `pulumi:"expiry"`
	// Match files this size or larger (0 - 4294967295 kbytes).
	FileSize *int `pulumi:"fileSize"`
	// Select the number of a DLP file pattern table to match.
	FileType *int `pulumi:"fileType"`
	// Select the type of content to match.
	FilterBy *string `pulumi:"filterBy"`
	// Select a DLP file pattern sensitivity to match. The structure of `fpSensitivity` block is documented below.
	FpSensitivities []DlpSensorFilterFpSensitivity `pulumi:"fpSensitivities"`
	// ID.
	Id *int `pulumi:"id"`
	// Percentage of fingerprints in the fingerprint databases designated with the selected fp-sensitivity to match.
	MatchPercentage *int `pulumi:"matchPercentage"`
	// Filter name.
	Name *string `pulumi:"name"`
	// Check messages or files over one or more of these protocols.
	Proto *string `pulumi:"proto"`
	// Enter a regular expression to match (max. 255 characters).
	Regexp *string `pulumi:"regexp"`
	// Select a DLP file pattern sensitivity to match. The structure of `sensitivity` block is documented below.
	Sensitivities []DlpSensorFilterSensitivity `pulumi:"sensitivities"`
	// Select the severity or threat level that matches this filter. Valid values: `info`, `low`, `medium`, `high`, `critical`.
	Severity *string `pulumi:"severity"`
	// Select whether to check the content of messages (an email message) or files (downloaded files or email attachments).  Valid values: `file`, `message`.
	Type *string `pulumi:"type"`
}

// DlpSensorFilterInput is an input type that accepts DlpSensorFilterArgs and DlpSensorFilterOutput values.
// You can construct a concrete instance of `DlpSensorFilterInput` via:
//
//	DlpSensorFilterArgs{...}
type DlpSensorFilterInput interface {
	pulumi.Input

	ToDlpSensorFilterOutput() DlpSensorFilterOutput
	ToDlpSensorFilterOutputWithContext(context.Context) DlpSensorFilterOutput
}

type DlpSensorFilterArgs struct {
	// Action to take with content that this DLP sensor matches. Valid values: `allow`, `log-only`, `block`, `quarantine-ip`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable DLP archiving. Valid values: `disable`, `enable`.
	Archive pulumi.StringPtrInput `pulumi:"archive"`
	// Enter a company identifier watermark to match. Only watermarks that your company has placed on the files are matched.
	CompanyIdentifier pulumi.StringPtrInput `pulumi:"companyIdentifier"`
	// Quarantine duration in days, hours, minutes format (dddhhmm).
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// Match files this size or larger (0 - 4294967295 kbytes).
	FileSize pulumi.IntPtrInput `pulumi:"fileSize"`
	// Select the number of a DLP file pattern table to match.
	FileType pulumi.IntPtrInput `pulumi:"fileType"`
	// Select the type of content to match.
	FilterBy pulumi.StringPtrInput `pulumi:"filterBy"`
	// Select a DLP file pattern sensitivity to match. The structure of `fpSensitivity` block is documented below.
	FpSensitivities DlpSensorFilterFpSensitivityArrayInput `pulumi:"fpSensitivities"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Percentage of fingerprints in the fingerprint databases designated with the selected fp-sensitivity to match.
	MatchPercentage pulumi.IntPtrInput `pulumi:"matchPercentage"`
	// Filter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Check messages or files over one or more of these protocols.
	Proto pulumi.StringPtrInput `pulumi:"proto"`
	// Enter a regular expression to match (max. 255 characters).
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
	// Select a DLP file pattern sensitivity to match. The structure of `sensitivity` block is documented below.
	Sensitivities DlpSensorFilterSensitivityArrayInput `pulumi:"sensitivities"`
	// Select the severity or threat level that matches this filter. Valid values: `info`, `low`, `medium`, `high`, `critical`.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Select whether to check the content of messages (an email message) or files (downloaded files or email attachments).  Valid values: `file`, `message`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DlpSensorFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpSensorFilter)(nil)).Elem()
}

func (i DlpSensorFilterArgs) ToDlpSensorFilterOutput() DlpSensorFilterOutput {
	return i.ToDlpSensorFilterOutputWithContext(context.Background())
}

func (i DlpSensorFilterArgs) ToDlpSensorFilterOutputWithContext(ctx context.Context) DlpSensorFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpSensorFilterOutput)
}

// DlpSensorFilterArrayInput is an input type that accepts DlpSensorFilterArray and DlpSensorFilterArrayOutput values.
// You can construct a concrete instance of `DlpSensorFilterArrayInput` via:
//
//	DlpSensorFilterArray{ DlpSensorFilterArgs{...} }
type DlpSensorFilterArrayInput interface {
	pulumi.Input

	ToDlpSensorFilterArrayOutput() DlpSensorFilterArrayOutput
	ToDlpSensorFilterArrayOutputWithContext(context.Context) DlpSensorFilterArrayOutput
}

type DlpSensorFilterArray []DlpSensorFilterInput

func (DlpSensorFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpSensorFilter)(nil)).Elem()
}

func (i DlpSensorFilterArray) ToDlpSensorFilterArrayOutput() DlpSensorFilterArrayOutput {
	return i.ToDlpSensorFilterArrayOutputWithContext(context.Background())
}

func (i DlpSensorFilterArray) ToDlpSensorFilterArrayOutputWithContext(ctx context.Context) DlpSensorFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpSensorFilterArrayOutput)
}

type DlpSensorFilterOutput struct{ *pulumi.OutputState }

func (DlpSensorFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpSensorFilter)(nil)).Elem()
}

func (o DlpSensorFilterOutput) ToDlpSensorFilterOutput() DlpSensorFilterOutput {
	return o
}

func (o DlpSensorFilterOutput) ToDlpSensorFilterOutputWithContext(ctx context.Context) DlpSensorFilterOutput {
	return o
}

// Action to take with content that this DLP sensor matches. Valid values: `allow`, `log-only`, `block`, `quarantine-ip`.
func (o DlpSensorFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable DLP archiving. Valid values: `disable`, `enable`.
func (o DlpSensorFilterOutput) Archive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *string { return v.Archive }).(pulumi.StringPtrOutput)
}

// Enter a company identifier watermark to match. Only watermarks that your company has placed on the files are matched.
func (o DlpSensorFilterOutput) CompanyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *string { return v.CompanyIdentifier }).(pulumi.StringPtrOutput)
}

// Quarantine duration in days, hours, minutes format (dddhhmm).
func (o DlpSensorFilterOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// Match files this size or larger (0 - 4294967295 kbytes).
func (o DlpSensorFilterOutput) FileSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *int { return v.FileSize }).(pulumi.IntPtrOutput)
}

// Select the number of a DLP file pattern table to match.
func (o DlpSensorFilterOutput) FileType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *int { return v.FileType }).(pulumi.IntPtrOutput)
}

// Select the type of content to match.
func (o DlpSensorFilterOutput) FilterBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *string { return v.FilterBy }).(pulumi.StringPtrOutput)
}

// Select a DLP file pattern sensitivity to match. The structure of `fpSensitivity` block is documented below.
func (o DlpSensorFilterOutput) FpSensitivities() DlpSensorFilterFpSensitivityArrayOutput {
	return o.ApplyT(func(v DlpSensorFilter) []DlpSensorFilterFpSensitivity { return v.FpSensitivities }).(DlpSensorFilterFpSensitivityArrayOutput)
}

// ID.
func (o DlpSensorFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Percentage of fingerprints in the fingerprint databases designated with the selected fp-sensitivity to match.
func (o DlpSensorFilterOutput) MatchPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *int { return v.MatchPercentage }).(pulumi.IntPtrOutput)
}

// Filter name.
func (o DlpSensorFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Check messages or files over one or more of these protocols.
func (o DlpSensorFilterOutput) Proto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *string { return v.Proto }).(pulumi.StringPtrOutput)
}

// Enter a regular expression to match (max. 255 characters).
func (o DlpSensorFilterOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

// Select a DLP file pattern sensitivity to match. The structure of `sensitivity` block is documented below.
func (o DlpSensorFilterOutput) Sensitivities() DlpSensorFilterSensitivityArrayOutput {
	return o.ApplyT(func(v DlpSensorFilter) []DlpSensorFilterSensitivity { return v.Sensitivities }).(DlpSensorFilterSensitivityArrayOutput)
}

// Select the severity or threat level that matches this filter. Valid values: `info`, `low`, `medium`, `high`, `critical`.
func (o DlpSensorFilterOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Select whether to check the content of messages (an email message) or files (downloaded files or email attachments).  Valid values: `file`, `message`.
func (o DlpSensorFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DlpSensorFilterArrayOutput struct{ *pulumi.OutputState }

func (DlpSensorFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpSensorFilter)(nil)).Elem()
}

func (o DlpSensorFilterArrayOutput) ToDlpSensorFilterArrayOutput() DlpSensorFilterArrayOutput {
	return o
}

func (o DlpSensorFilterArrayOutput) ToDlpSensorFilterArrayOutputWithContext(ctx context.Context) DlpSensorFilterArrayOutput {
	return o
}

func (o DlpSensorFilterArrayOutput) Index(i pulumi.IntInput) DlpSensorFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DlpSensorFilter {
		return vs[0].([]DlpSensorFilter)[vs[1].(int)]
	}).(DlpSensorFilterOutput)
}

type DlpSensorFilterFpSensitivity struct {
	// Select a DLP sensitivity.
	Name *string `pulumi:"name"`
}

// DlpSensorFilterFpSensitivityInput is an input type that accepts DlpSensorFilterFpSensitivityArgs and DlpSensorFilterFpSensitivityOutput values.
// You can construct a concrete instance of `DlpSensorFilterFpSensitivityInput` via:
//
//	DlpSensorFilterFpSensitivityArgs{...}
type DlpSensorFilterFpSensitivityInput interface {
	pulumi.Input

	ToDlpSensorFilterFpSensitivityOutput() DlpSensorFilterFpSensitivityOutput
	ToDlpSensorFilterFpSensitivityOutputWithContext(context.Context) DlpSensorFilterFpSensitivityOutput
}

type DlpSensorFilterFpSensitivityArgs struct {
	// Select a DLP sensitivity.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DlpSensorFilterFpSensitivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpSensorFilterFpSensitivity)(nil)).Elem()
}

func (i DlpSensorFilterFpSensitivityArgs) ToDlpSensorFilterFpSensitivityOutput() DlpSensorFilterFpSensitivityOutput {
	return i.ToDlpSensorFilterFpSensitivityOutputWithContext(context.Background())
}

func (i DlpSensorFilterFpSensitivityArgs) ToDlpSensorFilterFpSensitivityOutputWithContext(ctx context.Context) DlpSensorFilterFpSensitivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpSensorFilterFpSensitivityOutput)
}

// DlpSensorFilterFpSensitivityArrayInput is an input type that accepts DlpSensorFilterFpSensitivityArray and DlpSensorFilterFpSensitivityArrayOutput values.
// You can construct a concrete instance of `DlpSensorFilterFpSensitivityArrayInput` via:
//
//	DlpSensorFilterFpSensitivityArray{ DlpSensorFilterFpSensitivityArgs{...} }
type DlpSensorFilterFpSensitivityArrayInput interface {
	pulumi.Input

	ToDlpSensorFilterFpSensitivityArrayOutput() DlpSensorFilterFpSensitivityArrayOutput
	ToDlpSensorFilterFpSensitivityArrayOutputWithContext(context.Context) DlpSensorFilterFpSensitivityArrayOutput
}

type DlpSensorFilterFpSensitivityArray []DlpSensorFilterFpSensitivityInput

func (DlpSensorFilterFpSensitivityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpSensorFilterFpSensitivity)(nil)).Elem()
}

func (i DlpSensorFilterFpSensitivityArray) ToDlpSensorFilterFpSensitivityArrayOutput() DlpSensorFilterFpSensitivityArrayOutput {
	return i.ToDlpSensorFilterFpSensitivityArrayOutputWithContext(context.Background())
}

func (i DlpSensorFilterFpSensitivityArray) ToDlpSensorFilterFpSensitivityArrayOutputWithContext(ctx context.Context) DlpSensorFilterFpSensitivityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpSensorFilterFpSensitivityArrayOutput)
}

type DlpSensorFilterFpSensitivityOutput struct{ *pulumi.OutputState }

func (DlpSensorFilterFpSensitivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpSensorFilterFpSensitivity)(nil)).Elem()
}

func (o DlpSensorFilterFpSensitivityOutput) ToDlpSensorFilterFpSensitivityOutput() DlpSensorFilterFpSensitivityOutput {
	return o
}

func (o DlpSensorFilterFpSensitivityOutput) ToDlpSensorFilterFpSensitivityOutputWithContext(ctx context.Context) DlpSensorFilterFpSensitivityOutput {
	return o
}

// Select a DLP sensitivity.
func (o DlpSensorFilterFpSensitivityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilterFpSensitivity) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DlpSensorFilterFpSensitivityArrayOutput struct{ *pulumi.OutputState }

func (DlpSensorFilterFpSensitivityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpSensorFilterFpSensitivity)(nil)).Elem()
}

func (o DlpSensorFilterFpSensitivityArrayOutput) ToDlpSensorFilterFpSensitivityArrayOutput() DlpSensorFilterFpSensitivityArrayOutput {
	return o
}

func (o DlpSensorFilterFpSensitivityArrayOutput) ToDlpSensorFilterFpSensitivityArrayOutputWithContext(ctx context.Context) DlpSensorFilterFpSensitivityArrayOutput {
	return o
}

func (o DlpSensorFilterFpSensitivityArrayOutput) Index(i pulumi.IntInput) DlpSensorFilterFpSensitivityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DlpSensorFilterFpSensitivity {
		return vs[0].([]DlpSensorFilterFpSensitivity)[vs[1].(int)]
	}).(DlpSensorFilterFpSensitivityOutput)
}

type DlpSensorFilterSensitivity struct {
	// Select a DLP sensitivity.
	Name *string `pulumi:"name"`
}

// DlpSensorFilterSensitivityInput is an input type that accepts DlpSensorFilterSensitivityArgs and DlpSensorFilterSensitivityOutput values.
// You can construct a concrete instance of `DlpSensorFilterSensitivityInput` via:
//
//	DlpSensorFilterSensitivityArgs{...}
type DlpSensorFilterSensitivityInput interface {
	pulumi.Input

	ToDlpSensorFilterSensitivityOutput() DlpSensorFilterSensitivityOutput
	ToDlpSensorFilterSensitivityOutputWithContext(context.Context) DlpSensorFilterSensitivityOutput
}

type DlpSensorFilterSensitivityArgs struct {
	// Select a DLP sensitivity.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DlpSensorFilterSensitivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpSensorFilterSensitivity)(nil)).Elem()
}

func (i DlpSensorFilterSensitivityArgs) ToDlpSensorFilterSensitivityOutput() DlpSensorFilterSensitivityOutput {
	return i.ToDlpSensorFilterSensitivityOutputWithContext(context.Background())
}

func (i DlpSensorFilterSensitivityArgs) ToDlpSensorFilterSensitivityOutputWithContext(ctx context.Context) DlpSensorFilterSensitivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpSensorFilterSensitivityOutput)
}

// DlpSensorFilterSensitivityArrayInput is an input type that accepts DlpSensorFilterSensitivityArray and DlpSensorFilterSensitivityArrayOutput values.
// You can construct a concrete instance of `DlpSensorFilterSensitivityArrayInput` via:
//
//	DlpSensorFilterSensitivityArray{ DlpSensorFilterSensitivityArgs{...} }
type DlpSensorFilterSensitivityArrayInput interface {
	pulumi.Input

	ToDlpSensorFilterSensitivityArrayOutput() DlpSensorFilterSensitivityArrayOutput
	ToDlpSensorFilterSensitivityArrayOutputWithContext(context.Context) DlpSensorFilterSensitivityArrayOutput
}

type DlpSensorFilterSensitivityArray []DlpSensorFilterSensitivityInput

func (DlpSensorFilterSensitivityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpSensorFilterSensitivity)(nil)).Elem()
}

func (i DlpSensorFilterSensitivityArray) ToDlpSensorFilterSensitivityArrayOutput() DlpSensorFilterSensitivityArrayOutput {
	return i.ToDlpSensorFilterSensitivityArrayOutputWithContext(context.Background())
}

func (i DlpSensorFilterSensitivityArray) ToDlpSensorFilterSensitivityArrayOutputWithContext(ctx context.Context) DlpSensorFilterSensitivityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpSensorFilterSensitivityArrayOutput)
}

type DlpSensorFilterSensitivityOutput struct{ *pulumi.OutputState }

func (DlpSensorFilterSensitivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DlpSensorFilterSensitivity)(nil)).Elem()
}

func (o DlpSensorFilterSensitivityOutput) ToDlpSensorFilterSensitivityOutput() DlpSensorFilterSensitivityOutput {
	return o
}

func (o DlpSensorFilterSensitivityOutput) ToDlpSensorFilterSensitivityOutputWithContext(ctx context.Context) DlpSensorFilterSensitivityOutput {
	return o
}

// Select a DLP sensitivity.
func (o DlpSensorFilterSensitivityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DlpSensorFilterSensitivity) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DlpSensorFilterSensitivityArrayOutput struct{ *pulumi.OutputState }

func (DlpSensorFilterSensitivityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DlpSensorFilterSensitivity)(nil)).Elem()
}

func (o DlpSensorFilterSensitivityArrayOutput) ToDlpSensorFilterSensitivityArrayOutput() DlpSensorFilterSensitivityArrayOutput {
	return o
}

func (o DlpSensorFilterSensitivityArrayOutput) ToDlpSensorFilterSensitivityArrayOutputWithContext(ctx context.Context) DlpSensorFilterSensitivityArrayOutput {
	return o
}

func (o DlpSensorFilterSensitivityArrayOutput) Index(i pulumi.IntInput) DlpSensorFilterSensitivityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DlpSensorFilterSensitivity {
		return vs[0].([]DlpSensorFilterSensitivity)[vs[1].(int)]
	}).(DlpSensorFilterSensitivityOutput)
}

type DnsfilterDomainfilterEntry struct {
	// Action to take for domain filter matches. Valid values: `block`, `allow`, `monitor`.
	Action *string `pulumi:"action"`
	// Domain entries to be filtered.
	Domain *string `pulumi:"domain"`
	// Id.
	Id *int `pulumi:"id"`
	// Enable/disable this domain filter. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// DNS domain filter type. Valid values: `simple`, `regex`, `wildcard`.
	Type *string `pulumi:"type"`
}

// DnsfilterDomainfilterEntryInput is an input type that accepts DnsfilterDomainfilterEntryArgs and DnsfilterDomainfilterEntryOutput values.
// You can construct a concrete instance of `DnsfilterDomainfilterEntryInput` via:
//
//	DnsfilterDomainfilterEntryArgs{...}
type DnsfilterDomainfilterEntryInput interface {
	pulumi.Input

	ToDnsfilterDomainfilterEntryOutput() DnsfilterDomainfilterEntryOutput
	ToDnsfilterDomainfilterEntryOutputWithContext(context.Context) DnsfilterDomainfilterEntryOutput
}

type DnsfilterDomainfilterEntryArgs struct {
	// Action to take for domain filter matches. Valid values: `block`, `allow`, `monitor`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Domain entries to be filtered.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Id.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable this domain filter. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// DNS domain filter type. Valid values: `simple`, `regex`, `wildcard`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DnsfilterDomainfilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterDomainfilterEntry)(nil)).Elem()
}

func (i DnsfilterDomainfilterEntryArgs) ToDnsfilterDomainfilterEntryOutput() DnsfilterDomainfilterEntryOutput {
	return i.ToDnsfilterDomainfilterEntryOutputWithContext(context.Background())
}

func (i DnsfilterDomainfilterEntryArgs) ToDnsfilterDomainfilterEntryOutputWithContext(ctx context.Context) DnsfilterDomainfilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterDomainfilterEntryOutput)
}

// DnsfilterDomainfilterEntryArrayInput is an input type that accepts DnsfilterDomainfilterEntryArray and DnsfilterDomainfilterEntryArrayOutput values.
// You can construct a concrete instance of `DnsfilterDomainfilterEntryArrayInput` via:
//
//	DnsfilterDomainfilterEntryArray{ DnsfilterDomainfilterEntryArgs{...} }
type DnsfilterDomainfilterEntryArrayInput interface {
	pulumi.Input

	ToDnsfilterDomainfilterEntryArrayOutput() DnsfilterDomainfilterEntryArrayOutput
	ToDnsfilterDomainfilterEntryArrayOutputWithContext(context.Context) DnsfilterDomainfilterEntryArrayOutput
}

type DnsfilterDomainfilterEntryArray []DnsfilterDomainfilterEntryInput

func (DnsfilterDomainfilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsfilterDomainfilterEntry)(nil)).Elem()
}

func (i DnsfilterDomainfilterEntryArray) ToDnsfilterDomainfilterEntryArrayOutput() DnsfilterDomainfilterEntryArrayOutput {
	return i.ToDnsfilterDomainfilterEntryArrayOutputWithContext(context.Background())
}

func (i DnsfilterDomainfilterEntryArray) ToDnsfilterDomainfilterEntryArrayOutputWithContext(ctx context.Context) DnsfilterDomainfilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterDomainfilterEntryArrayOutput)
}

type DnsfilterDomainfilterEntryOutput struct{ *pulumi.OutputState }

func (DnsfilterDomainfilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterDomainfilterEntry)(nil)).Elem()
}

func (o DnsfilterDomainfilterEntryOutput) ToDnsfilterDomainfilterEntryOutput() DnsfilterDomainfilterEntryOutput {
	return o
}

func (o DnsfilterDomainfilterEntryOutput) ToDnsfilterDomainfilterEntryOutputWithContext(ctx context.Context) DnsfilterDomainfilterEntryOutput {
	return o
}

// Action to take for domain filter matches. Valid values: `block`, `allow`, `monitor`.
func (o DnsfilterDomainfilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterDomainfilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Domain entries to be filtered.
func (o DnsfilterDomainfilterEntryOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterDomainfilterEntry) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Id.
func (o DnsfilterDomainfilterEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsfilterDomainfilterEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable this domain filter. Valid values: `enable`, `disable`.
func (o DnsfilterDomainfilterEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterDomainfilterEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// DNS domain filter type. Valid values: `simple`, `regex`, `wildcard`.
func (o DnsfilterDomainfilterEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterDomainfilterEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DnsfilterDomainfilterEntryArrayOutput struct{ *pulumi.OutputState }

func (DnsfilterDomainfilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsfilterDomainfilterEntry)(nil)).Elem()
}

func (o DnsfilterDomainfilterEntryArrayOutput) ToDnsfilterDomainfilterEntryArrayOutput() DnsfilterDomainfilterEntryArrayOutput {
	return o
}

func (o DnsfilterDomainfilterEntryArrayOutput) ToDnsfilterDomainfilterEntryArrayOutputWithContext(ctx context.Context) DnsfilterDomainfilterEntryArrayOutput {
	return o
}

func (o DnsfilterDomainfilterEntryArrayOutput) Index(i pulumi.IntInput) DnsfilterDomainfilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsfilterDomainfilterEntry {
		return vs[0].([]DnsfilterDomainfilterEntry)[vs[1].(int)]
	}).(DnsfilterDomainfilterEntryOutput)
}

type DnsfilterProfileDnsTranslation struct {
	// DNS translation type (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrType *string `pulumi:"addrType"`
	// IPv4 address or subnet on the external network to substitute for the resolved address in DNS query replies. Can be single IP address or subnet on the external network, but number of addresses must equal number of mapped IP addresses in src.
	Dst *string `pulumi:"dst"`
	// IPv6 address or subnet on the external network to substitute for the resolved address in DNS query replies. Can be single IP address or subnet on the external network, but number of addresses must equal number of mapped IP addresses in src6.
	Dst6 *string `pulumi:"dst6"`
	// ID.
	Id *int `pulumi:"id"`
	// If src and dst are subnets rather than single IP addresses, enter the netmask for both src and dst.
	Netmask *string `pulumi:"netmask"`
	// If src6 and dst6 are subnets rather than single IP addresses, enter the prefix for both src6 and dst6 (1 - 128, default = 128).
	Prefix *int `pulumi:"prefix"`
	// IPv4 address or subnet on the internal network to compare with the resolved address in DNS query replies. If the resolved address matches, the resolved address is substituted with dst.
	Src *string `pulumi:"src"`
	// IPv6 address or subnet on the internal network to compare with the resolved address in DNS query replies. If the resolved address matches, the resolved address is substituted with dst6.
	Src6 *string `pulumi:"src6"`
	// Enable/disable this DNS translation entry. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// DnsfilterProfileDnsTranslationInput is an input type that accepts DnsfilterProfileDnsTranslationArgs and DnsfilterProfileDnsTranslationOutput values.
// You can construct a concrete instance of `DnsfilterProfileDnsTranslationInput` via:
//
//	DnsfilterProfileDnsTranslationArgs{...}
type DnsfilterProfileDnsTranslationInput interface {
	pulumi.Input

	ToDnsfilterProfileDnsTranslationOutput() DnsfilterProfileDnsTranslationOutput
	ToDnsfilterProfileDnsTranslationOutputWithContext(context.Context) DnsfilterProfileDnsTranslationOutput
}

type DnsfilterProfileDnsTranslationArgs struct {
	// DNS translation type (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// IPv4 address or subnet on the external network to substitute for the resolved address in DNS query replies. Can be single IP address or subnet on the external network, but number of addresses must equal number of mapped IP addresses in src.
	Dst pulumi.StringPtrInput `pulumi:"dst"`
	// IPv6 address or subnet on the external network to substitute for the resolved address in DNS query replies. Can be single IP address or subnet on the external network, but number of addresses must equal number of mapped IP addresses in src6.
	Dst6 pulumi.StringPtrInput `pulumi:"dst6"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// If src and dst are subnets rather than single IP addresses, enter the netmask for both src and dst.
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// If src6 and dst6 are subnets rather than single IP addresses, enter the prefix for both src6 and dst6 (1 - 128, default = 128).
	Prefix pulumi.IntPtrInput `pulumi:"prefix"`
	// IPv4 address or subnet on the internal network to compare with the resolved address in DNS query replies. If the resolved address matches, the resolved address is substituted with dst.
	Src pulumi.StringPtrInput `pulumi:"src"`
	// IPv6 address or subnet on the internal network to compare with the resolved address in DNS query replies. If the resolved address matches, the resolved address is substituted with dst6.
	Src6 pulumi.StringPtrInput `pulumi:"src6"`
	// Enable/disable this DNS translation entry. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (DnsfilterProfileDnsTranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterProfileDnsTranslation)(nil)).Elem()
}

func (i DnsfilterProfileDnsTranslationArgs) ToDnsfilterProfileDnsTranslationOutput() DnsfilterProfileDnsTranslationOutput {
	return i.ToDnsfilterProfileDnsTranslationOutputWithContext(context.Background())
}

func (i DnsfilterProfileDnsTranslationArgs) ToDnsfilterProfileDnsTranslationOutputWithContext(ctx context.Context) DnsfilterProfileDnsTranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileDnsTranslationOutput)
}

// DnsfilterProfileDnsTranslationArrayInput is an input type that accepts DnsfilterProfileDnsTranslationArray and DnsfilterProfileDnsTranslationArrayOutput values.
// You can construct a concrete instance of `DnsfilterProfileDnsTranslationArrayInput` via:
//
//	DnsfilterProfileDnsTranslationArray{ DnsfilterProfileDnsTranslationArgs{...} }
type DnsfilterProfileDnsTranslationArrayInput interface {
	pulumi.Input

	ToDnsfilterProfileDnsTranslationArrayOutput() DnsfilterProfileDnsTranslationArrayOutput
	ToDnsfilterProfileDnsTranslationArrayOutputWithContext(context.Context) DnsfilterProfileDnsTranslationArrayOutput
}

type DnsfilterProfileDnsTranslationArray []DnsfilterProfileDnsTranslationInput

func (DnsfilterProfileDnsTranslationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsfilterProfileDnsTranslation)(nil)).Elem()
}

func (i DnsfilterProfileDnsTranslationArray) ToDnsfilterProfileDnsTranslationArrayOutput() DnsfilterProfileDnsTranslationArrayOutput {
	return i.ToDnsfilterProfileDnsTranslationArrayOutputWithContext(context.Background())
}

func (i DnsfilterProfileDnsTranslationArray) ToDnsfilterProfileDnsTranslationArrayOutputWithContext(ctx context.Context) DnsfilterProfileDnsTranslationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileDnsTranslationArrayOutput)
}

type DnsfilterProfileDnsTranslationOutput struct{ *pulumi.OutputState }

func (DnsfilterProfileDnsTranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterProfileDnsTranslation)(nil)).Elem()
}

func (o DnsfilterProfileDnsTranslationOutput) ToDnsfilterProfileDnsTranslationOutput() DnsfilterProfileDnsTranslationOutput {
	return o
}

func (o DnsfilterProfileDnsTranslationOutput) ToDnsfilterProfileDnsTranslationOutputWithContext(ctx context.Context) DnsfilterProfileDnsTranslationOutput {
	return o
}

// DNS translation type (IPv4 or IPv6). Valid values: `ipv4`, `ipv6`.
func (o DnsfilterProfileDnsTranslationOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileDnsTranslation) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// IPv4 address or subnet on the external network to substitute for the resolved address in DNS query replies. Can be single IP address or subnet on the external network, but number of addresses must equal number of mapped IP addresses in src.
func (o DnsfilterProfileDnsTranslationOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileDnsTranslation) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

// IPv6 address or subnet on the external network to substitute for the resolved address in DNS query replies. Can be single IP address or subnet on the external network, but number of addresses must equal number of mapped IP addresses in src6.
func (o DnsfilterProfileDnsTranslationOutput) Dst6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileDnsTranslation) *string { return v.Dst6 }).(pulumi.StringPtrOutput)
}

// ID.
func (o DnsfilterProfileDnsTranslationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileDnsTranslation) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// If src and dst are subnets rather than single IP addresses, enter the netmask for both src and dst.
func (o DnsfilterProfileDnsTranslationOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileDnsTranslation) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// If src6 and dst6 are subnets rather than single IP addresses, enter the prefix for both src6 and dst6 (1 - 128, default = 128).
func (o DnsfilterProfileDnsTranslationOutput) Prefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileDnsTranslation) *int { return v.Prefix }).(pulumi.IntPtrOutput)
}

// IPv4 address or subnet on the internal network to compare with the resolved address in DNS query replies. If the resolved address matches, the resolved address is substituted with dst.
func (o DnsfilterProfileDnsTranslationOutput) Src() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileDnsTranslation) *string { return v.Src }).(pulumi.StringPtrOutput)
}

// IPv6 address or subnet on the internal network to compare with the resolved address in DNS query replies. If the resolved address matches, the resolved address is substituted with dst6.
func (o DnsfilterProfileDnsTranslationOutput) Src6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileDnsTranslation) *string { return v.Src6 }).(pulumi.StringPtrOutput)
}

// Enable/disable this DNS translation entry. Valid values: `enable`, `disable`.
func (o DnsfilterProfileDnsTranslationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileDnsTranslation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DnsfilterProfileDnsTranslationArrayOutput struct{ *pulumi.OutputState }

func (DnsfilterProfileDnsTranslationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsfilterProfileDnsTranslation)(nil)).Elem()
}

func (o DnsfilterProfileDnsTranslationArrayOutput) ToDnsfilterProfileDnsTranslationArrayOutput() DnsfilterProfileDnsTranslationArrayOutput {
	return o
}

func (o DnsfilterProfileDnsTranslationArrayOutput) ToDnsfilterProfileDnsTranslationArrayOutputWithContext(ctx context.Context) DnsfilterProfileDnsTranslationArrayOutput {
	return o
}

func (o DnsfilterProfileDnsTranslationArrayOutput) Index(i pulumi.IntInput) DnsfilterProfileDnsTranslationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsfilterProfileDnsTranslation {
		return vs[0].([]DnsfilterProfileDnsTranslation)[vs[1].(int)]
	}).(DnsfilterProfileDnsTranslationOutput)
}

type DnsfilterProfileDomainFilter struct {
	// DNS domain filter table ID.
	DomainFilterTable *int `pulumi:"domainFilterTable"`
}

// DnsfilterProfileDomainFilterInput is an input type that accepts DnsfilterProfileDomainFilterArgs and DnsfilterProfileDomainFilterOutput values.
// You can construct a concrete instance of `DnsfilterProfileDomainFilterInput` via:
//
//	DnsfilterProfileDomainFilterArgs{...}
type DnsfilterProfileDomainFilterInput interface {
	pulumi.Input

	ToDnsfilterProfileDomainFilterOutput() DnsfilterProfileDomainFilterOutput
	ToDnsfilterProfileDomainFilterOutputWithContext(context.Context) DnsfilterProfileDomainFilterOutput
}

type DnsfilterProfileDomainFilterArgs struct {
	// DNS domain filter table ID.
	DomainFilterTable pulumi.IntPtrInput `pulumi:"domainFilterTable"`
}

func (DnsfilterProfileDomainFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterProfileDomainFilter)(nil)).Elem()
}

func (i DnsfilterProfileDomainFilterArgs) ToDnsfilterProfileDomainFilterOutput() DnsfilterProfileDomainFilterOutput {
	return i.ToDnsfilterProfileDomainFilterOutputWithContext(context.Background())
}

func (i DnsfilterProfileDomainFilterArgs) ToDnsfilterProfileDomainFilterOutputWithContext(ctx context.Context) DnsfilterProfileDomainFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileDomainFilterOutput)
}

func (i DnsfilterProfileDomainFilterArgs) ToDnsfilterProfileDomainFilterPtrOutput() DnsfilterProfileDomainFilterPtrOutput {
	return i.ToDnsfilterProfileDomainFilterPtrOutputWithContext(context.Background())
}

func (i DnsfilterProfileDomainFilterArgs) ToDnsfilterProfileDomainFilterPtrOutputWithContext(ctx context.Context) DnsfilterProfileDomainFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileDomainFilterOutput).ToDnsfilterProfileDomainFilterPtrOutputWithContext(ctx)
}

// DnsfilterProfileDomainFilterPtrInput is an input type that accepts DnsfilterProfileDomainFilterArgs, DnsfilterProfileDomainFilterPtr and DnsfilterProfileDomainFilterPtrOutput values.
// You can construct a concrete instance of `DnsfilterProfileDomainFilterPtrInput` via:
//
//	        DnsfilterProfileDomainFilterArgs{...}
//
//	or:
//
//	        nil
type DnsfilterProfileDomainFilterPtrInput interface {
	pulumi.Input

	ToDnsfilterProfileDomainFilterPtrOutput() DnsfilterProfileDomainFilterPtrOutput
	ToDnsfilterProfileDomainFilterPtrOutputWithContext(context.Context) DnsfilterProfileDomainFilterPtrOutput
}

type dnsfilterProfileDomainFilterPtrType DnsfilterProfileDomainFilterArgs

func DnsfilterProfileDomainFilterPtr(v *DnsfilterProfileDomainFilterArgs) DnsfilterProfileDomainFilterPtrInput {
	return (*dnsfilterProfileDomainFilterPtrType)(v)
}

func (*dnsfilterProfileDomainFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsfilterProfileDomainFilter)(nil)).Elem()
}

func (i *dnsfilterProfileDomainFilterPtrType) ToDnsfilterProfileDomainFilterPtrOutput() DnsfilterProfileDomainFilterPtrOutput {
	return i.ToDnsfilterProfileDomainFilterPtrOutputWithContext(context.Background())
}

func (i *dnsfilterProfileDomainFilterPtrType) ToDnsfilterProfileDomainFilterPtrOutputWithContext(ctx context.Context) DnsfilterProfileDomainFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileDomainFilterPtrOutput)
}

type DnsfilterProfileDomainFilterOutput struct{ *pulumi.OutputState }

func (DnsfilterProfileDomainFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterProfileDomainFilter)(nil)).Elem()
}

func (o DnsfilterProfileDomainFilterOutput) ToDnsfilterProfileDomainFilterOutput() DnsfilterProfileDomainFilterOutput {
	return o
}

func (o DnsfilterProfileDomainFilterOutput) ToDnsfilterProfileDomainFilterOutputWithContext(ctx context.Context) DnsfilterProfileDomainFilterOutput {
	return o
}

func (o DnsfilterProfileDomainFilterOutput) ToDnsfilterProfileDomainFilterPtrOutput() DnsfilterProfileDomainFilterPtrOutput {
	return o.ToDnsfilterProfileDomainFilterPtrOutputWithContext(context.Background())
}

func (o DnsfilterProfileDomainFilterOutput) ToDnsfilterProfileDomainFilterPtrOutputWithContext(ctx context.Context) DnsfilterProfileDomainFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsfilterProfileDomainFilter) *DnsfilterProfileDomainFilter {
		return &v
	}).(DnsfilterProfileDomainFilterPtrOutput)
}

// DNS domain filter table ID.
func (o DnsfilterProfileDomainFilterOutput) DomainFilterTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileDomainFilter) *int { return v.DomainFilterTable }).(pulumi.IntPtrOutput)
}

type DnsfilterProfileDomainFilterPtrOutput struct{ *pulumi.OutputState }

func (DnsfilterProfileDomainFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsfilterProfileDomainFilter)(nil)).Elem()
}

func (o DnsfilterProfileDomainFilterPtrOutput) ToDnsfilterProfileDomainFilterPtrOutput() DnsfilterProfileDomainFilterPtrOutput {
	return o
}

func (o DnsfilterProfileDomainFilterPtrOutput) ToDnsfilterProfileDomainFilterPtrOutputWithContext(ctx context.Context) DnsfilterProfileDomainFilterPtrOutput {
	return o
}

func (o DnsfilterProfileDomainFilterPtrOutput) Elem() DnsfilterProfileDomainFilterOutput {
	return o.ApplyT(func(v *DnsfilterProfileDomainFilter) DnsfilterProfileDomainFilter {
		if v != nil {
			return *v
		}
		var ret DnsfilterProfileDomainFilter
		return ret
	}).(DnsfilterProfileDomainFilterOutput)
}

// DNS domain filter table ID.
func (o DnsfilterProfileDomainFilterPtrOutput) DomainFilterTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsfilterProfileDomainFilter) *int {
		if v == nil {
			return nil
		}
		return v.DomainFilterTable
	}).(pulumi.IntPtrOutput)
}

type DnsfilterProfileExternalIpBlocklist struct {
	// External domain block list name.
	Name *string `pulumi:"name"`
}

// DnsfilterProfileExternalIpBlocklistInput is an input type that accepts DnsfilterProfileExternalIpBlocklistArgs and DnsfilterProfileExternalIpBlocklistOutput values.
// You can construct a concrete instance of `DnsfilterProfileExternalIpBlocklistInput` via:
//
//	DnsfilterProfileExternalIpBlocklistArgs{...}
type DnsfilterProfileExternalIpBlocklistInput interface {
	pulumi.Input

	ToDnsfilterProfileExternalIpBlocklistOutput() DnsfilterProfileExternalIpBlocklistOutput
	ToDnsfilterProfileExternalIpBlocklistOutputWithContext(context.Context) DnsfilterProfileExternalIpBlocklistOutput
}

type DnsfilterProfileExternalIpBlocklistArgs struct {
	// External domain block list name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DnsfilterProfileExternalIpBlocklistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterProfileExternalIpBlocklist)(nil)).Elem()
}

func (i DnsfilterProfileExternalIpBlocklistArgs) ToDnsfilterProfileExternalIpBlocklistOutput() DnsfilterProfileExternalIpBlocklistOutput {
	return i.ToDnsfilterProfileExternalIpBlocklistOutputWithContext(context.Background())
}

func (i DnsfilterProfileExternalIpBlocklistArgs) ToDnsfilterProfileExternalIpBlocklistOutputWithContext(ctx context.Context) DnsfilterProfileExternalIpBlocklistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileExternalIpBlocklistOutput)
}

// DnsfilterProfileExternalIpBlocklistArrayInput is an input type that accepts DnsfilterProfileExternalIpBlocklistArray and DnsfilterProfileExternalIpBlocklistArrayOutput values.
// You can construct a concrete instance of `DnsfilterProfileExternalIpBlocklistArrayInput` via:
//
//	DnsfilterProfileExternalIpBlocklistArray{ DnsfilterProfileExternalIpBlocklistArgs{...} }
type DnsfilterProfileExternalIpBlocklistArrayInput interface {
	pulumi.Input

	ToDnsfilterProfileExternalIpBlocklistArrayOutput() DnsfilterProfileExternalIpBlocklistArrayOutput
	ToDnsfilterProfileExternalIpBlocklistArrayOutputWithContext(context.Context) DnsfilterProfileExternalIpBlocklistArrayOutput
}

type DnsfilterProfileExternalIpBlocklistArray []DnsfilterProfileExternalIpBlocklistInput

func (DnsfilterProfileExternalIpBlocklistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsfilterProfileExternalIpBlocklist)(nil)).Elem()
}

func (i DnsfilterProfileExternalIpBlocklistArray) ToDnsfilterProfileExternalIpBlocklistArrayOutput() DnsfilterProfileExternalIpBlocklistArrayOutput {
	return i.ToDnsfilterProfileExternalIpBlocklistArrayOutputWithContext(context.Background())
}

func (i DnsfilterProfileExternalIpBlocklistArray) ToDnsfilterProfileExternalIpBlocklistArrayOutputWithContext(ctx context.Context) DnsfilterProfileExternalIpBlocklistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileExternalIpBlocklistArrayOutput)
}

type DnsfilterProfileExternalIpBlocklistOutput struct{ *pulumi.OutputState }

func (DnsfilterProfileExternalIpBlocklistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterProfileExternalIpBlocklist)(nil)).Elem()
}

func (o DnsfilterProfileExternalIpBlocklistOutput) ToDnsfilterProfileExternalIpBlocklistOutput() DnsfilterProfileExternalIpBlocklistOutput {
	return o
}

func (o DnsfilterProfileExternalIpBlocklistOutput) ToDnsfilterProfileExternalIpBlocklistOutputWithContext(ctx context.Context) DnsfilterProfileExternalIpBlocklistOutput {
	return o
}

// External domain block list name.
func (o DnsfilterProfileExternalIpBlocklistOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileExternalIpBlocklist) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DnsfilterProfileExternalIpBlocklistArrayOutput struct{ *pulumi.OutputState }

func (DnsfilterProfileExternalIpBlocklistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsfilterProfileExternalIpBlocklist)(nil)).Elem()
}

func (o DnsfilterProfileExternalIpBlocklistArrayOutput) ToDnsfilterProfileExternalIpBlocklistArrayOutput() DnsfilterProfileExternalIpBlocklistArrayOutput {
	return o
}

func (o DnsfilterProfileExternalIpBlocklistArrayOutput) ToDnsfilterProfileExternalIpBlocklistArrayOutputWithContext(ctx context.Context) DnsfilterProfileExternalIpBlocklistArrayOutput {
	return o
}

func (o DnsfilterProfileExternalIpBlocklistArrayOutput) Index(i pulumi.IntInput) DnsfilterProfileExternalIpBlocklistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsfilterProfileExternalIpBlocklist {
		return vs[0].([]DnsfilterProfileExternalIpBlocklist)[vs[1].(int)]
	}).(DnsfilterProfileExternalIpBlocklistOutput)
}

type DnsfilterProfileFtgdDns struct {
	// FortiGuard DNS domain filters. The structure of `filters` block is documented below.
	Filters []DnsfilterProfileFtgdDnsFilter `pulumi:"filters"`
	// FortiGuard DNS filter options. Valid values: `error-allow`, `ftgd-disable`.
	Options *string `pulumi:"options"`
}

// DnsfilterProfileFtgdDnsInput is an input type that accepts DnsfilterProfileFtgdDnsArgs and DnsfilterProfileFtgdDnsOutput values.
// You can construct a concrete instance of `DnsfilterProfileFtgdDnsInput` via:
//
//	DnsfilterProfileFtgdDnsArgs{...}
type DnsfilterProfileFtgdDnsInput interface {
	pulumi.Input

	ToDnsfilterProfileFtgdDnsOutput() DnsfilterProfileFtgdDnsOutput
	ToDnsfilterProfileFtgdDnsOutputWithContext(context.Context) DnsfilterProfileFtgdDnsOutput
}

type DnsfilterProfileFtgdDnsArgs struct {
	// FortiGuard DNS domain filters. The structure of `filters` block is documented below.
	Filters DnsfilterProfileFtgdDnsFilterArrayInput `pulumi:"filters"`
	// FortiGuard DNS filter options. Valid values: `error-allow`, `ftgd-disable`.
	Options pulumi.StringPtrInput `pulumi:"options"`
}

func (DnsfilterProfileFtgdDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterProfileFtgdDns)(nil)).Elem()
}

func (i DnsfilterProfileFtgdDnsArgs) ToDnsfilterProfileFtgdDnsOutput() DnsfilterProfileFtgdDnsOutput {
	return i.ToDnsfilterProfileFtgdDnsOutputWithContext(context.Background())
}

func (i DnsfilterProfileFtgdDnsArgs) ToDnsfilterProfileFtgdDnsOutputWithContext(ctx context.Context) DnsfilterProfileFtgdDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileFtgdDnsOutput)
}

func (i DnsfilterProfileFtgdDnsArgs) ToDnsfilterProfileFtgdDnsPtrOutput() DnsfilterProfileFtgdDnsPtrOutput {
	return i.ToDnsfilterProfileFtgdDnsPtrOutputWithContext(context.Background())
}

func (i DnsfilterProfileFtgdDnsArgs) ToDnsfilterProfileFtgdDnsPtrOutputWithContext(ctx context.Context) DnsfilterProfileFtgdDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileFtgdDnsOutput).ToDnsfilterProfileFtgdDnsPtrOutputWithContext(ctx)
}

// DnsfilterProfileFtgdDnsPtrInput is an input type that accepts DnsfilterProfileFtgdDnsArgs, DnsfilterProfileFtgdDnsPtr and DnsfilterProfileFtgdDnsPtrOutput values.
// You can construct a concrete instance of `DnsfilterProfileFtgdDnsPtrInput` via:
//
//	        DnsfilterProfileFtgdDnsArgs{...}
//
//	or:
//
//	        nil
type DnsfilterProfileFtgdDnsPtrInput interface {
	pulumi.Input

	ToDnsfilterProfileFtgdDnsPtrOutput() DnsfilterProfileFtgdDnsPtrOutput
	ToDnsfilterProfileFtgdDnsPtrOutputWithContext(context.Context) DnsfilterProfileFtgdDnsPtrOutput
}

type dnsfilterProfileFtgdDnsPtrType DnsfilterProfileFtgdDnsArgs

func DnsfilterProfileFtgdDnsPtr(v *DnsfilterProfileFtgdDnsArgs) DnsfilterProfileFtgdDnsPtrInput {
	return (*dnsfilterProfileFtgdDnsPtrType)(v)
}

func (*dnsfilterProfileFtgdDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsfilterProfileFtgdDns)(nil)).Elem()
}

func (i *dnsfilterProfileFtgdDnsPtrType) ToDnsfilterProfileFtgdDnsPtrOutput() DnsfilterProfileFtgdDnsPtrOutput {
	return i.ToDnsfilterProfileFtgdDnsPtrOutputWithContext(context.Background())
}

func (i *dnsfilterProfileFtgdDnsPtrType) ToDnsfilterProfileFtgdDnsPtrOutputWithContext(ctx context.Context) DnsfilterProfileFtgdDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileFtgdDnsPtrOutput)
}

type DnsfilterProfileFtgdDnsOutput struct{ *pulumi.OutputState }

func (DnsfilterProfileFtgdDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterProfileFtgdDns)(nil)).Elem()
}

func (o DnsfilterProfileFtgdDnsOutput) ToDnsfilterProfileFtgdDnsOutput() DnsfilterProfileFtgdDnsOutput {
	return o
}

func (o DnsfilterProfileFtgdDnsOutput) ToDnsfilterProfileFtgdDnsOutputWithContext(ctx context.Context) DnsfilterProfileFtgdDnsOutput {
	return o
}

func (o DnsfilterProfileFtgdDnsOutput) ToDnsfilterProfileFtgdDnsPtrOutput() DnsfilterProfileFtgdDnsPtrOutput {
	return o.ToDnsfilterProfileFtgdDnsPtrOutputWithContext(context.Background())
}

func (o DnsfilterProfileFtgdDnsOutput) ToDnsfilterProfileFtgdDnsPtrOutputWithContext(ctx context.Context) DnsfilterProfileFtgdDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsfilterProfileFtgdDns) *DnsfilterProfileFtgdDns {
		return &v
	}).(DnsfilterProfileFtgdDnsPtrOutput)
}

// FortiGuard DNS domain filters. The structure of `filters` block is documented below.
func (o DnsfilterProfileFtgdDnsOutput) Filters() DnsfilterProfileFtgdDnsFilterArrayOutput {
	return o.ApplyT(func(v DnsfilterProfileFtgdDns) []DnsfilterProfileFtgdDnsFilter { return v.Filters }).(DnsfilterProfileFtgdDnsFilterArrayOutput)
}

// FortiGuard DNS filter options. Valid values: `error-allow`, `ftgd-disable`.
func (o DnsfilterProfileFtgdDnsOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileFtgdDns) *string { return v.Options }).(pulumi.StringPtrOutput)
}

type DnsfilterProfileFtgdDnsPtrOutput struct{ *pulumi.OutputState }

func (DnsfilterProfileFtgdDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsfilterProfileFtgdDns)(nil)).Elem()
}

func (o DnsfilterProfileFtgdDnsPtrOutput) ToDnsfilterProfileFtgdDnsPtrOutput() DnsfilterProfileFtgdDnsPtrOutput {
	return o
}

func (o DnsfilterProfileFtgdDnsPtrOutput) ToDnsfilterProfileFtgdDnsPtrOutputWithContext(ctx context.Context) DnsfilterProfileFtgdDnsPtrOutput {
	return o
}

func (o DnsfilterProfileFtgdDnsPtrOutput) Elem() DnsfilterProfileFtgdDnsOutput {
	return o.ApplyT(func(v *DnsfilterProfileFtgdDns) DnsfilterProfileFtgdDns {
		if v != nil {
			return *v
		}
		var ret DnsfilterProfileFtgdDns
		return ret
	}).(DnsfilterProfileFtgdDnsOutput)
}

// FortiGuard DNS domain filters. The structure of `filters` block is documented below.
func (o DnsfilterProfileFtgdDnsPtrOutput) Filters() DnsfilterProfileFtgdDnsFilterArrayOutput {
	return o.ApplyT(func(v *DnsfilterProfileFtgdDns) []DnsfilterProfileFtgdDnsFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(DnsfilterProfileFtgdDnsFilterArrayOutput)
}

// FortiGuard DNS filter options. Valid values: `error-allow`, `ftgd-disable`.
func (o DnsfilterProfileFtgdDnsPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsfilterProfileFtgdDns) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

type DnsfilterProfileFtgdDnsFilter struct {
	// Action to take for DNS requests matching the category. Valid values: `block`, `monitor`.
	Action *string `pulumi:"action"`
	// Category number.
	Category *int `pulumi:"category"`
	// ID number.
	Id *int `pulumi:"id"`
	// Enable/disable DNS filter logging for this DNS profile. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
}

// DnsfilterProfileFtgdDnsFilterInput is an input type that accepts DnsfilterProfileFtgdDnsFilterArgs and DnsfilterProfileFtgdDnsFilterOutput values.
// You can construct a concrete instance of `DnsfilterProfileFtgdDnsFilterInput` via:
//
//	DnsfilterProfileFtgdDnsFilterArgs{...}
type DnsfilterProfileFtgdDnsFilterInput interface {
	pulumi.Input

	ToDnsfilterProfileFtgdDnsFilterOutput() DnsfilterProfileFtgdDnsFilterOutput
	ToDnsfilterProfileFtgdDnsFilterOutputWithContext(context.Context) DnsfilterProfileFtgdDnsFilterOutput
}

type DnsfilterProfileFtgdDnsFilterArgs struct {
	// Action to take for DNS requests matching the category. Valid values: `block`, `monitor`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Category number.
	Category pulumi.IntPtrInput `pulumi:"category"`
	// ID number.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable DNS filter logging for this DNS profile. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (DnsfilterProfileFtgdDnsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterProfileFtgdDnsFilter)(nil)).Elem()
}

func (i DnsfilterProfileFtgdDnsFilterArgs) ToDnsfilterProfileFtgdDnsFilterOutput() DnsfilterProfileFtgdDnsFilterOutput {
	return i.ToDnsfilterProfileFtgdDnsFilterOutputWithContext(context.Background())
}

func (i DnsfilterProfileFtgdDnsFilterArgs) ToDnsfilterProfileFtgdDnsFilterOutputWithContext(ctx context.Context) DnsfilterProfileFtgdDnsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileFtgdDnsFilterOutput)
}

// DnsfilterProfileFtgdDnsFilterArrayInput is an input type that accepts DnsfilterProfileFtgdDnsFilterArray and DnsfilterProfileFtgdDnsFilterArrayOutput values.
// You can construct a concrete instance of `DnsfilterProfileFtgdDnsFilterArrayInput` via:
//
//	DnsfilterProfileFtgdDnsFilterArray{ DnsfilterProfileFtgdDnsFilterArgs{...} }
type DnsfilterProfileFtgdDnsFilterArrayInput interface {
	pulumi.Input

	ToDnsfilterProfileFtgdDnsFilterArrayOutput() DnsfilterProfileFtgdDnsFilterArrayOutput
	ToDnsfilterProfileFtgdDnsFilterArrayOutputWithContext(context.Context) DnsfilterProfileFtgdDnsFilterArrayOutput
}

type DnsfilterProfileFtgdDnsFilterArray []DnsfilterProfileFtgdDnsFilterInput

func (DnsfilterProfileFtgdDnsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsfilterProfileFtgdDnsFilter)(nil)).Elem()
}

func (i DnsfilterProfileFtgdDnsFilterArray) ToDnsfilterProfileFtgdDnsFilterArrayOutput() DnsfilterProfileFtgdDnsFilterArrayOutput {
	return i.ToDnsfilterProfileFtgdDnsFilterArrayOutputWithContext(context.Background())
}

func (i DnsfilterProfileFtgdDnsFilterArray) ToDnsfilterProfileFtgdDnsFilterArrayOutputWithContext(ctx context.Context) DnsfilterProfileFtgdDnsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsfilterProfileFtgdDnsFilterArrayOutput)
}

type DnsfilterProfileFtgdDnsFilterOutput struct{ *pulumi.OutputState }

func (DnsfilterProfileFtgdDnsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsfilterProfileFtgdDnsFilter)(nil)).Elem()
}

func (o DnsfilterProfileFtgdDnsFilterOutput) ToDnsfilterProfileFtgdDnsFilterOutput() DnsfilterProfileFtgdDnsFilterOutput {
	return o
}

func (o DnsfilterProfileFtgdDnsFilterOutput) ToDnsfilterProfileFtgdDnsFilterOutputWithContext(ctx context.Context) DnsfilterProfileFtgdDnsFilterOutput {
	return o
}

// Action to take for DNS requests matching the category. Valid values: `block`, `monitor`.
func (o DnsfilterProfileFtgdDnsFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileFtgdDnsFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Category number.
func (o DnsfilterProfileFtgdDnsFilterOutput) Category() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileFtgdDnsFilter) *int { return v.Category }).(pulumi.IntPtrOutput)
}

// ID number.
func (o DnsfilterProfileFtgdDnsFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileFtgdDnsFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable DNS filter logging for this DNS profile. Valid values: `enable`, `disable`.
func (o DnsfilterProfileFtgdDnsFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsfilterProfileFtgdDnsFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type DnsfilterProfileFtgdDnsFilterArrayOutput struct{ *pulumi.OutputState }

func (DnsfilterProfileFtgdDnsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsfilterProfileFtgdDnsFilter)(nil)).Elem()
}

func (o DnsfilterProfileFtgdDnsFilterArrayOutput) ToDnsfilterProfileFtgdDnsFilterArrayOutput() DnsfilterProfileFtgdDnsFilterArrayOutput {
	return o
}

func (o DnsfilterProfileFtgdDnsFilterArrayOutput) ToDnsfilterProfileFtgdDnsFilterArrayOutputWithContext(ctx context.Context) DnsfilterProfileFtgdDnsFilterArrayOutput {
	return o
}

func (o DnsfilterProfileFtgdDnsFilterArrayOutput) Index(i pulumi.IntInput) DnsfilterProfileFtgdDnsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsfilterProfileFtgdDnsFilter {
		return vs[0].([]DnsfilterProfileFtgdDnsFilter)[vs[1].(int)]
	}).(DnsfilterProfileFtgdDnsFilterOutput)
}

type DpdkGlobalInterface struct {
	// Physical interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// DpdkGlobalInterfaceInput is an input type that accepts DpdkGlobalInterfaceArgs and DpdkGlobalInterfaceOutput values.
// You can construct a concrete instance of `DpdkGlobalInterfaceInput` via:
//
//	DpdkGlobalInterfaceArgs{...}
type DpdkGlobalInterfaceInput interface {
	pulumi.Input

	ToDpdkGlobalInterfaceOutput() DpdkGlobalInterfaceOutput
	ToDpdkGlobalInterfaceOutputWithContext(context.Context) DpdkGlobalInterfaceOutput
}

type DpdkGlobalInterfaceArgs struct {
	// Physical interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (DpdkGlobalInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DpdkGlobalInterface)(nil)).Elem()
}

func (i DpdkGlobalInterfaceArgs) ToDpdkGlobalInterfaceOutput() DpdkGlobalInterfaceOutput {
	return i.ToDpdkGlobalInterfaceOutputWithContext(context.Background())
}

func (i DpdkGlobalInterfaceArgs) ToDpdkGlobalInterfaceOutputWithContext(ctx context.Context) DpdkGlobalInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpdkGlobalInterfaceOutput)
}

// DpdkGlobalInterfaceArrayInput is an input type that accepts DpdkGlobalInterfaceArray and DpdkGlobalInterfaceArrayOutput values.
// You can construct a concrete instance of `DpdkGlobalInterfaceArrayInput` via:
//
//	DpdkGlobalInterfaceArray{ DpdkGlobalInterfaceArgs{...} }
type DpdkGlobalInterfaceArrayInput interface {
	pulumi.Input

	ToDpdkGlobalInterfaceArrayOutput() DpdkGlobalInterfaceArrayOutput
	ToDpdkGlobalInterfaceArrayOutputWithContext(context.Context) DpdkGlobalInterfaceArrayOutput
}

type DpdkGlobalInterfaceArray []DpdkGlobalInterfaceInput

func (DpdkGlobalInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DpdkGlobalInterface)(nil)).Elem()
}

func (i DpdkGlobalInterfaceArray) ToDpdkGlobalInterfaceArrayOutput() DpdkGlobalInterfaceArrayOutput {
	return i.ToDpdkGlobalInterfaceArrayOutputWithContext(context.Background())
}

func (i DpdkGlobalInterfaceArray) ToDpdkGlobalInterfaceArrayOutputWithContext(ctx context.Context) DpdkGlobalInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpdkGlobalInterfaceArrayOutput)
}

type DpdkGlobalInterfaceOutput struct{ *pulumi.OutputState }

func (DpdkGlobalInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DpdkGlobalInterface)(nil)).Elem()
}

func (o DpdkGlobalInterfaceOutput) ToDpdkGlobalInterfaceOutput() DpdkGlobalInterfaceOutput {
	return o
}

func (o DpdkGlobalInterfaceOutput) ToDpdkGlobalInterfaceOutputWithContext(ctx context.Context) DpdkGlobalInterfaceOutput {
	return o
}

// Physical interface name.
func (o DpdkGlobalInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpdkGlobalInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type DpdkGlobalInterfaceArrayOutput struct{ *pulumi.OutputState }

func (DpdkGlobalInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DpdkGlobalInterface)(nil)).Elem()
}

func (o DpdkGlobalInterfaceArrayOutput) ToDpdkGlobalInterfaceArrayOutput() DpdkGlobalInterfaceArrayOutput {
	return o
}

func (o DpdkGlobalInterfaceArrayOutput) ToDpdkGlobalInterfaceArrayOutputWithContext(ctx context.Context) DpdkGlobalInterfaceArrayOutput {
	return o
}

func (o DpdkGlobalInterfaceArrayOutput) Index(i pulumi.IntInput) DpdkGlobalInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DpdkGlobalInterface {
		return vs[0].([]DpdkGlobalInterface)[vs[1].(int)]
	}).(DpdkGlobalInterfaceOutput)
}

type EmailfilterBlockallowlistEntry struct {
	// Reject, mark as spam or good email. Valid values: `reject`, `spam`, `clear`.
	Action *string `pulumi:"action"`
	// IP address type. Valid values: `ipv4`, `ipv6`.
	AddrType *string `pulumi:"addrType"`
	// Email address pattern.
	EmailPattern *string `pulumi:"emailPattern"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// IPv4 network address/subnet mask bits.
	Ip4Subnet *string `pulumi:"ip4Subnet"`
	// IPv6 network address/subnet mask bits.
	Ip6Subnet *string `pulumi:"ip6Subnet"`
	// Pattern to match.
	Pattern *string `pulumi:"pattern"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType *string `pulumi:"patternType"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Entry type.
	Type *string `pulumi:"type"`
}

// EmailfilterBlockallowlistEntryInput is an input type that accepts EmailfilterBlockallowlistEntryArgs and EmailfilterBlockallowlistEntryOutput values.
// You can construct a concrete instance of `EmailfilterBlockallowlistEntryInput` via:
//
//	EmailfilterBlockallowlistEntryArgs{...}
type EmailfilterBlockallowlistEntryInput interface {
	pulumi.Input

	ToEmailfilterBlockallowlistEntryOutput() EmailfilterBlockallowlistEntryOutput
	ToEmailfilterBlockallowlistEntryOutputWithContext(context.Context) EmailfilterBlockallowlistEntryOutput
}

type EmailfilterBlockallowlistEntryArgs struct {
	// Reject, mark as spam or good email. Valid values: `reject`, `spam`, `clear`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP address type. Valid values: `ipv4`, `ipv6`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Email address pattern.
	EmailPattern pulumi.StringPtrInput `pulumi:"emailPattern"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 network address/subnet mask bits.
	Ip4Subnet pulumi.StringPtrInput `pulumi:"ip4Subnet"`
	// IPv6 network address/subnet mask bits.
	Ip6Subnet pulumi.StringPtrInput `pulumi:"ip6Subnet"`
	// Pattern to match.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Entry type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (EmailfilterBlockallowlistEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterBlockallowlistEntry)(nil)).Elem()
}

func (i EmailfilterBlockallowlistEntryArgs) ToEmailfilterBlockallowlistEntryOutput() EmailfilterBlockallowlistEntryOutput {
	return i.ToEmailfilterBlockallowlistEntryOutputWithContext(context.Background())
}

func (i EmailfilterBlockallowlistEntryArgs) ToEmailfilterBlockallowlistEntryOutputWithContext(ctx context.Context) EmailfilterBlockallowlistEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterBlockallowlistEntryOutput)
}

// EmailfilterBlockallowlistEntryArrayInput is an input type that accepts EmailfilterBlockallowlistEntryArray and EmailfilterBlockallowlistEntryArrayOutput values.
// You can construct a concrete instance of `EmailfilterBlockallowlistEntryArrayInput` via:
//
//	EmailfilterBlockallowlistEntryArray{ EmailfilterBlockallowlistEntryArgs{...} }
type EmailfilterBlockallowlistEntryArrayInput interface {
	pulumi.Input

	ToEmailfilterBlockallowlistEntryArrayOutput() EmailfilterBlockallowlistEntryArrayOutput
	ToEmailfilterBlockallowlistEntryArrayOutputWithContext(context.Context) EmailfilterBlockallowlistEntryArrayOutput
}

type EmailfilterBlockallowlistEntryArray []EmailfilterBlockallowlistEntryInput

func (EmailfilterBlockallowlistEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterBlockallowlistEntry)(nil)).Elem()
}

func (i EmailfilterBlockallowlistEntryArray) ToEmailfilterBlockallowlistEntryArrayOutput() EmailfilterBlockallowlistEntryArrayOutput {
	return i.ToEmailfilterBlockallowlistEntryArrayOutputWithContext(context.Background())
}

func (i EmailfilterBlockallowlistEntryArray) ToEmailfilterBlockallowlistEntryArrayOutputWithContext(ctx context.Context) EmailfilterBlockallowlistEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterBlockallowlistEntryArrayOutput)
}

type EmailfilterBlockallowlistEntryOutput struct{ *pulumi.OutputState }

func (EmailfilterBlockallowlistEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterBlockallowlistEntry)(nil)).Elem()
}

func (o EmailfilterBlockallowlistEntryOutput) ToEmailfilterBlockallowlistEntryOutput() EmailfilterBlockallowlistEntryOutput {
	return o
}

func (o EmailfilterBlockallowlistEntryOutput) ToEmailfilterBlockallowlistEntryOutputWithContext(ctx context.Context) EmailfilterBlockallowlistEntryOutput {
	return o
}

// Reject, mark as spam or good email. Valid values: `reject`, `spam`, `clear`.
func (o EmailfilterBlockallowlistEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBlockallowlistEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP address type. Valid values: `ipv4`, `ipv6`.
func (o EmailfilterBlockallowlistEntryOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBlockallowlistEntry) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Email address pattern.
func (o EmailfilterBlockallowlistEntryOutput) EmailPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBlockallowlistEntry) *string { return v.EmailPattern }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o EmailfilterBlockallowlistEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailfilterBlockallowlistEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 network address/subnet mask bits.
func (o EmailfilterBlockallowlistEntryOutput) Ip4Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBlockallowlistEntry) *string { return v.Ip4Subnet }).(pulumi.StringPtrOutput)
}

// IPv6 network address/subnet mask bits.
func (o EmailfilterBlockallowlistEntryOutput) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBlockallowlistEntry) *string { return v.Ip6Subnet }).(pulumi.StringPtrOutput)
}

// Pattern to match.
func (o EmailfilterBlockallowlistEntryOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBlockallowlistEntry) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
func (o EmailfilterBlockallowlistEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBlockallowlistEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o EmailfilterBlockallowlistEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBlockallowlistEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Entry type.
func (o EmailfilterBlockallowlistEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBlockallowlistEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type EmailfilterBlockallowlistEntryArrayOutput struct{ *pulumi.OutputState }

func (EmailfilterBlockallowlistEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterBlockallowlistEntry)(nil)).Elem()
}

func (o EmailfilterBlockallowlistEntryArrayOutput) ToEmailfilterBlockallowlistEntryArrayOutput() EmailfilterBlockallowlistEntryArrayOutput {
	return o
}

func (o EmailfilterBlockallowlistEntryArrayOutput) ToEmailfilterBlockallowlistEntryArrayOutputWithContext(ctx context.Context) EmailfilterBlockallowlistEntryArrayOutput {
	return o
}

func (o EmailfilterBlockallowlistEntryArrayOutput) Index(i pulumi.IntInput) EmailfilterBlockallowlistEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailfilterBlockallowlistEntry {
		return vs[0].([]EmailfilterBlockallowlistEntry)[vs[1].(int)]
	}).(EmailfilterBlockallowlistEntryOutput)
}

type EmailfilterBwlEntry struct {
	// Reject, mark as spam or good email. Valid values: `reject`, `spam`, `clear`.
	Action *string `pulumi:"action"`
	// IP address type. Valid values: `ipv4`, `ipv6`.
	AddrType *string `pulumi:"addrType"`
	// Email address pattern.
	EmailPattern *string `pulumi:"emailPattern"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// IPv4 network address/subnet mask bits.
	Ip4Subnet *string `pulumi:"ip4Subnet"`
	// IPv6 network address/subnet mask bits.
	Ip6Subnet *string `pulumi:"ip6Subnet"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType *string `pulumi:"patternType"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Entry type. Valid values: `ip`, `email`.
	Type *string `pulumi:"type"`
}

// EmailfilterBwlEntryInput is an input type that accepts EmailfilterBwlEntryArgs and EmailfilterBwlEntryOutput values.
// You can construct a concrete instance of `EmailfilterBwlEntryInput` via:
//
//	EmailfilterBwlEntryArgs{...}
type EmailfilterBwlEntryInput interface {
	pulumi.Input

	ToEmailfilterBwlEntryOutput() EmailfilterBwlEntryOutput
	ToEmailfilterBwlEntryOutputWithContext(context.Context) EmailfilterBwlEntryOutput
}

type EmailfilterBwlEntryArgs struct {
	// Reject, mark as spam or good email. Valid values: `reject`, `spam`, `clear`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP address type. Valid values: `ipv4`, `ipv6`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Email address pattern.
	EmailPattern pulumi.StringPtrInput `pulumi:"emailPattern"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 network address/subnet mask bits.
	Ip4Subnet pulumi.StringPtrInput `pulumi:"ip4Subnet"`
	// IPv6 network address/subnet mask bits.
	Ip6Subnet pulumi.StringPtrInput `pulumi:"ip6Subnet"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Entry type. Valid values: `ip`, `email`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (EmailfilterBwlEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterBwlEntry)(nil)).Elem()
}

func (i EmailfilterBwlEntryArgs) ToEmailfilterBwlEntryOutput() EmailfilterBwlEntryOutput {
	return i.ToEmailfilterBwlEntryOutputWithContext(context.Background())
}

func (i EmailfilterBwlEntryArgs) ToEmailfilterBwlEntryOutputWithContext(ctx context.Context) EmailfilterBwlEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterBwlEntryOutput)
}

// EmailfilterBwlEntryArrayInput is an input type that accepts EmailfilterBwlEntryArray and EmailfilterBwlEntryArrayOutput values.
// You can construct a concrete instance of `EmailfilterBwlEntryArrayInput` via:
//
//	EmailfilterBwlEntryArray{ EmailfilterBwlEntryArgs{...} }
type EmailfilterBwlEntryArrayInput interface {
	pulumi.Input

	ToEmailfilterBwlEntryArrayOutput() EmailfilterBwlEntryArrayOutput
	ToEmailfilterBwlEntryArrayOutputWithContext(context.Context) EmailfilterBwlEntryArrayOutput
}

type EmailfilterBwlEntryArray []EmailfilterBwlEntryInput

func (EmailfilterBwlEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterBwlEntry)(nil)).Elem()
}

func (i EmailfilterBwlEntryArray) ToEmailfilterBwlEntryArrayOutput() EmailfilterBwlEntryArrayOutput {
	return i.ToEmailfilterBwlEntryArrayOutputWithContext(context.Background())
}

func (i EmailfilterBwlEntryArray) ToEmailfilterBwlEntryArrayOutputWithContext(ctx context.Context) EmailfilterBwlEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterBwlEntryArrayOutput)
}

type EmailfilterBwlEntryOutput struct{ *pulumi.OutputState }

func (EmailfilterBwlEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterBwlEntry)(nil)).Elem()
}

func (o EmailfilterBwlEntryOutput) ToEmailfilterBwlEntryOutput() EmailfilterBwlEntryOutput {
	return o
}

func (o EmailfilterBwlEntryOutput) ToEmailfilterBwlEntryOutputWithContext(ctx context.Context) EmailfilterBwlEntryOutput {
	return o
}

// Reject, mark as spam or good email. Valid values: `reject`, `spam`, `clear`.
func (o EmailfilterBwlEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwlEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP address type. Valid values: `ipv4`, `ipv6`.
func (o EmailfilterBwlEntryOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwlEntry) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Email address pattern.
func (o EmailfilterBwlEntryOutput) EmailPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwlEntry) *string { return v.EmailPattern }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o EmailfilterBwlEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailfilterBwlEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 network address/subnet mask bits.
func (o EmailfilterBwlEntryOutput) Ip4Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwlEntry) *string { return v.Ip4Subnet }).(pulumi.StringPtrOutput)
}

// IPv6 network address/subnet mask bits.
func (o EmailfilterBwlEntryOutput) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwlEntry) *string { return v.Ip6Subnet }).(pulumi.StringPtrOutput)
}

// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
func (o EmailfilterBwlEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwlEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o EmailfilterBwlEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwlEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Entry type. Valid values: `ip`, `email`.
func (o EmailfilterBwlEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwlEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type EmailfilterBwlEntryArrayOutput struct{ *pulumi.OutputState }

func (EmailfilterBwlEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterBwlEntry)(nil)).Elem()
}

func (o EmailfilterBwlEntryArrayOutput) ToEmailfilterBwlEntryArrayOutput() EmailfilterBwlEntryArrayOutput {
	return o
}

func (o EmailfilterBwlEntryArrayOutput) ToEmailfilterBwlEntryArrayOutputWithContext(ctx context.Context) EmailfilterBwlEntryArrayOutput {
	return o
}

func (o EmailfilterBwlEntryArrayOutput) Index(i pulumi.IntInput) EmailfilterBwlEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailfilterBwlEntry {
		return vs[0].([]EmailfilterBwlEntry)[vs[1].(int)]
	}).(EmailfilterBwlEntryOutput)
}

type EmailfilterBwordEntry struct {
	// Mark spam or good. Valid values: `spam`, `clear`.
	Action *string `pulumi:"action"`
	// Banned word entry ID.
	Id *int `pulumi:"id"`
	// Language for the banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`.
	Language *string `pulumi:"language"`
	// Pattern for the banned word.
	Pattern *string `pulumi:"pattern"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType *string `pulumi:"patternType"`
	// Score value.
	Score *int `pulumi:"score"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Component of the email to be scanned. Valid values: `subject`, `body`, `all`.
	Where *string `pulumi:"where"`
}

// EmailfilterBwordEntryInput is an input type that accepts EmailfilterBwordEntryArgs and EmailfilterBwordEntryOutput values.
// You can construct a concrete instance of `EmailfilterBwordEntryInput` via:
//
//	EmailfilterBwordEntryArgs{...}
type EmailfilterBwordEntryInput interface {
	pulumi.Input

	ToEmailfilterBwordEntryOutput() EmailfilterBwordEntryOutput
	ToEmailfilterBwordEntryOutputWithContext(context.Context) EmailfilterBwordEntryOutput
}

type EmailfilterBwordEntryArgs struct {
	// Mark spam or good. Valid values: `spam`, `clear`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Banned word entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Language for the banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`.
	Language pulumi.StringPtrInput `pulumi:"language"`
	// Pattern for the banned word.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Score value.
	Score pulumi.IntPtrInput `pulumi:"score"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Component of the email to be scanned. Valid values: `subject`, `body`, `all`.
	Where pulumi.StringPtrInput `pulumi:"where"`
}

func (EmailfilterBwordEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterBwordEntry)(nil)).Elem()
}

func (i EmailfilterBwordEntryArgs) ToEmailfilterBwordEntryOutput() EmailfilterBwordEntryOutput {
	return i.ToEmailfilterBwordEntryOutputWithContext(context.Background())
}

func (i EmailfilterBwordEntryArgs) ToEmailfilterBwordEntryOutputWithContext(ctx context.Context) EmailfilterBwordEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterBwordEntryOutput)
}

// EmailfilterBwordEntryArrayInput is an input type that accepts EmailfilterBwordEntryArray and EmailfilterBwordEntryArrayOutput values.
// You can construct a concrete instance of `EmailfilterBwordEntryArrayInput` via:
//
//	EmailfilterBwordEntryArray{ EmailfilterBwordEntryArgs{...} }
type EmailfilterBwordEntryArrayInput interface {
	pulumi.Input

	ToEmailfilterBwordEntryArrayOutput() EmailfilterBwordEntryArrayOutput
	ToEmailfilterBwordEntryArrayOutputWithContext(context.Context) EmailfilterBwordEntryArrayOutput
}

type EmailfilterBwordEntryArray []EmailfilterBwordEntryInput

func (EmailfilterBwordEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterBwordEntry)(nil)).Elem()
}

func (i EmailfilterBwordEntryArray) ToEmailfilterBwordEntryArrayOutput() EmailfilterBwordEntryArrayOutput {
	return i.ToEmailfilterBwordEntryArrayOutputWithContext(context.Background())
}

func (i EmailfilterBwordEntryArray) ToEmailfilterBwordEntryArrayOutputWithContext(ctx context.Context) EmailfilterBwordEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterBwordEntryArrayOutput)
}

type EmailfilterBwordEntryOutput struct{ *pulumi.OutputState }

func (EmailfilterBwordEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterBwordEntry)(nil)).Elem()
}

func (o EmailfilterBwordEntryOutput) ToEmailfilterBwordEntryOutput() EmailfilterBwordEntryOutput {
	return o
}

func (o EmailfilterBwordEntryOutput) ToEmailfilterBwordEntryOutputWithContext(ctx context.Context) EmailfilterBwordEntryOutput {
	return o
}

// Mark spam or good. Valid values: `spam`, `clear`.
func (o EmailfilterBwordEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwordEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Banned word entry ID.
func (o EmailfilterBwordEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailfilterBwordEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Language for the banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`.
func (o EmailfilterBwordEntryOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwordEntry) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// Pattern for the banned word.
func (o EmailfilterBwordEntryOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwordEntry) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
func (o EmailfilterBwordEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwordEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Score value.
func (o EmailfilterBwordEntryOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailfilterBwordEntry) *int { return v.Score }).(pulumi.IntPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o EmailfilterBwordEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwordEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Component of the email to be scanned. Valid values: `subject`, `body`, `all`.
func (o EmailfilterBwordEntryOutput) Where() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterBwordEntry) *string { return v.Where }).(pulumi.StringPtrOutput)
}

type EmailfilterBwordEntryArrayOutput struct{ *pulumi.OutputState }

func (EmailfilterBwordEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterBwordEntry)(nil)).Elem()
}

func (o EmailfilterBwordEntryArrayOutput) ToEmailfilterBwordEntryArrayOutput() EmailfilterBwordEntryArrayOutput {
	return o
}

func (o EmailfilterBwordEntryArrayOutput) ToEmailfilterBwordEntryArrayOutputWithContext(ctx context.Context) EmailfilterBwordEntryArrayOutput {
	return o
}

func (o EmailfilterBwordEntryArrayOutput) Index(i pulumi.IntInput) EmailfilterBwordEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailfilterBwordEntry {
		return vs[0].([]EmailfilterBwordEntry)[vs[1].(int)]
	}).(EmailfilterBwordEntryOutput)
}

type EmailfilterDnsblEntry struct {
	// Reject connection or mark as spam email. Valid values: `reject`, `spam`.
	Action *string `pulumi:"action"`
	// DNSBL/ORBL entry ID.
	Id *int `pulumi:"id"`
	// DNSBL or ORBL server name.
	Server *string `pulumi:"server"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// EmailfilterDnsblEntryInput is an input type that accepts EmailfilterDnsblEntryArgs and EmailfilterDnsblEntryOutput values.
// You can construct a concrete instance of `EmailfilterDnsblEntryInput` via:
//
//	EmailfilterDnsblEntryArgs{...}
type EmailfilterDnsblEntryInput interface {
	pulumi.Input

	ToEmailfilterDnsblEntryOutput() EmailfilterDnsblEntryOutput
	ToEmailfilterDnsblEntryOutputWithContext(context.Context) EmailfilterDnsblEntryOutput
}

type EmailfilterDnsblEntryArgs struct {
	// Reject connection or mark as spam email. Valid values: `reject`, `spam`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// DNSBL/ORBL entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// DNSBL or ORBL server name.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (EmailfilterDnsblEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterDnsblEntry)(nil)).Elem()
}

func (i EmailfilterDnsblEntryArgs) ToEmailfilterDnsblEntryOutput() EmailfilterDnsblEntryOutput {
	return i.ToEmailfilterDnsblEntryOutputWithContext(context.Background())
}

func (i EmailfilterDnsblEntryArgs) ToEmailfilterDnsblEntryOutputWithContext(ctx context.Context) EmailfilterDnsblEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterDnsblEntryOutput)
}

// EmailfilterDnsblEntryArrayInput is an input type that accepts EmailfilterDnsblEntryArray and EmailfilterDnsblEntryArrayOutput values.
// You can construct a concrete instance of `EmailfilterDnsblEntryArrayInput` via:
//
//	EmailfilterDnsblEntryArray{ EmailfilterDnsblEntryArgs{...} }
type EmailfilterDnsblEntryArrayInput interface {
	pulumi.Input

	ToEmailfilterDnsblEntryArrayOutput() EmailfilterDnsblEntryArrayOutput
	ToEmailfilterDnsblEntryArrayOutputWithContext(context.Context) EmailfilterDnsblEntryArrayOutput
}

type EmailfilterDnsblEntryArray []EmailfilterDnsblEntryInput

func (EmailfilterDnsblEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterDnsblEntry)(nil)).Elem()
}

func (i EmailfilterDnsblEntryArray) ToEmailfilterDnsblEntryArrayOutput() EmailfilterDnsblEntryArrayOutput {
	return i.ToEmailfilterDnsblEntryArrayOutputWithContext(context.Background())
}

func (i EmailfilterDnsblEntryArray) ToEmailfilterDnsblEntryArrayOutputWithContext(ctx context.Context) EmailfilterDnsblEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterDnsblEntryArrayOutput)
}

type EmailfilterDnsblEntryOutput struct{ *pulumi.OutputState }

func (EmailfilterDnsblEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterDnsblEntry)(nil)).Elem()
}

func (o EmailfilterDnsblEntryOutput) ToEmailfilterDnsblEntryOutput() EmailfilterDnsblEntryOutput {
	return o
}

func (o EmailfilterDnsblEntryOutput) ToEmailfilterDnsblEntryOutputWithContext(ctx context.Context) EmailfilterDnsblEntryOutput {
	return o
}

// Reject connection or mark as spam email. Valid values: `reject`, `spam`.
func (o EmailfilterDnsblEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterDnsblEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// DNSBL/ORBL entry ID.
func (o EmailfilterDnsblEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailfilterDnsblEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// DNSBL or ORBL server name.
func (o EmailfilterDnsblEntryOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterDnsblEntry) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o EmailfilterDnsblEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterDnsblEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type EmailfilterDnsblEntryArrayOutput struct{ *pulumi.OutputState }

func (EmailfilterDnsblEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterDnsblEntry)(nil)).Elem()
}

func (o EmailfilterDnsblEntryArrayOutput) ToEmailfilterDnsblEntryArrayOutput() EmailfilterDnsblEntryArrayOutput {
	return o
}

func (o EmailfilterDnsblEntryArrayOutput) ToEmailfilterDnsblEntryArrayOutputWithContext(ctx context.Context) EmailfilterDnsblEntryArrayOutput {
	return o
}

func (o EmailfilterDnsblEntryArrayOutput) Index(i pulumi.IntInput) EmailfilterDnsblEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailfilterDnsblEntry {
		return vs[0].([]EmailfilterDnsblEntry)[vs[1].(int)]
	}).(EmailfilterDnsblEntryOutput)
}

type EmailfilterIptrustEntry struct {
	// Type of address. Valid values: `ipv4`, `ipv6`.
	AddrType *string `pulumi:"addrType"`
	// Trusted IP entry ID.
	Id *int `pulumi:"id"`
	// IPv4 network address or network address/subnet mask bits.
	Ip4Subnet *string `pulumi:"ip4Subnet"`
	// IPv6 network address/subnet mask bits.
	Ip6Subnet *string `pulumi:"ip6Subnet"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// EmailfilterIptrustEntryInput is an input type that accepts EmailfilterIptrustEntryArgs and EmailfilterIptrustEntryOutput values.
// You can construct a concrete instance of `EmailfilterIptrustEntryInput` via:
//
//	EmailfilterIptrustEntryArgs{...}
type EmailfilterIptrustEntryInput interface {
	pulumi.Input

	ToEmailfilterIptrustEntryOutput() EmailfilterIptrustEntryOutput
	ToEmailfilterIptrustEntryOutputWithContext(context.Context) EmailfilterIptrustEntryOutput
}

type EmailfilterIptrustEntryArgs struct {
	// Type of address. Valid values: `ipv4`, `ipv6`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Trusted IP entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv4 network address or network address/subnet mask bits.
	Ip4Subnet pulumi.StringPtrInput `pulumi:"ip4Subnet"`
	// IPv6 network address/subnet mask bits.
	Ip6Subnet pulumi.StringPtrInput `pulumi:"ip6Subnet"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (EmailfilterIptrustEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterIptrustEntry)(nil)).Elem()
}

func (i EmailfilterIptrustEntryArgs) ToEmailfilterIptrustEntryOutput() EmailfilterIptrustEntryOutput {
	return i.ToEmailfilterIptrustEntryOutputWithContext(context.Background())
}

func (i EmailfilterIptrustEntryArgs) ToEmailfilterIptrustEntryOutputWithContext(ctx context.Context) EmailfilterIptrustEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterIptrustEntryOutput)
}

// EmailfilterIptrustEntryArrayInput is an input type that accepts EmailfilterIptrustEntryArray and EmailfilterIptrustEntryArrayOutput values.
// You can construct a concrete instance of `EmailfilterIptrustEntryArrayInput` via:
//
//	EmailfilterIptrustEntryArray{ EmailfilterIptrustEntryArgs{...} }
type EmailfilterIptrustEntryArrayInput interface {
	pulumi.Input

	ToEmailfilterIptrustEntryArrayOutput() EmailfilterIptrustEntryArrayOutput
	ToEmailfilterIptrustEntryArrayOutputWithContext(context.Context) EmailfilterIptrustEntryArrayOutput
}

type EmailfilterIptrustEntryArray []EmailfilterIptrustEntryInput

func (EmailfilterIptrustEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterIptrustEntry)(nil)).Elem()
}

func (i EmailfilterIptrustEntryArray) ToEmailfilterIptrustEntryArrayOutput() EmailfilterIptrustEntryArrayOutput {
	return i.ToEmailfilterIptrustEntryArrayOutputWithContext(context.Background())
}

func (i EmailfilterIptrustEntryArray) ToEmailfilterIptrustEntryArrayOutputWithContext(ctx context.Context) EmailfilterIptrustEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterIptrustEntryArrayOutput)
}

type EmailfilterIptrustEntryOutput struct{ *pulumi.OutputState }

func (EmailfilterIptrustEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterIptrustEntry)(nil)).Elem()
}

func (o EmailfilterIptrustEntryOutput) ToEmailfilterIptrustEntryOutput() EmailfilterIptrustEntryOutput {
	return o
}

func (o EmailfilterIptrustEntryOutput) ToEmailfilterIptrustEntryOutputWithContext(ctx context.Context) EmailfilterIptrustEntryOutput {
	return o
}

// Type of address. Valid values: `ipv4`, `ipv6`.
func (o EmailfilterIptrustEntryOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterIptrustEntry) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Trusted IP entry ID.
func (o EmailfilterIptrustEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailfilterIptrustEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv4 network address or network address/subnet mask bits.
func (o EmailfilterIptrustEntryOutput) Ip4Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterIptrustEntry) *string { return v.Ip4Subnet }).(pulumi.StringPtrOutput)
}

// IPv6 network address/subnet mask bits.
func (o EmailfilterIptrustEntryOutput) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterIptrustEntry) *string { return v.Ip6Subnet }).(pulumi.StringPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o EmailfilterIptrustEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterIptrustEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type EmailfilterIptrustEntryArrayOutput struct{ *pulumi.OutputState }

func (EmailfilterIptrustEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterIptrustEntry)(nil)).Elem()
}

func (o EmailfilterIptrustEntryArrayOutput) ToEmailfilterIptrustEntryArrayOutput() EmailfilterIptrustEntryArrayOutput {
	return o
}

func (o EmailfilterIptrustEntryArrayOutput) ToEmailfilterIptrustEntryArrayOutputWithContext(ctx context.Context) EmailfilterIptrustEntryArrayOutput {
	return o
}

func (o EmailfilterIptrustEntryArrayOutput) Index(i pulumi.IntInput) EmailfilterIptrustEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailfilterIptrustEntry {
		return vs[0].([]EmailfilterIptrustEntry)[vs[1].(int)]
	}).(EmailfilterIptrustEntryOutput)
}

type EmailfilterMheaderEntry struct {
	// Mark spam or good. Valid values: `spam`, `clear`.
	Action *string `pulumi:"action"`
	// Pattern for the header field body.
	Fieldbody *string `pulumi:"fieldbody"`
	// Pattern for header field name.
	Fieldname *string `pulumi:"fieldname"`
	// Mime header entry ID.
	Id *int `pulumi:"id"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType *string `pulumi:"patternType"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// EmailfilterMheaderEntryInput is an input type that accepts EmailfilterMheaderEntryArgs and EmailfilterMheaderEntryOutput values.
// You can construct a concrete instance of `EmailfilterMheaderEntryInput` via:
//
//	EmailfilterMheaderEntryArgs{...}
type EmailfilterMheaderEntryInput interface {
	pulumi.Input

	ToEmailfilterMheaderEntryOutput() EmailfilterMheaderEntryOutput
	ToEmailfilterMheaderEntryOutputWithContext(context.Context) EmailfilterMheaderEntryOutput
}

type EmailfilterMheaderEntryArgs struct {
	// Mark spam or good. Valid values: `spam`, `clear`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Pattern for the header field body.
	Fieldbody pulumi.StringPtrInput `pulumi:"fieldbody"`
	// Pattern for header field name.
	Fieldname pulumi.StringPtrInput `pulumi:"fieldname"`
	// Mime header entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Enable/disable status. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (EmailfilterMheaderEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterMheaderEntry)(nil)).Elem()
}

func (i EmailfilterMheaderEntryArgs) ToEmailfilterMheaderEntryOutput() EmailfilterMheaderEntryOutput {
	return i.ToEmailfilterMheaderEntryOutputWithContext(context.Background())
}

func (i EmailfilterMheaderEntryArgs) ToEmailfilterMheaderEntryOutputWithContext(ctx context.Context) EmailfilterMheaderEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterMheaderEntryOutput)
}

// EmailfilterMheaderEntryArrayInput is an input type that accepts EmailfilterMheaderEntryArray and EmailfilterMheaderEntryArrayOutput values.
// You can construct a concrete instance of `EmailfilterMheaderEntryArrayInput` via:
//
//	EmailfilterMheaderEntryArray{ EmailfilterMheaderEntryArgs{...} }
type EmailfilterMheaderEntryArrayInput interface {
	pulumi.Input

	ToEmailfilterMheaderEntryArrayOutput() EmailfilterMheaderEntryArrayOutput
	ToEmailfilterMheaderEntryArrayOutputWithContext(context.Context) EmailfilterMheaderEntryArrayOutput
}

type EmailfilterMheaderEntryArray []EmailfilterMheaderEntryInput

func (EmailfilterMheaderEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterMheaderEntry)(nil)).Elem()
}

func (i EmailfilterMheaderEntryArray) ToEmailfilterMheaderEntryArrayOutput() EmailfilterMheaderEntryArrayOutput {
	return i.ToEmailfilterMheaderEntryArrayOutputWithContext(context.Background())
}

func (i EmailfilterMheaderEntryArray) ToEmailfilterMheaderEntryArrayOutputWithContext(ctx context.Context) EmailfilterMheaderEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterMheaderEntryArrayOutput)
}

type EmailfilterMheaderEntryOutput struct{ *pulumi.OutputState }

func (EmailfilterMheaderEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterMheaderEntry)(nil)).Elem()
}

func (o EmailfilterMheaderEntryOutput) ToEmailfilterMheaderEntryOutput() EmailfilterMheaderEntryOutput {
	return o
}

func (o EmailfilterMheaderEntryOutput) ToEmailfilterMheaderEntryOutputWithContext(ctx context.Context) EmailfilterMheaderEntryOutput {
	return o
}

// Mark spam or good. Valid values: `spam`, `clear`.
func (o EmailfilterMheaderEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterMheaderEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Pattern for the header field body.
func (o EmailfilterMheaderEntryOutput) Fieldbody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterMheaderEntry) *string { return v.Fieldbody }).(pulumi.StringPtrOutput)
}

// Pattern for header field name.
func (o EmailfilterMheaderEntryOutput) Fieldname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterMheaderEntry) *string { return v.Fieldname }).(pulumi.StringPtrOutput)
}

// Mime header entry ID.
func (o EmailfilterMheaderEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailfilterMheaderEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
func (o EmailfilterMheaderEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterMheaderEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Enable/disable status. Valid values: `enable`, `disable`.
func (o EmailfilterMheaderEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterMheaderEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type EmailfilterMheaderEntryArrayOutput struct{ *pulumi.OutputState }

func (EmailfilterMheaderEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterMheaderEntry)(nil)).Elem()
}

func (o EmailfilterMheaderEntryArrayOutput) ToEmailfilterMheaderEntryArrayOutput() EmailfilterMheaderEntryArrayOutput {
	return o
}

func (o EmailfilterMheaderEntryArrayOutput) ToEmailfilterMheaderEntryArrayOutputWithContext(ctx context.Context) EmailfilterMheaderEntryArrayOutput {
	return o
}

func (o EmailfilterMheaderEntryArrayOutput) Index(i pulumi.IntInput) EmailfilterMheaderEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailfilterMheaderEntry {
		return vs[0].([]EmailfilterMheaderEntry)[vs[1].(int)]
	}).(EmailfilterMheaderEntryOutput)
}

type EmailfilterProfileFileFilter struct {
	// File filter entries. The structure of `entries` block is documented below.
	Entries []EmailfilterProfileFileFilterEntry `pulumi:"entries"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
	ScanArchiveContents *string `pulumi:"scanArchiveContents"`
	// Enable/disable file filter. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// EmailfilterProfileFileFilterInput is an input type that accepts EmailfilterProfileFileFilterArgs and EmailfilterProfileFileFilterOutput values.
// You can construct a concrete instance of `EmailfilterProfileFileFilterInput` via:
//
//	EmailfilterProfileFileFilterArgs{...}
type EmailfilterProfileFileFilterInput interface {
	pulumi.Input

	ToEmailfilterProfileFileFilterOutput() EmailfilterProfileFileFilterOutput
	ToEmailfilterProfileFileFilterOutputWithContext(context.Context) EmailfilterProfileFileFilterOutput
}

type EmailfilterProfileFileFilterArgs struct {
	// File filter entries. The structure of `entries` block is documented below.
	Entries EmailfilterProfileFileFilterEntryArrayInput `pulumi:"entries"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
	ScanArchiveContents pulumi.StringPtrInput `pulumi:"scanArchiveContents"`
	// Enable/disable file filter. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (EmailfilterProfileFileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileFileFilter)(nil)).Elem()
}

func (i EmailfilterProfileFileFilterArgs) ToEmailfilterProfileFileFilterOutput() EmailfilterProfileFileFilterOutput {
	return i.ToEmailfilterProfileFileFilterOutputWithContext(context.Background())
}

func (i EmailfilterProfileFileFilterArgs) ToEmailfilterProfileFileFilterOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileFileFilterOutput)
}

func (i EmailfilterProfileFileFilterArgs) ToEmailfilterProfileFileFilterPtrOutput() EmailfilterProfileFileFilterPtrOutput {
	return i.ToEmailfilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i EmailfilterProfileFileFilterArgs) ToEmailfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileFileFilterOutput).ToEmailfilterProfileFileFilterPtrOutputWithContext(ctx)
}

// EmailfilterProfileFileFilterPtrInput is an input type that accepts EmailfilterProfileFileFilterArgs, EmailfilterProfileFileFilterPtr and EmailfilterProfileFileFilterPtrOutput values.
// You can construct a concrete instance of `EmailfilterProfileFileFilterPtrInput` via:
//
//	        EmailfilterProfileFileFilterArgs{...}
//
//	or:
//
//	        nil
type EmailfilterProfileFileFilterPtrInput interface {
	pulumi.Input

	ToEmailfilterProfileFileFilterPtrOutput() EmailfilterProfileFileFilterPtrOutput
	ToEmailfilterProfileFileFilterPtrOutputWithContext(context.Context) EmailfilterProfileFileFilterPtrOutput
}

type emailfilterProfileFileFilterPtrType EmailfilterProfileFileFilterArgs

func EmailfilterProfileFileFilterPtr(v *EmailfilterProfileFileFilterArgs) EmailfilterProfileFileFilterPtrInput {
	return (*emailfilterProfileFileFilterPtrType)(v)
}

func (*emailfilterProfileFileFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileFileFilter)(nil)).Elem()
}

func (i *emailfilterProfileFileFilterPtrType) ToEmailfilterProfileFileFilterPtrOutput() EmailfilterProfileFileFilterPtrOutput {
	return i.ToEmailfilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i *emailfilterProfileFileFilterPtrType) ToEmailfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileFileFilterPtrOutput)
}

type EmailfilterProfileFileFilterOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileFileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileFileFilter)(nil)).Elem()
}

func (o EmailfilterProfileFileFilterOutput) ToEmailfilterProfileFileFilterOutput() EmailfilterProfileFileFilterOutput {
	return o
}

func (o EmailfilterProfileFileFilterOutput) ToEmailfilterProfileFileFilterOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterOutput {
	return o
}

func (o EmailfilterProfileFileFilterOutput) ToEmailfilterProfileFileFilterPtrOutput() EmailfilterProfileFileFilterPtrOutput {
	return o.ToEmailfilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (o EmailfilterProfileFileFilterOutput) ToEmailfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailfilterProfileFileFilter) *EmailfilterProfileFileFilter {
		return &v
	}).(EmailfilterProfileFileFilterPtrOutput)
}

// File filter entries. The structure of `entries` block is documented below.
func (o EmailfilterProfileFileFilterOutput) Entries() EmailfilterProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilter) []EmailfilterProfileFileFilterEntry { return v.Entries }).(EmailfilterProfileFileFilterEntryArrayOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileFileFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
func (o EmailfilterProfileFileFilterOutput) ScanArchiveContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilter) *string { return v.ScanArchiveContents }).(pulumi.StringPtrOutput)
}

// Enable/disable file filter. Valid values: `enable`, `disable`.
func (o EmailfilterProfileFileFilterOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilter) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type EmailfilterProfileFileFilterPtrOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileFileFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileFileFilter)(nil)).Elem()
}

func (o EmailfilterProfileFileFilterPtrOutput) ToEmailfilterProfileFileFilterPtrOutput() EmailfilterProfileFileFilterPtrOutput {
	return o
}

func (o EmailfilterProfileFileFilterPtrOutput) ToEmailfilterProfileFileFilterPtrOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterPtrOutput {
	return o
}

func (o EmailfilterProfileFileFilterPtrOutput) Elem() EmailfilterProfileFileFilterOutput {
	return o.ApplyT(func(v *EmailfilterProfileFileFilter) EmailfilterProfileFileFilter {
		if v != nil {
			return *v
		}
		var ret EmailfilterProfileFileFilter
		return ret
	}).(EmailfilterProfileFileFilterOutput)
}

// File filter entries. The structure of `entries` block is documented below.
func (o EmailfilterProfileFileFilterPtrOutput) Entries() EmailfilterProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v *EmailfilterProfileFileFilter) []EmailfilterProfileFileFilterEntry {
		if v == nil {
			return nil
		}
		return v.Entries
	}).(EmailfilterProfileFileFilterEntryArrayOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileFileFilterPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
func (o EmailfilterProfileFileFilterPtrOutput) ScanArchiveContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.ScanArchiveContents
	}).(pulumi.StringPtrOutput)
}

// Enable/disable file filter. Valid values: `enable`, `disable`.
func (o EmailfilterProfileFileFilterPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type EmailfilterProfileFileFilterEntry struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action *string `pulumi:"action"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes []EmailfilterProfileFileFilterEntryFileType `pulumi:"fileTypes"`
	// Add a file filter.
	Filter *string `pulumi:"filter"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected *string `pulumi:"passwordProtected"`
	// Protocols to apply with. Valid values: `smtp`, `imap`, `pop3`.
	Protocol *string `pulumi:"protocol"`
}

// EmailfilterProfileFileFilterEntryInput is an input type that accepts EmailfilterProfileFileFilterEntryArgs and EmailfilterProfileFileFilterEntryOutput values.
// You can construct a concrete instance of `EmailfilterProfileFileFilterEntryInput` via:
//
//	EmailfilterProfileFileFilterEntryArgs{...}
type EmailfilterProfileFileFilterEntryInput interface {
	pulumi.Input

	ToEmailfilterProfileFileFilterEntryOutput() EmailfilterProfileFileFilterEntryOutput
	ToEmailfilterProfileFileFilterEntryOutputWithContext(context.Context) EmailfilterProfileFileFilterEntryOutput
}

type EmailfilterProfileFileFilterEntryArgs struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes EmailfilterProfileFileFilterEntryFileTypeArrayInput `pulumi:"fileTypes"`
	// Add a file filter.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected pulumi.StringPtrInput `pulumi:"passwordProtected"`
	// Protocols to apply with. Valid values: `smtp`, `imap`, `pop3`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (EmailfilterProfileFileFilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileFileFilterEntry)(nil)).Elem()
}

func (i EmailfilterProfileFileFilterEntryArgs) ToEmailfilterProfileFileFilterEntryOutput() EmailfilterProfileFileFilterEntryOutput {
	return i.ToEmailfilterProfileFileFilterEntryOutputWithContext(context.Background())
}

func (i EmailfilterProfileFileFilterEntryArgs) ToEmailfilterProfileFileFilterEntryOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileFileFilterEntryOutput)
}

// EmailfilterProfileFileFilterEntryArrayInput is an input type that accepts EmailfilterProfileFileFilterEntryArray and EmailfilterProfileFileFilterEntryArrayOutput values.
// You can construct a concrete instance of `EmailfilterProfileFileFilterEntryArrayInput` via:
//
//	EmailfilterProfileFileFilterEntryArray{ EmailfilterProfileFileFilterEntryArgs{...} }
type EmailfilterProfileFileFilterEntryArrayInput interface {
	pulumi.Input

	ToEmailfilterProfileFileFilterEntryArrayOutput() EmailfilterProfileFileFilterEntryArrayOutput
	ToEmailfilterProfileFileFilterEntryArrayOutputWithContext(context.Context) EmailfilterProfileFileFilterEntryArrayOutput
}

type EmailfilterProfileFileFilterEntryArray []EmailfilterProfileFileFilterEntryInput

func (EmailfilterProfileFileFilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterProfileFileFilterEntry)(nil)).Elem()
}

func (i EmailfilterProfileFileFilterEntryArray) ToEmailfilterProfileFileFilterEntryArrayOutput() EmailfilterProfileFileFilterEntryArrayOutput {
	return i.ToEmailfilterProfileFileFilterEntryArrayOutputWithContext(context.Background())
}

func (i EmailfilterProfileFileFilterEntryArray) ToEmailfilterProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileFileFilterEntryArrayOutput)
}

type EmailfilterProfileFileFilterEntryOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileFileFilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileFileFilterEntry)(nil)).Elem()
}

func (o EmailfilterProfileFileFilterEntryOutput) ToEmailfilterProfileFileFilterEntryOutput() EmailfilterProfileFileFilterEntryOutput {
	return o
}

func (o EmailfilterProfileFileFilterEntryOutput) ToEmailfilterProfileFileFilterEntryOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterEntryOutput {
	return o
}

// Action taken for matched file. Valid values: `log`, `block`.
func (o EmailfilterProfileFileFilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Comment.
func (o EmailfilterProfileFileFilterEntryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilterEntry) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Select file type. The structure of `fileType` block is documented below.
func (o EmailfilterProfileFileFilterEntryOutput) FileTypes() EmailfilterProfileFileFilterEntryFileTypeArrayOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilterEntry) []EmailfilterProfileFileFilterEntryFileType {
		return v.FileTypes
	}).(EmailfilterProfileFileFilterEntryFileTypeArrayOutput)
}

// Add a file filter.
func (o EmailfilterProfileFileFilterEntryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilterEntry) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Match password-protected files. Valid values: `yes`, `any`.
func (o EmailfilterProfileFileFilterEntryOutput) PasswordProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilterEntry) *string { return v.PasswordProtected }).(pulumi.StringPtrOutput)
}

// Protocols to apply with. Valid values: `smtp`, `imap`, `pop3`.
func (o EmailfilterProfileFileFilterEntryOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilterEntry) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type EmailfilterProfileFileFilterEntryArrayOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileFileFilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterProfileFileFilterEntry)(nil)).Elem()
}

func (o EmailfilterProfileFileFilterEntryArrayOutput) ToEmailfilterProfileFileFilterEntryArrayOutput() EmailfilterProfileFileFilterEntryArrayOutput {
	return o
}

func (o EmailfilterProfileFileFilterEntryArrayOutput) ToEmailfilterProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterEntryArrayOutput {
	return o
}

func (o EmailfilterProfileFileFilterEntryArrayOutput) Index(i pulumi.IntInput) EmailfilterProfileFileFilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailfilterProfileFileFilterEntry {
		return vs[0].([]EmailfilterProfileFileFilterEntry)[vs[1].(int)]
	}).(EmailfilterProfileFileFilterEntryOutput)
}

type EmailfilterProfileFileFilterEntryFileType struct {
	// File type name.
	Name *string `pulumi:"name"`
}

// EmailfilterProfileFileFilterEntryFileTypeInput is an input type that accepts EmailfilterProfileFileFilterEntryFileTypeArgs and EmailfilterProfileFileFilterEntryFileTypeOutput values.
// You can construct a concrete instance of `EmailfilterProfileFileFilterEntryFileTypeInput` via:
//
//	EmailfilterProfileFileFilterEntryFileTypeArgs{...}
type EmailfilterProfileFileFilterEntryFileTypeInput interface {
	pulumi.Input

	ToEmailfilterProfileFileFilterEntryFileTypeOutput() EmailfilterProfileFileFilterEntryFileTypeOutput
	ToEmailfilterProfileFileFilterEntryFileTypeOutputWithContext(context.Context) EmailfilterProfileFileFilterEntryFileTypeOutput
}

type EmailfilterProfileFileFilterEntryFileTypeArgs struct {
	// File type name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (EmailfilterProfileFileFilterEntryFileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i EmailfilterProfileFileFilterEntryFileTypeArgs) ToEmailfilterProfileFileFilterEntryFileTypeOutput() EmailfilterProfileFileFilterEntryFileTypeOutput {
	return i.ToEmailfilterProfileFileFilterEntryFileTypeOutputWithContext(context.Background())
}

func (i EmailfilterProfileFileFilterEntryFileTypeArgs) ToEmailfilterProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterEntryFileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileFileFilterEntryFileTypeOutput)
}

// EmailfilterProfileFileFilterEntryFileTypeArrayInput is an input type that accepts EmailfilterProfileFileFilterEntryFileTypeArray and EmailfilterProfileFileFilterEntryFileTypeArrayOutput values.
// You can construct a concrete instance of `EmailfilterProfileFileFilterEntryFileTypeArrayInput` via:
//
//	EmailfilterProfileFileFilterEntryFileTypeArray{ EmailfilterProfileFileFilterEntryFileTypeArgs{...} }
type EmailfilterProfileFileFilterEntryFileTypeArrayInput interface {
	pulumi.Input

	ToEmailfilterProfileFileFilterEntryFileTypeArrayOutput() EmailfilterProfileFileFilterEntryFileTypeArrayOutput
	ToEmailfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Context) EmailfilterProfileFileFilterEntryFileTypeArrayOutput
}

type EmailfilterProfileFileFilterEntryFileTypeArray []EmailfilterProfileFileFilterEntryFileTypeInput

func (EmailfilterProfileFileFilterEntryFileTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i EmailfilterProfileFileFilterEntryFileTypeArray) ToEmailfilterProfileFileFilterEntryFileTypeArrayOutput() EmailfilterProfileFileFilterEntryFileTypeArrayOutput {
	return i.ToEmailfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Background())
}

func (i EmailfilterProfileFileFilterEntryFileTypeArray) ToEmailfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterEntryFileTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileFileFilterEntryFileTypeArrayOutput)
}

type EmailfilterProfileFileFilterEntryFileTypeOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileFileFilterEntryFileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o EmailfilterProfileFileFilterEntryFileTypeOutput) ToEmailfilterProfileFileFilterEntryFileTypeOutput() EmailfilterProfileFileFilterEntryFileTypeOutput {
	return o
}

func (o EmailfilterProfileFileFilterEntryFileTypeOutput) ToEmailfilterProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterEntryFileTypeOutput {
	return o
}

// File type name.
func (o EmailfilterProfileFileFilterEntryFileTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileFileFilterEntryFileType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type EmailfilterProfileFileFilterEntryFileTypeArrayOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileFileFilterEntryFileTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailfilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o EmailfilterProfileFileFilterEntryFileTypeArrayOutput) ToEmailfilterProfileFileFilterEntryFileTypeArrayOutput() EmailfilterProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o EmailfilterProfileFileFilterEntryFileTypeArrayOutput) ToEmailfilterProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) EmailfilterProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o EmailfilterProfileFileFilterEntryFileTypeArrayOutput) Index(i pulumi.IntInput) EmailfilterProfileFileFilterEntryFileTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailfilterProfileFileFilterEntryFileType {
		return vs[0].([]EmailfilterProfileFileFilterEntryFileType)[vs[1].(int)]
	}).(EmailfilterProfileFileFilterEntryFileTypeOutput)
}

type EmailfilterProfileGmail struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll *string `pulumi:"logAll"`
}

// EmailfilterProfileGmailInput is an input type that accepts EmailfilterProfileGmailArgs and EmailfilterProfileGmailOutput values.
// You can construct a concrete instance of `EmailfilterProfileGmailInput` via:
//
//	EmailfilterProfileGmailArgs{...}
type EmailfilterProfileGmailInput interface {
	pulumi.Input

	ToEmailfilterProfileGmailOutput() EmailfilterProfileGmailOutput
	ToEmailfilterProfileGmailOutputWithContext(context.Context) EmailfilterProfileGmailOutput
}

type EmailfilterProfileGmailArgs struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll pulumi.StringPtrInput `pulumi:"logAll"`
}

func (EmailfilterProfileGmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileGmail)(nil)).Elem()
}

func (i EmailfilterProfileGmailArgs) ToEmailfilterProfileGmailOutput() EmailfilterProfileGmailOutput {
	return i.ToEmailfilterProfileGmailOutputWithContext(context.Background())
}

func (i EmailfilterProfileGmailArgs) ToEmailfilterProfileGmailOutputWithContext(ctx context.Context) EmailfilterProfileGmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileGmailOutput)
}

func (i EmailfilterProfileGmailArgs) ToEmailfilterProfileGmailPtrOutput() EmailfilterProfileGmailPtrOutput {
	return i.ToEmailfilterProfileGmailPtrOutputWithContext(context.Background())
}

func (i EmailfilterProfileGmailArgs) ToEmailfilterProfileGmailPtrOutputWithContext(ctx context.Context) EmailfilterProfileGmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileGmailOutput).ToEmailfilterProfileGmailPtrOutputWithContext(ctx)
}

// EmailfilterProfileGmailPtrInput is an input type that accepts EmailfilterProfileGmailArgs, EmailfilterProfileGmailPtr and EmailfilterProfileGmailPtrOutput values.
// You can construct a concrete instance of `EmailfilterProfileGmailPtrInput` via:
//
//	        EmailfilterProfileGmailArgs{...}
//
//	or:
//
//	        nil
type EmailfilterProfileGmailPtrInput interface {
	pulumi.Input

	ToEmailfilterProfileGmailPtrOutput() EmailfilterProfileGmailPtrOutput
	ToEmailfilterProfileGmailPtrOutputWithContext(context.Context) EmailfilterProfileGmailPtrOutput
}

type emailfilterProfileGmailPtrType EmailfilterProfileGmailArgs

func EmailfilterProfileGmailPtr(v *EmailfilterProfileGmailArgs) EmailfilterProfileGmailPtrInput {
	return (*emailfilterProfileGmailPtrType)(v)
}

func (*emailfilterProfileGmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileGmail)(nil)).Elem()
}

func (i *emailfilterProfileGmailPtrType) ToEmailfilterProfileGmailPtrOutput() EmailfilterProfileGmailPtrOutput {
	return i.ToEmailfilterProfileGmailPtrOutputWithContext(context.Background())
}

func (i *emailfilterProfileGmailPtrType) ToEmailfilterProfileGmailPtrOutputWithContext(ctx context.Context) EmailfilterProfileGmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileGmailPtrOutput)
}

type EmailfilterProfileGmailOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileGmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileGmail)(nil)).Elem()
}

func (o EmailfilterProfileGmailOutput) ToEmailfilterProfileGmailOutput() EmailfilterProfileGmailOutput {
	return o
}

func (o EmailfilterProfileGmailOutput) ToEmailfilterProfileGmailOutputWithContext(ctx context.Context) EmailfilterProfileGmailOutput {
	return o
}

func (o EmailfilterProfileGmailOutput) ToEmailfilterProfileGmailPtrOutput() EmailfilterProfileGmailPtrOutput {
	return o.ToEmailfilterProfileGmailPtrOutputWithContext(context.Background())
}

func (o EmailfilterProfileGmailOutput) ToEmailfilterProfileGmailPtrOutputWithContext(ctx context.Context) EmailfilterProfileGmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailfilterProfileGmail) *EmailfilterProfileGmail {
		return &v
	}).(EmailfilterProfileGmailPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileGmailOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileGmail) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileGmailOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileGmail) *string { return v.LogAll }).(pulumi.StringPtrOutput)
}

type EmailfilterProfileGmailPtrOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileGmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileGmail)(nil)).Elem()
}

func (o EmailfilterProfileGmailPtrOutput) ToEmailfilterProfileGmailPtrOutput() EmailfilterProfileGmailPtrOutput {
	return o
}

func (o EmailfilterProfileGmailPtrOutput) ToEmailfilterProfileGmailPtrOutputWithContext(ctx context.Context) EmailfilterProfileGmailPtrOutput {
	return o
}

func (o EmailfilterProfileGmailPtrOutput) Elem() EmailfilterProfileGmailOutput {
	return o.ApplyT(func(v *EmailfilterProfileGmail) EmailfilterProfileGmail {
		if v != nil {
			return *v
		}
		var ret EmailfilterProfileGmail
		return ret
	}).(EmailfilterProfileGmailOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileGmailPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileGmail) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileGmailPtrOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileGmail) *string {
		if v == nil {
			return nil
		}
		return v.LogAll
	}).(pulumi.StringPtrOutput)
}

type EmailfilterProfileImap struct {
	// Action for spam email. Valid values: `pass`, `tag`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll *string `pulumi:"logAll"`
	// Subject text or header added to spam email.
	TagMsg *string `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType *string `pulumi:"tagType"`
}

// EmailfilterProfileImapInput is an input type that accepts EmailfilterProfileImapArgs and EmailfilterProfileImapOutput values.
// You can construct a concrete instance of `EmailfilterProfileImapInput` via:
//
//	EmailfilterProfileImapArgs{...}
type EmailfilterProfileImapInput interface {
	pulumi.Input

	ToEmailfilterProfileImapOutput() EmailfilterProfileImapOutput
	ToEmailfilterProfileImapOutputWithContext(context.Context) EmailfilterProfileImapOutput
}

type EmailfilterProfileImapArgs struct {
	// Action for spam email. Valid values: `pass`, `tag`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll pulumi.StringPtrInput `pulumi:"logAll"`
	// Subject text or header added to spam email.
	TagMsg pulumi.StringPtrInput `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType pulumi.StringPtrInput `pulumi:"tagType"`
}

func (EmailfilterProfileImapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileImap)(nil)).Elem()
}

func (i EmailfilterProfileImapArgs) ToEmailfilterProfileImapOutput() EmailfilterProfileImapOutput {
	return i.ToEmailfilterProfileImapOutputWithContext(context.Background())
}

func (i EmailfilterProfileImapArgs) ToEmailfilterProfileImapOutputWithContext(ctx context.Context) EmailfilterProfileImapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileImapOutput)
}

func (i EmailfilterProfileImapArgs) ToEmailfilterProfileImapPtrOutput() EmailfilterProfileImapPtrOutput {
	return i.ToEmailfilterProfileImapPtrOutputWithContext(context.Background())
}

func (i EmailfilterProfileImapArgs) ToEmailfilterProfileImapPtrOutputWithContext(ctx context.Context) EmailfilterProfileImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileImapOutput).ToEmailfilterProfileImapPtrOutputWithContext(ctx)
}

// EmailfilterProfileImapPtrInput is an input type that accepts EmailfilterProfileImapArgs, EmailfilterProfileImapPtr and EmailfilterProfileImapPtrOutput values.
// You can construct a concrete instance of `EmailfilterProfileImapPtrInput` via:
//
//	        EmailfilterProfileImapArgs{...}
//
//	or:
//
//	        nil
type EmailfilterProfileImapPtrInput interface {
	pulumi.Input

	ToEmailfilterProfileImapPtrOutput() EmailfilterProfileImapPtrOutput
	ToEmailfilterProfileImapPtrOutputWithContext(context.Context) EmailfilterProfileImapPtrOutput
}

type emailfilterProfileImapPtrType EmailfilterProfileImapArgs

func EmailfilterProfileImapPtr(v *EmailfilterProfileImapArgs) EmailfilterProfileImapPtrInput {
	return (*emailfilterProfileImapPtrType)(v)
}

func (*emailfilterProfileImapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileImap)(nil)).Elem()
}

func (i *emailfilterProfileImapPtrType) ToEmailfilterProfileImapPtrOutput() EmailfilterProfileImapPtrOutput {
	return i.ToEmailfilterProfileImapPtrOutputWithContext(context.Background())
}

func (i *emailfilterProfileImapPtrType) ToEmailfilterProfileImapPtrOutputWithContext(ctx context.Context) EmailfilterProfileImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileImapPtrOutput)
}

type EmailfilterProfileImapOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileImapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileImap)(nil)).Elem()
}

func (o EmailfilterProfileImapOutput) ToEmailfilterProfileImapOutput() EmailfilterProfileImapOutput {
	return o
}

func (o EmailfilterProfileImapOutput) ToEmailfilterProfileImapOutputWithContext(ctx context.Context) EmailfilterProfileImapOutput {
	return o
}

func (o EmailfilterProfileImapOutput) ToEmailfilterProfileImapPtrOutput() EmailfilterProfileImapPtrOutput {
	return o.ToEmailfilterProfileImapPtrOutputWithContext(context.Background())
}

func (o EmailfilterProfileImapOutput) ToEmailfilterProfileImapPtrOutputWithContext(ctx context.Context) EmailfilterProfileImapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailfilterProfileImap) *EmailfilterProfileImap {
		return &v
	}).(EmailfilterProfileImapPtrOutput)
}

// Action for spam email. Valid values: `pass`, `tag`.
func (o EmailfilterProfileImapOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileImap) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileImapOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileImap) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileImapOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileImap) *string { return v.LogAll }).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
func (o EmailfilterProfileImapOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileImap) *string { return v.TagMsg }).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o EmailfilterProfileImapOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileImap) *string { return v.TagType }).(pulumi.StringPtrOutput)
}

type EmailfilterProfileImapPtrOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileImapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileImap)(nil)).Elem()
}

func (o EmailfilterProfileImapPtrOutput) ToEmailfilterProfileImapPtrOutput() EmailfilterProfileImapPtrOutput {
	return o
}

func (o EmailfilterProfileImapPtrOutput) ToEmailfilterProfileImapPtrOutputWithContext(ctx context.Context) EmailfilterProfileImapPtrOutput {
	return o
}

func (o EmailfilterProfileImapPtrOutput) Elem() EmailfilterProfileImapOutput {
	return o.ApplyT(func(v *EmailfilterProfileImap) EmailfilterProfileImap {
		if v != nil {
			return *v
		}
		var ret EmailfilterProfileImap
		return ret
	}).(EmailfilterProfileImapOutput)
}

// Action for spam email. Valid values: `pass`, `tag`.
func (o EmailfilterProfileImapPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileImapPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileImapPtrOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.LogAll
	}).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
func (o EmailfilterProfileImapPtrOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.TagMsg
	}).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o EmailfilterProfileImapPtrOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.TagType
	}).(pulumi.StringPtrOutput)
}

type EmailfilterProfileMapi struct {
	// Action for spam email. Valid values: `pass`, `discard`.
	Action *string `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll *string `pulumi:"logAll"`
}

// EmailfilterProfileMapiInput is an input type that accepts EmailfilterProfileMapiArgs and EmailfilterProfileMapiOutput values.
// You can construct a concrete instance of `EmailfilterProfileMapiInput` via:
//
//	EmailfilterProfileMapiArgs{...}
type EmailfilterProfileMapiInput interface {
	pulumi.Input

	ToEmailfilterProfileMapiOutput() EmailfilterProfileMapiOutput
	ToEmailfilterProfileMapiOutputWithContext(context.Context) EmailfilterProfileMapiOutput
}

type EmailfilterProfileMapiArgs struct {
	// Action for spam email. Valid values: `pass`, `discard`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll pulumi.StringPtrInput `pulumi:"logAll"`
}

func (EmailfilterProfileMapiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileMapi)(nil)).Elem()
}

func (i EmailfilterProfileMapiArgs) ToEmailfilterProfileMapiOutput() EmailfilterProfileMapiOutput {
	return i.ToEmailfilterProfileMapiOutputWithContext(context.Background())
}

func (i EmailfilterProfileMapiArgs) ToEmailfilterProfileMapiOutputWithContext(ctx context.Context) EmailfilterProfileMapiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileMapiOutput)
}

func (i EmailfilterProfileMapiArgs) ToEmailfilterProfileMapiPtrOutput() EmailfilterProfileMapiPtrOutput {
	return i.ToEmailfilterProfileMapiPtrOutputWithContext(context.Background())
}

func (i EmailfilterProfileMapiArgs) ToEmailfilterProfileMapiPtrOutputWithContext(ctx context.Context) EmailfilterProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileMapiOutput).ToEmailfilterProfileMapiPtrOutputWithContext(ctx)
}

// EmailfilterProfileMapiPtrInput is an input type that accepts EmailfilterProfileMapiArgs, EmailfilterProfileMapiPtr and EmailfilterProfileMapiPtrOutput values.
// You can construct a concrete instance of `EmailfilterProfileMapiPtrInput` via:
//
//	        EmailfilterProfileMapiArgs{...}
//
//	or:
//
//	        nil
type EmailfilterProfileMapiPtrInput interface {
	pulumi.Input

	ToEmailfilterProfileMapiPtrOutput() EmailfilterProfileMapiPtrOutput
	ToEmailfilterProfileMapiPtrOutputWithContext(context.Context) EmailfilterProfileMapiPtrOutput
}

type emailfilterProfileMapiPtrType EmailfilterProfileMapiArgs

func EmailfilterProfileMapiPtr(v *EmailfilterProfileMapiArgs) EmailfilterProfileMapiPtrInput {
	return (*emailfilterProfileMapiPtrType)(v)
}

func (*emailfilterProfileMapiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileMapi)(nil)).Elem()
}

func (i *emailfilterProfileMapiPtrType) ToEmailfilterProfileMapiPtrOutput() EmailfilterProfileMapiPtrOutput {
	return i.ToEmailfilterProfileMapiPtrOutputWithContext(context.Background())
}

func (i *emailfilterProfileMapiPtrType) ToEmailfilterProfileMapiPtrOutputWithContext(ctx context.Context) EmailfilterProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileMapiPtrOutput)
}

type EmailfilterProfileMapiOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileMapiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileMapi)(nil)).Elem()
}

func (o EmailfilterProfileMapiOutput) ToEmailfilterProfileMapiOutput() EmailfilterProfileMapiOutput {
	return o
}

func (o EmailfilterProfileMapiOutput) ToEmailfilterProfileMapiOutputWithContext(ctx context.Context) EmailfilterProfileMapiOutput {
	return o
}

func (o EmailfilterProfileMapiOutput) ToEmailfilterProfileMapiPtrOutput() EmailfilterProfileMapiPtrOutput {
	return o.ToEmailfilterProfileMapiPtrOutputWithContext(context.Background())
}

func (o EmailfilterProfileMapiOutput) ToEmailfilterProfileMapiPtrOutputWithContext(ctx context.Context) EmailfilterProfileMapiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailfilterProfileMapi) *EmailfilterProfileMapi {
		return &v
	}).(EmailfilterProfileMapiPtrOutput)
}

// Action for spam email. Valid values: `pass`, `discard`.
func (o EmailfilterProfileMapiOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileMapi) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileMapiOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileMapi) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileMapiOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileMapi) *string { return v.LogAll }).(pulumi.StringPtrOutput)
}

type EmailfilterProfileMapiPtrOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileMapiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileMapi)(nil)).Elem()
}

func (o EmailfilterProfileMapiPtrOutput) ToEmailfilterProfileMapiPtrOutput() EmailfilterProfileMapiPtrOutput {
	return o
}

func (o EmailfilterProfileMapiPtrOutput) ToEmailfilterProfileMapiPtrOutputWithContext(ctx context.Context) EmailfilterProfileMapiPtrOutput {
	return o
}

func (o EmailfilterProfileMapiPtrOutput) Elem() EmailfilterProfileMapiOutput {
	return o.ApplyT(func(v *EmailfilterProfileMapi) EmailfilterProfileMapi {
		if v != nil {
			return *v
		}
		var ret EmailfilterProfileMapi
		return ret
	}).(EmailfilterProfileMapiOutput)
}

// Action for spam email. Valid values: `pass`, `discard`.
func (o EmailfilterProfileMapiPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileMapiPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileMapiPtrOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.LogAll
	}).(pulumi.StringPtrOutput)
}

type EmailfilterProfileMsnHotmail struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll *string `pulumi:"logAll"`
}

// EmailfilterProfileMsnHotmailInput is an input type that accepts EmailfilterProfileMsnHotmailArgs and EmailfilterProfileMsnHotmailOutput values.
// You can construct a concrete instance of `EmailfilterProfileMsnHotmailInput` via:
//
//	EmailfilterProfileMsnHotmailArgs{...}
type EmailfilterProfileMsnHotmailInput interface {
	pulumi.Input

	ToEmailfilterProfileMsnHotmailOutput() EmailfilterProfileMsnHotmailOutput
	ToEmailfilterProfileMsnHotmailOutputWithContext(context.Context) EmailfilterProfileMsnHotmailOutput
}

type EmailfilterProfileMsnHotmailArgs struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll pulumi.StringPtrInput `pulumi:"logAll"`
}

func (EmailfilterProfileMsnHotmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileMsnHotmail)(nil)).Elem()
}

func (i EmailfilterProfileMsnHotmailArgs) ToEmailfilterProfileMsnHotmailOutput() EmailfilterProfileMsnHotmailOutput {
	return i.ToEmailfilterProfileMsnHotmailOutputWithContext(context.Background())
}

func (i EmailfilterProfileMsnHotmailArgs) ToEmailfilterProfileMsnHotmailOutputWithContext(ctx context.Context) EmailfilterProfileMsnHotmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileMsnHotmailOutput)
}

func (i EmailfilterProfileMsnHotmailArgs) ToEmailfilterProfileMsnHotmailPtrOutput() EmailfilterProfileMsnHotmailPtrOutput {
	return i.ToEmailfilterProfileMsnHotmailPtrOutputWithContext(context.Background())
}

func (i EmailfilterProfileMsnHotmailArgs) ToEmailfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) EmailfilterProfileMsnHotmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileMsnHotmailOutput).ToEmailfilterProfileMsnHotmailPtrOutputWithContext(ctx)
}

// EmailfilterProfileMsnHotmailPtrInput is an input type that accepts EmailfilterProfileMsnHotmailArgs, EmailfilterProfileMsnHotmailPtr and EmailfilterProfileMsnHotmailPtrOutput values.
// You can construct a concrete instance of `EmailfilterProfileMsnHotmailPtrInput` via:
//
//	        EmailfilterProfileMsnHotmailArgs{...}
//
//	or:
//
//	        nil
type EmailfilterProfileMsnHotmailPtrInput interface {
	pulumi.Input

	ToEmailfilterProfileMsnHotmailPtrOutput() EmailfilterProfileMsnHotmailPtrOutput
	ToEmailfilterProfileMsnHotmailPtrOutputWithContext(context.Context) EmailfilterProfileMsnHotmailPtrOutput
}

type emailfilterProfileMsnHotmailPtrType EmailfilterProfileMsnHotmailArgs

func EmailfilterProfileMsnHotmailPtr(v *EmailfilterProfileMsnHotmailArgs) EmailfilterProfileMsnHotmailPtrInput {
	return (*emailfilterProfileMsnHotmailPtrType)(v)
}

func (*emailfilterProfileMsnHotmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileMsnHotmail)(nil)).Elem()
}

func (i *emailfilterProfileMsnHotmailPtrType) ToEmailfilterProfileMsnHotmailPtrOutput() EmailfilterProfileMsnHotmailPtrOutput {
	return i.ToEmailfilterProfileMsnHotmailPtrOutputWithContext(context.Background())
}

func (i *emailfilterProfileMsnHotmailPtrType) ToEmailfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) EmailfilterProfileMsnHotmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileMsnHotmailPtrOutput)
}

type EmailfilterProfileMsnHotmailOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileMsnHotmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileMsnHotmail)(nil)).Elem()
}

func (o EmailfilterProfileMsnHotmailOutput) ToEmailfilterProfileMsnHotmailOutput() EmailfilterProfileMsnHotmailOutput {
	return o
}

func (o EmailfilterProfileMsnHotmailOutput) ToEmailfilterProfileMsnHotmailOutputWithContext(ctx context.Context) EmailfilterProfileMsnHotmailOutput {
	return o
}

func (o EmailfilterProfileMsnHotmailOutput) ToEmailfilterProfileMsnHotmailPtrOutput() EmailfilterProfileMsnHotmailPtrOutput {
	return o.ToEmailfilterProfileMsnHotmailPtrOutputWithContext(context.Background())
}

func (o EmailfilterProfileMsnHotmailOutput) ToEmailfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) EmailfilterProfileMsnHotmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailfilterProfileMsnHotmail) *EmailfilterProfileMsnHotmail {
		return &v
	}).(EmailfilterProfileMsnHotmailPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileMsnHotmailOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileMsnHotmail) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileMsnHotmailOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileMsnHotmail) *string { return v.LogAll }).(pulumi.StringPtrOutput)
}

type EmailfilterProfileMsnHotmailPtrOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileMsnHotmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileMsnHotmail)(nil)).Elem()
}

func (o EmailfilterProfileMsnHotmailPtrOutput) ToEmailfilterProfileMsnHotmailPtrOutput() EmailfilterProfileMsnHotmailPtrOutput {
	return o
}

func (o EmailfilterProfileMsnHotmailPtrOutput) ToEmailfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) EmailfilterProfileMsnHotmailPtrOutput {
	return o
}

func (o EmailfilterProfileMsnHotmailPtrOutput) Elem() EmailfilterProfileMsnHotmailOutput {
	return o.ApplyT(func(v *EmailfilterProfileMsnHotmail) EmailfilterProfileMsnHotmail {
		if v != nil {
			return *v
		}
		var ret EmailfilterProfileMsnHotmail
		return ret
	}).(EmailfilterProfileMsnHotmailOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileMsnHotmailPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileMsnHotmail) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileMsnHotmailPtrOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileMsnHotmail) *string {
		if v == nil {
			return nil
		}
		return v.LogAll
	}).(pulumi.StringPtrOutput)
}

type EmailfilterProfileOtherWebmails struct {
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll *string `pulumi:"logAll"`
}

// EmailfilterProfileOtherWebmailsInput is an input type that accepts EmailfilterProfileOtherWebmailsArgs and EmailfilterProfileOtherWebmailsOutput values.
// You can construct a concrete instance of `EmailfilterProfileOtherWebmailsInput` via:
//
//	EmailfilterProfileOtherWebmailsArgs{...}
type EmailfilterProfileOtherWebmailsInput interface {
	pulumi.Input

	ToEmailfilterProfileOtherWebmailsOutput() EmailfilterProfileOtherWebmailsOutput
	ToEmailfilterProfileOtherWebmailsOutputWithContext(context.Context) EmailfilterProfileOtherWebmailsOutput
}

type EmailfilterProfileOtherWebmailsArgs struct {
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll pulumi.StringPtrInput `pulumi:"logAll"`
}

func (EmailfilterProfileOtherWebmailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileOtherWebmails)(nil)).Elem()
}

func (i EmailfilterProfileOtherWebmailsArgs) ToEmailfilterProfileOtherWebmailsOutput() EmailfilterProfileOtherWebmailsOutput {
	return i.ToEmailfilterProfileOtherWebmailsOutputWithContext(context.Background())
}

func (i EmailfilterProfileOtherWebmailsArgs) ToEmailfilterProfileOtherWebmailsOutputWithContext(ctx context.Context) EmailfilterProfileOtherWebmailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileOtherWebmailsOutput)
}

func (i EmailfilterProfileOtherWebmailsArgs) ToEmailfilterProfileOtherWebmailsPtrOutput() EmailfilterProfileOtherWebmailsPtrOutput {
	return i.ToEmailfilterProfileOtherWebmailsPtrOutputWithContext(context.Background())
}

func (i EmailfilterProfileOtherWebmailsArgs) ToEmailfilterProfileOtherWebmailsPtrOutputWithContext(ctx context.Context) EmailfilterProfileOtherWebmailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileOtherWebmailsOutput).ToEmailfilterProfileOtherWebmailsPtrOutputWithContext(ctx)
}

// EmailfilterProfileOtherWebmailsPtrInput is an input type that accepts EmailfilterProfileOtherWebmailsArgs, EmailfilterProfileOtherWebmailsPtr and EmailfilterProfileOtherWebmailsPtrOutput values.
// You can construct a concrete instance of `EmailfilterProfileOtherWebmailsPtrInput` via:
//
//	        EmailfilterProfileOtherWebmailsArgs{...}
//
//	or:
//
//	        nil
type EmailfilterProfileOtherWebmailsPtrInput interface {
	pulumi.Input

	ToEmailfilterProfileOtherWebmailsPtrOutput() EmailfilterProfileOtherWebmailsPtrOutput
	ToEmailfilterProfileOtherWebmailsPtrOutputWithContext(context.Context) EmailfilterProfileOtherWebmailsPtrOutput
}

type emailfilterProfileOtherWebmailsPtrType EmailfilterProfileOtherWebmailsArgs

func EmailfilterProfileOtherWebmailsPtr(v *EmailfilterProfileOtherWebmailsArgs) EmailfilterProfileOtherWebmailsPtrInput {
	return (*emailfilterProfileOtherWebmailsPtrType)(v)
}

func (*emailfilterProfileOtherWebmailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileOtherWebmails)(nil)).Elem()
}

func (i *emailfilterProfileOtherWebmailsPtrType) ToEmailfilterProfileOtherWebmailsPtrOutput() EmailfilterProfileOtherWebmailsPtrOutput {
	return i.ToEmailfilterProfileOtherWebmailsPtrOutputWithContext(context.Background())
}

func (i *emailfilterProfileOtherWebmailsPtrType) ToEmailfilterProfileOtherWebmailsPtrOutputWithContext(ctx context.Context) EmailfilterProfileOtherWebmailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileOtherWebmailsPtrOutput)
}

type EmailfilterProfileOtherWebmailsOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileOtherWebmailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileOtherWebmails)(nil)).Elem()
}

func (o EmailfilterProfileOtherWebmailsOutput) ToEmailfilterProfileOtherWebmailsOutput() EmailfilterProfileOtherWebmailsOutput {
	return o
}

func (o EmailfilterProfileOtherWebmailsOutput) ToEmailfilterProfileOtherWebmailsOutputWithContext(ctx context.Context) EmailfilterProfileOtherWebmailsOutput {
	return o
}

func (o EmailfilterProfileOtherWebmailsOutput) ToEmailfilterProfileOtherWebmailsPtrOutput() EmailfilterProfileOtherWebmailsPtrOutput {
	return o.ToEmailfilterProfileOtherWebmailsPtrOutputWithContext(context.Background())
}

func (o EmailfilterProfileOtherWebmailsOutput) ToEmailfilterProfileOtherWebmailsPtrOutputWithContext(ctx context.Context) EmailfilterProfileOtherWebmailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailfilterProfileOtherWebmails) *EmailfilterProfileOtherWebmails {
		return &v
	}).(EmailfilterProfileOtherWebmailsPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileOtherWebmailsOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileOtherWebmails) *string { return v.LogAll }).(pulumi.StringPtrOutput)
}

type EmailfilterProfileOtherWebmailsPtrOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileOtherWebmailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileOtherWebmails)(nil)).Elem()
}

func (o EmailfilterProfileOtherWebmailsPtrOutput) ToEmailfilterProfileOtherWebmailsPtrOutput() EmailfilterProfileOtherWebmailsPtrOutput {
	return o
}

func (o EmailfilterProfileOtherWebmailsPtrOutput) ToEmailfilterProfileOtherWebmailsPtrOutputWithContext(ctx context.Context) EmailfilterProfileOtherWebmailsPtrOutput {
	return o
}

func (o EmailfilterProfileOtherWebmailsPtrOutput) Elem() EmailfilterProfileOtherWebmailsOutput {
	return o.ApplyT(func(v *EmailfilterProfileOtherWebmails) EmailfilterProfileOtherWebmails {
		if v != nil {
			return *v
		}
		var ret EmailfilterProfileOtherWebmails
		return ret
	}).(EmailfilterProfileOtherWebmailsOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileOtherWebmailsPtrOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileOtherWebmails) *string {
		if v == nil {
			return nil
		}
		return v.LogAll
	}).(pulumi.StringPtrOutput)
}

type EmailfilterProfilePop3 struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action *string `pulumi:"action"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll *string `pulumi:"logAll"`
	// Subject text or header added to spam email.
	//
	// The `pop3` block supports:
	TagMsg *string `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType *string `pulumi:"tagType"`
}

// EmailfilterProfilePop3Input is an input type that accepts EmailfilterProfilePop3Args and EmailfilterProfilePop3Output values.
// You can construct a concrete instance of `EmailfilterProfilePop3Input` via:
//
//	EmailfilterProfilePop3Args{...}
type EmailfilterProfilePop3Input interface {
	pulumi.Input

	ToEmailfilterProfilePop3Output() EmailfilterProfilePop3Output
	ToEmailfilterProfilePop3OutputWithContext(context.Context) EmailfilterProfilePop3Output
}

type EmailfilterProfilePop3Args struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll pulumi.StringPtrInput `pulumi:"logAll"`
	// Subject text or header added to spam email.
	//
	// The `pop3` block supports:
	TagMsg pulumi.StringPtrInput `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType pulumi.StringPtrInput `pulumi:"tagType"`
}

func (EmailfilterProfilePop3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfilePop3)(nil)).Elem()
}

func (i EmailfilterProfilePop3Args) ToEmailfilterProfilePop3Output() EmailfilterProfilePop3Output {
	return i.ToEmailfilterProfilePop3OutputWithContext(context.Background())
}

func (i EmailfilterProfilePop3Args) ToEmailfilterProfilePop3OutputWithContext(ctx context.Context) EmailfilterProfilePop3Output {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfilePop3Output)
}

func (i EmailfilterProfilePop3Args) ToEmailfilterProfilePop3PtrOutput() EmailfilterProfilePop3PtrOutput {
	return i.ToEmailfilterProfilePop3PtrOutputWithContext(context.Background())
}

func (i EmailfilterProfilePop3Args) ToEmailfilterProfilePop3PtrOutputWithContext(ctx context.Context) EmailfilterProfilePop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfilePop3Output).ToEmailfilterProfilePop3PtrOutputWithContext(ctx)
}

// EmailfilterProfilePop3PtrInput is an input type that accepts EmailfilterProfilePop3Args, EmailfilterProfilePop3Ptr and EmailfilterProfilePop3PtrOutput values.
// You can construct a concrete instance of `EmailfilterProfilePop3PtrInput` via:
//
//	        EmailfilterProfilePop3Args{...}
//
//	or:
//
//	        nil
type EmailfilterProfilePop3PtrInput interface {
	pulumi.Input

	ToEmailfilterProfilePop3PtrOutput() EmailfilterProfilePop3PtrOutput
	ToEmailfilterProfilePop3PtrOutputWithContext(context.Context) EmailfilterProfilePop3PtrOutput
}

type emailfilterProfilePop3PtrType EmailfilterProfilePop3Args

func EmailfilterProfilePop3Ptr(v *EmailfilterProfilePop3Args) EmailfilterProfilePop3PtrInput {
	return (*emailfilterProfilePop3PtrType)(v)
}

func (*emailfilterProfilePop3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfilePop3)(nil)).Elem()
}

func (i *emailfilterProfilePop3PtrType) ToEmailfilterProfilePop3PtrOutput() EmailfilterProfilePop3PtrOutput {
	return i.ToEmailfilterProfilePop3PtrOutputWithContext(context.Background())
}

func (i *emailfilterProfilePop3PtrType) ToEmailfilterProfilePop3PtrOutputWithContext(ctx context.Context) EmailfilterProfilePop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfilePop3PtrOutput)
}

type EmailfilterProfilePop3Output struct{ *pulumi.OutputState }

func (EmailfilterProfilePop3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfilePop3)(nil)).Elem()
}

func (o EmailfilterProfilePop3Output) ToEmailfilterProfilePop3Output() EmailfilterProfilePop3Output {
	return o
}

func (o EmailfilterProfilePop3Output) ToEmailfilterProfilePop3OutputWithContext(ctx context.Context) EmailfilterProfilePop3Output {
	return o
}

func (o EmailfilterProfilePop3Output) ToEmailfilterProfilePop3PtrOutput() EmailfilterProfilePop3PtrOutput {
	return o.ToEmailfilterProfilePop3PtrOutputWithContext(context.Background())
}

func (o EmailfilterProfilePop3Output) ToEmailfilterProfilePop3PtrOutputWithContext(ctx context.Context) EmailfilterProfilePop3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailfilterProfilePop3) *EmailfilterProfilePop3 {
		return &v
	}).(EmailfilterProfilePop3PtrOutput)
}

// Action taken for matched file. Valid values: `log`, `block`.
func (o EmailfilterProfilePop3Output) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfilePop3) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfilePop3Output) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfilePop3) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfilePop3Output) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfilePop3) *string { return v.LogAll }).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
//
// The `pop3` block supports:
func (o EmailfilterProfilePop3Output) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfilePop3) *string { return v.TagMsg }).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o EmailfilterProfilePop3Output) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfilePop3) *string { return v.TagType }).(pulumi.StringPtrOutput)
}

type EmailfilterProfilePop3PtrOutput struct{ *pulumi.OutputState }

func (EmailfilterProfilePop3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfilePop3)(nil)).Elem()
}

func (o EmailfilterProfilePop3PtrOutput) ToEmailfilterProfilePop3PtrOutput() EmailfilterProfilePop3PtrOutput {
	return o
}

func (o EmailfilterProfilePop3PtrOutput) ToEmailfilterProfilePop3PtrOutputWithContext(ctx context.Context) EmailfilterProfilePop3PtrOutput {
	return o
}

func (o EmailfilterProfilePop3PtrOutput) Elem() EmailfilterProfilePop3Output {
	return o.ApplyT(func(v *EmailfilterProfilePop3) EmailfilterProfilePop3 {
		if v != nil {
			return *v
		}
		var ret EmailfilterProfilePop3
		return ret
	}).(EmailfilterProfilePop3Output)
}

// Action taken for matched file. Valid values: `log`, `block`.
func (o EmailfilterProfilePop3PtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfilePop3PtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfilePop3PtrOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.LogAll
	}).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
//
// The `pop3` block supports:
func (o EmailfilterProfilePop3PtrOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.TagMsg
	}).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o EmailfilterProfilePop3PtrOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.TagType
	}).(pulumi.StringPtrOutput)
}

type EmailfilterProfileSmtp struct {
	// Action for spam email. Valid values: `pass`, `tag`, `discard`.
	Action *string `pulumi:"action"`
	// Enable/disable SMTP email header IP checks for spamfsip, spamrbl and spambwl filters. Valid values: `disable`, `enable`.
	Hdrip *string `pulumi:"hdrip"`
	// Enable/disable local filter to override SMTP remote check result. Valid values: `disable`, `enable`.
	LocalOverride *string `pulumi:"localOverride"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll *string `pulumi:"logAll"`
	// Subject text or header added to spam email.
	TagMsg *string `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType *string `pulumi:"tagType"`
}

// EmailfilterProfileSmtpInput is an input type that accepts EmailfilterProfileSmtpArgs and EmailfilterProfileSmtpOutput values.
// You can construct a concrete instance of `EmailfilterProfileSmtpInput` via:
//
//	EmailfilterProfileSmtpArgs{...}
type EmailfilterProfileSmtpInput interface {
	pulumi.Input

	ToEmailfilterProfileSmtpOutput() EmailfilterProfileSmtpOutput
	ToEmailfilterProfileSmtpOutputWithContext(context.Context) EmailfilterProfileSmtpOutput
}

type EmailfilterProfileSmtpArgs struct {
	// Action for spam email. Valid values: `pass`, `tag`, `discard`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable SMTP email header IP checks for spamfsip, spamrbl and spambwl filters. Valid values: `disable`, `enable`.
	Hdrip pulumi.StringPtrInput `pulumi:"hdrip"`
	// Enable/disable local filter to override SMTP remote check result. Valid values: `disable`, `enable`.
	LocalOverride pulumi.StringPtrInput `pulumi:"localOverride"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll pulumi.StringPtrInput `pulumi:"logAll"`
	// Subject text or header added to spam email.
	TagMsg pulumi.StringPtrInput `pulumi:"tagMsg"`
	// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
	TagType pulumi.StringPtrInput `pulumi:"tagType"`
}

func (EmailfilterProfileSmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileSmtp)(nil)).Elem()
}

func (i EmailfilterProfileSmtpArgs) ToEmailfilterProfileSmtpOutput() EmailfilterProfileSmtpOutput {
	return i.ToEmailfilterProfileSmtpOutputWithContext(context.Background())
}

func (i EmailfilterProfileSmtpArgs) ToEmailfilterProfileSmtpOutputWithContext(ctx context.Context) EmailfilterProfileSmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileSmtpOutput)
}

func (i EmailfilterProfileSmtpArgs) ToEmailfilterProfileSmtpPtrOutput() EmailfilterProfileSmtpPtrOutput {
	return i.ToEmailfilterProfileSmtpPtrOutputWithContext(context.Background())
}

func (i EmailfilterProfileSmtpArgs) ToEmailfilterProfileSmtpPtrOutputWithContext(ctx context.Context) EmailfilterProfileSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileSmtpOutput).ToEmailfilterProfileSmtpPtrOutputWithContext(ctx)
}

// EmailfilterProfileSmtpPtrInput is an input type that accepts EmailfilterProfileSmtpArgs, EmailfilterProfileSmtpPtr and EmailfilterProfileSmtpPtrOutput values.
// You can construct a concrete instance of `EmailfilterProfileSmtpPtrInput` via:
//
//	        EmailfilterProfileSmtpArgs{...}
//
//	or:
//
//	        nil
type EmailfilterProfileSmtpPtrInput interface {
	pulumi.Input

	ToEmailfilterProfileSmtpPtrOutput() EmailfilterProfileSmtpPtrOutput
	ToEmailfilterProfileSmtpPtrOutputWithContext(context.Context) EmailfilterProfileSmtpPtrOutput
}

type emailfilterProfileSmtpPtrType EmailfilterProfileSmtpArgs

func EmailfilterProfileSmtpPtr(v *EmailfilterProfileSmtpArgs) EmailfilterProfileSmtpPtrInput {
	return (*emailfilterProfileSmtpPtrType)(v)
}

func (*emailfilterProfileSmtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileSmtp)(nil)).Elem()
}

func (i *emailfilterProfileSmtpPtrType) ToEmailfilterProfileSmtpPtrOutput() EmailfilterProfileSmtpPtrOutput {
	return i.ToEmailfilterProfileSmtpPtrOutputWithContext(context.Background())
}

func (i *emailfilterProfileSmtpPtrType) ToEmailfilterProfileSmtpPtrOutputWithContext(ctx context.Context) EmailfilterProfileSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileSmtpPtrOutput)
}

type EmailfilterProfileSmtpOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileSmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileSmtp)(nil)).Elem()
}

func (o EmailfilterProfileSmtpOutput) ToEmailfilterProfileSmtpOutput() EmailfilterProfileSmtpOutput {
	return o
}

func (o EmailfilterProfileSmtpOutput) ToEmailfilterProfileSmtpOutputWithContext(ctx context.Context) EmailfilterProfileSmtpOutput {
	return o
}

func (o EmailfilterProfileSmtpOutput) ToEmailfilterProfileSmtpPtrOutput() EmailfilterProfileSmtpPtrOutput {
	return o.ToEmailfilterProfileSmtpPtrOutputWithContext(context.Background())
}

func (o EmailfilterProfileSmtpOutput) ToEmailfilterProfileSmtpPtrOutputWithContext(ctx context.Context) EmailfilterProfileSmtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailfilterProfileSmtp) *EmailfilterProfileSmtp {
		return &v
	}).(EmailfilterProfileSmtpPtrOutput)
}

// Action for spam email. Valid values: `pass`, `tag`, `discard`.
func (o EmailfilterProfileSmtpOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileSmtp) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP email header IP checks for spamfsip, spamrbl and spambwl filters. Valid values: `disable`, `enable`.
func (o EmailfilterProfileSmtpOutput) Hdrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileSmtp) *string { return v.Hdrip }).(pulumi.StringPtrOutput)
}

// Enable/disable local filter to override SMTP remote check result. Valid values: `disable`, `enable`.
func (o EmailfilterProfileSmtpOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileSmtp) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileSmtpOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileSmtp) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileSmtpOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileSmtp) *string { return v.LogAll }).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
func (o EmailfilterProfileSmtpOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileSmtp) *string { return v.TagMsg }).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o EmailfilterProfileSmtpOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileSmtp) *string { return v.TagType }).(pulumi.StringPtrOutput)
}

type EmailfilterProfileSmtpPtrOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileSmtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileSmtp)(nil)).Elem()
}

func (o EmailfilterProfileSmtpPtrOutput) ToEmailfilterProfileSmtpPtrOutput() EmailfilterProfileSmtpPtrOutput {
	return o
}

func (o EmailfilterProfileSmtpPtrOutput) ToEmailfilterProfileSmtpPtrOutputWithContext(ctx context.Context) EmailfilterProfileSmtpPtrOutput {
	return o
}

func (o EmailfilterProfileSmtpPtrOutput) Elem() EmailfilterProfileSmtpOutput {
	return o.ApplyT(func(v *EmailfilterProfileSmtp) EmailfilterProfileSmtp {
		if v != nil {
			return *v
		}
		var ret EmailfilterProfileSmtp
		return ret
	}).(EmailfilterProfileSmtpOutput)
}

// Action for spam email. Valid values: `pass`, `tag`, `discard`.
func (o EmailfilterProfileSmtpPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP email header IP checks for spamfsip, spamrbl and spambwl filters. Valid values: `disable`, `enable`.
func (o EmailfilterProfileSmtpPtrOutput) Hdrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Hdrip
	}).(pulumi.StringPtrOutput)
}

// Enable/disable local filter to override SMTP remote check result. Valid values: `disable`, `enable`.
func (o EmailfilterProfileSmtpPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileSmtpPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileSmtpPtrOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.LogAll
	}).(pulumi.StringPtrOutput)
}

// Subject text or header added to spam email.
func (o EmailfilterProfileSmtpPtrOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.TagMsg
	}).(pulumi.StringPtrOutput)
}

// Tag subject or header for spam email. Valid values: `subject`, `header`, `spaminfo`.
func (o EmailfilterProfileSmtpPtrOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.TagType
	}).(pulumi.StringPtrOutput)
}

type EmailfilterProfileYahooMail struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll *string `pulumi:"logAll"`
}

// EmailfilterProfileYahooMailInput is an input type that accepts EmailfilterProfileYahooMailArgs and EmailfilterProfileYahooMailOutput values.
// You can construct a concrete instance of `EmailfilterProfileYahooMailInput` via:
//
//	EmailfilterProfileYahooMailArgs{...}
type EmailfilterProfileYahooMailInput interface {
	pulumi.Input

	ToEmailfilterProfileYahooMailOutput() EmailfilterProfileYahooMailOutput
	ToEmailfilterProfileYahooMailOutputWithContext(context.Context) EmailfilterProfileYahooMailOutput
}

type EmailfilterProfileYahooMailArgs struct {
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
	LogAll pulumi.StringPtrInput `pulumi:"logAll"`
}

func (EmailfilterProfileYahooMailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileYahooMail)(nil)).Elem()
}

func (i EmailfilterProfileYahooMailArgs) ToEmailfilterProfileYahooMailOutput() EmailfilterProfileYahooMailOutput {
	return i.ToEmailfilterProfileYahooMailOutputWithContext(context.Background())
}

func (i EmailfilterProfileYahooMailArgs) ToEmailfilterProfileYahooMailOutputWithContext(ctx context.Context) EmailfilterProfileYahooMailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileYahooMailOutput)
}

func (i EmailfilterProfileYahooMailArgs) ToEmailfilterProfileYahooMailPtrOutput() EmailfilterProfileYahooMailPtrOutput {
	return i.ToEmailfilterProfileYahooMailPtrOutputWithContext(context.Background())
}

func (i EmailfilterProfileYahooMailArgs) ToEmailfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) EmailfilterProfileYahooMailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileYahooMailOutput).ToEmailfilterProfileYahooMailPtrOutputWithContext(ctx)
}

// EmailfilterProfileYahooMailPtrInput is an input type that accepts EmailfilterProfileYahooMailArgs, EmailfilterProfileYahooMailPtr and EmailfilterProfileYahooMailPtrOutput values.
// You can construct a concrete instance of `EmailfilterProfileYahooMailPtrInput` via:
//
//	        EmailfilterProfileYahooMailArgs{...}
//
//	or:
//
//	        nil
type EmailfilterProfileYahooMailPtrInput interface {
	pulumi.Input

	ToEmailfilterProfileYahooMailPtrOutput() EmailfilterProfileYahooMailPtrOutput
	ToEmailfilterProfileYahooMailPtrOutputWithContext(context.Context) EmailfilterProfileYahooMailPtrOutput
}

type emailfilterProfileYahooMailPtrType EmailfilterProfileYahooMailArgs

func EmailfilterProfileYahooMailPtr(v *EmailfilterProfileYahooMailArgs) EmailfilterProfileYahooMailPtrInput {
	return (*emailfilterProfileYahooMailPtrType)(v)
}

func (*emailfilterProfileYahooMailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileYahooMail)(nil)).Elem()
}

func (i *emailfilterProfileYahooMailPtrType) ToEmailfilterProfileYahooMailPtrOutput() EmailfilterProfileYahooMailPtrOutput {
	return i.ToEmailfilterProfileYahooMailPtrOutputWithContext(context.Background())
}

func (i *emailfilterProfileYahooMailPtrType) ToEmailfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) EmailfilterProfileYahooMailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterProfileYahooMailPtrOutput)
}

type EmailfilterProfileYahooMailOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileYahooMailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailfilterProfileYahooMail)(nil)).Elem()
}

func (o EmailfilterProfileYahooMailOutput) ToEmailfilterProfileYahooMailOutput() EmailfilterProfileYahooMailOutput {
	return o
}

func (o EmailfilterProfileYahooMailOutput) ToEmailfilterProfileYahooMailOutputWithContext(ctx context.Context) EmailfilterProfileYahooMailOutput {
	return o
}

func (o EmailfilterProfileYahooMailOutput) ToEmailfilterProfileYahooMailPtrOutput() EmailfilterProfileYahooMailPtrOutput {
	return o.ToEmailfilterProfileYahooMailPtrOutputWithContext(context.Background())
}

func (o EmailfilterProfileYahooMailOutput) ToEmailfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) EmailfilterProfileYahooMailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailfilterProfileYahooMail) *EmailfilterProfileYahooMail {
		return &v
	}).(EmailfilterProfileYahooMailPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileYahooMailOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileYahooMail) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileYahooMailOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailfilterProfileYahooMail) *string { return v.LogAll }).(pulumi.StringPtrOutput)
}

type EmailfilterProfileYahooMailPtrOutput struct{ *pulumi.OutputState }

func (EmailfilterProfileYahooMailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterProfileYahooMail)(nil)).Elem()
}

func (o EmailfilterProfileYahooMailPtrOutput) ToEmailfilterProfileYahooMailPtrOutput() EmailfilterProfileYahooMailPtrOutput {
	return o
}

func (o EmailfilterProfileYahooMailPtrOutput) ToEmailfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) EmailfilterProfileYahooMailPtrOutput {
	return o
}

func (o EmailfilterProfileYahooMailPtrOutput) Elem() EmailfilterProfileYahooMailOutput {
	return o.ApplyT(func(v *EmailfilterProfileYahooMail) EmailfilterProfileYahooMail {
		if v != nil {
			return *v
		}
		var ret EmailfilterProfileYahooMail
		return ret
	}).(EmailfilterProfileYahooMailOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o EmailfilterProfileYahooMailPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileYahooMail) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable logging of all email traffic. Valid values: `disable`, `enable`.
func (o EmailfilterProfileYahooMailPtrOutput) LogAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterProfileYahooMail) *string {
		if v == nil {
			return nil
		}
		return v.LogAll
	}).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileDeviceGroup struct {
	// Device group object from available options.
	Name *string `pulumi:"name"`
}

// EndpointcontrolProfileDeviceGroupInput is an input type that accepts EndpointcontrolProfileDeviceGroupArgs and EndpointcontrolProfileDeviceGroupOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileDeviceGroupInput` via:
//
//	EndpointcontrolProfileDeviceGroupArgs{...}
type EndpointcontrolProfileDeviceGroupInput interface {
	pulumi.Input

	ToEndpointcontrolProfileDeviceGroupOutput() EndpointcontrolProfileDeviceGroupOutput
	ToEndpointcontrolProfileDeviceGroupOutputWithContext(context.Context) EndpointcontrolProfileDeviceGroupOutput
}

type EndpointcontrolProfileDeviceGroupArgs struct {
	// Device group object from available options.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (EndpointcontrolProfileDeviceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileDeviceGroup)(nil)).Elem()
}

func (i EndpointcontrolProfileDeviceGroupArgs) ToEndpointcontrolProfileDeviceGroupOutput() EndpointcontrolProfileDeviceGroupOutput {
	return i.ToEndpointcontrolProfileDeviceGroupOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileDeviceGroupArgs) ToEndpointcontrolProfileDeviceGroupOutputWithContext(ctx context.Context) EndpointcontrolProfileDeviceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileDeviceGroupOutput)
}

// EndpointcontrolProfileDeviceGroupArrayInput is an input type that accepts EndpointcontrolProfileDeviceGroupArray and EndpointcontrolProfileDeviceGroupArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileDeviceGroupArrayInput` via:
//
//	EndpointcontrolProfileDeviceGroupArray{ EndpointcontrolProfileDeviceGroupArgs{...} }
type EndpointcontrolProfileDeviceGroupArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileDeviceGroupArrayOutput() EndpointcontrolProfileDeviceGroupArrayOutput
	ToEndpointcontrolProfileDeviceGroupArrayOutputWithContext(context.Context) EndpointcontrolProfileDeviceGroupArrayOutput
}

type EndpointcontrolProfileDeviceGroupArray []EndpointcontrolProfileDeviceGroupInput

func (EndpointcontrolProfileDeviceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileDeviceGroup)(nil)).Elem()
}

func (i EndpointcontrolProfileDeviceGroupArray) ToEndpointcontrolProfileDeviceGroupArrayOutput() EndpointcontrolProfileDeviceGroupArrayOutput {
	return i.ToEndpointcontrolProfileDeviceGroupArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileDeviceGroupArray) ToEndpointcontrolProfileDeviceGroupArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileDeviceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileDeviceGroupArrayOutput)
}

type EndpointcontrolProfileDeviceGroupOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileDeviceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileDeviceGroup)(nil)).Elem()
}

func (o EndpointcontrolProfileDeviceGroupOutput) ToEndpointcontrolProfileDeviceGroupOutput() EndpointcontrolProfileDeviceGroupOutput {
	return o
}

func (o EndpointcontrolProfileDeviceGroupOutput) ToEndpointcontrolProfileDeviceGroupOutputWithContext(ctx context.Context) EndpointcontrolProfileDeviceGroupOutput {
	return o
}

// Device group object from available options.
func (o EndpointcontrolProfileDeviceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileDeviceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileDeviceGroupArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileDeviceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileDeviceGroup)(nil)).Elem()
}

func (o EndpointcontrolProfileDeviceGroupArrayOutput) ToEndpointcontrolProfileDeviceGroupArrayOutput() EndpointcontrolProfileDeviceGroupArrayOutput {
	return o
}

func (o EndpointcontrolProfileDeviceGroupArrayOutput) ToEndpointcontrolProfileDeviceGroupArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileDeviceGroupArrayOutput {
	return o
}

func (o EndpointcontrolProfileDeviceGroupArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileDeviceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileDeviceGroup {
		return vs[0].([]EndpointcontrolProfileDeviceGroup)[vs[1].(int)]
	}).(EndpointcontrolProfileDeviceGroupOutput)
}

type EndpointcontrolProfileForticlientAndroidSettings struct {
	// Enable/disable FortiClient web category filtering when protected by FortiGate. Valid values: `enable`, `disable`.
	DisableWfWhenProtected *string `pulumi:"disableWfWhenProtected"`
	// Enable/disable advanced FortiClient VPN configuration. Valid values: `enable`, `disable`.
	ForticlientAdvancedVpn *string `pulumi:"forticlientAdvancedVpn"`
	// Advanced FortiClient VPN configuration.
	ForticlientAdvancedVpnBuffer *string `pulumi:"forticlientAdvancedVpnBuffer"`
	// Enable/disable FortiClient VPN provisioning. Valid values: `enable`, `disable`.
	ForticlientVpnProvisioning *string `pulumi:"forticlientVpnProvisioning"`
	// FortiClient VPN settings. The structure of `forticlientVpnSettings` block is documented below.
	ForticlientVpnSettings []EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting `pulumi:"forticlientVpnSettings"`
	// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
	ForticlientWf *string `pulumi:"forticlientWf"`
	// The FortiClient web filter profile to apply.
	ForticlientWfProfile *string `pulumi:"forticlientWfProfile"`
}

// EndpointcontrolProfileForticlientAndroidSettingsInput is an input type that accepts EndpointcontrolProfileForticlientAndroidSettingsArgs and EndpointcontrolProfileForticlientAndroidSettingsOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientAndroidSettingsInput` via:
//
//	EndpointcontrolProfileForticlientAndroidSettingsArgs{...}
type EndpointcontrolProfileForticlientAndroidSettingsInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientAndroidSettingsOutput() EndpointcontrolProfileForticlientAndroidSettingsOutput
	ToEndpointcontrolProfileForticlientAndroidSettingsOutputWithContext(context.Context) EndpointcontrolProfileForticlientAndroidSettingsOutput
}

type EndpointcontrolProfileForticlientAndroidSettingsArgs struct {
	// Enable/disable FortiClient web category filtering when protected by FortiGate. Valid values: `enable`, `disable`.
	DisableWfWhenProtected pulumi.StringPtrInput `pulumi:"disableWfWhenProtected"`
	// Enable/disable advanced FortiClient VPN configuration. Valid values: `enable`, `disable`.
	ForticlientAdvancedVpn pulumi.StringPtrInput `pulumi:"forticlientAdvancedVpn"`
	// Advanced FortiClient VPN configuration.
	ForticlientAdvancedVpnBuffer pulumi.StringPtrInput `pulumi:"forticlientAdvancedVpnBuffer"`
	// Enable/disable FortiClient VPN provisioning. Valid values: `enable`, `disable`.
	ForticlientVpnProvisioning pulumi.StringPtrInput `pulumi:"forticlientVpnProvisioning"`
	// FortiClient VPN settings. The structure of `forticlientVpnSettings` block is documented below.
	ForticlientVpnSettings EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayInput `pulumi:"forticlientVpnSettings"`
	// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
	ForticlientWf pulumi.StringPtrInput `pulumi:"forticlientWf"`
	// The FortiClient web filter profile to apply.
	ForticlientWfProfile pulumi.StringPtrInput `pulumi:"forticlientWfProfile"`
}

func (EndpointcontrolProfileForticlientAndroidSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientAndroidSettings)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientAndroidSettingsArgs) ToEndpointcontrolProfileForticlientAndroidSettingsOutput() EndpointcontrolProfileForticlientAndroidSettingsOutput {
	return i.ToEndpointcontrolProfileForticlientAndroidSettingsOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientAndroidSettingsArgs) ToEndpointcontrolProfileForticlientAndroidSettingsOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientAndroidSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientAndroidSettingsOutput)
}

func (i EndpointcontrolProfileForticlientAndroidSettingsArgs) ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutput() EndpointcontrolProfileForticlientAndroidSettingsPtrOutput {
	return i.ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientAndroidSettingsArgs) ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientAndroidSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientAndroidSettingsOutput).ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutputWithContext(ctx)
}

// EndpointcontrolProfileForticlientAndroidSettingsPtrInput is an input type that accepts EndpointcontrolProfileForticlientAndroidSettingsArgs, EndpointcontrolProfileForticlientAndroidSettingsPtr and EndpointcontrolProfileForticlientAndroidSettingsPtrOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientAndroidSettingsPtrInput` via:
//
//	        EndpointcontrolProfileForticlientAndroidSettingsArgs{...}
//
//	or:
//
//	        nil
type EndpointcontrolProfileForticlientAndroidSettingsPtrInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutput() EndpointcontrolProfileForticlientAndroidSettingsPtrOutput
	ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutputWithContext(context.Context) EndpointcontrolProfileForticlientAndroidSettingsPtrOutput
}

type endpointcontrolProfileForticlientAndroidSettingsPtrType EndpointcontrolProfileForticlientAndroidSettingsArgs

func EndpointcontrolProfileForticlientAndroidSettingsPtr(v *EndpointcontrolProfileForticlientAndroidSettingsArgs) EndpointcontrolProfileForticlientAndroidSettingsPtrInput {
	return (*endpointcontrolProfileForticlientAndroidSettingsPtrType)(v)
}

func (*endpointcontrolProfileForticlientAndroidSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointcontrolProfileForticlientAndroidSettings)(nil)).Elem()
}

func (i *endpointcontrolProfileForticlientAndroidSettingsPtrType) ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutput() EndpointcontrolProfileForticlientAndroidSettingsPtrOutput {
	return i.ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutputWithContext(context.Background())
}

func (i *endpointcontrolProfileForticlientAndroidSettingsPtrType) ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientAndroidSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientAndroidSettingsPtrOutput)
}

type EndpointcontrolProfileForticlientAndroidSettingsOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientAndroidSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientAndroidSettings)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) ToEndpointcontrolProfileForticlientAndroidSettingsOutput() EndpointcontrolProfileForticlientAndroidSettingsOutput {
	return o
}

func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) ToEndpointcontrolProfileForticlientAndroidSettingsOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientAndroidSettingsOutput {
	return o
}

func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutput() EndpointcontrolProfileForticlientAndroidSettingsPtrOutput {
	return o.ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutputWithContext(context.Background())
}

func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientAndroidSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointcontrolProfileForticlientAndroidSettings) *EndpointcontrolProfileForticlientAndroidSettings {
		return &v
	}).(EndpointcontrolProfileForticlientAndroidSettingsPtrOutput)
}

// Enable/disable FortiClient web category filtering when protected by FortiGate. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) DisableWfWhenProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettings) *string { return v.DisableWfWhenProtected }).(pulumi.StringPtrOutput)
}

// Enable/disable advanced FortiClient VPN configuration. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) ForticlientAdvancedVpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettings) *string { return v.ForticlientAdvancedVpn }).(pulumi.StringPtrOutput)
}

// Advanced FortiClient VPN configuration.
func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) ForticlientAdvancedVpnBuffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettings) *string {
		return v.ForticlientAdvancedVpnBuffer
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient VPN provisioning. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) ForticlientVpnProvisioning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettings) *string { return v.ForticlientVpnProvisioning }).(pulumi.StringPtrOutput)
}

// FortiClient VPN settings. The structure of `forticlientVpnSettings` block is documented below.
func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) ForticlientVpnSettings() EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettings) []EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting {
		return v.ForticlientVpnSettings
	}).(EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput)
}

// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) ForticlientWf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettings) *string { return v.ForticlientWf }).(pulumi.StringPtrOutput)
}

// The FortiClient web filter profile to apply.
func (o EndpointcontrolProfileForticlientAndroidSettingsOutput) ForticlientWfProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettings) *string { return v.ForticlientWfProfile }).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientAndroidSettingsPtrOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointcontrolProfileForticlientAndroidSettings)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutput() EndpointcontrolProfileForticlientAndroidSettingsPtrOutput {
	return o
}

func (o EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) ToEndpointcontrolProfileForticlientAndroidSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientAndroidSettingsPtrOutput {
	return o
}

func (o EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) Elem() EndpointcontrolProfileForticlientAndroidSettingsOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientAndroidSettings) EndpointcontrolProfileForticlientAndroidSettings {
		if v != nil {
			return *v
		}
		var ret EndpointcontrolProfileForticlientAndroidSettings
		return ret
	}).(EndpointcontrolProfileForticlientAndroidSettingsOutput)
}

// Enable/disable FortiClient web category filtering when protected by FortiGate. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) DisableWfWhenProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientAndroidSettings) *string {
		if v == nil {
			return nil
		}
		return v.DisableWfWhenProtected
	}).(pulumi.StringPtrOutput)
}

// Enable/disable advanced FortiClient VPN configuration. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) ForticlientAdvancedVpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientAndroidSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientAdvancedVpn
	}).(pulumi.StringPtrOutput)
}

// Advanced FortiClient VPN configuration.
func (o EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) ForticlientAdvancedVpnBuffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientAndroidSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientAdvancedVpnBuffer
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient VPN provisioning. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) ForticlientVpnProvisioning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientAndroidSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientVpnProvisioning
	}).(pulumi.StringPtrOutput)
}

// FortiClient VPN settings. The structure of `forticlientVpnSettings` block is documented below.
func (o EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) ForticlientVpnSettings() EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientAndroidSettings) []EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting {
		if v == nil {
			return nil
		}
		return v.ForticlientVpnSettings
	}).(EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput)
}

// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) ForticlientWf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientAndroidSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientWf
	}).(pulumi.StringPtrOutput)
}

// The FortiClient web filter profile to apply.
func (o EndpointcontrolProfileForticlientAndroidSettingsPtrOutput) ForticlientWfProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientAndroidSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientWfProfile
	}).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting struct {
	// Authentication method. Valid values: `psk`, `certificate`.
	AuthMethod *string `pulumi:"authMethod"`
	// VPN name.
	Name *string `pulumi:"name"`
	// Pre-shared secret for PSK authentication.
	PresharedKey *string `pulumi:"presharedKey"`
	// IP address or FQDN of the remote VPN gateway.
	RemoteGw *string `pulumi:"remoteGw"`
	// SSL VPN access port (1 - 65535).
	SslvpnAccessPort *int `pulumi:"sslvpnAccessPort"`
	// Enable/disable requiring SSL VPN client certificate. Valid values: `enable`, `disable`.
	SslvpnRequireCertificate *string `pulumi:"sslvpnRequireCertificate"`
	// VPN type (IPsec or SSL VPN). Valid values: `ipsec`, `ssl`.
	Type *string `pulumi:"type"`
}

// EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingInput is an input type that accepts EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArgs and EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingInput` via:
//
//	EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArgs{...}
type EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput() EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput
	ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutputWithContext(context.Context) EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput
}

type EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArgs struct {
	// Authentication method. Valid values: `psk`, `certificate`.
	AuthMethod pulumi.StringPtrInput `pulumi:"authMethod"`
	// VPN name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pre-shared secret for PSK authentication.
	PresharedKey pulumi.StringPtrInput `pulumi:"presharedKey"`
	// IP address or FQDN of the remote VPN gateway.
	RemoteGw pulumi.StringPtrInput `pulumi:"remoteGw"`
	// SSL VPN access port (1 - 65535).
	SslvpnAccessPort pulumi.IntPtrInput `pulumi:"sslvpnAccessPort"`
	// Enable/disable requiring SSL VPN client certificate. Valid values: `enable`, `disable`.
	SslvpnRequireCertificate pulumi.StringPtrInput `pulumi:"sslvpnRequireCertificate"`
	// VPN type (IPsec or SSL VPN). Valid values: `ipsec`, `ssl`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArgs) ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput() EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput {
	return i.ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArgs) ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput)
}

// EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayInput is an input type that accepts EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArray and EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayInput` via:
//
//	EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArray{ EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArgs{...} }
type EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput() EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput
	ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutputWithContext(context.Context) EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput
}

type EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArray []EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingInput

func (EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArray) ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput() EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput {
	return i.ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArray) ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput)
}

type EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput) ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput() EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput {
	return o
}

func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput) ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput {
	return o
}

// Authentication method. Valid values: `psk`, `certificate`.
func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting) *string {
		return v.AuthMethod
	}).(pulumi.StringPtrOutput)
}

// VPN name.
func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pre-shared secret for PSK authentication.
func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput) PresharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting) *string {
		return v.PresharedKey
	}).(pulumi.StringPtrOutput)
}

// IP address or FQDN of the remote VPN gateway.
func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput) RemoteGw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting) *string {
		return v.RemoteGw
	}).(pulumi.StringPtrOutput)
}

// SSL VPN access port (1 - 65535).
func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput) SslvpnAccessPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting) *int {
		return v.SslvpnAccessPort
	}).(pulumi.IntPtrOutput)
}

// Enable/disable requiring SSL VPN client certificate. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput) SslvpnRequireCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting) *string {
		return v.SslvpnRequireCertificate
	}).(pulumi.StringPtrOutput)
}

// VPN type (IPsec or SSL VPN). Valid values: `ipsec`, `ssl`.
func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput) ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput() EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput) ToEndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting {
		return vs[0].([]EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSetting)[vs[1].(int)]
	}).(EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput)
}

type EndpointcontrolProfileForticlientIosSettings struct {
	// FortiClient VPN provisioning. Valid values: `enable`, `disable`.
	ClientVpnProvisioning *string `pulumi:"clientVpnProvisioning"`
	// FortiClient VPN settings. The structure of `clientVpnSettings` block is documented below.
	ClientVpnSettings []EndpointcontrolProfileForticlientIosSettingsClientVpnSetting `pulumi:"clientVpnSettings"`
	// Content of configuration profile.
	ConfigurationContent *string `pulumi:"configurationContent"`
	// Name of configuration profile.
	ConfigurationName *string `pulumi:"configurationName"`
	// Enable/disable FortiClient web category filtering when protected by FortiGate. Valid values: `enable`, `disable`.
	DisableWfWhenProtected *string `pulumi:"disableWfWhenProtected"`
	// Enable/disable configuration profile (.mobileconfig file) distribution. Valid values: `enable`, `disable`.
	DistributeConfigurationProfile *string `pulumi:"distributeConfigurationProfile"`
	// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
	ForticlientWf *string `pulumi:"forticlientWf"`
	// The FortiClient web filter profile to apply.
	ForticlientWfProfile *string `pulumi:"forticlientWfProfile"`
}

// EndpointcontrolProfileForticlientIosSettingsInput is an input type that accepts EndpointcontrolProfileForticlientIosSettingsArgs and EndpointcontrolProfileForticlientIosSettingsOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientIosSettingsInput` via:
//
//	EndpointcontrolProfileForticlientIosSettingsArgs{...}
type EndpointcontrolProfileForticlientIosSettingsInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientIosSettingsOutput() EndpointcontrolProfileForticlientIosSettingsOutput
	ToEndpointcontrolProfileForticlientIosSettingsOutputWithContext(context.Context) EndpointcontrolProfileForticlientIosSettingsOutput
}

type EndpointcontrolProfileForticlientIosSettingsArgs struct {
	// FortiClient VPN provisioning. Valid values: `enable`, `disable`.
	ClientVpnProvisioning pulumi.StringPtrInput `pulumi:"clientVpnProvisioning"`
	// FortiClient VPN settings. The structure of `clientVpnSettings` block is documented below.
	ClientVpnSettings EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayInput `pulumi:"clientVpnSettings"`
	// Content of configuration profile.
	ConfigurationContent pulumi.StringPtrInput `pulumi:"configurationContent"`
	// Name of configuration profile.
	ConfigurationName pulumi.StringPtrInput `pulumi:"configurationName"`
	// Enable/disable FortiClient web category filtering when protected by FortiGate. Valid values: `enable`, `disable`.
	DisableWfWhenProtected pulumi.StringPtrInput `pulumi:"disableWfWhenProtected"`
	// Enable/disable configuration profile (.mobileconfig file) distribution. Valid values: `enable`, `disable`.
	DistributeConfigurationProfile pulumi.StringPtrInput `pulumi:"distributeConfigurationProfile"`
	// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
	ForticlientWf pulumi.StringPtrInput `pulumi:"forticlientWf"`
	// The FortiClient web filter profile to apply.
	ForticlientWfProfile pulumi.StringPtrInput `pulumi:"forticlientWfProfile"`
}

func (EndpointcontrolProfileForticlientIosSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientIosSettings)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientIosSettingsArgs) ToEndpointcontrolProfileForticlientIosSettingsOutput() EndpointcontrolProfileForticlientIosSettingsOutput {
	return i.ToEndpointcontrolProfileForticlientIosSettingsOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientIosSettingsArgs) ToEndpointcontrolProfileForticlientIosSettingsOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientIosSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientIosSettingsOutput)
}

func (i EndpointcontrolProfileForticlientIosSettingsArgs) ToEndpointcontrolProfileForticlientIosSettingsPtrOutput() EndpointcontrolProfileForticlientIosSettingsPtrOutput {
	return i.ToEndpointcontrolProfileForticlientIosSettingsPtrOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientIosSettingsArgs) ToEndpointcontrolProfileForticlientIosSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientIosSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientIosSettingsOutput).ToEndpointcontrolProfileForticlientIosSettingsPtrOutputWithContext(ctx)
}

// EndpointcontrolProfileForticlientIosSettingsPtrInput is an input type that accepts EndpointcontrolProfileForticlientIosSettingsArgs, EndpointcontrolProfileForticlientIosSettingsPtr and EndpointcontrolProfileForticlientIosSettingsPtrOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientIosSettingsPtrInput` via:
//
//	        EndpointcontrolProfileForticlientIosSettingsArgs{...}
//
//	or:
//
//	        nil
type EndpointcontrolProfileForticlientIosSettingsPtrInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientIosSettingsPtrOutput() EndpointcontrolProfileForticlientIosSettingsPtrOutput
	ToEndpointcontrolProfileForticlientIosSettingsPtrOutputWithContext(context.Context) EndpointcontrolProfileForticlientIosSettingsPtrOutput
}

type endpointcontrolProfileForticlientIosSettingsPtrType EndpointcontrolProfileForticlientIosSettingsArgs

func EndpointcontrolProfileForticlientIosSettingsPtr(v *EndpointcontrolProfileForticlientIosSettingsArgs) EndpointcontrolProfileForticlientIosSettingsPtrInput {
	return (*endpointcontrolProfileForticlientIosSettingsPtrType)(v)
}

func (*endpointcontrolProfileForticlientIosSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointcontrolProfileForticlientIosSettings)(nil)).Elem()
}

func (i *endpointcontrolProfileForticlientIosSettingsPtrType) ToEndpointcontrolProfileForticlientIosSettingsPtrOutput() EndpointcontrolProfileForticlientIosSettingsPtrOutput {
	return i.ToEndpointcontrolProfileForticlientIosSettingsPtrOutputWithContext(context.Background())
}

func (i *endpointcontrolProfileForticlientIosSettingsPtrType) ToEndpointcontrolProfileForticlientIosSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientIosSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientIosSettingsPtrOutput)
}

type EndpointcontrolProfileForticlientIosSettingsOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientIosSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientIosSettings)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientIosSettingsOutput) ToEndpointcontrolProfileForticlientIosSettingsOutput() EndpointcontrolProfileForticlientIosSettingsOutput {
	return o
}

func (o EndpointcontrolProfileForticlientIosSettingsOutput) ToEndpointcontrolProfileForticlientIosSettingsOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientIosSettingsOutput {
	return o
}

func (o EndpointcontrolProfileForticlientIosSettingsOutput) ToEndpointcontrolProfileForticlientIosSettingsPtrOutput() EndpointcontrolProfileForticlientIosSettingsPtrOutput {
	return o.ToEndpointcontrolProfileForticlientIosSettingsPtrOutputWithContext(context.Background())
}

func (o EndpointcontrolProfileForticlientIosSettingsOutput) ToEndpointcontrolProfileForticlientIosSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientIosSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointcontrolProfileForticlientIosSettings) *EndpointcontrolProfileForticlientIosSettings {
		return &v
	}).(EndpointcontrolProfileForticlientIosSettingsPtrOutput)
}

// FortiClient VPN provisioning. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientIosSettingsOutput) ClientVpnProvisioning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettings) *string { return v.ClientVpnProvisioning }).(pulumi.StringPtrOutput)
}

// FortiClient VPN settings. The structure of `clientVpnSettings` block is documented below.
func (o EndpointcontrolProfileForticlientIosSettingsOutput) ClientVpnSettings() EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettings) []EndpointcontrolProfileForticlientIosSettingsClientVpnSetting {
		return v.ClientVpnSettings
	}).(EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput)
}

// Content of configuration profile.
func (o EndpointcontrolProfileForticlientIosSettingsOutput) ConfigurationContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettings) *string { return v.ConfigurationContent }).(pulumi.StringPtrOutput)
}

// Name of configuration profile.
func (o EndpointcontrolProfileForticlientIosSettingsOutput) ConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettings) *string { return v.ConfigurationName }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient web category filtering when protected by FortiGate. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientIosSettingsOutput) DisableWfWhenProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettings) *string { return v.DisableWfWhenProtected }).(pulumi.StringPtrOutput)
}

// Enable/disable configuration profile (.mobileconfig file) distribution. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientIosSettingsOutput) DistributeConfigurationProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettings) *string { return v.DistributeConfigurationProfile }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientIosSettingsOutput) ForticlientWf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettings) *string { return v.ForticlientWf }).(pulumi.StringPtrOutput)
}

// The FortiClient web filter profile to apply.
func (o EndpointcontrolProfileForticlientIosSettingsOutput) ForticlientWfProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettings) *string { return v.ForticlientWfProfile }).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientIosSettingsPtrOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientIosSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointcontrolProfileForticlientIosSettings)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) ToEndpointcontrolProfileForticlientIosSettingsPtrOutput() EndpointcontrolProfileForticlientIosSettingsPtrOutput {
	return o
}

func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) ToEndpointcontrolProfileForticlientIosSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientIosSettingsPtrOutput {
	return o
}

func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) Elem() EndpointcontrolProfileForticlientIosSettingsOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientIosSettings) EndpointcontrolProfileForticlientIosSettings {
		if v != nil {
			return *v
		}
		var ret EndpointcontrolProfileForticlientIosSettings
		return ret
	}).(EndpointcontrolProfileForticlientIosSettingsOutput)
}

// FortiClient VPN provisioning. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) ClientVpnProvisioning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientIosSettings) *string {
		if v == nil {
			return nil
		}
		return v.ClientVpnProvisioning
	}).(pulumi.StringPtrOutput)
}

// FortiClient VPN settings. The structure of `clientVpnSettings` block is documented below.
func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) ClientVpnSettings() EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientIosSettings) []EndpointcontrolProfileForticlientIosSettingsClientVpnSetting {
		if v == nil {
			return nil
		}
		return v.ClientVpnSettings
	}).(EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput)
}

// Content of configuration profile.
func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) ConfigurationContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientIosSettings) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationContent
	}).(pulumi.StringPtrOutput)
}

// Name of configuration profile.
func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) ConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientIosSettings) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationName
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient web category filtering when protected by FortiGate. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) DisableWfWhenProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientIosSettings) *string {
		if v == nil {
			return nil
		}
		return v.DisableWfWhenProtected
	}).(pulumi.StringPtrOutput)
}

// Enable/disable configuration profile (.mobileconfig file) distribution. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) DistributeConfigurationProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientIosSettings) *string {
		if v == nil {
			return nil
		}
		return v.DistributeConfigurationProfile
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) ForticlientWf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientIosSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientWf
	}).(pulumi.StringPtrOutput)
}

// The FortiClient web filter profile to apply.
func (o EndpointcontrolProfileForticlientIosSettingsPtrOutput) ForticlientWfProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientIosSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientWfProfile
	}).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientIosSettingsClientVpnSetting struct {
	// Authentication method. Valid values: `psk`, `certificate`.
	AuthMethod *string `pulumi:"authMethod"`
	// VPN name.
	Name *string `pulumi:"name"`
	// Pre-shared secret for PSK authentication.
	PresharedKey *string `pulumi:"presharedKey"`
	// IP address or FQDN of the remote VPN gateway.
	RemoteGw *string `pulumi:"remoteGw"`
	// SSL VPN access port (1 - 65535).
	SslvpnAccessPort *int `pulumi:"sslvpnAccessPort"`
	// Enable/disable requiring SSL VPN client certificate. Valid values: `enable`, `disable`.
	SslvpnRequireCertificate *string `pulumi:"sslvpnRequireCertificate"`
	// VPN type (IPsec or SSL VPN). Valid values: `ipsec`, `ssl`.
	Type *string `pulumi:"type"`
	// Content of VPN configuration.
	VpnConfigurationContent *string `pulumi:"vpnConfigurationContent"`
	// Name of VPN configuration.
	VpnConfigurationName *string `pulumi:"vpnConfigurationName"`
}

// EndpointcontrolProfileForticlientIosSettingsClientVpnSettingInput is an input type that accepts EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArgs and EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientIosSettingsClientVpnSettingInput` via:
//
//	EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArgs{...}
type EndpointcontrolProfileForticlientIosSettingsClientVpnSettingInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput() EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput
	ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutputWithContext(context.Context) EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput
}

type EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArgs struct {
	// Authentication method. Valid values: `psk`, `certificate`.
	AuthMethod pulumi.StringPtrInput `pulumi:"authMethod"`
	// VPN name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pre-shared secret for PSK authentication.
	PresharedKey pulumi.StringPtrInput `pulumi:"presharedKey"`
	// IP address or FQDN of the remote VPN gateway.
	RemoteGw pulumi.StringPtrInput `pulumi:"remoteGw"`
	// SSL VPN access port (1 - 65535).
	SslvpnAccessPort pulumi.IntPtrInput `pulumi:"sslvpnAccessPort"`
	// Enable/disable requiring SSL VPN client certificate. Valid values: `enable`, `disable`.
	SslvpnRequireCertificate pulumi.StringPtrInput `pulumi:"sslvpnRequireCertificate"`
	// VPN type (IPsec or SSL VPN). Valid values: `ipsec`, `ssl`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Content of VPN configuration.
	VpnConfigurationContent pulumi.StringPtrInput `pulumi:"vpnConfigurationContent"`
	// Name of VPN configuration.
	VpnConfigurationName pulumi.StringPtrInput `pulumi:"vpnConfigurationName"`
}

func (EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientIosSettingsClientVpnSetting)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArgs) ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput() EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput {
	return i.ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArgs) ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput)
}

// EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayInput is an input type that accepts EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArray and EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayInput` via:
//
//	EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArray{ EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArgs{...} }
type EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput() EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput
	ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutputWithContext(context.Context) EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput
}

type EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArray []EndpointcontrolProfileForticlientIosSettingsClientVpnSettingInput

func (EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientIosSettingsClientVpnSetting)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArray) ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput() EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput {
	return i.ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArray) ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput)
}

type EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientIosSettingsClientVpnSetting)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput() EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput {
	return o
}

func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput {
	return o
}

// Authentication method. Valid values: `psk`, `certificate`.
func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettingsClientVpnSetting) *string { return v.AuthMethod }).(pulumi.StringPtrOutput)
}

// VPN name.
func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettingsClientVpnSetting) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pre-shared secret for PSK authentication.
func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) PresharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettingsClientVpnSetting) *string { return v.PresharedKey }).(pulumi.StringPtrOutput)
}

// IP address or FQDN of the remote VPN gateway.
func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) RemoteGw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettingsClientVpnSetting) *string { return v.RemoteGw }).(pulumi.StringPtrOutput)
}

// SSL VPN access port (1 - 65535).
func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) SslvpnAccessPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettingsClientVpnSetting) *int { return v.SslvpnAccessPort }).(pulumi.IntPtrOutput)
}

// Enable/disable requiring SSL VPN client certificate. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) SslvpnRequireCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettingsClientVpnSetting) *string {
		return v.SslvpnRequireCertificate
	}).(pulumi.StringPtrOutput)
}

// VPN type (IPsec or SSL VPN). Valid values: `ipsec`, `ssl`.
func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettingsClientVpnSetting) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Content of VPN configuration.
func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) VpnConfigurationContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettingsClientVpnSetting) *string {
		return v.VpnConfigurationContent
	}).(pulumi.StringPtrOutput)
}

// Name of VPN configuration.
func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput) VpnConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientIosSettingsClientVpnSetting) *string {
		return v.VpnConfigurationName
	}).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientIosSettingsClientVpnSetting)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput) ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput() EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput) ToEndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileForticlientIosSettingsClientVpnSetting {
		return vs[0].([]EndpointcontrolProfileForticlientIosSettingsClientVpnSetting)[vs[1].(int)]
	}).(EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput)
}

type EndpointcontrolProfileForticlientWinmacSettings struct {
	// Enable/disable FortiClient AntiVirus real-time protection. Valid values: `enable`, `disable`.
	AvRealtimeProtection *string `pulumi:"avRealtimeProtection"`
	// Enable/disable FortiClient AV signature updates. Valid values: `enable`, `disable`.
	AvSignatureUpToDate *string `pulumi:"avSignatureUpToDate"`
	// Enable/disable the FortiClient application firewall. Valid values: `enable`, `disable`.
	ForticlientApplicationFirewall *string `pulumi:"forticlientApplicationFirewall"`
	// FortiClient application firewall rule list.
	ForticlientApplicationFirewallList *string `pulumi:"forticlientApplicationFirewallList"`
	// Enable/disable FortiClient AntiVirus scanning. Valid values: `enable`, `disable`.
	ForticlientAv *string `pulumi:"forticlientAv"`
	// Enable/disable FortiClient Enterprise Management Server (EMS) compliance. Valid values: `enable`, `disable`.
	ForticlientEmsCompliance *string `pulumi:"forticlientEmsCompliance"`
	// FortiClient EMS compliance action. Valid values: `block`, `warning`.
	ForticlientEmsComplianceAction *string `pulumi:"forticlientEmsComplianceAction"`
	// FortiClient EMS entries. The structure of `forticlientEmsEntries` block is documented below.
	ForticlientEmsEntries []EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry `pulumi:"forticlientEmsEntries"`
	// Minimum FortiClient Linux version.
	ForticlientLinuxVer *string `pulumi:"forticlientLinuxVer"`
	// Enable/disable uploading FortiClient logs. Valid values: `enable`, `disable`.
	ForticlientLogUpload *string `pulumi:"forticlientLogUpload"`
	// Select the FortiClient logs to upload. Valid values: `traffic`, `vulnerability`, `event`.
	ForticlientLogUploadLevel *string `pulumi:"forticlientLogUploadLevel"`
	// IP address or FQDN of the server to which to upload FortiClient logs.
	ForticlientLogUploadServer *string `pulumi:"forticlientLogUploadServer"`
	// Minimum FortiClient Mac OS version.
	ForticlientMacVer *string `pulumi:"forticlientMacVer"`
	// Enable/disable requiring clients to run FortiClient with a minimum software version number. Valid values: `enable`, `disable`.
	ForticlientMinimumSoftwareVersion *string `pulumi:"forticlientMinimumSoftwareVersion"`
	// FortiClient operating system. The structure of `forticlientOperatingSystem` block is documented below.
	ForticlientOperatingSystems []EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem `pulumi:"forticlientOperatingSystems"`
	// Checking the path and filename of the FortiClient application. The structure of `forticlientOwnFile` block is documented below.
	ForticlientOwnFiles []EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile `pulumi:"forticlientOwnFiles"`
	// FortiClient registration compliance action. Valid values: `block`, `warning`.
	ForticlientRegistrationComplianceAction *string `pulumi:"forticlientRegistrationComplianceAction"`
	// FortiClient registry entry. The structure of `forticlientRegistryEntry` block is documented below.
	ForticlientRegistryEntries []EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry `pulumi:"forticlientRegistryEntries"`
	// Use FortiClient to verify if the listed applications are running on the client. The structure of `forticlientRunningApp` block is documented below.
	ForticlientRunningApps []EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp `pulumi:"forticlientRunningApps"`
	// Enable/disable FortiClient security posture check options. Valid values: `enable`, `disable`.
	ForticlientSecurityPosture *string `pulumi:"forticlientSecurityPosture"`
	// FortiClient security posture compliance action. Valid values: `block`, `warning`.
	ForticlientSecurityPostureComplianceAction *string `pulumi:"forticlientSecurityPostureComplianceAction"`
	// Enable/disable enforcement of FortiClient system compliance. Valid values: `enable`, `disable`.
	ForticlientSystemCompliance *string `pulumi:"forticlientSystemCompliance"`
	// Block or warn clients not compliant with FortiClient requirements. Valid values: `block`, `warning`.
	ForticlientSystemComplianceAction *string `pulumi:"forticlientSystemComplianceAction"`
	// Enable/disable FortiClient vulnerability scanning. Valid values: `enable`, `disable`.
	ForticlientVulnScan *string `pulumi:"forticlientVulnScan"`
	// FortiClient vulnerability compliance action. Valid values: `block`, `warning`.
	ForticlientVulnScanComplianceAction *string `pulumi:"forticlientVulnScanComplianceAction"`
	// Configure the level of the vulnerability found that causes a FortiClient vulnerability compliance action. Valid values: `critical`, `high`, `medium`, `low`, `info`.
	ForticlientVulnScanEnforce *string `pulumi:"forticlientVulnScanEnforce"`
	// FortiClient vulnerability scan enforcement grace period (0 - 30 days, default = 1).
	ForticlientVulnScanEnforceGrace *int `pulumi:"forticlientVulnScanEnforceGrace"`
	// Enable/disable compliance exemption for vulnerabilities that cannot be patched automatically. Valid values: `enable`, `disable`.
	ForticlientVulnScanExempt *string `pulumi:"forticlientVulnScanExempt"`
	// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
	ForticlientWf *string `pulumi:"forticlientWf"`
	// The FortiClient web filter profile to apply.
	ForticlientWfProfile *string `pulumi:"forticlientWfProfile"`
	// Minimum FortiClient Windows version.
	ForticlientWinVer *string `pulumi:"forticlientWinVer"`
	// Enable/disable checking for OS recognized AntiVirus software. Valid values: `enable`, `disable`.
	OsAvSoftwareInstalled *string `pulumi:"osAvSoftwareInstalled"`
	// FortiSandbox address.
	SandboxAddress *string `pulumi:"sandboxAddress"`
	// Enable/disable sending files to FortiSandbox for analysis. Valid values: `enable`, `disable`.
	SandboxAnalysis *string `pulumi:"sandboxAnalysis"`
}

// EndpointcontrolProfileForticlientWinmacSettingsInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsArgs and EndpointcontrolProfileForticlientWinmacSettingsOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsArgs{...}
type EndpointcontrolProfileForticlientWinmacSettingsInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsOutput() EndpointcontrolProfileForticlientWinmacSettingsOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsArgs struct {
	// Enable/disable FortiClient AntiVirus real-time protection. Valid values: `enable`, `disable`.
	AvRealtimeProtection pulumi.StringPtrInput `pulumi:"avRealtimeProtection"`
	// Enable/disable FortiClient AV signature updates. Valid values: `enable`, `disable`.
	AvSignatureUpToDate pulumi.StringPtrInput `pulumi:"avSignatureUpToDate"`
	// Enable/disable the FortiClient application firewall. Valid values: `enable`, `disable`.
	ForticlientApplicationFirewall pulumi.StringPtrInput `pulumi:"forticlientApplicationFirewall"`
	// FortiClient application firewall rule list.
	ForticlientApplicationFirewallList pulumi.StringPtrInput `pulumi:"forticlientApplicationFirewallList"`
	// Enable/disable FortiClient AntiVirus scanning. Valid values: `enable`, `disable`.
	ForticlientAv pulumi.StringPtrInput `pulumi:"forticlientAv"`
	// Enable/disable FortiClient Enterprise Management Server (EMS) compliance. Valid values: `enable`, `disable`.
	ForticlientEmsCompliance pulumi.StringPtrInput `pulumi:"forticlientEmsCompliance"`
	// FortiClient EMS compliance action. Valid values: `block`, `warning`.
	ForticlientEmsComplianceAction pulumi.StringPtrInput `pulumi:"forticlientEmsComplianceAction"`
	// FortiClient EMS entries. The structure of `forticlientEmsEntries` block is documented below.
	ForticlientEmsEntries EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayInput `pulumi:"forticlientEmsEntries"`
	// Minimum FortiClient Linux version.
	ForticlientLinuxVer pulumi.StringPtrInput `pulumi:"forticlientLinuxVer"`
	// Enable/disable uploading FortiClient logs. Valid values: `enable`, `disable`.
	ForticlientLogUpload pulumi.StringPtrInput `pulumi:"forticlientLogUpload"`
	// Select the FortiClient logs to upload. Valid values: `traffic`, `vulnerability`, `event`.
	ForticlientLogUploadLevel pulumi.StringPtrInput `pulumi:"forticlientLogUploadLevel"`
	// IP address or FQDN of the server to which to upload FortiClient logs.
	ForticlientLogUploadServer pulumi.StringPtrInput `pulumi:"forticlientLogUploadServer"`
	// Minimum FortiClient Mac OS version.
	ForticlientMacVer pulumi.StringPtrInput `pulumi:"forticlientMacVer"`
	// Enable/disable requiring clients to run FortiClient with a minimum software version number. Valid values: `enable`, `disable`.
	ForticlientMinimumSoftwareVersion pulumi.StringPtrInput `pulumi:"forticlientMinimumSoftwareVersion"`
	// FortiClient operating system. The structure of `forticlientOperatingSystem` block is documented below.
	ForticlientOperatingSystems EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayInput `pulumi:"forticlientOperatingSystems"`
	// Checking the path and filename of the FortiClient application. The structure of `forticlientOwnFile` block is documented below.
	ForticlientOwnFiles EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayInput `pulumi:"forticlientOwnFiles"`
	// FortiClient registration compliance action. Valid values: `block`, `warning`.
	ForticlientRegistrationComplianceAction pulumi.StringPtrInput `pulumi:"forticlientRegistrationComplianceAction"`
	// FortiClient registry entry. The structure of `forticlientRegistryEntry` block is documented below.
	ForticlientRegistryEntries EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayInput `pulumi:"forticlientRegistryEntries"`
	// Use FortiClient to verify if the listed applications are running on the client. The structure of `forticlientRunningApp` block is documented below.
	ForticlientRunningApps EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayInput `pulumi:"forticlientRunningApps"`
	// Enable/disable FortiClient security posture check options. Valid values: `enable`, `disable`.
	ForticlientSecurityPosture pulumi.StringPtrInput `pulumi:"forticlientSecurityPosture"`
	// FortiClient security posture compliance action. Valid values: `block`, `warning`.
	ForticlientSecurityPostureComplianceAction pulumi.StringPtrInput `pulumi:"forticlientSecurityPostureComplianceAction"`
	// Enable/disable enforcement of FortiClient system compliance. Valid values: `enable`, `disable`.
	ForticlientSystemCompliance pulumi.StringPtrInput `pulumi:"forticlientSystemCompliance"`
	// Block or warn clients not compliant with FortiClient requirements. Valid values: `block`, `warning`.
	ForticlientSystemComplianceAction pulumi.StringPtrInput `pulumi:"forticlientSystemComplianceAction"`
	// Enable/disable FortiClient vulnerability scanning. Valid values: `enable`, `disable`.
	ForticlientVulnScan pulumi.StringPtrInput `pulumi:"forticlientVulnScan"`
	// FortiClient vulnerability compliance action. Valid values: `block`, `warning`.
	ForticlientVulnScanComplianceAction pulumi.StringPtrInput `pulumi:"forticlientVulnScanComplianceAction"`
	// Configure the level of the vulnerability found that causes a FortiClient vulnerability compliance action. Valid values: `critical`, `high`, `medium`, `low`, `info`.
	ForticlientVulnScanEnforce pulumi.StringPtrInput `pulumi:"forticlientVulnScanEnforce"`
	// FortiClient vulnerability scan enforcement grace period (0 - 30 days, default = 1).
	ForticlientVulnScanEnforceGrace pulumi.IntPtrInput `pulumi:"forticlientVulnScanEnforceGrace"`
	// Enable/disable compliance exemption for vulnerabilities that cannot be patched automatically. Valid values: `enable`, `disable`.
	ForticlientVulnScanExempt pulumi.StringPtrInput `pulumi:"forticlientVulnScanExempt"`
	// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
	ForticlientWf pulumi.StringPtrInput `pulumi:"forticlientWf"`
	// The FortiClient web filter profile to apply.
	ForticlientWfProfile pulumi.StringPtrInput `pulumi:"forticlientWfProfile"`
	// Minimum FortiClient Windows version.
	ForticlientWinVer pulumi.StringPtrInput `pulumi:"forticlientWinVer"`
	// Enable/disable checking for OS recognized AntiVirus software. Valid values: `enable`, `disable`.
	OsAvSoftwareInstalled pulumi.StringPtrInput `pulumi:"osAvSoftwareInstalled"`
	// FortiSandbox address.
	SandboxAddress pulumi.StringPtrInput `pulumi:"sandboxAddress"`
	// Enable/disable sending files to FortiSandbox for analysis. Valid values: `enable`, `disable`.
	SandboxAnalysis pulumi.StringPtrInput `pulumi:"sandboxAnalysis"`
}

func (EndpointcontrolProfileForticlientWinmacSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettings)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsArgs) ToEndpointcontrolProfileForticlientWinmacSettingsOutput() EndpointcontrolProfileForticlientWinmacSettingsOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsArgs) ToEndpointcontrolProfileForticlientWinmacSettingsOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsOutput)
}

func (i EndpointcontrolProfileForticlientWinmacSettingsArgs) ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutput() EndpointcontrolProfileForticlientWinmacSettingsPtrOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsArgs) ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsOutput).ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutputWithContext(ctx)
}

// EndpointcontrolProfileForticlientWinmacSettingsPtrInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsArgs, EndpointcontrolProfileForticlientWinmacSettingsPtr and EndpointcontrolProfileForticlientWinmacSettingsPtrOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsPtrInput` via:
//
//	        EndpointcontrolProfileForticlientWinmacSettingsArgs{...}
//
//	or:
//
//	        nil
type EndpointcontrolProfileForticlientWinmacSettingsPtrInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutput() EndpointcontrolProfileForticlientWinmacSettingsPtrOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsPtrOutput
}

type endpointcontrolProfileForticlientWinmacSettingsPtrType EndpointcontrolProfileForticlientWinmacSettingsArgs

func EndpointcontrolProfileForticlientWinmacSettingsPtr(v *EndpointcontrolProfileForticlientWinmacSettingsArgs) EndpointcontrolProfileForticlientWinmacSettingsPtrInput {
	return (*endpointcontrolProfileForticlientWinmacSettingsPtrType)(v)
}

func (*endpointcontrolProfileForticlientWinmacSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointcontrolProfileForticlientWinmacSettings)(nil)).Elem()
}

func (i *endpointcontrolProfileForticlientWinmacSettingsPtrType) ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutput() EndpointcontrolProfileForticlientWinmacSettingsPtrOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutputWithContext(context.Background())
}

func (i *endpointcontrolProfileForticlientWinmacSettingsPtrType) ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsPtrOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettings)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ToEndpointcontrolProfileForticlientWinmacSettingsOutput() EndpointcontrolProfileForticlientWinmacSettingsOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ToEndpointcontrolProfileForticlientWinmacSettingsOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutput() EndpointcontrolProfileForticlientWinmacSettingsPtrOutput {
	return o.ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutputWithContext(context.Background())
}

func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointcontrolProfileForticlientWinmacSettings) *EndpointcontrolProfileForticlientWinmacSettings {
		return &v
	}).(EndpointcontrolProfileForticlientWinmacSettingsPtrOutput)
}

// Enable/disable FortiClient AntiVirus real-time protection. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) AvRealtimeProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.AvRealtimeProtection }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient AV signature updates. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) AvSignatureUpToDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.AvSignatureUpToDate }).(pulumi.StringPtrOutput)
}

// Enable/disable the FortiClient application firewall. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientApplicationFirewall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string {
		return v.ForticlientApplicationFirewall
	}).(pulumi.StringPtrOutput)
}

// FortiClient application firewall rule list.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientApplicationFirewallList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string {
		return v.ForticlientApplicationFirewallList
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient AntiVirus scanning. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientAv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientAv }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient Enterprise Management Server (EMS) compliance. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientEmsCompliance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientEmsCompliance }).(pulumi.StringPtrOutput)
}

// FortiClient EMS compliance action. Valid values: `block`, `warning`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientEmsComplianceAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string {
		return v.ForticlientEmsComplianceAction
	}).(pulumi.StringPtrOutput)
}

// FortiClient EMS entries. The structure of `forticlientEmsEntries` block is documented below.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientEmsEntries() EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) []EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry {
		return v.ForticlientEmsEntries
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput)
}

// Minimum FortiClient Linux version.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientLinuxVer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientLinuxVer }).(pulumi.StringPtrOutput)
}

// Enable/disable uploading FortiClient logs. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientLogUpload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientLogUpload }).(pulumi.StringPtrOutput)
}

// Select the FortiClient logs to upload. Valid values: `traffic`, `vulnerability`, `event`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientLogUploadLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientLogUploadLevel }).(pulumi.StringPtrOutput)
}

// IP address or FQDN of the server to which to upload FortiClient logs.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientLogUploadServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientLogUploadServer }).(pulumi.StringPtrOutput)
}

// Minimum FortiClient Mac OS version.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientMacVer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientMacVer }).(pulumi.StringPtrOutput)
}

// Enable/disable requiring clients to run FortiClient with a minimum software version number. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientMinimumSoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string {
		return v.ForticlientMinimumSoftwareVersion
	}).(pulumi.StringPtrOutput)
}

// FortiClient operating system. The structure of `forticlientOperatingSystem` block is documented below.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientOperatingSystems() EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) []EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem {
		return v.ForticlientOperatingSystems
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput)
}

// Checking the path and filename of the FortiClient application. The structure of `forticlientOwnFile` block is documented below.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientOwnFiles() EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) []EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile {
		return v.ForticlientOwnFiles
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput)
}

// FortiClient registration compliance action. Valid values: `block`, `warning`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientRegistrationComplianceAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string {
		return v.ForticlientRegistrationComplianceAction
	}).(pulumi.StringPtrOutput)
}

// FortiClient registry entry. The structure of `forticlientRegistryEntry` block is documented below.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientRegistryEntries() EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) []EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry {
		return v.ForticlientRegistryEntries
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput)
}

// Use FortiClient to verify if the listed applications are running on the client. The structure of `forticlientRunningApp` block is documented below.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientRunningApps() EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) []EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp {
		return v.ForticlientRunningApps
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput)
}

// Enable/disable FortiClient security posture check options. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientSecurityPosture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientSecurityPosture }).(pulumi.StringPtrOutput)
}

// FortiClient security posture compliance action. Valid values: `block`, `warning`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientSecurityPostureComplianceAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string {
		return v.ForticlientSecurityPostureComplianceAction
	}).(pulumi.StringPtrOutput)
}

// Enable/disable enforcement of FortiClient system compliance. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientSystemCompliance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientSystemCompliance }).(pulumi.StringPtrOutput)
}

// Block or warn clients not compliant with FortiClient requirements. Valid values: `block`, `warning`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientSystemComplianceAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string {
		return v.ForticlientSystemComplianceAction
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient vulnerability scanning. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientVulnScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientVulnScan }).(pulumi.StringPtrOutput)
}

// FortiClient vulnerability compliance action. Valid values: `block`, `warning`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientVulnScanComplianceAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string {
		return v.ForticlientVulnScanComplianceAction
	}).(pulumi.StringPtrOutput)
}

// Configure the level of the vulnerability found that causes a FortiClient vulnerability compliance action. Valid values: `critical`, `high`, `medium`, `low`, `info`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientVulnScanEnforce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientVulnScanEnforce }).(pulumi.StringPtrOutput)
}

// FortiClient vulnerability scan enforcement grace period (0 - 30 days, default = 1).
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientVulnScanEnforceGrace() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *int { return v.ForticlientVulnScanEnforceGrace }).(pulumi.IntPtrOutput)
}

// Enable/disable compliance exemption for vulnerabilities that cannot be patched automatically. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientVulnScanExempt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientVulnScanExempt }).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientWf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientWf }).(pulumi.StringPtrOutput)
}

// The FortiClient web filter profile to apply.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientWfProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientWfProfile }).(pulumi.StringPtrOutput)
}

// Minimum FortiClient Windows version.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) ForticlientWinVer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.ForticlientWinVer }).(pulumi.StringPtrOutput)
}

// Enable/disable checking for OS recognized AntiVirus software. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) OsAvSoftwareInstalled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.OsAvSoftwareInstalled }).(pulumi.StringPtrOutput)
}

// FortiSandbox address.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) SandboxAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.SandboxAddress }).(pulumi.StringPtrOutput)
}

// Enable/disable sending files to FortiSandbox for analysis. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsOutput) SandboxAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettings) *string { return v.SandboxAnalysis }).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsPtrOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointcontrolProfileForticlientWinmacSettings)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutput() EndpointcontrolProfileForticlientWinmacSettingsPtrOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ToEndpointcontrolProfileForticlientWinmacSettingsPtrOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsPtrOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) Elem() EndpointcontrolProfileForticlientWinmacSettingsOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) EndpointcontrolProfileForticlientWinmacSettings {
		if v != nil {
			return *v
		}
		var ret EndpointcontrolProfileForticlientWinmacSettings
		return ret
	}).(EndpointcontrolProfileForticlientWinmacSettingsOutput)
}

// Enable/disable FortiClient AntiVirus real-time protection. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) AvRealtimeProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.AvRealtimeProtection
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient AV signature updates. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) AvSignatureUpToDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.AvSignatureUpToDate
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the FortiClient application firewall. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientApplicationFirewall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientApplicationFirewall
	}).(pulumi.StringPtrOutput)
}

// FortiClient application firewall rule list.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientApplicationFirewallList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientApplicationFirewallList
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient AntiVirus scanning. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientAv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientAv
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient Enterprise Management Server (EMS) compliance. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientEmsCompliance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientEmsCompliance
	}).(pulumi.StringPtrOutput)
}

// FortiClient EMS compliance action. Valid values: `block`, `warning`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientEmsComplianceAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientEmsComplianceAction
	}).(pulumi.StringPtrOutput)
}

// FortiClient EMS entries. The structure of `forticlientEmsEntries` block is documented below.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientEmsEntries() EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) []EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry {
		if v == nil {
			return nil
		}
		return v.ForticlientEmsEntries
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput)
}

// Minimum FortiClient Linux version.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientLinuxVer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientLinuxVer
	}).(pulumi.StringPtrOutput)
}

// Enable/disable uploading FortiClient logs. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientLogUpload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientLogUpload
	}).(pulumi.StringPtrOutput)
}

// Select the FortiClient logs to upload. Valid values: `traffic`, `vulnerability`, `event`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientLogUploadLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientLogUploadLevel
	}).(pulumi.StringPtrOutput)
}

// IP address or FQDN of the server to which to upload FortiClient logs.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientLogUploadServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientLogUploadServer
	}).(pulumi.StringPtrOutput)
}

// Minimum FortiClient Mac OS version.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientMacVer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientMacVer
	}).(pulumi.StringPtrOutput)
}

// Enable/disable requiring clients to run FortiClient with a minimum software version number. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientMinimumSoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientMinimumSoftwareVersion
	}).(pulumi.StringPtrOutput)
}

// FortiClient operating system. The structure of `forticlientOperatingSystem` block is documented below.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientOperatingSystems() EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) []EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem {
		if v == nil {
			return nil
		}
		return v.ForticlientOperatingSystems
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput)
}

// Checking the path and filename of the FortiClient application. The structure of `forticlientOwnFile` block is documented below.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientOwnFiles() EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) []EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile {
		if v == nil {
			return nil
		}
		return v.ForticlientOwnFiles
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput)
}

// FortiClient registration compliance action. Valid values: `block`, `warning`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientRegistrationComplianceAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientRegistrationComplianceAction
	}).(pulumi.StringPtrOutput)
}

// FortiClient registry entry. The structure of `forticlientRegistryEntry` block is documented below.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientRegistryEntries() EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) []EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry {
		if v == nil {
			return nil
		}
		return v.ForticlientRegistryEntries
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput)
}

// Use FortiClient to verify if the listed applications are running on the client. The structure of `forticlientRunningApp` block is documented below.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientRunningApps() EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) []EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp {
		if v == nil {
			return nil
		}
		return v.ForticlientRunningApps
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput)
}

// Enable/disable FortiClient security posture check options. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientSecurityPosture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientSecurityPosture
	}).(pulumi.StringPtrOutput)
}

// FortiClient security posture compliance action. Valid values: `block`, `warning`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientSecurityPostureComplianceAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientSecurityPostureComplianceAction
	}).(pulumi.StringPtrOutput)
}

// Enable/disable enforcement of FortiClient system compliance. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientSystemCompliance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientSystemCompliance
	}).(pulumi.StringPtrOutput)
}

// Block or warn clients not compliant with FortiClient requirements. Valid values: `block`, `warning`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientSystemComplianceAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientSystemComplianceAction
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient vulnerability scanning. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientVulnScan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientVulnScan
	}).(pulumi.StringPtrOutput)
}

// FortiClient vulnerability compliance action. Valid values: `block`, `warning`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientVulnScanComplianceAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientVulnScanComplianceAction
	}).(pulumi.StringPtrOutput)
}

// Configure the level of the vulnerability found that causes a FortiClient vulnerability compliance action. Valid values: `critical`, `high`, `medium`, `low`, `info`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientVulnScanEnforce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientVulnScanEnforce
	}).(pulumi.StringPtrOutput)
}

// FortiClient vulnerability scan enforcement grace period (0 - 30 days, default = 1).
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientVulnScanEnforceGrace() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *int {
		if v == nil {
			return nil
		}
		return v.ForticlientVulnScanEnforceGrace
	}).(pulumi.IntPtrOutput)
}

// Enable/disable compliance exemption for vulnerabilities that cannot be patched automatically. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientVulnScanExempt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientVulnScanExempt
	}).(pulumi.StringPtrOutput)
}

// Enable/disable FortiClient web filtering. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientWf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientWf
	}).(pulumi.StringPtrOutput)
}

// The FortiClient web filter profile to apply.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientWfProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientWfProfile
	}).(pulumi.StringPtrOutput)
}

// Minimum FortiClient Windows version.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) ForticlientWinVer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.ForticlientWinVer
	}).(pulumi.StringPtrOutput)
}

// Enable/disable checking for OS recognized AntiVirus software. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) OsAvSoftwareInstalled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.OsAvSoftwareInstalled
	}).(pulumi.StringPtrOutput)
}

// FortiSandbox address.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) SandboxAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.SandboxAddress
	}).(pulumi.StringPtrOutput)
}

// Enable/disable sending files to FortiSandbox for analysis. Valid values: `enable`, `disable`.
func (o EndpointcontrolProfileForticlientWinmacSettingsPtrOutput) SandboxAnalysis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointcontrolProfileForticlientWinmacSettings) *string {
		if v == nil {
			return nil
		}
		return v.SandboxAnalysis
	}).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry struct {
	// FortiClient EMS name.
	Name *string `pulumi:"name"`
}

// EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArgs and EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArgs{...}
type EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArgs struct {
	// FortiClient EMS name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArgs) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArgs) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput)
}

// EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArray and EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArray{ EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArgs{...} }
type EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArray []EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryInput

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArray) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArray) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput {
	return o
}

// FortiClient EMS name.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry {
		return vs[0].([]EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntry)[vs[1].(int)]
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem struct {
	// Operating system entry ID.
	Id *int `pulumi:"id"`
	// Customize operating system name or Mac OS format:x.x.x
	OsName *string `pulumi:"osName"`
	// Operating system type. Valid values: `custom`, `mac-os`, `win-7`, `win-80`, `win-81`, `win-10`, `win-2000`, `win-home-svr`, `win-svr-10`, `win-svr-2003`, `win-svr-2003-r2`, `win-svr-2008`, `win-svr-2008-r2`, `win-svr-2012`, `win-svr-2012-r2`, `win-sto-svr-2003`, `win-vista`, `win-xp`, `ubuntu-linux`, `centos-linux`, `redhat-linux`, `fedora-linux`.
	OsType *string `pulumi:"osType"`
}

// EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArgs and EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArgs{...}
type EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArgs struct {
	// Operating system entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Customize operating system name or Mac OS format:x.x.x
	OsName pulumi.StringPtrInput `pulumi:"osName"`
	// Operating system type. Valid values: `custom`, `mac-os`, `win-7`, `win-80`, `win-81`, `win-10`, `win-2000`, `win-home-svr`, `win-svr-10`, `win-svr-2003`, `win-svr-2003-r2`, `win-svr-2008`, `win-svr-2008-r2`, `win-svr-2012`, `win-svr-2012-r2`, `win-sto-svr-2003`, `win-vista`, `win-xp`, `ubuntu-linux`, `centos-linux`, `redhat-linux`, `fedora-linux`.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
}

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArgs) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArgs) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput)
}

// EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArray and EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArray{ EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArgs{...} }
type EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArray []EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemInput

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArray) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArray) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput {
	return o
}

// Operating system entry ID.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Customize operating system name or Mac OS format:x.x.x
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput) OsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem) *string {
		return v.OsName
	}).(pulumi.StringPtrOutput)
}

// Operating system type. Valid values: `custom`, `mac-os`, `win-7`, `win-80`, `win-81`, `win-10`, `win-2000`, `win-home-svr`, `win-svr-10`, `win-svr-2003`, `win-svr-2003-r2`, `win-svr-2008`, `win-svr-2008-r2`, `win-svr-2012`, `win-svr-2012-r2`, `win-sto-svr-2003`, `win-vista`, `win-xp`, `ubuntu-linux`, `centos-linux`, `redhat-linux`, `fedora-linux`.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem) *string {
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem {
		return vs[0].([]EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystem)[vs[1].(int)]
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile struct {
	// File path and name.
	File *string `pulumi:"file"`
	// File ID.
	Id *int `pulumi:"id"`
}

// EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArgs and EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArgs{...}
type EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArgs struct {
	// File path and name.
	File pulumi.StringPtrInput `pulumi:"file"`
	// File ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArgs) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArgs) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput)
}

// EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArray and EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArray{ EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArgs{...} }
type EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArray []EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileInput

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArray) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArray) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput {
	return o
}

// File path and name.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile) *string { return v.File }).(pulumi.StringPtrOutput)
}

// File ID.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile {
		return vs[0].([]EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFile)[vs[1].(int)]
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry struct {
	// Registry entry ID.
	Id *int `pulumi:"id"`
	// Registry entry.
	RegistryEntry *string `pulumi:"registryEntry"`
}

// EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArgs and EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArgs{...}
type EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArgs struct {
	// Registry entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Registry entry.
	RegistryEntry pulumi.StringPtrInput `pulumi:"registryEntry"`
}

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArgs) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArgs) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput)
}

// EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArray and EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArray{ EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArgs{...} }
type EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArray []EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryInput

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArray) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArray) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput {
	return o
}

// Registry entry ID.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Registry entry.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput) RegistryEntry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry) *string {
		return v.RegistryEntry
	}).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry {
		return vs[0].([]EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntry)[vs[1].(int)]
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp struct {
	// Application name.
	AppName *string `pulumi:"appName"`
	// App's SHA256 signature.
	AppSha256Signature *string `pulumi:"appSha256Signature"`
	// App's SHA256 Signature.
	AppSha256Signature2 *string `pulumi:"appSha256Signature2"`
	// App's SHA256 Signature.
	AppSha256Signature3 *string `pulumi:"appSha256Signature3"`
	// App's SHA256 Signature.
	AppSha256Signature4 *string `pulumi:"appSha256Signature4"`
	// Application check rule. Valid values: `present`, `absent`.
	ApplicationCheckRule *string `pulumi:"applicationCheckRule"`
	// Application ID.
	Id *int `pulumi:"id"`
	// Process name.
	ProcessName *string `pulumi:"processName"`
	// Process name.
	ProcessName2 *string `pulumi:"processName2"`
	// Process name.
	ProcessName3 *string `pulumi:"processName3"`
	// Process name.
	ProcessName4 *string `pulumi:"processName4"`
}

// EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArgs and EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArgs{...}
type EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArgs struct {
	// Application name.
	AppName pulumi.StringPtrInput `pulumi:"appName"`
	// App's SHA256 signature.
	AppSha256Signature pulumi.StringPtrInput `pulumi:"appSha256Signature"`
	// App's SHA256 Signature.
	AppSha256Signature2 pulumi.StringPtrInput `pulumi:"appSha256Signature2"`
	// App's SHA256 Signature.
	AppSha256Signature3 pulumi.StringPtrInput `pulumi:"appSha256Signature3"`
	// App's SHA256 Signature.
	AppSha256Signature4 pulumi.StringPtrInput `pulumi:"appSha256Signature4"`
	// Application check rule. Valid values: `present`, `absent`.
	ApplicationCheckRule pulumi.StringPtrInput `pulumi:"applicationCheckRule"`
	// Application ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Process name.
	ProcessName pulumi.StringPtrInput `pulumi:"processName"`
	// Process name.
	ProcessName2 pulumi.StringPtrInput `pulumi:"processName2"`
	// Process name.
	ProcessName3 pulumi.StringPtrInput `pulumi:"processName3"`
	// Process name.
	ProcessName4 pulumi.StringPtrInput `pulumi:"processName4"`
}

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArgs) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArgs) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput)
}

// EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayInput is an input type that accepts EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArray and EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayInput` via:
//
//	EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArray{ EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArgs{...} }
type EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput
	ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutputWithContext(context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArray []EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppInput

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp)(nil)).Elem()
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArray) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput {
	return i.ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArray) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput {
	return o
}

// Application name.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *string { return v.AppName }).(pulumi.StringPtrOutput)
}

// App's SHA256 signature.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) AppSha256Signature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *string {
		return v.AppSha256Signature
	}).(pulumi.StringPtrOutput)
}

// App's SHA256 Signature.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) AppSha256Signature2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *string {
		return v.AppSha256Signature2
	}).(pulumi.StringPtrOutput)
}

// App's SHA256 Signature.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) AppSha256Signature3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *string {
		return v.AppSha256Signature3
	}).(pulumi.StringPtrOutput)
}

// App's SHA256 Signature.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) AppSha256Signature4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *string {
		return v.AppSha256Signature4
	}).(pulumi.StringPtrOutput)
}

// Application check rule. Valid values: `present`, `absent`.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) ApplicationCheckRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *string {
		return v.ApplicationCheckRule
	}).(pulumi.StringPtrOutput)
}

// Application ID.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Process name.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) ProcessName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *string {
		return v.ProcessName
	}).(pulumi.StringPtrOutput)
}

// Process name.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) ProcessName2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *string {
		return v.ProcessName2
	}).(pulumi.StringPtrOutput)
}

// Process name.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) ProcessName3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *string {
		return v.ProcessName3
	}).(pulumi.StringPtrOutput)
}

// Process name.
func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput) ProcessName4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp) *string {
		return v.ProcessName4
	}).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp)(nil)).Elem()
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput() EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput) ToEndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput {
	return o
}

func (o EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp {
		return vs[0].([]EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningApp)[vs[1].(int)]
	}).(EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput)
}

type EndpointcontrolProfileOnNetAddr struct {
	// Address object from available options.
	Name *string `pulumi:"name"`
}

// EndpointcontrolProfileOnNetAddrInput is an input type that accepts EndpointcontrolProfileOnNetAddrArgs and EndpointcontrolProfileOnNetAddrOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileOnNetAddrInput` via:
//
//	EndpointcontrolProfileOnNetAddrArgs{...}
type EndpointcontrolProfileOnNetAddrInput interface {
	pulumi.Input

	ToEndpointcontrolProfileOnNetAddrOutput() EndpointcontrolProfileOnNetAddrOutput
	ToEndpointcontrolProfileOnNetAddrOutputWithContext(context.Context) EndpointcontrolProfileOnNetAddrOutput
}

type EndpointcontrolProfileOnNetAddrArgs struct {
	// Address object from available options.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (EndpointcontrolProfileOnNetAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileOnNetAddr)(nil)).Elem()
}

func (i EndpointcontrolProfileOnNetAddrArgs) ToEndpointcontrolProfileOnNetAddrOutput() EndpointcontrolProfileOnNetAddrOutput {
	return i.ToEndpointcontrolProfileOnNetAddrOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileOnNetAddrArgs) ToEndpointcontrolProfileOnNetAddrOutputWithContext(ctx context.Context) EndpointcontrolProfileOnNetAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileOnNetAddrOutput)
}

// EndpointcontrolProfileOnNetAddrArrayInput is an input type that accepts EndpointcontrolProfileOnNetAddrArray and EndpointcontrolProfileOnNetAddrArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileOnNetAddrArrayInput` via:
//
//	EndpointcontrolProfileOnNetAddrArray{ EndpointcontrolProfileOnNetAddrArgs{...} }
type EndpointcontrolProfileOnNetAddrArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileOnNetAddrArrayOutput() EndpointcontrolProfileOnNetAddrArrayOutput
	ToEndpointcontrolProfileOnNetAddrArrayOutputWithContext(context.Context) EndpointcontrolProfileOnNetAddrArrayOutput
}

type EndpointcontrolProfileOnNetAddrArray []EndpointcontrolProfileOnNetAddrInput

func (EndpointcontrolProfileOnNetAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileOnNetAddr)(nil)).Elem()
}

func (i EndpointcontrolProfileOnNetAddrArray) ToEndpointcontrolProfileOnNetAddrArrayOutput() EndpointcontrolProfileOnNetAddrArrayOutput {
	return i.ToEndpointcontrolProfileOnNetAddrArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileOnNetAddrArray) ToEndpointcontrolProfileOnNetAddrArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileOnNetAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileOnNetAddrArrayOutput)
}

type EndpointcontrolProfileOnNetAddrOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileOnNetAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileOnNetAddr)(nil)).Elem()
}

func (o EndpointcontrolProfileOnNetAddrOutput) ToEndpointcontrolProfileOnNetAddrOutput() EndpointcontrolProfileOnNetAddrOutput {
	return o
}

func (o EndpointcontrolProfileOnNetAddrOutput) ToEndpointcontrolProfileOnNetAddrOutputWithContext(ctx context.Context) EndpointcontrolProfileOnNetAddrOutput {
	return o
}

// Address object from available options.
func (o EndpointcontrolProfileOnNetAddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileOnNetAddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileOnNetAddrArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileOnNetAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileOnNetAddr)(nil)).Elem()
}

func (o EndpointcontrolProfileOnNetAddrArrayOutput) ToEndpointcontrolProfileOnNetAddrArrayOutput() EndpointcontrolProfileOnNetAddrArrayOutput {
	return o
}

func (o EndpointcontrolProfileOnNetAddrArrayOutput) ToEndpointcontrolProfileOnNetAddrArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileOnNetAddrArrayOutput {
	return o
}

func (o EndpointcontrolProfileOnNetAddrArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileOnNetAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileOnNetAddr {
		return vs[0].([]EndpointcontrolProfileOnNetAddr)[vs[1].(int)]
	}).(EndpointcontrolProfileOnNetAddrOutput)
}

type EndpointcontrolProfileSrcAddr struct {
	// Address object from available options.
	Name *string `pulumi:"name"`
}

// EndpointcontrolProfileSrcAddrInput is an input type that accepts EndpointcontrolProfileSrcAddrArgs and EndpointcontrolProfileSrcAddrOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileSrcAddrInput` via:
//
//	EndpointcontrolProfileSrcAddrArgs{...}
type EndpointcontrolProfileSrcAddrInput interface {
	pulumi.Input

	ToEndpointcontrolProfileSrcAddrOutput() EndpointcontrolProfileSrcAddrOutput
	ToEndpointcontrolProfileSrcAddrOutputWithContext(context.Context) EndpointcontrolProfileSrcAddrOutput
}

type EndpointcontrolProfileSrcAddrArgs struct {
	// Address object from available options.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (EndpointcontrolProfileSrcAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileSrcAddr)(nil)).Elem()
}

func (i EndpointcontrolProfileSrcAddrArgs) ToEndpointcontrolProfileSrcAddrOutput() EndpointcontrolProfileSrcAddrOutput {
	return i.ToEndpointcontrolProfileSrcAddrOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileSrcAddrArgs) ToEndpointcontrolProfileSrcAddrOutputWithContext(ctx context.Context) EndpointcontrolProfileSrcAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileSrcAddrOutput)
}

// EndpointcontrolProfileSrcAddrArrayInput is an input type that accepts EndpointcontrolProfileSrcAddrArray and EndpointcontrolProfileSrcAddrArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileSrcAddrArrayInput` via:
//
//	EndpointcontrolProfileSrcAddrArray{ EndpointcontrolProfileSrcAddrArgs{...} }
type EndpointcontrolProfileSrcAddrArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileSrcAddrArrayOutput() EndpointcontrolProfileSrcAddrArrayOutput
	ToEndpointcontrolProfileSrcAddrArrayOutputWithContext(context.Context) EndpointcontrolProfileSrcAddrArrayOutput
}

type EndpointcontrolProfileSrcAddrArray []EndpointcontrolProfileSrcAddrInput

func (EndpointcontrolProfileSrcAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileSrcAddr)(nil)).Elem()
}

func (i EndpointcontrolProfileSrcAddrArray) ToEndpointcontrolProfileSrcAddrArrayOutput() EndpointcontrolProfileSrcAddrArrayOutput {
	return i.ToEndpointcontrolProfileSrcAddrArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileSrcAddrArray) ToEndpointcontrolProfileSrcAddrArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileSrcAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileSrcAddrArrayOutput)
}

type EndpointcontrolProfileSrcAddrOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileSrcAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileSrcAddr)(nil)).Elem()
}

func (o EndpointcontrolProfileSrcAddrOutput) ToEndpointcontrolProfileSrcAddrOutput() EndpointcontrolProfileSrcAddrOutput {
	return o
}

func (o EndpointcontrolProfileSrcAddrOutput) ToEndpointcontrolProfileSrcAddrOutputWithContext(ctx context.Context) EndpointcontrolProfileSrcAddrOutput {
	return o
}

// Address object from available options.
func (o EndpointcontrolProfileSrcAddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileSrcAddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileSrcAddrArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileSrcAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileSrcAddr)(nil)).Elem()
}

func (o EndpointcontrolProfileSrcAddrArrayOutput) ToEndpointcontrolProfileSrcAddrArrayOutput() EndpointcontrolProfileSrcAddrArrayOutput {
	return o
}

func (o EndpointcontrolProfileSrcAddrArrayOutput) ToEndpointcontrolProfileSrcAddrArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileSrcAddrArrayOutput {
	return o
}

func (o EndpointcontrolProfileSrcAddrArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileSrcAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileSrcAddr {
		return vs[0].([]EndpointcontrolProfileSrcAddr)[vs[1].(int)]
	}).(EndpointcontrolProfileSrcAddrOutput)
}

type EndpointcontrolProfileUser struct {
	// User name.
	Name *string `pulumi:"name"`
}

// EndpointcontrolProfileUserInput is an input type that accepts EndpointcontrolProfileUserArgs and EndpointcontrolProfileUserOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileUserInput` via:
//
//	EndpointcontrolProfileUserArgs{...}
type EndpointcontrolProfileUserInput interface {
	pulumi.Input

	ToEndpointcontrolProfileUserOutput() EndpointcontrolProfileUserOutput
	ToEndpointcontrolProfileUserOutputWithContext(context.Context) EndpointcontrolProfileUserOutput
}

type EndpointcontrolProfileUserArgs struct {
	// User name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (EndpointcontrolProfileUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileUser)(nil)).Elem()
}

func (i EndpointcontrolProfileUserArgs) ToEndpointcontrolProfileUserOutput() EndpointcontrolProfileUserOutput {
	return i.ToEndpointcontrolProfileUserOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileUserArgs) ToEndpointcontrolProfileUserOutputWithContext(ctx context.Context) EndpointcontrolProfileUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileUserOutput)
}

// EndpointcontrolProfileUserArrayInput is an input type that accepts EndpointcontrolProfileUserArray and EndpointcontrolProfileUserArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileUserArrayInput` via:
//
//	EndpointcontrolProfileUserArray{ EndpointcontrolProfileUserArgs{...} }
type EndpointcontrolProfileUserArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileUserArrayOutput() EndpointcontrolProfileUserArrayOutput
	ToEndpointcontrolProfileUserArrayOutputWithContext(context.Context) EndpointcontrolProfileUserArrayOutput
}

type EndpointcontrolProfileUserArray []EndpointcontrolProfileUserInput

func (EndpointcontrolProfileUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileUser)(nil)).Elem()
}

func (i EndpointcontrolProfileUserArray) ToEndpointcontrolProfileUserArrayOutput() EndpointcontrolProfileUserArrayOutput {
	return i.ToEndpointcontrolProfileUserArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileUserArray) ToEndpointcontrolProfileUserArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileUserArrayOutput)
}

type EndpointcontrolProfileUserOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileUser)(nil)).Elem()
}

func (o EndpointcontrolProfileUserOutput) ToEndpointcontrolProfileUserOutput() EndpointcontrolProfileUserOutput {
	return o
}

func (o EndpointcontrolProfileUserOutput) ToEndpointcontrolProfileUserOutputWithContext(ctx context.Context) EndpointcontrolProfileUserOutput {
	return o
}

// User name.
func (o EndpointcontrolProfileUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileUserArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileUser)(nil)).Elem()
}

func (o EndpointcontrolProfileUserArrayOutput) ToEndpointcontrolProfileUserArrayOutput() EndpointcontrolProfileUserArrayOutput {
	return o
}

func (o EndpointcontrolProfileUserArrayOutput) ToEndpointcontrolProfileUserArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileUserArrayOutput {
	return o
}

func (o EndpointcontrolProfileUserArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileUser {
		return vs[0].([]EndpointcontrolProfileUser)[vs[1].(int)]
	}).(EndpointcontrolProfileUserOutput)
}

type EndpointcontrolProfileUserGroup struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// EndpointcontrolProfileUserGroupInput is an input type that accepts EndpointcontrolProfileUserGroupArgs and EndpointcontrolProfileUserGroupOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileUserGroupInput` via:
//
//	EndpointcontrolProfileUserGroupArgs{...}
type EndpointcontrolProfileUserGroupInput interface {
	pulumi.Input

	ToEndpointcontrolProfileUserGroupOutput() EndpointcontrolProfileUserGroupOutput
	ToEndpointcontrolProfileUserGroupOutputWithContext(context.Context) EndpointcontrolProfileUserGroupOutput
}

type EndpointcontrolProfileUserGroupArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (EndpointcontrolProfileUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileUserGroup)(nil)).Elem()
}

func (i EndpointcontrolProfileUserGroupArgs) ToEndpointcontrolProfileUserGroupOutput() EndpointcontrolProfileUserGroupOutput {
	return i.ToEndpointcontrolProfileUserGroupOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileUserGroupArgs) ToEndpointcontrolProfileUserGroupOutputWithContext(ctx context.Context) EndpointcontrolProfileUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileUserGroupOutput)
}

// EndpointcontrolProfileUserGroupArrayInput is an input type that accepts EndpointcontrolProfileUserGroupArray and EndpointcontrolProfileUserGroupArrayOutput values.
// You can construct a concrete instance of `EndpointcontrolProfileUserGroupArrayInput` via:
//
//	EndpointcontrolProfileUserGroupArray{ EndpointcontrolProfileUserGroupArgs{...} }
type EndpointcontrolProfileUserGroupArrayInput interface {
	pulumi.Input

	ToEndpointcontrolProfileUserGroupArrayOutput() EndpointcontrolProfileUserGroupArrayOutput
	ToEndpointcontrolProfileUserGroupArrayOutputWithContext(context.Context) EndpointcontrolProfileUserGroupArrayOutput
}

type EndpointcontrolProfileUserGroupArray []EndpointcontrolProfileUserGroupInput

func (EndpointcontrolProfileUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileUserGroup)(nil)).Elem()
}

func (i EndpointcontrolProfileUserGroupArray) ToEndpointcontrolProfileUserGroupArrayOutput() EndpointcontrolProfileUserGroupArrayOutput {
	return i.ToEndpointcontrolProfileUserGroupArrayOutputWithContext(context.Background())
}

func (i EndpointcontrolProfileUserGroupArray) ToEndpointcontrolProfileUserGroupArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointcontrolProfileUserGroupArrayOutput)
}

type EndpointcontrolProfileUserGroupOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointcontrolProfileUserGroup)(nil)).Elem()
}

func (o EndpointcontrolProfileUserGroupOutput) ToEndpointcontrolProfileUserGroupOutput() EndpointcontrolProfileUserGroupOutput {
	return o
}

func (o EndpointcontrolProfileUserGroupOutput) ToEndpointcontrolProfileUserGroupOutputWithContext(ctx context.Context) EndpointcontrolProfileUserGroupOutput {
	return o
}

// User group name.
func (o EndpointcontrolProfileUserGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointcontrolProfileUserGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type EndpointcontrolProfileUserGroupArrayOutput struct{ *pulumi.OutputState }

func (EndpointcontrolProfileUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointcontrolProfileUserGroup)(nil)).Elem()
}

func (o EndpointcontrolProfileUserGroupArrayOutput) ToEndpointcontrolProfileUserGroupArrayOutput() EndpointcontrolProfileUserGroupArrayOutput {
	return o
}

func (o EndpointcontrolProfileUserGroupArrayOutput) ToEndpointcontrolProfileUserGroupArrayOutputWithContext(ctx context.Context) EndpointcontrolProfileUserGroupArrayOutput {
	return o
}

func (o EndpointcontrolProfileUserGroupArrayOutput) Index(i pulumi.IntInput) EndpointcontrolProfileUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointcontrolProfileUserGroup {
		return vs[0].([]EndpointcontrolProfileUserGroup)[vs[1].(int)]
	}).(EndpointcontrolProfileUserGroupOutput)
}

type ExtendercontrollerExtender1ControllerReport struct {
	// Controller report interval.
	Interval *int `pulumi:"interval"`
	// Controller report signal threshold.
	//
	// The `modem1` block supports:
	SignalThreshold *int `pulumi:"signalThreshold"`
	// FortiExtender controller report status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtendercontrollerExtender1ControllerReportInput is an input type that accepts ExtendercontrollerExtender1ControllerReportArgs and ExtendercontrollerExtender1ControllerReportOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtender1ControllerReportInput` via:
//
//	ExtendercontrollerExtender1ControllerReportArgs{...}
type ExtendercontrollerExtender1ControllerReportInput interface {
	pulumi.Input

	ToExtendercontrollerExtender1ControllerReportOutput() ExtendercontrollerExtender1ControllerReportOutput
	ToExtendercontrollerExtender1ControllerReportOutputWithContext(context.Context) ExtendercontrollerExtender1ControllerReportOutput
}

type ExtendercontrollerExtender1ControllerReportArgs struct {
	// Controller report interval.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Controller report signal threshold.
	//
	// The `modem1` block supports:
	SignalThreshold pulumi.IntPtrInput `pulumi:"signalThreshold"`
	// FortiExtender controller report status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtendercontrollerExtender1ControllerReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtender1ControllerReport)(nil)).Elem()
}

func (i ExtendercontrollerExtender1ControllerReportArgs) ToExtendercontrollerExtender1ControllerReportOutput() ExtendercontrollerExtender1ControllerReportOutput {
	return i.ToExtendercontrollerExtender1ControllerReportOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtender1ControllerReportArgs) ToExtendercontrollerExtender1ControllerReportOutputWithContext(ctx context.Context) ExtendercontrollerExtender1ControllerReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1ControllerReportOutput)
}

func (i ExtendercontrollerExtender1ControllerReportArgs) ToExtendercontrollerExtender1ControllerReportPtrOutput() ExtendercontrollerExtender1ControllerReportPtrOutput {
	return i.ToExtendercontrollerExtender1ControllerReportPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtender1ControllerReportArgs) ToExtendercontrollerExtender1ControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1ControllerReportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1ControllerReportOutput).ToExtendercontrollerExtender1ControllerReportPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtender1ControllerReportPtrInput is an input type that accepts ExtendercontrollerExtender1ControllerReportArgs, ExtendercontrollerExtender1ControllerReportPtr and ExtendercontrollerExtender1ControllerReportPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtender1ControllerReportPtrInput` via:
//
//	        ExtendercontrollerExtender1ControllerReportArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtender1ControllerReportPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtender1ControllerReportPtrOutput() ExtendercontrollerExtender1ControllerReportPtrOutput
	ToExtendercontrollerExtender1ControllerReportPtrOutputWithContext(context.Context) ExtendercontrollerExtender1ControllerReportPtrOutput
}

type extendercontrollerExtender1ControllerReportPtrType ExtendercontrollerExtender1ControllerReportArgs

func ExtendercontrollerExtender1ControllerReportPtr(v *ExtendercontrollerExtender1ControllerReportArgs) ExtendercontrollerExtender1ControllerReportPtrInput {
	return (*extendercontrollerExtender1ControllerReportPtrType)(v)
}

func (*extendercontrollerExtender1ControllerReportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtender1ControllerReport)(nil)).Elem()
}

func (i *extendercontrollerExtender1ControllerReportPtrType) ToExtendercontrollerExtender1ControllerReportPtrOutput() ExtendercontrollerExtender1ControllerReportPtrOutput {
	return i.ToExtendercontrollerExtender1ControllerReportPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtender1ControllerReportPtrType) ToExtendercontrollerExtender1ControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1ControllerReportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1ControllerReportPtrOutput)
}

type ExtendercontrollerExtender1ControllerReportOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtender1ControllerReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtender1ControllerReport)(nil)).Elem()
}

func (o ExtendercontrollerExtender1ControllerReportOutput) ToExtendercontrollerExtender1ControllerReportOutput() ExtendercontrollerExtender1ControllerReportOutput {
	return o
}

func (o ExtendercontrollerExtender1ControllerReportOutput) ToExtendercontrollerExtender1ControllerReportOutputWithContext(ctx context.Context) ExtendercontrollerExtender1ControllerReportOutput {
	return o
}

func (o ExtendercontrollerExtender1ControllerReportOutput) ToExtendercontrollerExtender1ControllerReportPtrOutput() ExtendercontrollerExtender1ControllerReportPtrOutput {
	return o.ToExtendercontrollerExtender1ControllerReportPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtender1ControllerReportOutput) ToExtendercontrollerExtender1ControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1ControllerReportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtender1ControllerReport) *ExtendercontrollerExtender1ControllerReport {
		return &v
	}).(ExtendercontrollerExtender1ControllerReportPtrOutput)
}

// Controller report interval.
func (o ExtendercontrollerExtender1ControllerReportOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1ControllerReport) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Controller report signal threshold.
//
// The `modem1` block supports:
func (o ExtendercontrollerExtender1ControllerReportOutput) SignalThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1ControllerReport) *int { return v.SignalThreshold }).(pulumi.IntPtrOutput)
}

// FortiExtender controller report status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1ControllerReportOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1ControllerReport) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtender1ControllerReportPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtender1ControllerReportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtender1ControllerReport)(nil)).Elem()
}

func (o ExtendercontrollerExtender1ControllerReportPtrOutput) ToExtendercontrollerExtender1ControllerReportPtrOutput() ExtendercontrollerExtender1ControllerReportPtrOutput {
	return o
}

func (o ExtendercontrollerExtender1ControllerReportPtrOutput) ToExtendercontrollerExtender1ControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1ControllerReportPtrOutput {
	return o
}

func (o ExtendercontrollerExtender1ControllerReportPtrOutput) Elem() ExtendercontrollerExtender1ControllerReportOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1ControllerReport) ExtendercontrollerExtender1ControllerReport {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtender1ControllerReport
		return ret
	}).(ExtendercontrollerExtender1ControllerReportOutput)
}

// Controller report interval.
func (o ExtendercontrollerExtender1ControllerReportPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1ControllerReport) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Controller report signal threshold.
//
// The `modem1` block supports:
func (o ExtendercontrollerExtender1ControllerReportPtrOutput) SignalThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1ControllerReport) *int {
		if v == nil {
			return nil
		}
		return v.SignalThreshold
	}).(pulumi.IntPtrOutput)
}

// FortiExtender controller report status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1ControllerReportPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1ControllerReport) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtender1Modem1 struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch *ExtendercontrollerExtender1Modem1AutoSwitch `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus *int `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim *string `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps *string `pulumi:"gps"`
	// FortiExtender interface name.
	Ifname *string `pulumi:"ifname"`
	// Preferred carrier.
	PreferredCarrier *string `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf *string `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode *string `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin *string `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode *string `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin *string `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode *string `pulumi:"sim2PinCode"`
}

// ExtendercontrollerExtender1Modem1Input is an input type that accepts ExtendercontrollerExtender1Modem1Args and ExtendercontrollerExtender1Modem1Output values.
// You can construct a concrete instance of `ExtendercontrollerExtender1Modem1Input` via:
//
//	ExtendercontrollerExtender1Modem1Args{...}
type ExtendercontrollerExtender1Modem1Input interface {
	pulumi.Input

	ToExtendercontrollerExtender1Modem1Output() ExtendercontrollerExtender1Modem1Output
	ToExtendercontrollerExtender1Modem1OutputWithContext(context.Context) ExtendercontrollerExtender1Modem1Output
}

type ExtendercontrollerExtender1Modem1Args struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch ExtendercontrollerExtender1Modem1AutoSwitchPtrInput `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus pulumi.IntPtrInput `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim pulumi.StringPtrInput `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps pulumi.StringPtrInput `pulumi:"gps"`
	// FortiExtender interface name.
	Ifname pulumi.StringPtrInput `pulumi:"ifname"`
	// Preferred carrier.
	PreferredCarrier pulumi.StringPtrInput `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf pulumi.StringPtrInput `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode pulumi.StringPtrInput `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin pulumi.StringPtrInput `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode pulumi.StringPtrInput `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin pulumi.StringPtrInput `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode pulumi.StringPtrInput `pulumi:"sim2PinCode"`
}

func (ExtendercontrollerExtender1Modem1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtender1Modem1)(nil)).Elem()
}

func (i ExtendercontrollerExtender1Modem1Args) ToExtendercontrollerExtender1Modem1Output() ExtendercontrollerExtender1Modem1Output {
	return i.ToExtendercontrollerExtender1Modem1OutputWithContext(context.Background())
}

func (i ExtendercontrollerExtender1Modem1Args) ToExtendercontrollerExtender1Modem1OutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem1Output)
}

func (i ExtendercontrollerExtender1Modem1Args) ToExtendercontrollerExtender1Modem1PtrOutput() ExtendercontrollerExtender1Modem1PtrOutput {
	return i.ToExtendercontrollerExtender1Modem1PtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtender1Modem1Args) ToExtendercontrollerExtender1Modem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem1Output).ToExtendercontrollerExtender1Modem1PtrOutputWithContext(ctx)
}

// ExtendercontrollerExtender1Modem1PtrInput is an input type that accepts ExtendercontrollerExtender1Modem1Args, ExtendercontrollerExtender1Modem1Ptr and ExtendercontrollerExtender1Modem1PtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtender1Modem1PtrInput` via:
//
//	        ExtendercontrollerExtender1Modem1Args{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtender1Modem1PtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtender1Modem1PtrOutput() ExtendercontrollerExtender1Modem1PtrOutput
	ToExtendercontrollerExtender1Modem1PtrOutputWithContext(context.Context) ExtendercontrollerExtender1Modem1PtrOutput
}

type extendercontrollerExtender1Modem1PtrType ExtendercontrollerExtender1Modem1Args

func ExtendercontrollerExtender1Modem1Ptr(v *ExtendercontrollerExtender1Modem1Args) ExtendercontrollerExtender1Modem1PtrInput {
	return (*extendercontrollerExtender1Modem1PtrType)(v)
}

func (*extendercontrollerExtender1Modem1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtender1Modem1)(nil)).Elem()
}

func (i *extendercontrollerExtender1Modem1PtrType) ToExtendercontrollerExtender1Modem1PtrOutput() ExtendercontrollerExtender1Modem1PtrOutput {
	return i.ToExtendercontrollerExtender1Modem1PtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtender1Modem1PtrType) ToExtendercontrollerExtender1Modem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem1PtrOutput)
}

type ExtendercontrollerExtender1Modem1Output struct{ *pulumi.OutputState }

func (ExtendercontrollerExtender1Modem1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtender1Modem1)(nil)).Elem()
}

func (o ExtendercontrollerExtender1Modem1Output) ToExtendercontrollerExtender1Modem1Output() ExtendercontrollerExtender1Modem1Output {
	return o
}

func (o ExtendercontrollerExtender1Modem1Output) ToExtendercontrollerExtender1Modem1OutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1Output {
	return o
}

func (o ExtendercontrollerExtender1Modem1Output) ToExtendercontrollerExtender1Modem1PtrOutput() ExtendercontrollerExtender1Modem1PtrOutput {
	return o.ToExtendercontrollerExtender1Modem1PtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtender1Modem1Output) ToExtendercontrollerExtender1Modem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtender1Modem1) *ExtendercontrollerExtender1Modem1 {
		return &v
	}).(ExtendercontrollerExtender1Modem1PtrOutput)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtender1Modem1Output) AutoSwitch() ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *ExtendercontrollerExtender1Modem1AutoSwitch {
		return v.AutoSwitch
	}).(ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtender1Modem1Output) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *int { return v.ConnStatus }).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtender1Modem1Output) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *string { return v.DefaultSim }).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1Output) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *string { return v.Gps }).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtender1Modem1Output) Ifname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *string { return v.Ifname }).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtender1Modem1Output) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *string { return v.PreferredCarrier }).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtender1Modem1Output) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *string { return v.RedundantIntf }).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1Output) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *string { return v.RedundantMode }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1Output) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *string { return v.Sim1Pin }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtender1Modem1Output) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *string { return v.Sim1PinCode }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1Output) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *string { return v.Sim2Pin }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtender1Modem1Output) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1) *string { return v.Sim2PinCode }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtender1Modem1PtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtender1Modem1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtender1Modem1)(nil)).Elem()
}

func (o ExtendercontrollerExtender1Modem1PtrOutput) ToExtendercontrollerExtender1Modem1PtrOutput() ExtendercontrollerExtender1Modem1PtrOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem1PtrOutput) ToExtendercontrollerExtender1Modem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1PtrOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem1PtrOutput) Elem() ExtendercontrollerExtender1Modem1Output {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) ExtendercontrollerExtender1Modem1 {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtender1Modem1
		return ret
	}).(ExtendercontrollerExtender1Modem1Output)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtender1Modem1PtrOutput) AutoSwitch() ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *ExtendercontrollerExtender1Modem1AutoSwitch {
		if v == nil {
			return nil
		}
		return v.AutoSwitch
	}).(ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtender1Modem1PtrOutput) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *int {
		if v == nil {
			return nil
		}
		return v.ConnStatus
	}).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtender1Modem1PtrOutput) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSim
	}).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1PtrOutput) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *string {
		if v == nil {
			return nil
		}
		return v.Gps
	}).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtender1Modem1PtrOutput) Ifname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *string {
		if v == nil {
			return nil
		}
		return v.Ifname
	}).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtender1Modem1PtrOutput) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *string {
		if v == nil {
			return nil
		}
		return v.PreferredCarrier
	}).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtender1Modem1PtrOutput) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *string {
		if v == nil {
			return nil
		}
		return v.RedundantIntf
	}).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1PtrOutput) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *string {
		if v == nil {
			return nil
		}
		return v.RedundantMode
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1PtrOutput) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim1Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtender1Modem1PtrOutput) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim1PinCode
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1PtrOutput) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim2Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtender1Modem1PtrOutput) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim2PinCode
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtender1Modem1AutoSwitch struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan *string `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect *string `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod *int `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal *string `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack *string `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime *string `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer *int `pulumi:"switchBackTimer"`
}

// ExtendercontrollerExtender1Modem1AutoSwitchInput is an input type that accepts ExtendercontrollerExtender1Modem1AutoSwitchArgs and ExtendercontrollerExtender1Modem1AutoSwitchOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtender1Modem1AutoSwitchInput` via:
//
//	ExtendercontrollerExtender1Modem1AutoSwitchArgs{...}
type ExtendercontrollerExtender1Modem1AutoSwitchInput interface {
	pulumi.Input

	ToExtendercontrollerExtender1Modem1AutoSwitchOutput() ExtendercontrollerExtender1Modem1AutoSwitchOutput
	ToExtendercontrollerExtender1Modem1AutoSwitchOutputWithContext(context.Context) ExtendercontrollerExtender1Modem1AutoSwitchOutput
}

type ExtendercontrollerExtender1Modem1AutoSwitchArgs struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan pulumi.StringPtrInput `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect pulumi.StringPtrInput `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod pulumi.IntPtrInput `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold pulumi.IntPtrInput `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal pulumi.StringPtrInput `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack pulumi.StringPtrInput `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime pulumi.StringPtrInput `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer pulumi.IntPtrInput `pulumi:"switchBackTimer"`
}

func (ExtendercontrollerExtender1Modem1AutoSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtender1Modem1AutoSwitch)(nil)).Elem()
}

func (i ExtendercontrollerExtender1Modem1AutoSwitchArgs) ToExtendercontrollerExtender1Modem1AutoSwitchOutput() ExtendercontrollerExtender1Modem1AutoSwitchOutput {
	return i.ToExtendercontrollerExtender1Modem1AutoSwitchOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtender1Modem1AutoSwitchArgs) ToExtendercontrollerExtender1Modem1AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1AutoSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem1AutoSwitchOutput)
}

func (i ExtendercontrollerExtender1Modem1AutoSwitchArgs) ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutput() ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtender1Modem1AutoSwitchArgs) ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem1AutoSwitchOutput).ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtender1Modem1AutoSwitchPtrInput is an input type that accepts ExtendercontrollerExtender1Modem1AutoSwitchArgs, ExtendercontrollerExtender1Modem1AutoSwitchPtr and ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtender1Modem1AutoSwitchPtrInput` via:
//
//	        ExtendercontrollerExtender1Modem1AutoSwitchArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtender1Modem1AutoSwitchPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutput() ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput
	ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutputWithContext(context.Context) ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput
}

type extendercontrollerExtender1Modem1AutoSwitchPtrType ExtendercontrollerExtender1Modem1AutoSwitchArgs

func ExtendercontrollerExtender1Modem1AutoSwitchPtr(v *ExtendercontrollerExtender1Modem1AutoSwitchArgs) ExtendercontrollerExtender1Modem1AutoSwitchPtrInput {
	return (*extendercontrollerExtender1Modem1AutoSwitchPtrType)(v)
}

func (*extendercontrollerExtender1Modem1AutoSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtender1Modem1AutoSwitch)(nil)).Elem()
}

func (i *extendercontrollerExtender1Modem1AutoSwitchPtrType) ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutput() ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtender1Modem1AutoSwitchPtrType) ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput)
}

type ExtendercontrollerExtender1Modem1AutoSwitchOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtender1Modem1AutoSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtender1Modem1AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) ToExtendercontrollerExtender1Modem1AutoSwitchOutput() ExtendercontrollerExtender1Modem1AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) ToExtendercontrollerExtender1Modem1AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutput() ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput {
	return o.ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtender1Modem1AutoSwitch) *ExtendercontrollerExtender1Modem1AutoSwitch {
		return &v
	}).(ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1AutoSwitch) *string { return v.Dataplan }).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1AutoSwitch) *string { return v.Disconnect }).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1AutoSwitch) *int { return v.DisconnectPeriod }).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1AutoSwitch) *int { return v.DisconnectThreshold }).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1AutoSwitch) *string { return v.Signal }).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1AutoSwitch) *string { return v.SwitchBack }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1AutoSwitch) *string { return v.SwitchBackTime }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtender1Modem1AutoSwitchOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem1AutoSwitch) *int { return v.SwitchBackTimer }).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtender1Modem1AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutput() ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) ToExtendercontrollerExtender1Modem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) Elem() ExtendercontrollerExtender1Modem1AutoSwitchOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1AutoSwitch) ExtendercontrollerExtender1Modem1AutoSwitch {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtender1Modem1AutoSwitch
		return ret
	}).(ExtendercontrollerExtender1Modem1AutoSwitchOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Dataplan
	}).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectPeriod
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectThreshold
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBack
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBackTime
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.SwitchBackTimer
	}).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtender1Modem2 struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch *ExtendercontrollerExtender1Modem2AutoSwitch `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus *int `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim *string `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps *string `pulumi:"gps"`
	// FortiExtender interface name.
	Ifname *string `pulumi:"ifname"`
	// Preferred carrier.
	PreferredCarrier *string `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf *string `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode *string `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin *string `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode *string `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin *string `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode *string `pulumi:"sim2PinCode"`
}

// ExtendercontrollerExtender1Modem2Input is an input type that accepts ExtendercontrollerExtender1Modem2Args and ExtendercontrollerExtender1Modem2Output values.
// You can construct a concrete instance of `ExtendercontrollerExtender1Modem2Input` via:
//
//	ExtendercontrollerExtender1Modem2Args{...}
type ExtendercontrollerExtender1Modem2Input interface {
	pulumi.Input

	ToExtendercontrollerExtender1Modem2Output() ExtendercontrollerExtender1Modem2Output
	ToExtendercontrollerExtender1Modem2OutputWithContext(context.Context) ExtendercontrollerExtender1Modem2Output
}

type ExtendercontrollerExtender1Modem2Args struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch ExtendercontrollerExtender1Modem2AutoSwitchPtrInput `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus pulumi.IntPtrInput `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim pulumi.StringPtrInput `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps pulumi.StringPtrInput `pulumi:"gps"`
	// FortiExtender interface name.
	Ifname pulumi.StringPtrInput `pulumi:"ifname"`
	// Preferred carrier.
	PreferredCarrier pulumi.StringPtrInput `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf pulumi.StringPtrInput `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode pulumi.StringPtrInput `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin pulumi.StringPtrInput `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode pulumi.StringPtrInput `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin pulumi.StringPtrInput `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode pulumi.StringPtrInput `pulumi:"sim2PinCode"`
}

func (ExtendercontrollerExtender1Modem2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtender1Modem2)(nil)).Elem()
}

func (i ExtendercontrollerExtender1Modem2Args) ToExtendercontrollerExtender1Modem2Output() ExtendercontrollerExtender1Modem2Output {
	return i.ToExtendercontrollerExtender1Modem2OutputWithContext(context.Background())
}

func (i ExtendercontrollerExtender1Modem2Args) ToExtendercontrollerExtender1Modem2OutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem2Output)
}

func (i ExtendercontrollerExtender1Modem2Args) ToExtendercontrollerExtender1Modem2PtrOutput() ExtendercontrollerExtender1Modem2PtrOutput {
	return i.ToExtendercontrollerExtender1Modem2PtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtender1Modem2Args) ToExtendercontrollerExtender1Modem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem2Output).ToExtendercontrollerExtender1Modem2PtrOutputWithContext(ctx)
}

// ExtendercontrollerExtender1Modem2PtrInput is an input type that accepts ExtendercontrollerExtender1Modem2Args, ExtendercontrollerExtender1Modem2Ptr and ExtendercontrollerExtender1Modem2PtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtender1Modem2PtrInput` via:
//
//	        ExtendercontrollerExtender1Modem2Args{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtender1Modem2PtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtender1Modem2PtrOutput() ExtendercontrollerExtender1Modem2PtrOutput
	ToExtendercontrollerExtender1Modem2PtrOutputWithContext(context.Context) ExtendercontrollerExtender1Modem2PtrOutput
}

type extendercontrollerExtender1Modem2PtrType ExtendercontrollerExtender1Modem2Args

func ExtendercontrollerExtender1Modem2Ptr(v *ExtendercontrollerExtender1Modem2Args) ExtendercontrollerExtender1Modem2PtrInput {
	return (*extendercontrollerExtender1Modem2PtrType)(v)
}

func (*extendercontrollerExtender1Modem2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtender1Modem2)(nil)).Elem()
}

func (i *extendercontrollerExtender1Modem2PtrType) ToExtendercontrollerExtender1Modem2PtrOutput() ExtendercontrollerExtender1Modem2PtrOutput {
	return i.ToExtendercontrollerExtender1Modem2PtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtender1Modem2PtrType) ToExtendercontrollerExtender1Modem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem2PtrOutput)
}

type ExtendercontrollerExtender1Modem2Output struct{ *pulumi.OutputState }

func (ExtendercontrollerExtender1Modem2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtender1Modem2)(nil)).Elem()
}

func (o ExtendercontrollerExtender1Modem2Output) ToExtendercontrollerExtender1Modem2Output() ExtendercontrollerExtender1Modem2Output {
	return o
}

func (o ExtendercontrollerExtender1Modem2Output) ToExtendercontrollerExtender1Modem2OutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2Output {
	return o
}

func (o ExtendercontrollerExtender1Modem2Output) ToExtendercontrollerExtender1Modem2PtrOutput() ExtendercontrollerExtender1Modem2PtrOutput {
	return o.ToExtendercontrollerExtender1Modem2PtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtender1Modem2Output) ToExtendercontrollerExtender1Modem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtender1Modem2) *ExtendercontrollerExtender1Modem2 {
		return &v
	}).(ExtendercontrollerExtender1Modem2PtrOutput)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtender1Modem2Output) AutoSwitch() ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *ExtendercontrollerExtender1Modem2AutoSwitch {
		return v.AutoSwitch
	}).(ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtender1Modem2Output) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *int { return v.ConnStatus }).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtender1Modem2Output) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *string { return v.DefaultSim }).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2Output) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *string { return v.Gps }).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtender1Modem2Output) Ifname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *string { return v.Ifname }).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtender1Modem2Output) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *string { return v.PreferredCarrier }).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtender1Modem2Output) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *string { return v.RedundantIntf }).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2Output) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *string { return v.RedundantMode }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2Output) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *string { return v.Sim1Pin }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtender1Modem2Output) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *string { return v.Sim1PinCode }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2Output) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *string { return v.Sim2Pin }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtender1Modem2Output) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2) *string { return v.Sim2PinCode }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtender1Modem2PtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtender1Modem2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtender1Modem2)(nil)).Elem()
}

func (o ExtendercontrollerExtender1Modem2PtrOutput) ToExtendercontrollerExtender1Modem2PtrOutput() ExtendercontrollerExtender1Modem2PtrOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem2PtrOutput) ToExtendercontrollerExtender1Modem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2PtrOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem2PtrOutput) Elem() ExtendercontrollerExtender1Modem2Output {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) ExtendercontrollerExtender1Modem2 {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtender1Modem2
		return ret
	}).(ExtendercontrollerExtender1Modem2Output)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtender1Modem2PtrOutput) AutoSwitch() ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *ExtendercontrollerExtender1Modem2AutoSwitch {
		if v == nil {
			return nil
		}
		return v.AutoSwitch
	}).(ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtender1Modem2PtrOutput) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *int {
		if v == nil {
			return nil
		}
		return v.ConnStatus
	}).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtender1Modem2PtrOutput) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSim
	}).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2PtrOutput) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *string {
		if v == nil {
			return nil
		}
		return v.Gps
	}).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtender1Modem2PtrOutput) Ifname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *string {
		if v == nil {
			return nil
		}
		return v.Ifname
	}).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtender1Modem2PtrOutput) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *string {
		if v == nil {
			return nil
		}
		return v.PreferredCarrier
	}).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtender1Modem2PtrOutput) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *string {
		if v == nil {
			return nil
		}
		return v.RedundantIntf
	}).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2PtrOutput) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *string {
		if v == nil {
			return nil
		}
		return v.RedundantMode
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2PtrOutput) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim1Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtender1Modem2PtrOutput) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim1PinCode
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2PtrOutput) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim2Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtender1Modem2PtrOutput) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim2PinCode
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtender1Modem2AutoSwitch struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan *string `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect *string `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod *int `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal *string `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack *string `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime *string `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer *int `pulumi:"switchBackTimer"`
}

// ExtendercontrollerExtender1Modem2AutoSwitchInput is an input type that accepts ExtendercontrollerExtender1Modem2AutoSwitchArgs and ExtendercontrollerExtender1Modem2AutoSwitchOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtender1Modem2AutoSwitchInput` via:
//
//	ExtendercontrollerExtender1Modem2AutoSwitchArgs{...}
type ExtendercontrollerExtender1Modem2AutoSwitchInput interface {
	pulumi.Input

	ToExtendercontrollerExtender1Modem2AutoSwitchOutput() ExtendercontrollerExtender1Modem2AutoSwitchOutput
	ToExtendercontrollerExtender1Modem2AutoSwitchOutputWithContext(context.Context) ExtendercontrollerExtender1Modem2AutoSwitchOutput
}

type ExtendercontrollerExtender1Modem2AutoSwitchArgs struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan pulumi.StringPtrInput `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect pulumi.StringPtrInput `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod pulumi.IntPtrInput `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold pulumi.IntPtrInput `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal pulumi.StringPtrInput `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack pulumi.StringPtrInput `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime pulumi.StringPtrInput `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer pulumi.IntPtrInput `pulumi:"switchBackTimer"`
}

func (ExtendercontrollerExtender1Modem2AutoSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtender1Modem2AutoSwitch)(nil)).Elem()
}

func (i ExtendercontrollerExtender1Modem2AutoSwitchArgs) ToExtendercontrollerExtender1Modem2AutoSwitchOutput() ExtendercontrollerExtender1Modem2AutoSwitchOutput {
	return i.ToExtendercontrollerExtender1Modem2AutoSwitchOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtender1Modem2AutoSwitchArgs) ToExtendercontrollerExtender1Modem2AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2AutoSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem2AutoSwitchOutput)
}

func (i ExtendercontrollerExtender1Modem2AutoSwitchArgs) ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutput() ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtender1Modem2AutoSwitchArgs) ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem2AutoSwitchOutput).ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtender1Modem2AutoSwitchPtrInput is an input type that accepts ExtendercontrollerExtender1Modem2AutoSwitchArgs, ExtendercontrollerExtender1Modem2AutoSwitchPtr and ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtender1Modem2AutoSwitchPtrInput` via:
//
//	        ExtendercontrollerExtender1Modem2AutoSwitchArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtender1Modem2AutoSwitchPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutput() ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput
	ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutputWithContext(context.Context) ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput
}

type extendercontrollerExtender1Modem2AutoSwitchPtrType ExtendercontrollerExtender1Modem2AutoSwitchArgs

func ExtendercontrollerExtender1Modem2AutoSwitchPtr(v *ExtendercontrollerExtender1Modem2AutoSwitchArgs) ExtendercontrollerExtender1Modem2AutoSwitchPtrInput {
	return (*extendercontrollerExtender1Modem2AutoSwitchPtrType)(v)
}

func (*extendercontrollerExtender1Modem2AutoSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtender1Modem2AutoSwitch)(nil)).Elem()
}

func (i *extendercontrollerExtender1Modem2AutoSwitchPtrType) ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutput() ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtender1Modem2AutoSwitchPtrType) ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput)
}

type ExtendercontrollerExtender1Modem2AutoSwitchOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtender1Modem2AutoSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtender1Modem2AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) ToExtendercontrollerExtender1Modem2AutoSwitchOutput() ExtendercontrollerExtender1Modem2AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) ToExtendercontrollerExtender1Modem2AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutput() ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput {
	return o.ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtender1Modem2AutoSwitch) *ExtendercontrollerExtender1Modem2AutoSwitch {
		return &v
	}).(ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2AutoSwitch) *string { return v.Dataplan }).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2AutoSwitch) *string { return v.Disconnect }).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2AutoSwitch) *int { return v.DisconnectPeriod }).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2AutoSwitch) *int { return v.DisconnectThreshold }).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2AutoSwitch) *string { return v.Signal }).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2AutoSwitch) *string { return v.SwitchBack }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2AutoSwitch) *string { return v.SwitchBackTime }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtender1Modem2AutoSwitchOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtender1Modem2AutoSwitch) *int { return v.SwitchBackTimer }).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtender1Modem2AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutput() ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) ToExtendercontrollerExtender1Modem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) Elem() ExtendercontrollerExtender1Modem2AutoSwitchOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2AutoSwitch) ExtendercontrollerExtender1Modem2AutoSwitch {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtender1Modem2AutoSwitch
		return ret
	}).(ExtendercontrollerExtender1Modem2AutoSwitchOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Dataplan
	}).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectPeriod
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectThreshold
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBack
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBackTime
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtender1Modem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.SwitchBackTimer
	}).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtenderControllerReport struct {
	// Controller report interval.
	Interval *int `pulumi:"interval"`
	// Controller report signal threshold.
	//
	// The `modem1` block supports:
	SignalThreshold *int `pulumi:"signalThreshold"`
	// FortiExtender controller report status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtendercontrollerExtenderControllerReportInput is an input type that accepts ExtendercontrollerExtenderControllerReportArgs and ExtendercontrollerExtenderControllerReportOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderControllerReportInput` via:
//
//	ExtendercontrollerExtenderControllerReportArgs{...}
type ExtendercontrollerExtenderControllerReportInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderControllerReportOutput() ExtendercontrollerExtenderControllerReportOutput
	ToExtendercontrollerExtenderControllerReportOutputWithContext(context.Context) ExtendercontrollerExtenderControllerReportOutput
}

type ExtendercontrollerExtenderControllerReportArgs struct {
	// Controller report interval.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Controller report signal threshold.
	//
	// The `modem1` block supports:
	SignalThreshold pulumi.IntPtrInput `pulumi:"signalThreshold"`
	// FortiExtender controller report status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtendercontrollerExtenderControllerReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderControllerReport)(nil)).Elem()
}

func (i ExtendercontrollerExtenderControllerReportArgs) ToExtendercontrollerExtenderControllerReportOutput() ExtendercontrollerExtenderControllerReportOutput {
	return i.ToExtendercontrollerExtenderControllerReportOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderControllerReportArgs) ToExtendercontrollerExtenderControllerReportOutputWithContext(ctx context.Context) ExtendercontrollerExtenderControllerReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderControllerReportOutput)
}

func (i ExtendercontrollerExtenderControllerReportArgs) ToExtendercontrollerExtenderControllerReportPtrOutput() ExtendercontrollerExtenderControllerReportPtrOutput {
	return i.ToExtendercontrollerExtenderControllerReportPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderControllerReportArgs) ToExtendercontrollerExtenderControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderControllerReportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderControllerReportOutput).ToExtendercontrollerExtenderControllerReportPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderControllerReportPtrInput is an input type that accepts ExtendercontrollerExtenderControllerReportArgs, ExtendercontrollerExtenderControllerReportPtr and ExtendercontrollerExtenderControllerReportPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderControllerReportPtrInput` via:
//
//	        ExtendercontrollerExtenderControllerReportArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderControllerReportPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderControllerReportPtrOutput() ExtendercontrollerExtenderControllerReportPtrOutput
	ToExtendercontrollerExtenderControllerReportPtrOutputWithContext(context.Context) ExtendercontrollerExtenderControllerReportPtrOutput
}

type extendercontrollerExtenderControllerReportPtrType ExtendercontrollerExtenderControllerReportArgs

func ExtendercontrollerExtenderControllerReportPtr(v *ExtendercontrollerExtenderControllerReportArgs) ExtendercontrollerExtenderControllerReportPtrInput {
	return (*extendercontrollerExtenderControllerReportPtrType)(v)
}

func (*extendercontrollerExtenderControllerReportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderControllerReport)(nil)).Elem()
}

func (i *extendercontrollerExtenderControllerReportPtrType) ToExtendercontrollerExtenderControllerReportPtrOutput() ExtendercontrollerExtenderControllerReportPtrOutput {
	return i.ToExtendercontrollerExtenderControllerReportPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderControllerReportPtrType) ToExtendercontrollerExtenderControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderControllerReportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderControllerReportPtrOutput)
}

type ExtendercontrollerExtenderControllerReportOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderControllerReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderControllerReport)(nil)).Elem()
}

func (o ExtendercontrollerExtenderControllerReportOutput) ToExtendercontrollerExtenderControllerReportOutput() ExtendercontrollerExtenderControllerReportOutput {
	return o
}

func (o ExtendercontrollerExtenderControllerReportOutput) ToExtendercontrollerExtenderControllerReportOutputWithContext(ctx context.Context) ExtendercontrollerExtenderControllerReportOutput {
	return o
}

func (o ExtendercontrollerExtenderControllerReportOutput) ToExtendercontrollerExtenderControllerReportPtrOutput() ExtendercontrollerExtenderControllerReportPtrOutput {
	return o.ToExtendercontrollerExtenderControllerReportPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderControllerReportOutput) ToExtendercontrollerExtenderControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderControllerReportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderControllerReport) *ExtendercontrollerExtenderControllerReport {
		return &v
	}).(ExtendercontrollerExtenderControllerReportPtrOutput)
}

// Controller report interval.
func (o ExtendercontrollerExtenderControllerReportOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderControllerReport) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Controller report signal threshold.
//
// The `modem1` block supports:
func (o ExtendercontrollerExtenderControllerReportOutput) SignalThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderControllerReport) *int { return v.SignalThreshold }).(pulumi.IntPtrOutput)
}

// FortiExtender controller report status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderControllerReportOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderControllerReport) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderControllerReportPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderControllerReportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderControllerReport)(nil)).Elem()
}

func (o ExtendercontrollerExtenderControllerReportPtrOutput) ToExtendercontrollerExtenderControllerReportPtrOutput() ExtendercontrollerExtenderControllerReportPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderControllerReportPtrOutput) ToExtendercontrollerExtenderControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderControllerReportPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderControllerReportPtrOutput) Elem() ExtendercontrollerExtenderControllerReportOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderControllerReport) ExtendercontrollerExtenderControllerReport {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderControllerReport
		return ret
	}).(ExtendercontrollerExtenderControllerReportOutput)
}

// Controller report interval.
func (o ExtendercontrollerExtenderControllerReportPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderControllerReport) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Controller report signal threshold.
//
// The `modem1` block supports:
func (o ExtendercontrollerExtenderControllerReportPtrOutput) SignalThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderControllerReport) *int {
		if v == nil {
			return nil
		}
		return v.SignalThreshold
	}).(pulumi.IntPtrOutput)
}

// FortiExtender controller report status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderControllerReportPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderControllerReport) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderModem1 struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch *ExtendercontrollerExtenderModem1AutoSwitch `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus *int `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim *string `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps *string `pulumi:"gps"`
	// FortiExtender interface name.
	Ifname *string `pulumi:"ifname"`
	// Preferred carrier.
	PreferredCarrier *string `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf *string `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode *string `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin *string `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode *string `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin *string `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode *string `pulumi:"sim2PinCode"`
}

// ExtendercontrollerExtenderModem1Input is an input type that accepts ExtendercontrollerExtenderModem1Args and ExtendercontrollerExtenderModem1Output values.
// You can construct a concrete instance of `ExtendercontrollerExtenderModem1Input` via:
//
//	ExtendercontrollerExtenderModem1Args{...}
type ExtendercontrollerExtenderModem1Input interface {
	pulumi.Input

	ToExtendercontrollerExtenderModem1Output() ExtendercontrollerExtenderModem1Output
	ToExtendercontrollerExtenderModem1OutputWithContext(context.Context) ExtendercontrollerExtenderModem1Output
}

type ExtendercontrollerExtenderModem1Args struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch ExtendercontrollerExtenderModem1AutoSwitchPtrInput `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus pulumi.IntPtrInput `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim pulumi.StringPtrInput `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps pulumi.StringPtrInput `pulumi:"gps"`
	// FortiExtender interface name.
	Ifname pulumi.StringPtrInput `pulumi:"ifname"`
	// Preferred carrier.
	PreferredCarrier pulumi.StringPtrInput `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf pulumi.StringPtrInput `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode pulumi.StringPtrInput `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin pulumi.StringPtrInput `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode pulumi.StringPtrInput `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin pulumi.StringPtrInput `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode pulumi.StringPtrInput `pulumi:"sim2PinCode"`
}

func (ExtendercontrollerExtenderModem1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderModem1)(nil)).Elem()
}

func (i ExtendercontrollerExtenderModem1Args) ToExtendercontrollerExtenderModem1Output() ExtendercontrollerExtenderModem1Output {
	return i.ToExtendercontrollerExtenderModem1OutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderModem1Args) ToExtendercontrollerExtenderModem1OutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem1Output)
}

func (i ExtendercontrollerExtenderModem1Args) ToExtendercontrollerExtenderModem1PtrOutput() ExtendercontrollerExtenderModem1PtrOutput {
	return i.ToExtendercontrollerExtenderModem1PtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderModem1Args) ToExtendercontrollerExtenderModem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem1Output).ToExtendercontrollerExtenderModem1PtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderModem1PtrInput is an input type that accepts ExtendercontrollerExtenderModem1Args, ExtendercontrollerExtenderModem1Ptr and ExtendercontrollerExtenderModem1PtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderModem1PtrInput` via:
//
//	        ExtendercontrollerExtenderModem1Args{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderModem1PtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderModem1PtrOutput() ExtendercontrollerExtenderModem1PtrOutput
	ToExtendercontrollerExtenderModem1PtrOutputWithContext(context.Context) ExtendercontrollerExtenderModem1PtrOutput
}

type extendercontrollerExtenderModem1PtrType ExtendercontrollerExtenderModem1Args

func ExtendercontrollerExtenderModem1Ptr(v *ExtendercontrollerExtenderModem1Args) ExtendercontrollerExtenderModem1PtrInput {
	return (*extendercontrollerExtenderModem1PtrType)(v)
}

func (*extendercontrollerExtenderModem1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderModem1)(nil)).Elem()
}

func (i *extendercontrollerExtenderModem1PtrType) ToExtendercontrollerExtenderModem1PtrOutput() ExtendercontrollerExtenderModem1PtrOutput {
	return i.ToExtendercontrollerExtenderModem1PtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderModem1PtrType) ToExtendercontrollerExtenderModem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem1PtrOutput)
}

type ExtendercontrollerExtenderModem1Output struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderModem1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderModem1)(nil)).Elem()
}

func (o ExtendercontrollerExtenderModem1Output) ToExtendercontrollerExtenderModem1Output() ExtendercontrollerExtenderModem1Output {
	return o
}

func (o ExtendercontrollerExtenderModem1Output) ToExtendercontrollerExtenderModem1OutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1Output {
	return o
}

func (o ExtendercontrollerExtenderModem1Output) ToExtendercontrollerExtenderModem1PtrOutput() ExtendercontrollerExtenderModem1PtrOutput {
	return o.ToExtendercontrollerExtenderModem1PtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderModem1Output) ToExtendercontrollerExtenderModem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderModem1) *ExtendercontrollerExtenderModem1 {
		return &v
	}).(ExtendercontrollerExtenderModem1PtrOutput)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtenderModem1Output) AutoSwitch() ExtendercontrollerExtenderModem1AutoSwitchPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *ExtendercontrollerExtenderModem1AutoSwitch {
		return v.AutoSwitch
	}).(ExtendercontrollerExtenderModem1AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtenderModem1Output) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *int { return v.ConnStatus }).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtenderModem1Output) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *string { return v.DefaultSim }).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1Output) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *string { return v.Gps }).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtenderModem1Output) Ifname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *string { return v.Ifname }).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtenderModem1Output) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *string { return v.PreferredCarrier }).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtenderModem1Output) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *string { return v.RedundantIntf }).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1Output) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *string { return v.RedundantMode }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1Output) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *string { return v.Sim1Pin }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtenderModem1Output) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *string { return v.Sim1PinCode }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1Output) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *string { return v.Sim2Pin }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtenderModem1Output) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1) *string { return v.Sim2PinCode }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderModem1PtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderModem1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderModem1)(nil)).Elem()
}

func (o ExtendercontrollerExtenderModem1PtrOutput) ToExtendercontrollerExtenderModem1PtrOutput() ExtendercontrollerExtenderModem1PtrOutput {
	return o
}

func (o ExtendercontrollerExtenderModem1PtrOutput) ToExtendercontrollerExtenderModem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1PtrOutput {
	return o
}

func (o ExtendercontrollerExtenderModem1PtrOutput) Elem() ExtendercontrollerExtenderModem1Output {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) ExtendercontrollerExtenderModem1 {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderModem1
		return ret
	}).(ExtendercontrollerExtenderModem1Output)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtenderModem1PtrOutput) AutoSwitch() ExtendercontrollerExtenderModem1AutoSwitchPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *ExtendercontrollerExtenderModem1AutoSwitch {
		if v == nil {
			return nil
		}
		return v.AutoSwitch
	}).(ExtendercontrollerExtenderModem1AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtenderModem1PtrOutput) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *int {
		if v == nil {
			return nil
		}
		return v.ConnStatus
	}).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtenderModem1PtrOutput) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSim
	}).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1PtrOutput) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *string {
		if v == nil {
			return nil
		}
		return v.Gps
	}).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtenderModem1PtrOutput) Ifname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *string {
		if v == nil {
			return nil
		}
		return v.Ifname
	}).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtenderModem1PtrOutput) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *string {
		if v == nil {
			return nil
		}
		return v.PreferredCarrier
	}).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtenderModem1PtrOutput) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *string {
		if v == nil {
			return nil
		}
		return v.RedundantIntf
	}).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1PtrOutput) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *string {
		if v == nil {
			return nil
		}
		return v.RedundantMode
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1PtrOutput) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim1Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtenderModem1PtrOutput) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim1PinCode
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1PtrOutput) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim2Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtenderModem1PtrOutput) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim2PinCode
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderModem1AutoSwitch struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan *string `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect *string `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod *int `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal *string `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack *string `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime *string `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer *int `pulumi:"switchBackTimer"`
}

// ExtendercontrollerExtenderModem1AutoSwitchInput is an input type that accepts ExtendercontrollerExtenderModem1AutoSwitchArgs and ExtendercontrollerExtenderModem1AutoSwitchOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderModem1AutoSwitchInput` via:
//
//	ExtendercontrollerExtenderModem1AutoSwitchArgs{...}
type ExtendercontrollerExtenderModem1AutoSwitchInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderModem1AutoSwitchOutput() ExtendercontrollerExtenderModem1AutoSwitchOutput
	ToExtendercontrollerExtenderModem1AutoSwitchOutputWithContext(context.Context) ExtendercontrollerExtenderModem1AutoSwitchOutput
}

type ExtendercontrollerExtenderModem1AutoSwitchArgs struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan pulumi.StringPtrInput `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect pulumi.StringPtrInput `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod pulumi.IntPtrInput `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold pulumi.IntPtrInput `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal pulumi.StringPtrInput `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack pulumi.StringPtrInput `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime pulumi.StringPtrInput `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer pulumi.IntPtrInput `pulumi:"switchBackTimer"`
}

func (ExtendercontrollerExtenderModem1AutoSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderModem1AutoSwitch)(nil)).Elem()
}

func (i ExtendercontrollerExtenderModem1AutoSwitchArgs) ToExtendercontrollerExtenderModem1AutoSwitchOutput() ExtendercontrollerExtenderModem1AutoSwitchOutput {
	return i.ToExtendercontrollerExtenderModem1AutoSwitchOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderModem1AutoSwitchArgs) ToExtendercontrollerExtenderModem1AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1AutoSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem1AutoSwitchOutput)
}

func (i ExtendercontrollerExtenderModem1AutoSwitchArgs) ToExtendercontrollerExtenderModem1AutoSwitchPtrOutput() ExtendercontrollerExtenderModem1AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtenderModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderModem1AutoSwitchArgs) ToExtendercontrollerExtenderModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem1AutoSwitchOutput).ToExtendercontrollerExtenderModem1AutoSwitchPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderModem1AutoSwitchPtrInput is an input type that accepts ExtendercontrollerExtenderModem1AutoSwitchArgs, ExtendercontrollerExtenderModem1AutoSwitchPtr and ExtendercontrollerExtenderModem1AutoSwitchPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderModem1AutoSwitchPtrInput` via:
//
//	        ExtendercontrollerExtenderModem1AutoSwitchArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderModem1AutoSwitchPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderModem1AutoSwitchPtrOutput() ExtendercontrollerExtenderModem1AutoSwitchPtrOutput
	ToExtendercontrollerExtenderModem1AutoSwitchPtrOutputWithContext(context.Context) ExtendercontrollerExtenderModem1AutoSwitchPtrOutput
}

type extendercontrollerExtenderModem1AutoSwitchPtrType ExtendercontrollerExtenderModem1AutoSwitchArgs

func ExtendercontrollerExtenderModem1AutoSwitchPtr(v *ExtendercontrollerExtenderModem1AutoSwitchArgs) ExtendercontrollerExtenderModem1AutoSwitchPtrInput {
	return (*extendercontrollerExtenderModem1AutoSwitchPtrType)(v)
}

func (*extendercontrollerExtenderModem1AutoSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderModem1AutoSwitch)(nil)).Elem()
}

func (i *extendercontrollerExtenderModem1AutoSwitchPtrType) ToExtendercontrollerExtenderModem1AutoSwitchPtrOutput() ExtendercontrollerExtenderModem1AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtenderModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderModem1AutoSwitchPtrType) ToExtendercontrollerExtenderModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem1AutoSwitchPtrOutput)
}

type ExtendercontrollerExtenderModem1AutoSwitchOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderModem1AutoSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderModem1AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) ToExtendercontrollerExtenderModem1AutoSwitchOutput() ExtendercontrollerExtenderModem1AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) ToExtendercontrollerExtenderModem1AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) ToExtendercontrollerExtenderModem1AutoSwitchPtrOutput() ExtendercontrollerExtenderModem1AutoSwitchPtrOutput {
	return o.ToExtendercontrollerExtenderModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) ToExtendercontrollerExtenderModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1AutoSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderModem1AutoSwitch) *ExtendercontrollerExtenderModem1AutoSwitch {
		return &v
	}).(ExtendercontrollerExtenderModem1AutoSwitchPtrOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1AutoSwitch) *string { return v.Dataplan }).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1AutoSwitch) *string { return v.Disconnect }).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1AutoSwitch) *int { return v.DisconnectPeriod }).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1AutoSwitch) *int { return v.DisconnectThreshold }).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1AutoSwitch) *string { return v.Signal }).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1AutoSwitch) *string { return v.SwitchBack }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1AutoSwitch) *string { return v.SwitchBackTime }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtenderModem1AutoSwitchOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem1AutoSwitch) *int { return v.SwitchBackTimer }).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtenderModem1AutoSwitchPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderModem1AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) ToExtendercontrollerExtenderModem1AutoSwitchPtrOutput() ExtendercontrollerExtenderModem1AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) ToExtendercontrollerExtenderModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem1AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) Elem() ExtendercontrollerExtenderModem1AutoSwitchOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1AutoSwitch) ExtendercontrollerExtenderModem1AutoSwitch {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderModem1AutoSwitch
		return ret
	}).(ExtendercontrollerExtenderModem1AutoSwitchOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Dataplan
	}).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectPeriod
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectThreshold
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBack
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBackTime
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtenderModem1AutoSwitchPtrOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.SwitchBackTimer
	}).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtenderModem2 struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch *ExtendercontrollerExtenderModem2AutoSwitch `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus *int `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim *string `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps *string `pulumi:"gps"`
	// FortiExtender interface name.
	Ifname *string `pulumi:"ifname"`
	// Preferred carrier.
	PreferredCarrier *string `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf *string `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode *string `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin *string `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode *string `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin *string `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode *string `pulumi:"sim2PinCode"`
}

// ExtendercontrollerExtenderModem2Input is an input type that accepts ExtendercontrollerExtenderModem2Args and ExtendercontrollerExtenderModem2Output values.
// You can construct a concrete instance of `ExtendercontrollerExtenderModem2Input` via:
//
//	ExtendercontrollerExtenderModem2Args{...}
type ExtendercontrollerExtenderModem2Input interface {
	pulumi.Input

	ToExtendercontrollerExtenderModem2Output() ExtendercontrollerExtenderModem2Output
	ToExtendercontrollerExtenderModem2OutputWithContext(context.Context) ExtendercontrollerExtenderModem2Output
}

type ExtendercontrollerExtenderModem2Args struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch ExtendercontrollerExtenderModem2AutoSwitchPtrInput `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus pulumi.IntPtrInput `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim pulumi.StringPtrInput `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps pulumi.StringPtrInput `pulumi:"gps"`
	// FortiExtender interface name.
	Ifname pulumi.StringPtrInput `pulumi:"ifname"`
	// Preferred carrier.
	PreferredCarrier pulumi.StringPtrInput `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf pulumi.StringPtrInput `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode pulumi.StringPtrInput `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin pulumi.StringPtrInput `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode pulumi.StringPtrInput `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin pulumi.StringPtrInput `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode pulumi.StringPtrInput `pulumi:"sim2PinCode"`
}

func (ExtendercontrollerExtenderModem2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderModem2)(nil)).Elem()
}

func (i ExtendercontrollerExtenderModem2Args) ToExtendercontrollerExtenderModem2Output() ExtendercontrollerExtenderModem2Output {
	return i.ToExtendercontrollerExtenderModem2OutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderModem2Args) ToExtendercontrollerExtenderModem2OutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem2Output)
}

func (i ExtendercontrollerExtenderModem2Args) ToExtendercontrollerExtenderModem2PtrOutput() ExtendercontrollerExtenderModem2PtrOutput {
	return i.ToExtendercontrollerExtenderModem2PtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderModem2Args) ToExtendercontrollerExtenderModem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem2Output).ToExtendercontrollerExtenderModem2PtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderModem2PtrInput is an input type that accepts ExtendercontrollerExtenderModem2Args, ExtendercontrollerExtenderModem2Ptr and ExtendercontrollerExtenderModem2PtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderModem2PtrInput` via:
//
//	        ExtendercontrollerExtenderModem2Args{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderModem2PtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderModem2PtrOutput() ExtendercontrollerExtenderModem2PtrOutput
	ToExtendercontrollerExtenderModem2PtrOutputWithContext(context.Context) ExtendercontrollerExtenderModem2PtrOutput
}

type extendercontrollerExtenderModem2PtrType ExtendercontrollerExtenderModem2Args

func ExtendercontrollerExtenderModem2Ptr(v *ExtendercontrollerExtenderModem2Args) ExtendercontrollerExtenderModem2PtrInput {
	return (*extendercontrollerExtenderModem2PtrType)(v)
}

func (*extendercontrollerExtenderModem2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderModem2)(nil)).Elem()
}

func (i *extendercontrollerExtenderModem2PtrType) ToExtendercontrollerExtenderModem2PtrOutput() ExtendercontrollerExtenderModem2PtrOutput {
	return i.ToExtendercontrollerExtenderModem2PtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderModem2PtrType) ToExtendercontrollerExtenderModem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem2PtrOutput)
}

type ExtendercontrollerExtenderModem2Output struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderModem2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderModem2)(nil)).Elem()
}

func (o ExtendercontrollerExtenderModem2Output) ToExtendercontrollerExtenderModem2Output() ExtendercontrollerExtenderModem2Output {
	return o
}

func (o ExtendercontrollerExtenderModem2Output) ToExtendercontrollerExtenderModem2OutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2Output {
	return o
}

func (o ExtendercontrollerExtenderModem2Output) ToExtendercontrollerExtenderModem2PtrOutput() ExtendercontrollerExtenderModem2PtrOutput {
	return o.ToExtendercontrollerExtenderModem2PtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderModem2Output) ToExtendercontrollerExtenderModem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderModem2) *ExtendercontrollerExtenderModem2 {
		return &v
	}).(ExtendercontrollerExtenderModem2PtrOutput)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtenderModem2Output) AutoSwitch() ExtendercontrollerExtenderModem2AutoSwitchPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *ExtendercontrollerExtenderModem2AutoSwitch {
		return v.AutoSwitch
	}).(ExtendercontrollerExtenderModem2AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtenderModem2Output) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *int { return v.ConnStatus }).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtenderModem2Output) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *string { return v.DefaultSim }).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2Output) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *string { return v.Gps }).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtenderModem2Output) Ifname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *string { return v.Ifname }).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtenderModem2Output) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *string { return v.PreferredCarrier }).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtenderModem2Output) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *string { return v.RedundantIntf }).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2Output) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *string { return v.RedundantMode }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2Output) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *string { return v.Sim1Pin }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtenderModem2Output) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *string { return v.Sim1PinCode }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2Output) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *string { return v.Sim2Pin }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtenderModem2Output) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2) *string { return v.Sim2PinCode }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderModem2PtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderModem2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderModem2)(nil)).Elem()
}

func (o ExtendercontrollerExtenderModem2PtrOutput) ToExtendercontrollerExtenderModem2PtrOutput() ExtendercontrollerExtenderModem2PtrOutput {
	return o
}

func (o ExtendercontrollerExtenderModem2PtrOutput) ToExtendercontrollerExtenderModem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2PtrOutput {
	return o
}

func (o ExtendercontrollerExtenderModem2PtrOutput) Elem() ExtendercontrollerExtenderModem2Output {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) ExtendercontrollerExtenderModem2 {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderModem2
		return ret
	}).(ExtendercontrollerExtenderModem2Output)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtenderModem2PtrOutput) AutoSwitch() ExtendercontrollerExtenderModem2AutoSwitchPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *ExtendercontrollerExtenderModem2AutoSwitch {
		if v == nil {
			return nil
		}
		return v.AutoSwitch
	}).(ExtendercontrollerExtenderModem2AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtenderModem2PtrOutput) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *int {
		if v == nil {
			return nil
		}
		return v.ConnStatus
	}).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtenderModem2PtrOutput) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSim
	}).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2PtrOutput) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *string {
		if v == nil {
			return nil
		}
		return v.Gps
	}).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtenderModem2PtrOutput) Ifname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *string {
		if v == nil {
			return nil
		}
		return v.Ifname
	}).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtenderModem2PtrOutput) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *string {
		if v == nil {
			return nil
		}
		return v.PreferredCarrier
	}).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtenderModem2PtrOutput) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *string {
		if v == nil {
			return nil
		}
		return v.RedundantIntf
	}).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2PtrOutput) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *string {
		if v == nil {
			return nil
		}
		return v.RedundantMode
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2PtrOutput) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim1Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtenderModem2PtrOutput) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim1PinCode
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2PtrOutput) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim2Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtenderModem2PtrOutput) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim2PinCode
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderModem2AutoSwitch struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan *string `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect *string `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod *int `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal *string `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack *string `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime *string `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer *int `pulumi:"switchBackTimer"`
}

// ExtendercontrollerExtenderModem2AutoSwitchInput is an input type that accepts ExtendercontrollerExtenderModem2AutoSwitchArgs and ExtendercontrollerExtenderModem2AutoSwitchOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderModem2AutoSwitchInput` via:
//
//	ExtendercontrollerExtenderModem2AutoSwitchArgs{...}
type ExtendercontrollerExtenderModem2AutoSwitchInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderModem2AutoSwitchOutput() ExtendercontrollerExtenderModem2AutoSwitchOutput
	ToExtendercontrollerExtenderModem2AutoSwitchOutputWithContext(context.Context) ExtendercontrollerExtenderModem2AutoSwitchOutput
}

type ExtendercontrollerExtenderModem2AutoSwitchArgs struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan pulumi.StringPtrInput `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect pulumi.StringPtrInput `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod pulumi.IntPtrInput `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold pulumi.IntPtrInput `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal pulumi.StringPtrInput `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack pulumi.StringPtrInput `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime pulumi.StringPtrInput `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer pulumi.IntPtrInput `pulumi:"switchBackTimer"`
}

func (ExtendercontrollerExtenderModem2AutoSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderModem2AutoSwitch)(nil)).Elem()
}

func (i ExtendercontrollerExtenderModem2AutoSwitchArgs) ToExtendercontrollerExtenderModem2AutoSwitchOutput() ExtendercontrollerExtenderModem2AutoSwitchOutput {
	return i.ToExtendercontrollerExtenderModem2AutoSwitchOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderModem2AutoSwitchArgs) ToExtendercontrollerExtenderModem2AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2AutoSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem2AutoSwitchOutput)
}

func (i ExtendercontrollerExtenderModem2AutoSwitchArgs) ToExtendercontrollerExtenderModem2AutoSwitchPtrOutput() ExtendercontrollerExtenderModem2AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtenderModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderModem2AutoSwitchArgs) ToExtendercontrollerExtenderModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem2AutoSwitchOutput).ToExtendercontrollerExtenderModem2AutoSwitchPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderModem2AutoSwitchPtrInput is an input type that accepts ExtendercontrollerExtenderModem2AutoSwitchArgs, ExtendercontrollerExtenderModem2AutoSwitchPtr and ExtendercontrollerExtenderModem2AutoSwitchPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderModem2AutoSwitchPtrInput` via:
//
//	        ExtendercontrollerExtenderModem2AutoSwitchArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderModem2AutoSwitchPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderModem2AutoSwitchPtrOutput() ExtendercontrollerExtenderModem2AutoSwitchPtrOutput
	ToExtendercontrollerExtenderModem2AutoSwitchPtrOutputWithContext(context.Context) ExtendercontrollerExtenderModem2AutoSwitchPtrOutput
}

type extendercontrollerExtenderModem2AutoSwitchPtrType ExtendercontrollerExtenderModem2AutoSwitchArgs

func ExtendercontrollerExtenderModem2AutoSwitchPtr(v *ExtendercontrollerExtenderModem2AutoSwitchArgs) ExtendercontrollerExtenderModem2AutoSwitchPtrInput {
	return (*extendercontrollerExtenderModem2AutoSwitchPtrType)(v)
}

func (*extendercontrollerExtenderModem2AutoSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderModem2AutoSwitch)(nil)).Elem()
}

func (i *extendercontrollerExtenderModem2AutoSwitchPtrType) ToExtendercontrollerExtenderModem2AutoSwitchPtrOutput() ExtendercontrollerExtenderModem2AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtenderModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderModem2AutoSwitchPtrType) ToExtendercontrollerExtenderModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderModem2AutoSwitchPtrOutput)
}

type ExtendercontrollerExtenderModem2AutoSwitchOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderModem2AutoSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderModem2AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) ToExtendercontrollerExtenderModem2AutoSwitchOutput() ExtendercontrollerExtenderModem2AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) ToExtendercontrollerExtenderModem2AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) ToExtendercontrollerExtenderModem2AutoSwitchPtrOutput() ExtendercontrollerExtenderModem2AutoSwitchPtrOutput {
	return o.ToExtendercontrollerExtenderModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) ToExtendercontrollerExtenderModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2AutoSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderModem2AutoSwitch) *ExtendercontrollerExtenderModem2AutoSwitch {
		return &v
	}).(ExtendercontrollerExtenderModem2AutoSwitchPtrOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2AutoSwitch) *string { return v.Dataplan }).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2AutoSwitch) *string { return v.Disconnect }).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2AutoSwitch) *int { return v.DisconnectPeriod }).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2AutoSwitch) *int { return v.DisconnectThreshold }).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2AutoSwitch) *string { return v.Signal }).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2AutoSwitch) *string { return v.SwitchBack }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2AutoSwitch) *string { return v.SwitchBackTime }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtenderModem2AutoSwitchOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderModem2AutoSwitch) *int { return v.SwitchBackTimer }).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtenderModem2AutoSwitchPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderModem2AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) ToExtendercontrollerExtenderModem2AutoSwitchPtrOutput() ExtendercontrollerExtenderModem2AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) ToExtendercontrollerExtenderModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderModem2AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) Elem() ExtendercontrollerExtenderModem2AutoSwitchOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2AutoSwitch) ExtendercontrollerExtenderModem2AutoSwitch {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderModem2AutoSwitch
		return ret
	}).(ExtendercontrollerExtenderModem2AutoSwitchOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Dataplan
	}).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectPeriod
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectThreshold
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBack
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBackTime
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtenderModem2AutoSwitchPtrOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.SwitchBackTimer
	}).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtenderWanExtension struct {
	// FortiExtender interface name.
	Modem1Extension *string `pulumi:"modem1Extension"`
	// FortiExtender interface name.
	Modem2Extension *string `pulumi:"modem2Extension"`
}

// ExtendercontrollerExtenderWanExtensionInput is an input type that accepts ExtendercontrollerExtenderWanExtensionArgs and ExtendercontrollerExtenderWanExtensionOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderWanExtensionInput` via:
//
//	ExtendercontrollerExtenderWanExtensionArgs{...}
type ExtendercontrollerExtenderWanExtensionInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderWanExtensionOutput() ExtendercontrollerExtenderWanExtensionOutput
	ToExtendercontrollerExtenderWanExtensionOutputWithContext(context.Context) ExtendercontrollerExtenderWanExtensionOutput
}

type ExtendercontrollerExtenderWanExtensionArgs struct {
	// FortiExtender interface name.
	Modem1Extension pulumi.StringPtrInput `pulumi:"modem1Extension"`
	// FortiExtender interface name.
	Modem2Extension pulumi.StringPtrInput `pulumi:"modem2Extension"`
}

func (ExtendercontrollerExtenderWanExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderWanExtension)(nil)).Elem()
}

func (i ExtendercontrollerExtenderWanExtensionArgs) ToExtendercontrollerExtenderWanExtensionOutput() ExtendercontrollerExtenderWanExtensionOutput {
	return i.ToExtendercontrollerExtenderWanExtensionOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderWanExtensionArgs) ToExtendercontrollerExtenderWanExtensionOutputWithContext(ctx context.Context) ExtendercontrollerExtenderWanExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderWanExtensionOutput)
}

func (i ExtendercontrollerExtenderWanExtensionArgs) ToExtendercontrollerExtenderWanExtensionPtrOutput() ExtendercontrollerExtenderWanExtensionPtrOutput {
	return i.ToExtendercontrollerExtenderWanExtensionPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderWanExtensionArgs) ToExtendercontrollerExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderWanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderWanExtensionOutput).ToExtendercontrollerExtenderWanExtensionPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderWanExtensionPtrInput is an input type that accepts ExtendercontrollerExtenderWanExtensionArgs, ExtendercontrollerExtenderWanExtensionPtr and ExtendercontrollerExtenderWanExtensionPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderWanExtensionPtrInput` via:
//
//	        ExtendercontrollerExtenderWanExtensionArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderWanExtensionPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderWanExtensionPtrOutput() ExtendercontrollerExtenderWanExtensionPtrOutput
	ToExtendercontrollerExtenderWanExtensionPtrOutputWithContext(context.Context) ExtendercontrollerExtenderWanExtensionPtrOutput
}

type extendercontrollerExtenderWanExtensionPtrType ExtendercontrollerExtenderWanExtensionArgs

func ExtendercontrollerExtenderWanExtensionPtr(v *ExtendercontrollerExtenderWanExtensionArgs) ExtendercontrollerExtenderWanExtensionPtrInput {
	return (*extendercontrollerExtenderWanExtensionPtrType)(v)
}

func (*extendercontrollerExtenderWanExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderWanExtension)(nil)).Elem()
}

func (i *extendercontrollerExtenderWanExtensionPtrType) ToExtendercontrollerExtenderWanExtensionPtrOutput() ExtendercontrollerExtenderWanExtensionPtrOutput {
	return i.ToExtendercontrollerExtenderWanExtensionPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderWanExtensionPtrType) ToExtendercontrollerExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderWanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderWanExtensionPtrOutput)
}

type ExtendercontrollerExtenderWanExtensionOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderWanExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderWanExtension)(nil)).Elem()
}

func (o ExtendercontrollerExtenderWanExtensionOutput) ToExtendercontrollerExtenderWanExtensionOutput() ExtendercontrollerExtenderWanExtensionOutput {
	return o
}

func (o ExtendercontrollerExtenderWanExtensionOutput) ToExtendercontrollerExtenderWanExtensionOutputWithContext(ctx context.Context) ExtendercontrollerExtenderWanExtensionOutput {
	return o
}

func (o ExtendercontrollerExtenderWanExtensionOutput) ToExtendercontrollerExtenderWanExtensionPtrOutput() ExtendercontrollerExtenderWanExtensionPtrOutput {
	return o.ToExtendercontrollerExtenderWanExtensionPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderWanExtensionOutput) ToExtendercontrollerExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderWanExtensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderWanExtension) *ExtendercontrollerExtenderWanExtension {
		return &v
	}).(ExtendercontrollerExtenderWanExtensionPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtenderWanExtensionOutput) Modem1Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderWanExtension) *string { return v.Modem1Extension }).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtenderWanExtensionOutput) Modem2Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderWanExtension) *string { return v.Modem2Extension }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderWanExtensionPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderWanExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderWanExtension)(nil)).Elem()
}

func (o ExtendercontrollerExtenderWanExtensionPtrOutput) ToExtendercontrollerExtenderWanExtensionPtrOutput() ExtendercontrollerExtenderWanExtensionPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderWanExtensionPtrOutput) ToExtendercontrollerExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderWanExtensionPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderWanExtensionPtrOutput) Elem() ExtendercontrollerExtenderWanExtensionOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderWanExtension) ExtendercontrollerExtenderWanExtension {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderWanExtension
		return ret
	}).(ExtendercontrollerExtenderWanExtensionOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtenderWanExtensionPtrOutput) Modem1Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderWanExtension) *string {
		if v == nil {
			return nil
		}
		return v.Modem1Extension
	}).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtendercontrollerExtenderWanExtensionPtrOutput) Modem2Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderWanExtension) *string {
		if v == nil {
			return nil
		}
		return v.Modem2Extension
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellular struct {
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport *ExtendercontrollerExtenderprofileCellularControllerReport `pulumi:"controllerReport"`
	// Dataplan names. The structure of `dataplan` block is documented below.
	Dataplans []ExtendercontrollerExtenderprofileCellularDataplan `pulumi:"dataplans"`
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 *ExtendercontrollerExtenderprofileCellularModem1 `pulumi:"modem1"`
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 *ExtendercontrollerExtenderprofileCellularModem2 `pulumi:"modem2"`
	// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
	SmsNotification *ExtendercontrollerExtenderprofileCellularSmsNotification `pulumi:"smsNotification"`
}

// ExtendercontrollerExtenderprofileCellularInput is an input type that accepts ExtendercontrollerExtenderprofileCellularArgs and ExtendercontrollerExtenderprofileCellularOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularInput` via:
//
//	ExtendercontrollerExtenderprofileCellularArgs{...}
type ExtendercontrollerExtenderprofileCellularInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularOutput() ExtendercontrollerExtenderprofileCellularOutput
	ToExtendercontrollerExtenderprofileCellularOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularOutput
}

type ExtendercontrollerExtenderprofileCellularArgs struct {
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport ExtendercontrollerExtenderprofileCellularControllerReportPtrInput `pulumi:"controllerReport"`
	// Dataplan names. The structure of `dataplan` block is documented below.
	Dataplans ExtendercontrollerExtenderprofileCellularDataplanArrayInput `pulumi:"dataplans"`
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 ExtendercontrollerExtenderprofileCellularModem1PtrInput `pulumi:"modem1"`
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 ExtendercontrollerExtenderprofileCellularModem2PtrInput `pulumi:"modem2"`
	// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
	SmsNotification ExtendercontrollerExtenderprofileCellularSmsNotificationPtrInput `pulumi:"smsNotification"`
}

func (ExtendercontrollerExtenderprofileCellularArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellular)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularArgs) ToExtendercontrollerExtenderprofileCellularOutput() ExtendercontrollerExtenderprofileCellularOutput {
	return i.ToExtendercontrollerExtenderprofileCellularOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularArgs) ToExtendercontrollerExtenderprofileCellularOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularOutput)
}

func (i ExtendercontrollerExtenderprofileCellularArgs) ToExtendercontrollerExtenderprofileCellularPtrOutput() ExtendercontrollerExtenderprofileCellularPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularArgs) ToExtendercontrollerExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularOutput).ToExtendercontrollerExtenderprofileCellularPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderprofileCellularPtrInput is an input type that accepts ExtendercontrollerExtenderprofileCellularArgs, ExtendercontrollerExtenderprofileCellularPtr and ExtendercontrollerExtenderprofileCellularPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularPtrInput` via:
//
//	        ExtendercontrollerExtenderprofileCellularArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderprofileCellularPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularPtrOutput() ExtendercontrollerExtenderprofileCellularPtrOutput
	ToExtendercontrollerExtenderprofileCellularPtrOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularPtrOutput
}

type extendercontrollerExtenderprofileCellularPtrType ExtendercontrollerExtenderprofileCellularArgs

func ExtendercontrollerExtenderprofileCellularPtr(v *ExtendercontrollerExtenderprofileCellularArgs) ExtendercontrollerExtenderprofileCellularPtrInput {
	return (*extendercontrollerExtenderprofileCellularPtrType)(v)
}

func (*extendercontrollerExtenderprofileCellularPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellular)(nil)).Elem()
}

func (i *extendercontrollerExtenderprofileCellularPtrType) ToExtendercontrollerExtenderprofileCellularPtrOutput() ExtendercontrollerExtenderprofileCellularPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderprofileCellularPtrType) ToExtendercontrollerExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellular)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularOutput) ToExtendercontrollerExtenderprofileCellularOutput() ExtendercontrollerExtenderprofileCellularOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularOutput) ToExtendercontrollerExtenderprofileCellularOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularOutput) ToExtendercontrollerExtenderprofileCellularPtrOutput() ExtendercontrollerExtenderprofileCellularPtrOutput {
	return o.ToExtendercontrollerExtenderprofileCellularPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderprofileCellularOutput) ToExtendercontrollerExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderprofileCellular) *ExtendercontrollerExtenderprofileCellular {
		return &v
	}).(ExtendercontrollerExtenderprofileCellularPtrOutput)
}

// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularOutput) ControllerReport() ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellular) *ExtendercontrollerExtenderprofileCellularControllerReport {
		return v.ControllerReport
	}).(ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput)
}

// Dataplan names. The structure of `dataplan` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularOutput) Dataplans() ExtendercontrollerExtenderprofileCellularDataplanArrayOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellular) []ExtendercontrollerExtenderprofileCellularDataplan {
		return v.Dataplans
	}).(ExtendercontrollerExtenderprofileCellularDataplanArrayOutput)
}

// Configuration options for modem 1. The structure of `modem1` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularOutput) Modem1() ExtendercontrollerExtenderprofileCellularModem1PtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellular) *ExtendercontrollerExtenderprofileCellularModem1 {
		return v.Modem1
	}).(ExtendercontrollerExtenderprofileCellularModem1PtrOutput)
}

// Configuration options for modem 2. The structure of `modem2` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularOutput) Modem2() ExtendercontrollerExtenderprofileCellularModem2PtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellular) *ExtendercontrollerExtenderprofileCellularModem2 {
		return v.Modem2
	}).(ExtendercontrollerExtenderprofileCellularModem2PtrOutput)
}

// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularOutput) SmsNotification() ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellular) *ExtendercontrollerExtenderprofileCellularSmsNotification {
		return v.SmsNotification
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellular)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularPtrOutput) ToExtendercontrollerExtenderprofileCellularPtrOutput() ExtendercontrollerExtenderprofileCellularPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularPtrOutput) ToExtendercontrollerExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularPtrOutput) Elem() ExtendercontrollerExtenderprofileCellularOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellular) ExtendercontrollerExtenderprofileCellular {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderprofileCellular
		return ret
	}).(ExtendercontrollerExtenderprofileCellularOutput)
}

// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularPtrOutput) ControllerReport() ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellular) *ExtendercontrollerExtenderprofileCellularControllerReport {
		if v == nil {
			return nil
		}
		return v.ControllerReport
	}).(ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput)
}

// Dataplan names. The structure of `dataplan` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularPtrOutput) Dataplans() ExtendercontrollerExtenderprofileCellularDataplanArrayOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellular) []ExtendercontrollerExtenderprofileCellularDataplan {
		if v == nil {
			return nil
		}
		return v.Dataplans
	}).(ExtendercontrollerExtenderprofileCellularDataplanArrayOutput)
}

// Configuration options for modem 1. The structure of `modem1` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularPtrOutput) Modem1() ExtendercontrollerExtenderprofileCellularModem1PtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellular) *ExtendercontrollerExtenderprofileCellularModem1 {
		if v == nil {
			return nil
		}
		return v.Modem1
	}).(ExtendercontrollerExtenderprofileCellularModem1PtrOutput)
}

// Configuration options for modem 2. The structure of `modem2` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularPtrOutput) Modem2() ExtendercontrollerExtenderprofileCellularModem2PtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellular) *ExtendercontrollerExtenderprofileCellularModem2 {
		if v == nil {
			return nil
		}
		return v.Modem2
	}).(ExtendercontrollerExtenderprofileCellularModem2PtrOutput)
}

// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularPtrOutput) SmsNotification() ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellular) *ExtendercontrollerExtenderprofileCellularSmsNotification {
		if v == nil {
			return nil
		}
		return v.SmsNotification
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularControllerReport struct {
	// Controller report interval.
	Interval *int `pulumi:"interval"`
	// Controller report signal threshold.
	SignalThreshold *int `pulumi:"signalThreshold"`
	// FortiExtender controller report status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtendercontrollerExtenderprofileCellularControllerReportInput is an input type that accepts ExtendercontrollerExtenderprofileCellularControllerReportArgs and ExtendercontrollerExtenderprofileCellularControllerReportOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularControllerReportInput` via:
//
//	ExtendercontrollerExtenderprofileCellularControllerReportArgs{...}
type ExtendercontrollerExtenderprofileCellularControllerReportInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularControllerReportOutput() ExtendercontrollerExtenderprofileCellularControllerReportOutput
	ToExtendercontrollerExtenderprofileCellularControllerReportOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularControllerReportOutput
}

type ExtendercontrollerExtenderprofileCellularControllerReportArgs struct {
	// Controller report interval.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Controller report signal threshold.
	SignalThreshold pulumi.IntPtrInput `pulumi:"signalThreshold"`
	// FortiExtender controller report status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtendercontrollerExtenderprofileCellularControllerReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularControllerReportArgs) ToExtendercontrollerExtenderprofileCellularControllerReportOutput() ExtendercontrollerExtenderprofileCellularControllerReportOutput {
	return i.ToExtendercontrollerExtenderprofileCellularControllerReportOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularControllerReportArgs) ToExtendercontrollerExtenderprofileCellularControllerReportOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularControllerReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularControllerReportOutput)
}

func (i ExtendercontrollerExtenderprofileCellularControllerReportArgs) ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutput() ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularControllerReportArgs) ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularControllerReportOutput).ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderprofileCellularControllerReportPtrInput is an input type that accepts ExtendercontrollerExtenderprofileCellularControllerReportArgs, ExtendercontrollerExtenderprofileCellularControllerReportPtr and ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularControllerReportPtrInput` via:
//
//	        ExtendercontrollerExtenderprofileCellularControllerReportArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderprofileCellularControllerReportPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutput() ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput
	ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput
}

type extendercontrollerExtenderprofileCellularControllerReportPtrType ExtendercontrollerExtenderprofileCellularControllerReportArgs

func ExtendercontrollerExtenderprofileCellularControllerReportPtr(v *ExtendercontrollerExtenderprofileCellularControllerReportArgs) ExtendercontrollerExtenderprofileCellularControllerReportPtrInput {
	return (*extendercontrollerExtenderprofileCellularControllerReportPtrType)(v)
}

func (*extendercontrollerExtenderprofileCellularControllerReportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (i *extendercontrollerExtenderprofileCellularControllerReportPtrType) ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutput() ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderprofileCellularControllerReportPtrType) ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularControllerReportOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularControllerReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularControllerReportOutput) ToExtendercontrollerExtenderprofileCellularControllerReportOutput() ExtendercontrollerExtenderprofileCellularControllerReportOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularControllerReportOutput) ToExtendercontrollerExtenderprofileCellularControllerReportOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularControllerReportOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularControllerReportOutput) ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutput() ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o.ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderprofileCellularControllerReportOutput) ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderprofileCellularControllerReport) *ExtendercontrollerExtenderprofileCellularControllerReport {
		return &v
	}).(ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput)
}

// Controller report interval.
func (o ExtendercontrollerExtenderprofileCellularControllerReportOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularControllerReport) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Controller report signal threshold.
func (o ExtendercontrollerExtenderprofileCellularControllerReportOutput) SignalThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularControllerReport) *int { return v.SignalThreshold }).(pulumi.IntPtrOutput)
}

// FortiExtender controller report status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularControllerReportOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularControllerReport) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput) ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutput() ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput) ToExtendercontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput) Elem() ExtendercontrollerExtenderprofileCellularControllerReportOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularControllerReport) ExtendercontrollerExtenderprofileCellularControllerReport {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderprofileCellularControllerReport
		return ret
	}).(ExtendercontrollerExtenderprofileCellularControllerReportOutput)
}

// Controller report interval.
func (o ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularControllerReport) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Controller report signal threshold.
func (o ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput) SignalThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularControllerReport) *int {
		if v == nil {
			return nil
		}
		return v.SignalThreshold
	}).(pulumi.IntPtrOutput)
}

// FortiExtender controller report status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularControllerReport) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularDataplan struct {
	// Dataplan name.
	Name *string `pulumi:"name"`
}

// ExtendercontrollerExtenderprofileCellularDataplanInput is an input type that accepts ExtendercontrollerExtenderprofileCellularDataplanArgs and ExtendercontrollerExtenderprofileCellularDataplanOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularDataplanInput` via:
//
//	ExtendercontrollerExtenderprofileCellularDataplanArgs{...}
type ExtendercontrollerExtenderprofileCellularDataplanInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularDataplanOutput() ExtendercontrollerExtenderprofileCellularDataplanOutput
	ToExtendercontrollerExtenderprofileCellularDataplanOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularDataplanOutput
}

type ExtendercontrollerExtenderprofileCellularDataplanArgs struct {
	// Dataplan name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExtendercontrollerExtenderprofileCellularDataplanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularDataplan)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularDataplanArgs) ToExtendercontrollerExtenderprofileCellularDataplanOutput() ExtendercontrollerExtenderprofileCellularDataplanOutput {
	return i.ToExtendercontrollerExtenderprofileCellularDataplanOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularDataplanArgs) ToExtendercontrollerExtenderprofileCellularDataplanOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularDataplanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularDataplanOutput)
}

// ExtendercontrollerExtenderprofileCellularDataplanArrayInput is an input type that accepts ExtendercontrollerExtenderprofileCellularDataplanArray and ExtendercontrollerExtenderprofileCellularDataplanArrayOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularDataplanArrayInput` via:
//
//	ExtendercontrollerExtenderprofileCellularDataplanArray{ ExtendercontrollerExtenderprofileCellularDataplanArgs{...} }
type ExtendercontrollerExtenderprofileCellularDataplanArrayInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularDataplanArrayOutput() ExtendercontrollerExtenderprofileCellularDataplanArrayOutput
	ToExtendercontrollerExtenderprofileCellularDataplanArrayOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularDataplanArrayOutput
}

type ExtendercontrollerExtenderprofileCellularDataplanArray []ExtendercontrollerExtenderprofileCellularDataplanInput

func (ExtendercontrollerExtenderprofileCellularDataplanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtendercontrollerExtenderprofileCellularDataplan)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularDataplanArray) ToExtendercontrollerExtenderprofileCellularDataplanArrayOutput() ExtendercontrollerExtenderprofileCellularDataplanArrayOutput {
	return i.ToExtendercontrollerExtenderprofileCellularDataplanArrayOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularDataplanArray) ToExtendercontrollerExtenderprofileCellularDataplanArrayOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularDataplanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularDataplanArrayOutput)
}

type ExtendercontrollerExtenderprofileCellularDataplanOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularDataplanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularDataplan)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularDataplanOutput) ToExtendercontrollerExtenderprofileCellularDataplanOutput() ExtendercontrollerExtenderprofileCellularDataplanOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularDataplanOutput) ToExtendercontrollerExtenderprofileCellularDataplanOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularDataplanOutput {
	return o
}

// Dataplan name.
func (o ExtendercontrollerExtenderprofileCellularDataplanOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularDataplan) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularDataplanArrayOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularDataplanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtendercontrollerExtenderprofileCellularDataplan)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularDataplanArrayOutput) ToExtendercontrollerExtenderprofileCellularDataplanArrayOutput() ExtendercontrollerExtenderprofileCellularDataplanArrayOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularDataplanArrayOutput) ToExtendercontrollerExtenderprofileCellularDataplanArrayOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularDataplanArrayOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularDataplanArrayOutput) Index(i pulumi.IntInput) ExtendercontrollerExtenderprofileCellularDataplanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtendercontrollerExtenderprofileCellularDataplan {
		return vs[0].([]ExtendercontrollerExtenderprofileCellularDataplan)[vs[1].(int)]
	}).(ExtendercontrollerExtenderprofileCellularDataplanOutput)
}

type ExtendercontrollerExtenderprofileCellularModem1 struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus *int `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim *string `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps *string `pulumi:"gps"`
	// Preferred carrier.
	PreferredCarrier *string `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf *string `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode *string `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin *string `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode *string `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin *string `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode *string `pulumi:"sim2PinCode"`
}

// ExtendercontrollerExtenderprofileCellularModem1Input is an input type that accepts ExtendercontrollerExtenderprofileCellularModem1Args and ExtendercontrollerExtenderprofileCellularModem1Output values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularModem1Input` via:
//
//	ExtendercontrollerExtenderprofileCellularModem1Args{...}
type ExtendercontrollerExtenderprofileCellularModem1Input interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularModem1Output() ExtendercontrollerExtenderprofileCellularModem1Output
	ToExtendercontrollerExtenderprofileCellularModem1OutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularModem1Output
}

type ExtendercontrollerExtenderprofileCellularModem1Args struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrInput `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus pulumi.IntPtrInput `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim pulumi.StringPtrInput `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps pulumi.StringPtrInput `pulumi:"gps"`
	// Preferred carrier.
	PreferredCarrier pulumi.StringPtrInput `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf pulumi.StringPtrInput `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode pulumi.StringPtrInput `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin pulumi.StringPtrInput `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode pulumi.StringPtrInput `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin pulumi.StringPtrInput `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode pulumi.StringPtrInput `pulumi:"sim2PinCode"`
}

func (ExtendercontrollerExtenderprofileCellularModem1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem1)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularModem1Args) ToExtendercontrollerExtenderprofileCellularModem1Output() ExtendercontrollerExtenderprofileCellularModem1Output {
	return i.ToExtendercontrollerExtenderprofileCellularModem1OutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularModem1Args) ToExtendercontrollerExtenderprofileCellularModem1OutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem1Output)
}

func (i ExtendercontrollerExtenderprofileCellularModem1Args) ToExtendercontrollerExtenderprofileCellularModem1PtrOutput() ExtendercontrollerExtenderprofileCellularModem1PtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularModem1PtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularModem1Args) ToExtendercontrollerExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem1Output).ToExtendercontrollerExtenderprofileCellularModem1PtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderprofileCellularModem1PtrInput is an input type that accepts ExtendercontrollerExtenderprofileCellularModem1Args, ExtendercontrollerExtenderprofileCellularModem1Ptr and ExtendercontrollerExtenderprofileCellularModem1PtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularModem1PtrInput` via:
//
//	        ExtendercontrollerExtenderprofileCellularModem1Args{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderprofileCellularModem1PtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularModem1PtrOutput() ExtendercontrollerExtenderprofileCellularModem1PtrOutput
	ToExtendercontrollerExtenderprofileCellularModem1PtrOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularModem1PtrOutput
}

type extendercontrollerExtenderprofileCellularModem1PtrType ExtendercontrollerExtenderprofileCellularModem1Args

func ExtendercontrollerExtenderprofileCellularModem1Ptr(v *ExtendercontrollerExtenderprofileCellularModem1Args) ExtendercontrollerExtenderprofileCellularModem1PtrInput {
	return (*extendercontrollerExtenderprofileCellularModem1PtrType)(v)
}

func (*extendercontrollerExtenderprofileCellularModem1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularModem1)(nil)).Elem()
}

func (i *extendercontrollerExtenderprofileCellularModem1PtrType) ToExtendercontrollerExtenderprofileCellularModem1PtrOutput() ExtendercontrollerExtenderprofileCellularModem1PtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularModem1PtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderprofileCellularModem1PtrType) ToExtendercontrollerExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem1PtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem1Output struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularModem1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem1)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularModem1Output) ToExtendercontrollerExtenderprofileCellularModem1Output() ExtendercontrollerExtenderprofileCellularModem1Output {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem1Output) ToExtendercontrollerExtenderprofileCellularModem1OutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1Output {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem1Output) ToExtendercontrollerExtenderprofileCellularModem1PtrOutput() ExtendercontrollerExtenderprofileCellularModem1PtrOutput {
	return o.ToExtendercontrollerExtenderprofileCellularModem1PtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderprofileCellularModem1Output) ToExtendercontrollerExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderprofileCellularModem1) *ExtendercontrollerExtenderprofileCellularModem1 {
		return &v
	}).(ExtendercontrollerExtenderprofileCellularModem1PtrOutput)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) AutoSwitch() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch {
		return v.AutoSwitch
	}).(ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *int { return v.ConnStatus }).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *string { return v.DefaultSim }).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *string { return v.Gps }).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *string { return v.PreferredCarrier }).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *string { return v.RedundantIntf }).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *string { return v.RedundantMode }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *string { return v.Sim1Pin }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *string { return v.Sim1PinCode }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *string { return v.Sim2Pin }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtenderprofileCellularModem1Output) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1) *string { return v.Sim2PinCode }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem1PtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularModem1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularModem1)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) ToExtendercontrollerExtenderprofileCellularModem1PtrOutput() ExtendercontrollerExtenderprofileCellularModem1PtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) ToExtendercontrollerExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1PtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) Elem() ExtendercontrollerExtenderprofileCellularModem1Output {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) ExtendercontrollerExtenderprofileCellularModem1 {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderprofileCellularModem1
		return ret
	}).(ExtendercontrollerExtenderprofileCellularModem1Output)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) AutoSwitch() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch {
		if v == nil {
			return nil
		}
		return v.AutoSwitch
	}).(ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *int {
		if v == nil {
			return nil
		}
		return v.ConnStatus
	}).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSim
	}).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Gps
	}).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.PreferredCarrier
	}).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.RedundantIntf
	}).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.RedundantMode
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim1Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim1PinCode
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim2Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtenderprofileCellularModem1PtrOutput) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim2PinCode
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem1AutoSwitch struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan *string `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect *string `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod *int `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal *string `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack *string `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime *string `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer *int `pulumi:"switchBackTimer"`
}

// ExtendercontrollerExtenderprofileCellularModem1AutoSwitchInput is an input type that accepts ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs and ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularModem1AutoSwitchInput` via:
//
//	ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs{...}
type ExtendercontrollerExtenderprofileCellularModem1AutoSwitchInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput
	ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput
}

type ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan pulumi.StringPtrInput `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect pulumi.StringPtrInput `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod pulumi.IntPtrInput `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold pulumi.IntPtrInput `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal pulumi.StringPtrInput `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack pulumi.StringPtrInput `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime pulumi.StringPtrInput `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer pulumi.IntPtrInput `pulumi:"switchBackTimer"`
}

func (ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput {
	return i.ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput)
}

func (i ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput).ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrInput is an input type that accepts ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs, ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtr and ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrInput` via:
//
//	        ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput
	ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput
}

type extendercontrollerExtenderprofileCellularModem1AutoSwitchPtrType ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs

func ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtr(v *ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs) ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrInput {
	return (*extendercontrollerExtenderprofileCellularModem1AutoSwitchPtrType)(v)
}

func (*extendercontrollerExtenderprofileCellularModem1AutoSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (i *extendercontrollerExtenderprofileCellularModem1AutoSwitchPtrType) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderprofileCellularModem1AutoSwitchPtrType) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch {
		return &v
	}).(ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *string { return v.Dataplan }).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *string { return v.Disconnect }).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *int { return v.DisconnectPeriod }).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *int { return v.DisconnectThreshold }).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *string { return v.Signal }).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *string { return v.SwitchBack }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *string { return v.SwitchBackTime }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *int { return v.SwitchBackTimer }).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) ToExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) Elem() ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) ExtendercontrollerExtenderprofileCellularModem1AutoSwitch {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderprofileCellularModem1AutoSwitch
		return ret
	}).(ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Dataplan
	}).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectPeriod
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectThreshold
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBack
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBackTime
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.SwitchBackTimer
	}).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem2 struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus *int `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim *string `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps *string `pulumi:"gps"`
	// Preferred carrier.
	PreferredCarrier *string `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf *string `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode *string `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin *string `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode *string `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin *string `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode *string `pulumi:"sim2PinCode"`
}

// ExtendercontrollerExtenderprofileCellularModem2Input is an input type that accepts ExtendercontrollerExtenderprofileCellularModem2Args and ExtendercontrollerExtenderprofileCellularModem2Output values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularModem2Input` via:
//
//	ExtendercontrollerExtenderprofileCellularModem2Args{...}
type ExtendercontrollerExtenderprofileCellularModem2Input interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularModem2Output() ExtendercontrollerExtenderprofileCellularModem2Output
	ToExtendercontrollerExtenderprofileCellularModem2OutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularModem2Output
}

type ExtendercontrollerExtenderprofileCellularModem2Args struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrInput `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus pulumi.IntPtrInput `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim pulumi.StringPtrInput `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps pulumi.StringPtrInput `pulumi:"gps"`
	// Preferred carrier.
	PreferredCarrier pulumi.StringPtrInput `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf pulumi.StringPtrInput `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode pulumi.StringPtrInput `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin pulumi.StringPtrInput `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode pulumi.StringPtrInput `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin pulumi.StringPtrInput `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode pulumi.StringPtrInput `pulumi:"sim2PinCode"`
}

func (ExtendercontrollerExtenderprofileCellularModem2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem2)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularModem2Args) ToExtendercontrollerExtenderprofileCellularModem2Output() ExtendercontrollerExtenderprofileCellularModem2Output {
	return i.ToExtendercontrollerExtenderprofileCellularModem2OutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularModem2Args) ToExtendercontrollerExtenderprofileCellularModem2OutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem2Output)
}

func (i ExtendercontrollerExtenderprofileCellularModem2Args) ToExtendercontrollerExtenderprofileCellularModem2PtrOutput() ExtendercontrollerExtenderprofileCellularModem2PtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularModem2PtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularModem2Args) ToExtendercontrollerExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem2Output).ToExtendercontrollerExtenderprofileCellularModem2PtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderprofileCellularModem2PtrInput is an input type that accepts ExtendercontrollerExtenderprofileCellularModem2Args, ExtendercontrollerExtenderprofileCellularModem2Ptr and ExtendercontrollerExtenderprofileCellularModem2PtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularModem2PtrInput` via:
//
//	        ExtendercontrollerExtenderprofileCellularModem2Args{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderprofileCellularModem2PtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularModem2PtrOutput() ExtendercontrollerExtenderprofileCellularModem2PtrOutput
	ToExtendercontrollerExtenderprofileCellularModem2PtrOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularModem2PtrOutput
}

type extendercontrollerExtenderprofileCellularModem2PtrType ExtendercontrollerExtenderprofileCellularModem2Args

func ExtendercontrollerExtenderprofileCellularModem2Ptr(v *ExtendercontrollerExtenderprofileCellularModem2Args) ExtendercontrollerExtenderprofileCellularModem2PtrInput {
	return (*extendercontrollerExtenderprofileCellularModem2PtrType)(v)
}

func (*extendercontrollerExtenderprofileCellularModem2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularModem2)(nil)).Elem()
}

func (i *extendercontrollerExtenderprofileCellularModem2PtrType) ToExtendercontrollerExtenderprofileCellularModem2PtrOutput() ExtendercontrollerExtenderprofileCellularModem2PtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularModem2PtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderprofileCellularModem2PtrType) ToExtendercontrollerExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem2PtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem2Output struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularModem2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem2)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularModem2Output) ToExtendercontrollerExtenderprofileCellularModem2Output() ExtendercontrollerExtenderprofileCellularModem2Output {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem2Output) ToExtendercontrollerExtenderprofileCellularModem2OutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2Output {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem2Output) ToExtendercontrollerExtenderprofileCellularModem2PtrOutput() ExtendercontrollerExtenderprofileCellularModem2PtrOutput {
	return o.ToExtendercontrollerExtenderprofileCellularModem2PtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderprofileCellularModem2Output) ToExtendercontrollerExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderprofileCellularModem2) *ExtendercontrollerExtenderprofileCellularModem2 {
		return &v
	}).(ExtendercontrollerExtenderprofileCellularModem2PtrOutput)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) AutoSwitch() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch {
		return v.AutoSwitch
	}).(ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *int { return v.ConnStatus }).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *string { return v.DefaultSim }).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *string { return v.Gps }).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *string { return v.PreferredCarrier }).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *string { return v.RedundantIntf }).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *string { return v.RedundantMode }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *string { return v.Sim1Pin }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *string { return v.Sim1PinCode }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *string { return v.Sim2Pin }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtenderprofileCellularModem2Output) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2) *string { return v.Sim2PinCode }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem2PtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularModem2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularModem2)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) ToExtendercontrollerExtenderprofileCellularModem2PtrOutput() ExtendercontrollerExtenderprofileCellularModem2PtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) ToExtendercontrollerExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2PtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) Elem() ExtendercontrollerExtenderprofileCellularModem2Output {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) ExtendercontrollerExtenderprofileCellularModem2 {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderprofileCellularModem2
		return ret
	}).(ExtendercontrollerExtenderprofileCellularModem2Output)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) AutoSwitch() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch {
		if v == nil {
			return nil
		}
		return v.AutoSwitch
	}).(ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *int {
		if v == nil {
			return nil
		}
		return v.ConnStatus
	}).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSim
	}).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Gps
	}).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.PreferredCarrier
	}).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.RedundantIntf
	}).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.RedundantMode
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim1Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim1PinCode
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim2Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtendercontrollerExtenderprofileCellularModem2PtrOutput) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim2PinCode
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem2AutoSwitch struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan *string `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect *string `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod *int `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal *string `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack *string `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime *string `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer *int `pulumi:"switchBackTimer"`
}

// ExtendercontrollerExtenderprofileCellularModem2AutoSwitchInput is an input type that accepts ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs and ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularModem2AutoSwitchInput` via:
//
//	ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs{...}
type ExtendercontrollerExtenderprofileCellularModem2AutoSwitchInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput
	ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput
}

type ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan pulumi.StringPtrInput `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect pulumi.StringPtrInput `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod pulumi.IntPtrInput `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold pulumi.IntPtrInput `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal pulumi.StringPtrInput `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack pulumi.StringPtrInput `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime pulumi.StringPtrInput `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer pulumi.IntPtrInput `pulumi:"switchBackTimer"`
}

func (ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput {
	return i.ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput)
}

func (i ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput).ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrInput is an input type that accepts ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs, ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtr and ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrInput` via:
//
//	        ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput
	ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput
}

type extendercontrollerExtenderprofileCellularModem2AutoSwitchPtrType ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs

func ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtr(v *ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs) ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrInput {
	return (*extendercontrollerExtenderprofileCellularModem2AutoSwitchPtrType)(v)
}

func (*extendercontrollerExtenderprofileCellularModem2AutoSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (i *extendercontrollerExtenderprofileCellularModem2AutoSwitchPtrType) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderprofileCellularModem2AutoSwitchPtrType) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch {
		return &v
	}).(ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *string { return v.Dataplan }).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *string { return v.Disconnect }).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *int { return v.DisconnectPeriod }).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *int { return v.DisconnectThreshold }).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *string { return v.Signal }).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *string { return v.SwitchBack }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *string { return v.SwitchBackTime }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *int { return v.SwitchBackTimer }).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) ToExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) Elem() ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) ExtendercontrollerExtenderprofileCellularModem2AutoSwitch {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderprofileCellularModem2AutoSwitch
		return ret
	}).(ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Dataplan
	}).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectPeriod
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectThreshold
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBack
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBackTime
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.SwitchBackTimer
	}).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularSmsNotification struct {
	// SMS alert list. The structure of `alert` block is documented below.
	Alert *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert `pulumi:"alert"`
	// SMS notification receiver list. The structure of `receiver` block is documented below.
	Receivers []ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver `pulumi:"receivers"`
	// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtendercontrollerExtenderprofileCellularSmsNotificationInput is an input type that accepts ExtendercontrollerExtenderprofileCellularSmsNotificationArgs and ExtendercontrollerExtenderprofileCellularSmsNotificationOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularSmsNotificationInput` via:
//
//	ExtendercontrollerExtenderprofileCellularSmsNotificationArgs{...}
type ExtendercontrollerExtenderprofileCellularSmsNotificationInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularSmsNotificationOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationOutput
	ToExtendercontrollerExtenderprofileCellularSmsNotificationOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationOutput
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationArgs struct {
	// SMS alert list. The structure of `alert` block is documented below.
	Alert ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrInput `pulumi:"alert"`
	// SMS notification receiver list. The structure of `receiver` block is documented below.
	Receivers ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayInput `pulumi:"receivers"`
	// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtendercontrollerExtenderprofileCellularSmsNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationArgs) ToExtendercontrollerExtenderprofileCellularSmsNotificationOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationOutput {
	return i.ToExtendercontrollerExtenderprofileCellularSmsNotificationOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationArgs) ToExtendercontrollerExtenderprofileCellularSmsNotificationOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularSmsNotificationOutput)
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationArgs) ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationArgs) ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularSmsNotificationOutput).ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderprofileCellularSmsNotificationPtrInput is an input type that accepts ExtendercontrollerExtenderprofileCellularSmsNotificationArgs, ExtendercontrollerExtenderprofileCellularSmsNotificationPtr and ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularSmsNotificationPtrInput` via:
//
//	        ExtendercontrollerExtenderprofileCellularSmsNotificationArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderprofileCellularSmsNotificationPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput
	ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput
}

type extendercontrollerExtenderprofileCellularSmsNotificationPtrType ExtendercontrollerExtenderprofileCellularSmsNotificationArgs

func ExtendercontrollerExtenderprofileCellularSmsNotificationPtr(v *ExtendercontrollerExtenderprofileCellularSmsNotificationArgs) ExtendercontrollerExtenderprofileCellularSmsNotificationPtrInput {
	return (*extendercontrollerExtenderprofileCellularSmsNotificationPtrType)(v)
}

func (*extendercontrollerExtenderprofileCellularSmsNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (i *extendercontrollerExtenderprofileCellularSmsNotificationPtrType) ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderprofileCellularSmsNotificationPtrType) ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularSmsNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderprofileCellularSmsNotification) *ExtendercontrollerExtenderprofileCellularSmsNotification {
		return &v
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput)
}

// SMS alert list. The structure of `alert` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationOutput) Alert() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotification) *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert {
		return v.Alert
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

// SMS notification receiver list. The structure of `receiver` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationOutput) Receivers() ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotification) []ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver {
		return v.Receivers
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput)
}

// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotification) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput) Elem() ExtendercontrollerExtenderprofileCellularSmsNotificationOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotification) ExtendercontrollerExtenderprofileCellularSmsNotification {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderprofileCellularSmsNotification
		return ret
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationOutput)
}

// SMS alert list. The structure of `alert` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput) Alert() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotification) *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert {
		if v == nil {
			return nil
		}
		return v.Alert
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

// SMS notification receiver list. The structure of `receiver` block is documented below.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput) Receivers() ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotification) []ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver {
		if v == nil {
			return nil
		}
		return v.Receivers
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput)
}

// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotification) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationAlert struct {
	// Display string when data exhausted.
	DataExhausted *string `pulumi:"dataExhausted"`
	// Display string when FortiGate backup mode switched.
	FgtBackupModeSwitch *string `pulumi:"fgtBackupModeSwitch"`
	// Display string when signal strength is low.
	LowSignalStrength *string `pulumi:"lowSignalStrength"`
	// Display string when mode is switched.
	ModeSwitch *string `pulumi:"modeSwitch"`
	// Display string when falling back to a previous OS image.
	OsImageFallback *string `pulumi:"osImageFallback"`
	// Display string when session disconnected.
	SessionDisconnect *string `pulumi:"sessionDisconnect"`
	// Display string when system rebooted.
	SystemReboot *string `pulumi:"systemReboot"`
}

// ExtendercontrollerExtenderprofileCellularSmsNotificationAlertInput is an input type that accepts ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs and ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularSmsNotificationAlertInput` via:
//
//	ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs{...}
type ExtendercontrollerExtenderprofileCellularSmsNotificationAlertInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput
	ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs struct {
	// Display string when data exhausted.
	DataExhausted pulumi.StringPtrInput `pulumi:"dataExhausted"`
	// Display string when FortiGate backup mode switched.
	FgtBackupModeSwitch pulumi.StringPtrInput `pulumi:"fgtBackupModeSwitch"`
	// Display string when signal strength is low.
	LowSignalStrength pulumi.StringPtrInput `pulumi:"lowSignalStrength"`
	// Display string when mode is switched.
	ModeSwitch pulumi.StringPtrInput `pulumi:"modeSwitch"`
	// Display string when falling back to a previous OS image.
	OsImageFallback pulumi.StringPtrInput `pulumi:"osImageFallback"`
	// Display string when session disconnected.
	SessionDisconnect pulumi.StringPtrInput `pulumi:"sessionDisconnect"`
	// Display string when system rebooted.
	SystemReboot pulumi.StringPtrInput `pulumi:"systemReboot"`
}

func (ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput {
	return i.ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput)
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput).ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrInput is an input type that accepts ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs, ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtr and ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrInput` via:
//
//	        ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput
	ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput
}

type extendercontrollerExtenderprofileCellularSmsNotificationAlertPtrType ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs

func ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtr(v *ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs) ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrInput {
	return (*extendercontrollerExtenderprofileCellularSmsNotificationAlertPtrType)(v)
}

func (*extendercontrollerExtenderprofileCellularSmsNotificationAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (i *extendercontrollerExtenderprofileCellularSmsNotificationAlertPtrType) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return i.ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderprofileCellularSmsNotificationAlertPtrType) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert {
		return &v
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

// Display string when data exhausted.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) DataExhausted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string { return v.DataExhausted }).(pulumi.StringPtrOutput)
}

// Display string when FortiGate backup mode switched.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) FgtBackupModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		return v.FgtBackupModeSwitch
	}).(pulumi.StringPtrOutput)
}

// Display string when signal strength is low.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) LowSignalStrength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		return v.LowSignalStrength
	}).(pulumi.StringPtrOutput)
}

// Display string when mode is switched.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) ModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string { return v.ModeSwitch }).(pulumi.StringPtrOutput)
}

// Display string when falling back to a previous OS image.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) OsImageFallback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		return v.OsImageFallback
	}).(pulumi.StringPtrOutput)
}

// Display string when session disconnected.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) SessionDisconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		return v.SessionDisconnect
	}).(pulumi.StringPtrOutput)
}

// Display string when system rebooted.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput) SystemReboot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string { return v.SystemReboot }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) Elem() ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) ExtendercontrollerExtenderprofileCellularSmsNotificationAlert {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderprofileCellularSmsNotificationAlert
		return ret
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput)
}

// Display string when data exhausted.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) DataExhausted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.DataExhausted
	}).(pulumi.StringPtrOutput)
}

// Display string when FortiGate backup mode switched.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) FgtBackupModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.FgtBackupModeSwitch
	}).(pulumi.StringPtrOutput)
}

// Display string when signal strength is low.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) LowSignalStrength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.LowSignalStrength
	}).(pulumi.StringPtrOutput)
}

// Display string when mode is switched.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) ModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.ModeSwitch
	}).(pulumi.StringPtrOutput)
}

// Display string when falling back to a previous OS image.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) OsImageFallback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.OsImageFallback
	}).(pulumi.StringPtrOutput)
}

// Display string when session disconnected.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) SessionDisconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.SessionDisconnect
	}).(pulumi.StringPtrOutput)
}

// Display string when system rebooted.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) SystemReboot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.SystemReboot
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver struct {
	// Alert multi-options. Valid values: `system-reboot`, `data-exhausted`, `session-disconnect`, `low-signal-strength`, `mode-switch`, `os-image-fallback`, `fgt-backup-mode-switch`.
	//
	// The `modem1` block supports:
	Alert *string `pulumi:"alert"`
	// FortiExtender SMS notification receiver name.
	Name *string `pulumi:"name"`
	// Receiver phone number.  Format: [+][country code][area code][local phone number].  For example: +16501234567.
	PhoneNumber *string `pulumi:"phoneNumber"`
	// SMS notification receiver status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverInput is an input type that accepts ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArgs and ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverInput` via:
//
//	ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArgs{...}
type ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput
	ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArgs struct {
	// Alert multi-options. Valid values: `system-reboot`, `data-exhausted`, `session-disconnect`, `low-signal-strength`, `mode-switch`, `os-image-fallback`, `fgt-backup-mode-switch`.
	//
	// The `modem1` block supports:
	Alert pulumi.StringPtrInput `pulumi:"alert"`
	// FortiExtender SMS notification receiver name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Receiver phone number.  Format: [+][country code][area code][local phone number].  For example: +16501234567.
	PhoneNumber pulumi.StringPtrInput `pulumi:"phoneNumber"`
	// SMS notification receiver status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArgs) ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput {
	return i.ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArgs) ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput)
}

// ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayInput is an input type that accepts ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArray and ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayInput` via:
//
//	ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArray{ ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArgs{...} }
type ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput
	ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArray []ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverInput

func (ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArray) ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return i.ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArray) ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput)
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput {
	return o
}

// Alert multi-options. Valid values: `system-reboot`, `data-exhausted`, `session-disconnect`, `low-signal-strength`, `mode-switch`, `os-image-fallback`, `fgt-backup-mode-switch`.
//
// The `modem1` block supports:
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput) Alert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver) *string { return v.Alert }).(pulumi.StringPtrOutput)
}

// FortiExtender SMS notification receiver name.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Receiver phone number.  Format: [+][country code][area code][local phone number].  For example: +16501234567.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver) *string { return v.PhoneNumber }).(pulumi.StringPtrOutput)
}

// SMS notification receiver status. Valid values: `disable`, `enable`.
func (o ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput() ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput) ToExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput) Index(i pulumi.IntInput) ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver {
		return vs[0].([]ExtendercontrollerExtenderprofileCellularSmsNotificationReceiver)[vs[1].(int)]
	}).(ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput)
}

type ExtendercontrollerExtenderprofileLanExtension struct {
	// IPsec phase1 interface.
	BackhaulInterface *string `pulumi:"backhaulInterface"`
	// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
	BackhaulIp *string `pulumi:"backhaulIp"`
	// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
	Backhauls []ExtendercontrollerExtenderprofileLanExtensionBackhaul `pulumi:"backhauls"`
	// IPsec tunnel name.
	IpsecTunnel *string `pulumi:"ipsecTunnel"`
	// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
	LinkLoadbalance *string `pulumi:"linkLoadbalance"`
}

// ExtendercontrollerExtenderprofileLanExtensionInput is an input type that accepts ExtendercontrollerExtenderprofileLanExtensionArgs and ExtendercontrollerExtenderprofileLanExtensionOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileLanExtensionInput` via:
//
//	ExtendercontrollerExtenderprofileLanExtensionArgs{...}
type ExtendercontrollerExtenderprofileLanExtensionInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileLanExtensionOutput() ExtendercontrollerExtenderprofileLanExtensionOutput
	ToExtendercontrollerExtenderprofileLanExtensionOutputWithContext(context.Context) ExtendercontrollerExtenderprofileLanExtensionOutput
}

type ExtendercontrollerExtenderprofileLanExtensionArgs struct {
	// IPsec phase1 interface.
	BackhaulInterface pulumi.StringPtrInput `pulumi:"backhaulInterface"`
	// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
	BackhaulIp pulumi.StringPtrInput `pulumi:"backhaulIp"`
	// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
	Backhauls ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayInput `pulumi:"backhauls"`
	// IPsec tunnel name.
	IpsecTunnel pulumi.StringPtrInput `pulumi:"ipsecTunnel"`
	// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
	LinkLoadbalance pulumi.StringPtrInput `pulumi:"linkLoadbalance"`
}

func (ExtendercontrollerExtenderprofileLanExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileLanExtension)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileLanExtensionArgs) ToExtendercontrollerExtenderprofileLanExtensionOutput() ExtendercontrollerExtenderprofileLanExtensionOutput {
	return i.ToExtendercontrollerExtenderprofileLanExtensionOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileLanExtensionArgs) ToExtendercontrollerExtenderprofileLanExtensionOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileLanExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileLanExtensionOutput)
}

func (i ExtendercontrollerExtenderprofileLanExtensionArgs) ToExtendercontrollerExtenderprofileLanExtensionPtrOutput() ExtendercontrollerExtenderprofileLanExtensionPtrOutput {
	return i.ToExtendercontrollerExtenderprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileLanExtensionArgs) ToExtendercontrollerExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileLanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileLanExtensionOutput).ToExtendercontrollerExtenderprofileLanExtensionPtrOutputWithContext(ctx)
}

// ExtendercontrollerExtenderprofileLanExtensionPtrInput is an input type that accepts ExtendercontrollerExtenderprofileLanExtensionArgs, ExtendercontrollerExtenderprofileLanExtensionPtr and ExtendercontrollerExtenderprofileLanExtensionPtrOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileLanExtensionPtrInput` via:
//
//	        ExtendercontrollerExtenderprofileLanExtensionArgs{...}
//
//	or:
//
//	        nil
type ExtendercontrollerExtenderprofileLanExtensionPtrInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileLanExtensionPtrOutput() ExtendercontrollerExtenderprofileLanExtensionPtrOutput
	ToExtendercontrollerExtenderprofileLanExtensionPtrOutputWithContext(context.Context) ExtendercontrollerExtenderprofileLanExtensionPtrOutput
}

type extendercontrollerExtenderprofileLanExtensionPtrType ExtendercontrollerExtenderprofileLanExtensionArgs

func ExtendercontrollerExtenderprofileLanExtensionPtr(v *ExtendercontrollerExtenderprofileLanExtensionArgs) ExtendercontrollerExtenderprofileLanExtensionPtrInput {
	return (*extendercontrollerExtenderprofileLanExtensionPtrType)(v)
}

func (*extendercontrollerExtenderprofileLanExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileLanExtension)(nil)).Elem()
}

func (i *extendercontrollerExtenderprofileLanExtensionPtrType) ToExtendercontrollerExtenderprofileLanExtensionPtrOutput() ExtendercontrollerExtenderprofileLanExtensionPtrOutput {
	return i.ToExtendercontrollerExtenderprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (i *extendercontrollerExtenderprofileLanExtensionPtrType) ToExtendercontrollerExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileLanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileLanExtensionPtrOutput)
}

type ExtendercontrollerExtenderprofileLanExtensionOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileLanExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileLanExtension)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileLanExtensionOutput) ToExtendercontrollerExtenderprofileLanExtensionOutput() ExtendercontrollerExtenderprofileLanExtensionOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileLanExtensionOutput) ToExtendercontrollerExtenderprofileLanExtensionOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileLanExtensionOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileLanExtensionOutput) ToExtendercontrollerExtenderprofileLanExtensionPtrOutput() ExtendercontrollerExtenderprofileLanExtensionPtrOutput {
	return o.ToExtendercontrollerExtenderprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (o ExtendercontrollerExtenderprofileLanExtensionOutput) ToExtendercontrollerExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileLanExtensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendercontrollerExtenderprofileLanExtension) *ExtendercontrollerExtenderprofileLanExtension {
		return &v
	}).(ExtendercontrollerExtenderprofileLanExtensionPtrOutput)
}

// IPsec phase1 interface.
func (o ExtendercontrollerExtenderprofileLanExtensionOutput) BackhaulInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileLanExtension) *string { return v.BackhaulInterface }).(pulumi.StringPtrOutput)
}

// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
func (o ExtendercontrollerExtenderprofileLanExtensionOutput) BackhaulIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileLanExtension) *string { return v.BackhaulIp }).(pulumi.StringPtrOutput)
}

// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
func (o ExtendercontrollerExtenderprofileLanExtensionOutput) Backhauls() ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileLanExtension) []ExtendercontrollerExtenderprofileLanExtensionBackhaul {
		return v.Backhauls
	}).(ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput)
}

// IPsec tunnel name.
func (o ExtendercontrollerExtenderprofileLanExtensionOutput) IpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileLanExtension) *string { return v.IpsecTunnel }).(pulumi.StringPtrOutput)
}

// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
func (o ExtendercontrollerExtenderprofileLanExtensionOutput) LinkLoadbalance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileLanExtension) *string { return v.LinkLoadbalance }).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileLanExtensionPtrOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileLanExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendercontrollerExtenderprofileLanExtension)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileLanExtensionPtrOutput) ToExtendercontrollerExtenderprofileLanExtensionPtrOutput() ExtendercontrollerExtenderprofileLanExtensionPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileLanExtensionPtrOutput) ToExtendercontrollerExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileLanExtensionPtrOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileLanExtensionPtrOutput) Elem() ExtendercontrollerExtenderprofileLanExtensionOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileLanExtension) ExtendercontrollerExtenderprofileLanExtension {
		if v != nil {
			return *v
		}
		var ret ExtendercontrollerExtenderprofileLanExtension
		return ret
	}).(ExtendercontrollerExtenderprofileLanExtensionOutput)
}

// IPsec phase1 interface.
func (o ExtendercontrollerExtenderprofileLanExtensionPtrOutput) BackhaulInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.BackhaulInterface
	}).(pulumi.StringPtrOutput)
}

// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
func (o ExtendercontrollerExtenderprofileLanExtensionPtrOutput) BackhaulIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.BackhaulIp
	}).(pulumi.StringPtrOutput)
}

// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
func (o ExtendercontrollerExtenderprofileLanExtensionPtrOutput) Backhauls() ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileLanExtension) []ExtendercontrollerExtenderprofileLanExtensionBackhaul {
		if v == nil {
			return nil
		}
		return v.Backhauls
	}).(ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput)
}

// IPsec tunnel name.
func (o ExtendercontrollerExtenderprofileLanExtensionPtrOutput) IpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.IpsecTunnel
	}).(pulumi.StringPtrOutput)
}

// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
func (o ExtendercontrollerExtenderprofileLanExtensionPtrOutput) LinkLoadbalance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendercontrollerExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.LinkLoadbalance
	}).(pulumi.StringPtrOutput)
}

type ExtendercontrollerExtenderprofileLanExtensionBackhaul struct {
	// FortiExtender LAN extension backhaul name
	Name *string `pulumi:"name"`
	// FortiExtender uplink port. Valid values: `wan`, `lte1`, `lte2`, `port1`, `port2`, `port3`, `port4`, `port5`, `sfp`.
	Port *string `pulumi:"port"`
	// FortiExtender uplink port. Valid values: `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// WRR weight parameter
	Weight *int `pulumi:"weight"`
}

// ExtendercontrollerExtenderprofileLanExtensionBackhaulInput is an input type that accepts ExtendercontrollerExtenderprofileLanExtensionBackhaulArgs and ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileLanExtensionBackhaulInput` via:
//
//	ExtendercontrollerExtenderprofileLanExtensionBackhaulArgs{...}
type ExtendercontrollerExtenderprofileLanExtensionBackhaulInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileLanExtensionBackhaulOutput() ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput
	ToExtendercontrollerExtenderprofileLanExtensionBackhaulOutputWithContext(context.Context) ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput
}

type ExtendercontrollerExtenderprofileLanExtensionBackhaulArgs struct {
	// FortiExtender LAN extension backhaul name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// FortiExtender uplink port. Valid values: `wan`, `lte1`, `lte2`, `port1`, `port2`, `port3`, `port4`, `port5`, `sfp`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// FortiExtender uplink port. Valid values: `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// WRR weight parameter
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ExtendercontrollerExtenderprofileLanExtensionBackhaulArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileLanExtensionBackhaulArgs) ToExtendercontrollerExtenderprofileLanExtensionBackhaulOutput() ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput {
	return i.ToExtendercontrollerExtenderprofileLanExtensionBackhaulOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileLanExtensionBackhaulArgs) ToExtendercontrollerExtenderprofileLanExtensionBackhaulOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput)
}

// ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayInput is an input type that accepts ExtendercontrollerExtenderprofileLanExtensionBackhaulArray and ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput values.
// You can construct a concrete instance of `ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayInput` via:
//
//	ExtendercontrollerExtenderprofileLanExtensionBackhaulArray{ ExtendercontrollerExtenderprofileLanExtensionBackhaulArgs{...} }
type ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayInput interface {
	pulumi.Input

	ToExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput() ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput
	ToExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutputWithContext(context.Context) ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput
}

type ExtendercontrollerExtenderprofileLanExtensionBackhaulArray []ExtendercontrollerExtenderprofileLanExtensionBackhaulInput

func (ExtendercontrollerExtenderprofileLanExtensionBackhaulArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtendercontrollerExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (i ExtendercontrollerExtenderprofileLanExtensionBackhaulArray) ToExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput() ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return i.ToExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutputWithContext(context.Background())
}

func (i ExtendercontrollerExtenderprofileLanExtensionBackhaulArray) ToExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput)
}

type ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendercontrollerExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput) ToExtendercontrollerExtenderprofileLanExtensionBackhaulOutput() ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput) ToExtendercontrollerExtenderprofileLanExtensionBackhaulOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput {
	return o
}

// FortiExtender LAN extension backhaul name
func (o ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileLanExtensionBackhaul) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// FortiExtender uplink port. Valid values: `wan`, `lte1`, `lte2`, `port1`, `port2`, `port3`, `port4`, `port5`, `sfp`.
func (o ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileLanExtensionBackhaul) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// FortiExtender uplink port. Valid values: `primary`, `secondary`.
func (o ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileLanExtensionBackhaul) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// WRR weight parameter
func (o ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtendercontrollerExtenderprofileLanExtensionBackhaul) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput struct{ *pulumi.OutputState }

func (ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtendercontrollerExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (o ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput) ToExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput() ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput) ToExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutputWithContext(ctx context.Context) ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return o
}

func (o ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput) Index(i pulumi.IntInput) ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtendercontrollerExtenderprofileLanExtensionBackhaul {
		return vs[0].([]ExtendercontrollerExtenderprofileLanExtensionBackhaul)[vs[1].(int)]
	}).(ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput)
}

type ExtensioncontrollerExtenderWanExtension struct {
	// FortiExtender interface name.
	Modem1Extension *string `pulumi:"modem1Extension"`
	// FortiExtender interface name.
	Modem2Extension *string `pulumi:"modem2Extension"`
}

// ExtensioncontrollerExtenderWanExtensionInput is an input type that accepts ExtensioncontrollerExtenderWanExtensionArgs and ExtensioncontrollerExtenderWanExtensionOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderWanExtensionInput` via:
//
//	ExtensioncontrollerExtenderWanExtensionArgs{...}
type ExtensioncontrollerExtenderWanExtensionInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderWanExtensionOutput() ExtensioncontrollerExtenderWanExtensionOutput
	ToExtensioncontrollerExtenderWanExtensionOutputWithContext(context.Context) ExtensioncontrollerExtenderWanExtensionOutput
}

type ExtensioncontrollerExtenderWanExtensionArgs struct {
	// FortiExtender interface name.
	Modem1Extension pulumi.StringPtrInput `pulumi:"modem1Extension"`
	// FortiExtender interface name.
	Modem2Extension pulumi.StringPtrInput `pulumi:"modem2Extension"`
}

func (ExtensioncontrollerExtenderWanExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderWanExtension)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderWanExtensionArgs) ToExtensioncontrollerExtenderWanExtensionOutput() ExtensioncontrollerExtenderWanExtensionOutput {
	return i.ToExtensioncontrollerExtenderWanExtensionOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderWanExtensionArgs) ToExtensioncontrollerExtenderWanExtensionOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderWanExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderWanExtensionOutput)
}

func (i ExtensioncontrollerExtenderWanExtensionArgs) ToExtensioncontrollerExtenderWanExtensionPtrOutput() ExtensioncontrollerExtenderWanExtensionPtrOutput {
	return i.ToExtensioncontrollerExtenderWanExtensionPtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderWanExtensionArgs) ToExtensioncontrollerExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderWanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderWanExtensionOutput).ToExtensioncontrollerExtenderWanExtensionPtrOutputWithContext(ctx)
}

// ExtensioncontrollerExtenderWanExtensionPtrInput is an input type that accepts ExtensioncontrollerExtenderWanExtensionArgs, ExtensioncontrollerExtenderWanExtensionPtr and ExtensioncontrollerExtenderWanExtensionPtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderWanExtensionPtrInput` via:
//
//	        ExtensioncontrollerExtenderWanExtensionArgs{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerExtenderWanExtensionPtrInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderWanExtensionPtrOutput() ExtensioncontrollerExtenderWanExtensionPtrOutput
	ToExtensioncontrollerExtenderWanExtensionPtrOutputWithContext(context.Context) ExtensioncontrollerExtenderWanExtensionPtrOutput
}

type extensioncontrollerExtenderWanExtensionPtrType ExtensioncontrollerExtenderWanExtensionArgs

func ExtensioncontrollerExtenderWanExtensionPtr(v *ExtensioncontrollerExtenderWanExtensionArgs) ExtensioncontrollerExtenderWanExtensionPtrInput {
	return (*extensioncontrollerExtenderWanExtensionPtrType)(v)
}

func (*extensioncontrollerExtenderWanExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderWanExtension)(nil)).Elem()
}

func (i *extensioncontrollerExtenderWanExtensionPtrType) ToExtensioncontrollerExtenderWanExtensionPtrOutput() ExtensioncontrollerExtenderWanExtensionPtrOutput {
	return i.ToExtensioncontrollerExtenderWanExtensionPtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerExtenderWanExtensionPtrType) ToExtensioncontrollerExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderWanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderWanExtensionPtrOutput)
}

type ExtensioncontrollerExtenderWanExtensionOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderWanExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderWanExtension)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderWanExtensionOutput) ToExtensioncontrollerExtenderWanExtensionOutput() ExtensioncontrollerExtenderWanExtensionOutput {
	return o
}

func (o ExtensioncontrollerExtenderWanExtensionOutput) ToExtensioncontrollerExtenderWanExtensionOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderWanExtensionOutput {
	return o
}

func (o ExtensioncontrollerExtenderWanExtensionOutput) ToExtensioncontrollerExtenderWanExtensionPtrOutput() ExtensioncontrollerExtenderWanExtensionPtrOutput {
	return o.ToExtensioncontrollerExtenderWanExtensionPtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerExtenderWanExtensionOutput) ToExtensioncontrollerExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderWanExtensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerExtenderWanExtension) *ExtensioncontrollerExtenderWanExtension {
		return &v
	}).(ExtensioncontrollerExtenderWanExtensionPtrOutput)
}

// FortiExtender interface name.
func (o ExtensioncontrollerExtenderWanExtensionOutput) Modem1Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderWanExtension) *string { return v.Modem1Extension }).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtensioncontrollerExtenderWanExtensionOutput) Modem2Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderWanExtension) *string { return v.Modem2Extension }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderWanExtensionPtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderWanExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderWanExtension)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderWanExtensionPtrOutput) ToExtensioncontrollerExtenderWanExtensionPtrOutput() ExtensioncontrollerExtenderWanExtensionPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderWanExtensionPtrOutput) ToExtensioncontrollerExtenderWanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderWanExtensionPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderWanExtensionPtrOutput) Elem() ExtensioncontrollerExtenderWanExtensionOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderWanExtension) ExtensioncontrollerExtenderWanExtension {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerExtenderWanExtension
		return ret
	}).(ExtensioncontrollerExtenderWanExtensionOutput)
}

// FortiExtender interface name.
func (o ExtensioncontrollerExtenderWanExtensionPtrOutput) Modem1Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderWanExtension) *string {
		if v == nil {
			return nil
		}
		return v.Modem1Extension
	}).(pulumi.StringPtrOutput)
}

// FortiExtender interface name.
func (o ExtensioncontrollerExtenderWanExtensionPtrOutput) Modem2Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderWanExtension) *string {
		if v == nil {
			return nil
		}
		return v.Modem2Extension
	}).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellular struct {
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport *ExtensioncontrollerExtenderprofileCellularControllerReport `pulumi:"controllerReport"`
	// Dataplan names. The structure of `dataplan` block is documented below.
	Dataplans []ExtensioncontrollerExtenderprofileCellularDataplan `pulumi:"dataplans"`
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 *ExtensioncontrollerExtenderprofileCellularModem1 `pulumi:"modem1"`
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 *ExtensioncontrollerExtenderprofileCellularModem2 `pulumi:"modem2"`
	// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
	SmsNotification *ExtensioncontrollerExtenderprofileCellularSmsNotification `pulumi:"smsNotification"`
}

// ExtensioncontrollerExtenderprofileCellularInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularArgs and ExtensioncontrollerExtenderprofileCellularOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularInput` via:
//
//	ExtensioncontrollerExtenderprofileCellularArgs{...}
type ExtensioncontrollerExtenderprofileCellularInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularOutput() ExtensioncontrollerExtenderprofileCellularOutput
	ToExtensioncontrollerExtenderprofileCellularOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularOutput
}

type ExtensioncontrollerExtenderprofileCellularArgs struct {
	// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
	ControllerReport ExtensioncontrollerExtenderprofileCellularControllerReportPtrInput `pulumi:"controllerReport"`
	// Dataplan names. The structure of `dataplan` block is documented below.
	Dataplans ExtensioncontrollerExtenderprofileCellularDataplanArrayInput `pulumi:"dataplans"`
	// Configuration options for modem 1. The structure of `modem1` block is documented below.
	Modem1 ExtensioncontrollerExtenderprofileCellularModem1PtrInput `pulumi:"modem1"`
	// Configuration options for modem 2. The structure of `modem2` block is documented below.
	Modem2 ExtensioncontrollerExtenderprofileCellularModem2PtrInput `pulumi:"modem2"`
	// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
	SmsNotification ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrInput `pulumi:"smsNotification"`
}

func (ExtensioncontrollerExtenderprofileCellularArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellular)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularArgs) ToExtensioncontrollerExtenderprofileCellularOutput() ExtensioncontrollerExtenderprofileCellularOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularArgs) ToExtensioncontrollerExtenderprofileCellularOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularOutput)
}

func (i ExtensioncontrollerExtenderprofileCellularArgs) ToExtensioncontrollerExtenderprofileCellularPtrOutput() ExtensioncontrollerExtenderprofileCellularPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularPtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularArgs) ToExtensioncontrollerExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularOutput).ToExtensioncontrollerExtenderprofileCellularPtrOutputWithContext(ctx)
}

// ExtensioncontrollerExtenderprofileCellularPtrInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularArgs, ExtensioncontrollerExtenderprofileCellularPtr and ExtensioncontrollerExtenderprofileCellularPtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularPtrInput` via:
//
//	        ExtensioncontrollerExtenderprofileCellularArgs{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerExtenderprofileCellularPtrInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularPtrOutput() ExtensioncontrollerExtenderprofileCellularPtrOutput
	ToExtensioncontrollerExtenderprofileCellularPtrOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularPtrOutput
}

type extensioncontrollerExtenderprofileCellularPtrType ExtensioncontrollerExtenderprofileCellularArgs

func ExtensioncontrollerExtenderprofileCellularPtr(v *ExtensioncontrollerExtenderprofileCellularArgs) ExtensioncontrollerExtenderprofileCellularPtrInput {
	return (*extensioncontrollerExtenderprofileCellularPtrType)(v)
}

func (*extensioncontrollerExtenderprofileCellularPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellular)(nil)).Elem()
}

func (i *extensioncontrollerExtenderprofileCellularPtrType) ToExtensioncontrollerExtenderprofileCellularPtrOutput() ExtensioncontrollerExtenderprofileCellularPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularPtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerExtenderprofileCellularPtrType) ToExtensioncontrollerExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellular)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularOutput) ToExtensioncontrollerExtenderprofileCellularOutput() ExtensioncontrollerExtenderprofileCellularOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularOutput) ToExtensioncontrollerExtenderprofileCellularOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularOutput) ToExtensioncontrollerExtenderprofileCellularPtrOutput() ExtensioncontrollerExtenderprofileCellularPtrOutput {
	return o.ToExtensioncontrollerExtenderprofileCellularPtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerExtenderprofileCellularOutput) ToExtensioncontrollerExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerExtenderprofileCellular) *ExtensioncontrollerExtenderprofileCellular {
		return &v
	}).(ExtensioncontrollerExtenderprofileCellularPtrOutput)
}

// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularOutput) ControllerReport() ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellular) *ExtensioncontrollerExtenderprofileCellularControllerReport {
		return v.ControllerReport
	}).(ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput)
}

// Dataplan names. The structure of `dataplan` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularOutput) Dataplans() ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellular) []ExtensioncontrollerExtenderprofileCellularDataplan {
		return v.Dataplans
	}).(ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput)
}

// Configuration options for modem 1. The structure of `modem1` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularOutput) Modem1() ExtensioncontrollerExtenderprofileCellularModem1PtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellular) *ExtensioncontrollerExtenderprofileCellularModem1 {
		return v.Modem1
	}).(ExtensioncontrollerExtenderprofileCellularModem1PtrOutput)
}

// Configuration options for modem 2. The structure of `modem2` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularOutput) Modem2() ExtensioncontrollerExtenderprofileCellularModem2PtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellular) *ExtensioncontrollerExtenderprofileCellularModem2 {
		return v.Modem2
	}).(ExtensioncontrollerExtenderprofileCellularModem2PtrOutput)
}

// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularOutput) SmsNotification() ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellular) *ExtensioncontrollerExtenderprofileCellularSmsNotification {
		return v.SmsNotification
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularPtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellular)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularPtrOutput) ToExtensioncontrollerExtenderprofileCellularPtrOutput() ExtensioncontrollerExtenderprofileCellularPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularPtrOutput) ToExtensioncontrollerExtenderprofileCellularPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularPtrOutput) Elem() ExtensioncontrollerExtenderprofileCellularOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellular) ExtensioncontrollerExtenderprofileCellular {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerExtenderprofileCellular
		return ret
	}).(ExtensioncontrollerExtenderprofileCellularOutput)
}

// FortiExtender controller report configuration. The structure of `controllerReport` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularPtrOutput) ControllerReport() ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellular) *ExtensioncontrollerExtenderprofileCellularControllerReport {
		if v == nil {
			return nil
		}
		return v.ControllerReport
	}).(ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput)
}

// Dataplan names. The structure of `dataplan` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularPtrOutput) Dataplans() ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellular) []ExtensioncontrollerExtenderprofileCellularDataplan {
		if v == nil {
			return nil
		}
		return v.Dataplans
	}).(ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput)
}

// Configuration options for modem 1. The structure of `modem1` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularPtrOutput) Modem1() ExtensioncontrollerExtenderprofileCellularModem1PtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellular) *ExtensioncontrollerExtenderprofileCellularModem1 {
		if v == nil {
			return nil
		}
		return v.Modem1
	}).(ExtensioncontrollerExtenderprofileCellularModem1PtrOutput)
}

// Configuration options for modem 2. The structure of `modem2` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularPtrOutput) Modem2() ExtensioncontrollerExtenderprofileCellularModem2PtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellular) *ExtensioncontrollerExtenderprofileCellularModem2 {
		if v == nil {
			return nil
		}
		return v.Modem2
	}).(ExtensioncontrollerExtenderprofileCellularModem2PtrOutput)
}

// FortiExtender cellular SMS notification configuration. The structure of `smsNotification` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularPtrOutput) SmsNotification() ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellular) *ExtensioncontrollerExtenderprofileCellularSmsNotification {
		if v == nil {
			return nil
		}
		return v.SmsNotification
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularControllerReport struct {
	// Controller report interval.
	Interval *int `pulumi:"interval"`
	// Controller report signal threshold.
	SignalThreshold *int `pulumi:"signalThreshold"`
	// FortiExtender controller report status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtensioncontrollerExtenderprofileCellularControllerReportInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularControllerReportArgs and ExtensioncontrollerExtenderprofileCellularControllerReportOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularControllerReportInput` via:
//
//	ExtensioncontrollerExtenderprofileCellularControllerReportArgs{...}
type ExtensioncontrollerExtenderprofileCellularControllerReportInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularControllerReportOutput() ExtensioncontrollerExtenderprofileCellularControllerReportOutput
	ToExtensioncontrollerExtenderprofileCellularControllerReportOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularControllerReportOutput
}

type ExtensioncontrollerExtenderprofileCellularControllerReportArgs struct {
	// Controller report interval.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Controller report signal threshold.
	SignalThreshold pulumi.IntPtrInput `pulumi:"signalThreshold"`
	// FortiExtender controller report status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtensioncontrollerExtenderprofileCellularControllerReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularControllerReportArgs) ToExtensioncontrollerExtenderprofileCellularControllerReportOutput() ExtensioncontrollerExtenderprofileCellularControllerReportOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularControllerReportOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularControllerReportArgs) ToExtensioncontrollerExtenderprofileCellularControllerReportOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularControllerReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularControllerReportOutput)
}

func (i ExtensioncontrollerExtenderprofileCellularControllerReportArgs) ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput() ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularControllerReportArgs) ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularControllerReportOutput).ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(ctx)
}

// ExtensioncontrollerExtenderprofileCellularControllerReportPtrInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularControllerReportArgs, ExtensioncontrollerExtenderprofileCellularControllerReportPtr and ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularControllerReportPtrInput` via:
//
//	        ExtensioncontrollerExtenderprofileCellularControllerReportArgs{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerExtenderprofileCellularControllerReportPtrInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput() ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput
	ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput
}

type extensioncontrollerExtenderprofileCellularControllerReportPtrType ExtensioncontrollerExtenderprofileCellularControllerReportArgs

func ExtensioncontrollerExtenderprofileCellularControllerReportPtr(v *ExtensioncontrollerExtenderprofileCellularControllerReportArgs) ExtensioncontrollerExtenderprofileCellularControllerReportPtrInput {
	return (*extensioncontrollerExtenderprofileCellularControllerReportPtrType)(v)
}

func (*extensioncontrollerExtenderprofileCellularControllerReportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (i *extensioncontrollerExtenderprofileCellularControllerReportPtrType) ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput() ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerExtenderprofileCellularControllerReportPtrType) ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularControllerReportOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularControllerReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularControllerReportOutput) ToExtensioncontrollerExtenderprofileCellularControllerReportOutput() ExtensioncontrollerExtenderprofileCellularControllerReportOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularControllerReportOutput) ToExtensioncontrollerExtenderprofileCellularControllerReportOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularControllerReportOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularControllerReportOutput) ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput() ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o.ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerExtenderprofileCellularControllerReportOutput) ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerExtenderprofileCellularControllerReport) *ExtensioncontrollerExtenderprofileCellularControllerReport {
		return &v
	}).(ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput)
}

// Controller report interval.
func (o ExtensioncontrollerExtenderprofileCellularControllerReportOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularControllerReport) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Controller report signal threshold.
func (o ExtensioncontrollerExtenderprofileCellularControllerReportOutput) SignalThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularControllerReport) *int { return v.SignalThreshold }).(pulumi.IntPtrOutput)
}

// FortiExtender controller report status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularControllerReportOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularControllerReport) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularControllerReport)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput) ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput() ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput) ToExtensioncontrollerExtenderprofileCellularControllerReportPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput) Elem() ExtensioncontrollerExtenderprofileCellularControllerReportOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularControllerReport) ExtensioncontrollerExtenderprofileCellularControllerReport {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerExtenderprofileCellularControllerReport
		return ret
	}).(ExtensioncontrollerExtenderprofileCellularControllerReportOutput)
}

// Controller report interval.
func (o ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularControllerReport) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Controller report signal threshold.
func (o ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput) SignalThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularControllerReport) *int {
		if v == nil {
			return nil
		}
		return v.SignalThreshold
	}).(pulumi.IntPtrOutput)
}

// FortiExtender controller report status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularControllerReport) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularDataplan struct {
	// Dataplan name.
	Name *string `pulumi:"name"`
}

// ExtensioncontrollerExtenderprofileCellularDataplanInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularDataplanArgs and ExtensioncontrollerExtenderprofileCellularDataplanOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularDataplanInput` via:
//
//	ExtensioncontrollerExtenderprofileCellularDataplanArgs{...}
type ExtensioncontrollerExtenderprofileCellularDataplanInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularDataplanOutput() ExtensioncontrollerExtenderprofileCellularDataplanOutput
	ToExtensioncontrollerExtenderprofileCellularDataplanOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularDataplanOutput
}

type ExtensioncontrollerExtenderprofileCellularDataplanArgs struct {
	// Dataplan name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExtensioncontrollerExtenderprofileCellularDataplanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularDataplan)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularDataplanArgs) ToExtensioncontrollerExtenderprofileCellularDataplanOutput() ExtensioncontrollerExtenderprofileCellularDataplanOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularDataplanOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularDataplanArgs) ToExtensioncontrollerExtenderprofileCellularDataplanOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularDataplanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularDataplanOutput)
}

// ExtensioncontrollerExtenderprofileCellularDataplanArrayInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularDataplanArray and ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularDataplanArrayInput` via:
//
//	ExtensioncontrollerExtenderprofileCellularDataplanArray{ ExtensioncontrollerExtenderprofileCellularDataplanArgs{...} }
type ExtensioncontrollerExtenderprofileCellularDataplanArrayInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularDataplanArrayOutput() ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput
	ToExtensioncontrollerExtenderprofileCellularDataplanArrayOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput
}

type ExtensioncontrollerExtenderprofileCellularDataplanArray []ExtensioncontrollerExtenderprofileCellularDataplanInput

func (ExtensioncontrollerExtenderprofileCellularDataplanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensioncontrollerExtenderprofileCellularDataplan)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularDataplanArray) ToExtensioncontrollerExtenderprofileCellularDataplanArrayOutput() ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularDataplanArrayOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularDataplanArray) ToExtensioncontrollerExtenderprofileCellularDataplanArrayOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput)
}

type ExtensioncontrollerExtenderprofileCellularDataplanOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularDataplanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularDataplan)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularDataplanOutput) ToExtensioncontrollerExtenderprofileCellularDataplanOutput() ExtensioncontrollerExtenderprofileCellularDataplanOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularDataplanOutput) ToExtensioncontrollerExtenderprofileCellularDataplanOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularDataplanOutput {
	return o
}

// Dataplan name.
func (o ExtensioncontrollerExtenderprofileCellularDataplanOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularDataplan) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensioncontrollerExtenderprofileCellularDataplan)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput) ToExtensioncontrollerExtenderprofileCellularDataplanArrayOutput() ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput) ToExtensioncontrollerExtenderprofileCellularDataplanArrayOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput) Index(i pulumi.IntInput) ExtensioncontrollerExtenderprofileCellularDataplanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensioncontrollerExtenderprofileCellularDataplan {
		return vs[0].([]ExtensioncontrollerExtenderprofileCellularDataplan)[vs[1].(int)]
	}).(ExtensioncontrollerExtenderprofileCellularDataplanOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem1 struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus *int `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim *string `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps *string `pulumi:"gps"`
	// Preferred carrier.
	PreferredCarrier *string `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf *string `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode *string `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin *string `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode *string `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin *string `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode *string `pulumi:"sim2PinCode"`
}

// ExtensioncontrollerExtenderprofileCellularModem1Input is an input type that accepts ExtensioncontrollerExtenderprofileCellularModem1Args and ExtensioncontrollerExtenderprofileCellularModem1Output values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularModem1Input` via:
//
//	ExtensioncontrollerExtenderprofileCellularModem1Args{...}
type ExtensioncontrollerExtenderprofileCellularModem1Input interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularModem1Output() ExtensioncontrollerExtenderprofileCellularModem1Output
	ToExtensioncontrollerExtenderprofileCellularModem1OutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularModem1Output
}

type ExtensioncontrollerExtenderprofileCellularModem1Args struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrInput `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus pulumi.IntPtrInput `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim pulumi.StringPtrInput `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps pulumi.StringPtrInput `pulumi:"gps"`
	// Preferred carrier.
	PreferredCarrier pulumi.StringPtrInput `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf pulumi.StringPtrInput `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode pulumi.StringPtrInput `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin pulumi.StringPtrInput `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode pulumi.StringPtrInput `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin pulumi.StringPtrInput `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode pulumi.StringPtrInput `pulumi:"sim2PinCode"`
}

func (ExtensioncontrollerExtenderprofileCellularModem1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem1)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularModem1Args) ToExtensioncontrollerExtenderprofileCellularModem1Output() ExtensioncontrollerExtenderprofileCellularModem1Output {
	return i.ToExtensioncontrollerExtenderprofileCellularModem1OutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularModem1Args) ToExtensioncontrollerExtenderprofileCellularModem1OutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem1Output)
}

func (i ExtensioncontrollerExtenderprofileCellularModem1Args) ToExtensioncontrollerExtenderprofileCellularModem1PtrOutput() ExtensioncontrollerExtenderprofileCellularModem1PtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularModem1PtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularModem1Args) ToExtensioncontrollerExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem1Output).ToExtensioncontrollerExtenderprofileCellularModem1PtrOutputWithContext(ctx)
}

// ExtensioncontrollerExtenderprofileCellularModem1PtrInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularModem1Args, ExtensioncontrollerExtenderprofileCellularModem1Ptr and ExtensioncontrollerExtenderprofileCellularModem1PtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularModem1PtrInput` via:
//
//	        ExtensioncontrollerExtenderprofileCellularModem1Args{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerExtenderprofileCellularModem1PtrInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularModem1PtrOutput() ExtensioncontrollerExtenderprofileCellularModem1PtrOutput
	ToExtensioncontrollerExtenderprofileCellularModem1PtrOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularModem1PtrOutput
}

type extensioncontrollerExtenderprofileCellularModem1PtrType ExtensioncontrollerExtenderprofileCellularModem1Args

func ExtensioncontrollerExtenderprofileCellularModem1Ptr(v *ExtensioncontrollerExtenderprofileCellularModem1Args) ExtensioncontrollerExtenderprofileCellularModem1PtrInput {
	return (*extensioncontrollerExtenderprofileCellularModem1PtrType)(v)
}

func (*extensioncontrollerExtenderprofileCellularModem1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularModem1)(nil)).Elem()
}

func (i *extensioncontrollerExtenderprofileCellularModem1PtrType) ToExtensioncontrollerExtenderprofileCellularModem1PtrOutput() ExtensioncontrollerExtenderprofileCellularModem1PtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularModem1PtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerExtenderprofileCellularModem1PtrType) ToExtensioncontrollerExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem1PtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem1Output struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularModem1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem1)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularModem1Output) ToExtensioncontrollerExtenderprofileCellularModem1Output() ExtensioncontrollerExtenderprofileCellularModem1Output {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem1Output) ToExtensioncontrollerExtenderprofileCellularModem1OutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1Output {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem1Output) ToExtensioncontrollerExtenderprofileCellularModem1PtrOutput() ExtensioncontrollerExtenderprofileCellularModem1PtrOutput {
	return o.ToExtensioncontrollerExtenderprofileCellularModem1PtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerExtenderprofileCellularModem1Output) ToExtensioncontrollerExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerExtenderprofileCellularModem1) *ExtensioncontrollerExtenderprofileCellularModem1 {
		return &v
	}).(ExtensioncontrollerExtenderprofileCellularModem1PtrOutput)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) AutoSwitch() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch {
		return v.AutoSwitch
	}).(ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *int { return v.ConnStatus }).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *string { return v.DefaultSim }).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *string { return v.Gps }).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *string { return v.PreferredCarrier }).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *string { return v.RedundantIntf }).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *string { return v.RedundantMode }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *string { return v.Sim1Pin }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *string { return v.Sim1PinCode }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *string { return v.Sim2Pin }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtensioncontrollerExtenderprofileCellularModem1Output) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1) *string { return v.Sim2PinCode }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem1PtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularModem1)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) ToExtensioncontrollerExtenderprofileCellularModem1PtrOutput() ExtensioncontrollerExtenderprofileCellularModem1PtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) ToExtensioncontrollerExtenderprofileCellularModem1PtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1PtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) Elem() ExtensioncontrollerExtenderprofileCellularModem1Output {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) ExtensioncontrollerExtenderprofileCellularModem1 {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerExtenderprofileCellularModem1
		return ret
	}).(ExtensioncontrollerExtenderprofileCellularModem1Output)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) AutoSwitch() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch {
		if v == nil {
			return nil
		}
		return v.AutoSwitch
	}).(ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *int {
		if v == nil {
			return nil
		}
		return v.ConnStatus
	}).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSim
	}).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Gps
	}).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.PreferredCarrier
	}).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.RedundantIntf
	}).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.RedundantMode
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim1Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim1PinCode
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim2Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtensioncontrollerExtenderprofileCellularModem1PtrOutput) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1) *string {
		if v == nil {
			return nil
		}
		return v.Sim2PinCode
	}).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan *string `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect *string `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod *int `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal *string `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack *string `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime *string `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer *int `pulumi:"switchBackTimer"`
}

// ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs and ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchInput` via:
//
//	ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs{...}
type ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput
	ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput
}

type ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan pulumi.StringPtrInput `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect pulumi.StringPtrInput `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod pulumi.IntPtrInput `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold pulumi.IntPtrInput `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal pulumi.StringPtrInput `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack pulumi.StringPtrInput `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime pulumi.StringPtrInput `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer pulumi.IntPtrInput `pulumi:"switchBackTimer"`
}

func (ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput)
}

func (i ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput).ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx)
}

// ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs, ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtr and ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrInput` via:
//
//	        ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput
	ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput
}

type extensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrType ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs

func ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtr(v *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs) ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrInput {
	return (*extensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrType)(v)
}

func (*extensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (i *extensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrType) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrType) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch {
		return &v
	}).(ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *string { return v.Dataplan }).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *string { return v.Disconnect }).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *int { return v.DisconnectPeriod }).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *int { return v.DisconnectThreshold }).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *string { return v.Signal }).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *string { return v.SwitchBack }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *string { return v.SwitchBackTime }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *int { return v.SwitchBackTimer }).(pulumi.IntPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) ToExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) Elem() ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch
		return ret
	}).(ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Dataplan
	}).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectPeriod
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectThreshold
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBack
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBackTime
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem1AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.SwitchBackTimer
	}).(pulumi.IntPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem2 struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus *int `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim *string `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps *string `pulumi:"gps"`
	// Preferred carrier.
	PreferredCarrier *string `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf *string `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode *string `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin *string `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode *string `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin *string `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode *string `pulumi:"sim2PinCode"`
}

// ExtensioncontrollerExtenderprofileCellularModem2Input is an input type that accepts ExtensioncontrollerExtenderprofileCellularModem2Args and ExtensioncontrollerExtenderprofileCellularModem2Output values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularModem2Input` via:
//
//	ExtensioncontrollerExtenderprofileCellularModem2Args{...}
type ExtensioncontrollerExtenderprofileCellularModem2Input interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularModem2Output() ExtensioncontrollerExtenderprofileCellularModem2Output
	ToExtensioncontrollerExtenderprofileCellularModem2OutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularModem2Output
}

type ExtensioncontrollerExtenderprofileCellularModem2Args struct {
	// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
	AutoSwitch ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrInput `pulumi:"autoSwitch"`
	// Connection status.
	ConnStatus pulumi.IntPtrInput `pulumi:"connStatus"`
	// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
	DefaultSim pulumi.StringPtrInput `pulumi:"defaultSim"`
	// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
	Gps pulumi.StringPtrInput `pulumi:"gps"`
	// Preferred carrier.
	PreferredCarrier pulumi.StringPtrInput `pulumi:"preferredCarrier"`
	// Redundant interface.
	RedundantIntf pulumi.StringPtrInput `pulumi:"redundantIntf"`
	// FortiExtender mode. Valid values: `disable`, `enable`.
	RedundantMode pulumi.StringPtrInput `pulumi:"redundantMode"`
	// SIM #1 PIN status. Valid values: `disable`, `enable`.
	Sim1Pin pulumi.StringPtrInput `pulumi:"sim1Pin"`
	// SIM #1 PIN password.
	Sim1PinCode pulumi.StringPtrInput `pulumi:"sim1PinCode"`
	// SIM #2 PIN status. Valid values: `disable`, `enable`.
	Sim2Pin pulumi.StringPtrInput `pulumi:"sim2Pin"`
	// SIM #2 PIN password.
	Sim2PinCode pulumi.StringPtrInput `pulumi:"sim2PinCode"`
}

func (ExtensioncontrollerExtenderprofileCellularModem2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem2)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularModem2Args) ToExtensioncontrollerExtenderprofileCellularModem2Output() ExtensioncontrollerExtenderprofileCellularModem2Output {
	return i.ToExtensioncontrollerExtenderprofileCellularModem2OutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularModem2Args) ToExtensioncontrollerExtenderprofileCellularModem2OutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem2Output)
}

func (i ExtensioncontrollerExtenderprofileCellularModem2Args) ToExtensioncontrollerExtenderprofileCellularModem2PtrOutput() ExtensioncontrollerExtenderprofileCellularModem2PtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularModem2PtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularModem2Args) ToExtensioncontrollerExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem2Output).ToExtensioncontrollerExtenderprofileCellularModem2PtrOutputWithContext(ctx)
}

// ExtensioncontrollerExtenderprofileCellularModem2PtrInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularModem2Args, ExtensioncontrollerExtenderprofileCellularModem2Ptr and ExtensioncontrollerExtenderprofileCellularModem2PtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularModem2PtrInput` via:
//
//	        ExtensioncontrollerExtenderprofileCellularModem2Args{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerExtenderprofileCellularModem2PtrInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularModem2PtrOutput() ExtensioncontrollerExtenderprofileCellularModem2PtrOutput
	ToExtensioncontrollerExtenderprofileCellularModem2PtrOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularModem2PtrOutput
}

type extensioncontrollerExtenderprofileCellularModem2PtrType ExtensioncontrollerExtenderprofileCellularModem2Args

func ExtensioncontrollerExtenderprofileCellularModem2Ptr(v *ExtensioncontrollerExtenderprofileCellularModem2Args) ExtensioncontrollerExtenderprofileCellularModem2PtrInput {
	return (*extensioncontrollerExtenderprofileCellularModem2PtrType)(v)
}

func (*extensioncontrollerExtenderprofileCellularModem2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularModem2)(nil)).Elem()
}

func (i *extensioncontrollerExtenderprofileCellularModem2PtrType) ToExtensioncontrollerExtenderprofileCellularModem2PtrOutput() ExtensioncontrollerExtenderprofileCellularModem2PtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularModem2PtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerExtenderprofileCellularModem2PtrType) ToExtensioncontrollerExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem2PtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem2Output struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularModem2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem2)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularModem2Output) ToExtensioncontrollerExtenderprofileCellularModem2Output() ExtensioncontrollerExtenderprofileCellularModem2Output {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem2Output) ToExtensioncontrollerExtenderprofileCellularModem2OutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2Output {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem2Output) ToExtensioncontrollerExtenderprofileCellularModem2PtrOutput() ExtensioncontrollerExtenderprofileCellularModem2PtrOutput {
	return o.ToExtensioncontrollerExtenderprofileCellularModem2PtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerExtenderprofileCellularModem2Output) ToExtensioncontrollerExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerExtenderprofileCellularModem2) *ExtensioncontrollerExtenderprofileCellularModem2 {
		return &v
	}).(ExtensioncontrollerExtenderprofileCellularModem2PtrOutput)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) AutoSwitch() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch {
		return v.AutoSwitch
	}).(ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *int { return v.ConnStatus }).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *string { return v.DefaultSim }).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *string { return v.Gps }).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *string { return v.PreferredCarrier }).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *string { return v.RedundantIntf }).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *string { return v.RedundantMode }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *string { return v.Sim1Pin }).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *string { return v.Sim1PinCode }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *string { return v.Sim2Pin }).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtensioncontrollerExtenderprofileCellularModem2Output) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2) *string { return v.Sim2PinCode }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem2PtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularModem2)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) ToExtensioncontrollerExtenderprofileCellularModem2PtrOutput() ExtensioncontrollerExtenderprofileCellularModem2PtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) ToExtensioncontrollerExtenderprofileCellularModem2PtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2PtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) Elem() ExtensioncontrollerExtenderprofileCellularModem2Output {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) ExtensioncontrollerExtenderprofileCellularModem2 {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerExtenderprofileCellularModem2
		return ret
	}).(ExtensioncontrollerExtenderprofileCellularModem2Output)
}

// FortiExtender auto switch configuration. The structure of `autoSwitch` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) AutoSwitch() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch {
		if v == nil {
			return nil
		}
		return v.AutoSwitch
	}).(ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

// Connection status.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) ConnStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *int {
		if v == nil {
			return nil
		}
		return v.ConnStatus
	}).(pulumi.IntPtrOutput)
}

// Default SIM selection. Valid values: `sim1`, `sim2`, `carrier`, `cost`.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) DefaultSim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSim
	}).(pulumi.StringPtrOutput)
}

// FortiExtender GPS enable/disable. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) Gps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Gps
	}).(pulumi.StringPtrOutput)
}

// Preferred carrier.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) PreferredCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.PreferredCarrier
	}).(pulumi.StringPtrOutput)
}

// Redundant interface.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) RedundantIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.RedundantIntf
	}).(pulumi.StringPtrOutput)
}

// FortiExtender mode. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) RedundantMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.RedundantMode
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) Sim1Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim1Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #1 PIN password.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) Sim1PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim1PinCode
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) Sim2Pin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim2Pin
	}).(pulumi.StringPtrOutput)
}

// SIM #2 PIN password.
func (o ExtensioncontrollerExtenderprofileCellularModem2PtrOutput) Sim2PinCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2) *string {
		if v == nil {
			return nil
		}
		return v.Sim2PinCode
	}).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan *string `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect *string `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod *int `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal *string `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack *string `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime *string `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer *int `pulumi:"switchBackTimer"`
}

// ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs and ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchInput` via:
//
//	ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs{...}
type ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput
	ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput
}

type ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs struct {
	// Automatically switch based on data usage. Valid values: `disable`, `enable`.
	Dataplan pulumi.StringPtrInput `pulumi:"dataplan"`
	// Auto switch by disconnect. Valid values: `disable`, `enable`.
	Disconnect pulumi.StringPtrInput `pulumi:"disconnect"`
	// Automatically switch based on disconnect period.
	DisconnectPeriod pulumi.IntPtrInput `pulumi:"disconnectPeriod"`
	// Automatically switch based on disconnect threshold.
	DisconnectThreshold pulumi.IntPtrInput `pulumi:"disconnectThreshold"`
	// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
	Signal pulumi.StringPtrInput `pulumi:"signal"`
	// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
	SwitchBack pulumi.StringPtrInput `pulumi:"switchBack"`
	// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
	SwitchBackTime pulumi.StringPtrInput `pulumi:"switchBackTime"`
	// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
	SwitchBackTimer pulumi.IntPtrInput `pulumi:"switchBackTimer"`
}

func (ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput)
}

func (i ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput).ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx)
}

// ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs, ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtr and ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrInput` via:
//
//	        ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput
	ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput
}

type extensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrType ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs

func ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtr(v *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs) ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrInput {
	return (*extensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrType)(v)
}

func (*extensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (i *extensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrType) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrType) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch {
		return &v
	}).(ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *string { return v.Dataplan }).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *string { return v.Disconnect }).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *int { return v.DisconnectPeriod }).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *int { return v.DisconnectThreshold }).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *string { return v.Signal }).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *string { return v.SwitchBack }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *string { return v.SwitchBackTime }).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *int { return v.SwitchBackTimer }).(pulumi.IntPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) ToExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) Elem() ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch
		return ret
	}).(ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput)
}

// Automatically switch based on data usage. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) Dataplan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Dataplan
	}).(pulumi.StringPtrOutput)
}

// Auto switch by disconnect. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) Disconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(pulumi.StringPtrOutput)
}

// Automatically switch based on disconnect period.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) DisconnectPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectPeriod
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on disconnect threshold.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) DisconnectThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectThreshold
	}).(pulumi.IntPtrOutput)
}

// Automatically switch based on signal strength. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) Signal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.StringPtrOutput)
}

// Auto switch with switch back multi-options. Valid values: `time`, `timer`.
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) SwitchBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBack
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier at a specified time in UTC (HH:MM).
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) SwitchBackTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *string {
		if v == nil {
			return nil
		}
		return v.SwitchBackTime
	}).(pulumi.StringPtrOutput)
}

// Automatically switch over to preferred SIM/carrier after the given time (3600 - 2147483647 sec).
func (o ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput) SwitchBackTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularModem2AutoSwitch) *int {
		if v == nil {
			return nil
		}
		return v.SwitchBackTimer
	}).(pulumi.IntPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularSmsNotification struct {
	// SMS alert list. The structure of `alert` block is documented below.
	Alert *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert `pulumi:"alert"`
	// SMS notification receiver list. The structure of `receiver` block is documented below.
	Receivers []ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver `pulumi:"receivers"`
	// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtensioncontrollerExtenderprofileCellularSmsNotificationInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs and ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularSmsNotificationInput` via:
//
//	ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs{...}
type ExtensioncontrollerExtenderprofileCellularSmsNotificationInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularSmsNotificationOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput
	ToExtensioncontrollerExtenderprofileCellularSmsNotificationOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs struct {
	// SMS alert list. The structure of `alert` block is documented below.
	Alert ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrInput `pulumi:"alert"`
	// SMS notification receiver list. The structure of `receiver` block is documented below.
	Receivers ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayInput `pulumi:"receivers"`
	// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs) ToExtensioncontrollerExtenderprofileCellularSmsNotificationOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularSmsNotificationOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs) ToExtensioncontrollerExtenderprofileCellularSmsNotificationOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput)
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs) ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs) ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput).ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx)
}

// ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs, ExtensioncontrollerExtenderprofileCellularSmsNotificationPtr and ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrInput` via:
//
//	        ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput
	ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput
}

type extensioncontrollerExtenderprofileCellularSmsNotificationPtrType ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs

func ExtensioncontrollerExtenderprofileCellularSmsNotificationPtr(v *ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs) ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrInput {
	return (*extensioncontrollerExtenderprofileCellularSmsNotificationPtrType)(v)
}

func (*extensioncontrollerExtenderprofileCellularSmsNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (i *extensioncontrollerExtenderprofileCellularSmsNotificationPtrType) ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerExtenderprofileCellularSmsNotificationPtrType) ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerExtenderprofileCellularSmsNotification) *ExtensioncontrollerExtenderprofileCellularSmsNotification {
		return &v
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput)
}

// SMS alert list. The structure of `alert` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput) Alert() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotification) *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert {
		return v.Alert
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

// SMS notification receiver list. The structure of `receiver` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput) Receivers() ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotification) []ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver {
		return v.Receivers
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput)
}

// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotification) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularSmsNotification)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput) Elem() ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotification) ExtensioncontrollerExtenderprofileCellularSmsNotification {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerExtenderprofileCellularSmsNotification
		return ret
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput)
}

// SMS alert list. The structure of `alert` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput) Alert() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotification) *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert {
		if v == nil {
			return nil
		}
		return v.Alert
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

// SMS notification receiver list. The structure of `receiver` block is documented below.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput) Receivers() ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotification) []ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver {
		if v == nil {
			return nil
		}
		return v.Receivers
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput)
}

// FortiExtender SMS notification status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotification) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert struct {
	// Display string when data exhausted.
	DataExhausted *string `pulumi:"dataExhausted"`
	// Display string when FortiGate backup mode switched.
	FgtBackupModeSwitch *string `pulumi:"fgtBackupModeSwitch"`
	// Display string when signal strength is low.
	LowSignalStrength *string `pulumi:"lowSignalStrength"`
	// Display string when mode is switched.
	ModeSwitch *string `pulumi:"modeSwitch"`
	// Display string when falling back to a previous OS image.
	OsImageFallback *string `pulumi:"osImageFallback"`
	// Display string when session disconnected.
	SessionDisconnect *string `pulumi:"sessionDisconnect"`
	// Display string when system rebooted.
	SystemReboot *string `pulumi:"systemReboot"`
}

// ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs and ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertInput` via:
//
//	ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs{...}
type ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput
	ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs struct {
	// Display string when data exhausted.
	DataExhausted pulumi.StringPtrInput `pulumi:"dataExhausted"`
	// Display string when FortiGate backup mode switched.
	FgtBackupModeSwitch pulumi.StringPtrInput `pulumi:"fgtBackupModeSwitch"`
	// Display string when signal strength is low.
	LowSignalStrength pulumi.StringPtrInput `pulumi:"lowSignalStrength"`
	// Display string when mode is switched.
	ModeSwitch pulumi.StringPtrInput `pulumi:"modeSwitch"`
	// Display string when falling back to a previous OS image.
	OsImageFallback pulumi.StringPtrInput `pulumi:"osImageFallback"`
	// Display string when session disconnected.
	SessionDisconnect pulumi.StringPtrInput `pulumi:"sessionDisconnect"`
	// Display string when system rebooted.
	SystemReboot pulumi.StringPtrInput `pulumi:"systemReboot"`
}

func (ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput)
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput).ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx)
}

// ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs, ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtr and ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrInput` via:
//
//	        ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput
	ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput
}

type extensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrType ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs

func ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtr(v *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs) ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrInput {
	return (*extensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrType)(v)
}

func (*extensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (i *extensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrType) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrType) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert {
		return &v
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput)
}

// Display string when data exhausted.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) DataExhausted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string { return v.DataExhausted }).(pulumi.StringPtrOutput)
}

// Display string when FortiGate backup mode switched.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) FgtBackupModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		return v.FgtBackupModeSwitch
	}).(pulumi.StringPtrOutput)
}

// Display string when signal strength is low.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) LowSignalStrength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		return v.LowSignalStrength
	}).(pulumi.StringPtrOutput)
}

// Display string when mode is switched.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) ModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string { return v.ModeSwitch }).(pulumi.StringPtrOutput)
}

// Display string when falling back to a previous OS image.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) OsImageFallback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		return v.OsImageFallback
	}).(pulumi.StringPtrOutput)
}

// Display string when session disconnected.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) SessionDisconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		return v.SessionDisconnect
	}).(pulumi.StringPtrOutput)
}

// Display string when system rebooted.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput) SystemReboot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string { return v.SystemReboot }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) Elem() ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert
		return ret
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput)
}

// Display string when data exhausted.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) DataExhausted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.DataExhausted
	}).(pulumi.StringPtrOutput)
}

// Display string when FortiGate backup mode switched.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) FgtBackupModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.FgtBackupModeSwitch
	}).(pulumi.StringPtrOutput)
}

// Display string when signal strength is low.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) LowSignalStrength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.LowSignalStrength
	}).(pulumi.StringPtrOutput)
}

// Display string when mode is switched.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) ModeSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.ModeSwitch
	}).(pulumi.StringPtrOutput)
}

// Display string when falling back to a previous OS image.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) OsImageFallback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.OsImageFallback
	}).(pulumi.StringPtrOutput)
}

// Display string when session disconnected.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) SessionDisconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.SessionDisconnect
	}).(pulumi.StringPtrOutput)
}

// Display string when system rebooted.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput) SystemReboot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileCellularSmsNotificationAlert) *string {
		if v == nil {
			return nil
		}
		return v.SystemReboot
	}).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver struct {
	// Alert multi-options. Valid values: `system-reboot`, `data-exhausted`, `session-disconnect`, `low-signal-strength`, `mode-switch`, `os-image-fallback`, `fgt-backup-mode-switch`.
	//
	// The `modem1` block supports:
	Alert *string `pulumi:"alert"`
	// FortiExtender SMS notification receiver name.
	Name *string `pulumi:"name"`
	// Receiver phone number. Format: [+][country code][area code][local phone number]. For example, +16501234567.
	PhoneNumber *string `pulumi:"phoneNumber"`
	// SMS notification receiver status. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArgs and ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverInput` via:
//
//	ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArgs{...}
type ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput
	ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArgs struct {
	// Alert multi-options. Valid values: `system-reboot`, `data-exhausted`, `session-disconnect`, `low-signal-strength`, `mode-switch`, `os-image-fallback`, `fgt-backup-mode-switch`.
	//
	// The `modem1` block supports:
	Alert pulumi.StringPtrInput `pulumi:"alert"`
	// FortiExtender SMS notification receiver name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Receiver phone number. Format: [+][country code][area code][local phone number]. For example, +16501234567.
	PhoneNumber pulumi.StringPtrInput `pulumi:"phoneNumber"`
	// SMS notification receiver status. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArgs) ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArgs) ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput)
}

// ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayInput is an input type that accepts ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArray and ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayInput` via:
//
//	ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArray{ ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArgs{...} }
type ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput
	ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArray []ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverInput

func (ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArray) ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return i.ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArray) ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput)
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput {
	return o
}

// Alert multi-options. Valid values: `system-reboot`, `data-exhausted`, `session-disconnect`, `low-signal-strength`, `mode-switch`, `os-image-fallback`, `fgt-backup-mode-switch`.
//
// The `modem1` block supports:
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput) Alert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver) *string { return v.Alert }).(pulumi.StringPtrOutput)
}

// FortiExtender SMS notification receiver name.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Receiver phone number. Format: [+][country code][area code][local phone number]. For example, +16501234567.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver) *string {
		return v.PhoneNumber
	}).(pulumi.StringPtrOutput)
}

// SMS notification receiver status. Valid values: `disable`, `enable`.
func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput() ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput) ToExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput) Index(i pulumi.IntInput) ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver {
		return vs[0].([]ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiver)[vs[1].(int)]
	}).(ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput)
}

type ExtensioncontrollerExtenderprofileLanExtension struct {
	// IPsec phase1 interface.
	BackhaulInterface *string `pulumi:"backhaulInterface"`
	// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
	BackhaulIp *string `pulumi:"backhaulIp"`
	// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
	Backhauls []ExtensioncontrollerExtenderprofileLanExtensionBackhaul `pulumi:"backhauls"`
	// IPsec tunnel name.
	IpsecTunnel *string `pulumi:"ipsecTunnel"`
	// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
	LinkLoadbalance *string `pulumi:"linkLoadbalance"`
}

// ExtensioncontrollerExtenderprofileLanExtensionInput is an input type that accepts ExtensioncontrollerExtenderprofileLanExtensionArgs and ExtensioncontrollerExtenderprofileLanExtensionOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileLanExtensionInput` via:
//
//	ExtensioncontrollerExtenderprofileLanExtensionArgs{...}
type ExtensioncontrollerExtenderprofileLanExtensionInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileLanExtensionOutput() ExtensioncontrollerExtenderprofileLanExtensionOutput
	ToExtensioncontrollerExtenderprofileLanExtensionOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileLanExtensionOutput
}

type ExtensioncontrollerExtenderprofileLanExtensionArgs struct {
	// IPsec phase1 interface.
	BackhaulInterface pulumi.StringPtrInput `pulumi:"backhaulInterface"`
	// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
	BackhaulIp pulumi.StringPtrInput `pulumi:"backhaulIp"`
	// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
	Backhauls ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayInput `pulumi:"backhauls"`
	// IPsec tunnel name.
	IpsecTunnel pulumi.StringPtrInput `pulumi:"ipsecTunnel"`
	// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
	LinkLoadbalance pulumi.StringPtrInput `pulumi:"linkLoadbalance"`
}

func (ExtensioncontrollerExtenderprofileLanExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileLanExtension)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileLanExtensionArgs) ToExtensioncontrollerExtenderprofileLanExtensionOutput() ExtensioncontrollerExtenderprofileLanExtensionOutput {
	return i.ToExtensioncontrollerExtenderprofileLanExtensionOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileLanExtensionArgs) ToExtensioncontrollerExtenderprofileLanExtensionOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileLanExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileLanExtensionOutput)
}

func (i ExtensioncontrollerExtenderprofileLanExtensionArgs) ToExtensioncontrollerExtenderprofileLanExtensionPtrOutput() ExtensioncontrollerExtenderprofileLanExtensionPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileLanExtensionArgs) ToExtensioncontrollerExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileLanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileLanExtensionOutput).ToExtensioncontrollerExtenderprofileLanExtensionPtrOutputWithContext(ctx)
}

// ExtensioncontrollerExtenderprofileLanExtensionPtrInput is an input type that accepts ExtensioncontrollerExtenderprofileLanExtensionArgs, ExtensioncontrollerExtenderprofileLanExtensionPtr and ExtensioncontrollerExtenderprofileLanExtensionPtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileLanExtensionPtrInput` via:
//
//	        ExtensioncontrollerExtenderprofileLanExtensionArgs{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerExtenderprofileLanExtensionPtrInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileLanExtensionPtrOutput() ExtensioncontrollerExtenderprofileLanExtensionPtrOutput
	ToExtensioncontrollerExtenderprofileLanExtensionPtrOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileLanExtensionPtrOutput
}

type extensioncontrollerExtenderprofileLanExtensionPtrType ExtensioncontrollerExtenderprofileLanExtensionArgs

func ExtensioncontrollerExtenderprofileLanExtensionPtr(v *ExtensioncontrollerExtenderprofileLanExtensionArgs) ExtensioncontrollerExtenderprofileLanExtensionPtrInput {
	return (*extensioncontrollerExtenderprofileLanExtensionPtrType)(v)
}

func (*extensioncontrollerExtenderprofileLanExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileLanExtension)(nil)).Elem()
}

func (i *extensioncontrollerExtenderprofileLanExtensionPtrType) ToExtensioncontrollerExtenderprofileLanExtensionPtrOutput() ExtensioncontrollerExtenderprofileLanExtensionPtrOutput {
	return i.ToExtensioncontrollerExtenderprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerExtenderprofileLanExtensionPtrType) ToExtensioncontrollerExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileLanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileLanExtensionPtrOutput)
}

type ExtensioncontrollerExtenderprofileLanExtensionOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileLanExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileLanExtension)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileLanExtensionOutput) ToExtensioncontrollerExtenderprofileLanExtensionOutput() ExtensioncontrollerExtenderprofileLanExtensionOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileLanExtensionOutput) ToExtensioncontrollerExtenderprofileLanExtensionOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileLanExtensionOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileLanExtensionOutput) ToExtensioncontrollerExtenderprofileLanExtensionPtrOutput() ExtensioncontrollerExtenderprofileLanExtensionPtrOutput {
	return o.ToExtensioncontrollerExtenderprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerExtenderprofileLanExtensionOutput) ToExtensioncontrollerExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileLanExtensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerExtenderprofileLanExtension) *ExtensioncontrollerExtenderprofileLanExtension {
		return &v
	}).(ExtensioncontrollerExtenderprofileLanExtensionPtrOutput)
}

// IPsec phase1 interface.
func (o ExtensioncontrollerExtenderprofileLanExtensionOutput) BackhaulInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileLanExtension) *string { return v.BackhaulInterface }).(pulumi.StringPtrOutput)
}

// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
func (o ExtensioncontrollerExtenderprofileLanExtensionOutput) BackhaulIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileLanExtension) *string { return v.BackhaulIp }).(pulumi.StringPtrOutput)
}

// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
func (o ExtensioncontrollerExtenderprofileLanExtensionOutput) Backhauls() ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileLanExtension) []ExtensioncontrollerExtenderprofileLanExtensionBackhaul {
		return v.Backhauls
	}).(ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput)
}

// IPsec tunnel name.
func (o ExtensioncontrollerExtenderprofileLanExtensionOutput) IpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileLanExtension) *string { return v.IpsecTunnel }).(pulumi.StringPtrOutput)
}

// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
func (o ExtensioncontrollerExtenderprofileLanExtensionOutput) LinkLoadbalance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileLanExtension) *string { return v.LinkLoadbalance }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileLanExtensionPtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileLanExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerExtenderprofileLanExtension)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileLanExtensionPtrOutput) ToExtensioncontrollerExtenderprofileLanExtensionPtrOutput() ExtensioncontrollerExtenderprofileLanExtensionPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileLanExtensionPtrOutput) ToExtensioncontrollerExtenderprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileLanExtensionPtrOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileLanExtensionPtrOutput) Elem() ExtensioncontrollerExtenderprofileLanExtensionOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileLanExtension) ExtensioncontrollerExtenderprofileLanExtension {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerExtenderprofileLanExtension
		return ret
	}).(ExtensioncontrollerExtenderprofileLanExtensionOutput)
}

// IPsec phase1 interface.
func (o ExtensioncontrollerExtenderprofileLanExtensionPtrOutput) BackhaulInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.BackhaulInterface
	}).(pulumi.StringPtrOutput)
}

// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
func (o ExtensioncontrollerExtenderprofileLanExtensionPtrOutput) BackhaulIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.BackhaulIp
	}).(pulumi.StringPtrOutput)
}

// LAN extension backhaul tunnel configuration. The structure of `backhaul` block is documented below.
func (o ExtensioncontrollerExtenderprofileLanExtensionPtrOutput) Backhauls() ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileLanExtension) []ExtensioncontrollerExtenderprofileLanExtensionBackhaul {
		if v == nil {
			return nil
		}
		return v.Backhauls
	}).(ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput)
}

// IPsec tunnel name.
func (o ExtensioncontrollerExtenderprofileLanExtensionPtrOutput) IpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.IpsecTunnel
	}).(pulumi.StringPtrOutput)
}

// LAN extension link load balance strategy. Valid values: `activebackup`, `loadbalance`.
func (o ExtensioncontrollerExtenderprofileLanExtensionPtrOutput) LinkLoadbalance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerExtenderprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.LinkLoadbalance
	}).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerExtenderprofileLanExtensionBackhaul struct {
	// FortiExtender LAN extension backhaul name.
	Name *string `pulumi:"name"`
	// FortiExtender uplink port. Valid values: `wan`, `lte1`, `lte2`, `port1`, `port2`, `port3`, `port4`, `port5`, `sfp`.
	Port *string `pulumi:"port"`
	// FortiExtender uplink port. Valid values: `primary`, `secondary`.
	Role *string `pulumi:"role"`
	// WRR weight parameter.
	Weight *int `pulumi:"weight"`
}

// ExtensioncontrollerExtenderprofileLanExtensionBackhaulInput is an input type that accepts ExtensioncontrollerExtenderprofileLanExtensionBackhaulArgs and ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileLanExtensionBackhaulInput` via:
//
//	ExtensioncontrollerExtenderprofileLanExtensionBackhaulArgs{...}
type ExtensioncontrollerExtenderprofileLanExtensionBackhaulInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput() ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput
	ToExtensioncontrollerExtenderprofileLanExtensionBackhaulOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput
}

type ExtensioncontrollerExtenderprofileLanExtensionBackhaulArgs struct {
	// FortiExtender LAN extension backhaul name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// FortiExtender uplink port. Valid values: `wan`, `lte1`, `lte2`, `port1`, `port2`, `port3`, `port4`, `port5`, `sfp`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// FortiExtender uplink port. Valid values: `primary`, `secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// WRR weight parameter.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ExtensioncontrollerExtenderprofileLanExtensionBackhaulArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileLanExtensionBackhaulArgs) ToExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput() ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput {
	return i.ToExtensioncontrollerExtenderprofileLanExtensionBackhaulOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileLanExtensionBackhaulArgs) ToExtensioncontrollerExtenderprofileLanExtensionBackhaulOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput)
}

// ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayInput is an input type that accepts ExtensioncontrollerExtenderprofileLanExtensionBackhaulArray and ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput values.
// You can construct a concrete instance of `ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayInput` via:
//
//	ExtensioncontrollerExtenderprofileLanExtensionBackhaulArray{ ExtensioncontrollerExtenderprofileLanExtensionBackhaulArgs{...} }
type ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayInput interface {
	pulumi.Input

	ToExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput() ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput
	ToExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutputWithContext(context.Context) ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput
}

type ExtensioncontrollerExtenderprofileLanExtensionBackhaulArray []ExtensioncontrollerExtenderprofileLanExtensionBackhaulInput

func (ExtensioncontrollerExtenderprofileLanExtensionBackhaulArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensioncontrollerExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (i ExtensioncontrollerExtenderprofileLanExtensionBackhaulArray) ToExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput() ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return i.ToExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutputWithContext(context.Background())
}

func (i ExtensioncontrollerExtenderprofileLanExtensionBackhaulArray) ToExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput)
}

type ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput) ToExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput() ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput) ToExtensioncontrollerExtenderprofileLanExtensionBackhaulOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput {
	return o
}

// FortiExtender LAN extension backhaul name.
func (o ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileLanExtensionBackhaul) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// FortiExtender uplink port. Valid values: `wan`, `lte1`, `lte2`, `port1`, `port2`, `port3`, `port4`, `port5`, `sfp`.
func (o ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileLanExtensionBackhaul) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// FortiExtender uplink port. Valid values: `primary`, `secondary`.
func (o ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileLanExtensionBackhaul) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// WRR weight parameter.
func (o ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerExtenderprofileLanExtensionBackhaul) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensioncontrollerExtenderprofileLanExtensionBackhaul)(nil)).Elem()
}

func (o ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput) ToExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput() ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput) ToExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutputWithContext(ctx context.Context) ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput {
	return o
}

func (o ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput) Index(i pulumi.IntInput) ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensioncontrollerExtenderprofileLanExtensionBackhaul {
		return vs[0].([]ExtensioncontrollerExtenderprofileLanExtensionBackhaul)[vs[1].(int)]
	}).(ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput)
}

type ExtensioncontrollerFortigateprofileLanExtension struct {
	// IPsec phase1 interface.
	BackhaulInterface *string `pulumi:"backhaulInterface"`
	// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
	BackhaulIp *string `pulumi:"backhaulIp"`
	// IPsec tunnel name.
	IpsecTunnel *string `pulumi:"ipsecTunnel"`
}

// ExtensioncontrollerFortigateprofileLanExtensionInput is an input type that accepts ExtensioncontrollerFortigateprofileLanExtensionArgs and ExtensioncontrollerFortigateprofileLanExtensionOutput values.
// You can construct a concrete instance of `ExtensioncontrollerFortigateprofileLanExtensionInput` via:
//
//	ExtensioncontrollerFortigateprofileLanExtensionArgs{...}
type ExtensioncontrollerFortigateprofileLanExtensionInput interface {
	pulumi.Input

	ToExtensioncontrollerFortigateprofileLanExtensionOutput() ExtensioncontrollerFortigateprofileLanExtensionOutput
	ToExtensioncontrollerFortigateprofileLanExtensionOutputWithContext(context.Context) ExtensioncontrollerFortigateprofileLanExtensionOutput
}

type ExtensioncontrollerFortigateprofileLanExtensionArgs struct {
	// IPsec phase1 interface.
	BackhaulInterface pulumi.StringPtrInput `pulumi:"backhaulInterface"`
	// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
	BackhaulIp pulumi.StringPtrInput `pulumi:"backhaulIp"`
	// IPsec tunnel name.
	IpsecTunnel pulumi.StringPtrInput `pulumi:"ipsecTunnel"`
}

func (ExtensioncontrollerFortigateprofileLanExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerFortigateprofileLanExtension)(nil)).Elem()
}

func (i ExtensioncontrollerFortigateprofileLanExtensionArgs) ToExtensioncontrollerFortigateprofileLanExtensionOutput() ExtensioncontrollerFortigateprofileLanExtensionOutput {
	return i.ToExtensioncontrollerFortigateprofileLanExtensionOutputWithContext(context.Background())
}

func (i ExtensioncontrollerFortigateprofileLanExtensionArgs) ToExtensioncontrollerFortigateprofileLanExtensionOutputWithContext(ctx context.Context) ExtensioncontrollerFortigateprofileLanExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerFortigateprofileLanExtensionOutput)
}

func (i ExtensioncontrollerFortigateprofileLanExtensionArgs) ToExtensioncontrollerFortigateprofileLanExtensionPtrOutput() ExtensioncontrollerFortigateprofileLanExtensionPtrOutput {
	return i.ToExtensioncontrollerFortigateprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (i ExtensioncontrollerFortigateprofileLanExtensionArgs) ToExtensioncontrollerFortigateprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerFortigateprofileLanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerFortigateprofileLanExtensionOutput).ToExtensioncontrollerFortigateprofileLanExtensionPtrOutputWithContext(ctx)
}

// ExtensioncontrollerFortigateprofileLanExtensionPtrInput is an input type that accepts ExtensioncontrollerFortigateprofileLanExtensionArgs, ExtensioncontrollerFortigateprofileLanExtensionPtr and ExtensioncontrollerFortigateprofileLanExtensionPtrOutput values.
// You can construct a concrete instance of `ExtensioncontrollerFortigateprofileLanExtensionPtrInput` via:
//
//	        ExtensioncontrollerFortigateprofileLanExtensionArgs{...}
//
//	or:
//
//	        nil
type ExtensioncontrollerFortigateprofileLanExtensionPtrInput interface {
	pulumi.Input

	ToExtensioncontrollerFortigateprofileLanExtensionPtrOutput() ExtensioncontrollerFortigateprofileLanExtensionPtrOutput
	ToExtensioncontrollerFortigateprofileLanExtensionPtrOutputWithContext(context.Context) ExtensioncontrollerFortigateprofileLanExtensionPtrOutput
}

type extensioncontrollerFortigateprofileLanExtensionPtrType ExtensioncontrollerFortigateprofileLanExtensionArgs

func ExtensioncontrollerFortigateprofileLanExtensionPtr(v *ExtensioncontrollerFortigateprofileLanExtensionArgs) ExtensioncontrollerFortigateprofileLanExtensionPtrInput {
	return (*extensioncontrollerFortigateprofileLanExtensionPtrType)(v)
}

func (*extensioncontrollerFortigateprofileLanExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerFortigateprofileLanExtension)(nil)).Elem()
}

func (i *extensioncontrollerFortigateprofileLanExtensionPtrType) ToExtensioncontrollerFortigateprofileLanExtensionPtrOutput() ExtensioncontrollerFortigateprofileLanExtensionPtrOutput {
	return i.ToExtensioncontrollerFortigateprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (i *extensioncontrollerFortigateprofileLanExtensionPtrType) ToExtensioncontrollerFortigateprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerFortigateprofileLanExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensioncontrollerFortigateprofileLanExtensionPtrOutput)
}

type ExtensioncontrollerFortigateprofileLanExtensionOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerFortigateprofileLanExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensioncontrollerFortigateprofileLanExtension)(nil)).Elem()
}

func (o ExtensioncontrollerFortigateprofileLanExtensionOutput) ToExtensioncontrollerFortigateprofileLanExtensionOutput() ExtensioncontrollerFortigateprofileLanExtensionOutput {
	return o
}

func (o ExtensioncontrollerFortigateprofileLanExtensionOutput) ToExtensioncontrollerFortigateprofileLanExtensionOutputWithContext(ctx context.Context) ExtensioncontrollerFortigateprofileLanExtensionOutput {
	return o
}

func (o ExtensioncontrollerFortigateprofileLanExtensionOutput) ToExtensioncontrollerFortigateprofileLanExtensionPtrOutput() ExtensioncontrollerFortigateprofileLanExtensionPtrOutput {
	return o.ToExtensioncontrollerFortigateprofileLanExtensionPtrOutputWithContext(context.Background())
}

func (o ExtensioncontrollerFortigateprofileLanExtensionOutput) ToExtensioncontrollerFortigateprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerFortigateprofileLanExtensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensioncontrollerFortigateprofileLanExtension) *ExtensioncontrollerFortigateprofileLanExtension {
		return &v
	}).(ExtensioncontrollerFortigateprofileLanExtensionPtrOutput)
}

// IPsec phase1 interface.
func (o ExtensioncontrollerFortigateprofileLanExtensionOutput) BackhaulInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerFortigateprofileLanExtension) *string { return v.BackhaulInterface }).(pulumi.StringPtrOutput)
}

// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
func (o ExtensioncontrollerFortigateprofileLanExtensionOutput) BackhaulIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerFortigateprofileLanExtension) *string { return v.BackhaulIp }).(pulumi.StringPtrOutput)
}

// IPsec tunnel name.
func (o ExtensioncontrollerFortigateprofileLanExtensionOutput) IpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensioncontrollerFortigateprofileLanExtension) *string { return v.IpsecTunnel }).(pulumi.StringPtrOutput)
}

type ExtensioncontrollerFortigateprofileLanExtensionPtrOutput struct{ *pulumi.OutputState }

func (ExtensioncontrollerFortigateprofileLanExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensioncontrollerFortigateprofileLanExtension)(nil)).Elem()
}

func (o ExtensioncontrollerFortigateprofileLanExtensionPtrOutput) ToExtensioncontrollerFortigateprofileLanExtensionPtrOutput() ExtensioncontrollerFortigateprofileLanExtensionPtrOutput {
	return o
}

func (o ExtensioncontrollerFortigateprofileLanExtensionPtrOutput) ToExtensioncontrollerFortigateprofileLanExtensionPtrOutputWithContext(ctx context.Context) ExtensioncontrollerFortigateprofileLanExtensionPtrOutput {
	return o
}

func (o ExtensioncontrollerFortigateprofileLanExtensionPtrOutput) Elem() ExtensioncontrollerFortigateprofileLanExtensionOutput {
	return o.ApplyT(func(v *ExtensioncontrollerFortigateprofileLanExtension) ExtensioncontrollerFortigateprofileLanExtension {
		if v != nil {
			return *v
		}
		var ret ExtensioncontrollerFortigateprofileLanExtension
		return ret
	}).(ExtensioncontrollerFortigateprofileLanExtensionOutput)
}

// IPsec phase1 interface.
func (o ExtensioncontrollerFortigateprofileLanExtensionPtrOutput) BackhaulInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerFortigateprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.BackhaulInterface
	}).(pulumi.StringPtrOutput)
}

// IPsec phase1 IPv4/FQDN. Used to specify the external IP/FQDN when the FortiGate unit is behind a NAT device.
func (o ExtensioncontrollerFortigateprofileLanExtensionPtrOutput) BackhaulIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerFortigateprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.BackhaulIp
	}).(pulumi.StringPtrOutput)
}

// IPsec tunnel name.
func (o ExtensioncontrollerFortigateprofileLanExtensionPtrOutput) IpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensioncontrollerFortigateprofileLanExtension) *string {
		if v == nil {
			return nil
		}
		return v.IpsecTunnel
	}).(pulumi.StringPtrOutput)
}

type FilefilterProfileRule struct {
	// Action taken for matched file. Valid values: `log-only`, `block`.
	Action *string `pulumi:"action"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Traffic direction. (HTTP, FTP, SSH, CIFS only) Valid values: `incoming`, `outgoing`, `any`.
	Direction *string `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes []FilefilterProfileRuleFileType `pulumi:"fileTypes"`
	// File-filter rule name.
	Name *string `pulumi:"name"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected *string `pulumi:"passwordProtected"`
	// Protocols to apply rule to. Valid values: `http`, `ftp`, `smtp`, `imap`, `pop3`, `mapi`, `cifs`, `ssh`.
	Protocol *string `pulumi:"protocol"`
}

// FilefilterProfileRuleInput is an input type that accepts FilefilterProfileRuleArgs and FilefilterProfileRuleOutput values.
// You can construct a concrete instance of `FilefilterProfileRuleInput` via:
//
//	FilefilterProfileRuleArgs{...}
type FilefilterProfileRuleInput interface {
	pulumi.Input

	ToFilefilterProfileRuleOutput() FilefilterProfileRuleOutput
	ToFilefilterProfileRuleOutputWithContext(context.Context) FilefilterProfileRuleOutput
}

type FilefilterProfileRuleArgs struct {
	// Action taken for matched file. Valid values: `log-only`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Traffic direction. (HTTP, FTP, SSH, CIFS only) Valid values: `incoming`, `outgoing`, `any`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes FilefilterProfileRuleFileTypeArrayInput `pulumi:"fileTypes"`
	// File-filter rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected pulumi.StringPtrInput `pulumi:"passwordProtected"`
	// Protocols to apply rule to. Valid values: `http`, `ftp`, `smtp`, `imap`, `pop3`, `mapi`, `cifs`, `ssh`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (FilefilterProfileRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilefilterProfileRule)(nil)).Elem()
}

func (i FilefilterProfileRuleArgs) ToFilefilterProfileRuleOutput() FilefilterProfileRuleOutput {
	return i.ToFilefilterProfileRuleOutputWithContext(context.Background())
}

func (i FilefilterProfileRuleArgs) ToFilefilterProfileRuleOutputWithContext(ctx context.Context) FilefilterProfileRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilefilterProfileRuleOutput)
}

// FilefilterProfileRuleArrayInput is an input type that accepts FilefilterProfileRuleArray and FilefilterProfileRuleArrayOutput values.
// You can construct a concrete instance of `FilefilterProfileRuleArrayInput` via:
//
//	FilefilterProfileRuleArray{ FilefilterProfileRuleArgs{...} }
type FilefilterProfileRuleArrayInput interface {
	pulumi.Input

	ToFilefilterProfileRuleArrayOutput() FilefilterProfileRuleArrayOutput
	ToFilefilterProfileRuleArrayOutputWithContext(context.Context) FilefilterProfileRuleArrayOutput
}

type FilefilterProfileRuleArray []FilefilterProfileRuleInput

func (FilefilterProfileRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilefilterProfileRule)(nil)).Elem()
}

func (i FilefilterProfileRuleArray) ToFilefilterProfileRuleArrayOutput() FilefilterProfileRuleArrayOutput {
	return i.ToFilefilterProfileRuleArrayOutputWithContext(context.Background())
}

func (i FilefilterProfileRuleArray) ToFilefilterProfileRuleArrayOutputWithContext(ctx context.Context) FilefilterProfileRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilefilterProfileRuleArrayOutput)
}

type FilefilterProfileRuleOutput struct{ *pulumi.OutputState }

func (FilefilterProfileRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilefilterProfileRule)(nil)).Elem()
}

func (o FilefilterProfileRuleOutput) ToFilefilterProfileRuleOutput() FilefilterProfileRuleOutput {
	return o
}

func (o FilefilterProfileRuleOutput) ToFilefilterProfileRuleOutputWithContext(ctx context.Context) FilefilterProfileRuleOutput {
	return o
}

// Action taken for matched file. Valid values: `log-only`, `block`.
func (o FilefilterProfileRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilefilterProfileRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Comment.
func (o FilefilterProfileRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilefilterProfileRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Traffic direction. (HTTP, FTP, SSH, CIFS only) Valid values: `incoming`, `outgoing`, `any`.
func (o FilefilterProfileRuleOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilefilterProfileRule) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Select file type. The structure of `fileType` block is documented below.
func (o FilefilterProfileRuleOutput) FileTypes() FilefilterProfileRuleFileTypeArrayOutput {
	return o.ApplyT(func(v FilefilterProfileRule) []FilefilterProfileRuleFileType { return v.FileTypes }).(FilefilterProfileRuleFileTypeArrayOutput)
}

// File-filter rule name.
func (o FilefilterProfileRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilefilterProfileRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Match password-protected files. Valid values: `yes`, `any`.
func (o FilefilterProfileRuleOutput) PasswordProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilefilterProfileRule) *string { return v.PasswordProtected }).(pulumi.StringPtrOutput)
}

// Protocols to apply rule to. Valid values: `http`, `ftp`, `smtp`, `imap`, `pop3`, `mapi`, `cifs`, `ssh`.
func (o FilefilterProfileRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilefilterProfileRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type FilefilterProfileRuleArrayOutput struct{ *pulumi.OutputState }

func (FilefilterProfileRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilefilterProfileRule)(nil)).Elem()
}

func (o FilefilterProfileRuleArrayOutput) ToFilefilterProfileRuleArrayOutput() FilefilterProfileRuleArrayOutput {
	return o
}

func (o FilefilterProfileRuleArrayOutput) ToFilefilterProfileRuleArrayOutputWithContext(ctx context.Context) FilefilterProfileRuleArrayOutput {
	return o
}

func (o FilefilterProfileRuleArrayOutput) Index(i pulumi.IntInput) FilefilterProfileRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilefilterProfileRule {
		return vs[0].([]FilefilterProfileRule)[vs[1].(int)]
	}).(FilefilterProfileRuleOutput)
}

type FilefilterProfileRuleFileType struct {
	// File type name.
	Name *string `pulumi:"name"`
}

// FilefilterProfileRuleFileTypeInput is an input type that accepts FilefilterProfileRuleFileTypeArgs and FilefilterProfileRuleFileTypeOutput values.
// You can construct a concrete instance of `FilefilterProfileRuleFileTypeInput` via:
//
//	FilefilterProfileRuleFileTypeArgs{...}
type FilefilterProfileRuleFileTypeInput interface {
	pulumi.Input

	ToFilefilterProfileRuleFileTypeOutput() FilefilterProfileRuleFileTypeOutput
	ToFilefilterProfileRuleFileTypeOutputWithContext(context.Context) FilefilterProfileRuleFileTypeOutput
}

type FilefilterProfileRuleFileTypeArgs struct {
	// File type name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FilefilterProfileRuleFileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilefilterProfileRuleFileType)(nil)).Elem()
}

func (i FilefilterProfileRuleFileTypeArgs) ToFilefilterProfileRuleFileTypeOutput() FilefilterProfileRuleFileTypeOutput {
	return i.ToFilefilterProfileRuleFileTypeOutputWithContext(context.Background())
}

func (i FilefilterProfileRuleFileTypeArgs) ToFilefilterProfileRuleFileTypeOutputWithContext(ctx context.Context) FilefilterProfileRuleFileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilefilterProfileRuleFileTypeOutput)
}

// FilefilterProfileRuleFileTypeArrayInput is an input type that accepts FilefilterProfileRuleFileTypeArray and FilefilterProfileRuleFileTypeArrayOutput values.
// You can construct a concrete instance of `FilefilterProfileRuleFileTypeArrayInput` via:
//
//	FilefilterProfileRuleFileTypeArray{ FilefilterProfileRuleFileTypeArgs{...} }
type FilefilterProfileRuleFileTypeArrayInput interface {
	pulumi.Input

	ToFilefilterProfileRuleFileTypeArrayOutput() FilefilterProfileRuleFileTypeArrayOutput
	ToFilefilterProfileRuleFileTypeArrayOutputWithContext(context.Context) FilefilterProfileRuleFileTypeArrayOutput
}

type FilefilterProfileRuleFileTypeArray []FilefilterProfileRuleFileTypeInput

func (FilefilterProfileRuleFileTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilefilterProfileRuleFileType)(nil)).Elem()
}

func (i FilefilterProfileRuleFileTypeArray) ToFilefilterProfileRuleFileTypeArrayOutput() FilefilterProfileRuleFileTypeArrayOutput {
	return i.ToFilefilterProfileRuleFileTypeArrayOutputWithContext(context.Background())
}

func (i FilefilterProfileRuleFileTypeArray) ToFilefilterProfileRuleFileTypeArrayOutputWithContext(ctx context.Context) FilefilterProfileRuleFileTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilefilterProfileRuleFileTypeArrayOutput)
}

type FilefilterProfileRuleFileTypeOutput struct{ *pulumi.OutputState }

func (FilefilterProfileRuleFileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilefilterProfileRuleFileType)(nil)).Elem()
}

func (o FilefilterProfileRuleFileTypeOutput) ToFilefilterProfileRuleFileTypeOutput() FilefilterProfileRuleFileTypeOutput {
	return o
}

func (o FilefilterProfileRuleFileTypeOutput) ToFilefilterProfileRuleFileTypeOutputWithContext(ctx context.Context) FilefilterProfileRuleFileTypeOutput {
	return o
}

// File type name.
func (o FilefilterProfileRuleFileTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilefilterProfileRuleFileType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FilefilterProfileRuleFileTypeArrayOutput struct{ *pulumi.OutputState }

func (FilefilterProfileRuleFileTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilefilterProfileRuleFileType)(nil)).Elem()
}

func (o FilefilterProfileRuleFileTypeArrayOutput) ToFilefilterProfileRuleFileTypeArrayOutput() FilefilterProfileRuleFileTypeArrayOutput {
	return o
}

func (o FilefilterProfileRuleFileTypeArrayOutput) ToFilefilterProfileRuleFileTypeArrayOutputWithContext(ctx context.Context) FilefilterProfileRuleFileTypeArrayOutput {
	return o
}

func (o FilefilterProfileRuleFileTypeArrayOutput) Index(i pulumi.IntInput) FilefilterProfileRuleFileTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilefilterProfileRuleFileType {
		return vs[0].([]FilefilterProfileRuleFileType)[vs[1].(int)]
	}).(FilefilterProfileRuleFileTypeOutput)
}

type FirewallAccessproxy6ApiGateway6 struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications []FirewallAccessproxy6ApiGateway6Application `pulumi:"applications"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge *int `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain *string `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost *string `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration *int `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath *string `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare *string `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure *string `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id *int `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod *string `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence *string `pulumi:"persistence"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers []FirewallAccessproxy6ApiGateway6Realserver `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect *string `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer *string `pulumi:"samlServer"`
	// Service.
	Service *string `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites []FirewallAccessproxy6ApiGateway6SslCipherSuite `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits *string `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion *string `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion *string `pulumi:"sslMinVersion"`
	// SSL-VPN web portal.
	SslVpnWebPortal *string `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap *string `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType *string `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost *string `pulumi:"virtualHost"`
}

// FirewallAccessproxy6ApiGateway6Input is an input type that accepts FirewallAccessproxy6ApiGateway6Args and FirewallAccessproxy6ApiGateway6Output values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGateway6Input` via:
//
//	FirewallAccessproxy6ApiGateway6Args{...}
type FirewallAccessproxy6ApiGateway6Input interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGateway6Output() FirewallAccessproxy6ApiGateway6Output
	ToFirewallAccessproxy6ApiGateway6OutputWithContext(context.Context) FirewallAccessproxy6ApiGateway6Output
}

type FirewallAccessproxy6ApiGateway6Args struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications FirewallAccessproxy6ApiGateway6ApplicationArrayInput `pulumi:"applications"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge pulumi.IntPtrInput `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain pulumi.StringPtrInput `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost pulumi.StringPtrInput `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration pulumi.IntPtrInput `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath pulumi.StringPtrInput `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare pulumi.StringPtrInput `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure pulumi.StringPtrInput `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod pulumi.StringPtrInput `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence pulumi.StringPtrInput `pulumi:"persistence"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers FirewallAccessproxy6ApiGateway6RealserverArrayInput `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect pulumi.StringPtrInput `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer pulumi.StringPtrInput `pulumi:"samlServer"`
	// Service.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayInput `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits pulumi.StringPtrInput `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion pulumi.StringPtrInput `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion pulumi.StringPtrInput `pulumi:"sslMinVersion"`
	// SSL-VPN web portal.
	SslVpnWebPortal pulumi.StringPtrInput `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap pulumi.StringPtrInput `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType pulumi.StringPtrInput `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost pulumi.StringPtrInput `pulumi:"virtualHost"`
}

func (FirewallAccessproxy6ApiGateway6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway6)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGateway6Args) ToFirewallAccessproxy6ApiGateway6Output() FirewallAccessproxy6ApiGateway6Output {
	return i.ToFirewallAccessproxy6ApiGateway6OutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGateway6Args) ToFirewallAccessproxy6ApiGateway6OutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGateway6Output)
}

// FirewallAccessproxy6ApiGateway6ArrayInput is an input type that accepts FirewallAccessproxy6ApiGateway6Array and FirewallAccessproxy6ApiGateway6ArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGateway6ArrayInput` via:
//
//	FirewallAccessproxy6ApiGateway6Array{ FirewallAccessproxy6ApiGateway6Args{...} }
type FirewallAccessproxy6ApiGateway6ArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGateway6ArrayOutput() FirewallAccessproxy6ApiGateway6ArrayOutput
	ToFirewallAccessproxy6ApiGateway6ArrayOutputWithContext(context.Context) FirewallAccessproxy6ApiGateway6ArrayOutput
}

type FirewallAccessproxy6ApiGateway6Array []FirewallAccessproxy6ApiGateway6Input

func (FirewallAccessproxy6ApiGateway6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway6)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGateway6Array) ToFirewallAccessproxy6ApiGateway6ArrayOutput() FirewallAccessproxy6ApiGateway6ArrayOutput {
	return i.ToFirewallAccessproxy6ApiGateway6ArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGateway6Array) ToFirewallAccessproxy6ApiGateway6ArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGateway6ArrayOutput)
}

type FirewallAccessproxy6ApiGateway6Output struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGateway6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway6)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGateway6Output) ToFirewallAccessproxy6ApiGateway6Output() FirewallAccessproxy6ApiGateway6Output {
	return o
}

func (o FirewallAccessproxy6ApiGateway6Output) ToFirewallAccessproxy6ApiGateway6OutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6Output {
	return o
}

// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
func (o FirewallAccessproxy6ApiGateway6Output) Applications() FirewallAccessproxy6ApiGateway6ApplicationArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) []FirewallAccessproxy6ApiGateway6Application {
		return v.Applications
	}).(FirewallAccessproxy6ApiGateway6ApplicationArrayOutput)
}

// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
func (o FirewallAccessproxy6ApiGateway6Output) HttpCookieAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *int { return v.HttpCookieAge }).(pulumi.IntPtrOutput)
}

// Domain that HTTP cookie persistence should apply to.
func (o FirewallAccessproxy6ApiGateway6Output) HttpCookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.HttpCookieDomain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6ApiGateway6Output) HttpCookieDomainFromHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.HttpCookieDomainFromHost }).(pulumi.StringPtrOutput)
}

// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
func (o FirewallAccessproxy6ApiGateway6Output) HttpCookieGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *int { return v.HttpCookieGeneration }).(pulumi.IntPtrOutput)
}

// Limit HTTP cookie persistence to the specified path.
func (o FirewallAccessproxy6ApiGateway6Output) HttpCookiePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.HttpCookiePath }).(pulumi.StringPtrOutput)
}

// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
func (o FirewallAccessproxy6ApiGateway6Output) HttpCookieShare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.HttpCookieShare }).(pulumi.StringPtrOutput)
}

// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6ApiGateway6Output) HttpsCookieSecure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.HttpsCookieSecure }).(pulumi.StringPtrOutput)
}

// API Gateway ID.
func (o FirewallAccessproxy6ApiGateway6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
func (o FirewallAccessproxy6ApiGateway6Output) LdbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.LdbMethod }).(pulumi.StringPtrOutput)
}

// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
func (o FirewallAccessproxy6ApiGateway6Output) Persistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.Persistence }).(pulumi.StringPtrOutput)
}

// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
func (o FirewallAccessproxy6ApiGateway6Output) Realservers() FirewallAccessproxy6ApiGateway6RealserverArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) []FirewallAccessproxy6ApiGateway6Realserver {
		return v.Realservers
	}).(FirewallAccessproxy6ApiGateway6RealserverArrayOutput)
}

// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6ApiGateway6Output) SamlRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.SamlRedirect }).(pulumi.StringPtrOutput)
}

// SAML service provider configuration for VIP authentication.
func (o FirewallAccessproxy6ApiGateway6Output) SamlServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.SamlServer }).(pulumi.StringPtrOutput)
}

// Service.
func (o FirewallAccessproxy6ApiGateway6Output) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
func (o FirewallAccessproxy6ApiGateway6Output) SslAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.SslAlgorithm }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
func (o FirewallAccessproxy6ApiGateway6Output) SslCipherSuites() FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) []FirewallAccessproxy6ApiGateway6SslCipherSuite {
		return v.SslCipherSuites
	}).(FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput)
}

// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
func (o FirewallAccessproxy6ApiGateway6Output) SslDhBits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.SslDhBits }).(pulumi.StringPtrOutput)
}

// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxy6ApiGateway6Output) SslMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.SslMaxVersion }).(pulumi.StringPtrOutput)
}

// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxy6ApiGateway6Output) SslMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.SslMinVersion }).(pulumi.StringPtrOutput)
}

// SSL-VPN web portal.
func (o FirewallAccessproxy6ApiGateway6Output) SslVpnWebPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.SslVpnWebPortal }).(pulumi.StringPtrOutput)
}

// URL pattern to match.
func (o FirewallAccessproxy6ApiGateway6Output) UrlMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.UrlMap }).(pulumi.StringPtrOutput)
}

// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
func (o FirewallAccessproxy6ApiGateway6Output) UrlMapType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.UrlMapType }).(pulumi.StringPtrOutput)
}

// Virtual host.
func (o FirewallAccessproxy6ApiGateway6Output) VirtualHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6) *string { return v.VirtualHost }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxy6ApiGateway6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGateway6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway6)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGateway6ArrayOutput) ToFirewallAccessproxy6ApiGateway6ArrayOutput() FirewallAccessproxy6ApiGateway6ArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6ArrayOutput) ToFirewallAccessproxy6ApiGateway6ArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6ArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6ArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6ApiGateway6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxy6ApiGateway6 {
		return vs[0].([]FirewallAccessproxy6ApiGateway6)[vs[1].(int)]
	}).(FirewallAccessproxy6ApiGateway6Output)
}

type FirewallAccessproxy6ApiGateway6Application struct {
	// SaaS application name.
	Name *string `pulumi:"name"`
}

// FirewallAccessproxy6ApiGateway6ApplicationInput is an input type that accepts FirewallAccessproxy6ApiGateway6ApplicationArgs and FirewallAccessproxy6ApiGateway6ApplicationOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGateway6ApplicationInput` via:
//
//	FirewallAccessproxy6ApiGateway6ApplicationArgs{...}
type FirewallAccessproxy6ApiGateway6ApplicationInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGateway6ApplicationOutput() FirewallAccessproxy6ApiGateway6ApplicationOutput
	ToFirewallAccessproxy6ApiGateway6ApplicationOutputWithContext(context.Context) FirewallAccessproxy6ApiGateway6ApplicationOutput
}

type FirewallAccessproxy6ApiGateway6ApplicationArgs struct {
	// SaaS application name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAccessproxy6ApiGateway6ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway6Application)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGateway6ApplicationArgs) ToFirewallAccessproxy6ApiGateway6ApplicationOutput() FirewallAccessproxy6ApiGateway6ApplicationOutput {
	return i.ToFirewallAccessproxy6ApiGateway6ApplicationOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGateway6ApplicationArgs) ToFirewallAccessproxy6ApiGateway6ApplicationOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGateway6ApplicationOutput)
}

// FirewallAccessproxy6ApiGateway6ApplicationArrayInput is an input type that accepts FirewallAccessproxy6ApiGateway6ApplicationArray and FirewallAccessproxy6ApiGateway6ApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGateway6ApplicationArrayInput` via:
//
//	FirewallAccessproxy6ApiGateway6ApplicationArray{ FirewallAccessproxy6ApiGateway6ApplicationArgs{...} }
type FirewallAccessproxy6ApiGateway6ApplicationArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGateway6ApplicationArrayOutput() FirewallAccessproxy6ApiGateway6ApplicationArrayOutput
	ToFirewallAccessproxy6ApiGateway6ApplicationArrayOutputWithContext(context.Context) FirewallAccessproxy6ApiGateway6ApplicationArrayOutput
}

type FirewallAccessproxy6ApiGateway6ApplicationArray []FirewallAccessproxy6ApiGateway6ApplicationInput

func (FirewallAccessproxy6ApiGateway6ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway6Application)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGateway6ApplicationArray) ToFirewallAccessproxy6ApiGateway6ApplicationArrayOutput() FirewallAccessproxy6ApiGateway6ApplicationArrayOutput {
	return i.ToFirewallAccessproxy6ApiGateway6ApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGateway6ApplicationArray) ToFirewallAccessproxy6ApiGateway6ApplicationArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGateway6ApplicationArrayOutput)
}

type FirewallAccessproxy6ApiGateway6ApplicationOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGateway6ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway6Application)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGateway6ApplicationOutput) ToFirewallAccessproxy6ApiGateway6ApplicationOutput() FirewallAccessproxy6ApiGateway6ApplicationOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6ApplicationOutput) ToFirewallAccessproxy6ApiGateway6ApplicationOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6ApplicationOutput {
	return o
}

// SaaS application name.
func (o FirewallAccessproxy6ApiGateway6ApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Application) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxy6ApiGateway6ApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGateway6ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway6Application)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGateway6ApplicationArrayOutput) ToFirewallAccessproxy6ApiGateway6ApplicationArrayOutput() FirewallAccessproxy6ApiGateway6ApplicationArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6ApplicationArrayOutput) ToFirewallAccessproxy6ApiGateway6ApplicationArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6ApplicationArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6ApplicationArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6ApiGateway6ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxy6ApiGateway6Application {
		return vs[0].([]FirewallAccessproxy6ApiGateway6Application)[vs[1].(int)]
	}).(FirewallAccessproxy6ApiGateway6ApplicationOutput)
}

type FirewallAccessproxy6ApiGateway6Realserver struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType *string `pulumi:"addrType"`
	// Address or address group of the real server.
	Address *string `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain *string `pulumi:"domain"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck *string `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto *string `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval *string `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IPv6 address of the real server.
	Ip *string `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport *string `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port *int `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert *string `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation *string `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys []FirewallAccessproxy6ApiGateway6RealserverSshHostKey `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type *string `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// FirewallAccessproxy6ApiGateway6RealserverInput is an input type that accepts FirewallAccessproxy6ApiGateway6RealserverArgs and FirewallAccessproxy6ApiGateway6RealserverOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGateway6RealserverInput` via:
//
//	FirewallAccessproxy6ApiGateway6RealserverArgs{...}
type FirewallAccessproxy6ApiGateway6RealserverInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGateway6RealserverOutput() FirewallAccessproxy6ApiGateway6RealserverOutput
	ToFirewallAccessproxy6ApiGateway6RealserverOutputWithContext(context.Context) FirewallAccessproxy6ApiGateway6RealserverOutput
}

type FirewallAccessproxy6ApiGateway6RealserverArgs struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Address or address group of the real server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto pulumi.StringPtrInput `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval pulumi.StringPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport pulumi.StringPtrInput `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert pulumi.StringPtrInput `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation pulumi.StringPtrInput `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayInput `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (FirewallAccessproxy6ApiGateway6RealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway6Realserver)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGateway6RealserverArgs) ToFirewallAccessproxy6ApiGateway6RealserverOutput() FirewallAccessproxy6ApiGateway6RealserverOutput {
	return i.ToFirewallAccessproxy6ApiGateway6RealserverOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGateway6RealserverArgs) ToFirewallAccessproxy6ApiGateway6RealserverOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6RealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGateway6RealserverOutput)
}

// FirewallAccessproxy6ApiGateway6RealserverArrayInput is an input type that accepts FirewallAccessproxy6ApiGateway6RealserverArray and FirewallAccessproxy6ApiGateway6RealserverArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGateway6RealserverArrayInput` via:
//
//	FirewallAccessproxy6ApiGateway6RealserverArray{ FirewallAccessproxy6ApiGateway6RealserverArgs{...} }
type FirewallAccessproxy6ApiGateway6RealserverArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGateway6RealserverArrayOutput() FirewallAccessproxy6ApiGateway6RealserverArrayOutput
	ToFirewallAccessproxy6ApiGateway6RealserverArrayOutputWithContext(context.Context) FirewallAccessproxy6ApiGateway6RealserverArrayOutput
}

type FirewallAccessproxy6ApiGateway6RealserverArray []FirewallAccessproxy6ApiGateway6RealserverInput

func (FirewallAccessproxy6ApiGateway6RealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway6Realserver)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGateway6RealserverArray) ToFirewallAccessproxy6ApiGateway6RealserverArrayOutput() FirewallAccessproxy6ApiGateway6RealserverArrayOutput {
	return i.ToFirewallAccessproxy6ApiGateway6RealserverArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGateway6RealserverArray) ToFirewallAccessproxy6ApiGateway6RealserverArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6RealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGateway6RealserverArrayOutput)
}

type FirewallAccessproxy6ApiGateway6RealserverOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGateway6RealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway6Realserver)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGateway6RealserverOutput) ToFirewallAccessproxy6ApiGateway6RealserverOutput() FirewallAccessproxy6ApiGateway6RealserverOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6RealserverOutput) ToFirewallAccessproxy6ApiGateway6RealserverOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6RealserverOutput {
	return o
}

// Type of address. Valid values: `ip`, `fqdn`.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Address or address group of the real server.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Wildcard domain name of the real server.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) HealthCheckProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.HealthCheckProto }).(pulumi.StringPtrOutput)
}

// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) HolddownInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.HolddownInterval }).(pulumi.StringPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 address of the real server.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) Mappedport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.Mappedport }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set access-proxy SSH client certificate profile.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) SshClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.SshClientCert }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) SshHostKeyValidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.SshHostKeyValidation }).(pulumi.StringPtrOutput)
}

// One or more server host key. The structure of `sshHostKey` block is documented below.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) SshHostKeys() FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) []FirewallAccessproxy6ApiGateway6RealserverSshHostKey {
		return v.SshHostKeys
	}).(FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o FirewallAccessproxy6ApiGateway6RealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6Realserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type FirewallAccessproxy6ApiGateway6RealserverArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGateway6RealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway6Realserver)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGateway6RealserverArrayOutput) ToFirewallAccessproxy6ApiGateway6RealserverArrayOutput() FirewallAccessproxy6ApiGateway6RealserverArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6RealserverArrayOutput) ToFirewallAccessproxy6ApiGateway6RealserverArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6RealserverArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6RealserverArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6ApiGateway6RealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxy6ApiGateway6Realserver {
		return vs[0].([]FirewallAccessproxy6ApiGateway6Realserver)[vs[1].(int)]
	}).(FirewallAccessproxy6ApiGateway6RealserverOutput)
}

type FirewallAccessproxy6ApiGateway6RealserverSshHostKey struct {
	// Server host key name.
	Name *string `pulumi:"name"`
}

// FirewallAccessproxy6ApiGateway6RealserverSshHostKeyInput is an input type that accepts FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArgs and FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGateway6RealserverSshHostKeyInput` via:
//
//	FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArgs{...}
type FirewallAccessproxy6ApiGateway6RealserverSshHostKeyInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput() FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput
	ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutputWithContext(context.Context) FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput
}

type FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArgs struct {
	// Server host key name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArgs) ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput() FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput {
	return i.ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArgs) ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput)
}

// FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayInput is an input type that accepts FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArray and FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayInput` via:
//
//	FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArray{ FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArgs{...} }
type FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput() FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput
	ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutputWithContext(context.Context) FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput
}

type FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArray []FirewallAccessproxy6ApiGateway6RealserverSshHostKeyInput

func (FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArray) ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput() FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput {
	return i.ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArray) ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput)
}

type FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput) ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput() FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput) ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput {
	return o
}

// Server host key name.
func (o FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6RealserverSshHostKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput) ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput() FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput) ToFirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxy6ApiGateway6RealserverSshHostKey {
		return vs[0].([]FirewallAccessproxy6ApiGateway6RealserverSshHostKey)[vs[1].(int)]
	}).(FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput)
}

type FirewallAccessproxy6ApiGateway6SslCipherSuite struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions *string `pulumi:"versions"`
}

// FirewallAccessproxy6ApiGateway6SslCipherSuiteInput is an input type that accepts FirewallAccessproxy6ApiGateway6SslCipherSuiteArgs and FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGateway6SslCipherSuiteInput` via:
//
//	FirewallAccessproxy6ApiGateway6SslCipherSuiteArgs{...}
type FirewallAccessproxy6ApiGateway6SslCipherSuiteInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGateway6SslCipherSuiteOutput() FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput
	ToFirewallAccessproxy6ApiGateway6SslCipherSuiteOutputWithContext(context.Context) FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput
}

type FirewallAccessproxy6ApiGateway6SslCipherSuiteArgs struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (FirewallAccessproxy6ApiGateway6SslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway6SslCipherSuite)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGateway6SslCipherSuiteArgs) ToFirewallAccessproxy6ApiGateway6SslCipherSuiteOutput() FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput {
	return i.ToFirewallAccessproxy6ApiGateway6SslCipherSuiteOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGateway6SslCipherSuiteArgs) ToFirewallAccessproxy6ApiGateway6SslCipherSuiteOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput)
}

// FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayInput is an input type that accepts FirewallAccessproxy6ApiGateway6SslCipherSuiteArray and FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayInput` via:
//
//	FirewallAccessproxy6ApiGateway6SslCipherSuiteArray{ FirewallAccessproxy6ApiGateway6SslCipherSuiteArgs{...} }
type FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput() FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput
	ToFirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutputWithContext(context.Context) FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput
}

type FirewallAccessproxy6ApiGateway6SslCipherSuiteArray []FirewallAccessproxy6ApiGateway6SslCipherSuiteInput

func (FirewallAccessproxy6ApiGateway6SslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway6SslCipherSuite)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGateway6SslCipherSuiteArray) ToFirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput() FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput {
	return i.ToFirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGateway6SslCipherSuiteArray) ToFirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput)
}

type FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway6SslCipherSuite)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput) ToFirewallAccessproxy6ApiGateway6SslCipherSuiteOutput() FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput) ToFirewallAccessproxy6ApiGateway6SslCipherSuiteOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput {
	return o
}

// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
func (o FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6SslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6SslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway6SslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway6SslCipherSuite)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput) ToFirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput() FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput) ToFirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxy6ApiGateway6SslCipherSuite {
		return vs[0].([]FirewallAccessproxy6ApiGateway6SslCipherSuite)[vs[1].(int)]
	}).(FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput)
}

type FirewallAccessproxy6ApiGateway struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications []FirewallAccessproxy6ApiGatewayApplication `pulumi:"applications"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge *int `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain *string `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost *string `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration *int `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath *string `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare *string `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure *string `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id *int `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod *string `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence *string `pulumi:"persistence"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers []FirewallAccessproxy6ApiGatewayRealserver `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect *string `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer *string `pulumi:"samlServer"`
	// Service.
	Service *string `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites []FirewallAccessproxy6ApiGatewaySslCipherSuite `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits *string `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion *string `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion *string `pulumi:"sslMinVersion"`
	// SSL-VPN web portal.
	SslVpnWebPortal *string `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap *string `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType *string `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost *string `pulumi:"virtualHost"`
}

// FirewallAccessproxy6ApiGatewayInput is an input type that accepts FirewallAccessproxy6ApiGatewayArgs and FirewallAccessproxy6ApiGatewayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGatewayInput` via:
//
//	FirewallAccessproxy6ApiGatewayArgs{...}
type FirewallAccessproxy6ApiGatewayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGatewayOutput() FirewallAccessproxy6ApiGatewayOutput
	ToFirewallAccessproxy6ApiGatewayOutputWithContext(context.Context) FirewallAccessproxy6ApiGatewayOutput
}

type FirewallAccessproxy6ApiGatewayArgs struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications FirewallAccessproxy6ApiGatewayApplicationArrayInput `pulumi:"applications"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge pulumi.IntPtrInput `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain pulumi.StringPtrInput `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost pulumi.StringPtrInput `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration pulumi.IntPtrInput `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath pulumi.StringPtrInput `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare pulumi.StringPtrInput `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure pulumi.StringPtrInput `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod pulumi.StringPtrInput `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence pulumi.StringPtrInput `pulumi:"persistence"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers FirewallAccessproxy6ApiGatewayRealserverArrayInput `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect pulumi.StringPtrInput `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer pulumi.StringPtrInput `pulumi:"samlServer"`
	// Service.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayInput `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits pulumi.StringPtrInput `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion pulumi.StringPtrInput `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion pulumi.StringPtrInput `pulumi:"sslMinVersion"`
	// SSL-VPN web portal.
	SslVpnWebPortal pulumi.StringPtrInput `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap pulumi.StringPtrInput `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType pulumi.StringPtrInput `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost pulumi.StringPtrInput `pulumi:"virtualHost"`
}

func (FirewallAccessproxy6ApiGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGatewayArgs) ToFirewallAccessproxy6ApiGatewayOutput() FirewallAccessproxy6ApiGatewayOutput {
	return i.ToFirewallAccessproxy6ApiGatewayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGatewayArgs) ToFirewallAccessproxy6ApiGatewayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGatewayOutput)
}

// FirewallAccessproxy6ApiGatewayArrayInput is an input type that accepts FirewallAccessproxy6ApiGatewayArray and FirewallAccessproxy6ApiGatewayArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGatewayArrayInput` via:
//
//	FirewallAccessproxy6ApiGatewayArray{ FirewallAccessproxy6ApiGatewayArgs{...} }
type FirewallAccessproxy6ApiGatewayArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGatewayArrayOutput() FirewallAccessproxy6ApiGatewayArrayOutput
	ToFirewallAccessproxy6ApiGatewayArrayOutputWithContext(context.Context) FirewallAccessproxy6ApiGatewayArrayOutput
}

type FirewallAccessproxy6ApiGatewayArray []FirewallAccessproxy6ApiGatewayInput

func (FirewallAccessproxy6ApiGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGatewayArray) ToFirewallAccessproxy6ApiGatewayArrayOutput() FirewallAccessproxy6ApiGatewayArrayOutput {
	return i.ToFirewallAccessproxy6ApiGatewayArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGatewayArray) ToFirewallAccessproxy6ApiGatewayArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGatewayArrayOutput)
}

type FirewallAccessproxy6ApiGatewayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGateway)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGatewayOutput) ToFirewallAccessproxy6ApiGatewayOutput() FirewallAccessproxy6ApiGatewayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayOutput) ToFirewallAccessproxy6ApiGatewayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayOutput {
	return o
}

// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
func (o FirewallAccessproxy6ApiGatewayOutput) Applications() FirewallAccessproxy6ApiGatewayApplicationArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) []FirewallAccessproxy6ApiGatewayApplication {
		return v.Applications
	}).(FirewallAccessproxy6ApiGatewayApplicationArrayOutput)
}

// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
func (o FirewallAccessproxy6ApiGatewayOutput) HttpCookieAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *int { return v.HttpCookieAge }).(pulumi.IntPtrOutput)
}

// Domain that HTTP cookie persistence should apply to.
func (o FirewallAccessproxy6ApiGatewayOutput) HttpCookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.HttpCookieDomain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6ApiGatewayOutput) HttpCookieDomainFromHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.HttpCookieDomainFromHost }).(pulumi.StringPtrOutput)
}

// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
func (o FirewallAccessproxy6ApiGatewayOutput) HttpCookieGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *int { return v.HttpCookieGeneration }).(pulumi.IntPtrOutput)
}

// Limit HTTP cookie persistence to the specified path.
func (o FirewallAccessproxy6ApiGatewayOutput) HttpCookiePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.HttpCookiePath }).(pulumi.StringPtrOutput)
}

// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
func (o FirewallAccessproxy6ApiGatewayOutput) HttpCookieShare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.HttpCookieShare }).(pulumi.StringPtrOutput)
}

// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6ApiGatewayOutput) HttpsCookieSecure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.HttpsCookieSecure }).(pulumi.StringPtrOutput)
}

// API Gateway ID.
func (o FirewallAccessproxy6ApiGatewayOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
func (o FirewallAccessproxy6ApiGatewayOutput) LdbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.LdbMethod }).(pulumi.StringPtrOutput)
}

// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
func (o FirewallAccessproxy6ApiGatewayOutput) Persistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.Persistence }).(pulumi.StringPtrOutput)
}

// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
func (o FirewallAccessproxy6ApiGatewayOutput) Realservers() FirewallAccessproxy6ApiGatewayRealserverArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) []FirewallAccessproxy6ApiGatewayRealserver {
		return v.Realservers
	}).(FirewallAccessproxy6ApiGatewayRealserverArrayOutput)
}

// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6ApiGatewayOutput) SamlRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.SamlRedirect }).(pulumi.StringPtrOutput)
}

// SAML service provider configuration for VIP authentication.
func (o FirewallAccessproxy6ApiGatewayOutput) SamlServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.SamlServer }).(pulumi.StringPtrOutput)
}

// Service.
func (o FirewallAccessproxy6ApiGatewayOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
func (o FirewallAccessproxy6ApiGatewayOutput) SslAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.SslAlgorithm }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
func (o FirewallAccessproxy6ApiGatewayOutput) SslCipherSuites() FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) []FirewallAccessproxy6ApiGatewaySslCipherSuite {
		return v.SslCipherSuites
	}).(FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput)
}

// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
func (o FirewallAccessproxy6ApiGatewayOutput) SslDhBits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.SslDhBits }).(pulumi.StringPtrOutput)
}

// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxy6ApiGatewayOutput) SslMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.SslMaxVersion }).(pulumi.StringPtrOutput)
}

// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxy6ApiGatewayOutput) SslMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.SslMinVersion }).(pulumi.StringPtrOutput)
}

// SSL-VPN web portal.
func (o FirewallAccessproxy6ApiGatewayOutput) SslVpnWebPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.SslVpnWebPortal }).(pulumi.StringPtrOutput)
}

// URL pattern to match.
func (o FirewallAccessproxy6ApiGatewayOutput) UrlMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.UrlMap }).(pulumi.StringPtrOutput)
}

// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
func (o FirewallAccessproxy6ApiGatewayOutput) UrlMapType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.UrlMapType }).(pulumi.StringPtrOutput)
}

// Virtual host.
func (o FirewallAccessproxy6ApiGatewayOutput) VirtualHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGateway) *string { return v.VirtualHost }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxy6ApiGatewayArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGateway)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGatewayArrayOutput) ToFirewallAccessproxy6ApiGatewayArrayOutput() FirewallAccessproxy6ApiGatewayArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayArrayOutput) ToFirewallAccessproxy6ApiGatewayArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6ApiGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxy6ApiGateway {
		return vs[0].([]FirewallAccessproxy6ApiGateway)[vs[1].(int)]
	}).(FirewallAccessproxy6ApiGatewayOutput)
}

type FirewallAccessproxy6ApiGatewayApplication struct {
	// SaaS application name.
	Name *string `pulumi:"name"`
}

// FirewallAccessproxy6ApiGatewayApplicationInput is an input type that accepts FirewallAccessproxy6ApiGatewayApplicationArgs and FirewallAccessproxy6ApiGatewayApplicationOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGatewayApplicationInput` via:
//
//	FirewallAccessproxy6ApiGatewayApplicationArgs{...}
type FirewallAccessproxy6ApiGatewayApplicationInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGatewayApplicationOutput() FirewallAccessproxy6ApiGatewayApplicationOutput
	ToFirewallAccessproxy6ApiGatewayApplicationOutputWithContext(context.Context) FirewallAccessproxy6ApiGatewayApplicationOutput
}

type FirewallAccessproxy6ApiGatewayApplicationArgs struct {
	// SaaS application name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAccessproxy6ApiGatewayApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGatewayApplication)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGatewayApplicationArgs) ToFirewallAccessproxy6ApiGatewayApplicationOutput() FirewallAccessproxy6ApiGatewayApplicationOutput {
	return i.ToFirewallAccessproxy6ApiGatewayApplicationOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGatewayApplicationArgs) ToFirewallAccessproxy6ApiGatewayApplicationOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGatewayApplicationOutput)
}

// FirewallAccessproxy6ApiGatewayApplicationArrayInput is an input type that accepts FirewallAccessproxy6ApiGatewayApplicationArray and FirewallAccessproxy6ApiGatewayApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGatewayApplicationArrayInput` via:
//
//	FirewallAccessproxy6ApiGatewayApplicationArray{ FirewallAccessproxy6ApiGatewayApplicationArgs{...} }
type FirewallAccessproxy6ApiGatewayApplicationArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGatewayApplicationArrayOutput() FirewallAccessproxy6ApiGatewayApplicationArrayOutput
	ToFirewallAccessproxy6ApiGatewayApplicationArrayOutputWithContext(context.Context) FirewallAccessproxy6ApiGatewayApplicationArrayOutput
}

type FirewallAccessproxy6ApiGatewayApplicationArray []FirewallAccessproxy6ApiGatewayApplicationInput

func (FirewallAccessproxy6ApiGatewayApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGatewayApplication)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGatewayApplicationArray) ToFirewallAccessproxy6ApiGatewayApplicationArrayOutput() FirewallAccessproxy6ApiGatewayApplicationArrayOutput {
	return i.ToFirewallAccessproxy6ApiGatewayApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGatewayApplicationArray) ToFirewallAccessproxy6ApiGatewayApplicationArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGatewayApplicationArrayOutput)
}

type FirewallAccessproxy6ApiGatewayApplicationOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGatewayApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGatewayApplication)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGatewayApplicationOutput) ToFirewallAccessproxy6ApiGatewayApplicationOutput() FirewallAccessproxy6ApiGatewayApplicationOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayApplicationOutput) ToFirewallAccessproxy6ApiGatewayApplicationOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayApplicationOutput {
	return o
}

// SaaS application name.
func (o FirewallAccessproxy6ApiGatewayApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayApplication) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxy6ApiGatewayApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGatewayApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGatewayApplication)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGatewayApplicationArrayOutput) ToFirewallAccessproxy6ApiGatewayApplicationArrayOutput() FirewallAccessproxy6ApiGatewayApplicationArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayApplicationArrayOutput) ToFirewallAccessproxy6ApiGatewayApplicationArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayApplicationArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayApplicationArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6ApiGatewayApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxy6ApiGatewayApplication {
		return vs[0].([]FirewallAccessproxy6ApiGatewayApplication)[vs[1].(int)]
	}).(FirewallAccessproxy6ApiGatewayApplicationOutput)
}

type FirewallAccessproxy6ApiGatewayRealserver struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType *string `pulumi:"addrType"`
	// Address or address group of the real server.
	Address *string `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain *string `pulumi:"domain"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck *string `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto *string `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval *string `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IPv6 address of the real server.
	Ip *string `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport *string `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port *int `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert *string `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation *string `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys []FirewallAccessproxy6ApiGatewayRealserverSshHostKey `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type *string `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// FirewallAccessproxy6ApiGatewayRealserverInput is an input type that accepts FirewallAccessproxy6ApiGatewayRealserverArgs and FirewallAccessproxy6ApiGatewayRealserverOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGatewayRealserverInput` via:
//
//	FirewallAccessproxy6ApiGatewayRealserverArgs{...}
type FirewallAccessproxy6ApiGatewayRealserverInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGatewayRealserverOutput() FirewallAccessproxy6ApiGatewayRealserverOutput
	ToFirewallAccessproxy6ApiGatewayRealserverOutputWithContext(context.Context) FirewallAccessproxy6ApiGatewayRealserverOutput
}

type FirewallAccessproxy6ApiGatewayRealserverArgs struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Address or address group of the real server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto pulumi.StringPtrInput `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval pulumi.StringPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport pulumi.StringPtrInput `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert pulumi.StringPtrInput `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation pulumi.StringPtrInput `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayInput `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (FirewallAccessproxy6ApiGatewayRealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGatewayRealserver)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGatewayRealserverArgs) ToFirewallAccessproxy6ApiGatewayRealserverOutput() FirewallAccessproxy6ApiGatewayRealserverOutput {
	return i.ToFirewallAccessproxy6ApiGatewayRealserverOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGatewayRealserverArgs) ToFirewallAccessproxy6ApiGatewayRealserverOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayRealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGatewayRealserverOutput)
}

// FirewallAccessproxy6ApiGatewayRealserverArrayInput is an input type that accepts FirewallAccessproxy6ApiGatewayRealserverArray and FirewallAccessproxy6ApiGatewayRealserverArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGatewayRealserverArrayInput` via:
//
//	FirewallAccessproxy6ApiGatewayRealserverArray{ FirewallAccessproxy6ApiGatewayRealserverArgs{...} }
type FirewallAccessproxy6ApiGatewayRealserverArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGatewayRealserverArrayOutput() FirewallAccessproxy6ApiGatewayRealserverArrayOutput
	ToFirewallAccessproxy6ApiGatewayRealserverArrayOutputWithContext(context.Context) FirewallAccessproxy6ApiGatewayRealserverArrayOutput
}

type FirewallAccessproxy6ApiGatewayRealserverArray []FirewallAccessproxy6ApiGatewayRealserverInput

func (FirewallAccessproxy6ApiGatewayRealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGatewayRealserver)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGatewayRealserverArray) ToFirewallAccessproxy6ApiGatewayRealserverArrayOutput() FirewallAccessproxy6ApiGatewayRealserverArrayOutput {
	return i.ToFirewallAccessproxy6ApiGatewayRealserverArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGatewayRealserverArray) ToFirewallAccessproxy6ApiGatewayRealserverArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayRealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGatewayRealserverArrayOutput)
}

type FirewallAccessproxy6ApiGatewayRealserverOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGatewayRealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGatewayRealserver)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGatewayRealserverOutput) ToFirewallAccessproxy6ApiGatewayRealserverOutput() FirewallAccessproxy6ApiGatewayRealserverOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayRealserverOutput) ToFirewallAccessproxy6ApiGatewayRealserverOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayRealserverOutput {
	return o
}

// Type of address. Valid values: `ip`, `fqdn`.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Address or address group of the real server.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Wildcard domain name of the real server.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) HealthCheckProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.HealthCheckProto }).(pulumi.StringPtrOutput)
}

// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) HolddownInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.HolddownInterval }).(pulumi.StringPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 address of the real server.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) Mappedport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.Mappedport }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set access-proxy SSH client certificate profile.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) SshClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.SshClientCert }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) SshHostKeyValidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.SshHostKeyValidation }).(pulumi.StringPtrOutput)
}

// One or more server host key. The structure of `sshHostKey` block is documented below.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) SshHostKeys() FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) []FirewallAccessproxy6ApiGatewayRealserverSshHostKey {
		return v.SshHostKeys
	}).(FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o FirewallAccessproxy6ApiGatewayRealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type FirewallAccessproxy6ApiGatewayRealserverArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGatewayRealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGatewayRealserver)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGatewayRealserverArrayOutput) ToFirewallAccessproxy6ApiGatewayRealserverArrayOutput() FirewallAccessproxy6ApiGatewayRealserverArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayRealserverArrayOutput) ToFirewallAccessproxy6ApiGatewayRealserverArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayRealserverArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayRealserverArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6ApiGatewayRealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxy6ApiGatewayRealserver {
		return vs[0].([]FirewallAccessproxy6ApiGatewayRealserver)[vs[1].(int)]
	}).(FirewallAccessproxy6ApiGatewayRealserverOutput)
}

type FirewallAccessproxy6ApiGatewayRealserverSshHostKey struct {
	// Server host key name.
	Name *string `pulumi:"name"`
}

// FirewallAccessproxy6ApiGatewayRealserverSshHostKeyInput is an input type that accepts FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArgs and FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGatewayRealserverSshHostKeyInput` via:
//
//	FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArgs{...}
type FirewallAccessproxy6ApiGatewayRealserverSshHostKeyInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput() FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput
	ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutputWithContext(context.Context) FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput
}

type FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArgs struct {
	// Server host key name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArgs) ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput() FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput {
	return i.ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArgs) ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput)
}

// FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayInput is an input type that accepts FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArray and FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayInput` via:
//
//	FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArray{ FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArgs{...} }
type FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput() FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput
	ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutputWithContext(context.Context) FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput
}

type FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArray []FirewallAccessproxy6ApiGatewayRealserverSshHostKeyInput

func (FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArray) ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput() FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput {
	return i.ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArray) ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput)
}

type FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput) ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput() FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput) ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput {
	return o
}

// Server host key name.
func (o FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewayRealserverSshHostKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput) ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput() FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput) ToFirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxy6ApiGatewayRealserverSshHostKey {
		return vs[0].([]FirewallAccessproxy6ApiGatewayRealserverSshHostKey)[vs[1].(int)]
	}).(FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput)
}

type FirewallAccessproxy6ApiGatewaySslCipherSuite struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions *string `pulumi:"versions"`
}

// FirewallAccessproxy6ApiGatewaySslCipherSuiteInput is an input type that accepts FirewallAccessproxy6ApiGatewaySslCipherSuiteArgs and FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGatewaySslCipherSuiteInput` via:
//
//	FirewallAccessproxy6ApiGatewaySslCipherSuiteArgs{...}
type FirewallAccessproxy6ApiGatewaySslCipherSuiteInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGatewaySslCipherSuiteOutput() FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput
	ToFirewallAccessproxy6ApiGatewaySslCipherSuiteOutputWithContext(context.Context) FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput
}

type FirewallAccessproxy6ApiGatewaySslCipherSuiteArgs struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (FirewallAccessproxy6ApiGatewaySslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGatewaySslCipherSuite)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGatewaySslCipherSuiteArgs) ToFirewallAccessproxy6ApiGatewaySslCipherSuiteOutput() FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput {
	return i.ToFirewallAccessproxy6ApiGatewaySslCipherSuiteOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGatewaySslCipherSuiteArgs) ToFirewallAccessproxy6ApiGatewaySslCipherSuiteOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput)
}

// FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayInput is an input type that accepts FirewallAccessproxy6ApiGatewaySslCipherSuiteArray and FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayInput` via:
//
//	FirewallAccessproxy6ApiGatewaySslCipherSuiteArray{ FirewallAccessproxy6ApiGatewaySslCipherSuiteArgs{...} }
type FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput() FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput
	ToFirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutputWithContext(context.Context) FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput
}

type FirewallAccessproxy6ApiGatewaySslCipherSuiteArray []FirewallAccessproxy6ApiGatewaySslCipherSuiteInput

func (FirewallAccessproxy6ApiGatewaySslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGatewaySslCipherSuite)(nil)).Elem()
}

func (i FirewallAccessproxy6ApiGatewaySslCipherSuiteArray) ToFirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput() FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput {
	return i.ToFirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxy6ApiGatewaySslCipherSuiteArray) ToFirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput)
}

type FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxy6ApiGatewaySslCipherSuite)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput) ToFirewallAccessproxy6ApiGatewaySslCipherSuiteOutput() FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput) ToFirewallAccessproxy6ApiGatewaySslCipherSuiteOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput {
	return o
}

// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
func (o FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewaySslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewaySslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxy6ApiGatewaySslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxy6ApiGatewaySslCipherSuite)(nil)).Elem()
}

func (o FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput) ToFirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput() FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput) ToFirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput {
	return o
}

func (o FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxy6ApiGatewaySslCipherSuite {
		return vs[0].([]FirewallAccessproxy6ApiGatewaySslCipherSuite)[vs[1].(int)]
	}).(FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput)
}

type FirewallAccessproxyApiGateway6 struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications []FirewallAccessproxyApiGateway6Application `pulumi:"applications"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge *int `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain *string `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost *string `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration *int `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath *string `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare *string `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure *string `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id *int `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod *string `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence *string `pulumi:"persistence"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers []FirewallAccessproxyApiGateway6Realserver `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect *string `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer *string `pulumi:"samlServer"`
	// Service.
	Service *string `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites []FirewallAccessproxyApiGateway6SslCipherSuite `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits *string `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion *string `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion *string `pulumi:"sslMinVersion"`
	// SSL-VPN web portal.
	SslVpnWebPortal *string `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap *string `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType *string `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost *string `pulumi:"virtualHost"`
}

// FirewallAccessproxyApiGateway6Input is an input type that accepts FirewallAccessproxyApiGateway6Args and FirewallAccessproxyApiGateway6Output values.
// You can construct a concrete instance of `FirewallAccessproxyApiGateway6Input` via:
//
//	FirewallAccessproxyApiGateway6Args{...}
type FirewallAccessproxyApiGateway6Input interface {
	pulumi.Input

	ToFirewallAccessproxyApiGateway6Output() FirewallAccessproxyApiGateway6Output
	ToFirewallAccessproxyApiGateway6OutputWithContext(context.Context) FirewallAccessproxyApiGateway6Output
}

type FirewallAccessproxyApiGateway6Args struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications FirewallAccessproxyApiGateway6ApplicationArrayInput `pulumi:"applications"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge pulumi.IntPtrInput `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain pulumi.StringPtrInput `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost pulumi.StringPtrInput `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration pulumi.IntPtrInput `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath pulumi.StringPtrInput `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare pulumi.StringPtrInput `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure pulumi.StringPtrInput `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod pulumi.StringPtrInput `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence pulumi.StringPtrInput `pulumi:"persistence"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers FirewallAccessproxyApiGateway6RealserverArrayInput `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect pulumi.StringPtrInput `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer pulumi.StringPtrInput `pulumi:"samlServer"`
	// Service.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites FirewallAccessproxyApiGateway6SslCipherSuiteArrayInput `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits pulumi.StringPtrInput `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion pulumi.StringPtrInput `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion pulumi.StringPtrInput `pulumi:"sslMinVersion"`
	// SSL-VPN web portal.
	SslVpnWebPortal pulumi.StringPtrInput `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap pulumi.StringPtrInput `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType pulumi.StringPtrInput `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost pulumi.StringPtrInput `pulumi:"virtualHost"`
}

func (FirewallAccessproxyApiGateway6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway6)(nil)).Elem()
}

func (i FirewallAccessproxyApiGateway6Args) ToFirewallAccessproxyApiGateway6Output() FirewallAccessproxyApiGateway6Output {
	return i.ToFirewallAccessproxyApiGateway6OutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGateway6Args) ToFirewallAccessproxyApiGateway6OutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGateway6Output)
}

// FirewallAccessproxyApiGateway6ArrayInput is an input type that accepts FirewallAccessproxyApiGateway6Array and FirewallAccessproxyApiGateway6ArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGateway6ArrayInput` via:
//
//	FirewallAccessproxyApiGateway6Array{ FirewallAccessproxyApiGateway6Args{...} }
type FirewallAccessproxyApiGateway6ArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGateway6ArrayOutput() FirewallAccessproxyApiGateway6ArrayOutput
	ToFirewallAccessproxyApiGateway6ArrayOutputWithContext(context.Context) FirewallAccessproxyApiGateway6ArrayOutput
}

type FirewallAccessproxyApiGateway6Array []FirewallAccessproxyApiGateway6Input

func (FirewallAccessproxyApiGateway6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway6)(nil)).Elem()
}

func (i FirewallAccessproxyApiGateway6Array) ToFirewallAccessproxyApiGateway6ArrayOutput() FirewallAccessproxyApiGateway6ArrayOutput {
	return i.ToFirewallAccessproxyApiGateway6ArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGateway6Array) ToFirewallAccessproxyApiGateway6ArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGateway6ArrayOutput)
}

type FirewallAccessproxyApiGateway6Output struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGateway6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway6)(nil)).Elem()
}

func (o FirewallAccessproxyApiGateway6Output) ToFirewallAccessproxyApiGateway6Output() FirewallAccessproxyApiGateway6Output {
	return o
}

func (o FirewallAccessproxyApiGateway6Output) ToFirewallAccessproxyApiGateway6OutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6Output {
	return o
}

// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
func (o FirewallAccessproxyApiGateway6Output) Applications() FirewallAccessproxyApiGateway6ApplicationArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) []FirewallAccessproxyApiGateway6Application {
		return v.Applications
	}).(FirewallAccessproxyApiGateway6ApplicationArrayOutput)
}

// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
func (o FirewallAccessproxyApiGateway6Output) HttpCookieAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *int { return v.HttpCookieAge }).(pulumi.IntPtrOutput)
}

// Domain that HTTP cookie persistence should apply to.
func (o FirewallAccessproxyApiGateway6Output) HttpCookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.HttpCookieDomain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyApiGateway6Output) HttpCookieDomainFromHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.HttpCookieDomainFromHost }).(pulumi.StringPtrOutput)
}

// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
func (o FirewallAccessproxyApiGateway6Output) HttpCookieGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *int { return v.HttpCookieGeneration }).(pulumi.IntPtrOutput)
}

// Limit HTTP cookie persistence to the specified path.
func (o FirewallAccessproxyApiGateway6Output) HttpCookiePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.HttpCookiePath }).(pulumi.StringPtrOutput)
}

// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
func (o FirewallAccessproxyApiGateway6Output) HttpCookieShare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.HttpCookieShare }).(pulumi.StringPtrOutput)
}

// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyApiGateway6Output) HttpsCookieSecure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.HttpsCookieSecure }).(pulumi.StringPtrOutput)
}

// API Gateway ID.
func (o FirewallAccessproxyApiGateway6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
func (o FirewallAccessproxyApiGateway6Output) LdbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.LdbMethod }).(pulumi.StringPtrOutput)
}

// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
func (o FirewallAccessproxyApiGateway6Output) Persistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.Persistence }).(pulumi.StringPtrOutput)
}

// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
func (o FirewallAccessproxyApiGateway6Output) Realservers() FirewallAccessproxyApiGateway6RealserverArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) []FirewallAccessproxyApiGateway6Realserver {
		return v.Realservers
	}).(FirewallAccessproxyApiGateway6RealserverArrayOutput)
}

// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyApiGateway6Output) SamlRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.SamlRedirect }).(pulumi.StringPtrOutput)
}

// SAML service provider configuration for VIP authentication.
func (o FirewallAccessproxyApiGateway6Output) SamlServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.SamlServer }).(pulumi.StringPtrOutput)
}

// Service.
func (o FirewallAccessproxyApiGateway6Output) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
func (o FirewallAccessproxyApiGateway6Output) SslAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.SslAlgorithm }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
func (o FirewallAccessproxyApiGateway6Output) SslCipherSuites() FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) []FirewallAccessproxyApiGateway6SslCipherSuite {
		return v.SslCipherSuites
	}).(FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput)
}

// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
func (o FirewallAccessproxyApiGateway6Output) SslDhBits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.SslDhBits }).(pulumi.StringPtrOutput)
}

// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxyApiGateway6Output) SslMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.SslMaxVersion }).(pulumi.StringPtrOutput)
}

// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxyApiGateway6Output) SslMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.SslMinVersion }).(pulumi.StringPtrOutput)
}

// SSL-VPN web portal.
func (o FirewallAccessproxyApiGateway6Output) SslVpnWebPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.SslVpnWebPortal }).(pulumi.StringPtrOutput)
}

// URL pattern to match.
func (o FirewallAccessproxyApiGateway6Output) UrlMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.UrlMap }).(pulumi.StringPtrOutput)
}

// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
func (o FirewallAccessproxyApiGateway6Output) UrlMapType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.UrlMapType }).(pulumi.StringPtrOutput)
}

// Virtual host.
func (o FirewallAccessproxyApiGateway6Output) VirtualHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6) *string { return v.VirtualHost }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxyApiGateway6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGateway6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway6)(nil)).Elem()
}

func (o FirewallAccessproxyApiGateway6ArrayOutput) ToFirewallAccessproxyApiGateway6ArrayOutput() FirewallAccessproxyApiGateway6ArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6ArrayOutput) ToFirewallAccessproxyApiGateway6ArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6ArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6ArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyApiGateway6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxyApiGateway6 {
		return vs[0].([]FirewallAccessproxyApiGateway6)[vs[1].(int)]
	}).(FirewallAccessproxyApiGateway6Output)
}

type FirewallAccessproxyApiGateway6Application struct {
	// SaaS application name.
	Name *string `pulumi:"name"`
}

// FirewallAccessproxyApiGateway6ApplicationInput is an input type that accepts FirewallAccessproxyApiGateway6ApplicationArgs and FirewallAccessproxyApiGateway6ApplicationOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGateway6ApplicationInput` via:
//
//	FirewallAccessproxyApiGateway6ApplicationArgs{...}
type FirewallAccessproxyApiGateway6ApplicationInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGateway6ApplicationOutput() FirewallAccessproxyApiGateway6ApplicationOutput
	ToFirewallAccessproxyApiGateway6ApplicationOutputWithContext(context.Context) FirewallAccessproxyApiGateway6ApplicationOutput
}

type FirewallAccessproxyApiGateway6ApplicationArgs struct {
	// SaaS application name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAccessproxyApiGateway6ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway6Application)(nil)).Elem()
}

func (i FirewallAccessproxyApiGateway6ApplicationArgs) ToFirewallAccessproxyApiGateway6ApplicationOutput() FirewallAccessproxyApiGateway6ApplicationOutput {
	return i.ToFirewallAccessproxyApiGateway6ApplicationOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGateway6ApplicationArgs) ToFirewallAccessproxyApiGateway6ApplicationOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGateway6ApplicationOutput)
}

// FirewallAccessproxyApiGateway6ApplicationArrayInput is an input type that accepts FirewallAccessproxyApiGateway6ApplicationArray and FirewallAccessproxyApiGateway6ApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGateway6ApplicationArrayInput` via:
//
//	FirewallAccessproxyApiGateway6ApplicationArray{ FirewallAccessproxyApiGateway6ApplicationArgs{...} }
type FirewallAccessproxyApiGateway6ApplicationArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGateway6ApplicationArrayOutput() FirewallAccessproxyApiGateway6ApplicationArrayOutput
	ToFirewallAccessproxyApiGateway6ApplicationArrayOutputWithContext(context.Context) FirewallAccessproxyApiGateway6ApplicationArrayOutput
}

type FirewallAccessproxyApiGateway6ApplicationArray []FirewallAccessproxyApiGateway6ApplicationInput

func (FirewallAccessproxyApiGateway6ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway6Application)(nil)).Elem()
}

func (i FirewallAccessproxyApiGateway6ApplicationArray) ToFirewallAccessproxyApiGateway6ApplicationArrayOutput() FirewallAccessproxyApiGateway6ApplicationArrayOutput {
	return i.ToFirewallAccessproxyApiGateway6ApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGateway6ApplicationArray) ToFirewallAccessproxyApiGateway6ApplicationArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGateway6ApplicationArrayOutput)
}

type FirewallAccessproxyApiGateway6ApplicationOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGateway6ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway6Application)(nil)).Elem()
}

func (o FirewallAccessproxyApiGateway6ApplicationOutput) ToFirewallAccessproxyApiGateway6ApplicationOutput() FirewallAccessproxyApiGateway6ApplicationOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6ApplicationOutput) ToFirewallAccessproxyApiGateway6ApplicationOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6ApplicationOutput {
	return o
}

// SaaS application name.
func (o FirewallAccessproxyApiGateway6ApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Application) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxyApiGateway6ApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGateway6ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway6Application)(nil)).Elem()
}

func (o FirewallAccessproxyApiGateway6ApplicationArrayOutput) ToFirewallAccessproxyApiGateway6ApplicationArrayOutput() FirewallAccessproxyApiGateway6ApplicationArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6ApplicationArrayOutput) ToFirewallAccessproxyApiGateway6ApplicationArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6ApplicationArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6ApplicationArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyApiGateway6ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxyApiGateway6Application {
		return vs[0].([]FirewallAccessproxyApiGateway6Application)[vs[1].(int)]
	}).(FirewallAccessproxyApiGateway6ApplicationOutput)
}

type FirewallAccessproxyApiGateway6Realserver struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType *string `pulumi:"addrType"`
	// Address or address group of the real server.
	Address *string `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain *string `pulumi:"domain"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck *string `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto *string `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval *string `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IPv6 address of the real server.
	Ip *string `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport *string `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port *int `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert *string `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation *string `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys []FirewallAccessproxyApiGateway6RealserverSshHostKey `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type *string `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// FirewallAccessproxyApiGateway6RealserverInput is an input type that accepts FirewallAccessproxyApiGateway6RealserverArgs and FirewallAccessproxyApiGateway6RealserverOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGateway6RealserverInput` via:
//
//	FirewallAccessproxyApiGateway6RealserverArgs{...}
type FirewallAccessproxyApiGateway6RealserverInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGateway6RealserverOutput() FirewallAccessproxyApiGateway6RealserverOutput
	ToFirewallAccessproxyApiGateway6RealserverOutputWithContext(context.Context) FirewallAccessproxyApiGateway6RealserverOutput
}

type FirewallAccessproxyApiGateway6RealserverArgs struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Address or address group of the real server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto pulumi.StringPtrInput `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval pulumi.StringPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport pulumi.StringPtrInput `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert pulumi.StringPtrInput `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation pulumi.StringPtrInput `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayInput `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (FirewallAccessproxyApiGateway6RealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway6Realserver)(nil)).Elem()
}

func (i FirewallAccessproxyApiGateway6RealserverArgs) ToFirewallAccessproxyApiGateway6RealserverOutput() FirewallAccessproxyApiGateway6RealserverOutput {
	return i.ToFirewallAccessproxyApiGateway6RealserverOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGateway6RealserverArgs) ToFirewallAccessproxyApiGateway6RealserverOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6RealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGateway6RealserverOutput)
}

// FirewallAccessproxyApiGateway6RealserverArrayInput is an input type that accepts FirewallAccessproxyApiGateway6RealserverArray and FirewallAccessproxyApiGateway6RealserverArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGateway6RealserverArrayInput` via:
//
//	FirewallAccessproxyApiGateway6RealserverArray{ FirewallAccessproxyApiGateway6RealserverArgs{...} }
type FirewallAccessproxyApiGateway6RealserverArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGateway6RealserverArrayOutput() FirewallAccessproxyApiGateway6RealserverArrayOutput
	ToFirewallAccessproxyApiGateway6RealserverArrayOutputWithContext(context.Context) FirewallAccessproxyApiGateway6RealserverArrayOutput
}

type FirewallAccessproxyApiGateway6RealserverArray []FirewallAccessproxyApiGateway6RealserverInput

func (FirewallAccessproxyApiGateway6RealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway6Realserver)(nil)).Elem()
}

func (i FirewallAccessproxyApiGateway6RealserverArray) ToFirewallAccessproxyApiGateway6RealserverArrayOutput() FirewallAccessproxyApiGateway6RealserverArrayOutput {
	return i.ToFirewallAccessproxyApiGateway6RealserverArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGateway6RealserverArray) ToFirewallAccessproxyApiGateway6RealserverArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6RealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGateway6RealserverArrayOutput)
}

type FirewallAccessproxyApiGateway6RealserverOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGateway6RealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway6Realserver)(nil)).Elem()
}

func (o FirewallAccessproxyApiGateway6RealserverOutput) ToFirewallAccessproxyApiGateway6RealserverOutput() FirewallAccessproxyApiGateway6RealserverOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6RealserverOutput) ToFirewallAccessproxyApiGateway6RealserverOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6RealserverOutput {
	return o
}

// Type of address. Valid values: `ip`, `fqdn`.
func (o FirewallAccessproxyApiGateway6RealserverOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Address or address group of the real server.
func (o FirewallAccessproxyApiGateway6RealserverOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Wildcard domain name of the real server.
func (o FirewallAccessproxyApiGateway6RealserverOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyApiGateway6RealserverOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
func (o FirewallAccessproxyApiGateway6RealserverOutput) HealthCheckProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.HealthCheckProto }).(pulumi.StringPtrOutput)
}

// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
func (o FirewallAccessproxyApiGateway6RealserverOutput) HolddownInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.HolddownInterval }).(pulumi.StringPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o FirewallAccessproxyApiGateway6RealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o FirewallAccessproxyApiGateway6RealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 address of the real server.
func (o FirewallAccessproxyApiGateway6RealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o FirewallAccessproxyApiGateway6RealserverOutput) Mappedport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.Mappedport }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o FirewallAccessproxyApiGateway6RealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set access-proxy SSH client certificate profile.
func (o FirewallAccessproxyApiGateway6RealserverOutput) SshClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.SshClientCert }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyApiGateway6RealserverOutput) SshHostKeyValidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.SshHostKeyValidation }).(pulumi.StringPtrOutput)
}

// One or more server host key. The structure of `sshHostKey` block is documented below.
func (o FirewallAccessproxyApiGateway6RealserverOutput) SshHostKeys() FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) []FirewallAccessproxyApiGateway6RealserverSshHostKey {
		return v.SshHostKeys
	}).(FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o FirewallAccessproxyApiGateway6RealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
func (o FirewallAccessproxyApiGateway6RealserverOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o FirewallAccessproxyApiGateway6RealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6Realserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type FirewallAccessproxyApiGateway6RealserverArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGateway6RealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway6Realserver)(nil)).Elem()
}

func (o FirewallAccessproxyApiGateway6RealserverArrayOutput) ToFirewallAccessproxyApiGateway6RealserverArrayOutput() FirewallAccessproxyApiGateway6RealserverArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6RealserverArrayOutput) ToFirewallAccessproxyApiGateway6RealserverArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6RealserverArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6RealserverArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyApiGateway6RealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxyApiGateway6Realserver {
		return vs[0].([]FirewallAccessproxyApiGateway6Realserver)[vs[1].(int)]
	}).(FirewallAccessproxyApiGateway6RealserverOutput)
}

type FirewallAccessproxyApiGateway6RealserverSshHostKey struct {
	// Server host key name.
	Name *string `pulumi:"name"`
}

// FirewallAccessproxyApiGateway6RealserverSshHostKeyInput is an input type that accepts FirewallAccessproxyApiGateway6RealserverSshHostKeyArgs and FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGateway6RealserverSshHostKeyInput` via:
//
//	FirewallAccessproxyApiGateway6RealserverSshHostKeyArgs{...}
type FirewallAccessproxyApiGateway6RealserverSshHostKeyInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGateway6RealserverSshHostKeyOutput() FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput
	ToFirewallAccessproxyApiGateway6RealserverSshHostKeyOutputWithContext(context.Context) FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput
}

type FirewallAccessproxyApiGateway6RealserverSshHostKeyArgs struct {
	// Server host key name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAccessproxyApiGateway6RealserverSshHostKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (i FirewallAccessproxyApiGateway6RealserverSshHostKeyArgs) ToFirewallAccessproxyApiGateway6RealserverSshHostKeyOutput() FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput {
	return i.ToFirewallAccessproxyApiGateway6RealserverSshHostKeyOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGateway6RealserverSshHostKeyArgs) ToFirewallAccessproxyApiGateway6RealserverSshHostKeyOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput)
}

// FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayInput is an input type that accepts FirewallAccessproxyApiGateway6RealserverSshHostKeyArray and FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayInput` via:
//
//	FirewallAccessproxyApiGateway6RealserverSshHostKeyArray{ FirewallAccessproxyApiGateway6RealserverSshHostKeyArgs{...} }
type FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput() FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput
	ToFirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutputWithContext(context.Context) FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput
}

type FirewallAccessproxyApiGateway6RealserverSshHostKeyArray []FirewallAccessproxyApiGateway6RealserverSshHostKeyInput

func (FirewallAccessproxyApiGateway6RealserverSshHostKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (i FirewallAccessproxyApiGateway6RealserverSshHostKeyArray) ToFirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput() FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput {
	return i.ToFirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGateway6RealserverSshHostKeyArray) ToFirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput)
}

type FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (o FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput) ToFirewallAccessproxyApiGateway6RealserverSshHostKeyOutput() FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput) ToFirewallAccessproxyApiGateway6RealserverSshHostKeyOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput {
	return o
}

// Server host key name.
func (o FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6RealserverSshHostKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway6RealserverSshHostKey)(nil)).Elem()
}

func (o FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput) ToFirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput() FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput) ToFirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxyApiGateway6RealserverSshHostKey {
		return vs[0].([]FirewallAccessproxyApiGateway6RealserverSshHostKey)[vs[1].(int)]
	}).(FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput)
}

type FirewallAccessproxyApiGateway6SslCipherSuite struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions *string `pulumi:"versions"`
}

// FirewallAccessproxyApiGateway6SslCipherSuiteInput is an input type that accepts FirewallAccessproxyApiGateway6SslCipherSuiteArgs and FirewallAccessproxyApiGateway6SslCipherSuiteOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGateway6SslCipherSuiteInput` via:
//
//	FirewallAccessproxyApiGateway6SslCipherSuiteArgs{...}
type FirewallAccessproxyApiGateway6SslCipherSuiteInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGateway6SslCipherSuiteOutput() FirewallAccessproxyApiGateway6SslCipherSuiteOutput
	ToFirewallAccessproxyApiGateway6SslCipherSuiteOutputWithContext(context.Context) FirewallAccessproxyApiGateway6SslCipherSuiteOutput
}

type FirewallAccessproxyApiGateway6SslCipherSuiteArgs struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (FirewallAccessproxyApiGateway6SslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway6SslCipherSuite)(nil)).Elem()
}

func (i FirewallAccessproxyApiGateway6SslCipherSuiteArgs) ToFirewallAccessproxyApiGateway6SslCipherSuiteOutput() FirewallAccessproxyApiGateway6SslCipherSuiteOutput {
	return i.ToFirewallAccessproxyApiGateway6SslCipherSuiteOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGateway6SslCipherSuiteArgs) ToFirewallAccessproxyApiGateway6SslCipherSuiteOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6SslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGateway6SslCipherSuiteOutput)
}

// FirewallAccessproxyApiGateway6SslCipherSuiteArrayInput is an input type that accepts FirewallAccessproxyApiGateway6SslCipherSuiteArray and FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGateway6SslCipherSuiteArrayInput` via:
//
//	FirewallAccessproxyApiGateway6SslCipherSuiteArray{ FirewallAccessproxyApiGateway6SslCipherSuiteArgs{...} }
type FirewallAccessproxyApiGateway6SslCipherSuiteArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput() FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput
	ToFirewallAccessproxyApiGateway6SslCipherSuiteArrayOutputWithContext(context.Context) FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput
}

type FirewallAccessproxyApiGateway6SslCipherSuiteArray []FirewallAccessproxyApiGateway6SslCipherSuiteInput

func (FirewallAccessproxyApiGateway6SslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway6SslCipherSuite)(nil)).Elem()
}

func (i FirewallAccessproxyApiGateway6SslCipherSuiteArray) ToFirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput() FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput {
	return i.ToFirewallAccessproxyApiGateway6SslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGateway6SslCipherSuiteArray) ToFirewallAccessproxyApiGateway6SslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput)
}

type FirewallAccessproxyApiGateway6SslCipherSuiteOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGateway6SslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway6SslCipherSuite)(nil)).Elem()
}

func (o FirewallAccessproxyApiGateway6SslCipherSuiteOutput) ToFirewallAccessproxyApiGateway6SslCipherSuiteOutput() FirewallAccessproxyApiGateway6SslCipherSuiteOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6SslCipherSuiteOutput) ToFirewallAccessproxyApiGateway6SslCipherSuiteOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6SslCipherSuiteOutput {
	return o
}

// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
func (o FirewallAccessproxyApiGateway6SslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6SslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o FirewallAccessproxyApiGateway6SslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6SslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxyApiGateway6SslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway6SslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway6SslCipherSuite)(nil)).Elem()
}

func (o FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput) ToFirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput() FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput) ToFirewallAccessproxyApiGateway6SslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyApiGateway6SslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxyApiGateway6SslCipherSuite {
		return vs[0].([]FirewallAccessproxyApiGateway6SslCipherSuite)[vs[1].(int)]
	}).(FirewallAccessproxyApiGateway6SslCipherSuiteOutput)
}

type FirewallAccessproxyApiGateway struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications []FirewallAccessproxyApiGatewayApplication `pulumi:"applications"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge *int `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain *string `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost *string `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration *int `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath *string `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare *string `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure *string `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id *int `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod *string `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence *string `pulumi:"persistence"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers []FirewallAccessproxyApiGatewayRealserver `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect *string `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer *string `pulumi:"samlServer"`
	// Service.
	Service *string `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites []FirewallAccessproxyApiGatewaySslCipherSuite `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits *string `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion *string `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion *string `pulumi:"sslMinVersion"`
	// SSL-VPN web portal.
	SslVpnWebPortal *string `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap *string `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType *string `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost *string `pulumi:"virtualHost"`
}

// FirewallAccessproxyApiGatewayInput is an input type that accepts FirewallAccessproxyApiGatewayArgs and FirewallAccessproxyApiGatewayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGatewayInput` via:
//
//	FirewallAccessproxyApiGatewayArgs{...}
type FirewallAccessproxyApiGatewayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGatewayOutput() FirewallAccessproxyApiGatewayOutput
	ToFirewallAccessproxyApiGatewayOutputWithContext(context.Context) FirewallAccessproxyApiGatewayOutput
}

type FirewallAccessproxyApiGatewayArgs struct {
	// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
	Applications FirewallAccessproxyApiGatewayApplicationArrayInput `pulumi:"applications"`
	// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
	HttpCookieAge pulumi.IntPtrInput `pulumi:"httpCookieAge"`
	// Domain that HTTP cookie persistence should apply to.
	HttpCookieDomain pulumi.StringPtrInput `pulumi:"httpCookieDomain"`
	// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
	HttpCookieDomainFromHost pulumi.StringPtrInput `pulumi:"httpCookieDomainFromHost"`
	// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
	HttpCookieGeneration pulumi.IntPtrInput `pulumi:"httpCookieGeneration"`
	// Limit HTTP cookie persistence to the specified path.
	HttpCookiePath pulumi.StringPtrInput `pulumi:"httpCookiePath"`
	// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
	HttpCookieShare pulumi.StringPtrInput `pulumi:"httpCookieShare"`
	// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
	HttpsCookieSecure pulumi.StringPtrInput `pulumi:"httpsCookieSecure"`
	// API Gateway ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
	LdbMethod pulumi.StringPtrInput `pulumi:"ldbMethod"`
	// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
	Persistence pulumi.StringPtrInput `pulumi:"persistence"`
	// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
	Realservers FirewallAccessproxyApiGatewayRealserverArrayInput `pulumi:"realservers"`
	// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
	SamlRedirect pulumi.StringPtrInput `pulumi:"samlRedirect"`
	// SAML service provider configuration for VIP authentication.
	SamlServer pulumi.StringPtrInput `pulumi:"samlServer"`
	// Service.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput `pulumi:"sslAlgorithm"`
	// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
	SslCipherSuites FirewallAccessproxyApiGatewaySslCipherSuiteArrayInput `pulumi:"sslCipherSuites"`
	// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
	SslDhBits pulumi.StringPtrInput `pulumi:"sslDhBits"`
	// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMaxVersion pulumi.StringPtrInput `pulumi:"sslMaxVersion"`
	// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	SslMinVersion pulumi.StringPtrInput `pulumi:"sslMinVersion"`
	// SSL-VPN web portal.
	SslVpnWebPortal pulumi.StringPtrInput `pulumi:"sslVpnWebPortal"`
	// URL pattern to match.
	UrlMap pulumi.StringPtrInput `pulumi:"urlMap"`
	// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
	UrlMapType pulumi.StringPtrInput `pulumi:"urlMapType"`
	// Virtual host.
	VirtualHost pulumi.StringPtrInput `pulumi:"virtualHost"`
}

func (FirewallAccessproxyApiGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway)(nil)).Elem()
}

func (i FirewallAccessproxyApiGatewayArgs) ToFirewallAccessproxyApiGatewayOutput() FirewallAccessproxyApiGatewayOutput {
	return i.ToFirewallAccessproxyApiGatewayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGatewayArgs) ToFirewallAccessproxyApiGatewayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGatewayOutput)
}

// FirewallAccessproxyApiGatewayArrayInput is an input type that accepts FirewallAccessproxyApiGatewayArray and FirewallAccessproxyApiGatewayArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGatewayArrayInput` via:
//
//	FirewallAccessproxyApiGatewayArray{ FirewallAccessproxyApiGatewayArgs{...} }
type FirewallAccessproxyApiGatewayArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGatewayArrayOutput() FirewallAccessproxyApiGatewayArrayOutput
	ToFirewallAccessproxyApiGatewayArrayOutputWithContext(context.Context) FirewallAccessproxyApiGatewayArrayOutput
}

type FirewallAccessproxyApiGatewayArray []FirewallAccessproxyApiGatewayInput

func (FirewallAccessproxyApiGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway)(nil)).Elem()
}

func (i FirewallAccessproxyApiGatewayArray) ToFirewallAccessproxyApiGatewayArrayOutput() FirewallAccessproxyApiGatewayArrayOutput {
	return i.ToFirewallAccessproxyApiGatewayArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGatewayArray) ToFirewallAccessproxyApiGatewayArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGatewayArrayOutput)
}

type FirewallAccessproxyApiGatewayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGateway)(nil)).Elem()
}

func (o FirewallAccessproxyApiGatewayOutput) ToFirewallAccessproxyApiGatewayOutput() FirewallAccessproxyApiGatewayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayOutput) ToFirewallAccessproxyApiGatewayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayOutput {
	return o
}

// SaaS application controlled by this Access Proxy. The structure of `application` block is documented below.
func (o FirewallAccessproxyApiGatewayOutput) Applications() FirewallAccessproxyApiGatewayApplicationArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) []FirewallAccessproxyApiGatewayApplication {
		return v.Applications
	}).(FirewallAccessproxyApiGatewayApplicationArrayOutput)
}

// Time in minutes that client web browsers should keep a cookie. Default is 60 minutes. 0 = no time limit.
func (o FirewallAccessproxyApiGatewayOutput) HttpCookieAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *int { return v.HttpCookieAge }).(pulumi.IntPtrOutput)
}

// Domain that HTTP cookie persistence should apply to.
func (o FirewallAccessproxyApiGatewayOutput) HttpCookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.HttpCookieDomain }).(pulumi.StringPtrOutput)
}

// Enable/disable use of HTTP cookie domain from host field in HTTP. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyApiGatewayOutput) HttpCookieDomainFromHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.HttpCookieDomainFromHost }).(pulumi.StringPtrOutput)
}

// Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.
func (o FirewallAccessproxyApiGatewayOutput) HttpCookieGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *int { return v.HttpCookieGeneration }).(pulumi.IntPtrOutput)
}

// Limit HTTP cookie persistence to the specified path.
func (o FirewallAccessproxyApiGatewayOutput) HttpCookiePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.HttpCookiePath }).(pulumi.StringPtrOutput)
}

// Control sharing of cookies across API Gateway. same-ip means a cookie from one virtual server can be used by another. Disable stops cookie sharing. Valid values: `disable`, `same-ip`.
func (o FirewallAccessproxyApiGatewayOutput) HttpCookieShare() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.HttpCookieShare }).(pulumi.StringPtrOutput)
}

// Enable/disable verification that inserted HTTPS cookies are secure. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyApiGatewayOutput) HttpsCookieSecure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.HttpsCookieSecure }).(pulumi.StringPtrOutput)
}

// API Gateway ID.
func (o FirewallAccessproxyApiGatewayOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Method used to distribute sessions to real servers. Valid values: `static`, `round-robin`, `weighted`, `first-alive`, `http-host`.
func (o FirewallAccessproxyApiGatewayOutput) LdbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.LdbMethod }).(pulumi.StringPtrOutput)
}

// Configure how to make sure that clients connect to the same server every time they make a request that is part of the same session. Valid values: `none`, `http-cookie`.
func (o FirewallAccessproxyApiGatewayOutput) Persistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.Persistence }).(pulumi.StringPtrOutput)
}

// Select the real servers that this Access Proxy will distribute traffic to. The structure of `realservers` block is documented below.
func (o FirewallAccessproxyApiGatewayOutput) Realservers() FirewallAccessproxyApiGatewayRealserverArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) []FirewallAccessproxyApiGatewayRealserver { return v.Realservers }).(FirewallAccessproxyApiGatewayRealserverArrayOutput)
}

// Enable/disable SAML redirection after successful authentication. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyApiGatewayOutput) SamlRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.SamlRedirect }).(pulumi.StringPtrOutput)
}

// SAML service provider configuration for VIP authentication.
func (o FirewallAccessproxyApiGatewayOutput) SamlServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.SamlServer }).(pulumi.StringPtrOutput)
}

// Service.
func (o FirewallAccessproxyApiGatewayOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength. Valid values: `high`, `medium`, `low`.
func (o FirewallAccessproxyApiGatewayOutput) SslAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.SslAlgorithm }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites to offer to a server, ordered by priority. The structure of `sslCipherSuites` block is documented below.
func (o FirewallAccessproxyApiGatewayOutput) SslCipherSuites() FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) []FirewallAccessproxyApiGatewaySslCipherSuite {
		return v.SslCipherSuites
	}).(FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput)
}

// Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions. Valid values: `768`, `1024`, `1536`, `2048`, `3072`, `4096`.
func (o FirewallAccessproxyApiGatewayOutput) SslDhBits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.SslDhBits }).(pulumi.StringPtrOutput)
}

// Highest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxyApiGatewayOutput) SslMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.SslMaxVersion }).(pulumi.StringPtrOutput)
}

// Lowest SSL/TLS version acceptable from a server. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxyApiGatewayOutput) SslMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.SslMinVersion }).(pulumi.StringPtrOutput)
}

// SSL-VPN web portal.
func (o FirewallAccessproxyApiGatewayOutput) SslVpnWebPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.SslVpnWebPortal }).(pulumi.StringPtrOutput)
}

// URL pattern to match.
func (o FirewallAccessproxyApiGatewayOutput) UrlMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.UrlMap }).(pulumi.StringPtrOutput)
}

// Type of url-map. Valid values: `sub-string`, `wildcard`, `regex`.
func (o FirewallAccessproxyApiGatewayOutput) UrlMapType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.UrlMapType }).(pulumi.StringPtrOutput)
}

// Virtual host.
func (o FirewallAccessproxyApiGatewayOutput) VirtualHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGateway) *string { return v.VirtualHost }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxyApiGatewayArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGateway)(nil)).Elem()
}

func (o FirewallAccessproxyApiGatewayArrayOutput) ToFirewallAccessproxyApiGatewayArrayOutput() FirewallAccessproxyApiGatewayArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayArrayOutput) ToFirewallAccessproxyApiGatewayArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyApiGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxyApiGateway {
		return vs[0].([]FirewallAccessproxyApiGateway)[vs[1].(int)]
	}).(FirewallAccessproxyApiGatewayOutput)
}

type FirewallAccessproxyApiGatewayApplication struct {
	// SaaS application name.
	Name *string `pulumi:"name"`
}

// FirewallAccessproxyApiGatewayApplicationInput is an input type that accepts FirewallAccessproxyApiGatewayApplicationArgs and FirewallAccessproxyApiGatewayApplicationOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGatewayApplicationInput` via:
//
//	FirewallAccessproxyApiGatewayApplicationArgs{...}
type FirewallAccessproxyApiGatewayApplicationInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGatewayApplicationOutput() FirewallAccessproxyApiGatewayApplicationOutput
	ToFirewallAccessproxyApiGatewayApplicationOutputWithContext(context.Context) FirewallAccessproxyApiGatewayApplicationOutput
}

type FirewallAccessproxyApiGatewayApplicationArgs struct {
	// SaaS application name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAccessproxyApiGatewayApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGatewayApplication)(nil)).Elem()
}

func (i FirewallAccessproxyApiGatewayApplicationArgs) ToFirewallAccessproxyApiGatewayApplicationOutput() FirewallAccessproxyApiGatewayApplicationOutput {
	return i.ToFirewallAccessproxyApiGatewayApplicationOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGatewayApplicationArgs) ToFirewallAccessproxyApiGatewayApplicationOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGatewayApplicationOutput)
}

// FirewallAccessproxyApiGatewayApplicationArrayInput is an input type that accepts FirewallAccessproxyApiGatewayApplicationArray and FirewallAccessproxyApiGatewayApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGatewayApplicationArrayInput` via:
//
//	FirewallAccessproxyApiGatewayApplicationArray{ FirewallAccessproxyApiGatewayApplicationArgs{...} }
type FirewallAccessproxyApiGatewayApplicationArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGatewayApplicationArrayOutput() FirewallAccessproxyApiGatewayApplicationArrayOutput
	ToFirewallAccessproxyApiGatewayApplicationArrayOutputWithContext(context.Context) FirewallAccessproxyApiGatewayApplicationArrayOutput
}

type FirewallAccessproxyApiGatewayApplicationArray []FirewallAccessproxyApiGatewayApplicationInput

func (FirewallAccessproxyApiGatewayApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGatewayApplication)(nil)).Elem()
}

func (i FirewallAccessproxyApiGatewayApplicationArray) ToFirewallAccessproxyApiGatewayApplicationArrayOutput() FirewallAccessproxyApiGatewayApplicationArrayOutput {
	return i.ToFirewallAccessproxyApiGatewayApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGatewayApplicationArray) ToFirewallAccessproxyApiGatewayApplicationArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGatewayApplicationArrayOutput)
}

type FirewallAccessproxyApiGatewayApplicationOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGatewayApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGatewayApplication)(nil)).Elem()
}

func (o FirewallAccessproxyApiGatewayApplicationOutput) ToFirewallAccessproxyApiGatewayApplicationOutput() FirewallAccessproxyApiGatewayApplicationOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayApplicationOutput) ToFirewallAccessproxyApiGatewayApplicationOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayApplicationOutput {
	return o
}

// SaaS application name.
func (o FirewallAccessproxyApiGatewayApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayApplication) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxyApiGatewayApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGatewayApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGatewayApplication)(nil)).Elem()
}

func (o FirewallAccessproxyApiGatewayApplicationArrayOutput) ToFirewallAccessproxyApiGatewayApplicationArrayOutput() FirewallAccessproxyApiGatewayApplicationArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayApplicationArrayOutput) ToFirewallAccessproxyApiGatewayApplicationArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayApplicationArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayApplicationArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyApiGatewayApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxyApiGatewayApplication {
		return vs[0].([]FirewallAccessproxyApiGatewayApplication)[vs[1].(int)]
	}).(FirewallAccessproxyApiGatewayApplicationOutput)
}

type FirewallAccessproxyApiGatewayRealserver struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType *string `pulumi:"addrType"`
	// Address or address group of the real server.
	Address *string `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain *string `pulumi:"domain"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck *string `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto *string `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval *string `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IPv6 address of the real server.
	Ip *string `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport *string `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port *int `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert *string `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation *string `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys []FirewallAccessproxyApiGatewayRealserverSshHostKey `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type *string `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// FirewallAccessproxyApiGatewayRealserverInput is an input type that accepts FirewallAccessproxyApiGatewayRealserverArgs and FirewallAccessproxyApiGatewayRealserverOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGatewayRealserverInput` via:
//
//	FirewallAccessproxyApiGatewayRealserverArgs{...}
type FirewallAccessproxyApiGatewayRealserverInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGatewayRealserverOutput() FirewallAccessproxyApiGatewayRealserverOutput
	ToFirewallAccessproxyApiGatewayRealserverOutputWithContext(context.Context) FirewallAccessproxyApiGatewayRealserverOutput
}

type FirewallAccessproxyApiGatewayRealserverArgs struct {
	// Type of address. Valid values: `ip`, `fqdn`.
	AddrType pulumi.StringPtrInput `pulumi:"addrType"`
	// Address or address group of the real server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Wildcard domain name of the real server.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
	HealthCheckProto pulumi.StringPtrInput `pulumi:"healthCheckProto"`
	// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
	HolddownInterval pulumi.StringPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Port for communicating with the real server.
	Mappedport pulumi.StringPtrInput `pulumi:"mappedport"`
	// Port for communicating with the real server.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set access-proxy SSH client certificate profile.
	SshClientCert pulumi.StringPtrInput `pulumi:"sshClientCert"`
	// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
	SshHostKeyValidation pulumi.StringPtrInput `pulumi:"sshHostKeyValidation"`
	// One or more server host key. The structure of `sshHostKey` block is documented below.
	SshHostKeys FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayInput `pulumi:"sshHostKeys"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (FirewallAccessproxyApiGatewayRealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGatewayRealserver)(nil)).Elem()
}

func (i FirewallAccessproxyApiGatewayRealserverArgs) ToFirewallAccessproxyApiGatewayRealserverOutput() FirewallAccessproxyApiGatewayRealserverOutput {
	return i.ToFirewallAccessproxyApiGatewayRealserverOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGatewayRealserverArgs) ToFirewallAccessproxyApiGatewayRealserverOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayRealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGatewayRealserverOutput)
}

// FirewallAccessproxyApiGatewayRealserverArrayInput is an input type that accepts FirewallAccessproxyApiGatewayRealserverArray and FirewallAccessproxyApiGatewayRealserverArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGatewayRealserverArrayInput` via:
//
//	FirewallAccessproxyApiGatewayRealserverArray{ FirewallAccessproxyApiGatewayRealserverArgs{...} }
type FirewallAccessproxyApiGatewayRealserverArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGatewayRealserverArrayOutput() FirewallAccessproxyApiGatewayRealserverArrayOutput
	ToFirewallAccessproxyApiGatewayRealserverArrayOutputWithContext(context.Context) FirewallAccessproxyApiGatewayRealserverArrayOutput
}

type FirewallAccessproxyApiGatewayRealserverArray []FirewallAccessproxyApiGatewayRealserverInput

func (FirewallAccessproxyApiGatewayRealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGatewayRealserver)(nil)).Elem()
}

func (i FirewallAccessproxyApiGatewayRealserverArray) ToFirewallAccessproxyApiGatewayRealserverArrayOutput() FirewallAccessproxyApiGatewayRealserverArrayOutput {
	return i.ToFirewallAccessproxyApiGatewayRealserverArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGatewayRealserverArray) ToFirewallAccessproxyApiGatewayRealserverArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayRealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGatewayRealserverArrayOutput)
}

type FirewallAccessproxyApiGatewayRealserverOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGatewayRealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGatewayRealserver)(nil)).Elem()
}

func (o FirewallAccessproxyApiGatewayRealserverOutput) ToFirewallAccessproxyApiGatewayRealserverOutput() FirewallAccessproxyApiGatewayRealserverOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayRealserverOutput) ToFirewallAccessproxyApiGatewayRealserverOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayRealserverOutput {
	return o
}

// Type of address. Valid values: `ip`, `fqdn`.
func (o FirewallAccessproxyApiGatewayRealserverOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

// Address or address group of the real server.
func (o FirewallAccessproxyApiGatewayRealserverOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Wildcard domain name of the real server.
func (o FirewallAccessproxyApiGatewayRealserverOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyApiGatewayRealserverOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

// Protocol of the health check monitor to use when polling to determine server's connectivity status. Valid values: `ping`, `http`, `tcp-connect`.
func (o FirewallAccessproxyApiGatewayRealserverOutput) HealthCheckProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.HealthCheckProto }).(pulumi.StringPtrOutput)
}

// Enable/disable holddown timer. Server will be considered active and reachable once the holddown period has expired (30 seconds). Valid values: `enable`, `disable`.
func (o FirewallAccessproxyApiGatewayRealserverOutput) HolddownInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.HolddownInterval }).(pulumi.StringPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o FirewallAccessproxyApiGatewayRealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o FirewallAccessproxyApiGatewayRealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 address of the real server.
func (o FirewallAccessproxyApiGatewayRealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o FirewallAccessproxyApiGatewayRealserverOutput) Mappedport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.Mappedport }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server.
func (o FirewallAccessproxyApiGatewayRealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set access-proxy SSH client certificate profile.
func (o FirewallAccessproxyApiGatewayRealserverOutput) SshClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.SshClientCert }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH real server host key validation. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyApiGatewayRealserverOutput) SshHostKeyValidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.SshHostKeyValidation }).(pulumi.StringPtrOutput)
}

// One or more server host key. The structure of `sshHostKey` block is documented below.
func (o FirewallAccessproxyApiGatewayRealserverOutput) SshHostKeys() FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) []FirewallAccessproxyApiGatewayRealserverSshHostKey {
		return v.SshHostKeys
	}).(FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o FirewallAccessproxyApiGatewayRealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// TCP forwarding server type. Valid values: `tcp-forwarding`, `ssh`.
func (o FirewallAccessproxyApiGatewayRealserverOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o FirewallAccessproxyApiGatewayRealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type FirewallAccessproxyApiGatewayRealserverArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGatewayRealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGatewayRealserver)(nil)).Elem()
}

func (o FirewallAccessproxyApiGatewayRealserverArrayOutput) ToFirewallAccessproxyApiGatewayRealserverArrayOutput() FirewallAccessproxyApiGatewayRealserverArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayRealserverArrayOutput) ToFirewallAccessproxyApiGatewayRealserverArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayRealserverArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayRealserverArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyApiGatewayRealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxyApiGatewayRealserver {
		return vs[0].([]FirewallAccessproxyApiGatewayRealserver)[vs[1].(int)]
	}).(FirewallAccessproxyApiGatewayRealserverOutput)
}

type FirewallAccessproxyApiGatewayRealserverSshHostKey struct {
	// Server host key name.
	Name *string `pulumi:"name"`
}

// FirewallAccessproxyApiGatewayRealserverSshHostKeyInput is an input type that accepts FirewallAccessproxyApiGatewayRealserverSshHostKeyArgs and FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGatewayRealserverSshHostKeyInput` via:
//
//	FirewallAccessproxyApiGatewayRealserverSshHostKeyArgs{...}
type FirewallAccessproxyApiGatewayRealserverSshHostKeyInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGatewayRealserverSshHostKeyOutput() FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput
	ToFirewallAccessproxyApiGatewayRealserverSshHostKeyOutputWithContext(context.Context) FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput
}

type FirewallAccessproxyApiGatewayRealserverSshHostKeyArgs struct {
	// Server host key name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAccessproxyApiGatewayRealserverSshHostKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (i FirewallAccessproxyApiGatewayRealserverSshHostKeyArgs) ToFirewallAccessproxyApiGatewayRealserverSshHostKeyOutput() FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput {
	return i.ToFirewallAccessproxyApiGatewayRealserverSshHostKeyOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGatewayRealserverSshHostKeyArgs) ToFirewallAccessproxyApiGatewayRealserverSshHostKeyOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput)
}

// FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayInput is an input type that accepts FirewallAccessproxyApiGatewayRealserverSshHostKeyArray and FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayInput` via:
//
//	FirewallAccessproxyApiGatewayRealserverSshHostKeyArray{ FirewallAccessproxyApiGatewayRealserverSshHostKeyArgs{...} }
type FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput() FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput
	ToFirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutputWithContext(context.Context) FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput
}

type FirewallAccessproxyApiGatewayRealserverSshHostKeyArray []FirewallAccessproxyApiGatewayRealserverSshHostKeyInput

func (FirewallAccessproxyApiGatewayRealserverSshHostKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (i FirewallAccessproxyApiGatewayRealserverSshHostKeyArray) ToFirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput() FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput {
	return i.ToFirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGatewayRealserverSshHostKeyArray) ToFirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput)
}

type FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (o FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput) ToFirewallAccessproxyApiGatewayRealserverSshHostKeyOutput() FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput) ToFirewallAccessproxyApiGatewayRealserverSshHostKeyOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput {
	return o
}

// Server host key name.
func (o FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewayRealserverSshHostKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGatewayRealserverSshHostKey)(nil)).Elem()
}

func (o FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput) ToFirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput() FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput) ToFirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxyApiGatewayRealserverSshHostKey {
		return vs[0].([]FirewallAccessproxyApiGatewayRealserverSshHostKey)[vs[1].(int)]
	}).(FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput)
}

type FirewallAccessproxyApiGatewaySslCipherSuite struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions *string `pulumi:"versions"`
}

// FirewallAccessproxyApiGatewaySslCipherSuiteInput is an input type that accepts FirewallAccessproxyApiGatewaySslCipherSuiteArgs and FirewallAccessproxyApiGatewaySslCipherSuiteOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGatewaySslCipherSuiteInput` via:
//
//	FirewallAccessproxyApiGatewaySslCipherSuiteArgs{...}
type FirewallAccessproxyApiGatewaySslCipherSuiteInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGatewaySslCipherSuiteOutput() FirewallAccessproxyApiGatewaySslCipherSuiteOutput
	ToFirewallAccessproxyApiGatewaySslCipherSuiteOutputWithContext(context.Context) FirewallAccessproxyApiGatewaySslCipherSuiteOutput
}

type FirewallAccessproxyApiGatewaySslCipherSuiteArgs struct {
	// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (FirewallAccessproxyApiGatewaySslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGatewaySslCipherSuite)(nil)).Elem()
}

func (i FirewallAccessproxyApiGatewaySslCipherSuiteArgs) ToFirewallAccessproxyApiGatewaySslCipherSuiteOutput() FirewallAccessproxyApiGatewaySslCipherSuiteOutput {
	return i.ToFirewallAccessproxyApiGatewaySslCipherSuiteOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGatewaySslCipherSuiteArgs) ToFirewallAccessproxyApiGatewaySslCipherSuiteOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewaySslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGatewaySslCipherSuiteOutput)
}

// FirewallAccessproxyApiGatewaySslCipherSuiteArrayInput is an input type that accepts FirewallAccessproxyApiGatewaySslCipherSuiteArray and FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyApiGatewaySslCipherSuiteArrayInput` via:
//
//	FirewallAccessproxyApiGatewaySslCipherSuiteArray{ FirewallAccessproxyApiGatewaySslCipherSuiteArgs{...} }
type FirewallAccessproxyApiGatewaySslCipherSuiteArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput() FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput
	ToFirewallAccessproxyApiGatewaySslCipherSuiteArrayOutputWithContext(context.Context) FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput
}

type FirewallAccessproxyApiGatewaySslCipherSuiteArray []FirewallAccessproxyApiGatewaySslCipherSuiteInput

func (FirewallAccessproxyApiGatewaySslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGatewaySslCipherSuite)(nil)).Elem()
}

func (i FirewallAccessproxyApiGatewaySslCipherSuiteArray) ToFirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput() FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput {
	return i.ToFirewallAccessproxyApiGatewaySslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyApiGatewaySslCipherSuiteArray) ToFirewallAccessproxyApiGatewaySslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput)
}

type FirewallAccessproxyApiGatewaySslCipherSuiteOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGatewaySslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxyApiGatewaySslCipherSuite)(nil)).Elem()
}

func (o FirewallAccessproxyApiGatewaySslCipherSuiteOutput) ToFirewallAccessproxyApiGatewaySslCipherSuiteOutput() FirewallAccessproxyApiGatewaySslCipherSuiteOutput {
	return o
}

func (o FirewallAccessproxyApiGatewaySslCipherSuiteOutput) ToFirewallAccessproxyApiGatewaySslCipherSuiteOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewaySslCipherSuiteOutput {
	return o
}

// Cipher suite name. Valid values: `TLS-AES-128-GCM-SHA256`, `TLS-AES-256-GCM-SHA384`, `TLS-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-DHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-DHE-RSA-WITH-AES-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA`, `TLS-DHE-DSS-WITH-AES-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-128-GCM-SHA256`, `TLS-DHE-DSS-WITH-AES-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA`, `TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-AES-128-CBC-SHA`, `TLS-RSA-WITH-AES-256-CBC-SHA`, `TLS-RSA-WITH-AES-128-CBC-SHA256`, `TLS-RSA-WITH-AES-128-GCM-SHA256`, `TLS-RSA-WITH-AES-256-CBC-SHA256`, `TLS-RSA-WITH-AES-256-GCM-SHA384`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA`, `TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256`, `TLS-DHE-RSA-WITH-SEED-CBC-SHA`, `TLS-DHE-DSS-WITH-SEED-CBC-SHA`, `TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256`, `TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384`, `TLS-RSA-WITH-SEED-CBC-SHA`, `TLS-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256`, `TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384`, `TLS-ECDHE-RSA-WITH-RC4-128-SHA`, `TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-3DES-EDE-CBC-SHA`, `TLS-RSA-WITH-RC4-128-MD5`, `TLS-RSA-WITH-RC4-128-SHA`, `TLS-DHE-RSA-WITH-DES-CBC-SHA`, `TLS-DHE-DSS-WITH-DES-CBC-SHA`, `TLS-RSA-WITH-DES-CBC-SHA`.
func (o FirewallAccessproxyApiGatewaySslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewaySslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o FirewallAccessproxyApiGatewaySslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewaySslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with. Valid values: `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallAccessproxyApiGatewaySslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxyApiGatewaySslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxyApiGatewaySslCipherSuite)(nil)).Elem()
}

func (o FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput) ToFirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput() FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput) ToFirewallAccessproxyApiGatewaySslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput {
	return o
}

func (o FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyApiGatewaySslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxyApiGatewaySslCipherSuite {
		return vs[0].([]FirewallAccessproxyApiGatewaySslCipherSuite)[vs[1].(int)]
	}).(FirewallAccessproxyApiGatewaySslCipherSuiteOutput)
}

type FirewallAccessproxysshclientcertCertExtension struct {
	// Critical option. Valid values: `no`, `yes`.
	Critical *string `pulumi:"critical"`
	// Data of certificate extension.
	Data *string `pulumi:"data"`
	// Name of certificate extension.
	Name *string `pulumi:"name"`
	// Type of certificate extension. Valid values: `fixed`, `user`.
	Type *string `pulumi:"type"`
}

// FirewallAccessproxysshclientcertCertExtensionInput is an input type that accepts FirewallAccessproxysshclientcertCertExtensionArgs and FirewallAccessproxysshclientcertCertExtensionOutput values.
// You can construct a concrete instance of `FirewallAccessproxysshclientcertCertExtensionInput` via:
//
//	FirewallAccessproxysshclientcertCertExtensionArgs{...}
type FirewallAccessproxysshclientcertCertExtensionInput interface {
	pulumi.Input

	ToFirewallAccessproxysshclientcertCertExtensionOutput() FirewallAccessproxysshclientcertCertExtensionOutput
	ToFirewallAccessproxysshclientcertCertExtensionOutputWithContext(context.Context) FirewallAccessproxysshclientcertCertExtensionOutput
}

type FirewallAccessproxysshclientcertCertExtensionArgs struct {
	// Critical option. Valid values: `no`, `yes`.
	Critical pulumi.StringPtrInput `pulumi:"critical"`
	// Data of certificate extension.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Name of certificate extension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of certificate extension. Valid values: `fixed`, `user`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallAccessproxysshclientcertCertExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxysshclientcertCertExtension)(nil)).Elem()
}

func (i FirewallAccessproxysshclientcertCertExtensionArgs) ToFirewallAccessproxysshclientcertCertExtensionOutput() FirewallAccessproxysshclientcertCertExtensionOutput {
	return i.ToFirewallAccessproxysshclientcertCertExtensionOutputWithContext(context.Background())
}

func (i FirewallAccessproxysshclientcertCertExtensionArgs) ToFirewallAccessproxysshclientcertCertExtensionOutputWithContext(ctx context.Context) FirewallAccessproxysshclientcertCertExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxysshclientcertCertExtensionOutput)
}

// FirewallAccessproxysshclientcertCertExtensionArrayInput is an input type that accepts FirewallAccessproxysshclientcertCertExtensionArray and FirewallAccessproxysshclientcertCertExtensionArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxysshclientcertCertExtensionArrayInput` via:
//
//	FirewallAccessproxysshclientcertCertExtensionArray{ FirewallAccessproxysshclientcertCertExtensionArgs{...} }
type FirewallAccessproxysshclientcertCertExtensionArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxysshclientcertCertExtensionArrayOutput() FirewallAccessproxysshclientcertCertExtensionArrayOutput
	ToFirewallAccessproxysshclientcertCertExtensionArrayOutputWithContext(context.Context) FirewallAccessproxysshclientcertCertExtensionArrayOutput
}

type FirewallAccessproxysshclientcertCertExtensionArray []FirewallAccessproxysshclientcertCertExtensionInput

func (FirewallAccessproxysshclientcertCertExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxysshclientcertCertExtension)(nil)).Elem()
}

func (i FirewallAccessproxysshclientcertCertExtensionArray) ToFirewallAccessproxysshclientcertCertExtensionArrayOutput() FirewallAccessproxysshclientcertCertExtensionArrayOutput {
	return i.ToFirewallAccessproxysshclientcertCertExtensionArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxysshclientcertCertExtensionArray) ToFirewallAccessproxysshclientcertCertExtensionArrayOutputWithContext(ctx context.Context) FirewallAccessproxysshclientcertCertExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxysshclientcertCertExtensionArrayOutput)
}

type FirewallAccessproxysshclientcertCertExtensionOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxysshclientcertCertExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAccessproxysshclientcertCertExtension)(nil)).Elem()
}

func (o FirewallAccessproxysshclientcertCertExtensionOutput) ToFirewallAccessproxysshclientcertCertExtensionOutput() FirewallAccessproxysshclientcertCertExtensionOutput {
	return o
}

func (o FirewallAccessproxysshclientcertCertExtensionOutput) ToFirewallAccessproxysshclientcertCertExtensionOutputWithContext(ctx context.Context) FirewallAccessproxysshclientcertCertExtensionOutput {
	return o
}

// Critical option. Valid values: `no`, `yes`.
func (o FirewallAccessproxysshclientcertCertExtensionOutput) Critical() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxysshclientcertCertExtension) *string { return v.Critical }).(pulumi.StringPtrOutput)
}

// Data of certificate extension.
func (o FirewallAccessproxysshclientcertCertExtensionOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxysshclientcertCertExtension) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Name of certificate extension.
func (o FirewallAccessproxysshclientcertCertExtensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxysshclientcertCertExtension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of certificate extension. Valid values: `fixed`, `user`.
func (o FirewallAccessproxysshclientcertCertExtensionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAccessproxysshclientcertCertExtension) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallAccessproxysshclientcertCertExtensionArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxysshclientcertCertExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAccessproxysshclientcertCertExtension)(nil)).Elem()
}

func (o FirewallAccessproxysshclientcertCertExtensionArrayOutput) ToFirewallAccessproxysshclientcertCertExtensionArrayOutput() FirewallAccessproxysshclientcertCertExtensionArrayOutput {
	return o
}

func (o FirewallAccessproxysshclientcertCertExtensionArrayOutput) ToFirewallAccessproxysshclientcertCertExtensionArrayOutputWithContext(ctx context.Context) FirewallAccessproxysshclientcertCertExtensionArrayOutput {
	return o
}

func (o FirewallAccessproxysshclientcertCertExtensionArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxysshclientcertCertExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAccessproxysshclientcertCertExtension {
		return vs[0].([]FirewallAccessproxysshclientcertCertExtension)[vs[1].(int)]
	}).(FirewallAccessproxysshclientcertCertExtensionOutput)
}

type FirewallAddress6List struct {
	// IP.
	Ip *string `pulumi:"ip"`
}

// FirewallAddress6ListInput is an input type that accepts FirewallAddress6ListArgs and FirewallAddress6ListOutput values.
// You can construct a concrete instance of `FirewallAddress6ListInput` via:
//
//	FirewallAddress6ListArgs{...}
type FirewallAddress6ListInput interface {
	pulumi.Input

	ToFirewallAddress6ListOutput() FirewallAddress6ListOutput
	ToFirewallAddress6ListOutputWithContext(context.Context) FirewallAddress6ListOutput
}

type FirewallAddress6ListArgs struct {
	// IP.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (FirewallAddress6ListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6List)(nil)).Elem()
}

func (i FirewallAddress6ListArgs) ToFirewallAddress6ListOutput() FirewallAddress6ListOutput {
	return i.ToFirewallAddress6ListOutputWithContext(context.Background())
}

func (i FirewallAddress6ListArgs) ToFirewallAddress6ListOutputWithContext(ctx context.Context) FirewallAddress6ListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6ListOutput)
}

// FirewallAddress6ListArrayInput is an input type that accepts FirewallAddress6ListArray and FirewallAddress6ListArrayOutput values.
// You can construct a concrete instance of `FirewallAddress6ListArrayInput` via:
//
//	FirewallAddress6ListArray{ FirewallAddress6ListArgs{...} }
type FirewallAddress6ListArrayInput interface {
	pulumi.Input

	ToFirewallAddress6ListArrayOutput() FirewallAddress6ListArrayOutput
	ToFirewallAddress6ListArrayOutputWithContext(context.Context) FirewallAddress6ListArrayOutput
}

type FirewallAddress6ListArray []FirewallAddress6ListInput

func (FirewallAddress6ListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6List)(nil)).Elem()
}

func (i FirewallAddress6ListArray) ToFirewallAddress6ListArrayOutput() FirewallAddress6ListArrayOutput {
	return i.ToFirewallAddress6ListArrayOutputWithContext(context.Background())
}

func (i FirewallAddress6ListArray) ToFirewallAddress6ListArrayOutputWithContext(ctx context.Context) FirewallAddress6ListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6ListArrayOutput)
}

type FirewallAddress6ListOutput struct{ *pulumi.OutputState }

func (FirewallAddress6ListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6List)(nil)).Elem()
}

func (o FirewallAddress6ListOutput) ToFirewallAddress6ListOutput() FirewallAddress6ListOutput {
	return o
}

func (o FirewallAddress6ListOutput) ToFirewallAddress6ListOutputWithContext(ctx context.Context) FirewallAddress6ListOutput {
	return o
}

// IP.
func (o FirewallAddress6ListOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6List) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type FirewallAddress6ListArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddress6ListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6List)(nil)).Elem()
}

func (o FirewallAddress6ListArrayOutput) ToFirewallAddress6ListArrayOutput() FirewallAddress6ListArrayOutput {
	return o
}

func (o FirewallAddress6ListArrayOutput) ToFirewallAddress6ListArrayOutputWithContext(ctx context.Context) FirewallAddress6ListArrayOutput {
	return o
}

func (o FirewallAddress6ListArrayOutput) Index(i pulumi.IntInput) FirewallAddress6ListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddress6List {
		return vs[0].([]FirewallAddress6List)[vs[1].(int)]
	}).(FirewallAddress6ListOutput)
}

type FirewallAddress6Macaddr struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr *string `pulumi:"macaddr"`
}

// FirewallAddress6MacaddrInput is an input type that accepts FirewallAddress6MacaddrArgs and FirewallAddress6MacaddrOutput values.
// You can construct a concrete instance of `FirewallAddress6MacaddrInput` via:
//
//	FirewallAddress6MacaddrArgs{...}
type FirewallAddress6MacaddrInput interface {
	pulumi.Input

	ToFirewallAddress6MacaddrOutput() FirewallAddress6MacaddrOutput
	ToFirewallAddress6MacaddrOutputWithContext(context.Context) FirewallAddress6MacaddrOutput
}

type FirewallAddress6MacaddrArgs struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr pulumi.StringPtrInput `pulumi:"macaddr"`
}

func (FirewallAddress6MacaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6Macaddr)(nil)).Elem()
}

func (i FirewallAddress6MacaddrArgs) ToFirewallAddress6MacaddrOutput() FirewallAddress6MacaddrOutput {
	return i.ToFirewallAddress6MacaddrOutputWithContext(context.Background())
}

func (i FirewallAddress6MacaddrArgs) ToFirewallAddress6MacaddrOutputWithContext(ctx context.Context) FirewallAddress6MacaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6MacaddrOutput)
}

// FirewallAddress6MacaddrArrayInput is an input type that accepts FirewallAddress6MacaddrArray and FirewallAddress6MacaddrArrayOutput values.
// You can construct a concrete instance of `FirewallAddress6MacaddrArrayInput` via:
//
//	FirewallAddress6MacaddrArray{ FirewallAddress6MacaddrArgs{...} }
type FirewallAddress6MacaddrArrayInput interface {
	pulumi.Input

	ToFirewallAddress6MacaddrArrayOutput() FirewallAddress6MacaddrArrayOutput
	ToFirewallAddress6MacaddrArrayOutputWithContext(context.Context) FirewallAddress6MacaddrArrayOutput
}

type FirewallAddress6MacaddrArray []FirewallAddress6MacaddrInput

func (FirewallAddress6MacaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6Macaddr)(nil)).Elem()
}

func (i FirewallAddress6MacaddrArray) ToFirewallAddress6MacaddrArrayOutput() FirewallAddress6MacaddrArrayOutput {
	return i.ToFirewallAddress6MacaddrArrayOutputWithContext(context.Background())
}

func (i FirewallAddress6MacaddrArray) ToFirewallAddress6MacaddrArrayOutputWithContext(ctx context.Context) FirewallAddress6MacaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6MacaddrArrayOutput)
}

type FirewallAddress6MacaddrOutput struct{ *pulumi.OutputState }

func (FirewallAddress6MacaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6Macaddr)(nil)).Elem()
}

func (o FirewallAddress6MacaddrOutput) ToFirewallAddress6MacaddrOutput() FirewallAddress6MacaddrOutput {
	return o
}

func (o FirewallAddress6MacaddrOutput) ToFirewallAddress6MacaddrOutputWithContext(ctx context.Context) FirewallAddress6MacaddrOutput {
	return o
}

// MAC address ranges <start>[-<end>] separated by space.
func (o FirewallAddress6MacaddrOutput) Macaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6Macaddr) *string { return v.Macaddr }).(pulumi.StringPtrOutput)
}

type FirewallAddress6MacaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddress6MacaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6Macaddr)(nil)).Elem()
}

func (o FirewallAddress6MacaddrArrayOutput) ToFirewallAddress6MacaddrArrayOutput() FirewallAddress6MacaddrArrayOutput {
	return o
}

func (o FirewallAddress6MacaddrArrayOutput) ToFirewallAddress6MacaddrArrayOutputWithContext(ctx context.Context) FirewallAddress6MacaddrArrayOutput {
	return o
}

func (o FirewallAddress6MacaddrArrayOutput) Index(i pulumi.IntInput) FirewallAddress6MacaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddress6Macaddr {
		return vs[0].([]FirewallAddress6Macaddr)[vs[1].(int)]
	}).(FirewallAddress6MacaddrOutput)
}

type FirewallAddress6SubnetSegment struct {
	// Name.
	Name *string `pulumi:"name"`
	// Subnet segment type. Valid values: `any`, `specific`.
	Type *string `pulumi:"type"`
	// Subnet segment value.
	Value *string `pulumi:"value"`
}

// FirewallAddress6SubnetSegmentInput is an input type that accepts FirewallAddress6SubnetSegmentArgs and FirewallAddress6SubnetSegmentOutput values.
// You can construct a concrete instance of `FirewallAddress6SubnetSegmentInput` via:
//
//	FirewallAddress6SubnetSegmentArgs{...}
type FirewallAddress6SubnetSegmentInput interface {
	pulumi.Input

	ToFirewallAddress6SubnetSegmentOutput() FirewallAddress6SubnetSegmentOutput
	ToFirewallAddress6SubnetSegmentOutputWithContext(context.Context) FirewallAddress6SubnetSegmentOutput
}

type FirewallAddress6SubnetSegmentArgs struct {
	// Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subnet segment type. Valid values: `any`, `specific`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Subnet segment value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (FirewallAddress6SubnetSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6SubnetSegment)(nil)).Elem()
}

func (i FirewallAddress6SubnetSegmentArgs) ToFirewallAddress6SubnetSegmentOutput() FirewallAddress6SubnetSegmentOutput {
	return i.ToFirewallAddress6SubnetSegmentOutputWithContext(context.Background())
}

func (i FirewallAddress6SubnetSegmentArgs) ToFirewallAddress6SubnetSegmentOutputWithContext(ctx context.Context) FirewallAddress6SubnetSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6SubnetSegmentOutput)
}

// FirewallAddress6SubnetSegmentArrayInput is an input type that accepts FirewallAddress6SubnetSegmentArray and FirewallAddress6SubnetSegmentArrayOutput values.
// You can construct a concrete instance of `FirewallAddress6SubnetSegmentArrayInput` via:
//
//	FirewallAddress6SubnetSegmentArray{ FirewallAddress6SubnetSegmentArgs{...} }
type FirewallAddress6SubnetSegmentArrayInput interface {
	pulumi.Input

	ToFirewallAddress6SubnetSegmentArrayOutput() FirewallAddress6SubnetSegmentArrayOutput
	ToFirewallAddress6SubnetSegmentArrayOutputWithContext(context.Context) FirewallAddress6SubnetSegmentArrayOutput
}

type FirewallAddress6SubnetSegmentArray []FirewallAddress6SubnetSegmentInput

func (FirewallAddress6SubnetSegmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6SubnetSegment)(nil)).Elem()
}

func (i FirewallAddress6SubnetSegmentArray) ToFirewallAddress6SubnetSegmentArrayOutput() FirewallAddress6SubnetSegmentArrayOutput {
	return i.ToFirewallAddress6SubnetSegmentArrayOutputWithContext(context.Background())
}

func (i FirewallAddress6SubnetSegmentArray) ToFirewallAddress6SubnetSegmentArrayOutputWithContext(ctx context.Context) FirewallAddress6SubnetSegmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6SubnetSegmentArrayOutput)
}

type FirewallAddress6SubnetSegmentOutput struct{ *pulumi.OutputState }

func (FirewallAddress6SubnetSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6SubnetSegment)(nil)).Elem()
}

func (o FirewallAddress6SubnetSegmentOutput) ToFirewallAddress6SubnetSegmentOutput() FirewallAddress6SubnetSegmentOutput {
	return o
}

func (o FirewallAddress6SubnetSegmentOutput) ToFirewallAddress6SubnetSegmentOutputWithContext(ctx context.Context) FirewallAddress6SubnetSegmentOutput {
	return o
}

// Name.
func (o FirewallAddress6SubnetSegmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6SubnetSegment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subnet segment type. Valid values: `any`, `specific`.
func (o FirewallAddress6SubnetSegmentOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6SubnetSegment) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Subnet segment value.
func (o FirewallAddress6SubnetSegmentOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6SubnetSegment) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type FirewallAddress6SubnetSegmentArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddress6SubnetSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6SubnetSegment)(nil)).Elem()
}

func (o FirewallAddress6SubnetSegmentArrayOutput) ToFirewallAddress6SubnetSegmentArrayOutput() FirewallAddress6SubnetSegmentArrayOutput {
	return o
}

func (o FirewallAddress6SubnetSegmentArrayOutput) ToFirewallAddress6SubnetSegmentArrayOutputWithContext(ctx context.Context) FirewallAddress6SubnetSegmentArrayOutput {
	return o
}

func (o FirewallAddress6SubnetSegmentArrayOutput) Index(i pulumi.IntInput) FirewallAddress6SubnetSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddress6SubnetSegment {
		return vs[0].([]FirewallAddress6SubnetSegment)[vs[1].(int)]
	}).(FirewallAddress6SubnetSegmentOutput)
}

type FirewallAddress6Tagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []FirewallAddress6TaggingTag `pulumi:"tags"`
}

// FirewallAddress6TaggingInput is an input type that accepts FirewallAddress6TaggingArgs and FirewallAddress6TaggingOutput values.
// You can construct a concrete instance of `FirewallAddress6TaggingInput` via:
//
//	FirewallAddress6TaggingArgs{...}
type FirewallAddress6TaggingInput interface {
	pulumi.Input

	ToFirewallAddress6TaggingOutput() FirewallAddress6TaggingOutput
	ToFirewallAddress6TaggingOutputWithContext(context.Context) FirewallAddress6TaggingOutput
}

type FirewallAddress6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags FirewallAddress6TaggingTagArrayInput `pulumi:"tags"`
}

func (FirewallAddress6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6Tagging)(nil)).Elem()
}

func (i FirewallAddress6TaggingArgs) ToFirewallAddress6TaggingOutput() FirewallAddress6TaggingOutput {
	return i.ToFirewallAddress6TaggingOutputWithContext(context.Background())
}

func (i FirewallAddress6TaggingArgs) ToFirewallAddress6TaggingOutputWithContext(ctx context.Context) FirewallAddress6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6TaggingOutput)
}

// FirewallAddress6TaggingArrayInput is an input type that accepts FirewallAddress6TaggingArray and FirewallAddress6TaggingArrayOutput values.
// You can construct a concrete instance of `FirewallAddress6TaggingArrayInput` via:
//
//	FirewallAddress6TaggingArray{ FirewallAddress6TaggingArgs{...} }
type FirewallAddress6TaggingArrayInput interface {
	pulumi.Input

	ToFirewallAddress6TaggingArrayOutput() FirewallAddress6TaggingArrayOutput
	ToFirewallAddress6TaggingArrayOutputWithContext(context.Context) FirewallAddress6TaggingArrayOutput
}

type FirewallAddress6TaggingArray []FirewallAddress6TaggingInput

func (FirewallAddress6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6Tagging)(nil)).Elem()
}

func (i FirewallAddress6TaggingArray) ToFirewallAddress6TaggingArrayOutput() FirewallAddress6TaggingArrayOutput {
	return i.ToFirewallAddress6TaggingArrayOutputWithContext(context.Background())
}

func (i FirewallAddress6TaggingArray) ToFirewallAddress6TaggingArrayOutputWithContext(ctx context.Context) FirewallAddress6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6TaggingArrayOutput)
}

type FirewallAddress6TaggingOutput struct{ *pulumi.OutputState }

func (FirewallAddress6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6Tagging)(nil)).Elem()
}

func (o FirewallAddress6TaggingOutput) ToFirewallAddress6TaggingOutput() FirewallAddress6TaggingOutput {
	return o
}

func (o FirewallAddress6TaggingOutput) ToFirewallAddress6TaggingOutputWithContext(ctx context.Context) FirewallAddress6TaggingOutput {
	return o
}

// Tag category.
func (o FirewallAddress6TaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6Tagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o FirewallAddress6TaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6Tagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o FirewallAddress6TaggingOutput) Tags() FirewallAddress6TaggingTagArrayOutput {
	return o.ApplyT(func(v FirewallAddress6Tagging) []FirewallAddress6TaggingTag { return v.Tags }).(FirewallAddress6TaggingTagArrayOutput)
}

type FirewallAddress6TaggingArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddress6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6Tagging)(nil)).Elem()
}

func (o FirewallAddress6TaggingArrayOutput) ToFirewallAddress6TaggingArrayOutput() FirewallAddress6TaggingArrayOutput {
	return o
}

func (o FirewallAddress6TaggingArrayOutput) ToFirewallAddress6TaggingArrayOutputWithContext(ctx context.Context) FirewallAddress6TaggingArrayOutput {
	return o
}

func (o FirewallAddress6TaggingArrayOutput) Index(i pulumi.IntInput) FirewallAddress6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddress6Tagging {
		return vs[0].([]FirewallAddress6Tagging)[vs[1].(int)]
	}).(FirewallAddress6TaggingOutput)
}

type FirewallAddress6TaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// FirewallAddress6TaggingTagInput is an input type that accepts FirewallAddress6TaggingTagArgs and FirewallAddress6TaggingTagOutput values.
// You can construct a concrete instance of `FirewallAddress6TaggingTagInput` via:
//
//	FirewallAddress6TaggingTagArgs{...}
type FirewallAddress6TaggingTagInput interface {
	pulumi.Input

	ToFirewallAddress6TaggingTagOutput() FirewallAddress6TaggingTagOutput
	ToFirewallAddress6TaggingTagOutputWithContext(context.Context) FirewallAddress6TaggingTagOutput
}

type FirewallAddress6TaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAddress6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6TaggingTag)(nil)).Elem()
}

func (i FirewallAddress6TaggingTagArgs) ToFirewallAddress6TaggingTagOutput() FirewallAddress6TaggingTagOutput {
	return i.ToFirewallAddress6TaggingTagOutputWithContext(context.Background())
}

func (i FirewallAddress6TaggingTagArgs) ToFirewallAddress6TaggingTagOutputWithContext(ctx context.Context) FirewallAddress6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6TaggingTagOutput)
}

// FirewallAddress6TaggingTagArrayInput is an input type that accepts FirewallAddress6TaggingTagArray and FirewallAddress6TaggingTagArrayOutput values.
// You can construct a concrete instance of `FirewallAddress6TaggingTagArrayInput` via:
//
//	FirewallAddress6TaggingTagArray{ FirewallAddress6TaggingTagArgs{...} }
type FirewallAddress6TaggingTagArrayInput interface {
	pulumi.Input

	ToFirewallAddress6TaggingTagArrayOutput() FirewallAddress6TaggingTagArrayOutput
	ToFirewallAddress6TaggingTagArrayOutputWithContext(context.Context) FirewallAddress6TaggingTagArrayOutput
}

type FirewallAddress6TaggingTagArray []FirewallAddress6TaggingTagInput

func (FirewallAddress6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6TaggingTag)(nil)).Elem()
}

func (i FirewallAddress6TaggingTagArray) ToFirewallAddress6TaggingTagArrayOutput() FirewallAddress6TaggingTagArrayOutput {
	return i.ToFirewallAddress6TaggingTagArrayOutputWithContext(context.Background())
}

func (i FirewallAddress6TaggingTagArray) ToFirewallAddress6TaggingTagArrayOutputWithContext(ctx context.Context) FirewallAddress6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6TaggingTagArrayOutput)
}

type FirewallAddress6TaggingTagOutput struct{ *pulumi.OutputState }

func (FirewallAddress6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6TaggingTag)(nil)).Elem()
}

func (o FirewallAddress6TaggingTagOutput) ToFirewallAddress6TaggingTagOutput() FirewallAddress6TaggingTagOutput {
	return o
}

func (o FirewallAddress6TaggingTagOutput) ToFirewallAddress6TaggingTagOutputWithContext(ctx context.Context) FirewallAddress6TaggingTagOutput {
	return o
}

// Tag name.
func (o FirewallAddress6TaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6TaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAddress6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddress6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6TaggingTag)(nil)).Elem()
}

func (o FirewallAddress6TaggingTagArrayOutput) ToFirewallAddress6TaggingTagArrayOutput() FirewallAddress6TaggingTagArrayOutput {
	return o
}

func (o FirewallAddress6TaggingTagArrayOutput) ToFirewallAddress6TaggingTagArrayOutputWithContext(ctx context.Context) FirewallAddress6TaggingTagArrayOutput {
	return o
}

func (o FirewallAddress6TaggingTagArrayOutput) Index(i pulumi.IntInput) FirewallAddress6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddress6TaggingTag {
		return vs[0].([]FirewallAddress6TaggingTag)[vs[1].(int)]
	}).(FirewallAddress6TaggingTagOutput)
}

type FirewallAddress6templateSubnetSegment struct {
	// Number of bits.
	Bits *int `pulumi:"bits"`
	// Enable/disable exclusive value. Valid values: `enable`, `disable`.
	Exclusive *string `pulumi:"exclusive"`
	// Subnet segment ID.
	Id *int `pulumi:"id"`
	// Subnet segment name.
	Name *string `pulumi:"name"`
	// Subnet segment values. The structure of `values` block is documented below.
	Values []FirewallAddress6templateSubnetSegmentValue `pulumi:"values"`
}

// FirewallAddress6templateSubnetSegmentInput is an input type that accepts FirewallAddress6templateSubnetSegmentArgs and FirewallAddress6templateSubnetSegmentOutput values.
// You can construct a concrete instance of `FirewallAddress6templateSubnetSegmentInput` via:
//
//	FirewallAddress6templateSubnetSegmentArgs{...}
type FirewallAddress6templateSubnetSegmentInput interface {
	pulumi.Input

	ToFirewallAddress6templateSubnetSegmentOutput() FirewallAddress6templateSubnetSegmentOutput
	ToFirewallAddress6templateSubnetSegmentOutputWithContext(context.Context) FirewallAddress6templateSubnetSegmentOutput
}

type FirewallAddress6templateSubnetSegmentArgs struct {
	// Number of bits.
	Bits pulumi.IntPtrInput `pulumi:"bits"`
	// Enable/disable exclusive value. Valid values: `enable`, `disable`.
	Exclusive pulumi.StringPtrInput `pulumi:"exclusive"`
	// Subnet segment ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Subnet segment name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subnet segment values. The structure of `values` block is documented below.
	Values FirewallAddress6templateSubnetSegmentValueArrayInput `pulumi:"values"`
}

func (FirewallAddress6templateSubnetSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6templateSubnetSegment)(nil)).Elem()
}

func (i FirewallAddress6templateSubnetSegmentArgs) ToFirewallAddress6templateSubnetSegmentOutput() FirewallAddress6templateSubnetSegmentOutput {
	return i.ToFirewallAddress6templateSubnetSegmentOutputWithContext(context.Background())
}

func (i FirewallAddress6templateSubnetSegmentArgs) ToFirewallAddress6templateSubnetSegmentOutputWithContext(ctx context.Context) FirewallAddress6templateSubnetSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6templateSubnetSegmentOutput)
}

// FirewallAddress6templateSubnetSegmentArrayInput is an input type that accepts FirewallAddress6templateSubnetSegmentArray and FirewallAddress6templateSubnetSegmentArrayOutput values.
// You can construct a concrete instance of `FirewallAddress6templateSubnetSegmentArrayInput` via:
//
//	FirewallAddress6templateSubnetSegmentArray{ FirewallAddress6templateSubnetSegmentArgs{...} }
type FirewallAddress6templateSubnetSegmentArrayInput interface {
	pulumi.Input

	ToFirewallAddress6templateSubnetSegmentArrayOutput() FirewallAddress6templateSubnetSegmentArrayOutput
	ToFirewallAddress6templateSubnetSegmentArrayOutputWithContext(context.Context) FirewallAddress6templateSubnetSegmentArrayOutput
}

type FirewallAddress6templateSubnetSegmentArray []FirewallAddress6templateSubnetSegmentInput

func (FirewallAddress6templateSubnetSegmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6templateSubnetSegment)(nil)).Elem()
}

func (i FirewallAddress6templateSubnetSegmentArray) ToFirewallAddress6templateSubnetSegmentArrayOutput() FirewallAddress6templateSubnetSegmentArrayOutput {
	return i.ToFirewallAddress6templateSubnetSegmentArrayOutputWithContext(context.Background())
}

func (i FirewallAddress6templateSubnetSegmentArray) ToFirewallAddress6templateSubnetSegmentArrayOutputWithContext(ctx context.Context) FirewallAddress6templateSubnetSegmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6templateSubnetSegmentArrayOutput)
}

type FirewallAddress6templateSubnetSegmentOutput struct{ *pulumi.OutputState }

func (FirewallAddress6templateSubnetSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6templateSubnetSegment)(nil)).Elem()
}

func (o FirewallAddress6templateSubnetSegmentOutput) ToFirewallAddress6templateSubnetSegmentOutput() FirewallAddress6templateSubnetSegmentOutput {
	return o
}

func (o FirewallAddress6templateSubnetSegmentOutput) ToFirewallAddress6templateSubnetSegmentOutputWithContext(ctx context.Context) FirewallAddress6templateSubnetSegmentOutput {
	return o
}

// Number of bits.
func (o FirewallAddress6templateSubnetSegmentOutput) Bits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAddress6templateSubnetSegment) *int { return v.Bits }).(pulumi.IntPtrOutput)
}

// Enable/disable exclusive value. Valid values: `enable`, `disable`.
func (o FirewallAddress6templateSubnetSegmentOutput) Exclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6templateSubnetSegment) *string { return v.Exclusive }).(pulumi.StringPtrOutput)
}

// Subnet segment ID.
func (o FirewallAddress6templateSubnetSegmentOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallAddress6templateSubnetSegment) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Subnet segment name.
func (o FirewallAddress6templateSubnetSegmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6templateSubnetSegment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subnet segment values. The structure of `values` block is documented below.
func (o FirewallAddress6templateSubnetSegmentOutput) Values() FirewallAddress6templateSubnetSegmentValueArrayOutput {
	return o.ApplyT(func(v FirewallAddress6templateSubnetSegment) []FirewallAddress6templateSubnetSegmentValue {
		return v.Values
	}).(FirewallAddress6templateSubnetSegmentValueArrayOutput)
}

type FirewallAddress6templateSubnetSegmentArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddress6templateSubnetSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6templateSubnetSegment)(nil)).Elem()
}

func (o FirewallAddress6templateSubnetSegmentArrayOutput) ToFirewallAddress6templateSubnetSegmentArrayOutput() FirewallAddress6templateSubnetSegmentArrayOutput {
	return o
}

func (o FirewallAddress6templateSubnetSegmentArrayOutput) ToFirewallAddress6templateSubnetSegmentArrayOutputWithContext(ctx context.Context) FirewallAddress6templateSubnetSegmentArrayOutput {
	return o
}

func (o FirewallAddress6templateSubnetSegmentArrayOutput) Index(i pulumi.IntInput) FirewallAddress6templateSubnetSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddress6templateSubnetSegment {
		return vs[0].([]FirewallAddress6templateSubnetSegment)[vs[1].(int)]
	}).(FirewallAddress6templateSubnetSegmentOutput)
}

type FirewallAddress6templateSubnetSegmentValue struct {
	// Subnet segment value name.
	Name *string `pulumi:"name"`
	// Subnet segment value.
	Value *string `pulumi:"value"`
}

// FirewallAddress6templateSubnetSegmentValueInput is an input type that accepts FirewallAddress6templateSubnetSegmentValueArgs and FirewallAddress6templateSubnetSegmentValueOutput values.
// You can construct a concrete instance of `FirewallAddress6templateSubnetSegmentValueInput` via:
//
//	FirewallAddress6templateSubnetSegmentValueArgs{...}
type FirewallAddress6templateSubnetSegmentValueInput interface {
	pulumi.Input

	ToFirewallAddress6templateSubnetSegmentValueOutput() FirewallAddress6templateSubnetSegmentValueOutput
	ToFirewallAddress6templateSubnetSegmentValueOutputWithContext(context.Context) FirewallAddress6templateSubnetSegmentValueOutput
}

type FirewallAddress6templateSubnetSegmentValueArgs struct {
	// Subnet segment value name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subnet segment value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (FirewallAddress6templateSubnetSegmentValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (i FirewallAddress6templateSubnetSegmentValueArgs) ToFirewallAddress6templateSubnetSegmentValueOutput() FirewallAddress6templateSubnetSegmentValueOutput {
	return i.ToFirewallAddress6templateSubnetSegmentValueOutputWithContext(context.Background())
}

func (i FirewallAddress6templateSubnetSegmentValueArgs) ToFirewallAddress6templateSubnetSegmentValueOutputWithContext(ctx context.Context) FirewallAddress6templateSubnetSegmentValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6templateSubnetSegmentValueOutput)
}

// FirewallAddress6templateSubnetSegmentValueArrayInput is an input type that accepts FirewallAddress6templateSubnetSegmentValueArray and FirewallAddress6templateSubnetSegmentValueArrayOutput values.
// You can construct a concrete instance of `FirewallAddress6templateSubnetSegmentValueArrayInput` via:
//
//	FirewallAddress6templateSubnetSegmentValueArray{ FirewallAddress6templateSubnetSegmentValueArgs{...} }
type FirewallAddress6templateSubnetSegmentValueArrayInput interface {
	pulumi.Input

	ToFirewallAddress6templateSubnetSegmentValueArrayOutput() FirewallAddress6templateSubnetSegmentValueArrayOutput
	ToFirewallAddress6templateSubnetSegmentValueArrayOutputWithContext(context.Context) FirewallAddress6templateSubnetSegmentValueArrayOutput
}

type FirewallAddress6templateSubnetSegmentValueArray []FirewallAddress6templateSubnetSegmentValueInput

func (FirewallAddress6templateSubnetSegmentValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (i FirewallAddress6templateSubnetSegmentValueArray) ToFirewallAddress6templateSubnetSegmentValueArrayOutput() FirewallAddress6templateSubnetSegmentValueArrayOutput {
	return i.ToFirewallAddress6templateSubnetSegmentValueArrayOutputWithContext(context.Background())
}

func (i FirewallAddress6templateSubnetSegmentValueArray) ToFirewallAddress6templateSubnetSegmentValueArrayOutputWithContext(ctx context.Context) FirewallAddress6templateSubnetSegmentValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddress6templateSubnetSegmentValueArrayOutput)
}

type FirewallAddress6templateSubnetSegmentValueOutput struct{ *pulumi.OutputState }

func (FirewallAddress6templateSubnetSegmentValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (o FirewallAddress6templateSubnetSegmentValueOutput) ToFirewallAddress6templateSubnetSegmentValueOutput() FirewallAddress6templateSubnetSegmentValueOutput {
	return o
}

func (o FirewallAddress6templateSubnetSegmentValueOutput) ToFirewallAddress6templateSubnetSegmentValueOutputWithContext(ctx context.Context) FirewallAddress6templateSubnetSegmentValueOutput {
	return o
}

// Subnet segment value name.
func (o FirewallAddress6templateSubnetSegmentValueOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6templateSubnetSegmentValue) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subnet segment value.
func (o FirewallAddress6templateSubnetSegmentValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddress6templateSubnetSegmentValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type FirewallAddress6templateSubnetSegmentValueArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddress6templateSubnetSegmentValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddress6templateSubnetSegmentValue)(nil)).Elem()
}

func (o FirewallAddress6templateSubnetSegmentValueArrayOutput) ToFirewallAddress6templateSubnetSegmentValueArrayOutput() FirewallAddress6templateSubnetSegmentValueArrayOutput {
	return o
}

func (o FirewallAddress6templateSubnetSegmentValueArrayOutput) ToFirewallAddress6templateSubnetSegmentValueArrayOutputWithContext(ctx context.Context) FirewallAddress6templateSubnetSegmentValueArrayOutput {
	return o
}

func (o FirewallAddress6templateSubnetSegmentValueArrayOutput) Index(i pulumi.IntInput) FirewallAddress6templateSubnetSegmentValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddress6templateSubnetSegmentValue {
		return vs[0].([]FirewallAddress6templateSubnetSegmentValue)[vs[1].(int)]
	}).(FirewallAddress6templateSubnetSegmentValueOutput)
}

type FirewallAddressFssoGroup struct {
	// FSSO group name.
	Name *string `pulumi:"name"`
}

// FirewallAddressFssoGroupInput is an input type that accepts FirewallAddressFssoGroupArgs and FirewallAddressFssoGroupOutput values.
// You can construct a concrete instance of `FirewallAddressFssoGroupInput` via:
//
//	FirewallAddressFssoGroupArgs{...}
type FirewallAddressFssoGroupInput interface {
	pulumi.Input

	ToFirewallAddressFssoGroupOutput() FirewallAddressFssoGroupOutput
	ToFirewallAddressFssoGroupOutputWithContext(context.Context) FirewallAddressFssoGroupOutput
}

type FirewallAddressFssoGroupArgs struct {
	// FSSO group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAddressFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddressFssoGroup)(nil)).Elem()
}

func (i FirewallAddressFssoGroupArgs) ToFirewallAddressFssoGroupOutput() FirewallAddressFssoGroupOutput {
	return i.ToFirewallAddressFssoGroupOutputWithContext(context.Background())
}

func (i FirewallAddressFssoGroupArgs) ToFirewallAddressFssoGroupOutputWithContext(ctx context.Context) FirewallAddressFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddressFssoGroupOutput)
}

// FirewallAddressFssoGroupArrayInput is an input type that accepts FirewallAddressFssoGroupArray and FirewallAddressFssoGroupArrayOutput values.
// You can construct a concrete instance of `FirewallAddressFssoGroupArrayInput` via:
//
//	FirewallAddressFssoGroupArray{ FirewallAddressFssoGroupArgs{...} }
type FirewallAddressFssoGroupArrayInput interface {
	pulumi.Input

	ToFirewallAddressFssoGroupArrayOutput() FirewallAddressFssoGroupArrayOutput
	ToFirewallAddressFssoGroupArrayOutputWithContext(context.Context) FirewallAddressFssoGroupArrayOutput
}

type FirewallAddressFssoGroupArray []FirewallAddressFssoGroupInput

func (FirewallAddressFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddressFssoGroup)(nil)).Elem()
}

func (i FirewallAddressFssoGroupArray) ToFirewallAddressFssoGroupArrayOutput() FirewallAddressFssoGroupArrayOutput {
	return i.ToFirewallAddressFssoGroupArrayOutputWithContext(context.Background())
}

func (i FirewallAddressFssoGroupArray) ToFirewallAddressFssoGroupArrayOutputWithContext(ctx context.Context) FirewallAddressFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddressFssoGroupArrayOutput)
}

type FirewallAddressFssoGroupOutput struct{ *pulumi.OutputState }

func (FirewallAddressFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddressFssoGroup)(nil)).Elem()
}

func (o FirewallAddressFssoGroupOutput) ToFirewallAddressFssoGroupOutput() FirewallAddressFssoGroupOutput {
	return o
}

func (o FirewallAddressFssoGroupOutput) ToFirewallAddressFssoGroupOutputWithContext(ctx context.Context) FirewallAddressFssoGroupOutput {
	return o
}

// FSSO group name.
func (o FirewallAddressFssoGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddressFssoGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAddressFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddressFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddressFssoGroup)(nil)).Elem()
}

func (o FirewallAddressFssoGroupArrayOutput) ToFirewallAddressFssoGroupArrayOutput() FirewallAddressFssoGroupArrayOutput {
	return o
}

func (o FirewallAddressFssoGroupArrayOutput) ToFirewallAddressFssoGroupArrayOutputWithContext(ctx context.Context) FirewallAddressFssoGroupArrayOutput {
	return o
}

func (o FirewallAddressFssoGroupArrayOutput) Index(i pulumi.IntInput) FirewallAddressFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddressFssoGroup {
		return vs[0].([]FirewallAddressFssoGroup)[vs[1].(int)]
	}).(FirewallAddressFssoGroupOutput)
}

type FirewallAddressList struct {
	// IP.
	Ip *string `pulumi:"ip"`
}

// FirewallAddressListInput is an input type that accepts FirewallAddressListArgs and FirewallAddressListOutput values.
// You can construct a concrete instance of `FirewallAddressListInput` via:
//
//	FirewallAddressListArgs{...}
type FirewallAddressListInput interface {
	pulumi.Input

	ToFirewallAddressListOutput() FirewallAddressListOutput
	ToFirewallAddressListOutputWithContext(context.Context) FirewallAddressListOutput
}

type FirewallAddressListArgs struct {
	// IP.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (FirewallAddressListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddressList)(nil)).Elem()
}

func (i FirewallAddressListArgs) ToFirewallAddressListOutput() FirewallAddressListOutput {
	return i.ToFirewallAddressListOutputWithContext(context.Background())
}

func (i FirewallAddressListArgs) ToFirewallAddressListOutputWithContext(ctx context.Context) FirewallAddressListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddressListOutput)
}

// FirewallAddressListArrayInput is an input type that accepts FirewallAddressListArray and FirewallAddressListArrayOutput values.
// You can construct a concrete instance of `FirewallAddressListArrayInput` via:
//
//	FirewallAddressListArray{ FirewallAddressListArgs{...} }
type FirewallAddressListArrayInput interface {
	pulumi.Input

	ToFirewallAddressListArrayOutput() FirewallAddressListArrayOutput
	ToFirewallAddressListArrayOutputWithContext(context.Context) FirewallAddressListArrayOutput
}

type FirewallAddressListArray []FirewallAddressListInput

func (FirewallAddressListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddressList)(nil)).Elem()
}

func (i FirewallAddressListArray) ToFirewallAddressListArrayOutput() FirewallAddressListArrayOutput {
	return i.ToFirewallAddressListArrayOutputWithContext(context.Background())
}

func (i FirewallAddressListArray) ToFirewallAddressListArrayOutputWithContext(ctx context.Context) FirewallAddressListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddressListArrayOutput)
}

type FirewallAddressListOutput struct{ *pulumi.OutputState }

func (FirewallAddressListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddressList)(nil)).Elem()
}

func (o FirewallAddressListOutput) ToFirewallAddressListOutput() FirewallAddressListOutput {
	return o
}

func (o FirewallAddressListOutput) ToFirewallAddressListOutputWithContext(ctx context.Context) FirewallAddressListOutput {
	return o
}

// IP.
func (o FirewallAddressListOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddressList) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type FirewallAddressListArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddressListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddressList)(nil)).Elem()
}

func (o FirewallAddressListArrayOutput) ToFirewallAddressListArrayOutput() FirewallAddressListArrayOutput {
	return o
}

func (o FirewallAddressListArrayOutput) ToFirewallAddressListArrayOutputWithContext(ctx context.Context) FirewallAddressListArrayOutput {
	return o
}

func (o FirewallAddressListArrayOutput) Index(i pulumi.IntInput) FirewallAddressListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddressList {
		return vs[0].([]FirewallAddressList)[vs[1].(int)]
	}).(FirewallAddressListOutput)
}

type FirewallAddressMacaddr struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr *string `pulumi:"macaddr"`
}

// FirewallAddressMacaddrInput is an input type that accepts FirewallAddressMacaddrArgs and FirewallAddressMacaddrOutput values.
// You can construct a concrete instance of `FirewallAddressMacaddrInput` via:
//
//	FirewallAddressMacaddrArgs{...}
type FirewallAddressMacaddrInput interface {
	pulumi.Input

	ToFirewallAddressMacaddrOutput() FirewallAddressMacaddrOutput
	ToFirewallAddressMacaddrOutputWithContext(context.Context) FirewallAddressMacaddrOutput
}

type FirewallAddressMacaddrArgs struct {
	// MAC address ranges <start>[-<end>] separated by space.
	Macaddr pulumi.StringPtrInput `pulumi:"macaddr"`
}

func (FirewallAddressMacaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddressMacaddr)(nil)).Elem()
}

func (i FirewallAddressMacaddrArgs) ToFirewallAddressMacaddrOutput() FirewallAddressMacaddrOutput {
	return i.ToFirewallAddressMacaddrOutputWithContext(context.Background())
}

func (i FirewallAddressMacaddrArgs) ToFirewallAddressMacaddrOutputWithContext(ctx context.Context) FirewallAddressMacaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddressMacaddrOutput)
}

// FirewallAddressMacaddrArrayInput is an input type that accepts FirewallAddressMacaddrArray and FirewallAddressMacaddrArrayOutput values.
// You can construct a concrete instance of `FirewallAddressMacaddrArrayInput` via:
//
//	FirewallAddressMacaddrArray{ FirewallAddressMacaddrArgs{...} }
type FirewallAddressMacaddrArrayInput interface {
	pulumi.Input

	ToFirewallAddressMacaddrArrayOutput() FirewallAddressMacaddrArrayOutput
	ToFirewallAddressMacaddrArrayOutputWithContext(context.Context) FirewallAddressMacaddrArrayOutput
}

type FirewallAddressMacaddrArray []FirewallAddressMacaddrInput

func (FirewallAddressMacaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddressMacaddr)(nil)).Elem()
}

func (i FirewallAddressMacaddrArray) ToFirewallAddressMacaddrArrayOutput() FirewallAddressMacaddrArrayOutput {
	return i.ToFirewallAddressMacaddrArrayOutputWithContext(context.Background())
}

func (i FirewallAddressMacaddrArray) ToFirewallAddressMacaddrArrayOutputWithContext(ctx context.Context) FirewallAddressMacaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddressMacaddrArrayOutput)
}

type FirewallAddressMacaddrOutput struct{ *pulumi.OutputState }

func (FirewallAddressMacaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddressMacaddr)(nil)).Elem()
}

func (o FirewallAddressMacaddrOutput) ToFirewallAddressMacaddrOutput() FirewallAddressMacaddrOutput {
	return o
}

func (o FirewallAddressMacaddrOutput) ToFirewallAddressMacaddrOutputWithContext(ctx context.Context) FirewallAddressMacaddrOutput {
	return o
}

// MAC address ranges <start>[-<end>] separated by space.
func (o FirewallAddressMacaddrOutput) Macaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddressMacaddr) *string { return v.Macaddr }).(pulumi.StringPtrOutput)
}

type FirewallAddressMacaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddressMacaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddressMacaddr)(nil)).Elem()
}

func (o FirewallAddressMacaddrArrayOutput) ToFirewallAddressMacaddrArrayOutput() FirewallAddressMacaddrArrayOutput {
	return o
}

func (o FirewallAddressMacaddrArrayOutput) ToFirewallAddressMacaddrArrayOutputWithContext(ctx context.Context) FirewallAddressMacaddrArrayOutput {
	return o
}

func (o FirewallAddressMacaddrArrayOutput) Index(i pulumi.IntInput) FirewallAddressMacaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddressMacaddr {
		return vs[0].([]FirewallAddressMacaddr)[vs[1].(int)]
	}).(FirewallAddressMacaddrOutput)
}

type FirewallAddressTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []FirewallAddressTaggingTag `pulumi:"tags"`
}

// FirewallAddressTaggingInput is an input type that accepts FirewallAddressTaggingArgs and FirewallAddressTaggingOutput values.
// You can construct a concrete instance of `FirewallAddressTaggingInput` via:
//
//	FirewallAddressTaggingArgs{...}
type FirewallAddressTaggingInput interface {
	pulumi.Input

	ToFirewallAddressTaggingOutput() FirewallAddressTaggingOutput
	ToFirewallAddressTaggingOutputWithContext(context.Context) FirewallAddressTaggingOutput
}

type FirewallAddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags FirewallAddressTaggingTagArrayInput `pulumi:"tags"`
}

func (FirewallAddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddressTagging)(nil)).Elem()
}

func (i FirewallAddressTaggingArgs) ToFirewallAddressTaggingOutput() FirewallAddressTaggingOutput {
	return i.ToFirewallAddressTaggingOutputWithContext(context.Background())
}

func (i FirewallAddressTaggingArgs) ToFirewallAddressTaggingOutputWithContext(ctx context.Context) FirewallAddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddressTaggingOutput)
}

// FirewallAddressTaggingArrayInput is an input type that accepts FirewallAddressTaggingArray and FirewallAddressTaggingArrayOutput values.
// You can construct a concrete instance of `FirewallAddressTaggingArrayInput` via:
//
//	FirewallAddressTaggingArray{ FirewallAddressTaggingArgs{...} }
type FirewallAddressTaggingArrayInput interface {
	pulumi.Input

	ToFirewallAddressTaggingArrayOutput() FirewallAddressTaggingArrayOutput
	ToFirewallAddressTaggingArrayOutputWithContext(context.Context) FirewallAddressTaggingArrayOutput
}

type FirewallAddressTaggingArray []FirewallAddressTaggingInput

func (FirewallAddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddressTagging)(nil)).Elem()
}

func (i FirewallAddressTaggingArray) ToFirewallAddressTaggingArrayOutput() FirewallAddressTaggingArrayOutput {
	return i.ToFirewallAddressTaggingArrayOutputWithContext(context.Background())
}

func (i FirewallAddressTaggingArray) ToFirewallAddressTaggingArrayOutputWithContext(ctx context.Context) FirewallAddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddressTaggingArrayOutput)
}

type FirewallAddressTaggingOutput struct{ *pulumi.OutputState }

func (FirewallAddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddressTagging)(nil)).Elem()
}

func (o FirewallAddressTaggingOutput) ToFirewallAddressTaggingOutput() FirewallAddressTaggingOutput {
	return o
}

func (o FirewallAddressTaggingOutput) ToFirewallAddressTaggingOutputWithContext(ctx context.Context) FirewallAddressTaggingOutput {
	return o
}

// Tag category.
func (o FirewallAddressTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddressTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o FirewallAddressTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddressTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o FirewallAddressTaggingOutput) Tags() FirewallAddressTaggingTagArrayOutput {
	return o.ApplyT(func(v FirewallAddressTagging) []FirewallAddressTaggingTag { return v.Tags }).(FirewallAddressTaggingTagArrayOutput)
}

type FirewallAddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddressTagging)(nil)).Elem()
}

func (o FirewallAddressTaggingArrayOutput) ToFirewallAddressTaggingArrayOutput() FirewallAddressTaggingArrayOutput {
	return o
}

func (o FirewallAddressTaggingArrayOutput) ToFirewallAddressTaggingArrayOutputWithContext(ctx context.Context) FirewallAddressTaggingArrayOutput {
	return o
}

func (o FirewallAddressTaggingArrayOutput) Index(i pulumi.IntInput) FirewallAddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddressTagging {
		return vs[0].([]FirewallAddressTagging)[vs[1].(int)]
	}).(FirewallAddressTaggingOutput)
}

type FirewallAddressTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// FirewallAddressTaggingTagInput is an input type that accepts FirewallAddressTaggingTagArgs and FirewallAddressTaggingTagOutput values.
// You can construct a concrete instance of `FirewallAddressTaggingTagInput` via:
//
//	FirewallAddressTaggingTagArgs{...}
type FirewallAddressTaggingTagInput interface {
	pulumi.Input

	ToFirewallAddressTaggingTagOutput() FirewallAddressTaggingTagOutput
	ToFirewallAddressTaggingTagOutputWithContext(context.Context) FirewallAddressTaggingTagOutput
}

type FirewallAddressTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddressTaggingTag)(nil)).Elem()
}

func (i FirewallAddressTaggingTagArgs) ToFirewallAddressTaggingTagOutput() FirewallAddressTaggingTagOutput {
	return i.ToFirewallAddressTaggingTagOutputWithContext(context.Background())
}

func (i FirewallAddressTaggingTagArgs) ToFirewallAddressTaggingTagOutputWithContext(ctx context.Context) FirewallAddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddressTaggingTagOutput)
}

// FirewallAddressTaggingTagArrayInput is an input type that accepts FirewallAddressTaggingTagArray and FirewallAddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `FirewallAddressTaggingTagArrayInput` via:
//
//	FirewallAddressTaggingTagArray{ FirewallAddressTaggingTagArgs{...} }
type FirewallAddressTaggingTagArrayInput interface {
	pulumi.Input

	ToFirewallAddressTaggingTagArrayOutput() FirewallAddressTaggingTagArrayOutput
	ToFirewallAddressTaggingTagArrayOutputWithContext(context.Context) FirewallAddressTaggingTagArrayOutput
}

type FirewallAddressTaggingTagArray []FirewallAddressTaggingTagInput

func (FirewallAddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddressTaggingTag)(nil)).Elem()
}

func (i FirewallAddressTaggingTagArray) ToFirewallAddressTaggingTagArrayOutput() FirewallAddressTaggingTagArrayOutput {
	return i.ToFirewallAddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i FirewallAddressTaggingTagArray) ToFirewallAddressTaggingTagArrayOutputWithContext(ctx context.Context) FirewallAddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddressTaggingTagArrayOutput)
}

type FirewallAddressTaggingTagOutput struct{ *pulumi.OutputState }

func (FirewallAddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddressTaggingTag)(nil)).Elem()
}

func (o FirewallAddressTaggingTagOutput) ToFirewallAddressTaggingTagOutput() FirewallAddressTaggingTagOutput {
	return o
}

func (o FirewallAddressTaggingTagOutput) ToFirewallAddressTaggingTagOutputWithContext(ctx context.Context) FirewallAddressTaggingTagOutput {
	return o
}

// Tag name.
func (o FirewallAddressTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddressTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddressTaggingTag)(nil)).Elem()
}

func (o FirewallAddressTaggingTagArrayOutput) ToFirewallAddressTaggingTagArrayOutput() FirewallAddressTaggingTagArrayOutput {
	return o
}

func (o FirewallAddressTaggingTagArrayOutput) ToFirewallAddressTaggingTagArrayOutputWithContext(ctx context.Context) FirewallAddressTaggingTagArrayOutput {
	return o
}

func (o FirewallAddressTaggingTagArrayOutput) Index(i pulumi.IntInput) FirewallAddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddressTaggingTag {
		return vs[0].([]FirewallAddressTaggingTag)[vs[1].(int)]
	}).(FirewallAddressTaggingTagOutput)
}

type FirewallAddrgrp6Member struct {
	// Address6/addrgrp6 name.
	Name *string `pulumi:"name"`
}

// FirewallAddrgrp6MemberInput is an input type that accepts FirewallAddrgrp6MemberArgs and FirewallAddrgrp6MemberOutput values.
// You can construct a concrete instance of `FirewallAddrgrp6MemberInput` via:
//
//	FirewallAddrgrp6MemberArgs{...}
type FirewallAddrgrp6MemberInput interface {
	pulumi.Input

	ToFirewallAddrgrp6MemberOutput() FirewallAddrgrp6MemberOutput
	ToFirewallAddrgrp6MemberOutputWithContext(context.Context) FirewallAddrgrp6MemberOutput
}

type FirewallAddrgrp6MemberArgs struct {
	// Address6/addrgrp6 name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAddrgrp6MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrp6Member)(nil)).Elem()
}

func (i FirewallAddrgrp6MemberArgs) ToFirewallAddrgrp6MemberOutput() FirewallAddrgrp6MemberOutput {
	return i.ToFirewallAddrgrp6MemberOutputWithContext(context.Background())
}

func (i FirewallAddrgrp6MemberArgs) ToFirewallAddrgrp6MemberOutputWithContext(ctx context.Context) FirewallAddrgrp6MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrp6MemberOutput)
}

// FirewallAddrgrp6MemberArrayInput is an input type that accepts FirewallAddrgrp6MemberArray and FirewallAddrgrp6MemberArrayOutput values.
// You can construct a concrete instance of `FirewallAddrgrp6MemberArrayInput` via:
//
//	FirewallAddrgrp6MemberArray{ FirewallAddrgrp6MemberArgs{...} }
type FirewallAddrgrp6MemberArrayInput interface {
	pulumi.Input

	ToFirewallAddrgrp6MemberArrayOutput() FirewallAddrgrp6MemberArrayOutput
	ToFirewallAddrgrp6MemberArrayOutputWithContext(context.Context) FirewallAddrgrp6MemberArrayOutput
}

type FirewallAddrgrp6MemberArray []FirewallAddrgrp6MemberInput

func (FirewallAddrgrp6MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrp6Member)(nil)).Elem()
}

func (i FirewallAddrgrp6MemberArray) ToFirewallAddrgrp6MemberArrayOutput() FirewallAddrgrp6MemberArrayOutput {
	return i.ToFirewallAddrgrp6MemberArrayOutputWithContext(context.Background())
}

func (i FirewallAddrgrp6MemberArray) ToFirewallAddrgrp6MemberArrayOutputWithContext(ctx context.Context) FirewallAddrgrp6MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrp6MemberArrayOutput)
}

type FirewallAddrgrp6MemberOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrp6MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrp6Member)(nil)).Elem()
}

func (o FirewallAddrgrp6MemberOutput) ToFirewallAddrgrp6MemberOutput() FirewallAddrgrp6MemberOutput {
	return o
}

func (o FirewallAddrgrp6MemberOutput) ToFirewallAddrgrp6MemberOutputWithContext(ctx context.Context) FirewallAddrgrp6MemberOutput {
	return o
}

// Address6/addrgrp6 name.
func (o FirewallAddrgrp6MemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddrgrp6Member) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAddrgrp6MemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrp6MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrp6Member)(nil)).Elem()
}

func (o FirewallAddrgrp6MemberArrayOutput) ToFirewallAddrgrp6MemberArrayOutput() FirewallAddrgrp6MemberArrayOutput {
	return o
}

func (o FirewallAddrgrp6MemberArrayOutput) ToFirewallAddrgrp6MemberArrayOutputWithContext(ctx context.Context) FirewallAddrgrp6MemberArrayOutput {
	return o
}

func (o FirewallAddrgrp6MemberArrayOutput) Index(i pulumi.IntInput) FirewallAddrgrp6MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddrgrp6Member {
		return vs[0].([]FirewallAddrgrp6Member)[vs[1].(int)]
	}).(FirewallAddrgrp6MemberOutput)
}

type FirewallAddrgrp6Tagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []FirewallAddrgrp6TaggingTag `pulumi:"tags"`
}

// FirewallAddrgrp6TaggingInput is an input type that accepts FirewallAddrgrp6TaggingArgs and FirewallAddrgrp6TaggingOutput values.
// You can construct a concrete instance of `FirewallAddrgrp6TaggingInput` via:
//
//	FirewallAddrgrp6TaggingArgs{...}
type FirewallAddrgrp6TaggingInput interface {
	pulumi.Input

	ToFirewallAddrgrp6TaggingOutput() FirewallAddrgrp6TaggingOutput
	ToFirewallAddrgrp6TaggingOutputWithContext(context.Context) FirewallAddrgrp6TaggingOutput
}

type FirewallAddrgrp6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags FirewallAddrgrp6TaggingTagArrayInput `pulumi:"tags"`
}

func (FirewallAddrgrp6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrp6Tagging)(nil)).Elem()
}

func (i FirewallAddrgrp6TaggingArgs) ToFirewallAddrgrp6TaggingOutput() FirewallAddrgrp6TaggingOutput {
	return i.ToFirewallAddrgrp6TaggingOutputWithContext(context.Background())
}

func (i FirewallAddrgrp6TaggingArgs) ToFirewallAddrgrp6TaggingOutputWithContext(ctx context.Context) FirewallAddrgrp6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrp6TaggingOutput)
}

// FirewallAddrgrp6TaggingArrayInput is an input type that accepts FirewallAddrgrp6TaggingArray and FirewallAddrgrp6TaggingArrayOutput values.
// You can construct a concrete instance of `FirewallAddrgrp6TaggingArrayInput` via:
//
//	FirewallAddrgrp6TaggingArray{ FirewallAddrgrp6TaggingArgs{...} }
type FirewallAddrgrp6TaggingArrayInput interface {
	pulumi.Input

	ToFirewallAddrgrp6TaggingArrayOutput() FirewallAddrgrp6TaggingArrayOutput
	ToFirewallAddrgrp6TaggingArrayOutputWithContext(context.Context) FirewallAddrgrp6TaggingArrayOutput
}

type FirewallAddrgrp6TaggingArray []FirewallAddrgrp6TaggingInput

func (FirewallAddrgrp6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrp6Tagging)(nil)).Elem()
}

func (i FirewallAddrgrp6TaggingArray) ToFirewallAddrgrp6TaggingArrayOutput() FirewallAddrgrp6TaggingArrayOutput {
	return i.ToFirewallAddrgrp6TaggingArrayOutputWithContext(context.Background())
}

func (i FirewallAddrgrp6TaggingArray) ToFirewallAddrgrp6TaggingArrayOutputWithContext(ctx context.Context) FirewallAddrgrp6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrp6TaggingArrayOutput)
}

type FirewallAddrgrp6TaggingOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrp6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrp6Tagging)(nil)).Elem()
}

func (o FirewallAddrgrp6TaggingOutput) ToFirewallAddrgrp6TaggingOutput() FirewallAddrgrp6TaggingOutput {
	return o
}

func (o FirewallAddrgrp6TaggingOutput) ToFirewallAddrgrp6TaggingOutputWithContext(ctx context.Context) FirewallAddrgrp6TaggingOutput {
	return o
}

// Tag category.
func (o FirewallAddrgrp6TaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddrgrp6Tagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o FirewallAddrgrp6TaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddrgrp6Tagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o FirewallAddrgrp6TaggingOutput) Tags() FirewallAddrgrp6TaggingTagArrayOutput {
	return o.ApplyT(func(v FirewallAddrgrp6Tagging) []FirewallAddrgrp6TaggingTag { return v.Tags }).(FirewallAddrgrp6TaggingTagArrayOutput)
}

type FirewallAddrgrp6TaggingArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrp6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrp6Tagging)(nil)).Elem()
}

func (o FirewallAddrgrp6TaggingArrayOutput) ToFirewallAddrgrp6TaggingArrayOutput() FirewallAddrgrp6TaggingArrayOutput {
	return o
}

func (o FirewallAddrgrp6TaggingArrayOutput) ToFirewallAddrgrp6TaggingArrayOutputWithContext(ctx context.Context) FirewallAddrgrp6TaggingArrayOutput {
	return o
}

func (o FirewallAddrgrp6TaggingArrayOutput) Index(i pulumi.IntInput) FirewallAddrgrp6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddrgrp6Tagging {
		return vs[0].([]FirewallAddrgrp6Tagging)[vs[1].(int)]
	}).(FirewallAddrgrp6TaggingOutput)
}

type FirewallAddrgrp6TaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// FirewallAddrgrp6TaggingTagInput is an input type that accepts FirewallAddrgrp6TaggingTagArgs and FirewallAddrgrp6TaggingTagOutput values.
// You can construct a concrete instance of `FirewallAddrgrp6TaggingTagInput` via:
//
//	FirewallAddrgrp6TaggingTagArgs{...}
type FirewallAddrgrp6TaggingTagInput interface {
	pulumi.Input

	ToFirewallAddrgrp6TaggingTagOutput() FirewallAddrgrp6TaggingTagOutput
	ToFirewallAddrgrp6TaggingTagOutputWithContext(context.Context) FirewallAddrgrp6TaggingTagOutput
}

type FirewallAddrgrp6TaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAddrgrp6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrp6TaggingTag)(nil)).Elem()
}

func (i FirewallAddrgrp6TaggingTagArgs) ToFirewallAddrgrp6TaggingTagOutput() FirewallAddrgrp6TaggingTagOutput {
	return i.ToFirewallAddrgrp6TaggingTagOutputWithContext(context.Background())
}

func (i FirewallAddrgrp6TaggingTagArgs) ToFirewallAddrgrp6TaggingTagOutputWithContext(ctx context.Context) FirewallAddrgrp6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrp6TaggingTagOutput)
}

// FirewallAddrgrp6TaggingTagArrayInput is an input type that accepts FirewallAddrgrp6TaggingTagArray and FirewallAddrgrp6TaggingTagArrayOutput values.
// You can construct a concrete instance of `FirewallAddrgrp6TaggingTagArrayInput` via:
//
//	FirewallAddrgrp6TaggingTagArray{ FirewallAddrgrp6TaggingTagArgs{...} }
type FirewallAddrgrp6TaggingTagArrayInput interface {
	pulumi.Input

	ToFirewallAddrgrp6TaggingTagArrayOutput() FirewallAddrgrp6TaggingTagArrayOutput
	ToFirewallAddrgrp6TaggingTagArrayOutputWithContext(context.Context) FirewallAddrgrp6TaggingTagArrayOutput
}

type FirewallAddrgrp6TaggingTagArray []FirewallAddrgrp6TaggingTagInput

func (FirewallAddrgrp6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrp6TaggingTag)(nil)).Elem()
}

func (i FirewallAddrgrp6TaggingTagArray) ToFirewallAddrgrp6TaggingTagArrayOutput() FirewallAddrgrp6TaggingTagArrayOutput {
	return i.ToFirewallAddrgrp6TaggingTagArrayOutputWithContext(context.Background())
}

func (i FirewallAddrgrp6TaggingTagArray) ToFirewallAddrgrp6TaggingTagArrayOutputWithContext(ctx context.Context) FirewallAddrgrp6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrp6TaggingTagArrayOutput)
}

type FirewallAddrgrp6TaggingTagOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrp6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrp6TaggingTag)(nil)).Elem()
}

func (o FirewallAddrgrp6TaggingTagOutput) ToFirewallAddrgrp6TaggingTagOutput() FirewallAddrgrp6TaggingTagOutput {
	return o
}

func (o FirewallAddrgrp6TaggingTagOutput) ToFirewallAddrgrp6TaggingTagOutputWithContext(ctx context.Context) FirewallAddrgrp6TaggingTagOutput {
	return o
}

// Tag name.
func (o FirewallAddrgrp6TaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddrgrp6TaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAddrgrp6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrp6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrp6TaggingTag)(nil)).Elem()
}

func (o FirewallAddrgrp6TaggingTagArrayOutput) ToFirewallAddrgrp6TaggingTagArrayOutput() FirewallAddrgrp6TaggingTagArrayOutput {
	return o
}

func (o FirewallAddrgrp6TaggingTagArrayOutput) ToFirewallAddrgrp6TaggingTagArrayOutputWithContext(ctx context.Context) FirewallAddrgrp6TaggingTagArrayOutput {
	return o
}

func (o FirewallAddrgrp6TaggingTagArrayOutput) Index(i pulumi.IntInput) FirewallAddrgrp6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddrgrp6TaggingTag {
		return vs[0].([]FirewallAddrgrp6TaggingTag)[vs[1].(int)]
	}).(FirewallAddrgrp6TaggingTagOutput)
}

type FirewallAddrgrpExcludeMember struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallAddrgrpExcludeMemberInput is an input type that accepts FirewallAddrgrpExcludeMemberArgs and FirewallAddrgrpExcludeMemberOutput values.
// You can construct a concrete instance of `FirewallAddrgrpExcludeMemberInput` via:
//
//	FirewallAddrgrpExcludeMemberArgs{...}
type FirewallAddrgrpExcludeMemberInput interface {
	pulumi.Input

	ToFirewallAddrgrpExcludeMemberOutput() FirewallAddrgrpExcludeMemberOutput
	ToFirewallAddrgrpExcludeMemberOutputWithContext(context.Context) FirewallAddrgrpExcludeMemberOutput
}

type FirewallAddrgrpExcludeMemberArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAddrgrpExcludeMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrpExcludeMember)(nil)).Elem()
}

func (i FirewallAddrgrpExcludeMemberArgs) ToFirewallAddrgrpExcludeMemberOutput() FirewallAddrgrpExcludeMemberOutput {
	return i.ToFirewallAddrgrpExcludeMemberOutputWithContext(context.Background())
}

func (i FirewallAddrgrpExcludeMemberArgs) ToFirewallAddrgrpExcludeMemberOutputWithContext(ctx context.Context) FirewallAddrgrpExcludeMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrpExcludeMemberOutput)
}

// FirewallAddrgrpExcludeMemberArrayInput is an input type that accepts FirewallAddrgrpExcludeMemberArray and FirewallAddrgrpExcludeMemberArrayOutput values.
// You can construct a concrete instance of `FirewallAddrgrpExcludeMemberArrayInput` via:
//
//	FirewallAddrgrpExcludeMemberArray{ FirewallAddrgrpExcludeMemberArgs{...} }
type FirewallAddrgrpExcludeMemberArrayInput interface {
	pulumi.Input

	ToFirewallAddrgrpExcludeMemberArrayOutput() FirewallAddrgrpExcludeMemberArrayOutput
	ToFirewallAddrgrpExcludeMemberArrayOutputWithContext(context.Context) FirewallAddrgrpExcludeMemberArrayOutput
}

type FirewallAddrgrpExcludeMemberArray []FirewallAddrgrpExcludeMemberInput

func (FirewallAddrgrpExcludeMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrpExcludeMember)(nil)).Elem()
}

func (i FirewallAddrgrpExcludeMemberArray) ToFirewallAddrgrpExcludeMemberArrayOutput() FirewallAddrgrpExcludeMemberArrayOutput {
	return i.ToFirewallAddrgrpExcludeMemberArrayOutputWithContext(context.Background())
}

func (i FirewallAddrgrpExcludeMemberArray) ToFirewallAddrgrpExcludeMemberArrayOutputWithContext(ctx context.Context) FirewallAddrgrpExcludeMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrpExcludeMemberArrayOutput)
}

type FirewallAddrgrpExcludeMemberOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrpExcludeMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrpExcludeMember)(nil)).Elem()
}

func (o FirewallAddrgrpExcludeMemberOutput) ToFirewallAddrgrpExcludeMemberOutput() FirewallAddrgrpExcludeMemberOutput {
	return o
}

func (o FirewallAddrgrpExcludeMemberOutput) ToFirewallAddrgrpExcludeMemberOutputWithContext(ctx context.Context) FirewallAddrgrpExcludeMemberOutput {
	return o
}

// Address name.
func (o FirewallAddrgrpExcludeMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddrgrpExcludeMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAddrgrpExcludeMemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrpExcludeMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrpExcludeMember)(nil)).Elem()
}

func (o FirewallAddrgrpExcludeMemberArrayOutput) ToFirewallAddrgrpExcludeMemberArrayOutput() FirewallAddrgrpExcludeMemberArrayOutput {
	return o
}

func (o FirewallAddrgrpExcludeMemberArrayOutput) ToFirewallAddrgrpExcludeMemberArrayOutputWithContext(ctx context.Context) FirewallAddrgrpExcludeMemberArrayOutput {
	return o
}

func (o FirewallAddrgrpExcludeMemberArrayOutput) Index(i pulumi.IntInput) FirewallAddrgrpExcludeMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddrgrpExcludeMember {
		return vs[0].([]FirewallAddrgrpExcludeMember)[vs[1].(int)]
	}).(FirewallAddrgrpExcludeMemberOutput)
}

type FirewallAddrgrpMember struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallAddrgrpMemberInput is an input type that accepts FirewallAddrgrpMemberArgs and FirewallAddrgrpMemberOutput values.
// You can construct a concrete instance of `FirewallAddrgrpMemberInput` via:
//
//	FirewallAddrgrpMemberArgs{...}
type FirewallAddrgrpMemberInput interface {
	pulumi.Input

	ToFirewallAddrgrpMemberOutput() FirewallAddrgrpMemberOutput
	ToFirewallAddrgrpMemberOutputWithContext(context.Context) FirewallAddrgrpMemberOutput
}

type FirewallAddrgrpMemberArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAddrgrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrpMember)(nil)).Elem()
}

func (i FirewallAddrgrpMemberArgs) ToFirewallAddrgrpMemberOutput() FirewallAddrgrpMemberOutput {
	return i.ToFirewallAddrgrpMemberOutputWithContext(context.Background())
}

func (i FirewallAddrgrpMemberArgs) ToFirewallAddrgrpMemberOutputWithContext(ctx context.Context) FirewallAddrgrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrpMemberOutput)
}

// FirewallAddrgrpMemberArrayInput is an input type that accepts FirewallAddrgrpMemberArray and FirewallAddrgrpMemberArrayOutput values.
// You can construct a concrete instance of `FirewallAddrgrpMemberArrayInput` via:
//
//	FirewallAddrgrpMemberArray{ FirewallAddrgrpMemberArgs{...} }
type FirewallAddrgrpMemberArrayInput interface {
	pulumi.Input

	ToFirewallAddrgrpMemberArrayOutput() FirewallAddrgrpMemberArrayOutput
	ToFirewallAddrgrpMemberArrayOutputWithContext(context.Context) FirewallAddrgrpMemberArrayOutput
}

type FirewallAddrgrpMemberArray []FirewallAddrgrpMemberInput

func (FirewallAddrgrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrpMember)(nil)).Elem()
}

func (i FirewallAddrgrpMemberArray) ToFirewallAddrgrpMemberArrayOutput() FirewallAddrgrpMemberArrayOutput {
	return i.ToFirewallAddrgrpMemberArrayOutputWithContext(context.Background())
}

func (i FirewallAddrgrpMemberArray) ToFirewallAddrgrpMemberArrayOutputWithContext(ctx context.Context) FirewallAddrgrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrpMemberArrayOutput)
}

type FirewallAddrgrpMemberOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrpMember)(nil)).Elem()
}

func (o FirewallAddrgrpMemberOutput) ToFirewallAddrgrpMemberOutput() FirewallAddrgrpMemberOutput {
	return o
}

func (o FirewallAddrgrpMemberOutput) ToFirewallAddrgrpMemberOutputWithContext(ctx context.Context) FirewallAddrgrpMemberOutput {
	return o
}

// Address name.
func (o FirewallAddrgrpMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddrgrpMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAddrgrpMemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrpMember)(nil)).Elem()
}

func (o FirewallAddrgrpMemberArrayOutput) ToFirewallAddrgrpMemberArrayOutput() FirewallAddrgrpMemberArrayOutput {
	return o
}

func (o FirewallAddrgrpMemberArrayOutput) ToFirewallAddrgrpMemberArrayOutputWithContext(ctx context.Context) FirewallAddrgrpMemberArrayOutput {
	return o
}

func (o FirewallAddrgrpMemberArrayOutput) Index(i pulumi.IntInput) FirewallAddrgrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddrgrpMember {
		return vs[0].([]FirewallAddrgrpMember)[vs[1].(int)]
	}).(FirewallAddrgrpMemberOutput)
}

type FirewallAddrgrpTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []FirewallAddrgrpTaggingTag `pulumi:"tags"`
}

// FirewallAddrgrpTaggingInput is an input type that accepts FirewallAddrgrpTaggingArgs and FirewallAddrgrpTaggingOutput values.
// You can construct a concrete instance of `FirewallAddrgrpTaggingInput` via:
//
//	FirewallAddrgrpTaggingArgs{...}
type FirewallAddrgrpTaggingInput interface {
	pulumi.Input

	ToFirewallAddrgrpTaggingOutput() FirewallAddrgrpTaggingOutput
	ToFirewallAddrgrpTaggingOutputWithContext(context.Context) FirewallAddrgrpTaggingOutput
}

type FirewallAddrgrpTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags FirewallAddrgrpTaggingTagArrayInput `pulumi:"tags"`
}

func (FirewallAddrgrpTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrpTagging)(nil)).Elem()
}

func (i FirewallAddrgrpTaggingArgs) ToFirewallAddrgrpTaggingOutput() FirewallAddrgrpTaggingOutput {
	return i.ToFirewallAddrgrpTaggingOutputWithContext(context.Background())
}

func (i FirewallAddrgrpTaggingArgs) ToFirewallAddrgrpTaggingOutputWithContext(ctx context.Context) FirewallAddrgrpTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrpTaggingOutput)
}

// FirewallAddrgrpTaggingArrayInput is an input type that accepts FirewallAddrgrpTaggingArray and FirewallAddrgrpTaggingArrayOutput values.
// You can construct a concrete instance of `FirewallAddrgrpTaggingArrayInput` via:
//
//	FirewallAddrgrpTaggingArray{ FirewallAddrgrpTaggingArgs{...} }
type FirewallAddrgrpTaggingArrayInput interface {
	pulumi.Input

	ToFirewallAddrgrpTaggingArrayOutput() FirewallAddrgrpTaggingArrayOutput
	ToFirewallAddrgrpTaggingArrayOutputWithContext(context.Context) FirewallAddrgrpTaggingArrayOutput
}

type FirewallAddrgrpTaggingArray []FirewallAddrgrpTaggingInput

func (FirewallAddrgrpTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrpTagging)(nil)).Elem()
}

func (i FirewallAddrgrpTaggingArray) ToFirewallAddrgrpTaggingArrayOutput() FirewallAddrgrpTaggingArrayOutput {
	return i.ToFirewallAddrgrpTaggingArrayOutputWithContext(context.Background())
}

func (i FirewallAddrgrpTaggingArray) ToFirewallAddrgrpTaggingArrayOutputWithContext(ctx context.Context) FirewallAddrgrpTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrpTaggingArrayOutput)
}

type FirewallAddrgrpTaggingOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrpTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrpTagging)(nil)).Elem()
}

func (o FirewallAddrgrpTaggingOutput) ToFirewallAddrgrpTaggingOutput() FirewallAddrgrpTaggingOutput {
	return o
}

func (o FirewallAddrgrpTaggingOutput) ToFirewallAddrgrpTaggingOutputWithContext(ctx context.Context) FirewallAddrgrpTaggingOutput {
	return o
}

// Tag category.
func (o FirewallAddrgrpTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddrgrpTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o FirewallAddrgrpTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddrgrpTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o FirewallAddrgrpTaggingOutput) Tags() FirewallAddrgrpTaggingTagArrayOutput {
	return o.ApplyT(func(v FirewallAddrgrpTagging) []FirewallAddrgrpTaggingTag { return v.Tags }).(FirewallAddrgrpTaggingTagArrayOutput)
}

type FirewallAddrgrpTaggingArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrpTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrpTagging)(nil)).Elem()
}

func (o FirewallAddrgrpTaggingArrayOutput) ToFirewallAddrgrpTaggingArrayOutput() FirewallAddrgrpTaggingArrayOutput {
	return o
}

func (o FirewallAddrgrpTaggingArrayOutput) ToFirewallAddrgrpTaggingArrayOutputWithContext(ctx context.Context) FirewallAddrgrpTaggingArrayOutput {
	return o
}

func (o FirewallAddrgrpTaggingArrayOutput) Index(i pulumi.IntInput) FirewallAddrgrpTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddrgrpTagging {
		return vs[0].([]FirewallAddrgrpTagging)[vs[1].(int)]
	}).(FirewallAddrgrpTaggingOutput)
}

type FirewallAddrgrpTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// FirewallAddrgrpTaggingTagInput is an input type that accepts FirewallAddrgrpTaggingTagArgs and FirewallAddrgrpTaggingTagOutput values.
// You can construct a concrete instance of `FirewallAddrgrpTaggingTagInput` via:
//
//	FirewallAddrgrpTaggingTagArgs{...}
type FirewallAddrgrpTaggingTagInput interface {
	pulumi.Input

	ToFirewallAddrgrpTaggingTagOutput() FirewallAddrgrpTaggingTagOutput
	ToFirewallAddrgrpTaggingTagOutputWithContext(context.Context) FirewallAddrgrpTaggingTagOutput
}

type FirewallAddrgrpTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAddrgrpTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrpTaggingTag)(nil)).Elem()
}

func (i FirewallAddrgrpTaggingTagArgs) ToFirewallAddrgrpTaggingTagOutput() FirewallAddrgrpTaggingTagOutput {
	return i.ToFirewallAddrgrpTaggingTagOutputWithContext(context.Background())
}

func (i FirewallAddrgrpTaggingTagArgs) ToFirewallAddrgrpTaggingTagOutputWithContext(ctx context.Context) FirewallAddrgrpTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrpTaggingTagOutput)
}

// FirewallAddrgrpTaggingTagArrayInput is an input type that accepts FirewallAddrgrpTaggingTagArray and FirewallAddrgrpTaggingTagArrayOutput values.
// You can construct a concrete instance of `FirewallAddrgrpTaggingTagArrayInput` via:
//
//	FirewallAddrgrpTaggingTagArray{ FirewallAddrgrpTaggingTagArgs{...} }
type FirewallAddrgrpTaggingTagArrayInput interface {
	pulumi.Input

	ToFirewallAddrgrpTaggingTagArrayOutput() FirewallAddrgrpTaggingTagArrayOutput
	ToFirewallAddrgrpTaggingTagArrayOutputWithContext(context.Context) FirewallAddrgrpTaggingTagArrayOutput
}

type FirewallAddrgrpTaggingTagArray []FirewallAddrgrpTaggingTagInput

func (FirewallAddrgrpTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrpTaggingTag)(nil)).Elem()
}

func (i FirewallAddrgrpTaggingTagArray) ToFirewallAddrgrpTaggingTagArrayOutput() FirewallAddrgrpTaggingTagArrayOutput {
	return i.ToFirewallAddrgrpTaggingTagArrayOutputWithContext(context.Background())
}

func (i FirewallAddrgrpTaggingTagArray) ToFirewallAddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) FirewallAddrgrpTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAddrgrpTaggingTagArrayOutput)
}

type FirewallAddrgrpTaggingTagOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrpTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAddrgrpTaggingTag)(nil)).Elem()
}

func (o FirewallAddrgrpTaggingTagOutput) ToFirewallAddrgrpTaggingTagOutput() FirewallAddrgrpTaggingTagOutput {
	return o
}

func (o FirewallAddrgrpTaggingTagOutput) ToFirewallAddrgrpTaggingTagOutputWithContext(ctx context.Context) FirewallAddrgrpTaggingTagOutput {
	return o
}

// Tag name.
func (o FirewallAddrgrpTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAddrgrpTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAddrgrpTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallAddrgrpTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAddrgrpTaggingTag)(nil)).Elem()
}

func (o FirewallAddrgrpTaggingTagArrayOutput) ToFirewallAddrgrpTaggingTagArrayOutput() FirewallAddrgrpTaggingTagArrayOutput {
	return o
}

func (o FirewallAddrgrpTaggingTagArrayOutput) ToFirewallAddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) FirewallAddrgrpTaggingTagArrayOutput {
	return o
}

func (o FirewallAddrgrpTaggingTagArrayOutput) Index(i pulumi.IntInput) FirewallAddrgrpTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAddrgrpTaggingTag {
		return vs[0].([]FirewallAddrgrpTaggingTag)[vs[1].(int)]
	}).(FirewallAddrgrpTaggingTagOutput)
}

type FirewallAuthportalGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// FirewallAuthportalGroupInput is an input type that accepts FirewallAuthportalGroupArgs and FirewallAuthportalGroupOutput values.
// You can construct a concrete instance of `FirewallAuthportalGroupInput` via:
//
//	FirewallAuthportalGroupArgs{...}
type FirewallAuthportalGroupInput interface {
	pulumi.Input

	ToFirewallAuthportalGroupOutput() FirewallAuthportalGroupOutput
	ToFirewallAuthportalGroupOutputWithContext(context.Context) FirewallAuthportalGroupOutput
}

type FirewallAuthportalGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallAuthportalGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAuthportalGroup)(nil)).Elem()
}

func (i FirewallAuthportalGroupArgs) ToFirewallAuthportalGroupOutput() FirewallAuthportalGroupOutput {
	return i.ToFirewallAuthportalGroupOutputWithContext(context.Background())
}

func (i FirewallAuthportalGroupArgs) ToFirewallAuthportalGroupOutputWithContext(ctx context.Context) FirewallAuthportalGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAuthportalGroupOutput)
}

// FirewallAuthportalGroupArrayInput is an input type that accepts FirewallAuthportalGroupArray and FirewallAuthportalGroupArrayOutput values.
// You can construct a concrete instance of `FirewallAuthportalGroupArrayInput` via:
//
//	FirewallAuthportalGroupArray{ FirewallAuthportalGroupArgs{...} }
type FirewallAuthportalGroupArrayInput interface {
	pulumi.Input

	ToFirewallAuthportalGroupArrayOutput() FirewallAuthportalGroupArrayOutput
	ToFirewallAuthportalGroupArrayOutputWithContext(context.Context) FirewallAuthportalGroupArrayOutput
}

type FirewallAuthportalGroupArray []FirewallAuthportalGroupInput

func (FirewallAuthportalGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAuthportalGroup)(nil)).Elem()
}

func (i FirewallAuthportalGroupArray) ToFirewallAuthportalGroupArrayOutput() FirewallAuthportalGroupArrayOutput {
	return i.ToFirewallAuthportalGroupArrayOutputWithContext(context.Background())
}

func (i FirewallAuthportalGroupArray) ToFirewallAuthportalGroupArrayOutputWithContext(ctx context.Context) FirewallAuthportalGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAuthportalGroupArrayOutput)
}

type FirewallAuthportalGroupOutput struct{ *pulumi.OutputState }

func (FirewallAuthportalGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAuthportalGroup)(nil)).Elem()
}

func (o FirewallAuthportalGroupOutput) ToFirewallAuthportalGroupOutput() FirewallAuthportalGroupOutput {
	return o
}

func (o FirewallAuthportalGroupOutput) ToFirewallAuthportalGroupOutputWithContext(ctx context.Context) FirewallAuthportalGroupOutput {
	return o
}

// Group name.
func (o FirewallAuthportalGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallAuthportalGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallAuthportalGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallAuthportalGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallAuthportalGroup)(nil)).Elem()
}

func (o FirewallAuthportalGroupArrayOutput) ToFirewallAuthportalGroupArrayOutput() FirewallAuthportalGroupArrayOutput {
	return o
}

func (o FirewallAuthportalGroupArrayOutput) ToFirewallAuthportalGroupArrayOutputWithContext(ctx context.Context) FirewallAuthportalGroupArrayOutput {
	return o
}

func (o FirewallAuthportalGroupArrayOutput) Index(i pulumi.IntInput) FirewallAuthportalGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallAuthportalGroup {
		return vs[0].([]FirewallAuthportalGroup)[vs[1].(int)]
	}).(FirewallAuthportalGroupOutput)
}

type FirewallCentralsnatmapDstAddr6 struct {
	// Address name.
	//
	// The `origAddr6` block supports:
	//
	// The `dstAddr6` block supports:
	//
	// The `natIppool6` block supports:
	Name *string `pulumi:"name"`
}

// FirewallCentralsnatmapDstAddr6Input is an input type that accepts FirewallCentralsnatmapDstAddr6Args and FirewallCentralsnatmapDstAddr6Output values.
// You can construct a concrete instance of `FirewallCentralsnatmapDstAddr6Input` via:
//
//	FirewallCentralsnatmapDstAddr6Args{...}
type FirewallCentralsnatmapDstAddr6Input interface {
	pulumi.Input

	ToFirewallCentralsnatmapDstAddr6Output() FirewallCentralsnatmapDstAddr6Output
	ToFirewallCentralsnatmapDstAddr6OutputWithContext(context.Context) FirewallCentralsnatmapDstAddr6Output
}

type FirewallCentralsnatmapDstAddr6Args struct {
	// Address name.
	//
	// The `origAddr6` block supports:
	//
	// The `dstAddr6` block supports:
	//
	// The `natIppool6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallCentralsnatmapDstAddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapDstAddr6)(nil)).Elem()
}

func (i FirewallCentralsnatmapDstAddr6Args) ToFirewallCentralsnatmapDstAddr6Output() FirewallCentralsnatmapDstAddr6Output {
	return i.ToFirewallCentralsnatmapDstAddr6OutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapDstAddr6Args) ToFirewallCentralsnatmapDstAddr6OutputWithContext(ctx context.Context) FirewallCentralsnatmapDstAddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapDstAddr6Output)
}

// FirewallCentralsnatmapDstAddr6ArrayInput is an input type that accepts FirewallCentralsnatmapDstAddr6Array and FirewallCentralsnatmapDstAddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapDstAddr6ArrayInput` via:
//
//	FirewallCentralsnatmapDstAddr6Array{ FirewallCentralsnatmapDstAddr6Args{...} }
type FirewallCentralsnatmapDstAddr6ArrayInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapDstAddr6ArrayOutput() FirewallCentralsnatmapDstAddr6ArrayOutput
	ToFirewallCentralsnatmapDstAddr6ArrayOutputWithContext(context.Context) FirewallCentralsnatmapDstAddr6ArrayOutput
}

type FirewallCentralsnatmapDstAddr6Array []FirewallCentralsnatmapDstAddr6Input

func (FirewallCentralsnatmapDstAddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapDstAddr6)(nil)).Elem()
}

func (i FirewallCentralsnatmapDstAddr6Array) ToFirewallCentralsnatmapDstAddr6ArrayOutput() FirewallCentralsnatmapDstAddr6ArrayOutput {
	return i.ToFirewallCentralsnatmapDstAddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapDstAddr6Array) ToFirewallCentralsnatmapDstAddr6ArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapDstAddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapDstAddr6ArrayOutput)
}

type FirewallCentralsnatmapDstAddr6Output struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapDstAddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapDstAddr6)(nil)).Elem()
}

func (o FirewallCentralsnatmapDstAddr6Output) ToFirewallCentralsnatmapDstAddr6Output() FirewallCentralsnatmapDstAddr6Output {
	return o
}

func (o FirewallCentralsnatmapDstAddr6Output) ToFirewallCentralsnatmapDstAddr6OutputWithContext(ctx context.Context) FirewallCentralsnatmapDstAddr6Output {
	return o
}

// Address name.
//
// The `origAddr6` block supports:
//
// The `dstAddr6` block supports:
//
// The `natIppool6` block supports:
func (o FirewallCentralsnatmapDstAddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallCentralsnatmapDstAddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallCentralsnatmapDstAddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapDstAddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapDstAddr6)(nil)).Elem()
}

func (o FirewallCentralsnatmapDstAddr6ArrayOutput) ToFirewallCentralsnatmapDstAddr6ArrayOutput() FirewallCentralsnatmapDstAddr6ArrayOutput {
	return o
}

func (o FirewallCentralsnatmapDstAddr6ArrayOutput) ToFirewallCentralsnatmapDstAddr6ArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapDstAddr6ArrayOutput {
	return o
}

func (o FirewallCentralsnatmapDstAddr6ArrayOutput) Index(i pulumi.IntInput) FirewallCentralsnatmapDstAddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallCentralsnatmapDstAddr6 {
		return vs[0].([]FirewallCentralsnatmapDstAddr6)[vs[1].(int)]
	}).(FirewallCentralsnatmapDstAddr6Output)
}

type FirewallCentralsnatmapDstAddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallCentralsnatmapDstAddrInput is an input type that accepts FirewallCentralsnatmapDstAddrArgs and FirewallCentralsnatmapDstAddrOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapDstAddrInput` via:
//
//	FirewallCentralsnatmapDstAddrArgs{...}
type FirewallCentralsnatmapDstAddrInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapDstAddrOutput() FirewallCentralsnatmapDstAddrOutput
	ToFirewallCentralsnatmapDstAddrOutputWithContext(context.Context) FirewallCentralsnatmapDstAddrOutput
}

type FirewallCentralsnatmapDstAddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallCentralsnatmapDstAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapDstAddr)(nil)).Elem()
}

func (i FirewallCentralsnatmapDstAddrArgs) ToFirewallCentralsnatmapDstAddrOutput() FirewallCentralsnatmapDstAddrOutput {
	return i.ToFirewallCentralsnatmapDstAddrOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapDstAddrArgs) ToFirewallCentralsnatmapDstAddrOutputWithContext(ctx context.Context) FirewallCentralsnatmapDstAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapDstAddrOutput)
}

// FirewallCentralsnatmapDstAddrArrayInput is an input type that accepts FirewallCentralsnatmapDstAddrArray and FirewallCentralsnatmapDstAddrArrayOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapDstAddrArrayInput` via:
//
//	FirewallCentralsnatmapDstAddrArray{ FirewallCentralsnatmapDstAddrArgs{...} }
type FirewallCentralsnatmapDstAddrArrayInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapDstAddrArrayOutput() FirewallCentralsnatmapDstAddrArrayOutput
	ToFirewallCentralsnatmapDstAddrArrayOutputWithContext(context.Context) FirewallCentralsnatmapDstAddrArrayOutput
}

type FirewallCentralsnatmapDstAddrArray []FirewallCentralsnatmapDstAddrInput

func (FirewallCentralsnatmapDstAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapDstAddr)(nil)).Elem()
}

func (i FirewallCentralsnatmapDstAddrArray) ToFirewallCentralsnatmapDstAddrArrayOutput() FirewallCentralsnatmapDstAddrArrayOutput {
	return i.ToFirewallCentralsnatmapDstAddrArrayOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapDstAddrArray) ToFirewallCentralsnatmapDstAddrArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapDstAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapDstAddrArrayOutput)
}

type FirewallCentralsnatmapDstAddrOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapDstAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapDstAddr)(nil)).Elem()
}

func (o FirewallCentralsnatmapDstAddrOutput) ToFirewallCentralsnatmapDstAddrOutput() FirewallCentralsnatmapDstAddrOutput {
	return o
}

func (o FirewallCentralsnatmapDstAddrOutput) ToFirewallCentralsnatmapDstAddrOutputWithContext(ctx context.Context) FirewallCentralsnatmapDstAddrOutput {
	return o
}

// Address name.
func (o FirewallCentralsnatmapDstAddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallCentralsnatmapDstAddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallCentralsnatmapDstAddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapDstAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapDstAddr)(nil)).Elem()
}

func (o FirewallCentralsnatmapDstAddrArrayOutput) ToFirewallCentralsnatmapDstAddrArrayOutput() FirewallCentralsnatmapDstAddrArrayOutput {
	return o
}

func (o FirewallCentralsnatmapDstAddrArrayOutput) ToFirewallCentralsnatmapDstAddrArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapDstAddrArrayOutput {
	return o
}

func (o FirewallCentralsnatmapDstAddrArrayOutput) Index(i pulumi.IntInput) FirewallCentralsnatmapDstAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallCentralsnatmapDstAddr {
		return vs[0].([]FirewallCentralsnatmapDstAddr)[vs[1].(int)]
	}).(FirewallCentralsnatmapDstAddrOutput)
}

type FirewallCentralsnatmapDstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallCentralsnatmapDstintfInput is an input type that accepts FirewallCentralsnatmapDstintfArgs and FirewallCentralsnatmapDstintfOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapDstintfInput` via:
//
//	FirewallCentralsnatmapDstintfArgs{...}
type FirewallCentralsnatmapDstintfInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapDstintfOutput() FirewallCentralsnatmapDstintfOutput
	ToFirewallCentralsnatmapDstintfOutputWithContext(context.Context) FirewallCentralsnatmapDstintfOutput
}

type FirewallCentralsnatmapDstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallCentralsnatmapDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapDstintf)(nil)).Elem()
}

func (i FirewallCentralsnatmapDstintfArgs) ToFirewallCentralsnatmapDstintfOutput() FirewallCentralsnatmapDstintfOutput {
	return i.ToFirewallCentralsnatmapDstintfOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapDstintfArgs) ToFirewallCentralsnatmapDstintfOutputWithContext(ctx context.Context) FirewallCentralsnatmapDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapDstintfOutput)
}

// FirewallCentralsnatmapDstintfArrayInput is an input type that accepts FirewallCentralsnatmapDstintfArray and FirewallCentralsnatmapDstintfArrayOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapDstintfArrayInput` via:
//
//	FirewallCentralsnatmapDstintfArray{ FirewallCentralsnatmapDstintfArgs{...} }
type FirewallCentralsnatmapDstintfArrayInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapDstintfArrayOutput() FirewallCentralsnatmapDstintfArrayOutput
	ToFirewallCentralsnatmapDstintfArrayOutputWithContext(context.Context) FirewallCentralsnatmapDstintfArrayOutput
}

type FirewallCentralsnatmapDstintfArray []FirewallCentralsnatmapDstintfInput

func (FirewallCentralsnatmapDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapDstintf)(nil)).Elem()
}

func (i FirewallCentralsnatmapDstintfArray) ToFirewallCentralsnatmapDstintfArrayOutput() FirewallCentralsnatmapDstintfArrayOutput {
	return i.ToFirewallCentralsnatmapDstintfArrayOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapDstintfArray) ToFirewallCentralsnatmapDstintfArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapDstintfArrayOutput)
}

type FirewallCentralsnatmapDstintfOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapDstintf)(nil)).Elem()
}

func (o FirewallCentralsnatmapDstintfOutput) ToFirewallCentralsnatmapDstintfOutput() FirewallCentralsnatmapDstintfOutput {
	return o
}

func (o FirewallCentralsnatmapDstintfOutput) ToFirewallCentralsnatmapDstintfOutputWithContext(ctx context.Context) FirewallCentralsnatmapDstintfOutput {
	return o
}

// Interface name.
func (o FirewallCentralsnatmapDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallCentralsnatmapDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallCentralsnatmapDstintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapDstintf)(nil)).Elem()
}

func (o FirewallCentralsnatmapDstintfArrayOutput) ToFirewallCentralsnatmapDstintfArrayOutput() FirewallCentralsnatmapDstintfArrayOutput {
	return o
}

func (o FirewallCentralsnatmapDstintfArrayOutput) ToFirewallCentralsnatmapDstintfArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapDstintfArrayOutput {
	return o
}

func (o FirewallCentralsnatmapDstintfArrayOutput) Index(i pulumi.IntInput) FirewallCentralsnatmapDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallCentralsnatmapDstintf {
		return vs[0].([]FirewallCentralsnatmapDstintf)[vs[1].(int)]
	}).(FirewallCentralsnatmapDstintfOutput)
}

type FirewallCentralsnatmapNatIppool6 struct {
	// Address name.
	//
	// The `origAddr6` block supports:
	//
	// The `dstAddr6` block supports:
	//
	// The `natIppool6` block supports:
	Name *string `pulumi:"name"`
}

// FirewallCentralsnatmapNatIppool6Input is an input type that accepts FirewallCentralsnatmapNatIppool6Args and FirewallCentralsnatmapNatIppool6Output values.
// You can construct a concrete instance of `FirewallCentralsnatmapNatIppool6Input` via:
//
//	FirewallCentralsnatmapNatIppool6Args{...}
type FirewallCentralsnatmapNatIppool6Input interface {
	pulumi.Input

	ToFirewallCentralsnatmapNatIppool6Output() FirewallCentralsnatmapNatIppool6Output
	ToFirewallCentralsnatmapNatIppool6OutputWithContext(context.Context) FirewallCentralsnatmapNatIppool6Output
}

type FirewallCentralsnatmapNatIppool6Args struct {
	// Address name.
	//
	// The `origAddr6` block supports:
	//
	// The `dstAddr6` block supports:
	//
	// The `natIppool6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallCentralsnatmapNatIppool6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapNatIppool6)(nil)).Elem()
}

func (i FirewallCentralsnatmapNatIppool6Args) ToFirewallCentralsnatmapNatIppool6Output() FirewallCentralsnatmapNatIppool6Output {
	return i.ToFirewallCentralsnatmapNatIppool6OutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapNatIppool6Args) ToFirewallCentralsnatmapNatIppool6OutputWithContext(ctx context.Context) FirewallCentralsnatmapNatIppool6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapNatIppool6Output)
}

// FirewallCentralsnatmapNatIppool6ArrayInput is an input type that accepts FirewallCentralsnatmapNatIppool6Array and FirewallCentralsnatmapNatIppool6ArrayOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapNatIppool6ArrayInput` via:
//
//	FirewallCentralsnatmapNatIppool6Array{ FirewallCentralsnatmapNatIppool6Args{...} }
type FirewallCentralsnatmapNatIppool6ArrayInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapNatIppool6ArrayOutput() FirewallCentralsnatmapNatIppool6ArrayOutput
	ToFirewallCentralsnatmapNatIppool6ArrayOutputWithContext(context.Context) FirewallCentralsnatmapNatIppool6ArrayOutput
}

type FirewallCentralsnatmapNatIppool6Array []FirewallCentralsnatmapNatIppool6Input

func (FirewallCentralsnatmapNatIppool6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapNatIppool6)(nil)).Elem()
}

func (i FirewallCentralsnatmapNatIppool6Array) ToFirewallCentralsnatmapNatIppool6ArrayOutput() FirewallCentralsnatmapNatIppool6ArrayOutput {
	return i.ToFirewallCentralsnatmapNatIppool6ArrayOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapNatIppool6Array) ToFirewallCentralsnatmapNatIppool6ArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapNatIppool6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapNatIppool6ArrayOutput)
}

type FirewallCentralsnatmapNatIppool6Output struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapNatIppool6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapNatIppool6)(nil)).Elem()
}

func (o FirewallCentralsnatmapNatIppool6Output) ToFirewallCentralsnatmapNatIppool6Output() FirewallCentralsnatmapNatIppool6Output {
	return o
}

func (o FirewallCentralsnatmapNatIppool6Output) ToFirewallCentralsnatmapNatIppool6OutputWithContext(ctx context.Context) FirewallCentralsnatmapNatIppool6Output {
	return o
}

// Address name.
//
// The `origAddr6` block supports:
//
// The `dstAddr6` block supports:
//
// The `natIppool6` block supports:
func (o FirewallCentralsnatmapNatIppool6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallCentralsnatmapNatIppool6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallCentralsnatmapNatIppool6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapNatIppool6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapNatIppool6)(nil)).Elem()
}

func (o FirewallCentralsnatmapNatIppool6ArrayOutput) ToFirewallCentralsnatmapNatIppool6ArrayOutput() FirewallCentralsnatmapNatIppool6ArrayOutput {
	return o
}

func (o FirewallCentralsnatmapNatIppool6ArrayOutput) ToFirewallCentralsnatmapNatIppool6ArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapNatIppool6ArrayOutput {
	return o
}

func (o FirewallCentralsnatmapNatIppool6ArrayOutput) Index(i pulumi.IntInput) FirewallCentralsnatmapNatIppool6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallCentralsnatmapNatIppool6 {
		return vs[0].([]FirewallCentralsnatmapNatIppool6)[vs[1].(int)]
	}).(FirewallCentralsnatmapNatIppool6Output)
}

type FirewallCentralsnatmapNatIppool struct {
	// IPv6 pool name.
	Name *string `pulumi:"name"`
}

// FirewallCentralsnatmapNatIppoolInput is an input type that accepts FirewallCentralsnatmapNatIppoolArgs and FirewallCentralsnatmapNatIppoolOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapNatIppoolInput` via:
//
//	FirewallCentralsnatmapNatIppoolArgs{...}
type FirewallCentralsnatmapNatIppoolInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapNatIppoolOutput() FirewallCentralsnatmapNatIppoolOutput
	ToFirewallCentralsnatmapNatIppoolOutputWithContext(context.Context) FirewallCentralsnatmapNatIppoolOutput
}

type FirewallCentralsnatmapNatIppoolArgs struct {
	// IPv6 pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallCentralsnatmapNatIppoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapNatIppool)(nil)).Elem()
}

func (i FirewallCentralsnatmapNatIppoolArgs) ToFirewallCentralsnatmapNatIppoolOutput() FirewallCentralsnatmapNatIppoolOutput {
	return i.ToFirewallCentralsnatmapNatIppoolOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapNatIppoolArgs) ToFirewallCentralsnatmapNatIppoolOutputWithContext(ctx context.Context) FirewallCentralsnatmapNatIppoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapNatIppoolOutput)
}

// FirewallCentralsnatmapNatIppoolArrayInput is an input type that accepts FirewallCentralsnatmapNatIppoolArray and FirewallCentralsnatmapNatIppoolArrayOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapNatIppoolArrayInput` via:
//
//	FirewallCentralsnatmapNatIppoolArray{ FirewallCentralsnatmapNatIppoolArgs{...} }
type FirewallCentralsnatmapNatIppoolArrayInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapNatIppoolArrayOutput() FirewallCentralsnatmapNatIppoolArrayOutput
	ToFirewallCentralsnatmapNatIppoolArrayOutputWithContext(context.Context) FirewallCentralsnatmapNatIppoolArrayOutput
}

type FirewallCentralsnatmapNatIppoolArray []FirewallCentralsnatmapNatIppoolInput

func (FirewallCentralsnatmapNatIppoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapNatIppool)(nil)).Elem()
}

func (i FirewallCentralsnatmapNatIppoolArray) ToFirewallCentralsnatmapNatIppoolArrayOutput() FirewallCentralsnatmapNatIppoolArrayOutput {
	return i.ToFirewallCentralsnatmapNatIppoolArrayOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapNatIppoolArray) ToFirewallCentralsnatmapNatIppoolArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapNatIppoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapNatIppoolArrayOutput)
}

type FirewallCentralsnatmapNatIppoolOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapNatIppoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapNatIppool)(nil)).Elem()
}

func (o FirewallCentralsnatmapNatIppoolOutput) ToFirewallCentralsnatmapNatIppoolOutput() FirewallCentralsnatmapNatIppoolOutput {
	return o
}

func (o FirewallCentralsnatmapNatIppoolOutput) ToFirewallCentralsnatmapNatIppoolOutputWithContext(ctx context.Context) FirewallCentralsnatmapNatIppoolOutput {
	return o
}

// IPv6 pool name.
func (o FirewallCentralsnatmapNatIppoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallCentralsnatmapNatIppool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallCentralsnatmapNatIppoolArrayOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapNatIppoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapNatIppool)(nil)).Elem()
}

func (o FirewallCentralsnatmapNatIppoolArrayOutput) ToFirewallCentralsnatmapNatIppoolArrayOutput() FirewallCentralsnatmapNatIppoolArrayOutput {
	return o
}

func (o FirewallCentralsnatmapNatIppoolArrayOutput) ToFirewallCentralsnatmapNatIppoolArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapNatIppoolArrayOutput {
	return o
}

func (o FirewallCentralsnatmapNatIppoolArrayOutput) Index(i pulumi.IntInput) FirewallCentralsnatmapNatIppoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallCentralsnatmapNatIppool {
		return vs[0].([]FirewallCentralsnatmapNatIppool)[vs[1].(int)]
	}).(FirewallCentralsnatmapNatIppoolOutput)
}

type FirewallCentralsnatmapOrigAddr6 struct {
	// Address name.
	//
	// The `origAddr6` block supports:
	//
	// The `dstAddr6` block supports:
	//
	// The `natIppool6` block supports:
	Name *string `pulumi:"name"`
}

// FirewallCentralsnatmapOrigAddr6Input is an input type that accepts FirewallCentralsnatmapOrigAddr6Args and FirewallCentralsnatmapOrigAddr6Output values.
// You can construct a concrete instance of `FirewallCentralsnatmapOrigAddr6Input` via:
//
//	FirewallCentralsnatmapOrigAddr6Args{...}
type FirewallCentralsnatmapOrigAddr6Input interface {
	pulumi.Input

	ToFirewallCentralsnatmapOrigAddr6Output() FirewallCentralsnatmapOrigAddr6Output
	ToFirewallCentralsnatmapOrigAddr6OutputWithContext(context.Context) FirewallCentralsnatmapOrigAddr6Output
}

type FirewallCentralsnatmapOrigAddr6Args struct {
	// Address name.
	//
	// The `origAddr6` block supports:
	//
	// The `dstAddr6` block supports:
	//
	// The `natIppool6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallCentralsnatmapOrigAddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (i FirewallCentralsnatmapOrigAddr6Args) ToFirewallCentralsnatmapOrigAddr6Output() FirewallCentralsnatmapOrigAddr6Output {
	return i.ToFirewallCentralsnatmapOrigAddr6OutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapOrigAddr6Args) ToFirewallCentralsnatmapOrigAddr6OutputWithContext(ctx context.Context) FirewallCentralsnatmapOrigAddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapOrigAddr6Output)
}

// FirewallCentralsnatmapOrigAddr6ArrayInput is an input type that accepts FirewallCentralsnatmapOrigAddr6Array and FirewallCentralsnatmapOrigAddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapOrigAddr6ArrayInput` via:
//
//	FirewallCentralsnatmapOrigAddr6Array{ FirewallCentralsnatmapOrigAddr6Args{...} }
type FirewallCentralsnatmapOrigAddr6ArrayInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapOrigAddr6ArrayOutput() FirewallCentralsnatmapOrigAddr6ArrayOutput
	ToFirewallCentralsnatmapOrigAddr6ArrayOutputWithContext(context.Context) FirewallCentralsnatmapOrigAddr6ArrayOutput
}

type FirewallCentralsnatmapOrigAddr6Array []FirewallCentralsnatmapOrigAddr6Input

func (FirewallCentralsnatmapOrigAddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (i FirewallCentralsnatmapOrigAddr6Array) ToFirewallCentralsnatmapOrigAddr6ArrayOutput() FirewallCentralsnatmapOrigAddr6ArrayOutput {
	return i.ToFirewallCentralsnatmapOrigAddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapOrigAddr6Array) ToFirewallCentralsnatmapOrigAddr6ArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapOrigAddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapOrigAddr6ArrayOutput)
}

type FirewallCentralsnatmapOrigAddr6Output struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapOrigAddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (o FirewallCentralsnatmapOrigAddr6Output) ToFirewallCentralsnatmapOrigAddr6Output() FirewallCentralsnatmapOrigAddr6Output {
	return o
}

func (o FirewallCentralsnatmapOrigAddr6Output) ToFirewallCentralsnatmapOrigAddr6OutputWithContext(ctx context.Context) FirewallCentralsnatmapOrigAddr6Output {
	return o
}

// Address name.
//
// The `origAddr6` block supports:
//
// The `dstAddr6` block supports:
//
// The `natIppool6` block supports:
func (o FirewallCentralsnatmapOrigAddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallCentralsnatmapOrigAddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallCentralsnatmapOrigAddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapOrigAddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapOrigAddr6)(nil)).Elem()
}

func (o FirewallCentralsnatmapOrigAddr6ArrayOutput) ToFirewallCentralsnatmapOrigAddr6ArrayOutput() FirewallCentralsnatmapOrigAddr6ArrayOutput {
	return o
}

func (o FirewallCentralsnatmapOrigAddr6ArrayOutput) ToFirewallCentralsnatmapOrigAddr6ArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapOrigAddr6ArrayOutput {
	return o
}

func (o FirewallCentralsnatmapOrigAddr6ArrayOutput) Index(i pulumi.IntInput) FirewallCentralsnatmapOrigAddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallCentralsnatmapOrigAddr6 {
		return vs[0].([]FirewallCentralsnatmapOrigAddr6)[vs[1].(int)]
	}).(FirewallCentralsnatmapOrigAddr6Output)
}

type FirewallCentralsnatmapOrigAddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallCentralsnatmapOrigAddrInput is an input type that accepts FirewallCentralsnatmapOrigAddrArgs and FirewallCentralsnatmapOrigAddrOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapOrigAddrInput` via:
//
//	FirewallCentralsnatmapOrigAddrArgs{...}
type FirewallCentralsnatmapOrigAddrInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapOrigAddrOutput() FirewallCentralsnatmapOrigAddrOutput
	ToFirewallCentralsnatmapOrigAddrOutputWithContext(context.Context) FirewallCentralsnatmapOrigAddrOutput
}

type FirewallCentralsnatmapOrigAddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallCentralsnatmapOrigAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapOrigAddr)(nil)).Elem()
}

func (i FirewallCentralsnatmapOrigAddrArgs) ToFirewallCentralsnatmapOrigAddrOutput() FirewallCentralsnatmapOrigAddrOutput {
	return i.ToFirewallCentralsnatmapOrigAddrOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapOrigAddrArgs) ToFirewallCentralsnatmapOrigAddrOutputWithContext(ctx context.Context) FirewallCentralsnatmapOrigAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapOrigAddrOutput)
}

// FirewallCentralsnatmapOrigAddrArrayInput is an input type that accepts FirewallCentralsnatmapOrigAddrArray and FirewallCentralsnatmapOrigAddrArrayOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapOrigAddrArrayInput` via:
//
//	FirewallCentralsnatmapOrigAddrArray{ FirewallCentralsnatmapOrigAddrArgs{...} }
type FirewallCentralsnatmapOrigAddrArrayInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapOrigAddrArrayOutput() FirewallCentralsnatmapOrigAddrArrayOutput
	ToFirewallCentralsnatmapOrigAddrArrayOutputWithContext(context.Context) FirewallCentralsnatmapOrigAddrArrayOutput
}

type FirewallCentralsnatmapOrigAddrArray []FirewallCentralsnatmapOrigAddrInput

func (FirewallCentralsnatmapOrigAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapOrigAddr)(nil)).Elem()
}

func (i FirewallCentralsnatmapOrigAddrArray) ToFirewallCentralsnatmapOrigAddrArrayOutput() FirewallCentralsnatmapOrigAddrArrayOutput {
	return i.ToFirewallCentralsnatmapOrigAddrArrayOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapOrigAddrArray) ToFirewallCentralsnatmapOrigAddrArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapOrigAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapOrigAddrArrayOutput)
}

type FirewallCentralsnatmapOrigAddrOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapOrigAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapOrigAddr)(nil)).Elem()
}

func (o FirewallCentralsnatmapOrigAddrOutput) ToFirewallCentralsnatmapOrigAddrOutput() FirewallCentralsnatmapOrigAddrOutput {
	return o
}

func (o FirewallCentralsnatmapOrigAddrOutput) ToFirewallCentralsnatmapOrigAddrOutputWithContext(ctx context.Context) FirewallCentralsnatmapOrigAddrOutput {
	return o
}

// Address name.
func (o FirewallCentralsnatmapOrigAddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallCentralsnatmapOrigAddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallCentralsnatmapOrigAddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapOrigAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapOrigAddr)(nil)).Elem()
}

func (o FirewallCentralsnatmapOrigAddrArrayOutput) ToFirewallCentralsnatmapOrigAddrArrayOutput() FirewallCentralsnatmapOrigAddrArrayOutput {
	return o
}

func (o FirewallCentralsnatmapOrigAddrArrayOutput) ToFirewallCentralsnatmapOrigAddrArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapOrigAddrArrayOutput {
	return o
}

func (o FirewallCentralsnatmapOrigAddrArrayOutput) Index(i pulumi.IntInput) FirewallCentralsnatmapOrigAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallCentralsnatmapOrigAddr {
		return vs[0].([]FirewallCentralsnatmapOrigAddr)[vs[1].(int)]
	}).(FirewallCentralsnatmapOrigAddrOutput)
}

type FirewallCentralsnatmapSrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallCentralsnatmapSrcintfInput is an input type that accepts FirewallCentralsnatmapSrcintfArgs and FirewallCentralsnatmapSrcintfOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapSrcintfInput` via:
//
//	FirewallCentralsnatmapSrcintfArgs{...}
type FirewallCentralsnatmapSrcintfInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapSrcintfOutput() FirewallCentralsnatmapSrcintfOutput
	ToFirewallCentralsnatmapSrcintfOutputWithContext(context.Context) FirewallCentralsnatmapSrcintfOutput
}

type FirewallCentralsnatmapSrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallCentralsnatmapSrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapSrcintf)(nil)).Elem()
}

func (i FirewallCentralsnatmapSrcintfArgs) ToFirewallCentralsnatmapSrcintfOutput() FirewallCentralsnatmapSrcintfOutput {
	return i.ToFirewallCentralsnatmapSrcintfOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapSrcintfArgs) ToFirewallCentralsnatmapSrcintfOutputWithContext(ctx context.Context) FirewallCentralsnatmapSrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapSrcintfOutput)
}

// FirewallCentralsnatmapSrcintfArrayInput is an input type that accepts FirewallCentralsnatmapSrcintfArray and FirewallCentralsnatmapSrcintfArrayOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapSrcintfArrayInput` via:
//
//	FirewallCentralsnatmapSrcintfArray{ FirewallCentralsnatmapSrcintfArgs{...} }
type FirewallCentralsnatmapSrcintfArrayInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapSrcintfArrayOutput() FirewallCentralsnatmapSrcintfArrayOutput
	ToFirewallCentralsnatmapSrcintfArrayOutputWithContext(context.Context) FirewallCentralsnatmapSrcintfArrayOutput
}

type FirewallCentralsnatmapSrcintfArray []FirewallCentralsnatmapSrcintfInput

func (FirewallCentralsnatmapSrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapSrcintf)(nil)).Elem()
}

func (i FirewallCentralsnatmapSrcintfArray) ToFirewallCentralsnatmapSrcintfArrayOutput() FirewallCentralsnatmapSrcintfArrayOutput {
	return i.ToFirewallCentralsnatmapSrcintfArrayOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapSrcintfArray) ToFirewallCentralsnatmapSrcintfArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapSrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapSrcintfArrayOutput)
}

type FirewallCentralsnatmapSrcintfOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapSrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCentralsnatmapSrcintf)(nil)).Elem()
}

func (o FirewallCentralsnatmapSrcintfOutput) ToFirewallCentralsnatmapSrcintfOutput() FirewallCentralsnatmapSrcintfOutput {
	return o
}

func (o FirewallCentralsnatmapSrcintfOutput) ToFirewallCentralsnatmapSrcintfOutputWithContext(ctx context.Context) FirewallCentralsnatmapSrcintfOutput {
	return o
}

// Interface name.
func (o FirewallCentralsnatmapSrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallCentralsnatmapSrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallCentralsnatmapSrcintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapSrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCentralsnatmapSrcintf)(nil)).Elem()
}

func (o FirewallCentralsnatmapSrcintfArrayOutput) ToFirewallCentralsnatmapSrcintfArrayOutput() FirewallCentralsnatmapSrcintfArrayOutput {
	return o
}

func (o FirewallCentralsnatmapSrcintfArrayOutput) ToFirewallCentralsnatmapSrcintfArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapSrcintfArrayOutput {
	return o
}

func (o FirewallCentralsnatmapSrcintfArrayOutput) Index(i pulumi.IntInput) FirewallCentralsnatmapSrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallCentralsnatmapSrcintf {
		return vs[0].([]FirewallCentralsnatmapSrcintf)[vs[1].(int)]
	}).(FirewallCentralsnatmapSrcintfOutput)
}

type FirewallCountryRegion struct {
	// Region ID.
	Id *int `pulumi:"id"`
}

// FirewallCountryRegionInput is an input type that accepts FirewallCountryRegionArgs and FirewallCountryRegionOutput values.
// You can construct a concrete instance of `FirewallCountryRegionInput` via:
//
//	FirewallCountryRegionArgs{...}
type FirewallCountryRegionInput interface {
	pulumi.Input

	ToFirewallCountryRegionOutput() FirewallCountryRegionOutput
	ToFirewallCountryRegionOutputWithContext(context.Context) FirewallCountryRegionOutput
}

type FirewallCountryRegionArgs struct {
	// Region ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallCountryRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCountryRegion)(nil)).Elem()
}

func (i FirewallCountryRegionArgs) ToFirewallCountryRegionOutput() FirewallCountryRegionOutput {
	return i.ToFirewallCountryRegionOutputWithContext(context.Background())
}

func (i FirewallCountryRegionArgs) ToFirewallCountryRegionOutputWithContext(ctx context.Context) FirewallCountryRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCountryRegionOutput)
}

// FirewallCountryRegionArrayInput is an input type that accepts FirewallCountryRegionArray and FirewallCountryRegionArrayOutput values.
// You can construct a concrete instance of `FirewallCountryRegionArrayInput` via:
//
//	FirewallCountryRegionArray{ FirewallCountryRegionArgs{...} }
type FirewallCountryRegionArrayInput interface {
	pulumi.Input

	ToFirewallCountryRegionArrayOutput() FirewallCountryRegionArrayOutput
	ToFirewallCountryRegionArrayOutputWithContext(context.Context) FirewallCountryRegionArrayOutput
}

type FirewallCountryRegionArray []FirewallCountryRegionInput

func (FirewallCountryRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCountryRegion)(nil)).Elem()
}

func (i FirewallCountryRegionArray) ToFirewallCountryRegionArrayOutput() FirewallCountryRegionArrayOutput {
	return i.ToFirewallCountryRegionArrayOutputWithContext(context.Background())
}

func (i FirewallCountryRegionArray) ToFirewallCountryRegionArrayOutputWithContext(ctx context.Context) FirewallCountryRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCountryRegionArrayOutput)
}

type FirewallCountryRegionOutput struct{ *pulumi.OutputState }

func (FirewallCountryRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallCountryRegion)(nil)).Elem()
}

func (o FirewallCountryRegionOutput) ToFirewallCountryRegionOutput() FirewallCountryRegionOutput {
	return o
}

func (o FirewallCountryRegionOutput) ToFirewallCountryRegionOutputWithContext(ctx context.Context) FirewallCountryRegionOutput {
	return o
}

// Region ID.
func (o FirewallCountryRegionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallCountryRegion) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallCountryRegionArrayOutput struct{ *pulumi.OutputState }

func (FirewallCountryRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallCountryRegion)(nil)).Elem()
}

func (o FirewallCountryRegionArrayOutput) ToFirewallCountryRegionArrayOutput() FirewallCountryRegionArrayOutput {
	return o
}

func (o FirewallCountryRegionArrayOutput) ToFirewallCountryRegionArrayOutputWithContext(ctx context.Context) FirewallCountryRegionArrayOutput {
	return o
}

func (o FirewallCountryRegionArrayOutput) Index(i pulumi.IntInput) FirewallCountryRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallCountryRegion {
		return vs[0].([]FirewallCountryRegion)[vs[1].(int)]
	}).(FirewallCountryRegionOutput)
}

type FirewallDecryptedtrafficmirrorInterface struct {
	// Decrypted traffic mirror interface.
	Name *string `pulumi:"name"`
}

// FirewallDecryptedtrafficmirrorInterfaceInput is an input type that accepts FirewallDecryptedtrafficmirrorInterfaceArgs and FirewallDecryptedtrafficmirrorInterfaceOutput values.
// You can construct a concrete instance of `FirewallDecryptedtrafficmirrorInterfaceInput` via:
//
//	FirewallDecryptedtrafficmirrorInterfaceArgs{...}
type FirewallDecryptedtrafficmirrorInterfaceInput interface {
	pulumi.Input

	ToFirewallDecryptedtrafficmirrorInterfaceOutput() FirewallDecryptedtrafficmirrorInterfaceOutput
	ToFirewallDecryptedtrafficmirrorInterfaceOutputWithContext(context.Context) FirewallDecryptedtrafficmirrorInterfaceOutput
}

type FirewallDecryptedtrafficmirrorInterfaceArgs struct {
	// Decrypted traffic mirror interface.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallDecryptedtrafficmirrorInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDecryptedtrafficmirrorInterface)(nil)).Elem()
}

func (i FirewallDecryptedtrafficmirrorInterfaceArgs) ToFirewallDecryptedtrafficmirrorInterfaceOutput() FirewallDecryptedtrafficmirrorInterfaceOutput {
	return i.ToFirewallDecryptedtrafficmirrorInterfaceOutputWithContext(context.Background())
}

func (i FirewallDecryptedtrafficmirrorInterfaceArgs) ToFirewallDecryptedtrafficmirrorInterfaceOutputWithContext(ctx context.Context) FirewallDecryptedtrafficmirrorInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDecryptedtrafficmirrorInterfaceOutput)
}

// FirewallDecryptedtrafficmirrorInterfaceArrayInput is an input type that accepts FirewallDecryptedtrafficmirrorInterfaceArray and FirewallDecryptedtrafficmirrorInterfaceArrayOutput values.
// You can construct a concrete instance of `FirewallDecryptedtrafficmirrorInterfaceArrayInput` via:
//
//	FirewallDecryptedtrafficmirrorInterfaceArray{ FirewallDecryptedtrafficmirrorInterfaceArgs{...} }
type FirewallDecryptedtrafficmirrorInterfaceArrayInput interface {
	pulumi.Input

	ToFirewallDecryptedtrafficmirrorInterfaceArrayOutput() FirewallDecryptedtrafficmirrorInterfaceArrayOutput
	ToFirewallDecryptedtrafficmirrorInterfaceArrayOutputWithContext(context.Context) FirewallDecryptedtrafficmirrorInterfaceArrayOutput
}

type FirewallDecryptedtrafficmirrorInterfaceArray []FirewallDecryptedtrafficmirrorInterfaceInput

func (FirewallDecryptedtrafficmirrorInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDecryptedtrafficmirrorInterface)(nil)).Elem()
}

func (i FirewallDecryptedtrafficmirrorInterfaceArray) ToFirewallDecryptedtrafficmirrorInterfaceArrayOutput() FirewallDecryptedtrafficmirrorInterfaceArrayOutput {
	return i.ToFirewallDecryptedtrafficmirrorInterfaceArrayOutputWithContext(context.Background())
}

func (i FirewallDecryptedtrafficmirrorInterfaceArray) ToFirewallDecryptedtrafficmirrorInterfaceArrayOutputWithContext(ctx context.Context) FirewallDecryptedtrafficmirrorInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDecryptedtrafficmirrorInterfaceArrayOutput)
}

type FirewallDecryptedtrafficmirrorInterfaceOutput struct{ *pulumi.OutputState }

func (FirewallDecryptedtrafficmirrorInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDecryptedtrafficmirrorInterface)(nil)).Elem()
}

func (o FirewallDecryptedtrafficmirrorInterfaceOutput) ToFirewallDecryptedtrafficmirrorInterfaceOutput() FirewallDecryptedtrafficmirrorInterfaceOutput {
	return o
}

func (o FirewallDecryptedtrafficmirrorInterfaceOutput) ToFirewallDecryptedtrafficmirrorInterfaceOutputWithContext(ctx context.Context) FirewallDecryptedtrafficmirrorInterfaceOutput {
	return o
}

// Decrypted traffic mirror interface.
func (o FirewallDecryptedtrafficmirrorInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDecryptedtrafficmirrorInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallDecryptedtrafficmirrorInterfaceArrayOutput struct{ *pulumi.OutputState }

func (FirewallDecryptedtrafficmirrorInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDecryptedtrafficmirrorInterface)(nil)).Elem()
}

func (o FirewallDecryptedtrafficmirrorInterfaceArrayOutput) ToFirewallDecryptedtrafficmirrorInterfaceArrayOutput() FirewallDecryptedtrafficmirrorInterfaceArrayOutput {
	return o
}

func (o FirewallDecryptedtrafficmirrorInterfaceArrayOutput) ToFirewallDecryptedtrafficmirrorInterfaceArrayOutputWithContext(ctx context.Context) FirewallDecryptedtrafficmirrorInterfaceArrayOutput {
	return o
}

func (o FirewallDecryptedtrafficmirrorInterfaceArrayOutput) Index(i pulumi.IntInput) FirewallDecryptedtrafficmirrorInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDecryptedtrafficmirrorInterface {
		return vs[0].([]FirewallDecryptedtrafficmirrorInterface)[vs[1].(int)]
	}).(FirewallDecryptedtrafficmirrorInterfaceOutput)
}

type FirewallDoSpolicy6Anomaly struct {
	// Action taken when the threshold is reached.
	Action *string `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Anomaly name.
	Name *string `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine *string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry *string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog *string `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold *int `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault *int `pulumi:"thresholddefault"`
}

// FirewallDoSpolicy6AnomalyInput is an input type that accepts FirewallDoSpolicy6AnomalyArgs and FirewallDoSpolicy6AnomalyOutput values.
// You can construct a concrete instance of `FirewallDoSpolicy6AnomalyInput` via:
//
//	FirewallDoSpolicy6AnomalyArgs{...}
type FirewallDoSpolicy6AnomalyInput interface {
	pulumi.Input

	ToFirewallDoSpolicy6AnomalyOutput() FirewallDoSpolicy6AnomalyOutput
	ToFirewallDoSpolicy6AnomalyOutputWithContext(context.Context) FirewallDoSpolicy6AnomalyOutput
}

type FirewallDoSpolicy6AnomalyArgs struct {
	// Action taken when the threshold is reached.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Anomaly name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringPtrInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog pulumi.StringPtrInput `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault pulumi.IntPtrInput `pulumi:"thresholddefault"`
}

func (FirewallDoSpolicy6AnomalyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicy6Anomaly)(nil)).Elem()
}

func (i FirewallDoSpolicy6AnomalyArgs) ToFirewallDoSpolicy6AnomalyOutput() FirewallDoSpolicy6AnomalyOutput {
	return i.ToFirewallDoSpolicy6AnomalyOutputWithContext(context.Background())
}

func (i FirewallDoSpolicy6AnomalyArgs) ToFirewallDoSpolicy6AnomalyOutputWithContext(ctx context.Context) FirewallDoSpolicy6AnomalyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6AnomalyOutput)
}

// FirewallDoSpolicy6AnomalyArrayInput is an input type that accepts FirewallDoSpolicy6AnomalyArray and FirewallDoSpolicy6AnomalyArrayOutput values.
// You can construct a concrete instance of `FirewallDoSpolicy6AnomalyArrayInput` via:
//
//	FirewallDoSpolicy6AnomalyArray{ FirewallDoSpolicy6AnomalyArgs{...} }
type FirewallDoSpolicy6AnomalyArrayInput interface {
	pulumi.Input

	ToFirewallDoSpolicy6AnomalyArrayOutput() FirewallDoSpolicy6AnomalyArrayOutput
	ToFirewallDoSpolicy6AnomalyArrayOutputWithContext(context.Context) FirewallDoSpolicy6AnomalyArrayOutput
}

type FirewallDoSpolicy6AnomalyArray []FirewallDoSpolicy6AnomalyInput

func (FirewallDoSpolicy6AnomalyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicy6Anomaly)(nil)).Elem()
}

func (i FirewallDoSpolicy6AnomalyArray) ToFirewallDoSpolicy6AnomalyArrayOutput() FirewallDoSpolicy6AnomalyArrayOutput {
	return i.ToFirewallDoSpolicy6AnomalyArrayOutputWithContext(context.Background())
}

func (i FirewallDoSpolicy6AnomalyArray) ToFirewallDoSpolicy6AnomalyArrayOutputWithContext(ctx context.Context) FirewallDoSpolicy6AnomalyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6AnomalyArrayOutput)
}

type FirewallDoSpolicy6AnomalyOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6AnomalyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicy6Anomaly)(nil)).Elem()
}

func (o FirewallDoSpolicy6AnomalyOutput) ToFirewallDoSpolicy6AnomalyOutput() FirewallDoSpolicy6AnomalyOutput {
	return o
}

func (o FirewallDoSpolicy6AnomalyOutput) ToFirewallDoSpolicy6AnomalyOutputWithContext(ctx context.Context) FirewallDoSpolicy6AnomalyOutput {
	return o
}

// Action taken when the threshold is reached.
func (o FirewallDoSpolicy6AnomalyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Anomaly) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
func (o FirewallDoSpolicy6AnomalyOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Anomaly) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Anomaly name.
func (o FirewallDoSpolicy6AnomalyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Anomaly) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Quarantine method. Valid values: `none`, `attacker`.
func (o FirewallDoSpolicy6AnomalyOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Anomaly) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o FirewallDoSpolicy6AnomalyOutput) QuarantineExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Anomaly) *string { return v.QuarantineExpiry }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
func (o FirewallDoSpolicy6AnomalyOutput) QuarantineLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Anomaly) *string { return v.QuarantineLog }).(pulumi.StringPtrOutput)
}

// Enable/disable this anomaly. Valid values: `disable`, `enable`.
func (o FirewallDoSpolicy6AnomalyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Anomaly) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
func (o FirewallDoSpolicy6AnomalyOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Anomaly) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
func (o FirewallDoSpolicy6AnomalyOutput) Thresholddefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Anomaly) *int { return v.Thresholddefault }).(pulumi.IntPtrOutput)
}

type FirewallDoSpolicy6AnomalyArrayOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6AnomalyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicy6Anomaly)(nil)).Elem()
}

func (o FirewallDoSpolicy6AnomalyArrayOutput) ToFirewallDoSpolicy6AnomalyArrayOutput() FirewallDoSpolicy6AnomalyArrayOutput {
	return o
}

func (o FirewallDoSpolicy6AnomalyArrayOutput) ToFirewallDoSpolicy6AnomalyArrayOutputWithContext(ctx context.Context) FirewallDoSpolicy6AnomalyArrayOutput {
	return o
}

func (o FirewallDoSpolicy6AnomalyArrayOutput) Index(i pulumi.IntInput) FirewallDoSpolicy6AnomalyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDoSpolicy6Anomaly {
		return vs[0].([]FirewallDoSpolicy6Anomaly)[vs[1].(int)]
	}).(FirewallDoSpolicy6AnomalyOutput)
}

type FirewallDoSpolicy6Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallDoSpolicy6DstaddrInput is an input type that accepts FirewallDoSpolicy6DstaddrArgs and FirewallDoSpolicy6DstaddrOutput values.
// You can construct a concrete instance of `FirewallDoSpolicy6DstaddrInput` via:
//
//	FirewallDoSpolicy6DstaddrArgs{...}
type FirewallDoSpolicy6DstaddrInput interface {
	pulumi.Input

	ToFirewallDoSpolicy6DstaddrOutput() FirewallDoSpolicy6DstaddrOutput
	ToFirewallDoSpolicy6DstaddrOutputWithContext(context.Context) FirewallDoSpolicy6DstaddrOutput
}

type FirewallDoSpolicy6DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallDoSpolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicy6Dstaddr)(nil)).Elem()
}

func (i FirewallDoSpolicy6DstaddrArgs) ToFirewallDoSpolicy6DstaddrOutput() FirewallDoSpolicy6DstaddrOutput {
	return i.ToFirewallDoSpolicy6DstaddrOutputWithContext(context.Background())
}

func (i FirewallDoSpolicy6DstaddrArgs) ToFirewallDoSpolicy6DstaddrOutputWithContext(ctx context.Context) FirewallDoSpolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6DstaddrOutput)
}

// FirewallDoSpolicy6DstaddrArrayInput is an input type that accepts FirewallDoSpolicy6DstaddrArray and FirewallDoSpolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallDoSpolicy6DstaddrArrayInput` via:
//
//	FirewallDoSpolicy6DstaddrArray{ FirewallDoSpolicy6DstaddrArgs{...} }
type FirewallDoSpolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToFirewallDoSpolicy6DstaddrArrayOutput() FirewallDoSpolicy6DstaddrArrayOutput
	ToFirewallDoSpolicy6DstaddrArrayOutputWithContext(context.Context) FirewallDoSpolicy6DstaddrArrayOutput
}

type FirewallDoSpolicy6DstaddrArray []FirewallDoSpolicy6DstaddrInput

func (FirewallDoSpolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicy6Dstaddr)(nil)).Elem()
}

func (i FirewallDoSpolicy6DstaddrArray) ToFirewallDoSpolicy6DstaddrArrayOutput() FirewallDoSpolicy6DstaddrArrayOutput {
	return i.ToFirewallDoSpolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallDoSpolicy6DstaddrArray) ToFirewallDoSpolicy6DstaddrArrayOutputWithContext(ctx context.Context) FirewallDoSpolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6DstaddrArrayOutput)
}

type FirewallDoSpolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicy6Dstaddr)(nil)).Elem()
}

func (o FirewallDoSpolicy6DstaddrOutput) ToFirewallDoSpolicy6DstaddrOutput() FirewallDoSpolicy6DstaddrOutput {
	return o
}

func (o FirewallDoSpolicy6DstaddrOutput) ToFirewallDoSpolicy6DstaddrOutputWithContext(ctx context.Context) FirewallDoSpolicy6DstaddrOutput {
	return o
}

// Address name.
func (o FirewallDoSpolicy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallDoSpolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicy6Dstaddr)(nil)).Elem()
}

func (o FirewallDoSpolicy6DstaddrArrayOutput) ToFirewallDoSpolicy6DstaddrArrayOutput() FirewallDoSpolicy6DstaddrArrayOutput {
	return o
}

func (o FirewallDoSpolicy6DstaddrArrayOutput) ToFirewallDoSpolicy6DstaddrArrayOutputWithContext(ctx context.Context) FirewallDoSpolicy6DstaddrArrayOutput {
	return o
}

func (o FirewallDoSpolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) FirewallDoSpolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDoSpolicy6Dstaddr {
		return vs[0].([]FirewallDoSpolicy6Dstaddr)[vs[1].(int)]
	}).(FirewallDoSpolicy6DstaddrOutput)
}

type FirewallDoSpolicy6Service struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallDoSpolicy6ServiceInput is an input type that accepts FirewallDoSpolicy6ServiceArgs and FirewallDoSpolicy6ServiceOutput values.
// You can construct a concrete instance of `FirewallDoSpolicy6ServiceInput` via:
//
//	FirewallDoSpolicy6ServiceArgs{...}
type FirewallDoSpolicy6ServiceInput interface {
	pulumi.Input

	ToFirewallDoSpolicy6ServiceOutput() FirewallDoSpolicy6ServiceOutput
	ToFirewallDoSpolicy6ServiceOutputWithContext(context.Context) FirewallDoSpolicy6ServiceOutput
}

type FirewallDoSpolicy6ServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallDoSpolicy6ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicy6Service)(nil)).Elem()
}

func (i FirewallDoSpolicy6ServiceArgs) ToFirewallDoSpolicy6ServiceOutput() FirewallDoSpolicy6ServiceOutput {
	return i.ToFirewallDoSpolicy6ServiceOutputWithContext(context.Background())
}

func (i FirewallDoSpolicy6ServiceArgs) ToFirewallDoSpolicy6ServiceOutputWithContext(ctx context.Context) FirewallDoSpolicy6ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6ServiceOutput)
}

// FirewallDoSpolicy6ServiceArrayInput is an input type that accepts FirewallDoSpolicy6ServiceArray and FirewallDoSpolicy6ServiceArrayOutput values.
// You can construct a concrete instance of `FirewallDoSpolicy6ServiceArrayInput` via:
//
//	FirewallDoSpolicy6ServiceArray{ FirewallDoSpolicy6ServiceArgs{...} }
type FirewallDoSpolicy6ServiceArrayInput interface {
	pulumi.Input

	ToFirewallDoSpolicy6ServiceArrayOutput() FirewallDoSpolicy6ServiceArrayOutput
	ToFirewallDoSpolicy6ServiceArrayOutputWithContext(context.Context) FirewallDoSpolicy6ServiceArrayOutput
}

type FirewallDoSpolicy6ServiceArray []FirewallDoSpolicy6ServiceInput

func (FirewallDoSpolicy6ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicy6Service)(nil)).Elem()
}

func (i FirewallDoSpolicy6ServiceArray) ToFirewallDoSpolicy6ServiceArrayOutput() FirewallDoSpolicy6ServiceArrayOutput {
	return i.ToFirewallDoSpolicy6ServiceArrayOutputWithContext(context.Background())
}

func (i FirewallDoSpolicy6ServiceArray) ToFirewallDoSpolicy6ServiceArrayOutputWithContext(ctx context.Context) FirewallDoSpolicy6ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6ServiceArrayOutput)
}

type FirewallDoSpolicy6ServiceOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicy6Service)(nil)).Elem()
}

func (o FirewallDoSpolicy6ServiceOutput) ToFirewallDoSpolicy6ServiceOutput() FirewallDoSpolicy6ServiceOutput {
	return o
}

func (o FirewallDoSpolicy6ServiceOutput) ToFirewallDoSpolicy6ServiceOutputWithContext(ctx context.Context) FirewallDoSpolicy6ServiceOutput {
	return o
}

// Service name.
func (o FirewallDoSpolicy6ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallDoSpolicy6ServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicy6Service)(nil)).Elem()
}

func (o FirewallDoSpolicy6ServiceArrayOutput) ToFirewallDoSpolicy6ServiceArrayOutput() FirewallDoSpolicy6ServiceArrayOutput {
	return o
}

func (o FirewallDoSpolicy6ServiceArrayOutput) ToFirewallDoSpolicy6ServiceArrayOutputWithContext(ctx context.Context) FirewallDoSpolicy6ServiceArrayOutput {
	return o
}

func (o FirewallDoSpolicy6ServiceArrayOutput) Index(i pulumi.IntInput) FirewallDoSpolicy6ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDoSpolicy6Service {
		return vs[0].([]FirewallDoSpolicy6Service)[vs[1].(int)]
	}).(FirewallDoSpolicy6ServiceOutput)
}

type FirewallDoSpolicy6Srcaddr struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallDoSpolicy6SrcaddrInput is an input type that accepts FirewallDoSpolicy6SrcaddrArgs and FirewallDoSpolicy6SrcaddrOutput values.
// You can construct a concrete instance of `FirewallDoSpolicy6SrcaddrInput` via:
//
//	FirewallDoSpolicy6SrcaddrArgs{...}
type FirewallDoSpolicy6SrcaddrInput interface {
	pulumi.Input

	ToFirewallDoSpolicy6SrcaddrOutput() FirewallDoSpolicy6SrcaddrOutput
	ToFirewallDoSpolicy6SrcaddrOutputWithContext(context.Context) FirewallDoSpolicy6SrcaddrOutput
}

type FirewallDoSpolicy6SrcaddrArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallDoSpolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicy6Srcaddr)(nil)).Elem()
}

func (i FirewallDoSpolicy6SrcaddrArgs) ToFirewallDoSpolicy6SrcaddrOutput() FirewallDoSpolicy6SrcaddrOutput {
	return i.ToFirewallDoSpolicy6SrcaddrOutputWithContext(context.Background())
}

func (i FirewallDoSpolicy6SrcaddrArgs) ToFirewallDoSpolicy6SrcaddrOutputWithContext(ctx context.Context) FirewallDoSpolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6SrcaddrOutput)
}

// FirewallDoSpolicy6SrcaddrArrayInput is an input type that accepts FirewallDoSpolicy6SrcaddrArray and FirewallDoSpolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallDoSpolicy6SrcaddrArrayInput` via:
//
//	FirewallDoSpolicy6SrcaddrArray{ FirewallDoSpolicy6SrcaddrArgs{...} }
type FirewallDoSpolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallDoSpolicy6SrcaddrArrayOutput() FirewallDoSpolicy6SrcaddrArrayOutput
	ToFirewallDoSpolicy6SrcaddrArrayOutputWithContext(context.Context) FirewallDoSpolicy6SrcaddrArrayOutput
}

type FirewallDoSpolicy6SrcaddrArray []FirewallDoSpolicy6SrcaddrInput

func (FirewallDoSpolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicy6Srcaddr)(nil)).Elem()
}

func (i FirewallDoSpolicy6SrcaddrArray) ToFirewallDoSpolicy6SrcaddrArrayOutput() FirewallDoSpolicy6SrcaddrArrayOutput {
	return i.ToFirewallDoSpolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallDoSpolicy6SrcaddrArray) ToFirewallDoSpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) FirewallDoSpolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicy6SrcaddrArrayOutput)
}

type FirewallDoSpolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicy6Srcaddr)(nil)).Elem()
}

func (o FirewallDoSpolicy6SrcaddrOutput) ToFirewallDoSpolicy6SrcaddrOutput() FirewallDoSpolicy6SrcaddrOutput {
	return o
}

func (o FirewallDoSpolicy6SrcaddrOutput) ToFirewallDoSpolicy6SrcaddrOutputWithContext(ctx context.Context) FirewallDoSpolicy6SrcaddrOutput {
	return o
}

// Service name.
func (o FirewallDoSpolicy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallDoSpolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicy6Srcaddr)(nil)).Elem()
}

func (o FirewallDoSpolicy6SrcaddrArrayOutput) ToFirewallDoSpolicy6SrcaddrArrayOutput() FirewallDoSpolicy6SrcaddrArrayOutput {
	return o
}

func (o FirewallDoSpolicy6SrcaddrArrayOutput) ToFirewallDoSpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) FirewallDoSpolicy6SrcaddrArrayOutput {
	return o
}

func (o FirewallDoSpolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallDoSpolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDoSpolicy6Srcaddr {
		return vs[0].([]FirewallDoSpolicy6Srcaddr)[vs[1].(int)]
	}).(FirewallDoSpolicy6SrcaddrOutput)
}

type FirewallDoSpolicyAnomaly struct {
	// Action taken when the threshold is reached.
	Action *string `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Anomaly name.
	Name *string `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine *string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry *string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog *string `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold *int `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault *int `pulumi:"thresholddefault"`
}

// FirewallDoSpolicyAnomalyInput is an input type that accepts FirewallDoSpolicyAnomalyArgs and FirewallDoSpolicyAnomalyOutput values.
// You can construct a concrete instance of `FirewallDoSpolicyAnomalyInput` via:
//
//	FirewallDoSpolicyAnomalyArgs{...}
type FirewallDoSpolicyAnomalyInput interface {
	pulumi.Input

	ToFirewallDoSpolicyAnomalyOutput() FirewallDoSpolicyAnomalyOutput
	ToFirewallDoSpolicyAnomalyOutputWithContext(context.Context) FirewallDoSpolicyAnomalyOutput
}

type FirewallDoSpolicyAnomalyArgs struct {
	// Action taken when the threshold is reached.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Anomaly name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringPtrInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog pulumi.StringPtrInput `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault pulumi.IntPtrInput `pulumi:"thresholddefault"`
}

func (FirewallDoSpolicyAnomalyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicyAnomaly)(nil)).Elem()
}

func (i FirewallDoSpolicyAnomalyArgs) ToFirewallDoSpolicyAnomalyOutput() FirewallDoSpolicyAnomalyOutput {
	return i.ToFirewallDoSpolicyAnomalyOutputWithContext(context.Background())
}

func (i FirewallDoSpolicyAnomalyArgs) ToFirewallDoSpolicyAnomalyOutputWithContext(ctx context.Context) FirewallDoSpolicyAnomalyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicyAnomalyOutput)
}

// FirewallDoSpolicyAnomalyArrayInput is an input type that accepts FirewallDoSpolicyAnomalyArray and FirewallDoSpolicyAnomalyArrayOutput values.
// You can construct a concrete instance of `FirewallDoSpolicyAnomalyArrayInput` via:
//
//	FirewallDoSpolicyAnomalyArray{ FirewallDoSpolicyAnomalyArgs{...} }
type FirewallDoSpolicyAnomalyArrayInput interface {
	pulumi.Input

	ToFirewallDoSpolicyAnomalyArrayOutput() FirewallDoSpolicyAnomalyArrayOutput
	ToFirewallDoSpolicyAnomalyArrayOutputWithContext(context.Context) FirewallDoSpolicyAnomalyArrayOutput
}

type FirewallDoSpolicyAnomalyArray []FirewallDoSpolicyAnomalyInput

func (FirewallDoSpolicyAnomalyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicyAnomaly)(nil)).Elem()
}

func (i FirewallDoSpolicyAnomalyArray) ToFirewallDoSpolicyAnomalyArrayOutput() FirewallDoSpolicyAnomalyArrayOutput {
	return i.ToFirewallDoSpolicyAnomalyArrayOutputWithContext(context.Background())
}

func (i FirewallDoSpolicyAnomalyArray) ToFirewallDoSpolicyAnomalyArrayOutputWithContext(ctx context.Context) FirewallDoSpolicyAnomalyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicyAnomalyArrayOutput)
}

type FirewallDoSpolicyAnomalyOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicyAnomalyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicyAnomaly)(nil)).Elem()
}

func (o FirewallDoSpolicyAnomalyOutput) ToFirewallDoSpolicyAnomalyOutput() FirewallDoSpolicyAnomalyOutput {
	return o
}

func (o FirewallDoSpolicyAnomalyOutput) ToFirewallDoSpolicyAnomalyOutputWithContext(ctx context.Context) FirewallDoSpolicyAnomalyOutput {
	return o
}

// Action taken when the threshold is reached.
func (o FirewallDoSpolicyAnomalyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyAnomaly) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
func (o FirewallDoSpolicyAnomalyOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyAnomaly) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Anomaly name.
func (o FirewallDoSpolicyAnomalyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyAnomaly) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Quarantine method. Valid values: `none`, `attacker`.
func (o FirewallDoSpolicyAnomalyOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyAnomaly) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o FirewallDoSpolicyAnomalyOutput) QuarantineExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyAnomaly) *string { return v.QuarantineExpiry }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
func (o FirewallDoSpolicyAnomalyOutput) QuarantineLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyAnomaly) *string { return v.QuarantineLog }).(pulumi.StringPtrOutput)
}

// Enable/disable this anomaly. Valid values: `disable`, `enable`.
func (o FirewallDoSpolicyAnomalyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyAnomaly) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
func (o FirewallDoSpolicyAnomalyOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyAnomaly) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
func (o FirewallDoSpolicyAnomalyOutput) Thresholddefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyAnomaly) *int { return v.Thresholddefault }).(pulumi.IntPtrOutput)
}

type FirewallDoSpolicyAnomalyArrayOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicyAnomalyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicyAnomaly)(nil)).Elem()
}

func (o FirewallDoSpolicyAnomalyArrayOutput) ToFirewallDoSpolicyAnomalyArrayOutput() FirewallDoSpolicyAnomalyArrayOutput {
	return o
}

func (o FirewallDoSpolicyAnomalyArrayOutput) ToFirewallDoSpolicyAnomalyArrayOutputWithContext(ctx context.Context) FirewallDoSpolicyAnomalyArrayOutput {
	return o
}

func (o FirewallDoSpolicyAnomalyArrayOutput) Index(i pulumi.IntInput) FirewallDoSpolicyAnomalyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDoSpolicyAnomaly {
		return vs[0].([]FirewallDoSpolicyAnomaly)[vs[1].(int)]
	}).(FirewallDoSpolicyAnomalyOutput)
}

type FirewallDoSpolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallDoSpolicyDstaddrInput is an input type that accepts FirewallDoSpolicyDstaddrArgs and FirewallDoSpolicyDstaddrOutput values.
// You can construct a concrete instance of `FirewallDoSpolicyDstaddrInput` via:
//
//	FirewallDoSpolicyDstaddrArgs{...}
type FirewallDoSpolicyDstaddrInput interface {
	pulumi.Input

	ToFirewallDoSpolicyDstaddrOutput() FirewallDoSpolicyDstaddrOutput
	ToFirewallDoSpolicyDstaddrOutputWithContext(context.Context) FirewallDoSpolicyDstaddrOutput
}

type FirewallDoSpolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallDoSpolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicyDstaddr)(nil)).Elem()
}

func (i FirewallDoSpolicyDstaddrArgs) ToFirewallDoSpolicyDstaddrOutput() FirewallDoSpolicyDstaddrOutput {
	return i.ToFirewallDoSpolicyDstaddrOutputWithContext(context.Background())
}

func (i FirewallDoSpolicyDstaddrArgs) ToFirewallDoSpolicyDstaddrOutputWithContext(ctx context.Context) FirewallDoSpolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicyDstaddrOutput)
}

// FirewallDoSpolicyDstaddrArrayInput is an input type that accepts FirewallDoSpolicyDstaddrArray and FirewallDoSpolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallDoSpolicyDstaddrArrayInput` via:
//
//	FirewallDoSpolicyDstaddrArray{ FirewallDoSpolicyDstaddrArgs{...} }
type FirewallDoSpolicyDstaddrArrayInput interface {
	pulumi.Input

	ToFirewallDoSpolicyDstaddrArrayOutput() FirewallDoSpolicyDstaddrArrayOutput
	ToFirewallDoSpolicyDstaddrArrayOutputWithContext(context.Context) FirewallDoSpolicyDstaddrArrayOutput
}

type FirewallDoSpolicyDstaddrArray []FirewallDoSpolicyDstaddrInput

func (FirewallDoSpolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicyDstaddr)(nil)).Elem()
}

func (i FirewallDoSpolicyDstaddrArray) ToFirewallDoSpolicyDstaddrArrayOutput() FirewallDoSpolicyDstaddrArrayOutput {
	return i.ToFirewallDoSpolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallDoSpolicyDstaddrArray) ToFirewallDoSpolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallDoSpolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicyDstaddrArrayOutput)
}

type FirewallDoSpolicyDstaddrOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicyDstaddr)(nil)).Elem()
}

func (o FirewallDoSpolicyDstaddrOutput) ToFirewallDoSpolicyDstaddrOutput() FirewallDoSpolicyDstaddrOutput {
	return o
}

func (o FirewallDoSpolicyDstaddrOutput) ToFirewallDoSpolicyDstaddrOutputWithContext(ctx context.Context) FirewallDoSpolicyDstaddrOutput {
	return o
}

// Address name.
func (o FirewallDoSpolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallDoSpolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicyDstaddr)(nil)).Elem()
}

func (o FirewallDoSpolicyDstaddrArrayOutput) ToFirewallDoSpolicyDstaddrArrayOutput() FirewallDoSpolicyDstaddrArrayOutput {
	return o
}

func (o FirewallDoSpolicyDstaddrArrayOutput) ToFirewallDoSpolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallDoSpolicyDstaddrArrayOutput {
	return o
}

func (o FirewallDoSpolicyDstaddrArrayOutput) Index(i pulumi.IntInput) FirewallDoSpolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDoSpolicyDstaddr {
		return vs[0].([]FirewallDoSpolicyDstaddr)[vs[1].(int)]
	}).(FirewallDoSpolicyDstaddrOutput)
}

type FirewallDoSpolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallDoSpolicyServiceInput is an input type that accepts FirewallDoSpolicyServiceArgs and FirewallDoSpolicyServiceOutput values.
// You can construct a concrete instance of `FirewallDoSpolicyServiceInput` via:
//
//	FirewallDoSpolicyServiceArgs{...}
type FirewallDoSpolicyServiceInput interface {
	pulumi.Input

	ToFirewallDoSpolicyServiceOutput() FirewallDoSpolicyServiceOutput
	ToFirewallDoSpolicyServiceOutputWithContext(context.Context) FirewallDoSpolicyServiceOutput
}

type FirewallDoSpolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallDoSpolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicyService)(nil)).Elem()
}

func (i FirewallDoSpolicyServiceArgs) ToFirewallDoSpolicyServiceOutput() FirewallDoSpolicyServiceOutput {
	return i.ToFirewallDoSpolicyServiceOutputWithContext(context.Background())
}

func (i FirewallDoSpolicyServiceArgs) ToFirewallDoSpolicyServiceOutputWithContext(ctx context.Context) FirewallDoSpolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicyServiceOutput)
}

// FirewallDoSpolicyServiceArrayInput is an input type that accepts FirewallDoSpolicyServiceArray and FirewallDoSpolicyServiceArrayOutput values.
// You can construct a concrete instance of `FirewallDoSpolicyServiceArrayInput` via:
//
//	FirewallDoSpolicyServiceArray{ FirewallDoSpolicyServiceArgs{...} }
type FirewallDoSpolicyServiceArrayInput interface {
	pulumi.Input

	ToFirewallDoSpolicyServiceArrayOutput() FirewallDoSpolicyServiceArrayOutput
	ToFirewallDoSpolicyServiceArrayOutputWithContext(context.Context) FirewallDoSpolicyServiceArrayOutput
}

type FirewallDoSpolicyServiceArray []FirewallDoSpolicyServiceInput

func (FirewallDoSpolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicyService)(nil)).Elem()
}

func (i FirewallDoSpolicyServiceArray) ToFirewallDoSpolicyServiceArrayOutput() FirewallDoSpolicyServiceArrayOutput {
	return i.ToFirewallDoSpolicyServiceArrayOutputWithContext(context.Background())
}

func (i FirewallDoSpolicyServiceArray) ToFirewallDoSpolicyServiceArrayOutputWithContext(ctx context.Context) FirewallDoSpolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicyServiceArrayOutput)
}

type FirewallDoSpolicyServiceOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicyService)(nil)).Elem()
}

func (o FirewallDoSpolicyServiceOutput) ToFirewallDoSpolicyServiceOutput() FirewallDoSpolicyServiceOutput {
	return o
}

func (o FirewallDoSpolicyServiceOutput) ToFirewallDoSpolicyServiceOutputWithContext(ctx context.Context) FirewallDoSpolicyServiceOutput {
	return o
}

// Service name.
func (o FirewallDoSpolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallDoSpolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicyService)(nil)).Elem()
}

func (o FirewallDoSpolicyServiceArrayOutput) ToFirewallDoSpolicyServiceArrayOutput() FirewallDoSpolicyServiceArrayOutput {
	return o
}

func (o FirewallDoSpolicyServiceArrayOutput) ToFirewallDoSpolicyServiceArrayOutputWithContext(ctx context.Context) FirewallDoSpolicyServiceArrayOutput {
	return o
}

func (o FirewallDoSpolicyServiceArrayOutput) Index(i pulumi.IntInput) FirewallDoSpolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDoSpolicyService {
		return vs[0].([]FirewallDoSpolicyService)[vs[1].(int)]
	}).(FirewallDoSpolicyServiceOutput)
}

type FirewallDoSpolicySrcaddr struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallDoSpolicySrcaddrInput is an input type that accepts FirewallDoSpolicySrcaddrArgs and FirewallDoSpolicySrcaddrOutput values.
// You can construct a concrete instance of `FirewallDoSpolicySrcaddrInput` via:
//
//	FirewallDoSpolicySrcaddrArgs{...}
type FirewallDoSpolicySrcaddrInput interface {
	pulumi.Input

	ToFirewallDoSpolicySrcaddrOutput() FirewallDoSpolicySrcaddrOutput
	ToFirewallDoSpolicySrcaddrOutputWithContext(context.Context) FirewallDoSpolicySrcaddrOutput
}

type FirewallDoSpolicySrcaddrArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallDoSpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicySrcaddr)(nil)).Elem()
}

func (i FirewallDoSpolicySrcaddrArgs) ToFirewallDoSpolicySrcaddrOutput() FirewallDoSpolicySrcaddrOutput {
	return i.ToFirewallDoSpolicySrcaddrOutputWithContext(context.Background())
}

func (i FirewallDoSpolicySrcaddrArgs) ToFirewallDoSpolicySrcaddrOutputWithContext(ctx context.Context) FirewallDoSpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicySrcaddrOutput)
}

// FirewallDoSpolicySrcaddrArrayInput is an input type that accepts FirewallDoSpolicySrcaddrArray and FirewallDoSpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallDoSpolicySrcaddrArrayInput` via:
//
//	FirewallDoSpolicySrcaddrArray{ FirewallDoSpolicySrcaddrArgs{...} }
type FirewallDoSpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallDoSpolicySrcaddrArrayOutput() FirewallDoSpolicySrcaddrArrayOutput
	ToFirewallDoSpolicySrcaddrArrayOutputWithContext(context.Context) FirewallDoSpolicySrcaddrArrayOutput
}

type FirewallDoSpolicySrcaddrArray []FirewallDoSpolicySrcaddrInput

func (FirewallDoSpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicySrcaddr)(nil)).Elem()
}

func (i FirewallDoSpolicySrcaddrArray) ToFirewallDoSpolicySrcaddrArrayOutput() FirewallDoSpolicySrcaddrArrayOutput {
	return i.ToFirewallDoSpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallDoSpolicySrcaddrArray) ToFirewallDoSpolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallDoSpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDoSpolicySrcaddrArrayOutput)
}

type FirewallDoSpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDoSpolicySrcaddr)(nil)).Elem()
}

func (o FirewallDoSpolicySrcaddrOutput) ToFirewallDoSpolicySrcaddrOutput() FirewallDoSpolicySrcaddrOutput {
	return o
}

func (o FirewallDoSpolicySrcaddrOutput) ToFirewallDoSpolicySrcaddrOutputWithContext(ctx context.Context) FirewallDoSpolicySrcaddrOutput {
	return o
}

// Service name.
func (o FirewallDoSpolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallDoSpolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallDoSpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallDoSpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallDoSpolicySrcaddr)(nil)).Elem()
}

func (o FirewallDoSpolicySrcaddrArrayOutput) ToFirewallDoSpolicySrcaddrArrayOutput() FirewallDoSpolicySrcaddrArrayOutput {
	return o
}

func (o FirewallDoSpolicySrcaddrArrayOutput) ToFirewallDoSpolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallDoSpolicySrcaddrArrayOutput {
	return o
}

func (o FirewallDoSpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallDoSpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallDoSpolicySrcaddr {
		return vs[0].([]FirewallDoSpolicySrcaddr)[vs[1].(int)]
	}).(FirewallDoSpolicySrcaddrOutput)
}

type FirewallIdentitybasedrouteRule struct {
	// Outgoing interface for the rule.
	Device *string `pulumi:"device"`
	// IPv4 address of the gateway (Format: xxx.xxx.xxx.xxx , Default: 0.0.0.0).
	Gateway *string `pulumi:"gateway"`
	// Select one or more group(s) from available groups that are allowed to use this route. Separate group names with a space. The structure of `groups` block is documented below.
	Groups []FirewallIdentitybasedrouteRuleGroup `pulumi:"groups"`
	// Rule ID.
	Id *int `pulumi:"id"`
}

// FirewallIdentitybasedrouteRuleInput is an input type that accepts FirewallIdentitybasedrouteRuleArgs and FirewallIdentitybasedrouteRuleOutput values.
// You can construct a concrete instance of `FirewallIdentitybasedrouteRuleInput` via:
//
//	FirewallIdentitybasedrouteRuleArgs{...}
type FirewallIdentitybasedrouteRuleInput interface {
	pulumi.Input

	ToFirewallIdentitybasedrouteRuleOutput() FirewallIdentitybasedrouteRuleOutput
	ToFirewallIdentitybasedrouteRuleOutputWithContext(context.Context) FirewallIdentitybasedrouteRuleOutput
}

type FirewallIdentitybasedrouteRuleArgs struct {
	// Outgoing interface for the rule.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// IPv4 address of the gateway (Format: xxx.xxx.xxx.xxx , Default: 0.0.0.0).
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// Select one or more group(s) from available groups that are allowed to use this route. Separate group names with a space. The structure of `groups` block is documented below.
	Groups FirewallIdentitybasedrouteRuleGroupArrayInput `pulumi:"groups"`
	// Rule ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallIdentitybasedrouteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallIdentitybasedrouteRule)(nil)).Elem()
}

func (i FirewallIdentitybasedrouteRuleArgs) ToFirewallIdentitybasedrouteRuleOutput() FirewallIdentitybasedrouteRuleOutput {
	return i.ToFirewallIdentitybasedrouteRuleOutputWithContext(context.Background())
}

func (i FirewallIdentitybasedrouteRuleArgs) ToFirewallIdentitybasedrouteRuleOutputWithContext(ctx context.Context) FirewallIdentitybasedrouteRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIdentitybasedrouteRuleOutput)
}

// FirewallIdentitybasedrouteRuleArrayInput is an input type that accepts FirewallIdentitybasedrouteRuleArray and FirewallIdentitybasedrouteRuleArrayOutput values.
// You can construct a concrete instance of `FirewallIdentitybasedrouteRuleArrayInput` via:
//
//	FirewallIdentitybasedrouteRuleArray{ FirewallIdentitybasedrouteRuleArgs{...} }
type FirewallIdentitybasedrouteRuleArrayInput interface {
	pulumi.Input

	ToFirewallIdentitybasedrouteRuleArrayOutput() FirewallIdentitybasedrouteRuleArrayOutput
	ToFirewallIdentitybasedrouteRuleArrayOutputWithContext(context.Context) FirewallIdentitybasedrouteRuleArrayOutput
}

type FirewallIdentitybasedrouteRuleArray []FirewallIdentitybasedrouteRuleInput

func (FirewallIdentitybasedrouteRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallIdentitybasedrouteRule)(nil)).Elem()
}

func (i FirewallIdentitybasedrouteRuleArray) ToFirewallIdentitybasedrouteRuleArrayOutput() FirewallIdentitybasedrouteRuleArrayOutput {
	return i.ToFirewallIdentitybasedrouteRuleArrayOutputWithContext(context.Background())
}

func (i FirewallIdentitybasedrouteRuleArray) ToFirewallIdentitybasedrouteRuleArrayOutputWithContext(ctx context.Context) FirewallIdentitybasedrouteRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIdentitybasedrouteRuleArrayOutput)
}

type FirewallIdentitybasedrouteRuleOutput struct{ *pulumi.OutputState }

func (FirewallIdentitybasedrouteRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallIdentitybasedrouteRule)(nil)).Elem()
}

func (o FirewallIdentitybasedrouteRuleOutput) ToFirewallIdentitybasedrouteRuleOutput() FirewallIdentitybasedrouteRuleOutput {
	return o
}

func (o FirewallIdentitybasedrouteRuleOutput) ToFirewallIdentitybasedrouteRuleOutputWithContext(ctx context.Context) FirewallIdentitybasedrouteRuleOutput {
	return o
}

// Outgoing interface for the rule.
func (o FirewallIdentitybasedrouteRuleOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallIdentitybasedrouteRule) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// IPv4 address of the gateway (Format: xxx.xxx.xxx.xxx , Default: 0.0.0.0).
func (o FirewallIdentitybasedrouteRuleOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallIdentitybasedrouteRule) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// Select one or more group(s) from available groups that are allowed to use this route. Separate group names with a space. The structure of `groups` block is documented below.
func (o FirewallIdentitybasedrouteRuleOutput) Groups() FirewallIdentitybasedrouteRuleGroupArrayOutput {
	return o.ApplyT(func(v FirewallIdentitybasedrouteRule) []FirewallIdentitybasedrouteRuleGroup { return v.Groups }).(FirewallIdentitybasedrouteRuleGroupArrayOutput)
}

// Rule ID.
func (o FirewallIdentitybasedrouteRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallIdentitybasedrouteRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallIdentitybasedrouteRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallIdentitybasedrouteRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallIdentitybasedrouteRule)(nil)).Elem()
}

func (o FirewallIdentitybasedrouteRuleArrayOutput) ToFirewallIdentitybasedrouteRuleArrayOutput() FirewallIdentitybasedrouteRuleArrayOutput {
	return o
}

func (o FirewallIdentitybasedrouteRuleArrayOutput) ToFirewallIdentitybasedrouteRuleArrayOutputWithContext(ctx context.Context) FirewallIdentitybasedrouteRuleArrayOutput {
	return o
}

func (o FirewallIdentitybasedrouteRuleArrayOutput) Index(i pulumi.IntInput) FirewallIdentitybasedrouteRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallIdentitybasedrouteRule {
		return vs[0].([]FirewallIdentitybasedrouteRule)[vs[1].(int)]
	}).(FirewallIdentitybasedrouteRuleOutput)
}

type FirewallIdentitybasedrouteRuleGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// FirewallIdentitybasedrouteRuleGroupInput is an input type that accepts FirewallIdentitybasedrouteRuleGroupArgs and FirewallIdentitybasedrouteRuleGroupOutput values.
// You can construct a concrete instance of `FirewallIdentitybasedrouteRuleGroupInput` via:
//
//	FirewallIdentitybasedrouteRuleGroupArgs{...}
type FirewallIdentitybasedrouteRuleGroupInput interface {
	pulumi.Input

	ToFirewallIdentitybasedrouteRuleGroupOutput() FirewallIdentitybasedrouteRuleGroupOutput
	ToFirewallIdentitybasedrouteRuleGroupOutputWithContext(context.Context) FirewallIdentitybasedrouteRuleGroupOutput
}

type FirewallIdentitybasedrouteRuleGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallIdentitybasedrouteRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallIdentitybasedrouteRuleGroup)(nil)).Elem()
}

func (i FirewallIdentitybasedrouteRuleGroupArgs) ToFirewallIdentitybasedrouteRuleGroupOutput() FirewallIdentitybasedrouteRuleGroupOutput {
	return i.ToFirewallIdentitybasedrouteRuleGroupOutputWithContext(context.Background())
}

func (i FirewallIdentitybasedrouteRuleGroupArgs) ToFirewallIdentitybasedrouteRuleGroupOutputWithContext(ctx context.Context) FirewallIdentitybasedrouteRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIdentitybasedrouteRuleGroupOutput)
}

// FirewallIdentitybasedrouteRuleGroupArrayInput is an input type that accepts FirewallIdentitybasedrouteRuleGroupArray and FirewallIdentitybasedrouteRuleGroupArrayOutput values.
// You can construct a concrete instance of `FirewallIdentitybasedrouteRuleGroupArrayInput` via:
//
//	FirewallIdentitybasedrouteRuleGroupArray{ FirewallIdentitybasedrouteRuleGroupArgs{...} }
type FirewallIdentitybasedrouteRuleGroupArrayInput interface {
	pulumi.Input

	ToFirewallIdentitybasedrouteRuleGroupArrayOutput() FirewallIdentitybasedrouteRuleGroupArrayOutput
	ToFirewallIdentitybasedrouteRuleGroupArrayOutputWithContext(context.Context) FirewallIdentitybasedrouteRuleGroupArrayOutput
}

type FirewallIdentitybasedrouteRuleGroupArray []FirewallIdentitybasedrouteRuleGroupInput

func (FirewallIdentitybasedrouteRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallIdentitybasedrouteRuleGroup)(nil)).Elem()
}

func (i FirewallIdentitybasedrouteRuleGroupArray) ToFirewallIdentitybasedrouteRuleGroupArrayOutput() FirewallIdentitybasedrouteRuleGroupArrayOutput {
	return i.ToFirewallIdentitybasedrouteRuleGroupArrayOutputWithContext(context.Background())
}

func (i FirewallIdentitybasedrouteRuleGroupArray) ToFirewallIdentitybasedrouteRuleGroupArrayOutputWithContext(ctx context.Context) FirewallIdentitybasedrouteRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIdentitybasedrouteRuleGroupArrayOutput)
}

type FirewallIdentitybasedrouteRuleGroupOutput struct{ *pulumi.OutputState }

func (FirewallIdentitybasedrouteRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallIdentitybasedrouteRuleGroup)(nil)).Elem()
}

func (o FirewallIdentitybasedrouteRuleGroupOutput) ToFirewallIdentitybasedrouteRuleGroupOutput() FirewallIdentitybasedrouteRuleGroupOutput {
	return o
}

func (o FirewallIdentitybasedrouteRuleGroupOutput) ToFirewallIdentitybasedrouteRuleGroupOutputWithContext(ctx context.Context) FirewallIdentitybasedrouteRuleGroupOutput {
	return o
}

// Group name.
func (o FirewallIdentitybasedrouteRuleGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallIdentitybasedrouteRuleGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallIdentitybasedrouteRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallIdentitybasedrouteRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallIdentitybasedrouteRuleGroup)(nil)).Elem()
}

func (o FirewallIdentitybasedrouteRuleGroupArrayOutput) ToFirewallIdentitybasedrouteRuleGroupArrayOutput() FirewallIdentitybasedrouteRuleGroupArrayOutput {
	return o
}

func (o FirewallIdentitybasedrouteRuleGroupArrayOutput) ToFirewallIdentitybasedrouteRuleGroupArrayOutputWithContext(ctx context.Context) FirewallIdentitybasedrouteRuleGroupArrayOutput {
	return o
}

func (o FirewallIdentitybasedrouteRuleGroupArrayOutput) Index(i pulumi.IntInput) FirewallIdentitybasedrouteRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallIdentitybasedrouteRuleGroup {
		return vs[0].([]FirewallIdentitybasedrouteRuleGroup)[vs[1].(int)]
	}).(FirewallIdentitybasedrouteRuleGroupOutput)
}

type FirewallInterfacepolicy6Dstaddr6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallInterfacepolicy6Dstaddr6Input is an input type that accepts FirewallInterfacepolicy6Dstaddr6Args and FirewallInterfacepolicy6Dstaddr6Output values.
// You can construct a concrete instance of `FirewallInterfacepolicy6Dstaddr6Input` via:
//
//	FirewallInterfacepolicy6Dstaddr6Args{...}
type FirewallInterfacepolicy6Dstaddr6Input interface {
	pulumi.Input

	ToFirewallInterfacepolicy6Dstaddr6Output() FirewallInterfacepolicy6Dstaddr6Output
	ToFirewallInterfacepolicy6Dstaddr6OutputWithContext(context.Context) FirewallInterfacepolicy6Dstaddr6Output
}

type FirewallInterfacepolicy6Dstaddr6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInterfacepolicy6Dstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicy6Dstaddr6)(nil)).Elem()
}

func (i FirewallInterfacepolicy6Dstaddr6Args) ToFirewallInterfacepolicy6Dstaddr6Output() FirewallInterfacepolicy6Dstaddr6Output {
	return i.ToFirewallInterfacepolicy6Dstaddr6OutputWithContext(context.Background())
}

func (i FirewallInterfacepolicy6Dstaddr6Args) ToFirewallInterfacepolicy6Dstaddr6OutputWithContext(ctx context.Context) FirewallInterfacepolicy6Dstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicy6Dstaddr6Output)
}

// FirewallInterfacepolicy6Dstaddr6ArrayInput is an input type that accepts FirewallInterfacepolicy6Dstaddr6Array and FirewallInterfacepolicy6Dstaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallInterfacepolicy6Dstaddr6ArrayInput` via:
//
//	FirewallInterfacepolicy6Dstaddr6Array{ FirewallInterfacepolicy6Dstaddr6Args{...} }
type FirewallInterfacepolicy6Dstaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallInterfacepolicy6Dstaddr6ArrayOutput() FirewallInterfacepolicy6Dstaddr6ArrayOutput
	ToFirewallInterfacepolicy6Dstaddr6ArrayOutputWithContext(context.Context) FirewallInterfacepolicy6Dstaddr6ArrayOutput
}

type FirewallInterfacepolicy6Dstaddr6Array []FirewallInterfacepolicy6Dstaddr6Input

func (FirewallInterfacepolicy6Dstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicy6Dstaddr6)(nil)).Elem()
}

func (i FirewallInterfacepolicy6Dstaddr6Array) ToFirewallInterfacepolicy6Dstaddr6ArrayOutput() FirewallInterfacepolicy6Dstaddr6ArrayOutput {
	return i.ToFirewallInterfacepolicy6Dstaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallInterfacepolicy6Dstaddr6Array) ToFirewallInterfacepolicy6Dstaddr6ArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicy6Dstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicy6Dstaddr6ArrayOutput)
}

type FirewallInterfacepolicy6Dstaddr6Output struct{ *pulumi.OutputState }

func (FirewallInterfacepolicy6Dstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicy6Dstaddr6)(nil)).Elem()
}

func (o FirewallInterfacepolicy6Dstaddr6Output) ToFirewallInterfacepolicy6Dstaddr6Output() FirewallInterfacepolicy6Dstaddr6Output {
	return o
}

func (o FirewallInterfacepolicy6Dstaddr6Output) ToFirewallInterfacepolicy6Dstaddr6OutputWithContext(ctx context.Context) FirewallInterfacepolicy6Dstaddr6Output {
	return o
}

// Address name.
func (o FirewallInterfacepolicy6Dstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInterfacepolicy6Dstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInterfacepolicy6Dstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallInterfacepolicy6Dstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicy6Dstaddr6)(nil)).Elem()
}

func (o FirewallInterfacepolicy6Dstaddr6ArrayOutput) ToFirewallInterfacepolicy6Dstaddr6ArrayOutput() FirewallInterfacepolicy6Dstaddr6ArrayOutput {
	return o
}

func (o FirewallInterfacepolicy6Dstaddr6ArrayOutput) ToFirewallInterfacepolicy6Dstaddr6ArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicy6Dstaddr6ArrayOutput {
	return o
}

func (o FirewallInterfacepolicy6Dstaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallInterfacepolicy6Dstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInterfacepolicy6Dstaddr6 {
		return vs[0].([]FirewallInterfacepolicy6Dstaddr6)[vs[1].(int)]
	}).(FirewallInterfacepolicy6Dstaddr6Output)
}

type FirewallInterfacepolicy6Service6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallInterfacepolicy6Service6Input is an input type that accepts FirewallInterfacepolicy6Service6Args and FirewallInterfacepolicy6Service6Output values.
// You can construct a concrete instance of `FirewallInterfacepolicy6Service6Input` via:
//
//	FirewallInterfacepolicy6Service6Args{...}
type FirewallInterfacepolicy6Service6Input interface {
	pulumi.Input

	ToFirewallInterfacepolicy6Service6Output() FirewallInterfacepolicy6Service6Output
	ToFirewallInterfacepolicy6Service6OutputWithContext(context.Context) FirewallInterfacepolicy6Service6Output
}

type FirewallInterfacepolicy6Service6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInterfacepolicy6Service6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicy6Service6)(nil)).Elem()
}

func (i FirewallInterfacepolicy6Service6Args) ToFirewallInterfacepolicy6Service6Output() FirewallInterfacepolicy6Service6Output {
	return i.ToFirewallInterfacepolicy6Service6OutputWithContext(context.Background())
}

func (i FirewallInterfacepolicy6Service6Args) ToFirewallInterfacepolicy6Service6OutputWithContext(ctx context.Context) FirewallInterfacepolicy6Service6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicy6Service6Output)
}

// FirewallInterfacepolicy6Service6ArrayInput is an input type that accepts FirewallInterfacepolicy6Service6Array and FirewallInterfacepolicy6Service6ArrayOutput values.
// You can construct a concrete instance of `FirewallInterfacepolicy6Service6ArrayInput` via:
//
//	FirewallInterfacepolicy6Service6Array{ FirewallInterfacepolicy6Service6Args{...} }
type FirewallInterfacepolicy6Service6ArrayInput interface {
	pulumi.Input

	ToFirewallInterfacepolicy6Service6ArrayOutput() FirewallInterfacepolicy6Service6ArrayOutput
	ToFirewallInterfacepolicy6Service6ArrayOutputWithContext(context.Context) FirewallInterfacepolicy6Service6ArrayOutput
}

type FirewallInterfacepolicy6Service6Array []FirewallInterfacepolicy6Service6Input

func (FirewallInterfacepolicy6Service6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicy6Service6)(nil)).Elem()
}

func (i FirewallInterfacepolicy6Service6Array) ToFirewallInterfacepolicy6Service6ArrayOutput() FirewallInterfacepolicy6Service6ArrayOutput {
	return i.ToFirewallInterfacepolicy6Service6ArrayOutputWithContext(context.Background())
}

func (i FirewallInterfacepolicy6Service6Array) ToFirewallInterfacepolicy6Service6ArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicy6Service6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicy6Service6ArrayOutput)
}

type FirewallInterfacepolicy6Service6Output struct{ *pulumi.OutputState }

func (FirewallInterfacepolicy6Service6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicy6Service6)(nil)).Elem()
}

func (o FirewallInterfacepolicy6Service6Output) ToFirewallInterfacepolicy6Service6Output() FirewallInterfacepolicy6Service6Output {
	return o
}

func (o FirewallInterfacepolicy6Service6Output) ToFirewallInterfacepolicy6Service6OutputWithContext(ctx context.Context) FirewallInterfacepolicy6Service6Output {
	return o
}

// Address name.
func (o FirewallInterfacepolicy6Service6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInterfacepolicy6Service6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInterfacepolicy6Service6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallInterfacepolicy6Service6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicy6Service6)(nil)).Elem()
}

func (o FirewallInterfacepolicy6Service6ArrayOutput) ToFirewallInterfacepolicy6Service6ArrayOutput() FirewallInterfacepolicy6Service6ArrayOutput {
	return o
}

func (o FirewallInterfacepolicy6Service6ArrayOutput) ToFirewallInterfacepolicy6Service6ArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicy6Service6ArrayOutput {
	return o
}

func (o FirewallInterfacepolicy6Service6ArrayOutput) Index(i pulumi.IntInput) FirewallInterfacepolicy6Service6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInterfacepolicy6Service6 {
		return vs[0].([]FirewallInterfacepolicy6Service6)[vs[1].(int)]
	}).(FirewallInterfacepolicy6Service6Output)
}

type FirewallInterfacepolicy6Srcaddr6 struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallInterfacepolicy6Srcaddr6Input is an input type that accepts FirewallInterfacepolicy6Srcaddr6Args and FirewallInterfacepolicy6Srcaddr6Output values.
// You can construct a concrete instance of `FirewallInterfacepolicy6Srcaddr6Input` via:
//
//	FirewallInterfacepolicy6Srcaddr6Args{...}
type FirewallInterfacepolicy6Srcaddr6Input interface {
	pulumi.Input

	ToFirewallInterfacepolicy6Srcaddr6Output() FirewallInterfacepolicy6Srcaddr6Output
	ToFirewallInterfacepolicy6Srcaddr6OutputWithContext(context.Context) FirewallInterfacepolicy6Srcaddr6Output
}

type FirewallInterfacepolicy6Srcaddr6Args struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInterfacepolicy6Srcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicy6Srcaddr6)(nil)).Elem()
}

func (i FirewallInterfacepolicy6Srcaddr6Args) ToFirewallInterfacepolicy6Srcaddr6Output() FirewallInterfacepolicy6Srcaddr6Output {
	return i.ToFirewallInterfacepolicy6Srcaddr6OutputWithContext(context.Background())
}

func (i FirewallInterfacepolicy6Srcaddr6Args) ToFirewallInterfacepolicy6Srcaddr6OutputWithContext(ctx context.Context) FirewallInterfacepolicy6Srcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicy6Srcaddr6Output)
}

// FirewallInterfacepolicy6Srcaddr6ArrayInput is an input type that accepts FirewallInterfacepolicy6Srcaddr6Array and FirewallInterfacepolicy6Srcaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallInterfacepolicy6Srcaddr6ArrayInput` via:
//
//	FirewallInterfacepolicy6Srcaddr6Array{ FirewallInterfacepolicy6Srcaddr6Args{...} }
type FirewallInterfacepolicy6Srcaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallInterfacepolicy6Srcaddr6ArrayOutput() FirewallInterfacepolicy6Srcaddr6ArrayOutput
	ToFirewallInterfacepolicy6Srcaddr6ArrayOutputWithContext(context.Context) FirewallInterfacepolicy6Srcaddr6ArrayOutput
}

type FirewallInterfacepolicy6Srcaddr6Array []FirewallInterfacepolicy6Srcaddr6Input

func (FirewallInterfacepolicy6Srcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicy6Srcaddr6)(nil)).Elem()
}

func (i FirewallInterfacepolicy6Srcaddr6Array) ToFirewallInterfacepolicy6Srcaddr6ArrayOutput() FirewallInterfacepolicy6Srcaddr6ArrayOutput {
	return i.ToFirewallInterfacepolicy6Srcaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallInterfacepolicy6Srcaddr6Array) ToFirewallInterfacepolicy6Srcaddr6ArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicy6Srcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicy6Srcaddr6ArrayOutput)
}

type FirewallInterfacepolicy6Srcaddr6Output struct{ *pulumi.OutputState }

func (FirewallInterfacepolicy6Srcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicy6Srcaddr6)(nil)).Elem()
}

func (o FirewallInterfacepolicy6Srcaddr6Output) ToFirewallInterfacepolicy6Srcaddr6Output() FirewallInterfacepolicy6Srcaddr6Output {
	return o
}

func (o FirewallInterfacepolicy6Srcaddr6Output) ToFirewallInterfacepolicy6Srcaddr6OutputWithContext(ctx context.Context) FirewallInterfacepolicy6Srcaddr6Output {
	return o
}

// Address name.
func (o FirewallInterfacepolicy6Srcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInterfacepolicy6Srcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInterfacepolicy6Srcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallInterfacepolicy6Srcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicy6Srcaddr6)(nil)).Elem()
}

func (o FirewallInterfacepolicy6Srcaddr6ArrayOutput) ToFirewallInterfacepolicy6Srcaddr6ArrayOutput() FirewallInterfacepolicy6Srcaddr6ArrayOutput {
	return o
}

func (o FirewallInterfacepolicy6Srcaddr6ArrayOutput) ToFirewallInterfacepolicy6Srcaddr6ArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicy6Srcaddr6ArrayOutput {
	return o
}

func (o FirewallInterfacepolicy6Srcaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallInterfacepolicy6Srcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInterfacepolicy6Srcaddr6 {
		return vs[0].([]FirewallInterfacepolicy6Srcaddr6)[vs[1].(int)]
	}).(FirewallInterfacepolicy6Srcaddr6Output)
}

type FirewallInterfacepolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallInterfacepolicyDstaddrInput is an input type that accepts FirewallInterfacepolicyDstaddrArgs and FirewallInterfacepolicyDstaddrOutput values.
// You can construct a concrete instance of `FirewallInterfacepolicyDstaddrInput` via:
//
//	FirewallInterfacepolicyDstaddrArgs{...}
type FirewallInterfacepolicyDstaddrInput interface {
	pulumi.Input

	ToFirewallInterfacepolicyDstaddrOutput() FirewallInterfacepolicyDstaddrOutput
	ToFirewallInterfacepolicyDstaddrOutputWithContext(context.Context) FirewallInterfacepolicyDstaddrOutput
}

type FirewallInterfacepolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInterfacepolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicyDstaddr)(nil)).Elem()
}

func (i FirewallInterfacepolicyDstaddrArgs) ToFirewallInterfacepolicyDstaddrOutput() FirewallInterfacepolicyDstaddrOutput {
	return i.ToFirewallInterfacepolicyDstaddrOutputWithContext(context.Background())
}

func (i FirewallInterfacepolicyDstaddrArgs) ToFirewallInterfacepolicyDstaddrOutputWithContext(ctx context.Context) FirewallInterfacepolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicyDstaddrOutput)
}

// FirewallInterfacepolicyDstaddrArrayInput is an input type that accepts FirewallInterfacepolicyDstaddrArray and FirewallInterfacepolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallInterfacepolicyDstaddrArrayInput` via:
//
//	FirewallInterfacepolicyDstaddrArray{ FirewallInterfacepolicyDstaddrArgs{...} }
type FirewallInterfacepolicyDstaddrArrayInput interface {
	pulumi.Input

	ToFirewallInterfacepolicyDstaddrArrayOutput() FirewallInterfacepolicyDstaddrArrayOutput
	ToFirewallInterfacepolicyDstaddrArrayOutputWithContext(context.Context) FirewallInterfacepolicyDstaddrArrayOutput
}

type FirewallInterfacepolicyDstaddrArray []FirewallInterfacepolicyDstaddrInput

func (FirewallInterfacepolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicyDstaddr)(nil)).Elem()
}

func (i FirewallInterfacepolicyDstaddrArray) ToFirewallInterfacepolicyDstaddrArrayOutput() FirewallInterfacepolicyDstaddrArrayOutput {
	return i.ToFirewallInterfacepolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallInterfacepolicyDstaddrArray) ToFirewallInterfacepolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicyDstaddrArrayOutput)
}

type FirewallInterfacepolicyDstaddrOutput struct{ *pulumi.OutputState }

func (FirewallInterfacepolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicyDstaddr)(nil)).Elem()
}

func (o FirewallInterfacepolicyDstaddrOutput) ToFirewallInterfacepolicyDstaddrOutput() FirewallInterfacepolicyDstaddrOutput {
	return o
}

func (o FirewallInterfacepolicyDstaddrOutput) ToFirewallInterfacepolicyDstaddrOutputWithContext(ctx context.Context) FirewallInterfacepolicyDstaddrOutput {
	return o
}

// Address name.
func (o FirewallInterfacepolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInterfacepolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInterfacepolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallInterfacepolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicyDstaddr)(nil)).Elem()
}

func (o FirewallInterfacepolicyDstaddrArrayOutput) ToFirewallInterfacepolicyDstaddrArrayOutput() FirewallInterfacepolicyDstaddrArrayOutput {
	return o
}

func (o FirewallInterfacepolicyDstaddrArrayOutput) ToFirewallInterfacepolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicyDstaddrArrayOutput {
	return o
}

func (o FirewallInterfacepolicyDstaddrArrayOutput) Index(i pulumi.IntInput) FirewallInterfacepolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInterfacepolicyDstaddr {
		return vs[0].([]FirewallInterfacepolicyDstaddr)[vs[1].(int)]
	}).(FirewallInterfacepolicyDstaddrOutput)
}

type FirewallInterfacepolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallInterfacepolicyServiceInput is an input type that accepts FirewallInterfacepolicyServiceArgs and FirewallInterfacepolicyServiceOutput values.
// You can construct a concrete instance of `FirewallInterfacepolicyServiceInput` via:
//
//	FirewallInterfacepolicyServiceArgs{...}
type FirewallInterfacepolicyServiceInput interface {
	pulumi.Input

	ToFirewallInterfacepolicyServiceOutput() FirewallInterfacepolicyServiceOutput
	ToFirewallInterfacepolicyServiceOutputWithContext(context.Context) FirewallInterfacepolicyServiceOutput
}

type FirewallInterfacepolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInterfacepolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicyService)(nil)).Elem()
}

func (i FirewallInterfacepolicyServiceArgs) ToFirewallInterfacepolicyServiceOutput() FirewallInterfacepolicyServiceOutput {
	return i.ToFirewallInterfacepolicyServiceOutputWithContext(context.Background())
}

func (i FirewallInterfacepolicyServiceArgs) ToFirewallInterfacepolicyServiceOutputWithContext(ctx context.Context) FirewallInterfacepolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicyServiceOutput)
}

// FirewallInterfacepolicyServiceArrayInput is an input type that accepts FirewallInterfacepolicyServiceArray and FirewallInterfacepolicyServiceArrayOutput values.
// You can construct a concrete instance of `FirewallInterfacepolicyServiceArrayInput` via:
//
//	FirewallInterfacepolicyServiceArray{ FirewallInterfacepolicyServiceArgs{...} }
type FirewallInterfacepolicyServiceArrayInput interface {
	pulumi.Input

	ToFirewallInterfacepolicyServiceArrayOutput() FirewallInterfacepolicyServiceArrayOutput
	ToFirewallInterfacepolicyServiceArrayOutputWithContext(context.Context) FirewallInterfacepolicyServiceArrayOutput
}

type FirewallInterfacepolicyServiceArray []FirewallInterfacepolicyServiceInput

func (FirewallInterfacepolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicyService)(nil)).Elem()
}

func (i FirewallInterfacepolicyServiceArray) ToFirewallInterfacepolicyServiceArrayOutput() FirewallInterfacepolicyServiceArrayOutput {
	return i.ToFirewallInterfacepolicyServiceArrayOutputWithContext(context.Background())
}

func (i FirewallInterfacepolicyServiceArray) ToFirewallInterfacepolicyServiceArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicyServiceArrayOutput)
}

type FirewallInterfacepolicyServiceOutput struct{ *pulumi.OutputState }

func (FirewallInterfacepolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicyService)(nil)).Elem()
}

func (o FirewallInterfacepolicyServiceOutput) ToFirewallInterfacepolicyServiceOutput() FirewallInterfacepolicyServiceOutput {
	return o
}

func (o FirewallInterfacepolicyServiceOutput) ToFirewallInterfacepolicyServiceOutputWithContext(ctx context.Context) FirewallInterfacepolicyServiceOutput {
	return o
}

// Service name.
func (o FirewallInterfacepolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInterfacepolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInterfacepolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallInterfacepolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicyService)(nil)).Elem()
}

func (o FirewallInterfacepolicyServiceArrayOutput) ToFirewallInterfacepolicyServiceArrayOutput() FirewallInterfacepolicyServiceArrayOutput {
	return o
}

func (o FirewallInterfacepolicyServiceArrayOutput) ToFirewallInterfacepolicyServiceArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicyServiceArrayOutput {
	return o
}

func (o FirewallInterfacepolicyServiceArrayOutput) Index(i pulumi.IntInput) FirewallInterfacepolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInterfacepolicyService {
		return vs[0].([]FirewallInterfacepolicyService)[vs[1].(int)]
	}).(FirewallInterfacepolicyServiceOutput)
}

type FirewallInterfacepolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallInterfacepolicySrcaddrInput is an input type that accepts FirewallInterfacepolicySrcaddrArgs and FirewallInterfacepolicySrcaddrOutput values.
// You can construct a concrete instance of `FirewallInterfacepolicySrcaddrInput` via:
//
//	FirewallInterfacepolicySrcaddrArgs{...}
type FirewallInterfacepolicySrcaddrInput interface {
	pulumi.Input

	ToFirewallInterfacepolicySrcaddrOutput() FirewallInterfacepolicySrcaddrOutput
	ToFirewallInterfacepolicySrcaddrOutputWithContext(context.Context) FirewallInterfacepolicySrcaddrOutput
}

type FirewallInterfacepolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInterfacepolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicySrcaddr)(nil)).Elem()
}

func (i FirewallInterfacepolicySrcaddrArgs) ToFirewallInterfacepolicySrcaddrOutput() FirewallInterfacepolicySrcaddrOutput {
	return i.ToFirewallInterfacepolicySrcaddrOutputWithContext(context.Background())
}

func (i FirewallInterfacepolicySrcaddrArgs) ToFirewallInterfacepolicySrcaddrOutputWithContext(ctx context.Context) FirewallInterfacepolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicySrcaddrOutput)
}

// FirewallInterfacepolicySrcaddrArrayInput is an input type that accepts FirewallInterfacepolicySrcaddrArray and FirewallInterfacepolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallInterfacepolicySrcaddrArrayInput` via:
//
//	FirewallInterfacepolicySrcaddrArray{ FirewallInterfacepolicySrcaddrArgs{...} }
type FirewallInterfacepolicySrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallInterfacepolicySrcaddrArrayOutput() FirewallInterfacepolicySrcaddrArrayOutput
	ToFirewallInterfacepolicySrcaddrArrayOutputWithContext(context.Context) FirewallInterfacepolicySrcaddrArrayOutput
}

type FirewallInterfacepolicySrcaddrArray []FirewallInterfacepolicySrcaddrInput

func (FirewallInterfacepolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicySrcaddr)(nil)).Elem()
}

func (i FirewallInterfacepolicySrcaddrArray) ToFirewallInterfacepolicySrcaddrArrayOutput() FirewallInterfacepolicySrcaddrArrayOutput {
	return i.ToFirewallInterfacepolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallInterfacepolicySrcaddrArray) ToFirewallInterfacepolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInterfacepolicySrcaddrArrayOutput)
}

type FirewallInterfacepolicySrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallInterfacepolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInterfacepolicySrcaddr)(nil)).Elem()
}

func (o FirewallInterfacepolicySrcaddrOutput) ToFirewallInterfacepolicySrcaddrOutput() FirewallInterfacepolicySrcaddrOutput {
	return o
}

func (o FirewallInterfacepolicySrcaddrOutput) ToFirewallInterfacepolicySrcaddrOutputWithContext(ctx context.Context) FirewallInterfacepolicySrcaddrOutput {
	return o
}

// Address name.
func (o FirewallInterfacepolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInterfacepolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInterfacepolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallInterfacepolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInterfacepolicySrcaddr)(nil)).Elem()
}

func (o FirewallInterfacepolicySrcaddrArrayOutput) ToFirewallInterfacepolicySrcaddrArrayOutput() FirewallInterfacepolicySrcaddrArrayOutput {
	return o
}

func (o FirewallInterfacepolicySrcaddrArrayOutput) ToFirewallInterfacepolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallInterfacepolicySrcaddrArrayOutput {
	return o
}

func (o FirewallInterfacepolicySrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallInterfacepolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInterfacepolicySrcaddr {
		return vs[0].([]FirewallInterfacepolicySrcaddr)[vs[1].(int)]
	}).(FirewallInterfacepolicySrcaddrOutput)
}

type FirewallInternetserviceadditionEntry struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Entry ID(1-255).
	Id *int `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges []FirewallInternetserviceadditionEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol *int `pulumi:"protocol"`
}

// FirewallInternetserviceadditionEntryInput is an input type that accepts FirewallInternetserviceadditionEntryArgs and FirewallInternetserviceadditionEntryOutput values.
// You can construct a concrete instance of `FirewallInternetserviceadditionEntryInput` via:
//
//	FirewallInternetserviceadditionEntryArgs{...}
type FirewallInternetserviceadditionEntryInput interface {
	pulumi.Input

	ToFirewallInternetserviceadditionEntryOutput() FirewallInternetserviceadditionEntryOutput
	ToFirewallInternetserviceadditionEntryOutputWithContext(context.Context) FirewallInternetserviceadditionEntryOutput
}

type FirewallInternetserviceadditionEntryArgs struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Entry ID(1-255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges FirewallInternetserviceadditionEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
}

func (FirewallInternetserviceadditionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceadditionEntry)(nil)).Elem()
}

func (i FirewallInternetserviceadditionEntryArgs) ToFirewallInternetserviceadditionEntryOutput() FirewallInternetserviceadditionEntryOutput {
	return i.ToFirewallInternetserviceadditionEntryOutputWithContext(context.Background())
}

func (i FirewallInternetserviceadditionEntryArgs) ToFirewallInternetserviceadditionEntryOutputWithContext(ctx context.Context) FirewallInternetserviceadditionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceadditionEntryOutput)
}

// FirewallInternetserviceadditionEntryArrayInput is an input type that accepts FirewallInternetserviceadditionEntryArray and FirewallInternetserviceadditionEntryArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceadditionEntryArrayInput` via:
//
//	FirewallInternetserviceadditionEntryArray{ FirewallInternetserviceadditionEntryArgs{...} }
type FirewallInternetserviceadditionEntryArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceadditionEntryArrayOutput() FirewallInternetserviceadditionEntryArrayOutput
	ToFirewallInternetserviceadditionEntryArrayOutputWithContext(context.Context) FirewallInternetserviceadditionEntryArrayOutput
}

type FirewallInternetserviceadditionEntryArray []FirewallInternetserviceadditionEntryInput

func (FirewallInternetserviceadditionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceadditionEntry)(nil)).Elem()
}

func (i FirewallInternetserviceadditionEntryArray) ToFirewallInternetserviceadditionEntryArrayOutput() FirewallInternetserviceadditionEntryArrayOutput {
	return i.ToFirewallInternetserviceadditionEntryArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceadditionEntryArray) ToFirewallInternetserviceadditionEntryArrayOutputWithContext(ctx context.Context) FirewallInternetserviceadditionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceadditionEntryArrayOutput)
}

type FirewallInternetserviceadditionEntryOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceadditionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceadditionEntry)(nil)).Elem()
}

func (o FirewallInternetserviceadditionEntryOutput) ToFirewallInternetserviceadditionEntryOutput() FirewallInternetserviceadditionEntryOutput {
	return o
}

func (o FirewallInternetserviceadditionEntryOutput) ToFirewallInternetserviceadditionEntryOutputWithContext(ctx context.Context) FirewallInternetserviceadditionEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
func (o FirewallInternetserviceadditionEntryOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceadditionEntry) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Entry ID(1-255).
func (o FirewallInternetserviceadditionEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceadditionEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Port ranges in the custom entry. The structure of `portRange` block is documented below.
func (o FirewallInternetserviceadditionEntryOutput) PortRanges() FirewallInternetserviceadditionEntryPortRangeArrayOutput {
	return o.ApplyT(func(v FirewallInternetserviceadditionEntry) []FirewallInternetserviceadditionEntryPortRange {
		return v.PortRanges
	}).(FirewallInternetserviceadditionEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o FirewallInternetserviceadditionEntryOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceadditionEntry) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

type FirewallInternetserviceadditionEntryArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceadditionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceadditionEntry)(nil)).Elem()
}

func (o FirewallInternetserviceadditionEntryArrayOutput) ToFirewallInternetserviceadditionEntryArrayOutput() FirewallInternetserviceadditionEntryArrayOutput {
	return o
}

func (o FirewallInternetserviceadditionEntryArrayOutput) ToFirewallInternetserviceadditionEntryArrayOutputWithContext(ctx context.Context) FirewallInternetserviceadditionEntryArrayOutput {
	return o
}

func (o FirewallInternetserviceadditionEntryArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceadditionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetserviceadditionEntry {
		return vs[0].([]FirewallInternetserviceadditionEntry)[vs[1].(int)]
	}).(FirewallInternetserviceadditionEntryOutput)
}

type FirewallInternetserviceadditionEntryPortRange struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort *int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id *int `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort *int `pulumi:"startPort"`
}

// FirewallInternetserviceadditionEntryPortRangeInput is an input type that accepts FirewallInternetserviceadditionEntryPortRangeArgs and FirewallInternetserviceadditionEntryPortRangeOutput values.
// You can construct a concrete instance of `FirewallInternetserviceadditionEntryPortRangeInput` via:
//
//	FirewallInternetserviceadditionEntryPortRangeArgs{...}
type FirewallInternetserviceadditionEntryPortRangeInput interface {
	pulumi.Input

	ToFirewallInternetserviceadditionEntryPortRangeOutput() FirewallInternetserviceadditionEntryPortRangeOutput
	ToFirewallInternetserviceadditionEntryPortRangeOutputWithContext(context.Context) FirewallInternetserviceadditionEntryPortRangeOutput
}

type FirewallInternetserviceadditionEntryPortRangeArgs struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (FirewallInternetserviceadditionEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceadditionEntryPortRange)(nil)).Elem()
}

func (i FirewallInternetserviceadditionEntryPortRangeArgs) ToFirewallInternetserviceadditionEntryPortRangeOutput() FirewallInternetserviceadditionEntryPortRangeOutput {
	return i.ToFirewallInternetserviceadditionEntryPortRangeOutputWithContext(context.Background())
}

func (i FirewallInternetserviceadditionEntryPortRangeArgs) ToFirewallInternetserviceadditionEntryPortRangeOutputWithContext(ctx context.Context) FirewallInternetserviceadditionEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceadditionEntryPortRangeOutput)
}

// FirewallInternetserviceadditionEntryPortRangeArrayInput is an input type that accepts FirewallInternetserviceadditionEntryPortRangeArray and FirewallInternetserviceadditionEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceadditionEntryPortRangeArrayInput` via:
//
//	FirewallInternetserviceadditionEntryPortRangeArray{ FirewallInternetserviceadditionEntryPortRangeArgs{...} }
type FirewallInternetserviceadditionEntryPortRangeArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceadditionEntryPortRangeArrayOutput() FirewallInternetserviceadditionEntryPortRangeArrayOutput
	ToFirewallInternetserviceadditionEntryPortRangeArrayOutputWithContext(context.Context) FirewallInternetserviceadditionEntryPortRangeArrayOutput
}

type FirewallInternetserviceadditionEntryPortRangeArray []FirewallInternetserviceadditionEntryPortRangeInput

func (FirewallInternetserviceadditionEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceadditionEntryPortRange)(nil)).Elem()
}

func (i FirewallInternetserviceadditionEntryPortRangeArray) ToFirewallInternetserviceadditionEntryPortRangeArrayOutput() FirewallInternetserviceadditionEntryPortRangeArrayOutput {
	return i.ToFirewallInternetserviceadditionEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceadditionEntryPortRangeArray) ToFirewallInternetserviceadditionEntryPortRangeArrayOutputWithContext(ctx context.Context) FirewallInternetserviceadditionEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceadditionEntryPortRangeArrayOutput)
}

type FirewallInternetserviceadditionEntryPortRangeOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceadditionEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceadditionEntryPortRange)(nil)).Elem()
}

func (o FirewallInternetserviceadditionEntryPortRangeOutput) ToFirewallInternetserviceadditionEntryPortRangeOutput() FirewallInternetserviceadditionEntryPortRangeOutput {
	return o
}

func (o FirewallInternetserviceadditionEntryPortRangeOutput) ToFirewallInternetserviceadditionEntryPortRangeOutputWithContext(ctx context.Context) FirewallInternetserviceadditionEntryPortRangeOutput {
	return o
}

// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
func (o FirewallInternetserviceadditionEntryPortRangeOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceadditionEntryPortRange) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Custom entry port range ID.
func (o FirewallInternetserviceadditionEntryPortRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceadditionEntryPortRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
func (o FirewallInternetserviceadditionEntryPortRangeOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceadditionEntryPortRange) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type FirewallInternetserviceadditionEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceadditionEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceadditionEntryPortRange)(nil)).Elem()
}

func (o FirewallInternetserviceadditionEntryPortRangeArrayOutput) ToFirewallInternetserviceadditionEntryPortRangeArrayOutput() FirewallInternetserviceadditionEntryPortRangeArrayOutput {
	return o
}

func (o FirewallInternetserviceadditionEntryPortRangeArrayOutput) ToFirewallInternetserviceadditionEntryPortRangeArrayOutputWithContext(ctx context.Context) FirewallInternetserviceadditionEntryPortRangeArrayOutput {
	return o
}

func (o FirewallInternetserviceadditionEntryPortRangeArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceadditionEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetserviceadditionEntryPortRange {
		return vs[0].([]FirewallInternetserviceadditionEntryPortRange)[vs[1].(int)]
	}).(FirewallInternetserviceadditionEntryPortRangeOutput)
}

type FirewallInternetservicecustomEntry struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s []FirewallInternetservicecustomEntryDst6 `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts []FirewallInternetservicecustomEntryDst `pulumi:"dsts"`
	// Entry ID(1-255).
	Id *int `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges []FirewallInternetservicecustomEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol *int `pulumi:"protocol"`
}

// FirewallInternetservicecustomEntryInput is an input type that accepts FirewallInternetservicecustomEntryArgs and FirewallInternetservicecustomEntryOutput values.
// You can construct a concrete instance of `FirewallInternetservicecustomEntryInput` via:
//
//	FirewallInternetservicecustomEntryArgs{...}
type FirewallInternetservicecustomEntryInput interface {
	pulumi.Input

	ToFirewallInternetservicecustomEntryOutput() FirewallInternetservicecustomEntryOutput
	ToFirewallInternetservicecustomEntryOutputWithContext(context.Context) FirewallInternetservicecustomEntryOutput
}

type FirewallInternetservicecustomEntryArgs struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s FirewallInternetservicecustomEntryDst6ArrayInput `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts FirewallInternetservicecustomEntryDstArrayInput `pulumi:"dsts"`
	// Entry ID(1-255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges FirewallInternetservicecustomEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
}

func (FirewallInternetservicecustomEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicecustomEntry)(nil)).Elem()
}

func (i FirewallInternetservicecustomEntryArgs) ToFirewallInternetservicecustomEntryOutput() FirewallInternetservicecustomEntryOutput {
	return i.ToFirewallInternetservicecustomEntryOutputWithContext(context.Background())
}

func (i FirewallInternetservicecustomEntryArgs) ToFirewallInternetservicecustomEntryOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicecustomEntryOutput)
}

// FirewallInternetservicecustomEntryArrayInput is an input type that accepts FirewallInternetservicecustomEntryArray and FirewallInternetservicecustomEntryArrayOutput values.
// You can construct a concrete instance of `FirewallInternetservicecustomEntryArrayInput` via:
//
//	FirewallInternetservicecustomEntryArray{ FirewallInternetservicecustomEntryArgs{...} }
type FirewallInternetservicecustomEntryArrayInput interface {
	pulumi.Input

	ToFirewallInternetservicecustomEntryArrayOutput() FirewallInternetservicecustomEntryArrayOutput
	ToFirewallInternetservicecustomEntryArrayOutputWithContext(context.Context) FirewallInternetservicecustomEntryArrayOutput
}

type FirewallInternetservicecustomEntryArray []FirewallInternetservicecustomEntryInput

func (FirewallInternetservicecustomEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicecustomEntry)(nil)).Elem()
}

func (i FirewallInternetservicecustomEntryArray) ToFirewallInternetservicecustomEntryArrayOutput() FirewallInternetservicecustomEntryArrayOutput {
	return i.ToFirewallInternetservicecustomEntryArrayOutputWithContext(context.Background())
}

func (i FirewallInternetservicecustomEntryArray) ToFirewallInternetservicecustomEntryArrayOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicecustomEntryArrayOutput)
}

type FirewallInternetservicecustomEntryOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicecustomEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicecustomEntry)(nil)).Elem()
}

func (o FirewallInternetservicecustomEntryOutput) ToFirewallInternetservicecustomEntryOutput() FirewallInternetservicecustomEntryOutput {
	return o
}

func (o FirewallInternetservicecustomEntryOutput) ToFirewallInternetservicecustomEntryOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
func (o FirewallInternetservicecustomEntryOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntry) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
func (o FirewallInternetservicecustomEntryOutput) Dst6s() FirewallInternetservicecustomEntryDst6ArrayOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntry) []FirewallInternetservicecustomEntryDst6 { return v.Dst6s }).(FirewallInternetservicecustomEntryDst6ArrayOutput)
}

// Destination address or address group name. The structure of `dst` block is documented below.
func (o FirewallInternetservicecustomEntryOutput) Dsts() FirewallInternetservicecustomEntryDstArrayOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntry) []FirewallInternetservicecustomEntryDst { return v.Dsts }).(FirewallInternetservicecustomEntryDstArrayOutput)
}

// Entry ID(1-255).
func (o FirewallInternetservicecustomEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Port ranges in the custom entry. The structure of `portRange` block is documented below.
func (o FirewallInternetservicecustomEntryOutput) PortRanges() FirewallInternetservicecustomEntryPortRangeArrayOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntry) []FirewallInternetservicecustomEntryPortRange {
		return v.PortRanges
	}).(FirewallInternetservicecustomEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o FirewallInternetservicecustomEntryOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntry) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

type FirewallInternetservicecustomEntryArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicecustomEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicecustomEntry)(nil)).Elem()
}

func (o FirewallInternetservicecustomEntryArrayOutput) ToFirewallInternetservicecustomEntryArrayOutput() FirewallInternetservicecustomEntryArrayOutput {
	return o
}

func (o FirewallInternetservicecustomEntryArrayOutput) ToFirewallInternetservicecustomEntryArrayOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryArrayOutput {
	return o
}

func (o FirewallInternetservicecustomEntryArrayOutput) Index(i pulumi.IntInput) FirewallInternetservicecustomEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetservicecustomEntry {
		return vs[0].([]FirewallInternetservicecustomEntry)[vs[1].(int)]
	}).(FirewallInternetservicecustomEntryOutput)
}

type FirewallInternetservicecustomEntryDst6 struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallInternetservicecustomEntryDst6Input is an input type that accepts FirewallInternetservicecustomEntryDst6Args and FirewallInternetservicecustomEntryDst6Output values.
// You can construct a concrete instance of `FirewallInternetservicecustomEntryDst6Input` via:
//
//	FirewallInternetservicecustomEntryDst6Args{...}
type FirewallInternetservicecustomEntryDst6Input interface {
	pulumi.Input

	ToFirewallInternetservicecustomEntryDst6Output() FirewallInternetservicecustomEntryDst6Output
	ToFirewallInternetservicecustomEntryDst6OutputWithContext(context.Context) FirewallInternetservicecustomEntryDst6Output
}

type FirewallInternetservicecustomEntryDst6Args struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInternetservicecustomEntryDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicecustomEntryDst6)(nil)).Elem()
}

func (i FirewallInternetservicecustomEntryDst6Args) ToFirewallInternetservicecustomEntryDst6Output() FirewallInternetservicecustomEntryDst6Output {
	return i.ToFirewallInternetservicecustomEntryDst6OutputWithContext(context.Background())
}

func (i FirewallInternetservicecustomEntryDst6Args) ToFirewallInternetservicecustomEntryDst6OutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicecustomEntryDst6Output)
}

// FirewallInternetservicecustomEntryDst6ArrayInput is an input type that accepts FirewallInternetservicecustomEntryDst6Array and FirewallInternetservicecustomEntryDst6ArrayOutput values.
// You can construct a concrete instance of `FirewallInternetservicecustomEntryDst6ArrayInput` via:
//
//	FirewallInternetservicecustomEntryDst6Array{ FirewallInternetservicecustomEntryDst6Args{...} }
type FirewallInternetservicecustomEntryDst6ArrayInput interface {
	pulumi.Input

	ToFirewallInternetservicecustomEntryDst6ArrayOutput() FirewallInternetservicecustomEntryDst6ArrayOutput
	ToFirewallInternetservicecustomEntryDst6ArrayOutputWithContext(context.Context) FirewallInternetservicecustomEntryDst6ArrayOutput
}

type FirewallInternetservicecustomEntryDst6Array []FirewallInternetservicecustomEntryDst6Input

func (FirewallInternetservicecustomEntryDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicecustomEntryDst6)(nil)).Elem()
}

func (i FirewallInternetservicecustomEntryDst6Array) ToFirewallInternetservicecustomEntryDst6ArrayOutput() FirewallInternetservicecustomEntryDst6ArrayOutput {
	return i.ToFirewallInternetservicecustomEntryDst6ArrayOutputWithContext(context.Background())
}

func (i FirewallInternetservicecustomEntryDst6Array) ToFirewallInternetservicecustomEntryDst6ArrayOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicecustomEntryDst6ArrayOutput)
}

type FirewallInternetservicecustomEntryDst6Output struct{ *pulumi.OutputState }

func (FirewallInternetservicecustomEntryDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicecustomEntryDst6)(nil)).Elem()
}

func (o FirewallInternetservicecustomEntryDst6Output) ToFirewallInternetservicecustomEntryDst6Output() FirewallInternetservicecustomEntryDst6Output {
	return o
}

func (o FirewallInternetservicecustomEntryDst6Output) ToFirewallInternetservicecustomEntryDst6OutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryDst6Output {
	return o
}

// Internet Service name.
func (o FirewallInternetservicecustomEntryDst6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntryDst6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInternetservicecustomEntryDst6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicecustomEntryDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicecustomEntryDst6)(nil)).Elem()
}

func (o FirewallInternetservicecustomEntryDst6ArrayOutput) ToFirewallInternetservicecustomEntryDst6ArrayOutput() FirewallInternetservicecustomEntryDst6ArrayOutput {
	return o
}

func (o FirewallInternetservicecustomEntryDst6ArrayOutput) ToFirewallInternetservicecustomEntryDst6ArrayOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryDst6ArrayOutput {
	return o
}

func (o FirewallInternetservicecustomEntryDst6ArrayOutput) Index(i pulumi.IntInput) FirewallInternetservicecustomEntryDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetservicecustomEntryDst6 {
		return vs[0].([]FirewallInternetservicecustomEntryDst6)[vs[1].(int)]
	}).(FirewallInternetservicecustomEntryDst6Output)
}

type FirewallInternetservicecustomEntryDst struct {
	// Select the destination address6 or address group object from available options.
	Name *string `pulumi:"name"`
}

// FirewallInternetservicecustomEntryDstInput is an input type that accepts FirewallInternetservicecustomEntryDstArgs and FirewallInternetservicecustomEntryDstOutput values.
// You can construct a concrete instance of `FirewallInternetservicecustomEntryDstInput` via:
//
//	FirewallInternetservicecustomEntryDstArgs{...}
type FirewallInternetservicecustomEntryDstInput interface {
	pulumi.Input

	ToFirewallInternetservicecustomEntryDstOutput() FirewallInternetservicecustomEntryDstOutput
	ToFirewallInternetservicecustomEntryDstOutputWithContext(context.Context) FirewallInternetservicecustomEntryDstOutput
}

type FirewallInternetservicecustomEntryDstArgs struct {
	// Select the destination address6 or address group object from available options.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInternetservicecustomEntryDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicecustomEntryDst)(nil)).Elem()
}

func (i FirewallInternetservicecustomEntryDstArgs) ToFirewallInternetservicecustomEntryDstOutput() FirewallInternetservicecustomEntryDstOutput {
	return i.ToFirewallInternetservicecustomEntryDstOutputWithContext(context.Background())
}

func (i FirewallInternetservicecustomEntryDstArgs) ToFirewallInternetservicecustomEntryDstOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicecustomEntryDstOutput)
}

// FirewallInternetservicecustomEntryDstArrayInput is an input type that accepts FirewallInternetservicecustomEntryDstArray and FirewallInternetservicecustomEntryDstArrayOutput values.
// You can construct a concrete instance of `FirewallInternetservicecustomEntryDstArrayInput` via:
//
//	FirewallInternetservicecustomEntryDstArray{ FirewallInternetservicecustomEntryDstArgs{...} }
type FirewallInternetservicecustomEntryDstArrayInput interface {
	pulumi.Input

	ToFirewallInternetservicecustomEntryDstArrayOutput() FirewallInternetservicecustomEntryDstArrayOutput
	ToFirewallInternetservicecustomEntryDstArrayOutputWithContext(context.Context) FirewallInternetservicecustomEntryDstArrayOutput
}

type FirewallInternetservicecustomEntryDstArray []FirewallInternetservicecustomEntryDstInput

func (FirewallInternetservicecustomEntryDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicecustomEntryDst)(nil)).Elem()
}

func (i FirewallInternetservicecustomEntryDstArray) ToFirewallInternetservicecustomEntryDstArrayOutput() FirewallInternetservicecustomEntryDstArrayOutput {
	return i.ToFirewallInternetservicecustomEntryDstArrayOutputWithContext(context.Background())
}

func (i FirewallInternetservicecustomEntryDstArray) ToFirewallInternetservicecustomEntryDstArrayOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicecustomEntryDstArrayOutput)
}

type FirewallInternetservicecustomEntryDstOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicecustomEntryDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicecustomEntryDst)(nil)).Elem()
}

func (o FirewallInternetservicecustomEntryDstOutput) ToFirewallInternetservicecustomEntryDstOutput() FirewallInternetservicecustomEntryDstOutput {
	return o
}

func (o FirewallInternetservicecustomEntryDstOutput) ToFirewallInternetservicecustomEntryDstOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryDstOutput {
	return o
}

// Select the destination address6 or address group object from available options.
func (o FirewallInternetservicecustomEntryDstOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntryDst) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInternetservicecustomEntryDstArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicecustomEntryDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicecustomEntryDst)(nil)).Elem()
}

func (o FirewallInternetservicecustomEntryDstArrayOutput) ToFirewallInternetservicecustomEntryDstArrayOutput() FirewallInternetservicecustomEntryDstArrayOutput {
	return o
}

func (o FirewallInternetservicecustomEntryDstArrayOutput) ToFirewallInternetservicecustomEntryDstArrayOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryDstArrayOutput {
	return o
}

func (o FirewallInternetservicecustomEntryDstArrayOutput) Index(i pulumi.IntInput) FirewallInternetservicecustomEntryDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetservicecustomEntryDst {
		return vs[0].([]FirewallInternetservicecustomEntryDst)[vs[1].(int)]
	}).(FirewallInternetservicecustomEntryDstOutput)
}

type FirewallInternetservicecustomEntryPortRange struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort *int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id *int `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort *int `pulumi:"startPort"`
}

// FirewallInternetservicecustomEntryPortRangeInput is an input type that accepts FirewallInternetservicecustomEntryPortRangeArgs and FirewallInternetservicecustomEntryPortRangeOutput values.
// You can construct a concrete instance of `FirewallInternetservicecustomEntryPortRangeInput` via:
//
//	FirewallInternetservicecustomEntryPortRangeArgs{...}
type FirewallInternetservicecustomEntryPortRangeInput interface {
	pulumi.Input

	ToFirewallInternetservicecustomEntryPortRangeOutput() FirewallInternetservicecustomEntryPortRangeOutput
	ToFirewallInternetservicecustomEntryPortRangeOutputWithContext(context.Context) FirewallInternetservicecustomEntryPortRangeOutput
}

type FirewallInternetservicecustomEntryPortRangeArgs struct {
	// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (FirewallInternetservicecustomEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (i FirewallInternetservicecustomEntryPortRangeArgs) ToFirewallInternetservicecustomEntryPortRangeOutput() FirewallInternetservicecustomEntryPortRangeOutput {
	return i.ToFirewallInternetservicecustomEntryPortRangeOutputWithContext(context.Background())
}

func (i FirewallInternetservicecustomEntryPortRangeArgs) ToFirewallInternetservicecustomEntryPortRangeOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicecustomEntryPortRangeOutput)
}

// FirewallInternetservicecustomEntryPortRangeArrayInput is an input type that accepts FirewallInternetservicecustomEntryPortRangeArray and FirewallInternetservicecustomEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `FirewallInternetservicecustomEntryPortRangeArrayInput` via:
//
//	FirewallInternetservicecustomEntryPortRangeArray{ FirewallInternetservicecustomEntryPortRangeArgs{...} }
type FirewallInternetservicecustomEntryPortRangeArrayInput interface {
	pulumi.Input

	ToFirewallInternetservicecustomEntryPortRangeArrayOutput() FirewallInternetservicecustomEntryPortRangeArrayOutput
	ToFirewallInternetservicecustomEntryPortRangeArrayOutputWithContext(context.Context) FirewallInternetservicecustomEntryPortRangeArrayOutput
}

type FirewallInternetservicecustomEntryPortRangeArray []FirewallInternetservicecustomEntryPortRangeInput

func (FirewallInternetservicecustomEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (i FirewallInternetservicecustomEntryPortRangeArray) ToFirewallInternetservicecustomEntryPortRangeArrayOutput() FirewallInternetservicecustomEntryPortRangeArrayOutput {
	return i.ToFirewallInternetservicecustomEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i FirewallInternetservicecustomEntryPortRangeArray) ToFirewallInternetservicecustomEntryPortRangeArrayOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicecustomEntryPortRangeArrayOutput)
}

type FirewallInternetservicecustomEntryPortRangeOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicecustomEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (o FirewallInternetservicecustomEntryPortRangeOutput) ToFirewallInternetservicecustomEntryPortRangeOutput() FirewallInternetservicecustomEntryPortRangeOutput {
	return o
}

func (o FirewallInternetservicecustomEntryPortRangeOutput) ToFirewallInternetservicecustomEntryPortRangeOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryPortRangeOutput {
	return o
}

// Integer value for ending TCP/UDP/SCTP destination port in range (1 to 65535).
func (o FirewallInternetservicecustomEntryPortRangeOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntryPortRange) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Custom entry port range ID.
func (o FirewallInternetservicecustomEntryPortRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntryPortRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Integer value for starting TCP/UDP/SCTP destination port in range (1 to 65535).
func (o FirewallInternetservicecustomEntryPortRangeOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomEntryPortRange) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type FirewallInternetservicecustomEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicecustomEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicecustomEntryPortRange)(nil)).Elem()
}

func (o FirewallInternetservicecustomEntryPortRangeArrayOutput) ToFirewallInternetservicecustomEntryPortRangeArrayOutput() FirewallInternetservicecustomEntryPortRangeArrayOutput {
	return o
}

func (o FirewallInternetservicecustomEntryPortRangeArrayOutput) ToFirewallInternetservicecustomEntryPortRangeArrayOutputWithContext(ctx context.Context) FirewallInternetservicecustomEntryPortRangeArrayOutput {
	return o
}

func (o FirewallInternetservicecustomEntryPortRangeArrayOutput) Index(i pulumi.IntInput) FirewallInternetservicecustomEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetservicecustomEntryPortRange {
		return vs[0].([]FirewallInternetservicecustomEntryPortRange)[vs[1].(int)]
	}).(FirewallInternetservicecustomEntryPortRangeOutput)
}

type FirewallInternetservicecustomgroupMember struct {
	// Group member name.
	Name *string `pulumi:"name"`
}

// FirewallInternetservicecustomgroupMemberInput is an input type that accepts FirewallInternetservicecustomgroupMemberArgs and FirewallInternetservicecustomgroupMemberOutput values.
// You can construct a concrete instance of `FirewallInternetservicecustomgroupMemberInput` via:
//
//	FirewallInternetservicecustomgroupMemberArgs{...}
type FirewallInternetservicecustomgroupMemberInput interface {
	pulumi.Input

	ToFirewallInternetservicecustomgroupMemberOutput() FirewallInternetservicecustomgroupMemberOutput
	ToFirewallInternetservicecustomgroupMemberOutputWithContext(context.Context) FirewallInternetservicecustomgroupMemberOutput
}

type FirewallInternetservicecustomgroupMemberArgs struct {
	// Group member name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInternetservicecustomgroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicecustomgroupMember)(nil)).Elem()
}

func (i FirewallInternetservicecustomgroupMemberArgs) ToFirewallInternetservicecustomgroupMemberOutput() FirewallInternetservicecustomgroupMemberOutput {
	return i.ToFirewallInternetservicecustomgroupMemberOutputWithContext(context.Background())
}

func (i FirewallInternetservicecustomgroupMemberArgs) ToFirewallInternetservicecustomgroupMemberOutputWithContext(ctx context.Context) FirewallInternetservicecustomgroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicecustomgroupMemberOutput)
}

// FirewallInternetservicecustomgroupMemberArrayInput is an input type that accepts FirewallInternetservicecustomgroupMemberArray and FirewallInternetservicecustomgroupMemberArrayOutput values.
// You can construct a concrete instance of `FirewallInternetservicecustomgroupMemberArrayInput` via:
//
//	FirewallInternetservicecustomgroupMemberArray{ FirewallInternetservicecustomgroupMemberArgs{...} }
type FirewallInternetservicecustomgroupMemberArrayInput interface {
	pulumi.Input

	ToFirewallInternetservicecustomgroupMemberArrayOutput() FirewallInternetservicecustomgroupMemberArrayOutput
	ToFirewallInternetservicecustomgroupMemberArrayOutputWithContext(context.Context) FirewallInternetservicecustomgroupMemberArrayOutput
}

type FirewallInternetservicecustomgroupMemberArray []FirewallInternetservicecustomgroupMemberInput

func (FirewallInternetservicecustomgroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicecustomgroupMember)(nil)).Elem()
}

func (i FirewallInternetservicecustomgroupMemberArray) ToFirewallInternetservicecustomgroupMemberArrayOutput() FirewallInternetservicecustomgroupMemberArrayOutput {
	return i.ToFirewallInternetservicecustomgroupMemberArrayOutputWithContext(context.Background())
}

func (i FirewallInternetservicecustomgroupMemberArray) ToFirewallInternetservicecustomgroupMemberArrayOutputWithContext(ctx context.Context) FirewallInternetservicecustomgroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicecustomgroupMemberArrayOutput)
}

type FirewallInternetservicecustomgroupMemberOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicecustomgroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicecustomgroupMember)(nil)).Elem()
}

func (o FirewallInternetservicecustomgroupMemberOutput) ToFirewallInternetservicecustomgroupMemberOutput() FirewallInternetservicecustomgroupMemberOutput {
	return o
}

func (o FirewallInternetservicecustomgroupMemberOutput) ToFirewallInternetservicecustomgroupMemberOutputWithContext(ctx context.Context) FirewallInternetservicecustomgroupMemberOutput {
	return o
}

// Group member name.
func (o FirewallInternetservicecustomgroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicecustomgroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInternetservicecustomgroupMemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicecustomgroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicecustomgroupMember)(nil)).Elem()
}

func (o FirewallInternetservicecustomgroupMemberArrayOutput) ToFirewallInternetservicecustomgroupMemberArrayOutput() FirewallInternetservicecustomgroupMemberArrayOutput {
	return o
}

func (o FirewallInternetservicecustomgroupMemberArrayOutput) ToFirewallInternetservicecustomgroupMemberArrayOutputWithContext(ctx context.Context) FirewallInternetservicecustomgroupMemberArrayOutput {
	return o
}

func (o FirewallInternetservicecustomgroupMemberArrayOutput) Index(i pulumi.IntInput) FirewallInternetservicecustomgroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetservicecustomgroupMember {
		return vs[0].([]FirewallInternetservicecustomgroupMember)[vs[1].(int)]
	}).(FirewallInternetservicecustomgroupMemberOutput)
}

type FirewallInternetservicedefinitionEntry struct {
	// Internet Service category ID.
	CategoryId *int `pulumi:"categoryId"`
	// Internet Service name.
	Name *string `pulumi:"name"`
	// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
	Port *int `pulumi:"port"`
	// Port ranges in the definition entry. The structure of `portRange` block is documented below.
	PortRanges []FirewallInternetservicedefinitionEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol *int `pulumi:"protocol"`
	// Entry sequence number.
	SeqNum *int `pulumi:"seqNum"`
}

// FirewallInternetservicedefinitionEntryInput is an input type that accepts FirewallInternetservicedefinitionEntryArgs and FirewallInternetservicedefinitionEntryOutput values.
// You can construct a concrete instance of `FirewallInternetservicedefinitionEntryInput` via:
//
//	FirewallInternetservicedefinitionEntryArgs{...}
type FirewallInternetservicedefinitionEntryInput interface {
	pulumi.Input

	ToFirewallInternetservicedefinitionEntryOutput() FirewallInternetservicedefinitionEntryOutput
	ToFirewallInternetservicedefinitionEntryOutputWithContext(context.Context) FirewallInternetservicedefinitionEntryOutput
}

type FirewallInternetservicedefinitionEntryArgs struct {
	// Internet Service category ID.
	CategoryId pulumi.IntPtrInput `pulumi:"categoryId"`
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Port ranges in the definition entry. The structure of `portRange` block is documented below.
	PortRanges FirewallInternetservicedefinitionEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
	// Entry sequence number.
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (FirewallInternetservicedefinitionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicedefinitionEntry)(nil)).Elem()
}

func (i FirewallInternetservicedefinitionEntryArgs) ToFirewallInternetservicedefinitionEntryOutput() FirewallInternetservicedefinitionEntryOutput {
	return i.ToFirewallInternetservicedefinitionEntryOutputWithContext(context.Background())
}

func (i FirewallInternetservicedefinitionEntryArgs) ToFirewallInternetservicedefinitionEntryOutputWithContext(ctx context.Context) FirewallInternetservicedefinitionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicedefinitionEntryOutput)
}

// FirewallInternetservicedefinitionEntryArrayInput is an input type that accepts FirewallInternetservicedefinitionEntryArray and FirewallInternetservicedefinitionEntryArrayOutput values.
// You can construct a concrete instance of `FirewallInternetservicedefinitionEntryArrayInput` via:
//
//	FirewallInternetservicedefinitionEntryArray{ FirewallInternetservicedefinitionEntryArgs{...} }
type FirewallInternetservicedefinitionEntryArrayInput interface {
	pulumi.Input

	ToFirewallInternetservicedefinitionEntryArrayOutput() FirewallInternetservicedefinitionEntryArrayOutput
	ToFirewallInternetservicedefinitionEntryArrayOutputWithContext(context.Context) FirewallInternetservicedefinitionEntryArrayOutput
}

type FirewallInternetservicedefinitionEntryArray []FirewallInternetservicedefinitionEntryInput

func (FirewallInternetservicedefinitionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicedefinitionEntry)(nil)).Elem()
}

func (i FirewallInternetservicedefinitionEntryArray) ToFirewallInternetservicedefinitionEntryArrayOutput() FirewallInternetservicedefinitionEntryArrayOutput {
	return i.ToFirewallInternetservicedefinitionEntryArrayOutputWithContext(context.Background())
}

func (i FirewallInternetservicedefinitionEntryArray) ToFirewallInternetservicedefinitionEntryArrayOutputWithContext(ctx context.Context) FirewallInternetservicedefinitionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicedefinitionEntryArrayOutput)
}

type FirewallInternetservicedefinitionEntryOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicedefinitionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicedefinitionEntry)(nil)).Elem()
}

func (o FirewallInternetservicedefinitionEntryOutput) ToFirewallInternetservicedefinitionEntryOutput() FirewallInternetservicedefinitionEntryOutput {
	return o
}

func (o FirewallInternetservicedefinitionEntryOutput) ToFirewallInternetservicedefinitionEntryOutputWithContext(ctx context.Context) FirewallInternetservicedefinitionEntryOutput {
	return o
}

// Internet Service category ID.
func (o FirewallInternetservicedefinitionEntryOutput) CategoryId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicedefinitionEntry) *int { return v.CategoryId }).(pulumi.IntPtrOutput)
}

// Internet Service name.
func (o FirewallInternetservicedefinitionEntryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicedefinitionEntry) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Integer value for ending TCP/UDP/SCTP destination port in range (0 to 65535). 0 means undefined.
func (o FirewallInternetservicedefinitionEntryOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicedefinitionEntry) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Port ranges in the definition entry. The structure of `portRange` block is documented below.
func (o FirewallInternetservicedefinitionEntryOutput) PortRanges() FirewallInternetservicedefinitionEntryPortRangeArrayOutput {
	return o.ApplyT(func(v FirewallInternetservicedefinitionEntry) []FirewallInternetservicedefinitionEntryPortRange {
		return v.PortRanges
	}).(FirewallInternetservicedefinitionEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o FirewallInternetservicedefinitionEntryOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicedefinitionEntry) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

// Entry sequence number.
func (o FirewallInternetservicedefinitionEntryOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicedefinitionEntry) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type FirewallInternetservicedefinitionEntryArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicedefinitionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicedefinitionEntry)(nil)).Elem()
}

func (o FirewallInternetservicedefinitionEntryArrayOutput) ToFirewallInternetservicedefinitionEntryArrayOutput() FirewallInternetservicedefinitionEntryArrayOutput {
	return o
}

func (o FirewallInternetservicedefinitionEntryArrayOutput) ToFirewallInternetservicedefinitionEntryArrayOutputWithContext(ctx context.Context) FirewallInternetservicedefinitionEntryArrayOutput {
	return o
}

func (o FirewallInternetservicedefinitionEntryArrayOutput) Index(i pulumi.IntInput) FirewallInternetservicedefinitionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetservicedefinitionEntry {
		return vs[0].([]FirewallInternetservicedefinitionEntry)[vs[1].(int)]
	}).(FirewallInternetservicedefinitionEntryOutput)
}

type FirewallInternetservicedefinitionEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort *int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id *int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort *int `pulumi:"startPort"`
}

// FirewallInternetservicedefinitionEntryPortRangeInput is an input type that accepts FirewallInternetservicedefinitionEntryPortRangeArgs and FirewallInternetservicedefinitionEntryPortRangeOutput values.
// You can construct a concrete instance of `FirewallInternetservicedefinitionEntryPortRangeInput` via:
//
//	FirewallInternetservicedefinitionEntryPortRangeArgs{...}
type FirewallInternetservicedefinitionEntryPortRangeInput interface {
	pulumi.Input

	ToFirewallInternetservicedefinitionEntryPortRangeOutput() FirewallInternetservicedefinitionEntryPortRangeOutput
	ToFirewallInternetservicedefinitionEntryPortRangeOutputWithContext(context.Context) FirewallInternetservicedefinitionEntryPortRangeOutput
}

type FirewallInternetservicedefinitionEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (FirewallInternetservicedefinitionEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (i FirewallInternetservicedefinitionEntryPortRangeArgs) ToFirewallInternetservicedefinitionEntryPortRangeOutput() FirewallInternetservicedefinitionEntryPortRangeOutput {
	return i.ToFirewallInternetservicedefinitionEntryPortRangeOutputWithContext(context.Background())
}

func (i FirewallInternetservicedefinitionEntryPortRangeArgs) ToFirewallInternetservicedefinitionEntryPortRangeOutputWithContext(ctx context.Context) FirewallInternetservicedefinitionEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicedefinitionEntryPortRangeOutput)
}

// FirewallInternetservicedefinitionEntryPortRangeArrayInput is an input type that accepts FirewallInternetservicedefinitionEntryPortRangeArray and FirewallInternetservicedefinitionEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `FirewallInternetservicedefinitionEntryPortRangeArrayInput` via:
//
//	FirewallInternetservicedefinitionEntryPortRangeArray{ FirewallInternetservicedefinitionEntryPortRangeArgs{...} }
type FirewallInternetservicedefinitionEntryPortRangeArrayInput interface {
	pulumi.Input

	ToFirewallInternetservicedefinitionEntryPortRangeArrayOutput() FirewallInternetservicedefinitionEntryPortRangeArrayOutput
	ToFirewallInternetservicedefinitionEntryPortRangeArrayOutputWithContext(context.Context) FirewallInternetservicedefinitionEntryPortRangeArrayOutput
}

type FirewallInternetservicedefinitionEntryPortRangeArray []FirewallInternetservicedefinitionEntryPortRangeInput

func (FirewallInternetservicedefinitionEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (i FirewallInternetservicedefinitionEntryPortRangeArray) ToFirewallInternetservicedefinitionEntryPortRangeArrayOutput() FirewallInternetservicedefinitionEntryPortRangeArrayOutput {
	return i.ToFirewallInternetservicedefinitionEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i FirewallInternetservicedefinitionEntryPortRangeArray) ToFirewallInternetservicedefinitionEntryPortRangeArrayOutputWithContext(ctx context.Context) FirewallInternetservicedefinitionEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicedefinitionEntryPortRangeArrayOutput)
}

type FirewallInternetservicedefinitionEntryPortRangeOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicedefinitionEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (o FirewallInternetservicedefinitionEntryPortRangeOutput) ToFirewallInternetservicedefinitionEntryPortRangeOutput() FirewallInternetservicedefinitionEntryPortRangeOutput {
	return o
}

func (o FirewallInternetservicedefinitionEntryPortRangeOutput) ToFirewallInternetservicedefinitionEntryPortRangeOutputWithContext(ctx context.Context) FirewallInternetservicedefinitionEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o FirewallInternetservicedefinitionEntryPortRangeOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicedefinitionEntryPortRange) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Custom entry port range ID.
func (o FirewallInternetservicedefinitionEntryPortRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicedefinitionEntryPortRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o FirewallInternetservicedefinitionEntryPortRangeOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicedefinitionEntryPortRange) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type FirewallInternetservicedefinitionEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicedefinitionEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicedefinitionEntryPortRange)(nil)).Elem()
}

func (o FirewallInternetservicedefinitionEntryPortRangeArrayOutput) ToFirewallInternetservicedefinitionEntryPortRangeArrayOutput() FirewallInternetservicedefinitionEntryPortRangeArrayOutput {
	return o
}

func (o FirewallInternetservicedefinitionEntryPortRangeArrayOutput) ToFirewallInternetservicedefinitionEntryPortRangeArrayOutputWithContext(ctx context.Context) FirewallInternetservicedefinitionEntryPortRangeArrayOutput {
	return o
}

func (o FirewallInternetservicedefinitionEntryPortRangeArrayOutput) Index(i pulumi.IntInput) FirewallInternetservicedefinitionEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetservicedefinitionEntryPortRange {
		return vs[0].([]FirewallInternetservicedefinitionEntryPortRange)[vs[1].(int)]
	}).(FirewallInternetservicedefinitionEntryPortRangeOutput)
}

type FirewallInternetserviceextensionDisableEntry struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Disable entry ID.
	Id *int `pulumi:"id"`
	// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
	Ip6Ranges []FirewallInternetserviceextensionDisableEntryIp6Range `pulumi:"ip6Ranges"`
	// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
	IpRanges []FirewallInternetserviceextensionDisableEntryIpRange `pulumi:"ipRanges"`
	// Integer value for the TCP/IP port (0 - 65535).
	Port *int `pulumi:"port"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges []FirewallInternetserviceextensionDisableEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol *int `pulumi:"protocol"`
}

// FirewallInternetserviceextensionDisableEntryInput is an input type that accepts FirewallInternetserviceextensionDisableEntryArgs and FirewallInternetserviceextensionDisableEntryOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionDisableEntryInput` via:
//
//	FirewallInternetserviceextensionDisableEntryArgs{...}
type FirewallInternetserviceextensionDisableEntryInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionDisableEntryOutput() FirewallInternetserviceextensionDisableEntryOutput
	ToFirewallInternetserviceextensionDisableEntryOutputWithContext(context.Context) FirewallInternetserviceextensionDisableEntryOutput
}

type FirewallInternetserviceextensionDisableEntryArgs struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Disable entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
	Ip6Ranges FirewallInternetserviceextensionDisableEntryIp6RangeArrayInput `pulumi:"ip6Ranges"`
	// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
	IpRanges FirewallInternetserviceextensionDisableEntryIpRangeArrayInput `pulumi:"ipRanges"`
	// Integer value for the TCP/IP port (0 - 65535).
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Port ranges in the disable entry. The structure of `portRange` block is documented below.
	PortRanges FirewallInternetserviceextensionDisableEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
}

func (FirewallInternetserviceextensionDisableEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (i FirewallInternetserviceextensionDisableEntryArgs) ToFirewallInternetserviceextensionDisableEntryOutput() FirewallInternetserviceextensionDisableEntryOutput {
	return i.ToFirewallInternetserviceextensionDisableEntryOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionDisableEntryArgs) ToFirewallInternetserviceextensionDisableEntryOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionDisableEntryOutput)
}

// FirewallInternetserviceextensionDisableEntryArrayInput is an input type that accepts FirewallInternetserviceextensionDisableEntryArray and FirewallInternetserviceextensionDisableEntryArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionDisableEntryArrayInput` via:
//
//	FirewallInternetserviceextensionDisableEntryArray{ FirewallInternetserviceextensionDisableEntryArgs{...} }
type FirewallInternetserviceextensionDisableEntryArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionDisableEntryArrayOutput() FirewallInternetserviceextensionDisableEntryArrayOutput
	ToFirewallInternetserviceextensionDisableEntryArrayOutputWithContext(context.Context) FirewallInternetserviceextensionDisableEntryArrayOutput
}

type FirewallInternetserviceextensionDisableEntryArray []FirewallInternetserviceextensionDisableEntryInput

func (FirewallInternetserviceextensionDisableEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (i FirewallInternetserviceextensionDisableEntryArray) ToFirewallInternetserviceextensionDisableEntryArrayOutput() FirewallInternetserviceextensionDisableEntryArrayOutput {
	return i.ToFirewallInternetserviceextensionDisableEntryArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionDisableEntryArray) ToFirewallInternetserviceextensionDisableEntryArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionDisableEntryArrayOutput)
}

type FirewallInternetserviceextensionDisableEntryOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionDisableEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (o FirewallInternetserviceextensionDisableEntryOutput) ToFirewallInternetserviceextensionDisableEntryOutput() FirewallInternetserviceextensionDisableEntryOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryOutput) ToFirewallInternetserviceextensionDisableEntryOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
func (o FirewallInternetserviceextensionDisableEntryOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntry) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Disable entry ID.
func (o FirewallInternetserviceextensionDisableEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 ranges in the disable entry. The structure of `ip6Range` block is documented below.
func (o FirewallInternetserviceextensionDisableEntryOutput) Ip6Ranges() FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntry) []FirewallInternetserviceextensionDisableEntryIp6Range {
		return v.Ip6Ranges
	}).(FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput)
}

// IP ranges in the disable entry. The structure of `ipRange` block is documented below.
func (o FirewallInternetserviceextensionDisableEntryOutput) IpRanges() FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntry) []FirewallInternetserviceextensionDisableEntryIpRange {
		return v.IpRanges
	}).(FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput)
}

// Integer value for the TCP/IP port (0 - 65535).
func (o FirewallInternetserviceextensionDisableEntryOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntry) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Port ranges in the disable entry. The structure of `portRange` block is documented below.
func (o FirewallInternetserviceextensionDisableEntryOutput) PortRanges() FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntry) []FirewallInternetserviceextensionDisableEntryPortRange {
		return v.PortRanges
	}).(FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o FirewallInternetserviceextensionDisableEntryOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntry) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

type FirewallInternetserviceextensionDisableEntryArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionDisableEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionDisableEntry)(nil)).Elem()
}

func (o FirewallInternetserviceextensionDisableEntryArrayOutput) ToFirewallInternetserviceextensionDisableEntryArrayOutput() FirewallInternetserviceextensionDisableEntryArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryArrayOutput) ToFirewallInternetserviceextensionDisableEntryArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceextensionDisableEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetserviceextensionDisableEntry {
		return vs[0].([]FirewallInternetserviceextensionDisableEntry)[vs[1].(int)]
	}).(FirewallInternetserviceextensionDisableEntryOutput)
}

type FirewallInternetserviceextensionDisableEntryIp6Range struct {
	// End IPv6 address.
	EndIp6 *string `pulumi:"endIp6"`
	// Entry ID(1-255).
	Id *int `pulumi:"id"`
	// Start IPv6 address.
	StartIp6 *string `pulumi:"startIp6"`
}

// FirewallInternetserviceextensionDisableEntryIp6RangeInput is an input type that accepts FirewallInternetserviceextensionDisableEntryIp6RangeArgs and FirewallInternetserviceextensionDisableEntryIp6RangeOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionDisableEntryIp6RangeInput` via:
//
//	FirewallInternetserviceextensionDisableEntryIp6RangeArgs{...}
type FirewallInternetserviceextensionDisableEntryIp6RangeInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionDisableEntryIp6RangeOutput() FirewallInternetserviceextensionDisableEntryIp6RangeOutput
	ToFirewallInternetserviceextensionDisableEntryIp6RangeOutputWithContext(context.Context) FirewallInternetserviceextensionDisableEntryIp6RangeOutput
}

type FirewallInternetserviceextensionDisableEntryIp6RangeArgs struct {
	// End IPv6 address.
	EndIp6 pulumi.StringPtrInput `pulumi:"endIp6"`
	// Entry ID(1-255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start IPv6 address.
	StartIp6 pulumi.StringPtrInput `pulumi:"startIp6"`
}

func (FirewallInternetserviceextensionDisableEntryIp6RangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (i FirewallInternetserviceextensionDisableEntryIp6RangeArgs) ToFirewallInternetserviceextensionDisableEntryIp6RangeOutput() FirewallInternetserviceextensionDisableEntryIp6RangeOutput {
	return i.ToFirewallInternetserviceextensionDisableEntryIp6RangeOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionDisableEntryIp6RangeArgs) ToFirewallInternetserviceextensionDisableEntryIp6RangeOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryIp6RangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionDisableEntryIp6RangeOutput)
}

// FirewallInternetserviceextensionDisableEntryIp6RangeArrayInput is an input type that accepts FirewallInternetserviceextensionDisableEntryIp6RangeArray and FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionDisableEntryIp6RangeArrayInput` via:
//
//	FirewallInternetserviceextensionDisableEntryIp6RangeArray{ FirewallInternetserviceextensionDisableEntryIp6RangeArgs{...} }
type FirewallInternetserviceextensionDisableEntryIp6RangeArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput() FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput
	ToFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(context.Context) FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput
}

type FirewallInternetserviceextensionDisableEntryIp6RangeArray []FirewallInternetserviceextensionDisableEntryIp6RangeInput

func (FirewallInternetserviceextensionDisableEntryIp6RangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (i FirewallInternetserviceextensionDisableEntryIp6RangeArray) ToFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput() FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return i.ToFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionDisableEntryIp6RangeArray) ToFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput)
}

type FirewallInternetserviceextensionDisableEntryIp6RangeOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionDisableEntryIp6RangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (o FirewallInternetserviceextensionDisableEntryIp6RangeOutput) ToFirewallInternetserviceextensionDisableEntryIp6RangeOutput() FirewallInternetserviceextensionDisableEntryIp6RangeOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryIp6RangeOutput) ToFirewallInternetserviceextensionDisableEntryIp6RangeOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryIp6RangeOutput {
	return o
}

// End IPv6 address.
func (o FirewallInternetserviceextensionDisableEntryIp6RangeOutput) EndIp6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntryIp6Range) *string { return v.EndIp6 }).(pulumi.StringPtrOutput)
}

// Entry ID(1-255).
func (o FirewallInternetserviceextensionDisableEntryIp6RangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntryIp6Range) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start IPv6 address.
func (o FirewallInternetserviceextensionDisableEntryIp6RangeOutput) StartIp6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntryIp6Range) *string { return v.StartIp6 }).(pulumi.StringPtrOutput)
}

type FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionDisableEntryIp6Range)(nil)).Elem()
}

func (o FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput) ToFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput() FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput) ToFirewallInternetserviceextensionDisableEntryIp6RangeArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceextensionDisableEntryIp6RangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetserviceextensionDisableEntryIp6Range {
		return vs[0].([]FirewallInternetserviceextensionDisableEntryIp6Range)[vs[1].(int)]
	}).(FirewallInternetserviceextensionDisableEntryIp6RangeOutput)
}

type FirewallInternetserviceextensionDisableEntryIpRange struct {
	// End IP address.
	//
	// The `ip6Range` block supports:
	EndIp *string `pulumi:"endIp"`
	// Disable entry range ID.
	Id *int `pulumi:"id"`
	// Start IP address.
	StartIp *string `pulumi:"startIp"`
}

// FirewallInternetserviceextensionDisableEntryIpRangeInput is an input type that accepts FirewallInternetserviceextensionDisableEntryIpRangeArgs and FirewallInternetserviceextensionDisableEntryIpRangeOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionDisableEntryIpRangeInput` via:
//
//	FirewallInternetserviceextensionDisableEntryIpRangeArgs{...}
type FirewallInternetserviceextensionDisableEntryIpRangeInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionDisableEntryIpRangeOutput() FirewallInternetserviceextensionDisableEntryIpRangeOutput
	ToFirewallInternetserviceextensionDisableEntryIpRangeOutputWithContext(context.Context) FirewallInternetserviceextensionDisableEntryIpRangeOutput
}

type FirewallInternetserviceextensionDisableEntryIpRangeArgs struct {
	// End IP address.
	//
	// The `ip6Range` block supports:
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// Disable entry range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start IP address.
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (FirewallInternetserviceextensionDisableEntryIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (i FirewallInternetserviceextensionDisableEntryIpRangeArgs) ToFirewallInternetserviceextensionDisableEntryIpRangeOutput() FirewallInternetserviceextensionDisableEntryIpRangeOutput {
	return i.ToFirewallInternetserviceextensionDisableEntryIpRangeOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionDisableEntryIpRangeArgs) ToFirewallInternetserviceextensionDisableEntryIpRangeOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionDisableEntryIpRangeOutput)
}

// FirewallInternetserviceextensionDisableEntryIpRangeArrayInput is an input type that accepts FirewallInternetserviceextensionDisableEntryIpRangeArray and FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionDisableEntryIpRangeArrayInput` via:
//
//	FirewallInternetserviceextensionDisableEntryIpRangeArray{ FirewallInternetserviceextensionDisableEntryIpRangeArgs{...} }
type FirewallInternetserviceextensionDisableEntryIpRangeArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput() FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput
	ToFirewallInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(context.Context) FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput
}

type FirewallInternetserviceextensionDisableEntryIpRangeArray []FirewallInternetserviceextensionDisableEntryIpRangeInput

func (FirewallInternetserviceextensionDisableEntryIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (i FirewallInternetserviceextensionDisableEntryIpRangeArray) ToFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput() FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return i.ToFirewallInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionDisableEntryIpRangeArray) ToFirewallInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput)
}

type FirewallInternetserviceextensionDisableEntryIpRangeOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionDisableEntryIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (o FirewallInternetserviceextensionDisableEntryIpRangeOutput) ToFirewallInternetserviceextensionDisableEntryIpRangeOutput() FirewallInternetserviceextensionDisableEntryIpRangeOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryIpRangeOutput) ToFirewallInternetserviceextensionDisableEntryIpRangeOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryIpRangeOutput {
	return o
}

// End IP address.
//
// The `ip6Range` block supports:
func (o FirewallInternetserviceextensionDisableEntryIpRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntryIpRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// Disable entry range ID.
func (o FirewallInternetserviceextensionDisableEntryIpRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntryIpRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start IP address.
func (o FirewallInternetserviceextensionDisableEntryIpRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntryIpRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionDisableEntryIpRange)(nil)).Elem()
}

func (o FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput) ToFirewallInternetserviceextensionDisableEntryIpRangeArrayOutput() FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput) ToFirewallInternetserviceextensionDisableEntryIpRangeArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceextensionDisableEntryIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetserviceextensionDisableEntryIpRange {
		return vs[0].([]FirewallInternetserviceextensionDisableEntryIpRange)[vs[1].(int)]
	}).(FirewallInternetserviceextensionDisableEntryIpRangeOutput)
}

type FirewallInternetserviceextensionDisableEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort *int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id *int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort *int `pulumi:"startPort"`
}

// FirewallInternetserviceextensionDisableEntryPortRangeInput is an input type that accepts FirewallInternetserviceextensionDisableEntryPortRangeArgs and FirewallInternetserviceextensionDisableEntryPortRangeOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionDisableEntryPortRangeInput` via:
//
//	FirewallInternetserviceextensionDisableEntryPortRangeArgs{...}
type FirewallInternetserviceextensionDisableEntryPortRangeInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionDisableEntryPortRangeOutput() FirewallInternetserviceextensionDisableEntryPortRangeOutput
	ToFirewallInternetserviceextensionDisableEntryPortRangeOutputWithContext(context.Context) FirewallInternetserviceextensionDisableEntryPortRangeOutput
}

type FirewallInternetserviceextensionDisableEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (FirewallInternetserviceextensionDisableEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (i FirewallInternetserviceextensionDisableEntryPortRangeArgs) ToFirewallInternetserviceextensionDisableEntryPortRangeOutput() FirewallInternetserviceextensionDisableEntryPortRangeOutput {
	return i.ToFirewallInternetserviceextensionDisableEntryPortRangeOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionDisableEntryPortRangeArgs) ToFirewallInternetserviceextensionDisableEntryPortRangeOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionDisableEntryPortRangeOutput)
}

// FirewallInternetserviceextensionDisableEntryPortRangeArrayInput is an input type that accepts FirewallInternetserviceextensionDisableEntryPortRangeArray and FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionDisableEntryPortRangeArrayInput` via:
//
//	FirewallInternetserviceextensionDisableEntryPortRangeArray{ FirewallInternetserviceextensionDisableEntryPortRangeArgs{...} }
type FirewallInternetserviceextensionDisableEntryPortRangeArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput() FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput
	ToFirewallInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(context.Context) FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput
}

type FirewallInternetserviceextensionDisableEntryPortRangeArray []FirewallInternetserviceextensionDisableEntryPortRangeInput

func (FirewallInternetserviceextensionDisableEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (i FirewallInternetserviceextensionDisableEntryPortRangeArray) ToFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput() FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return i.ToFirewallInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionDisableEntryPortRangeArray) ToFirewallInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput)
}

type FirewallInternetserviceextensionDisableEntryPortRangeOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionDisableEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (o FirewallInternetserviceextensionDisableEntryPortRangeOutput) ToFirewallInternetserviceextensionDisableEntryPortRangeOutput() FirewallInternetserviceextensionDisableEntryPortRangeOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryPortRangeOutput) ToFirewallInternetserviceextensionDisableEntryPortRangeOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o FirewallInternetserviceextensionDisableEntryPortRangeOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntryPortRange) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Custom entry port range ID.
func (o FirewallInternetserviceextensionDisableEntryPortRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntryPortRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o FirewallInternetserviceextensionDisableEntryPortRangeOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionDisableEntryPortRange) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionDisableEntryPortRange)(nil)).Elem()
}

func (o FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput) ToFirewallInternetserviceextensionDisableEntryPortRangeArrayOutput() FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput) ToFirewallInternetserviceextensionDisableEntryPortRangeArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceextensionDisableEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetserviceextensionDisableEntryPortRange {
		return vs[0].([]FirewallInternetserviceextensionDisableEntryPortRange)[vs[1].(int)]
	}).(FirewallInternetserviceextensionDisableEntryPortRangeOutput)
}

type FirewallInternetserviceextensionEntry struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode *string `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s []FirewallInternetserviceextensionEntryDst6 `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts []FirewallInternetserviceextensionEntryDst `pulumi:"dsts"`
	// Entry ID(1-255).
	Id *int `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges []FirewallInternetserviceextensionEntryPortRange `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol *int `pulumi:"protocol"`
}

// FirewallInternetserviceextensionEntryInput is an input type that accepts FirewallInternetserviceextensionEntryArgs and FirewallInternetserviceextensionEntryOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionEntryInput` via:
//
//	FirewallInternetserviceextensionEntryArgs{...}
type FirewallInternetserviceextensionEntryInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionEntryOutput() FirewallInternetserviceextensionEntryOutput
	ToFirewallInternetserviceextensionEntryOutputWithContext(context.Context) FirewallInternetserviceextensionEntryOutput
}

type FirewallInternetserviceextensionEntryArgs struct {
	// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
	AddrMode pulumi.StringPtrInput `pulumi:"addrMode"`
	// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
	Dst6s FirewallInternetserviceextensionEntryDst6ArrayInput `pulumi:"dst6s"`
	// Destination address or address group name. The structure of `dst` block is documented below.
	Dsts FirewallInternetserviceextensionEntryDstArrayInput `pulumi:"dsts"`
	// Entry ID(1-255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Port ranges in the custom entry. The structure of `portRange` block is documented below.
	PortRanges FirewallInternetserviceextensionEntryPortRangeArrayInput `pulumi:"portRanges"`
	// Integer value for the protocol type as defined by IANA (0 - 255).
	Protocol pulumi.IntPtrInput `pulumi:"protocol"`
}

func (FirewallInternetserviceextensionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionEntry)(nil)).Elem()
}

func (i FirewallInternetserviceextensionEntryArgs) ToFirewallInternetserviceextensionEntryOutput() FirewallInternetserviceextensionEntryOutput {
	return i.ToFirewallInternetserviceextensionEntryOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionEntryArgs) ToFirewallInternetserviceextensionEntryOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionEntryOutput)
}

// FirewallInternetserviceextensionEntryArrayInput is an input type that accepts FirewallInternetserviceextensionEntryArray and FirewallInternetserviceextensionEntryArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionEntryArrayInput` via:
//
//	FirewallInternetserviceextensionEntryArray{ FirewallInternetserviceextensionEntryArgs{...} }
type FirewallInternetserviceextensionEntryArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionEntryArrayOutput() FirewallInternetserviceextensionEntryArrayOutput
	ToFirewallInternetserviceextensionEntryArrayOutputWithContext(context.Context) FirewallInternetserviceextensionEntryArrayOutput
}

type FirewallInternetserviceextensionEntryArray []FirewallInternetserviceextensionEntryInput

func (FirewallInternetserviceextensionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionEntry)(nil)).Elem()
}

func (i FirewallInternetserviceextensionEntryArray) ToFirewallInternetserviceextensionEntryArrayOutput() FirewallInternetserviceextensionEntryArrayOutput {
	return i.ToFirewallInternetserviceextensionEntryArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionEntryArray) ToFirewallInternetserviceextensionEntryArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionEntryArrayOutput)
}

type FirewallInternetserviceextensionEntryOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionEntry)(nil)).Elem()
}

func (o FirewallInternetserviceextensionEntryOutput) ToFirewallInternetserviceextensionEntryOutput() FirewallInternetserviceextensionEntryOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryOutput) ToFirewallInternetserviceextensionEntryOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryOutput {
	return o
}

// Address mode (IPv4 or IPv6) Valid values: `ipv4`, `ipv6`.
func (o FirewallInternetserviceextensionEntryOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntry) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

// Destination address6 or address6 group name. The structure of `dst6` block is documented below.
func (o FirewallInternetserviceextensionEntryOutput) Dst6s() FirewallInternetserviceextensionEntryDst6ArrayOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntry) []FirewallInternetserviceextensionEntryDst6 {
		return v.Dst6s
	}).(FirewallInternetserviceextensionEntryDst6ArrayOutput)
}

// Destination address or address group name. The structure of `dst` block is documented below.
func (o FirewallInternetserviceextensionEntryOutput) Dsts() FirewallInternetserviceextensionEntryDstArrayOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntry) []FirewallInternetserviceextensionEntryDst {
		return v.Dsts
	}).(FirewallInternetserviceextensionEntryDstArrayOutput)
}

// Entry ID(1-255).
func (o FirewallInternetserviceextensionEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Port ranges in the custom entry. The structure of `portRange` block is documented below.
func (o FirewallInternetserviceextensionEntryOutput) PortRanges() FirewallInternetserviceextensionEntryPortRangeArrayOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntry) []FirewallInternetserviceextensionEntryPortRange {
		return v.PortRanges
	}).(FirewallInternetserviceextensionEntryPortRangeArrayOutput)
}

// Integer value for the protocol type as defined by IANA (0 - 255).
func (o FirewallInternetserviceextensionEntryOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntry) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

type FirewallInternetserviceextensionEntryArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionEntry)(nil)).Elem()
}

func (o FirewallInternetserviceextensionEntryArrayOutput) ToFirewallInternetserviceextensionEntryArrayOutput() FirewallInternetserviceextensionEntryArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryArrayOutput) ToFirewallInternetserviceextensionEntryArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceextensionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetserviceextensionEntry {
		return vs[0].([]FirewallInternetserviceextensionEntry)[vs[1].(int)]
	}).(FirewallInternetserviceextensionEntryOutput)
}

type FirewallInternetserviceextensionEntryDst6 struct {
	// Select the destination address or address group object from available options.
	//
	// The `dst6` block supports:
	Name *string `pulumi:"name"`
}

// FirewallInternetserviceextensionEntryDst6Input is an input type that accepts FirewallInternetserviceextensionEntryDst6Args and FirewallInternetserviceextensionEntryDst6Output values.
// You can construct a concrete instance of `FirewallInternetserviceextensionEntryDst6Input` via:
//
//	FirewallInternetserviceextensionEntryDst6Args{...}
type FirewallInternetserviceextensionEntryDst6Input interface {
	pulumi.Input

	ToFirewallInternetserviceextensionEntryDst6Output() FirewallInternetserviceextensionEntryDst6Output
	ToFirewallInternetserviceextensionEntryDst6OutputWithContext(context.Context) FirewallInternetserviceextensionEntryDst6Output
}

type FirewallInternetserviceextensionEntryDst6Args struct {
	// Select the destination address or address group object from available options.
	//
	// The `dst6` block supports:
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInternetserviceextensionEntryDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (i FirewallInternetserviceextensionEntryDst6Args) ToFirewallInternetserviceextensionEntryDst6Output() FirewallInternetserviceextensionEntryDst6Output {
	return i.ToFirewallInternetserviceextensionEntryDst6OutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionEntryDst6Args) ToFirewallInternetserviceextensionEntryDst6OutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionEntryDst6Output)
}

// FirewallInternetserviceextensionEntryDst6ArrayInput is an input type that accepts FirewallInternetserviceextensionEntryDst6Array and FirewallInternetserviceextensionEntryDst6ArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionEntryDst6ArrayInput` via:
//
//	FirewallInternetserviceextensionEntryDst6Array{ FirewallInternetserviceextensionEntryDst6Args{...} }
type FirewallInternetserviceextensionEntryDst6ArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionEntryDst6ArrayOutput() FirewallInternetserviceextensionEntryDst6ArrayOutput
	ToFirewallInternetserviceextensionEntryDst6ArrayOutputWithContext(context.Context) FirewallInternetserviceextensionEntryDst6ArrayOutput
}

type FirewallInternetserviceextensionEntryDst6Array []FirewallInternetserviceextensionEntryDst6Input

func (FirewallInternetserviceextensionEntryDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (i FirewallInternetserviceextensionEntryDst6Array) ToFirewallInternetserviceextensionEntryDst6ArrayOutput() FirewallInternetserviceextensionEntryDst6ArrayOutput {
	return i.ToFirewallInternetserviceextensionEntryDst6ArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionEntryDst6Array) ToFirewallInternetserviceextensionEntryDst6ArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionEntryDst6ArrayOutput)
}

type FirewallInternetserviceextensionEntryDst6Output struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionEntryDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (o FirewallInternetserviceextensionEntryDst6Output) ToFirewallInternetserviceextensionEntryDst6Output() FirewallInternetserviceextensionEntryDst6Output {
	return o
}

func (o FirewallInternetserviceextensionEntryDst6Output) ToFirewallInternetserviceextensionEntryDst6OutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryDst6Output {
	return o
}

// Select the destination address or address group object from available options.
//
// The `dst6` block supports:
func (o FirewallInternetserviceextensionEntryDst6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntryDst6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInternetserviceextensionEntryDst6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionEntryDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionEntryDst6)(nil)).Elem()
}

func (o FirewallInternetserviceextensionEntryDst6ArrayOutput) ToFirewallInternetserviceextensionEntryDst6ArrayOutput() FirewallInternetserviceextensionEntryDst6ArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryDst6ArrayOutput) ToFirewallInternetserviceextensionEntryDst6ArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryDst6ArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryDst6ArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceextensionEntryDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetserviceextensionEntryDst6 {
		return vs[0].([]FirewallInternetserviceextensionEntryDst6)[vs[1].(int)]
	}).(FirewallInternetserviceextensionEntryDst6Output)
}

type FirewallInternetserviceextensionEntryDst struct {
	// Select the destination address6 or address group object from available options.
	Name *string `pulumi:"name"`
}

// FirewallInternetserviceextensionEntryDstInput is an input type that accepts FirewallInternetserviceextensionEntryDstArgs and FirewallInternetserviceextensionEntryDstOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionEntryDstInput` via:
//
//	FirewallInternetserviceextensionEntryDstArgs{...}
type FirewallInternetserviceextensionEntryDstInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionEntryDstOutput() FirewallInternetserviceextensionEntryDstOutput
	ToFirewallInternetserviceextensionEntryDstOutputWithContext(context.Context) FirewallInternetserviceextensionEntryDstOutput
}

type FirewallInternetserviceextensionEntryDstArgs struct {
	// Select the destination address6 or address group object from available options.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInternetserviceextensionEntryDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionEntryDst)(nil)).Elem()
}

func (i FirewallInternetserviceextensionEntryDstArgs) ToFirewallInternetserviceextensionEntryDstOutput() FirewallInternetserviceextensionEntryDstOutput {
	return i.ToFirewallInternetserviceextensionEntryDstOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionEntryDstArgs) ToFirewallInternetserviceextensionEntryDstOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionEntryDstOutput)
}

// FirewallInternetserviceextensionEntryDstArrayInput is an input type that accepts FirewallInternetserviceextensionEntryDstArray and FirewallInternetserviceextensionEntryDstArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionEntryDstArrayInput` via:
//
//	FirewallInternetserviceextensionEntryDstArray{ FirewallInternetserviceextensionEntryDstArgs{...} }
type FirewallInternetserviceextensionEntryDstArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionEntryDstArrayOutput() FirewallInternetserviceextensionEntryDstArrayOutput
	ToFirewallInternetserviceextensionEntryDstArrayOutputWithContext(context.Context) FirewallInternetserviceextensionEntryDstArrayOutput
}

type FirewallInternetserviceextensionEntryDstArray []FirewallInternetserviceextensionEntryDstInput

func (FirewallInternetserviceextensionEntryDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionEntryDst)(nil)).Elem()
}

func (i FirewallInternetserviceextensionEntryDstArray) ToFirewallInternetserviceextensionEntryDstArrayOutput() FirewallInternetserviceextensionEntryDstArrayOutput {
	return i.ToFirewallInternetserviceextensionEntryDstArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionEntryDstArray) ToFirewallInternetserviceextensionEntryDstArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionEntryDstArrayOutput)
}

type FirewallInternetserviceextensionEntryDstOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionEntryDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionEntryDst)(nil)).Elem()
}

func (o FirewallInternetserviceextensionEntryDstOutput) ToFirewallInternetserviceextensionEntryDstOutput() FirewallInternetserviceextensionEntryDstOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryDstOutput) ToFirewallInternetserviceextensionEntryDstOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryDstOutput {
	return o
}

// Select the destination address6 or address group object from available options.
func (o FirewallInternetserviceextensionEntryDstOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntryDst) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInternetserviceextensionEntryDstArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionEntryDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionEntryDst)(nil)).Elem()
}

func (o FirewallInternetserviceextensionEntryDstArrayOutput) ToFirewallInternetserviceextensionEntryDstArrayOutput() FirewallInternetserviceextensionEntryDstArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryDstArrayOutput) ToFirewallInternetserviceextensionEntryDstArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryDstArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryDstArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceextensionEntryDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetserviceextensionEntryDst {
		return vs[0].([]FirewallInternetserviceextensionEntryDst)[vs[1].(int)]
	}).(FirewallInternetserviceextensionEntryDstOutput)
}

type FirewallInternetserviceextensionEntryPortRange struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort *int `pulumi:"endPort"`
	// Custom entry port range ID.
	Id *int `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort *int `pulumi:"startPort"`
}

// FirewallInternetserviceextensionEntryPortRangeInput is an input type that accepts FirewallInternetserviceextensionEntryPortRangeArgs and FirewallInternetserviceextensionEntryPortRangeOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionEntryPortRangeInput` via:
//
//	FirewallInternetserviceextensionEntryPortRangeArgs{...}
type FirewallInternetserviceextensionEntryPortRangeInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionEntryPortRangeOutput() FirewallInternetserviceextensionEntryPortRangeOutput
	ToFirewallInternetserviceextensionEntryPortRangeOutputWithContext(context.Context) FirewallInternetserviceextensionEntryPortRangeOutput
}

type FirewallInternetserviceextensionEntryPortRangeArgs struct {
	// Ending TCP/UDP/SCTP destination port (1 to 65535).
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Custom entry port range ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Starting TCP/UDP/SCTP destination port (1 to 65535).
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (FirewallInternetserviceextensionEntryPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (i FirewallInternetserviceextensionEntryPortRangeArgs) ToFirewallInternetserviceextensionEntryPortRangeOutput() FirewallInternetserviceextensionEntryPortRangeOutput {
	return i.ToFirewallInternetserviceextensionEntryPortRangeOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionEntryPortRangeArgs) ToFirewallInternetserviceextensionEntryPortRangeOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionEntryPortRangeOutput)
}

// FirewallInternetserviceextensionEntryPortRangeArrayInput is an input type that accepts FirewallInternetserviceextensionEntryPortRangeArray and FirewallInternetserviceextensionEntryPortRangeArrayOutput values.
// You can construct a concrete instance of `FirewallInternetserviceextensionEntryPortRangeArrayInput` via:
//
//	FirewallInternetserviceextensionEntryPortRangeArray{ FirewallInternetserviceextensionEntryPortRangeArgs{...} }
type FirewallInternetserviceextensionEntryPortRangeArrayInput interface {
	pulumi.Input

	ToFirewallInternetserviceextensionEntryPortRangeArrayOutput() FirewallInternetserviceextensionEntryPortRangeArrayOutput
	ToFirewallInternetserviceextensionEntryPortRangeArrayOutputWithContext(context.Context) FirewallInternetserviceextensionEntryPortRangeArrayOutput
}

type FirewallInternetserviceextensionEntryPortRangeArray []FirewallInternetserviceextensionEntryPortRangeInput

func (FirewallInternetserviceextensionEntryPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (i FirewallInternetserviceextensionEntryPortRangeArray) ToFirewallInternetserviceextensionEntryPortRangeArrayOutput() FirewallInternetserviceextensionEntryPortRangeArrayOutput {
	return i.ToFirewallInternetserviceextensionEntryPortRangeArrayOutputWithContext(context.Background())
}

func (i FirewallInternetserviceextensionEntryPortRangeArray) ToFirewallInternetserviceextensionEntryPortRangeArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetserviceextensionEntryPortRangeArrayOutput)
}

type FirewallInternetserviceextensionEntryPortRangeOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionEntryPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (o FirewallInternetserviceextensionEntryPortRangeOutput) ToFirewallInternetserviceextensionEntryPortRangeOutput() FirewallInternetserviceextensionEntryPortRangeOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryPortRangeOutput) ToFirewallInternetserviceextensionEntryPortRangeOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryPortRangeOutput {
	return o
}

// Ending TCP/UDP/SCTP destination port (1 to 65535).
func (o FirewallInternetserviceextensionEntryPortRangeOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntryPortRange) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Custom entry port range ID.
func (o FirewallInternetserviceextensionEntryPortRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntryPortRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Starting TCP/UDP/SCTP destination port (1 to 65535).
func (o FirewallInternetserviceextensionEntryPortRangeOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetserviceextensionEntryPortRange) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type FirewallInternetserviceextensionEntryPortRangeArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetserviceextensionEntryPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetserviceextensionEntryPortRange)(nil)).Elem()
}

func (o FirewallInternetserviceextensionEntryPortRangeArrayOutput) ToFirewallInternetserviceextensionEntryPortRangeArrayOutput() FirewallInternetserviceextensionEntryPortRangeArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryPortRangeArrayOutput) ToFirewallInternetserviceextensionEntryPortRangeArrayOutputWithContext(ctx context.Context) FirewallInternetserviceextensionEntryPortRangeArrayOutput {
	return o
}

func (o FirewallInternetserviceextensionEntryPortRangeArrayOutput) Index(i pulumi.IntInput) FirewallInternetserviceextensionEntryPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetserviceextensionEntryPortRange {
		return vs[0].([]FirewallInternetserviceextensionEntryPortRange)[vs[1].(int)]
	}).(FirewallInternetserviceextensionEntryPortRangeOutput)
}

type FirewallInternetservicegroupMember struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallInternetservicegroupMemberInput is an input type that accepts FirewallInternetservicegroupMemberArgs and FirewallInternetservicegroupMemberOutput values.
// You can construct a concrete instance of `FirewallInternetservicegroupMemberInput` via:
//
//	FirewallInternetservicegroupMemberArgs{...}
type FirewallInternetservicegroupMemberInput interface {
	pulumi.Input

	ToFirewallInternetservicegroupMemberOutput() FirewallInternetservicegroupMemberOutput
	ToFirewallInternetservicegroupMemberOutputWithContext(context.Context) FirewallInternetservicegroupMemberOutput
}

type FirewallInternetservicegroupMemberArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallInternetservicegroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicegroupMember)(nil)).Elem()
}

func (i FirewallInternetservicegroupMemberArgs) ToFirewallInternetservicegroupMemberOutput() FirewallInternetservicegroupMemberOutput {
	return i.ToFirewallInternetservicegroupMemberOutputWithContext(context.Background())
}

func (i FirewallInternetservicegroupMemberArgs) ToFirewallInternetservicegroupMemberOutputWithContext(ctx context.Context) FirewallInternetservicegroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicegroupMemberOutput)
}

// FirewallInternetservicegroupMemberArrayInput is an input type that accepts FirewallInternetservicegroupMemberArray and FirewallInternetservicegroupMemberArrayOutput values.
// You can construct a concrete instance of `FirewallInternetservicegroupMemberArrayInput` via:
//
//	FirewallInternetservicegroupMemberArray{ FirewallInternetservicegroupMemberArgs{...} }
type FirewallInternetservicegroupMemberArrayInput interface {
	pulumi.Input

	ToFirewallInternetservicegroupMemberArrayOutput() FirewallInternetservicegroupMemberArrayOutput
	ToFirewallInternetservicegroupMemberArrayOutputWithContext(context.Context) FirewallInternetservicegroupMemberArrayOutput
}

type FirewallInternetservicegroupMemberArray []FirewallInternetservicegroupMemberInput

func (FirewallInternetservicegroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicegroupMember)(nil)).Elem()
}

func (i FirewallInternetservicegroupMemberArray) ToFirewallInternetservicegroupMemberArrayOutput() FirewallInternetservicegroupMemberArrayOutput {
	return i.ToFirewallInternetservicegroupMemberArrayOutputWithContext(context.Background())
}

func (i FirewallInternetservicegroupMemberArray) ToFirewallInternetservicegroupMemberArrayOutputWithContext(ctx context.Context) FirewallInternetservicegroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetservicegroupMemberArrayOutput)
}

type FirewallInternetservicegroupMemberOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicegroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInternetservicegroupMember)(nil)).Elem()
}

func (o FirewallInternetservicegroupMemberOutput) ToFirewallInternetservicegroupMemberOutput() FirewallInternetservicegroupMemberOutput {
	return o
}

func (o FirewallInternetservicegroupMemberOutput) ToFirewallInternetservicegroupMemberOutputWithContext(ctx context.Context) FirewallInternetservicegroupMemberOutput {
	return o
}

// Internet Service ID.
func (o FirewallInternetservicegroupMemberOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicegroupMember) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Internet Service name.
func (o FirewallInternetservicegroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInternetservicegroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallInternetservicegroupMemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetservicegroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInternetservicegroupMember)(nil)).Elem()
}

func (o FirewallInternetservicegroupMemberArrayOutput) ToFirewallInternetservicegroupMemberArrayOutput() FirewallInternetservicegroupMemberArrayOutput {
	return o
}

func (o FirewallInternetservicegroupMemberArrayOutput) ToFirewallInternetservicegroupMemberArrayOutputWithContext(ctx context.Context) FirewallInternetservicegroupMemberArrayOutput {
	return o
}

func (o FirewallInternetservicegroupMemberArrayOutput) Index(i pulumi.IntInput) FirewallInternetservicegroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInternetservicegroupMember {
		return vs[0].([]FirewallInternetservicegroupMember)[vs[1].(int)]
	}).(FirewallInternetservicegroupMemberOutput)
}

type FirewallLocalinpolicy6Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallLocalinpolicy6DstaddrInput is an input type that accepts FirewallLocalinpolicy6DstaddrArgs and FirewallLocalinpolicy6DstaddrOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicy6DstaddrInput` via:
//
//	FirewallLocalinpolicy6DstaddrArgs{...}
type FirewallLocalinpolicy6DstaddrInput interface {
	pulumi.Input

	ToFirewallLocalinpolicy6DstaddrOutput() FirewallLocalinpolicy6DstaddrOutput
	ToFirewallLocalinpolicy6DstaddrOutputWithContext(context.Context) FirewallLocalinpolicy6DstaddrOutput
}

type FirewallLocalinpolicy6DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallLocalinpolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicy6Dstaddr)(nil)).Elem()
}

func (i FirewallLocalinpolicy6DstaddrArgs) ToFirewallLocalinpolicy6DstaddrOutput() FirewallLocalinpolicy6DstaddrOutput {
	return i.ToFirewallLocalinpolicy6DstaddrOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicy6DstaddrArgs) ToFirewallLocalinpolicy6DstaddrOutputWithContext(ctx context.Context) FirewallLocalinpolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicy6DstaddrOutput)
}

// FirewallLocalinpolicy6DstaddrArrayInput is an input type that accepts FirewallLocalinpolicy6DstaddrArray and FirewallLocalinpolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicy6DstaddrArrayInput` via:
//
//	FirewallLocalinpolicy6DstaddrArray{ FirewallLocalinpolicy6DstaddrArgs{...} }
type FirewallLocalinpolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToFirewallLocalinpolicy6DstaddrArrayOutput() FirewallLocalinpolicy6DstaddrArrayOutput
	ToFirewallLocalinpolicy6DstaddrArrayOutputWithContext(context.Context) FirewallLocalinpolicy6DstaddrArrayOutput
}

type FirewallLocalinpolicy6DstaddrArray []FirewallLocalinpolicy6DstaddrInput

func (FirewallLocalinpolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicy6Dstaddr)(nil)).Elem()
}

func (i FirewallLocalinpolicy6DstaddrArray) ToFirewallLocalinpolicy6DstaddrArrayOutput() FirewallLocalinpolicy6DstaddrArrayOutput {
	return i.ToFirewallLocalinpolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicy6DstaddrArray) ToFirewallLocalinpolicy6DstaddrArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicy6DstaddrArrayOutput)
}

type FirewallLocalinpolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicy6Dstaddr)(nil)).Elem()
}

func (o FirewallLocalinpolicy6DstaddrOutput) ToFirewallLocalinpolicy6DstaddrOutput() FirewallLocalinpolicy6DstaddrOutput {
	return o
}

func (o FirewallLocalinpolicy6DstaddrOutput) ToFirewallLocalinpolicy6DstaddrOutputWithContext(ctx context.Context) FirewallLocalinpolicy6DstaddrOutput {
	return o
}

// Address name.
func (o FirewallLocalinpolicy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallLocalinpolicy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallLocalinpolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicy6Dstaddr)(nil)).Elem()
}

func (o FirewallLocalinpolicy6DstaddrArrayOutput) ToFirewallLocalinpolicy6DstaddrArrayOutput() FirewallLocalinpolicy6DstaddrArrayOutput {
	return o
}

func (o FirewallLocalinpolicy6DstaddrArrayOutput) ToFirewallLocalinpolicy6DstaddrArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicy6DstaddrArrayOutput {
	return o
}

func (o FirewallLocalinpolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) FirewallLocalinpolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallLocalinpolicy6Dstaddr {
		return vs[0].([]FirewallLocalinpolicy6Dstaddr)[vs[1].(int)]
	}).(FirewallLocalinpolicy6DstaddrOutput)
}

type FirewallLocalinpolicy6Service struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallLocalinpolicy6ServiceInput is an input type that accepts FirewallLocalinpolicy6ServiceArgs and FirewallLocalinpolicy6ServiceOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicy6ServiceInput` via:
//
//	FirewallLocalinpolicy6ServiceArgs{...}
type FirewallLocalinpolicy6ServiceInput interface {
	pulumi.Input

	ToFirewallLocalinpolicy6ServiceOutput() FirewallLocalinpolicy6ServiceOutput
	ToFirewallLocalinpolicy6ServiceOutputWithContext(context.Context) FirewallLocalinpolicy6ServiceOutput
}

type FirewallLocalinpolicy6ServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallLocalinpolicy6ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicy6Service)(nil)).Elem()
}

func (i FirewallLocalinpolicy6ServiceArgs) ToFirewallLocalinpolicy6ServiceOutput() FirewallLocalinpolicy6ServiceOutput {
	return i.ToFirewallLocalinpolicy6ServiceOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicy6ServiceArgs) ToFirewallLocalinpolicy6ServiceOutputWithContext(ctx context.Context) FirewallLocalinpolicy6ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicy6ServiceOutput)
}

// FirewallLocalinpolicy6ServiceArrayInput is an input type that accepts FirewallLocalinpolicy6ServiceArray and FirewallLocalinpolicy6ServiceArrayOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicy6ServiceArrayInput` via:
//
//	FirewallLocalinpolicy6ServiceArray{ FirewallLocalinpolicy6ServiceArgs{...} }
type FirewallLocalinpolicy6ServiceArrayInput interface {
	pulumi.Input

	ToFirewallLocalinpolicy6ServiceArrayOutput() FirewallLocalinpolicy6ServiceArrayOutput
	ToFirewallLocalinpolicy6ServiceArrayOutputWithContext(context.Context) FirewallLocalinpolicy6ServiceArrayOutput
}

type FirewallLocalinpolicy6ServiceArray []FirewallLocalinpolicy6ServiceInput

func (FirewallLocalinpolicy6ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicy6Service)(nil)).Elem()
}

func (i FirewallLocalinpolicy6ServiceArray) ToFirewallLocalinpolicy6ServiceArrayOutput() FirewallLocalinpolicy6ServiceArrayOutput {
	return i.ToFirewallLocalinpolicy6ServiceArrayOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicy6ServiceArray) ToFirewallLocalinpolicy6ServiceArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicy6ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicy6ServiceArrayOutput)
}

type FirewallLocalinpolicy6ServiceOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicy6ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicy6Service)(nil)).Elem()
}

func (o FirewallLocalinpolicy6ServiceOutput) ToFirewallLocalinpolicy6ServiceOutput() FirewallLocalinpolicy6ServiceOutput {
	return o
}

func (o FirewallLocalinpolicy6ServiceOutput) ToFirewallLocalinpolicy6ServiceOutputWithContext(ctx context.Context) FirewallLocalinpolicy6ServiceOutput {
	return o
}

// Service name.
func (o FirewallLocalinpolicy6ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallLocalinpolicy6Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallLocalinpolicy6ServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicy6ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicy6Service)(nil)).Elem()
}

func (o FirewallLocalinpolicy6ServiceArrayOutput) ToFirewallLocalinpolicy6ServiceArrayOutput() FirewallLocalinpolicy6ServiceArrayOutput {
	return o
}

func (o FirewallLocalinpolicy6ServiceArrayOutput) ToFirewallLocalinpolicy6ServiceArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicy6ServiceArrayOutput {
	return o
}

func (o FirewallLocalinpolicy6ServiceArrayOutput) Index(i pulumi.IntInput) FirewallLocalinpolicy6ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallLocalinpolicy6Service {
		return vs[0].([]FirewallLocalinpolicy6Service)[vs[1].(int)]
	}).(FirewallLocalinpolicy6ServiceOutput)
}

type FirewallLocalinpolicy6Srcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallLocalinpolicy6SrcaddrInput is an input type that accepts FirewallLocalinpolicy6SrcaddrArgs and FirewallLocalinpolicy6SrcaddrOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicy6SrcaddrInput` via:
//
//	FirewallLocalinpolicy6SrcaddrArgs{...}
type FirewallLocalinpolicy6SrcaddrInput interface {
	pulumi.Input

	ToFirewallLocalinpolicy6SrcaddrOutput() FirewallLocalinpolicy6SrcaddrOutput
	ToFirewallLocalinpolicy6SrcaddrOutputWithContext(context.Context) FirewallLocalinpolicy6SrcaddrOutput
}

type FirewallLocalinpolicy6SrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallLocalinpolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicy6Srcaddr)(nil)).Elem()
}

func (i FirewallLocalinpolicy6SrcaddrArgs) ToFirewallLocalinpolicy6SrcaddrOutput() FirewallLocalinpolicy6SrcaddrOutput {
	return i.ToFirewallLocalinpolicy6SrcaddrOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicy6SrcaddrArgs) ToFirewallLocalinpolicy6SrcaddrOutputWithContext(ctx context.Context) FirewallLocalinpolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicy6SrcaddrOutput)
}

// FirewallLocalinpolicy6SrcaddrArrayInput is an input type that accepts FirewallLocalinpolicy6SrcaddrArray and FirewallLocalinpolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicy6SrcaddrArrayInput` via:
//
//	FirewallLocalinpolicy6SrcaddrArray{ FirewallLocalinpolicy6SrcaddrArgs{...} }
type FirewallLocalinpolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallLocalinpolicy6SrcaddrArrayOutput() FirewallLocalinpolicy6SrcaddrArrayOutput
	ToFirewallLocalinpolicy6SrcaddrArrayOutputWithContext(context.Context) FirewallLocalinpolicy6SrcaddrArrayOutput
}

type FirewallLocalinpolicy6SrcaddrArray []FirewallLocalinpolicy6SrcaddrInput

func (FirewallLocalinpolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicy6Srcaddr)(nil)).Elem()
}

func (i FirewallLocalinpolicy6SrcaddrArray) ToFirewallLocalinpolicy6SrcaddrArrayOutput() FirewallLocalinpolicy6SrcaddrArrayOutput {
	return i.ToFirewallLocalinpolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicy6SrcaddrArray) ToFirewallLocalinpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicy6SrcaddrArrayOutput)
}

type FirewallLocalinpolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicy6Srcaddr)(nil)).Elem()
}

func (o FirewallLocalinpolicy6SrcaddrOutput) ToFirewallLocalinpolicy6SrcaddrOutput() FirewallLocalinpolicy6SrcaddrOutput {
	return o
}

func (o FirewallLocalinpolicy6SrcaddrOutput) ToFirewallLocalinpolicy6SrcaddrOutputWithContext(ctx context.Context) FirewallLocalinpolicy6SrcaddrOutput {
	return o
}

// Address name.
func (o FirewallLocalinpolicy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallLocalinpolicy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallLocalinpolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicy6Srcaddr)(nil)).Elem()
}

func (o FirewallLocalinpolicy6SrcaddrArrayOutput) ToFirewallLocalinpolicy6SrcaddrArrayOutput() FirewallLocalinpolicy6SrcaddrArrayOutput {
	return o
}

func (o FirewallLocalinpolicy6SrcaddrArrayOutput) ToFirewallLocalinpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicy6SrcaddrArrayOutput {
	return o
}

func (o FirewallLocalinpolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallLocalinpolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallLocalinpolicy6Srcaddr {
		return vs[0].([]FirewallLocalinpolicy6Srcaddr)[vs[1].(int)]
	}).(FirewallLocalinpolicy6SrcaddrOutput)
}

type FirewallLocalinpolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallLocalinpolicyDstaddrInput is an input type that accepts FirewallLocalinpolicyDstaddrArgs and FirewallLocalinpolicyDstaddrOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicyDstaddrInput` via:
//
//	FirewallLocalinpolicyDstaddrArgs{...}
type FirewallLocalinpolicyDstaddrInput interface {
	pulumi.Input

	ToFirewallLocalinpolicyDstaddrOutput() FirewallLocalinpolicyDstaddrOutput
	ToFirewallLocalinpolicyDstaddrOutputWithContext(context.Context) FirewallLocalinpolicyDstaddrOutput
}

type FirewallLocalinpolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallLocalinpolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicyDstaddr)(nil)).Elem()
}

func (i FirewallLocalinpolicyDstaddrArgs) ToFirewallLocalinpolicyDstaddrOutput() FirewallLocalinpolicyDstaddrOutput {
	return i.ToFirewallLocalinpolicyDstaddrOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicyDstaddrArgs) ToFirewallLocalinpolicyDstaddrOutputWithContext(ctx context.Context) FirewallLocalinpolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicyDstaddrOutput)
}

// FirewallLocalinpolicyDstaddrArrayInput is an input type that accepts FirewallLocalinpolicyDstaddrArray and FirewallLocalinpolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicyDstaddrArrayInput` via:
//
//	FirewallLocalinpolicyDstaddrArray{ FirewallLocalinpolicyDstaddrArgs{...} }
type FirewallLocalinpolicyDstaddrArrayInput interface {
	pulumi.Input

	ToFirewallLocalinpolicyDstaddrArrayOutput() FirewallLocalinpolicyDstaddrArrayOutput
	ToFirewallLocalinpolicyDstaddrArrayOutputWithContext(context.Context) FirewallLocalinpolicyDstaddrArrayOutput
}

type FirewallLocalinpolicyDstaddrArray []FirewallLocalinpolicyDstaddrInput

func (FirewallLocalinpolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicyDstaddr)(nil)).Elem()
}

func (i FirewallLocalinpolicyDstaddrArray) ToFirewallLocalinpolicyDstaddrArrayOutput() FirewallLocalinpolicyDstaddrArrayOutput {
	return i.ToFirewallLocalinpolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicyDstaddrArray) ToFirewallLocalinpolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicyDstaddrArrayOutput)
}

type FirewallLocalinpolicyDstaddrOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicyDstaddr)(nil)).Elem()
}

func (o FirewallLocalinpolicyDstaddrOutput) ToFirewallLocalinpolicyDstaddrOutput() FirewallLocalinpolicyDstaddrOutput {
	return o
}

func (o FirewallLocalinpolicyDstaddrOutput) ToFirewallLocalinpolicyDstaddrOutputWithContext(ctx context.Context) FirewallLocalinpolicyDstaddrOutput {
	return o
}

// Address name.
func (o FirewallLocalinpolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallLocalinpolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallLocalinpolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicyDstaddr)(nil)).Elem()
}

func (o FirewallLocalinpolicyDstaddrArrayOutput) ToFirewallLocalinpolicyDstaddrArrayOutput() FirewallLocalinpolicyDstaddrArrayOutput {
	return o
}

func (o FirewallLocalinpolicyDstaddrArrayOutput) ToFirewallLocalinpolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicyDstaddrArrayOutput {
	return o
}

func (o FirewallLocalinpolicyDstaddrArrayOutput) Index(i pulumi.IntInput) FirewallLocalinpolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallLocalinpolicyDstaddr {
		return vs[0].([]FirewallLocalinpolicyDstaddr)[vs[1].(int)]
	}).(FirewallLocalinpolicyDstaddrOutput)
}

type FirewallLocalinpolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallLocalinpolicyServiceInput is an input type that accepts FirewallLocalinpolicyServiceArgs and FirewallLocalinpolicyServiceOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicyServiceInput` via:
//
//	FirewallLocalinpolicyServiceArgs{...}
type FirewallLocalinpolicyServiceInput interface {
	pulumi.Input

	ToFirewallLocalinpolicyServiceOutput() FirewallLocalinpolicyServiceOutput
	ToFirewallLocalinpolicyServiceOutputWithContext(context.Context) FirewallLocalinpolicyServiceOutput
}

type FirewallLocalinpolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallLocalinpolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicyService)(nil)).Elem()
}

func (i FirewallLocalinpolicyServiceArgs) ToFirewallLocalinpolicyServiceOutput() FirewallLocalinpolicyServiceOutput {
	return i.ToFirewallLocalinpolicyServiceOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicyServiceArgs) ToFirewallLocalinpolicyServiceOutputWithContext(ctx context.Context) FirewallLocalinpolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicyServiceOutput)
}

// FirewallLocalinpolicyServiceArrayInput is an input type that accepts FirewallLocalinpolicyServiceArray and FirewallLocalinpolicyServiceArrayOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicyServiceArrayInput` via:
//
//	FirewallLocalinpolicyServiceArray{ FirewallLocalinpolicyServiceArgs{...} }
type FirewallLocalinpolicyServiceArrayInput interface {
	pulumi.Input

	ToFirewallLocalinpolicyServiceArrayOutput() FirewallLocalinpolicyServiceArrayOutput
	ToFirewallLocalinpolicyServiceArrayOutputWithContext(context.Context) FirewallLocalinpolicyServiceArrayOutput
}

type FirewallLocalinpolicyServiceArray []FirewallLocalinpolicyServiceInput

func (FirewallLocalinpolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicyService)(nil)).Elem()
}

func (i FirewallLocalinpolicyServiceArray) ToFirewallLocalinpolicyServiceArrayOutput() FirewallLocalinpolicyServiceArrayOutput {
	return i.ToFirewallLocalinpolicyServiceArrayOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicyServiceArray) ToFirewallLocalinpolicyServiceArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicyServiceArrayOutput)
}

type FirewallLocalinpolicyServiceOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicyService)(nil)).Elem()
}

func (o FirewallLocalinpolicyServiceOutput) ToFirewallLocalinpolicyServiceOutput() FirewallLocalinpolicyServiceOutput {
	return o
}

func (o FirewallLocalinpolicyServiceOutput) ToFirewallLocalinpolicyServiceOutputWithContext(ctx context.Context) FirewallLocalinpolicyServiceOutput {
	return o
}

// Service name.
func (o FirewallLocalinpolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallLocalinpolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallLocalinpolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicyService)(nil)).Elem()
}

func (o FirewallLocalinpolicyServiceArrayOutput) ToFirewallLocalinpolicyServiceArrayOutput() FirewallLocalinpolicyServiceArrayOutput {
	return o
}

func (o FirewallLocalinpolicyServiceArrayOutput) ToFirewallLocalinpolicyServiceArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicyServiceArrayOutput {
	return o
}

func (o FirewallLocalinpolicyServiceArrayOutput) Index(i pulumi.IntInput) FirewallLocalinpolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallLocalinpolicyService {
		return vs[0].([]FirewallLocalinpolicyService)[vs[1].(int)]
	}).(FirewallLocalinpolicyServiceOutput)
}

type FirewallLocalinpolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallLocalinpolicySrcaddrInput is an input type that accepts FirewallLocalinpolicySrcaddrArgs and FirewallLocalinpolicySrcaddrOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicySrcaddrInput` via:
//
//	FirewallLocalinpolicySrcaddrArgs{...}
type FirewallLocalinpolicySrcaddrInput interface {
	pulumi.Input

	ToFirewallLocalinpolicySrcaddrOutput() FirewallLocalinpolicySrcaddrOutput
	ToFirewallLocalinpolicySrcaddrOutputWithContext(context.Context) FirewallLocalinpolicySrcaddrOutput
}

type FirewallLocalinpolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallLocalinpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicySrcaddr)(nil)).Elem()
}

func (i FirewallLocalinpolicySrcaddrArgs) ToFirewallLocalinpolicySrcaddrOutput() FirewallLocalinpolicySrcaddrOutput {
	return i.ToFirewallLocalinpolicySrcaddrOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicySrcaddrArgs) ToFirewallLocalinpolicySrcaddrOutputWithContext(ctx context.Context) FirewallLocalinpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicySrcaddrOutput)
}

// FirewallLocalinpolicySrcaddrArrayInput is an input type that accepts FirewallLocalinpolicySrcaddrArray and FirewallLocalinpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallLocalinpolicySrcaddrArrayInput` via:
//
//	FirewallLocalinpolicySrcaddrArray{ FirewallLocalinpolicySrcaddrArgs{...} }
type FirewallLocalinpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallLocalinpolicySrcaddrArrayOutput() FirewallLocalinpolicySrcaddrArrayOutput
	ToFirewallLocalinpolicySrcaddrArrayOutputWithContext(context.Context) FirewallLocalinpolicySrcaddrArrayOutput
}

type FirewallLocalinpolicySrcaddrArray []FirewallLocalinpolicySrcaddrInput

func (FirewallLocalinpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicySrcaddr)(nil)).Elem()
}

func (i FirewallLocalinpolicySrcaddrArray) ToFirewallLocalinpolicySrcaddrArrayOutput() FirewallLocalinpolicySrcaddrArrayOutput {
	return i.ToFirewallLocalinpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallLocalinpolicySrcaddrArray) ToFirewallLocalinpolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallLocalinpolicySrcaddrArrayOutput)
}

type FirewallLocalinpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLocalinpolicySrcaddr)(nil)).Elem()
}

func (o FirewallLocalinpolicySrcaddrOutput) ToFirewallLocalinpolicySrcaddrOutput() FirewallLocalinpolicySrcaddrOutput {
	return o
}

func (o FirewallLocalinpolicySrcaddrOutput) ToFirewallLocalinpolicySrcaddrOutputWithContext(ctx context.Context) FirewallLocalinpolicySrcaddrOutput {
	return o
}

// Address name.
func (o FirewallLocalinpolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallLocalinpolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallLocalinpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallLocalinpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallLocalinpolicySrcaddr)(nil)).Elem()
}

func (o FirewallLocalinpolicySrcaddrArrayOutput) ToFirewallLocalinpolicySrcaddrArrayOutput() FirewallLocalinpolicySrcaddrArrayOutput {
	return o
}

func (o FirewallLocalinpolicySrcaddrArrayOutput) ToFirewallLocalinpolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallLocalinpolicySrcaddrArrayOutput {
	return o
}

func (o FirewallLocalinpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallLocalinpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallLocalinpolicySrcaddr {
		return vs[0].([]FirewallLocalinpolicySrcaddr)[vs[1].(int)]
	}).(FirewallLocalinpolicySrcaddrOutput)
}

type FirewallMulticastaddress6Tagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []FirewallMulticastaddress6TaggingTag `pulumi:"tags"`
}

// FirewallMulticastaddress6TaggingInput is an input type that accepts FirewallMulticastaddress6TaggingArgs and FirewallMulticastaddress6TaggingOutput values.
// You can construct a concrete instance of `FirewallMulticastaddress6TaggingInput` via:
//
//	FirewallMulticastaddress6TaggingArgs{...}
type FirewallMulticastaddress6TaggingInput interface {
	pulumi.Input

	ToFirewallMulticastaddress6TaggingOutput() FirewallMulticastaddress6TaggingOutput
	ToFirewallMulticastaddress6TaggingOutputWithContext(context.Context) FirewallMulticastaddress6TaggingOutput
}

type FirewallMulticastaddress6TaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags FirewallMulticastaddress6TaggingTagArrayInput `pulumi:"tags"`
}

func (FirewallMulticastaddress6TaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastaddress6Tagging)(nil)).Elem()
}

func (i FirewallMulticastaddress6TaggingArgs) ToFirewallMulticastaddress6TaggingOutput() FirewallMulticastaddress6TaggingOutput {
	return i.ToFirewallMulticastaddress6TaggingOutputWithContext(context.Background())
}

func (i FirewallMulticastaddress6TaggingArgs) ToFirewallMulticastaddress6TaggingOutputWithContext(ctx context.Context) FirewallMulticastaddress6TaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddress6TaggingOutput)
}

// FirewallMulticastaddress6TaggingArrayInput is an input type that accepts FirewallMulticastaddress6TaggingArray and FirewallMulticastaddress6TaggingArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastaddress6TaggingArrayInput` via:
//
//	FirewallMulticastaddress6TaggingArray{ FirewallMulticastaddress6TaggingArgs{...} }
type FirewallMulticastaddress6TaggingArrayInput interface {
	pulumi.Input

	ToFirewallMulticastaddress6TaggingArrayOutput() FirewallMulticastaddress6TaggingArrayOutput
	ToFirewallMulticastaddress6TaggingArrayOutputWithContext(context.Context) FirewallMulticastaddress6TaggingArrayOutput
}

type FirewallMulticastaddress6TaggingArray []FirewallMulticastaddress6TaggingInput

func (FirewallMulticastaddress6TaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastaddress6Tagging)(nil)).Elem()
}

func (i FirewallMulticastaddress6TaggingArray) ToFirewallMulticastaddress6TaggingArrayOutput() FirewallMulticastaddress6TaggingArrayOutput {
	return i.ToFirewallMulticastaddress6TaggingArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastaddress6TaggingArray) ToFirewallMulticastaddress6TaggingArrayOutputWithContext(ctx context.Context) FirewallMulticastaddress6TaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddress6TaggingArrayOutput)
}

type FirewallMulticastaddress6TaggingOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddress6TaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastaddress6Tagging)(nil)).Elem()
}

func (o FirewallMulticastaddress6TaggingOutput) ToFirewallMulticastaddress6TaggingOutput() FirewallMulticastaddress6TaggingOutput {
	return o
}

func (o FirewallMulticastaddress6TaggingOutput) ToFirewallMulticastaddress6TaggingOutputWithContext(ctx context.Context) FirewallMulticastaddress6TaggingOutput {
	return o
}

// Tag category.
func (o FirewallMulticastaddress6TaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallMulticastaddress6Tagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o FirewallMulticastaddress6TaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallMulticastaddress6Tagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o FirewallMulticastaddress6TaggingOutput) Tags() FirewallMulticastaddress6TaggingTagArrayOutput {
	return o.ApplyT(func(v FirewallMulticastaddress6Tagging) []FirewallMulticastaddress6TaggingTag { return v.Tags }).(FirewallMulticastaddress6TaggingTagArrayOutput)
}

type FirewallMulticastaddress6TaggingArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddress6TaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastaddress6Tagging)(nil)).Elem()
}

func (o FirewallMulticastaddress6TaggingArrayOutput) ToFirewallMulticastaddress6TaggingArrayOutput() FirewallMulticastaddress6TaggingArrayOutput {
	return o
}

func (o FirewallMulticastaddress6TaggingArrayOutput) ToFirewallMulticastaddress6TaggingArrayOutputWithContext(ctx context.Context) FirewallMulticastaddress6TaggingArrayOutput {
	return o
}

func (o FirewallMulticastaddress6TaggingArrayOutput) Index(i pulumi.IntInput) FirewallMulticastaddress6TaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallMulticastaddress6Tagging {
		return vs[0].([]FirewallMulticastaddress6Tagging)[vs[1].(int)]
	}).(FirewallMulticastaddress6TaggingOutput)
}

type FirewallMulticastaddress6TaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// FirewallMulticastaddress6TaggingTagInput is an input type that accepts FirewallMulticastaddress6TaggingTagArgs and FirewallMulticastaddress6TaggingTagOutput values.
// You can construct a concrete instance of `FirewallMulticastaddress6TaggingTagInput` via:
//
//	FirewallMulticastaddress6TaggingTagArgs{...}
type FirewallMulticastaddress6TaggingTagInput interface {
	pulumi.Input

	ToFirewallMulticastaddress6TaggingTagOutput() FirewallMulticastaddress6TaggingTagOutput
	ToFirewallMulticastaddress6TaggingTagOutputWithContext(context.Context) FirewallMulticastaddress6TaggingTagOutput
}

type FirewallMulticastaddress6TaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallMulticastaddress6TaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastaddress6TaggingTag)(nil)).Elem()
}

func (i FirewallMulticastaddress6TaggingTagArgs) ToFirewallMulticastaddress6TaggingTagOutput() FirewallMulticastaddress6TaggingTagOutput {
	return i.ToFirewallMulticastaddress6TaggingTagOutputWithContext(context.Background())
}

func (i FirewallMulticastaddress6TaggingTagArgs) ToFirewallMulticastaddress6TaggingTagOutputWithContext(ctx context.Context) FirewallMulticastaddress6TaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddress6TaggingTagOutput)
}

// FirewallMulticastaddress6TaggingTagArrayInput is an input type that accepts FirewallMulticastaddress6TaggingTagArray and FirewallMulticastaddress6TaggingTagArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastaddress6TaggingTagArrayInput` via:
//
//	FirewallMulticastaddress6TaggingTagArray{ FirewallMulticastaddress6TaggingTagArgs{...} }
type FirewallMulticastaddress6TaggingTagArrayInput interface {
	pulumi.Input

	ToFirewallMulticastaddress6TaggingTagArrayOutput() FirewallMulticastaddress6TaggingTagArrayOutput
	ToFirewallMulticastaddress6TaggingTagArrayOutputWithContext(context.Context) FirewallMulticastaddress6TaggingTagArrayOutput
}

type FirewallMulticastaddress6TaggingTagArray []FirewallMulticastaddress6TaggingTagInput

func (FirewallMulticastaddress6TaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastaddress6TaggingTag)(nil)).Elem()
}

func (i FirewallMulticastaddress6TaggingTagArray) ToFirewallMulticastaddress6TaggingTagArrayOutput() FirewallMulticastaddress6TaggingTagArrayOutput {
	return i.ToFirewallMulticastaddress6TaggingTagArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastaddress6TaggingTagArray) ToFirewallMulticastaddress6TaggingTagArrayOutputWithContext(ctx context.Context) FirewallMulticastaddress6TaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddress6TaggingTagArrayOutput)
}

type FirewallMulticastaddress6TaggingTagOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddress6TaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastaddress6TaggingTag)(nil)).Elem()
}

func (o FirewallMulticastaddress6TaggingTagOutput) ToFirewallMulticastaddress6TaggingTagOutput() FirewallMulticastaddress6TaggingTagOutput {
	return o
}

func (o FirewallMulticastaddress6TaggingTagOutput) ToFirewallMulticastaddress6TaggingTagOutputWithContext(ctx context.Context) FirewallMulticastaddress6TaggingTagOutput {
	return o
}

// Tag name.
func (o FirewallMulticastaddress6TaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallMulticastaddress6TaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallMulticastaddress6TaggingTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddress6TaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastaddress6TaggingTag)(nil)).Elem()
}

func (o FirewallMulticastaddress6TaggingTagArrayOutput) ToFirewallMulticastaddress6TaggingTagArrayOutput() FirewallMulticastaddress6TaggingTagArrayOutput {
	return o
}

func (o FirewallMulticastaddress6TaggingTagArrayOutput) ToFirewallMulticastaddress6TaggingTagArrayOutputWithContext(ctx context.Context) FirewallMulticastaddress6TaggingTagArrayOutput {
	return o
}

func (o FirewallMulticastaddress6TaggingTagArrayOutput) Index(i pulumi.IntInput) FirewallMulticastaddress6TaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallMulticastaddress6TaggingTag {
		return vs[0].([]FirewallMulticastaddress6TaggingTag)[vs[1].(int)]
	}).(FirewallMulticastaddress6TaggingTagOutput)
}

type FirewallMulticastaddressTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []FirewallMulticastaddressTaggingTag `pulumi:"tags"`
}

// FirewallMulticastaddressTaggingInput is an input type that accepts FirewallMulticastaddressTaggingArgs and FirewallMulticastaddressTaggingOutput values.
// You can construct a concrete instance of `FirewallMulticastaddressTaggingInput` via:
//
//	FirewallMulticastaddressTaggingArgs{...}
type FirewallMulticastaddressTaggingInput interface {
	pulumi.Input

	ToFirewallMulticastaddressTaggingOutput() FirewallMulticastaddressTaggingOutput
	ToFirewallMulticastaddressTaggingOutputWithContext(context.Context) FirewallMulticastaddressTaggingOutput
}

type FirewallMulticastaddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags FirewallMulticastaddressTaggingTagArrayInput `pulumi:"tags"`
}

func (FirewallMulticastaddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastaddressTagging)(nil)).Elem()
}

func (i FirewallMulticastaddressTaggingArgs) ToFirewallMulticastaddressTaggingOutput() FirewallMulticastaddressTaggingOutput {
	return i.ToFirewallMulticastaddressTaggingOutputWithContext(context.Background())
}

func (i FirewallMulticastaddressTaggingArgs) ToFirewallMulticastaddressTaggingOutputWithContext(ctx context.Context) FirewallMulticastaddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddressTaggingOutput)
}

// FirewallMulticastaddressTaggingArrayInput is an input type that accepts FirewallMulticastaddressTaggingArray and FirewallMulticastaddressTaggingArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastaddressTaggingArrayInput` via:
//
//	FirewallMulticastaddressTaggingArray{ FirewallMulticastaddressTaggingArgs{...} }
type FirewallMulticastaddressTaggingArrayInput interface {
	pulumi.Input

	ToFirewallMulticastaddressTaggingArrayOutput() FirewallMulticastaddressTaggingArrayOutput
	ToFirewallMulticastaddressTaggingArrayOutputWithContext(context.Context) FirewallMulticastaddressTaggingArrayOutput
}

type FirewallMulticastaddressTaggingArray []FirewallMulticastaddressTaggingInput

func (FirewallMulticastaddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastaddressTagging)(nil)).Elem()
}

func (i FirewallMulticastaddressTaggingArray) ToFirewallMulticastaddressTaggingArrayOutput() FirewallMulticastaddressTaggingArrayOutput {
	return i.ToFirewallMulticastaddressTaggingArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastaddressTaggingArray) ToFirewallMulticastaddressTaggingArrayOutputWithContext(ctx context.Context) FirewallMulticastaddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddressTaggingArrayOutput)
}

type FirewallMulticastaddressTaggingOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastaddressTagging)(nil)).Elem()
}

func (o FirewallMulticastaddressTaggingOutput) ToFirewallMulticastaddressTaggingOutput() FirewallMulticastaddressTaggingOutput {
	return o
}

func (o FirewallMulticastaddressTaggingOutput) ToFirewallMulticastaddressTaggingOutputWithContext(ctx context.Context) FirewallMulticastaddressTaggingOutput {
	return o
}

// Tag category.
func (o FirewallMulticastaddressTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallMulticastaddressTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o FirewallMulticastaddressTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallMulticastaddressTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o FirewallMulticastaddressTaggingOutput) Tags() FirewallMulticastaddressTaggingTagArrayOutput {
	return o.ApplyT(func(v FirewallMulticastaddressTagging) []FirewallMulticastaddressTaggingTag { return v.Tags }).(FirewallMulticastaddressTaggingTagArrayOutput)
}

type FirewallMulticastaddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastaddressTagging)(nil)).Elem()
}

func (o FirewallMulticastaddressTaggingArrayOutput) ToFirewallMulticastaddressTaggingArrayOutput() FirewallMulticastaddressTaggingArrayOutput {
	return o
}

func (o FirewallMulticastaddressTaggingArrayOutput) ToFirewallMulticastaddressTaggingArrayOutputWithContext(ctx context.Context) FirewallMulticastaddressTaggingArrayOutput {
	return o
}

func (o FirewallMulticastaddressTaggingArrayOutput) Index(i pulumi.IntInput) FirewallMulticastaddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallMulticastaddressTagging {
		return vs[0].([]FirewallMulticastaddressTagging)[vs[1].(int)]
	}).(FirewallMulticastaddressTaggingOutput)
}

type FirewallMulticastaddressTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// FirewallMulticastaddressTaggingTagInput is an input type that accepts FirewallMulticastaddressTaggingTagArgs and FirewallMulticastaddressTaggingTagOutput values.
// You can construct a concrete instance of `FirewallMulticastaddressTaggingTagInput` via:
//
//	FirewallMulticastaddressTaggingTagArgs{...}
type FirewallMulticastaddressTaggingTagInput interface {
	pulumi.Input

	ToFirewallMulticastaddressTaggingTagOutput() FirewallMulticastaddressTaggingTagOutput
	ToFirewallMulticastaddressTaggingTagOutputWithContext(context.Context) FirewallMulticastaddressTaggingTagOutput
}

type FirewallMulticastaddressTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallMulticastaddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastaddressTaggingTag)(nil)).Elem()
}

func (i FirewallMulticastaddressTaggingTagArgs) ToFirewallMulticastaddressTaggingTagOutput() FirewallMulticastaddressTaggingTagOutput {
	return i.ToFirewallMulticastaddressTaggingTagOutputWithContext(context.Background())
}

func (i FirewallMulticastaddressTaggingTagArgs) ToFirewallMulticastaddressTaggingTagOutputWithContext(ctx context.Context) FirewallMulticastaddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddressTaggingTagOutput)
}

// FirewallMulticastaddressTaggingTagArrayInput is an input type that accepts FirewallMulticastaddressTaggingTagArray and FirewallMulticastaddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastaddressTaggingTagArrayInput` via:
//
//	FirewallMulticastaddressTaggingTagArray{ FirewallMulticastaddressTaggingTagArgs{...} }
type FirewallMulticastaddressTaggingTagArrayInput interface {
	pulumi.Input

	ToFirewallMulticastaddressTaggingTagArrayOutput() FirewallMulticastaddressTaggingTagArrayOutput
	ToFirewallMulticastaddressTaggingTagArrayOutputWithContext(context.Context) FirewallMulticastaddressTaggingTagArrayOutput
}

type FirewallMulticastaddressTaggingTagArray []FirewallMulticastaddressTaggingTagInput

func (FirewallMulticastaddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastaddressTaggingTag)(nil)).Elem()
}

func (i FirewallMulticastaddressTaggingTagArray) ToFirewallMulticastaddressTaggingTagArrayOutput() FirewallMulticastaddressTaggingTagArrayOutput {
	return i.ToFirewallMulticastaddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastaddressTaggingTagArray) ToFirewallMulticastaddressTaggingTagArrayOutputWithContext(ctx context.Context) FirewallMulticastaddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastaddressTaggingTagArrayOutput)
}

type FirewallMulticastaddressTaggingTagOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastaddressTaggingTag)(nil)).Elem()
}

func (o FirewallMulticastaddressTaggingTagOutput) ToFirewallMulticastaddressTaggingTagOutput() FirewallMulticastaddressTaggingTagOutput {
	return o
}

func (o FirewallMulticastaddressTaggingTagOutput) ToFirewallMulticastaddressTaggingTagOutputWithContext(ctx context.Context) FirewallMulticastaddressTaggingTagOutput {
	return o
}

// Tag name.
func (o FirewallMulticastaddressTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallMulticastaddressTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallMulticastaddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastaddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastaddressTaggingTag)(nil)).Elem()
}

func (o FirewallMulticastaddressTaggingTagArrayOutput) ToFirewallMulticastaddressTaggingTagArrayOutput() FirewallMulticastaddressTaggingTagArrayOutput {
	return o
}

func (o FirewallMulticastaddressTaggingTagArrayOutput) ToFirewallMulticastaddressTaggingTagArrayOutputWithContext(ctx context.Context) FirewallMulticastaddressTaggingTagArrayOutput {
	return o
}

func (o FirewallMulticastaddressTaggingTagArrayOutput) Index(i pulumi.IntInput) FirewallMulticastaddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallMulticastaddressTaggingTag {
		return vs[0].([]FirewallMulticastaddressTaggingTag)[vs[1].(int)]
	}).(FirewallMulticastaddressTaggingTagOutput)
}

type FirewallMulticastpolicy6Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallMulticastpolicy6DstaddrInput is an input type that accepts FirewallMulticastpolicy6DstaddrArgs and FirewallMulticastpolicy6DstaddrOutput values.
// You can construct a concrete instance of `FirewallMulticastpolicy6DstaddrInput` via:
//
//	FirewallMulticastpolicy6DstaddrArgs{...}
type FirewallMulticastpolicy6DstaddrInput interface {
	pulumi.Input

	ToFirewallMulticastpolicy6DstaddrOutput() FirewallMulticastpolicy6DstaddrOutput
	ToFirewallMulticastpolicy6DstaddrOutputWithContext(context.Context) FirewallMulticastpolicy6DstaddrOutput
}

type FirewallMulticastpolicy6DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallMulticastpolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastpolicy6Dstaddr)(nil)).Elem()
}

func (i FirewallMulticastpolicy6DstaddrArgs) ToFirewallMulticastpolicy6DstaddrOutput() FirewallMulticastpolicy6DstaddrOutput {
	return i.ToFirewallMulticastpolicy6DstaddrOutputWithContext(context.Background())
}

func (i FirewallMulticastpolicy6DstaddrArgs) ToFirewallMulticastpolicy6DstaddrOutputWithContext(ctx context.Context) FirewallMulticastpolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastpolicy6DstaddrOutput)
}

// FirewallMulticastpolicy6DstaddrArrayInput is an input type that accepts FirewallMulticastpolicy6DstaddrArray and FirewallMulticastpolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastpolicy6DstaddrArrayInput` via:
//
//	FirewallMulticastpolicy6DstaddrArray{ FirewallMulticastpolicy6DstaddrArgs{...} }
type FirewallMulticastpolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToFirewallMulticastpolicy6DstaddrArrayOutput() FirewallMulticastpolicy6DstaddrArrayOutput
	ToFirewallMulticastpolicy6DstaddrArrayOutputWithContext(context.Context) FirewallMulticastpolicy6DstaddrArrayOutput
}

type FirewallMulticastpolicy6DstaddrArray []FirewallMulticastpolicy6DstaddrInput

func (FirewallMulticastpolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastpolicy6Dstaddr)(nil)).Elem()
}

func (i FirewallMulticastpolicy6DstaddrArray) ToFirewallMulticastpolicy6DstaddrArrayOutput() FirewallMulticastpolicy6DstaddrArrayOutput {
	return i.ToFirewallMulticastpolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastpolicy6DstaddrArray) ToFirewallMulticastpolicy6DstaddrArrayOutputWithContext(ctx context.Context) FirewallMulticastpolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastpolicy6DstaddrArrayOutput)
}

type FirewallMulticastpolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (FirewallMulticastpolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastpolicy6Dstaddr)(nil)).Elem()
}

func (o FirewallMulticastpolicy6DstaddrOutput) ToFirewallMulticastpolicy6DstaddrOutput() FirewallMulticastpolicy6DstaddrOutput {
	return o
}

func (o FirewallMulticastpolicy6DstaddrOutput) ToFirewallMulticastpolicy6DstaddrOutputWithContext(ctx context.Context) FirewallMulticastpolicy6DstaddrOutput {
	return o
}

// Address name.
func (o FirewallMulticastpolicy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallMulticastpolicy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallMulticastpolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastpolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastpolicy6Dstaddr)(nil)).Elem()
}

func (o FirewallMulticastpolicy6DstaddrArrayOutput) ToFirewallMulticastpolicy6DstaddrArrayOutput() FirewallMulticastpolicy6DstaddrArrayOutput {
	return o
}

func (o FirewallMulticastpolicy6DstaddrArrayOutput) ToFirewallMulticastpolicy6DstaddrArrayOutputWithContext(ctx context.Context) FirewallMulticastpolicy6DstaddrArrayOutput {
	return o
}

func (o FirewallMulticastpolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) FirewallMulticastpolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallMulticastpolicy6Dstaddr {
		return vs[0].([]FirewallMulticastpolicy6Dstaddr)[vs[1].(int)]
	}).(FirewallMulticastpolicy6DstaddrOutput)
}

type FirewallMulticastpolicy6Srcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallMulticastpolicy6SrcaddrInput is an input type that accepts FirewallMulticastpolicy6SrcaddrArgs and FirewallMulticastpolicy6SrcaddrOutput values.
// You can construct a concrete instance of `FirewallMulticastpolicy6SrcaddrInput` via:
//
//	FirewallMulticastpolicy6SrcaddrArgs{...}
type FirewallMulticastpolicy6SrcaddrInput interface {
	pulumi.Input

	ToFirewallMulticastpolicy6SrcaddrOutput() FirewallMulticastpolicy6SrcaddrOutput
	ToFirewallMulticastpolicy6SrcaddrOutputWithContext(context.Context) FirewallMulticastpolicy6SrcaddrOutput
}

type FirewallMulticastpolicy6SrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallMulticastpolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastpolicy6Srcaddr)(nil)).Elem()
}

func (i FirewallMulticastpolicy6SrcaddrArgs) ToFirewallMulticastpolicy6SrcaddrOutput() FirewallMulticastpolicy6SrcaddrOutput {
	return i.ToFirewallMulticastpolicy6SrcaddrOutputWithContext(context.Background())
}

func (i FirewallMulticastpolicy6SrcaddrArgs) ToFirewallMulticastpolicy6SrcaddrOutputWithContext(ctx context.Context) FirewallMulticastpolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastpolicy6SrcaddrOutput)
}

// FirewallMulticastpolicy6SrcaddrArrayInput is an input type that accepts FirewallMulticastpolicy6SrcaddrArray and FirewallMulticastpolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastpolicy6SrcaddrArrayInput` via:
//
//	FirewallMulticastpolicy6SrcaddrArray{ FirewallMulticastpolicy6SrcaddrArgs{...} }
type FirewallMulticastpolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallMulticastpolicy6SrcaddrArrayOutput() FirewallMulticastpolicy6SrcaddrArrayOutput
	ToFirewallMulticastpolicy6SrcaddrArrayOutputWithContext(context.Context) FirewallMulticastpolicy6SrcaddrArrayOutput
}

type FirewallMulticastpolicy6SrcaddrArray []FirewallMulticastpolicy6SrcaddrInput

func (FirewallMulticastpolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastpolicy6Srcaddr)(nil)).Elem()
}

func (i FirewallMulticastpolicy6SrcaddrArray) ToFirewallMulticastpolicy6SrcaddrArrayOutput() FirewallMulticastpolicy6SrcaddrArrayOutput {
	return i.ToFirewallMulticastpolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastpolicy6SrcaddrArray) ToFirewallMulticastpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) FirewallMulticastpolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastpolicy6SrcaddrArrayOutput)
}

type FirewallMulticastpolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallMulticastpolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastpolicy6Srcaddr)(nil)).Elem()
}

func (o FirewallMulticastpolicy6SrcaddrOutput) ToFirewallMulticastpolicy6SrcaddrOutput() FirewallMulticastpolicy6SrcaddrOutput {
	return o
}

func (o FirewallMulticastpolicy6SrcaddrOutput) ToFirewallMulticastpolicy6SrcaddrOutputWithContext(ctx context.Context) FirewallMulticastpolicy6SrcaddrOutput {
	return o
}

// Address name.
func (o FirewallMulticastpolicy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallMulticastpolicy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallMulticastpolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastpolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastpolicy6Srcaddr)(nil)).Elem()
}

func (o FirewallMulticastpolicy6SrcaddrArrayOutput) ToFirewallMulticastpolicy6SrcaddrArrayOutput() FirewallMulticastpolicy6SrcaddrArrayOutput {
	return o
}

func (o FirewallMulticastpolicy6SrcaddrArrayOutput) ToFirewallMulticastpolicy6SrcaddrArrayOutputWithContext(ctx context.Context) FirewallMulticastpolicy6SrcaddrArrayOutput {
	return o
}

func (o FirewallMulticastpolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallMulticastpolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallMulticastpolicy6Srcaddr {
		return vs[0].([]FirewallMulticastpolicy6Srcaddr)[vs[1].(int)]
	}).(FirewallMulticastpolicy6SrcaddrOutput)
}

type FirewallMulticastpolicyDstaddr struct {
	// Destination address objects.
	Name *string `pulumi:"name"`
}

// FirewallMulticastpolicyDstaddrInput is an input type that accepts FirewallMulticastpolicyDstaddrArgs and FirewallMulticastpolicyDstaddrOutput values.
// You can construct a concrete instance of `FirewallMulticastpolicyDstaddrInput` via:
//
//	FirewallMulticastpolicyDstaddrArgs{...}
type FirewallMulticastpolicyDstaddrInput interface {
	pulumi.Input

	ToFirewallMulticastpolicyDstaddrOutput() FirewallMulticastpolicyDstaddrOutput
	ToFirewallMulticastpolicyDstaddrOutputWithContext(context.Context) FirewallMulticastpolicyDstaddrOutput
}

type FirewallMulticastpolicyDstaddrArgs struct {
	// Destination address objects.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallMulticastpolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastpolicyDstaddr)(nil)).Elem()
}

func (i FirewallMulticastpolicyDstaddrArgs) ToFirewallMulticastpolicyDstaddrOutput() FirewallMulticastpolicyDstaddrOutput {
	return i.ToFirewallMulticastpolicyDstaddrOutputWithContext(context.Background())
}

func (i FirewallMulticastpolicyDstaddrArgs) ToFirewallMulticastpolicyDstaddrOutputWithContext(ctx context.Context) FirewallMulticastpolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastpolicyDstaddrOutput)
}

// FirewallMulticastpolicyDstaddrArrayInput is an input type that accepts FirewallMulticastpolicyDstaddrArray and FirewallMulticastpolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastpolicyDstaddrArrayInput` via:
//
//	FirewallMulticastpolicyDstaddrArray{ FirewallMulticastpolicyDstaddrArgs{...} }
type FirewallMulticastpolicyDstaddrArrayInput interface {
	pulumi.Input

	ToFirewallMulticastpolicyDstaddrArrayOutput() FirewallMulticastpolicyDstaddrArrayOutput
	ToFirewallMulticastpolicyDstaddrArrayOutputWithContext(context.Context) FirewallMulticastpolicyDstaddrArrayOutput
}

type FirewallMulticastpolicyDstaddrArray []FirewallMulticastpolicyDstaddrInput

func (FirewallMulticastpolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastpolicyDstaddr)(nil)).Elem()
}

func (i FirewallMulticastpolicyDstaddrArray) ToFirewallMulticastpolicyDstaddrArrayOutput() FirewallMulticastpolicyDstaddrArrayOutput {
	return i.ToFirewallMulticastpolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastpolicyDstaddrArray) ToFirewallMulticastpolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallMulticastpolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastpolicyDstaddrArrayOutput)
}

type FirewallMulticastpolicyDstaddrOutput struct{ *pulumi.OutputState }

func (FirewallMulticastpolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastpolicyDstaddr)(nil)).Elem()
}

func (o FirewallMulticastpolicyDstaddrOutput) ToFirewallMulticastpolicyDstaddrOutput() FirewallMulticastpolicyDstaddrOutput {
	return o
}

func (o FirewallMulticastpolicyDstaddrOutput) ToFirewallMulticastpolicyDstaddrOutputWithContext(ctx context.Context) FirewallMulticastpolicyDstaddrOutput {
	return o
}

// Destination address objects.
func (o FirewallMulticastpolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallMulticastpolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallMulticastpolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastpolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastpolicyDstaddr)(nil)).Elem()
}

func (o FirewallMulticastpolicyDstaddrArrayOutput) ToFirewallMulticastpolicyDstaddrArrayOutput() FirewallMulticastpolicyDstaddrArrayOutput {
	return o
}

func (o FirewallMulticastpolicyDstaddrArrayOutput) ToFirewallMulticastpolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallMulticastpolicyDstaddrArrayOutput {
	return o
}

func (o FirewallMulticastpolicyDstaddrArrayOutput) Index(i pulumi.IntInput) FirewallMulticastpolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallMulticastpolicyDstaddr {
		return vs[0].([]FirewallMulticastpolicyDstaddr)[vs[1].(int)]
	}).(FirewallMulticastpolicyDstaddrOutput)
}

type FirewallMulticastpolicySrcaddr struct {
	// Source address objects.
	Name *string `pulumi:"name"`
}

// FirewallMulticastpolicySrcaddrInput is an input type that accepts FirewallMulticastpolicySrcaddrArgs and FirewallMulticastpolicySrcaddrOutput values.
// You can construct a concrete instance of `FirewallMulticastpolicySrcaddrInput` via:
//
//	FirewallMulticastpolicySrcaddrArgs{...}
type FirewallMulticastpolicySrcaddrInput interface {
	pulumi.Input

	ToFirewallMulticastpolicySrcaddrOutput() FirewallMulticastpolicySrcaddrOutput
	ToFirewallMulticastpolicySrcaddrOutputWithContext(context.Context) FirewallMulticastpolicySrcaddrOutput
}

type FirewallMulticastpolicySrcaddrArgs struct {
	// Source address objects.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallMulticastpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastpolicySrcaddr)(nil)).Elem()
}

func (i FirewallMulticastpolicySrcaddrArgs) ToFirewallMulticastpolicySrcaddrOutput() FirewallMulticastpolicySrcaddrOutput {
	return i.ToFirewallMulticastpolicySrcaddrOutputWithContext(context.Background())
}

func (i FirewallMulticastpolicySrcaddrArgs) ToFirewallMulticastpolicySrcaddrOutputWithContext(ctx context.Context) FirewallMulticastpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastpolicySrcaddrOutput)
}

// FirewallMulticastpolicySrcaddrArrayInput is an input type that accepts FirewallMulticastpolicySrcaddrArray and FirewallMulticastpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastpolicySrcaddrArrayInput` via:
//
//	FirewallMulticastpolicySrcaddrArray{ FirewallMulticastpolicySrcaddrArgs{...} }
type FirewallMulticastpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallMulticastpolicySrcaddrArrayOutput() FirewallMulticastpolicySrcaddrArrayOutput
	ToFirewallMulticastpolicySrcaddrArrayOutputWithContext(context.Context) FirewallMulticastpolicySrcaddrArrayOutput
}

type FirewallMulticastpolicySrcaddrArray []FirewallMulticastpolicySrcaddrInput

func (FirewallMulticastpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastpolicySrcaddr)(nil)).Elem()
}

func (i FirewallMulticastpolicySrcaddrArray) ToFirewallMulticastpolicySrcaddrArrayOutput() FirewallMulticastpolicySrcaddrArrayOutput {
	return i.ToFirewallMulticastpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastpolicySrcaddrArray) ToFirewallMulticastpolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallMulticastpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastpolicySrcaddrArrayOutput)
}

type FirewallMulticastpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallMulticastpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallMulticastpolicySrcaddr)(nil)).Elem()
}

func (o FirewallMulticastpolicySrcaddrOutput) ToFirewallMulticastpolicySrcaddrOutput() FirewallMulticastpolicySrcaddrOutput {
	return o
}

func (o FirewallMulticastpolicySrcaddrOutput) ToFirewallMulticastpolicySrcaddrOutputWithContext(ctx context.Context) FirewallMulticastpolicySrcaddrOutput {
	return o
}

// Source address objects.
func (o FirewallMulticastpolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallMulticastpolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallMulticastpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallMulticastpolicySrcaddr)(nil)).Elem()
}

func (o FirewallMulticastpolicySrcaddrArrayOutput) ToFirewallMulticastpolicySrcaddrArrayOutput() FirewallMulticastpolicySrcaddrArrayOutput {
	return o
}

func (o FirewallMulticastpolicySrcaddrArrayOutput) ToFirewallMulticastpolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallMulticastpolicySrcaddrArrayOutput {
	return o
}

func (o FirewallMulticastpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallMulticastpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallMulticastpolicySrcaddr {
		return vs[0].([]FirewallMulticastpolicySrcaddr)[vs[1].(int)]
	}).(FirewallMulticastpolicySrcaddrOutput)
}

type FirewallPolicy46Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy46DstaddrInput is an input type that accepts FirewallPolicy46DstaddrArgs and FirewallPolicy46DstaddrOutput values.
// You can construct a concrete instance of `FirewallPolicy46DstaddrInput` via:
//
//	FirewallPolicy46DstaddrArgs{...}
type FirewallPolicy46DstaddrInput interface {
	pulumi.Input

	ToFirewallPolicy46DstaddrOutput() FirewallPolicy46DstaddrOutput
	ToFirewallPolicy46DstaddrOutputWithContext(context.Context) FirewallPolicy46DstaddrOutput
}

type FirewallPolicy46DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy46DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy46Dstaddr)(nil)).Elem()
}

func (i FirewallPolicy46DstaddrArgs) ToFirewallPolicy46DstaddrOutput() FirewallPolicy46DstaddrOutput {
	return i.ToFirewallPolicy46DstaddrOutputWithContext(context.Background())
}

func (i FirewallPolicy46DstaddrArgs) ToFirewallPolicy46DstaddrOutputWithContext(ctx context.Context) FirewallPolicy46DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy46DstaddrOutput)
}

// FirewallPolicy46DstaddrArrayInput is an input type that accepts FirewallPolicy46DstaddrArray and FirewallPolicy46DstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy46DstaddrArrayInput` via:
//
//	FirewallPolicy46DstaddrArray{ FirewallPolicy46DstaddrArgs{...} }
type FirewallPolicy46DstaddrArrayInput interface {
	pulumi.Input

	ToFirewallPolicy46DstaddrArrayOutput() FirewallPolicy46DstaddrArrayOutput
	ToFirewallPolicy46DstaddrArrayOutputWithContext(context.Context) FirewallPolicy46DstaddrArrayOutput
}

type FirewallPolicy46DstaddrArray []FirewallPolicy46DstaddrInput

func (FirewallPolicy46DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy46Dstaddr)(nil)).Elem()
}

func (i FirewallPolicy46DstaddrArray) ToFirewallPolicy46DstaddrArrayOutput() FirewallPolicy46DstaddrArrayOutput {
	return i.ToFirewallPolicy46DstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy46DstaddrArray) ToFirewallPolicy46DstaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy46DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy46DstaddrArrayOutput)
}

type FirewallPolicy46DstaddrOutput struct{ *pulumi.OutputState }

func (FirewallPolicy46DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy46Dstaddr)(nil)).Elem()
}

func (o FirewallPolicy46DstaddrOutput) ToFirewallPolicy46DstaddrOutput() FirewallPolicy46DstaddrOutput {
	return o
}

func (o FirewallPolicy46DstaddrOutput) ToFirewallPolicy46DstaddrOutputWithContext(ctx context.Context) FirewallPolicy46DstaddrOutput {
	return o
}

// Address name.
func (o FirewallPolicy46DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy46Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy46DstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy46DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy46Dstaddr)(nil)).Elem()
}

func (o FirewallPolicy46DstaddrArrayOutput) ToFirewallPolicy46DstaddrArrayOutput() FirewallPolicy46DstaddrArrayOutput {
	return o
}

func (o FirewallPolicy46DstaddrArrayOutput) ToFirewallPolicy46DstaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy46DstaddrArrayOutput {
	return o
}

func (o FirewallPolicy46DstaddrArrayOutput) Index(i pulumi.IntInput) FirewallPolicy46DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy46Dstaddr {
		return vs[0].([]FirewallPolicy46Dstaddr)[vs[1].(int)]
	}).(FirewallPolicy46DstaddrOutput)
}

type FirewallPolicy46Poolname struct {
	// IP pool name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy46PoolnameInput is an input type that accepts FirewallPolicy46PoolnameArgs and FirewallPolicy46PoolnameOutput values.
// You can construct a concrete instance of `FirewallPolicy46PoolnameInput` via:
//
//	FirewallPolicy46PoolnameArgs{...}
type FirewallPolicy46PoolnameInput interface {
	pulumi.Input

	ToFirewallPolicy46PoolnameOutput() FirewallPolicy46PoolnameOutput
	ToFirewallPolicy46PoolnameOutputWithContext(context.Context) FirewallPolicy46PoolnameOutput
}

type FirewallPolicy46PoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy46PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy46Poolname)(nil)).Elem()
}

func (i FirewallPolicy46PoolnameArgs) ToFirewallPolicy46PoolnameOutput() FirewallPolicy46PoolnameOutput {
	return i.ToFirewallPolicy46PoolnameOutputWithContext(context.Background())
}

func (i FirewallPolicy46PoolnameArgs) ToFirewallPolicy46PoolnameOutputWithContext(ctx context.Context) FirewallPolicy46PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy46PoolnameOutput)
}

// FirewallPolicy46PoolnameArrayInput is an input type that accepts FirewallPolicy46PoolnameArray and FirewallPolicy46PoolnameArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy46PoolnameArrayInput` via:
//
//	FirewallPolicy46PoolnameArray{ FirewallPolicy46PoolnameArgs{...} }
type FirewallPolicy46PoolnameArrayInput interface {
	pulumi.Input

	ToFirewallPolicy46PoolnameArrayOutput() FirewallPolicy46PoolnameArrayOutput
	ToFirewallPolicy46PoolnameArrayOutputWithContext(context.Context) FirewallPolicy46PoolnameArrayOutput
}

type FirewallPolicy46PoolnameArray []FirewallPolicy46PoolnameInput

func (FirewallPolicy46PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy46Poolname)(nil)).Elem()
}

func (i FirewallPolicy46PoolnameArray) ToFirewallPolicy46PoolnameArrayOutput() FirewallPolicy46PoolnameArrayOutput {
	return i.ToFirewallPolicy46PoolnameArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy46PoolnameArray) ToFirewallPolicy46PoolnameArrayOutputWithContext(ctx context.Context) FirewallPolicy46PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy46PoolnameArrayOutput)
}

type FirewallPolicy46PoolnameOutput struct{ *pulumi.OutputState }

func (FirewallPolicy46PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy46Poolname)(nil)).Elem()
}

func (o FirewallPolicy46PoolnameOutput) ToFirewallPolicy46PoolnameOutput() FirewallPolicy46PoolnameOutput {
	return o
}

func (o FirewallPolicy46PoolnameOutput) ToFirewallPolicy46PoolnameOutputWithContext(ctx context.Context) FirewallPolicy46PoolnameOutput {
	return o
}

// IP pool name.
func (o FirewallPolicy46PoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy46Poolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy46PoolnameArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy46PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy46Poolname)(nil)).Elem()
}

func (o FirewallPolicy46PoolnameArrayOutput) ToFirewallPolicy46PoolnameArrayOutput() FirewallPolicy46PoolnameArrayOutput {
	return o
}

func (o FirewallPolicy46PoolnameArrayOutput) ToFirewallPolicy46PoolnameArrayOutputWithContext(ctx context.Context) FirewallPolicy46PoolnameArrayOutput {
	return o
}

func (o FirewallPolicy46PoolnameArrayOutput) Index(i pulumi.IntInput) FirewallPolicy46PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy46Poolname {
		return vs[0].([]FirewallPolicy46Poolname)[vs[1].(int)]
	}).(FirewallPolicy46PoolnameOutput)
}

type FirewallPolicy46Service struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy46ServiceInput is an input type that accepts FirewallPolicy46ServiceArgs and FirewallPolicy46ServiceOutput values.
// You can construct a concrete instance of `FirewallPolicy46ServiceInput` via:
//
//	FirewallPolicy46ServiceArgs{...}
type FirewallPolicy46ServiceInput interface {
	pulumi.Input

	ToFirewallPolicy46ServiceOutput() FirewallPolicy46ServiceOutput
	ToFirewallPolicy46ServiceOutputWithContext(context.Context) FirewallPolicy46ServiceOutput
}

type FirewallPolicy46ServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy46ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy46Service)(nil)).Elem()
}

func (i FirewallPolicy46ServiceArgs) ToFirewallPolicy46ServiceOutput() FirewallPolicy46ServiceOutput {
	return i.ToFirewallPolicy46ServiceOutputWithContext(context.Background())
}

func (i FirewallPolicy46ServiceArgs) ToFirewallPolicy46ServiceOutputWithContext(ctx context.Context) FirewallPolicy46ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy46ServiceOutput)
}

// FirewallPolicy46ServiceArrayInput is an input type that accepts FirewallPolicy46ServiceArray and FirewallPolicy46ServiceArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy46ServiceArrayInput` via:
//
//	FirewallPolicy46ServiceArray{ FirewallPolicy46ServiceArgs{...} }
type FirewallPolicy46ServiceArrayInput interface {
	pulumi.Input

	ToFirewallPolicy46ServiceArrayOutput() FirewallPolicy46ServiceArrayOutput
	ToFirewallPolicy46ServiceArrayOutputWithContext(context.Context) FirewallPolicy46ServiceArrayOutput
}

type FirewallPolicy46ServiceArray []FirewallPolicy46ServiceInput

func (FirewallPolicy46ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy46Service)(nil)).Elem()
}

func (i FirewallPolicy46ServiceArray) ToFirewallPolicy46ServiceArrayOutput() FirewallPolicy46ServiceArrayOutput {
	return i.ToFirewallPolicy46ServiceArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy46ServiceArray) ToFirewallPolicy46ServiceArrayOutputWithContext(ctx context.Context) FirewallPolicy46ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy46ServiceArrayOutput)
}

type FirewallPolicy46ServiceOutput struct{ *pulumi.OutputState }

func (FirewallPolicy46ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy46Service)(nil)).Elem()
}

func (o FirewallPolicy46ServiceOutput) ToFirewallPolicy46ServiceOutput() FirewallPolicy46ServiceOutput {
	return o
}

func (o FirewallPolicy46ServiceOutput) ToFirewallPolicy46ServiceOutputWithContext(ctx context.Context) FirewallPolicy46ServiceOutput {
	return o
}

// Service name.
func (o FirewallPolicy46ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy46Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy46ServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy46ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy46Service)(nil)).Elem()
}

func (o FirewallPolicy46ServiceArrayOutput) ToFirewallPolicy46ServiceArrayOutput() FirewallPolicy46ServiceArrayOutput {
	return o
}

func (o FirewallPolicy46ServiceArrayOutput) ToFirewallPolicy46ServiceArrayOutputWithContext(ctx context.Context) FirewallPolicy46ServiceArrayOutput {
	return o
}

func (o FirewallPolicy46ServiceArrayOutput) Index(i pulumi.IntInput) FirewallPolicy46ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy46Service {
		return vs[0].([]FirewallPolicy46Service)[vs[1].(int)]
	}).(FirewallPolicy46ServiceOutput)
}

type FirewallPolicy46Srcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy46SrcaddrInput is an input type that accepts FirewallPolicy46SrcaddrArgs and FirewallPolicy46SrcaddrOutput values.
// You can construct a concrete instance of `FirewallPolicy46SrcaddrInput` via:
//
//	FirewallPolicy46SrcaddrArgs{...}
type FirewallPolicy46SrcaddrInput interface {
	pulumi.Input

	ToFirewallPolicy46SrcaddrOutput() FirewallPolicy46SrcaddrOutput
	ToFirewallPolicy46SrcaddrOutputWithContext(context.Context) FirewallPolicy46SrcaddrOutput
}

type FirewallPolicy46SrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy46SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy46Srcaddr)(nil)).Elem()
}

func (i FirewallPolicy46SrcaddrArgs) ToFirewallPolicy46SrcaddrOutput() FirewallPolicy46SrcaddrOutput {
	return i.ToFirewallPolicy46SrcaddrOutputWithContext(context.Background())
}

func (i FirewallPolicy46SrcaddrArgs) ToFirewallPolicy46SrcaddrOutputWithContext(ctx context.Context) FirewallPolicy46SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy46SrcaddrOutput)
}

// FirewallPolicy46SrcaddrArrayInput is an input type that accepts FirewallPolicy46SrcaddrArray and FirewallPolicy46SrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy46SrcaddrArrayInput` via:
//
//	FirewallPolicy46SrcaddrArray{ FirewallPolicy46SrcaddrArgs{...} }
type FirewallPolicy46SrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallPolicy46SrcaddrArrayOutput() FirewallPolicy46SrcaddrArrayOutput
	ToFirewallPolicy46SrcaddrArrayOutputWithContext(context.Context) FirewallPolicy46SrcaddrArrayOutput
}

type FirewallPolicy46SrcaddrArray []FirewallPolicy46SrcaddrInput

func (FirewallPolicy46SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy46Srcaddr)(nil)).Elem()
}

func (i FirewallPolicy46SrcaddrArray) ToFirewallPolicy46SrcaddrArrayOutput() FirewallPolicy46SrcaddrArrayOutput {
	return i.ToFirewallPolicy46SrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy46SrcaddrArray) ToFirewallPolicy46SrcaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy46SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy46SrcaddrArrayOutput)
}

type FirewallPolicy46SrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallPolicy46SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy46Srcaddr)(nil)).Elem()
}

func (o FirewallPolicy46SrcaddrOutput) ToFirewallPolicy46SrcaddrOutput() FirewallPolicy46SrcaddrOutput {
	return o
}

func (o FirewallPolicy46SrcaddrOutput) ToFirewallPolicy46SrcaddrOutputWithContext(ctx context.Context) FirewallPolicy46SrcaddrOutput {
	return o
}

// Address name.
func (o FirewallPolicy46SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy46Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy46SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy46SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy46Srcaddr)(nil)).Elem()
}

func (o FirewallPolicy46SrcaddrArrayOutput) ToFirewallPolicy46SrcaddrArrayOutput() FirewallPolicy46SrcaddrArrayOutput {
	return o
}

func (o FirewallPolicy46SrcaddrArrayOutput) ToFirewallPolicy46SrcaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy46SrcaddrArrayOutput {
	return o
}

func (o FirewallPolicy46SrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallPolicy46SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy46Srcaddr {
		return vs[0].([]FirewallPolicy46Srcaddr)[vs[1].(int)]
	}).(FirewallPolicy46SrcaddrOutput)
}

type FirewallPolicy64Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy64DstaddrInput is an input type that accepts FirewallPolicy64DstaddrArgs and FirewallPolicy64DstaddrOutput values.
// You can construct a concrete instance of `FirewallPolicy64DstaddrInput` via:
//
//	FirewallPolicy64DstaddrArgs{...}
type FirewallPolicy64DstaddrInput interface {
	pulumi.Input

	ToFirewallPolicy64DstaddrOutput() FirewallPolicy64DstaddrOutput
	ToFirewallPolicy64DstaddrOutputWithContext(context.Context) FirewallPolicy64DstaddrOutput
}

type FirewallPolicy64DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy64DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy64Dstaddr)(nil)).Elem()
}

func (i FirewallPolicy64DstaddrArgs) ToFirewallPolicy64DstaddrOutput() FirewallPolicy64DstaddrOutput {
	return i.ToFirewallPolicy64DstaddrOutputWithContext(context.Background())
}

func (i FirewallPolicy64DstaddrArgs) ToFirewallPolicy64DstaddrOutputWithContext(ctx context.Context) FirewallPolicy64DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64DstaddrOutput)
}

// FirewallPolicy64DstaddrArrayInput is an input type that accepts FirewallPolicy64DstaddrArray and FirewallPolicy64DstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy64DstaddrArrayInput` via:
//
//	FirewallPolicy64DstaddrArray{ FirewallPolicy64DstaddrArgs{...} }
type FirewallPolicy64DstaddrArrayInput interface {
	pulumi.Input

	ToFirewallPolicy64DstaddrArrayOutput() FirewallPolicy64DstaddrArrayOutput
	ToFirewallPolicy64DstaddrArrayOutputWithContext(context.Context) FirewallPolicy64DstaddrArrayOutput
}

type FirewallPolicy64DstaddrArray []FirewallPolicy64DstaddrInput

func (FirewallPolicy64DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy64Dstaddr)(nil)).Elem()
}

func (i FirewallPolicy64DstaddrArray) ToFirewallPolicy64DstaddrArrayOutput() FirewallPolicy64DstaddrArrayOutput {
	return i.ToFirewallPolicy64DstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy64DstaddrArray) ToFirewallPolicy64DstaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy64DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64DstaddrArrayOutput)
}

type FirewallPolicy64DstaddrOutput struct{ *pulumi.OutputState }

func (FirewallPolicy64DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy64Dstaddr)(nil)).Elem()
}

func (o FirewallPolicy64DstaddrOutput) ToFirewallPolicy64DstaddrOutput() FirewallPolicy64DstaddrOutput {
	return o
}

func (o FirewallPolicy64DstaddrOutput) ToFirewallPolicy64DstaddrOutputWithContext(ctx context.Context) FirewallPolicy64DstaddrOutput {
	return o
}

// Address name.
func (o FirewallPolicy64DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy64Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy64DstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy64DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy64Dstaddr)(nil)).Elem()
}

func (o FirewallPolicy64DstaddrArrayOutput) ToFirewallPolicy64DstaddrArrayOutput() FirewallPolicy64DstaddrArrayOutput {
	return o
}

func (o FirewallPolicy64DstaddrArrayOutput) ToFirewallPolicy64DstaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy64DstaddrArrayOutput {
	return o
}

func (o FirewallPolicy64DstaddrArrayOutput) Index(i pulumi.IntInput) FirewallPolicy64DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy64Dstaddr {
		return vs[0].([]FirewallPolicy64Dstaddr)[vs[1].(int)]
	}).(FirewallPolicy64DstaddrOutput)
}

type FirewallPolicy64Poolname struct {
	// IP pool name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy64PoolnameInput is an input type that accepts FirewallPolicy64PoolnameArgs and FirewallPolicy64PoolnameOutput values.
// You can construct a concrete instance of `FirewallPolicy64PoolnameInput` via:
//
//	FirewallPolicy64PoolnameArgs{...}
type FirewallPolicy64PoolnameInput interface {
	pulumi.Input

	ToFirewallPolicy64PoolnameOutput() FirewallPolicy64PoolnameOutput
	ToFirewallPolicy64PoolnameOutputWithContext(context.Context) FirewallPolicy64PoolnameOutput
}

type FirewallPolicy64PoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy64PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy64Poolname)(nil)).Elem()
}

func (i FirewallPolicy64PoolnameArgs) ToFirewallPolicy64PoolnameOutput() FirewallPolicy64PoolnameOutput {
	return i.ToFirewallPolicy64PoolnameOutputWithContext(context.Background())
}

func (i FirewallPolicy64PoolnameArgs) ToFirewallPolicy64PoolnameOutputWithContext(ctx context.Context) FirewallPolicy64PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64PoolnameOutput)
}

// FirewallPolicy64PoolnameArrayInput is an input type that accepts FirewallPolicy64PoolnameArray and FirewallPolicy64PoolnameArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy64PoolnameArrayInput` via:
//
//	FirewallPolicy64PoolnameArray{ FirewallPolicy64PoolnameArgs{...} }
type FirewallPolicy64PoolnameArrayInput interface {
	pulumi.Input

	ToFirewallPolicy64PoolnameArrayOutput() FirewallPolicy64PoolnameArrayOutput
	ToFirewallPolicy64PoolnameArrayOutputWithContext(context.Context) FirewallPolicy64PoolnameArrayOutput
}

type FirewallPolicy64PoolnameArray []FirewallPolicy64PoolnameInput

func (FirewallPolicy64PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy64Poolname)(nil)).Elem()
}

func (i FirewallPolicy64PoolnameArray) ToFirewallPolicy64PoolnameArrayOutput() FirewallPolicy64PoolnameArrayOutput {
	return i.ToFirewallPolicy64PoolnameArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy64PoolnameArray) ToFirewallPolicy64PoolnameArrayOutputWithContext(ctx context.Context) FirewallPolicy64PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64PoolnameArrayOutput)
}

type FirewallPolicy64PoolnameOutput struct{ *pulumi.OutputState }

func (FirewallPolicy64PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy64Poolname)(nil)).Elem()
}

func (o FirewallPolicy64PoolnameOutput) ToFirewallPolicy64PoolnameOutput() FirewallPolicy64PoolnameOutput {
	return o
}

func (o FirewallPolicy64PoolnameOutput) ToFirewallPolicy64PoolnameOutputWithContext(ctx context.Context) FirewallPolicy64PoolnameOutput {
	return o
}

// IP pool name.
func (o FirewallPolicy64PoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy64Poolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy64PoolnameArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy64PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy64Poolname)(nil)).Elem()
}

func (o FirewallPolicy64PoolnameArrayOutput) ToFirewallPolicy64PoolnameArrayOutput() FirewallPolicy64PoolnameArrayOutput {
	return o
}

func (o FirewallPolicy64PoolnameArrayOutput) ToFirewallPolicy64PoolnameArrayOutputWithContext(ctx context.Context) FirewallPolicy64PoolnameArrayOutput {
	return o
}

func (o FirewallPolicy64PoolnameArrayOutput) Index(i pulumi.IntInput) FirewallPolicy64PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy64Poolname {
		return vs[0].([]FirewallPolicy64Poolname)[vs[1].(int)]
	}).(FirewallPolicy64PoolnameOutput)
}

type FirewallPolicy64Service struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy64ServiceInput is an input type that accepts FirewallPolicy64ServiceArgs and FirewallPolicy64ServiceOutput values.
// You can construct a concrete instance of `FirewallPolicy64ServiceInput` via:
//
//	FirewallPolicy64ServiceArgs{...}
type FirewallPolicy64ServiceInput interface {
	pulumi.Input

	ToFirewallPolicy64ServiceOutput() FirewallPolicy64ServiceOutput
	ToFirewallPolicy64ServiceOutputWithContext(context.Context) FirewallPolicy64ServiceOutput
}

type FirewallPolicy64ServiceArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy64ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy64Service)(nil)).Elem()
}

func (i FirewallPolicy64ServiceArgs) ToFirewallPolicy64ServiceOutput() FirewallPolicy64ServiceOutput {
	return i.ToFirewallPolicy64ServiceOutputWithContext(context.Background())
}

func (i FirewallPolicy64ServiceArgs) ToFirewallPolicy64ServiceOutputWithContext(ctx context.Context) FirewallPolicy64ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64ServiceOutput)
}

// FirewallPolicy64ServiceArrayInput is an input type that accepts FirewallPolicy64ServiceArray and FirewallPolicy64ServiceArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy64ServiceArrayInput` via:
//
//	FirewallPolicy64ServiceArray{ FirewallPolicy64ServiceArgs{...} }
type FirewallPolicy64ServiceArrayInput interface {
	pulumi.Input

	ToFirewallPolicy64ServiceArrayOutput() FirewallPolicy64ServiceArrayOutput
	ToFirewallPolicy64ServiceArrayOutputWithContext(context.Context) FirewallPolicy64ServiceArrayOutput
}

type FirewallPolicy64ServiceArray []FirewallPolicy64ServiceInput

func (FirewallPolicy64ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy64Service)(nil)).Elem()
}

func (i FirewallPolicy64ServiceArray) ToFirewallPolicy64ServiceArrayOutput() FirewallPolicy64ServiceArrayOutput {
	return i.ToFirewallPolicy64ServiceArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy64ServiceArray) ToFirewallPolicy64ServiceArrayOutputWithContext(ctx context.Context) FirewallPolicy64ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64ServiceArrayOutput)
}

type FirewallPolicy64ServiceOutput struct{ *pulumi.OutputState }

func (FirewallPolicy64ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy64Service)(nil)).Elem()
}

func (o FirewallPolicy64ServiceOutput) ToFirewallPolicy64ServiceOutput() FirewallPolicy64ServiceOutput {
	return o
}

func (o FirewallPolicy64ServiceOutput) ToFirewallPolicy64ServiceOutputWithContext(ctx context.Context) FirewallPolicy64ServiceOutput {
	return o
}

// Address name.
func (o FirewallPolicy64ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy64Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy64ServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy64ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy64Service)(nil)).Elem()
}

func (o FirewallPolicy64ServiceArrayOutput) ToFirewallPolicy64ServiceArrayOutput() FirewallPolicy64ServiceArrayOutput {
	return o
}

func (o FirewallPolicy64ServiceArrayOutput) ToFirewallPolicy64ServiceArrayOutputWithContext(ctx context.Context) FirewallPolicy64ServiceArrayOutput {
	return o
}

func (o FirewallPolicy64ServiceArrayOutput) Index(i pulumi.IntInput) FirewallPolicy64ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy64Service {
		return vs[0].([]FirewallPolicy64Service)[vs[1].(int)]
	}).(FirewallPolicy64ServiceOutput)
}

type FirewallPolicy64Srcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy64SrcaddrInput is an input type that accepts FirewallPolicy64SrcaddrArgs and FirewallPolicy64SrcaddrOutput values.
// You can construct a concrete instance of `FirewallPolicy64SrcaddrInput` via:
//
//	FirewallPolicy64SrcaddrArgs{...}
type FirewallPolicy64SrcaddrInput interface {
	pulumi.Input

	ToFirewallPolicy64SrcaddrOutput() FirewallPolicy64SrcaddrOutput
	ToFirewallPolicy64SrcaddrOutputWithContext(context.Context) FirewallPolicy64SrcaddrOutput
}

type FirewallPolicy64SrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy64SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy64Srcaddr)(nil)).Elem()
}

func (i FirewallPolicy64SrcaddrArgs) ToFirewallPolicy64SrcaddrOutput() FirewallPolicy64SrcaddrOutput {
	return i.ToFirewallPolicy64SrcaddrOutputWithContext(context.Background())
}

func (i FirewallPolicy64SrcaddrArgs) ToFirewallPolicy64SrcaddrOutputWithContext(ctx context.Context) FirewallPolicy64SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64SrcaddrOutput)
}

// FirewallPolicy64SrcaddrArrayInput is an input type that accepts FirewallPolicy64SrcaddrArray and FirewallPolicy64SrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy64SrcaddrArrayInput` via:
//
//	FirewallPolicy64SrcaddrArray{ FirewallPolicy64SrcaddrArgs{...} }
type FirewallPolicy64SrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallPolicy64SrcaddrArrayOutput() FirewallPolicy64SrcaddrArrayOutput
	ToFirewallPolicy64SrcaddrArrayOutputWithContext(context.Context) FirewallPolicy64SrcaddrArrayOutput
}

type FirewallPolicy64SrcaddrArray []FirewallPolicy64SrcaddrInput

func (FirewallPolicy64SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy64Srcaddr)(nil)).Elem()
}

func (i FirewallPolicy64SrcaddrArray) ToFirewallPolicy64SrcaddrArrayOutput() FirewallPolicy64SrcaddrArrayOutput {
	return i.ToFirewallPolicy64SrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy64SrcaddrArray) ToFirewallPolicy64SrcaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy64SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64SrcaddrArrayOutput)
}

type FirewallPolicy64SrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallPolicy64SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy64Srcaddr)(nil)).Elem()
}

func (o FirewallPolicy64SrcaddrOutput) ToFirewallPolicy64SrcaddrOutput() FirewallPolicy64SrcaddrOutput {
	return o
}

func (o FirewallPolicy64SrcaddrOutput) ToFirewallPolicy64SrcaddrOutputWithContext(ctx context.Context) FirewallPolicy64SrcaddrOutput {
	return o
}

// Address name.
func (o FirewallPolicy64SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy64Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy64SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy64SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy64Srcaddr)(nil)).Elem()
}

func (o FirewallPolicy64SrcaddrArrayOutput) ToFirewallPolicy64SrcaddrArrayOutput() FirewallPolicy64SrcaddrArrayOutput {
	return o
}

func (o FirewallPolicy64SrcaddrArrayOutput) ToFirewallPolicy64SrcaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy64SrcaddrArrayOutput {
	return o
}

func (o FirewallPolicy64SrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallPolicy64SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy64Srcaddr {
		return vs[0].([]FirewallPolicy64Srcaddr)[vs[1].(int)]
	}).(FirewallPolicy64SrcaddrOutput)
}

type FirewallPolicy6AppCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// FirewallPolicy6AppCategoryInput is an input type that accepts FirewallPolicy6AppCategoryArgs and FirewallPolicy6AppCategoryOutput values.
// You can construct a concrete instance of `FirewallPolicy6AppCategoryInput` via:
//
//	FirewallPolicy6AppCategoryArgs{...}
type FirewallPolicy6AppCategoryInput interface {
	pulumi.Input

	ToFirewallPolicy6AppCategoryOutput() FirewallPolicy6AppCategoryOutput
	ToFirewallPolicy6AppCategoryOutputWithContext(context.Context) FirewallPolicy6AppCategoryOutput
}

type FirewallPolicy6AppCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallPolicy6AppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6AppCategory)(nil)).Elem()
}

func (i FirewallPolicy6AppCategoryArgs) ToFirewallPolicy6AppCategoryOutput() FirewallPolicy6AppCategoryOutput {
	return i.ToFirewallPolicy6AppCategoryOutputWithContext(context.Background())
}

func (i FirewallPolicy6AppCategoryArgs) ToFirewallPolicy6AppCategoryOutputWithContext(ctx context.Context) FirewallPolicy6AppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6AppCategoryOutput)
}

// FirewallPolicy6AppCategoryArrayInput is an input type that accepts FirewallPolicy6AppCategoryArray and FirewallPolicy6AppCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6AppCategoryArrayInput` via:
//
//	FirewallPolicy6AppCategoryArray{ FirewallPolicy6AppCategoryArgs{...} }
type FirewallPolicy6AppCategoryArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6AppCategoryArrayOutput() FirewallPolicy6AppCategoryArrayOutput
	ToFirewallPolicy6AppCategoryArrayOutputWithContext(context.Context) FirewallPolicy6AppCategoryArrayOutput
}

type FirewallPolicy6AppCategoryArray []FirewallPolicy6AppCategoryInput

func (FirewallPolicy6AppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6AppCategory)(nil)).Elem()
}

func (i FirewallPolicy6AppCategoryArray) ToFirewallPolicy6AppCategoryArrayOutput() FirewallPolicy6AppCategoryArrayOutput {
	return i.ToFirewallPolicy6AppCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6AppCategoryArray) ToFirewallPolicy6AppCategoryArrayOutputWithContext(ctx context.Context) FirewallPolicy6AppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6AppCategoryArrayOutput)
}

type FirewallPolicy6AppCategoryOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6AppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6AppCategory)(nil)).Elem()
}

func (o FirewallPolicy6AppCategoryOutput) ToFirewallPolicy6AppCategoryOutput() FirewallPolicy6AppCategoryOutput {
	return o
}

func (o FirewallPolicy6AppCategoryOutput) ToFirewallPolicy6AppCategoryOutputWithContext(ctx context.Context) FirewallPolicy6AppCategoryOutput {
	return o
}

// Category IDs.
func (o FirewallPolicy6AppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6AppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallPolicy6AppCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6AppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6AppCategory)(nil)).Elem()
}

func (o FirewallPolicy6AppCategoryArrayOutput) ToFirewallPolicy6AppCategoryArrayOutput() FirewallPolicy6AppCategoryArrayOutput {
	return o
}

func (o FirewallPolicy6AppCategoryArrayOutput) ToFirewallPolicy6AppCategoryArrayOutputWithContext(ctx context.Context) FirewallPolicy6AppCategoryArrayOutput {
	return o
}

func (o FirewallPolicy6AppCategoryArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6AppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6AppCategory {
		return vs[0].([]FirewallPolicy6AppCategory)[vs[1].(int)]
	}).(FirewallPolicy6AppCategoryOutput)
}

type FirewallPolicy6AppGroup struct {
	// Application group names.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6AppGroupInput is an input type that accepts FirewallPolicy6AppGroupArgs and FirewallPolicy6AppGroupOutput values.
// You can construct a concrete instance of `FirewallPolicy6AppGroupInput` via:
//
//	FirewallPolicy6AppGroupArgs{...}
type FirewallPolicy6AppGroupInput interface {
	pulumi.Input

	ToFirewallPolicy6AppGroupOutput() FirewallPolicy6AppGroupOutput
	ToFirewallPolicy6AppGroupOutputWithContext(context.Context) FirewallPolicy6AppGroupOutput
}

type FirewallPolicy6AppGroupArgs struct {
	// Application group names.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6AppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6AppGroup)(nil)).Elem()
}

func (i FirewallPolicy6AppGroupArgs) ToFirewallPolicy6AppGroupOutput() FirewallPolicy6AppGroupOutput {
	return i.ToFirewallPolicy6AppGroupOutputWithContext(context.Background())
}

func (i FirewallPolicy6AppGroupArgs) ToFirewallPolicy6AppGroupOutputWithContext(ctx context.Context) FirewallPolicy6AppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6AppGroupOutput)
}

// FirewallPolicy6AppGroupArrayInput is an input type that accepts FirewallPolicy6AppGroupArray and FirewallPolicy6AppGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6AppGroupArrayInput` via:
//
//	FirewallPolicy6AppGroupArray{ FirewallPolicy6AppGroupArgs{...} }
type FirewallPolicy6AppGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6AppGroupArrayOutput() FirewallPolicy6AppGroupArrayOutput
	ToFirewallPolicy6AppGroupArrayOutputWithContext(context.Context) FirewallPolicy6AppGroupArrayOutput
}

type FirewallPolicy6AppGroupArray []FirewallPolicy6AppGroupInput

func (FirewallPolicy6AppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6AppGroup)(nil)).Elem()
}

func (i FirewallPolicy6AppGroupArray) ToFirewallPolicy6AppGroupArrayOutput() FirewallPolicy6AppGroupArrayOutput {
	return i.ToFirewallPolicy6AppGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6AppGroupArray) ToFirewallPolicy6AppGroupArrayOutputWithContext(ctx context.Context) FirewallPolicy6AppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6AppGroupArrayOutput)
}

type FirewallPolicy6AppGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6AppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6AppGroup)(nil)).Elem()
}

func (o FirewallPolicy6AppGroupOutput) ToFirewallPolicy6AppGroupOutput() FirewallPolicy6AppGroupOutput {
	return o
}

func (o FirewallPolicy6AppGroupOutput) ToFirewallPolicy6AppGroupOutputWithContext(ctx context.Context) FirewallPolicy6AppGroupOutput {
	return o
}

// Application group names.
func (o FirewallPolicy6AppGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6AppGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6AppGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6AppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6AppGroup)(nil)).Elem()
}

func (o FirewallPolicy6AppGroupArrayOutput) ToFirewallPolicy6AppGroupArrayOutput() FirewallPolicy6AppGroupArrayOutput {
	return o
}

func (o FirewallPolicy6AppGroupArrayOutput) ToFirewallPolicy6AppGroupArrayOutputWithContext(ctx context.Context) FirewallPolicy6AppGroupArrayOutput {
	return o
}

func (o FirewallPolicy6AppGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6AppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6AppGroup {
		return vs[0].([]FirewallPolicy6AppGroup)[vs[1].(int)]
	}).(FirewallPolicy6AppGroupOutput)
}

type FirewallPolicy6Application struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// FirewallPolicy6ApplicationInput is an input type that accepts FirewallPolicy6ApplicationArgs and FirewallPolicy6ApplicationOutput values.
// You can construct a concrete instance of `FirewallPolicy6ApplicationInput` via:
//
//	FirewallPolicy6ApplicationArgs{...}
type FirewallPolicy6ApplicationInput interface {
	pulumi.Input

	ToFirewallPolicy6ApplicationOutput() FirewallPolicy6ApplicationOutput
	ToFirewallPolicy6ApplicationOutputWithContext(context.Context) FirewallPolicy6ApplicationOutput
}

type FirewallPolicy6ApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallPolicy6ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Application)(nil)).Elem()
}

func (i FirewallPolicy6ApplicationArgs) ToFirewallPolicy6ApplicationOutput() FirewallPolicy6ApplicationOutput {
	return i.ToFirewallPolicy6ApplicationOutputWithContext(context.Background())
}

func (i FirewallPolicy6ApplicationArgs) ToFirewallPolicy6ApplicationOutputWithContext(ctx context.Context) FirewallPolicy6ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6ApplicationOutput)
}

// FirewallPolicy6ApplicationArrayInput is an input type that accepts FirewallPolicy6ApplicationArray and FirewallPolicy6ApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6ApplicationArrayInput` via:
//
//	FirewallPolicy6ApplicationArray{ FirewallPolicy6ApplicationArgs{...} }
type FirewallPolicy6ApplicationArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6ApplicationArrayOutput() FirewallPolicy6ApplicationArrayOutput
	ToFirewallPolicy6ApplicationArrayOutputWithContext(context.Context) FirewallPolicy6ApplicationArrayOutput
}

type FirewallPolicy6ApplicationArray []FirewallPolicy6ApplicationInput

func (FirewallPolicy6ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Application)(nil)).Elem()
}

func (i FirewallPolicy6ApplicationArray) ToFirewallPolicy6ApplicationArrayOutput() FirewallPolicy6ApplicationArrayOutput {
	return i.ToFirewallPolicy6ApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6ApplicationArray) ToFirewallPolicy6ApplicationArrayOutputWithContext(ctx context.Context) FirewallPolicy6ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6ApplicationArrayOutput)
}

type FirewallPolicy6ApplicationOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Application)(nil)).Elem()
}

func (o FirewallPolicy6ApplicationOutput) ToFirewallPolicy6ApplicationOutput() FirewallPolicy6ApplicationOutput {
	return o
}

func (o FirewallPolicy6ApplicationOutput) ToFirewallPolicy6ApplicationOutputWithContext(ctx context.Context) FirewallPolicy6ApplicationOutput {
	return o
}

// Application IDs.
func (o FirewallPolicy6ApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6Application) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallPolicy6ApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Application)(nil)).Elem()
}

func (o FirewallPolicy6ApplicationArrayOutput) ToFirewallPolicy6ApplicationArrayOutput() FirewallPolicy6ApplicationArrayOutput {
	return o
}

func (o FirewallPolicy6ApplicationArrayOutput) ToFirewallPolicy6ApplicationArrayOutputWithContext(ctx context.Context) FirewallPolicy6ApplicationArrayOutput {
	return o
}

func (o FirewallPolicy6ApplicationArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6Application {
		return vs[0].([]FirewallPolicy6Application)[vs[1].(int)]
	}).(FirewallPolicy6ApplicationOutput)
}

type FirewallPolicy6CustomLogField struct {
	// Custom log field.
	FieldId *string `pulumi:"fieldId"`
}

// FirewallPolicy6CustomLogFieldInput is an input type that accepts FirewallPolicy6CustomLogFieldArgs and FirewallPolicy6CustomLogFieldOutput values.
// You can construct a concrete instance of `FirewallPolicy6CustomLogFieldInput` via:
//
//	FirewallPolicy6CustomLogFieldArgs{...}
type FirewallPolicy6CustomLogFieldInput interface {
	pulumi.Input

	ToFirewallPolicy6CustomLogFieldOutput() FirewallPolicy6CustomLogFieldOutput
	ToFirewallPolicy6CustomLogFieldOutputWithContext(context.Context) FirewallPolicy6CustomLogFieldOutput
}

type FirewallPolicy6CustomLogFieldArgs struct {
	// Custom log field.
	FieldId pulumi.StringPtrInput `pulumi:"fieldId"`
}

func (FirewallPolicy6CustomLogFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6CustomLogField)(nil)).Elem()
}

func (i FirewallPolicy6CustomLogFieldArgs) ToFirewallPolicy6CustomLogFieldOutput() FirewallPolicy6CustomLogFieldOutput {
	return i.ToFirewallPolicy6CustomLogFieldOutputWithContext(context.Background())
}

func (i FirewallPolicy6CustomLogFieldArgs) ToFirewallPolicy6CustomLogFieldOutputWithContext(ctx context.Context) FirewallPolicy6CustomLogFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6CustomLogFieldOutput)
}

// FirewallPolicy6CustomLogFieldArrayInput is an input type that accepts FirewallPolicy6CustomLogFieldArray and FirewallPolicy6CustomLogFieldArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6CustomLogFieldArrayInput` via:
//
//	FirewallPolicy6CustomLogFieldArray{ FirewallPolicy6CustomLogFieldArgs{...} }
type FirewallPolicy6CustomLogFieldArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6CustomLogFieldArrayOutput() FirewallPolicy6CustomLogFieldArrayOutput
	ToFirewallPolicy6CustomLogFieldArrayOutputWithContext(context.Context) FirewallPolicy6CustomLogFieldArrayOutput
}

type FirewallPolicy6CustomLogFieldArray []FirewallPolicy6CustomLogFieldInput

func (FirewallPolicy6CustomLogFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6CustomLogField)(nil)).Elem()
}

func (i FirewallPolicy6CustomLogFieldArray) ToFirewallPolicy6CustomLogFieldArrayOutput() FirewallPolicy6CustomLogFieldArrayOutput {
	return i.ToFirewallPolicy6CustomLogFieldArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6CustomLogFieldArray) ToFirewallPolicy6CustomLogFieldArrayOutputWithContext(ctx context.Context) FirewallPolicy6CustomLogFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6CustomLogFieldArrayOutput)
}

type FirewallPolicy6CustomLogFieldOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6CustomLogFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6CustomLogField)(nil)).Elem()
}

func (o FirewallPolicy6CustomLogFieldOutput) ToFirewallPolicy6CustomLogFieldOutput() FirewallPolicy6CustomLogFieldOutput {
	return o
}

func (o FirewallPolicy6CustomLogFieldOutput) ToFirewallPolicy6CustomLogFieldOutputWithContext(ctx context.Context) FirewallPolicy6CustomLogFieldOutput {
	return o
}

// Custom log field.
func (o FirewallPolicy6CustomLogFieldOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6CustomLogField) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6CustomLogFieldArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6CustomLogFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6CustomLogField)(nil)).Elem()
}

func (o FirewallPolicy6CustomLogFieldArrayOutput) ToFirewallPolicy6CustomLogFieldArrayOutput() FirewallPolicy6CustomLogFieldArrayOutput {
	return o
}

func (o FirewallPolicy6CustomLogFieldArrayOutput) ToFirewallPolicy6CustomLogFieldArrayOutputWithContext(ctx context.Context) FirewallPolicy6CustomLogFieldArrayOutput {
	return o
}

func (o FirewallPolicy6CustomLogFieldArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6CustomLogFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6CustomLogField {
		return vs[0].([]FirewallPolicy6CustomLogField)[vs[1].(int)]
	}).(FirewallPolicy6CustomLogFieldOutput)
}

type FirewallPolicy6Device struct {
	// Device or group name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6DeviceInput is an input type that accepts FirewallPolicy6DeviceArgs and FirewallPolicy6DeviceOutput values.
// You can construct a concrete instance of `FirewallPolicy6DeviceInput` via:
//
//	FirewallPolicy6DeviceArgs{...}
type FirewallPolicy6DeviceInput interface {
	pulumi.Input

	ToFirewallPolicy6DeviceOutput() FirewallPolicy6DeviceOutput
	ToFirewallPolicy6DeviceOutputWithContext(context.Context) FirewallPolicy6DeviceOutput
}

type FirewallPolicy6DeviceArgs struct {
	// Device or group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6DeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Device)(nil)).Elem()
}

func (i FirewallPolicy6DeviceArgs) ToFirewallPolicy6DeviceOutput() FirewallPolicy6DeviceOutput {
	return i.ToFirewallPolicy6DeviceOutputWithContext(context.Background())
}

func (i FirewallPolicy6DeviceArgs) ToFirewallPolicy6DeviceOutputWithContext(ctx context.Context) FirewallPolicy6DeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6DeviceOutput)
}

// FirewallPolicy6DeviceArrayInput is an input type that accepts FirewallPolicy6DeviceArray and FirewallPolicy6DeviceArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6DeviceArrayInput` via:
//
//	FirewallPolicy6DeviceArray{ FirewallPolicy6DeviceArgs{...} }
type FirewallPolicy6DeviceArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6DeviceArrayOutput() FirewallPolicy6DeviceArrayOutput
	ToFirewallPolicy6DeviceArrayOutputWithContext(context.Context) FirewallPolicy6DeviceArrayOutput
}

type FirewallPolicy6DeviceArray []FirewallPolicy6DeviceInput

func (FirewallPolicy6DeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Device)(nil)).Elem()
}

func (i FirewallPolicy6DeviceArray) ToFirewallPolicy6DeviceArrayOutput() FirewallPolicy6DeviceArrayOutput {
	return i.ToFirewallPolicy6DeviceArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6DeviceArray) ToFirewallPolicy6DeviceArrayOutputWithContext(ctx context.Context) FirewallPolicy6DeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6DeviceArrayOutput)
}

type FirewallPolicy6DeviceOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6DeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Device)(nil)).Elem()
}

func (o FirewallPolicy6DeviceOutput) ToFirewallPolicy6DeviceOutput() FirewallPolicy6DeviceOutput {
	return o
}

func (o FirewallPolicy6DeviceOutput) ToFirewallPolicy6DeviceOutputWithContext(ctx context.Context) FirewallPolicy6DeviceOutput {
	return o
}

// Device or group name.
func (o FirewallPolicy6DeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6Device) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6DeviceArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6DeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Device)(nil)).Elem()
}

func (o FirewallPolicy6DeviceArrayOutput) ToFirewallPolicy6DeviceArrayOutput() FirewallPolicy6DeviceArrayOutput {
	return o
}

func (o FirewallPolicy6DeviceArrayOutput) ToFirewallPolicy6DeviceArrayOutputWithContext(ctx context.Context) FirewallPolicy6DeviceArrayOutput {
	return o
}

func (o FirewallPolicy6DeviceArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6DeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6Device {
		return vs[0].([]FirewallPolicy6Device)[vs[1].(int)]
	}).(FirewallPolicy6DeviceOutput)
}

type FirewallPolicy6Dstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6DstaddrInput is an input type that accepts FirewallPolicy6DstaddrArgs and FirewallPolicy6DstaddrOutput values.
// You can construct a concrete instance of `FirewallPolicy6DstaddrInput` via:
//
//	FirewallPolicy6DstaddrArgs{...}
type FirewallPolicy6DstaddrInput interface {
	pulumi.Input

	ToFirewallPolicy6DstaddrOutput() FirewallPolicy6DstaddrOutput
	ToFirewallPolicy6DstaddrOutputWithContext(context.Context) FirewallPolicy6DstaddrOutput
}

type FirewallPolicy6DstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Dstaddr)(nil)).Elem()
}

func (i FirewallPolicy6DstaddrArgs) ToFirewallPolicy6DstaddrOutput() FirewallPolicy6DstaddrOutput {
	return i.ToFirewallPolicy6DstaddrOutputWithContext(context.Background())
}

func (i FirewallPolicy6DstaddrArgs) ToFirewallPolicy6DstaddrOutputWithContext(ctx context.Context) FirewallPolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6DstaddrOutput)
}

// FirewallPolicy6DstaddrArrayInput is an input type that accepts FirewallPolicy6DstaddrArray and FirewallPolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6DstaddrArrayInput` via:
//
//	FirewallPolicy6DstaddrArray{ FirewallPolicy6DstaddrArgs{...} }
type FirewallPolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6DstaddrArrayOutput() FirewallPolicy6DstaddrArrayOutput
	ToFirewallPolicy6DstaddrArrayOutputWithContext(context.Context) FirewallPolicy6DstaddrArrayOutput
}

type FirewallPolicy6DstaddrArray []FirewallPolicy6DstaddrInput

func (FirewallPolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Dstaddr)(nil)).Elem()
}

func (i FirewallPolicy6DstaddrArray) ToFirewallPolicy6DstaddrArrayOutput() FirewallPolicy6DstaddrArrayOutput {
	return i.ToFirewallPolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6DstaddrArray) ToFirewallPolicy6DstaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6DstaddrArrayOutput)
}

type FirewallPolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Dstaddr)(nil)).Elem()
}

func (o FirewallPolicy6DstaddrOutput) ToFirewallPolicy6DstaddrOutput() FirewallPolicy6DstaddrOutput {
	return o
}

func (o FirewallPolicy6DstaddrOutput) ToFirewallPolicy6DstaddrOutputWithContext(ctx context.Context) FirewallPolicy6DstaddrOutput {
	return o
}

// Address name.
func (o FirewallPolicy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Dstaddr)(nil)).Elem()
}

func (o FirewallPolicy6DstaddrArrayOutput) ToFirewallPolicy6DstaddrArrayOutput() FirewallPolicy6DstaddrArrayOutput {
	return o
}

func (o FirewallPolicy6DstaddrArrayOutput) ToFirewallPolicy6DstaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy6DstaddrArrayOutput {
	return o
}

func (o FirewallPolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6Dstaddr {
		return vs[0].([]FirewallPolicy6Dstaddr)[vs[1].(int)]
	}).(FirewallPolicy6DstaddrOutput)
}

type FirewallPolicy6Dstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6DstintfInput is an input type that accepts FirewallPolicy6DstintfArgs and FirewallPolicy6DstintfOutput values.
// You can construct a concrete instance of `FirewallPolicy6DstintfInput` via:
//
//	FirewallPolicy6DstintfArgs{...}
type FirewallPolicy6DstintfInput interface {
	pulumi.Input

	ToFirewallPolicy6DstintfOutput() FirewallPolicy6DstintfOutput
	ToFirewallPolicy6DstintfOutputWithContext(context.Context) FirewallPolicy6DstintfOutput
}

type FirewallPolicy6DstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6DstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Dstintf)(nil)).Elem()
}

func (i FirewallPolicy6DstintfArgs) ToFirewallPolicy6DstintfOutput() FirewallPolicy6DstintfOutput {
	return i.ToFirewallPolicy6DstintfOutputWithContext(context.Background())
}

func (i FirewallPolicy6DstintfArgs) ToFirewallPolicy6DstintfOutputWithContext(ctx context.Context) FirewallPolicy6DstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6DstintfOutput)
}

// FirewallPolicy6DstintfArrayInput is an input type that accepts FirewallPolicy6DstintfArray and FirewallPolicy6DstintfArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6DstintfArrayInput` via:
//
//	FirewallPolicy6DstintfArray{ FirewallPolicy6DstintfArgs{...} }
type FirewallPolicy6DstintfArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6DstintfArrayOutput() FirewallPolicy6DstintfArrayOutput
	ToFirewallPolicy6DstintfArrayOutputWithContext(context.Context) FirewallPolicy6DstintfArrayOutput
}

type FirewallPolicy6DstintfArray []FirewallPolicy6DstintfInput

func (FirewallPolicy6DstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Dstintf)(nil)).Elem()
}

func (i FirewallPolicy6DstintfArray) ToFirewallPolicy6DstintfArrayOutput() FirewallPolicy6DstintfArrayOutput {
	return i.ToFirewallPolicy6DstintfArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6DstintfArray) ToFirewallPolicy6DstintfArrayOutputWithContext(ctx context.Context) FirewallPolicy6DstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6DstintfArrayOutput)
}

type FirewallPolicy6DstintfOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6DstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Dstintf)(nil)).Elem()
}

func (o FirewallPolicy6DstintfOutput) ToFirewallPolicy6DstintfOutput() FirewallPolicy6DstintfOutput {
	return o
}

func (o FirewallPolicy6DstintfOutput) ToFirewallPolicy6DstintfOutputWithContext(ctx context.Context) FirewallPolicy6DstintfOutput {
	return o
}

// Interface name.
func (o FirewallPolicy6DstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6Dstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6DstintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6DstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Dstintf)(nil)).Elem()
}

func (o FirewallPolicy6DstintfArrayOutput) ToFirewallPolicy6DstintfArrayOutput() FirewallPolicy6DstintfArrayOutput {
	return o
}

func (o FirewallPolicy6DstintfArrayOutput) ToFirewallPolicy6DstintfArrayOutputWithContext(ctx context.Context) FirewallPolicy6DstintfArrayOutput {
	return o
}

func (o FirewallPolicy6DstintfArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6DstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6Dstintf {
		return vs[0].([]FirewallPolicy6Dstintf)[vs[1].(int)]
	}).(FirewallPolicy6DstintfOutput)
}

type FirewallPolicy6FssoGroup struct {
	// Names of FSSO groups.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6FssoGroupInput is an input type that accepts FirewallPolicy6FssoGroupArgs and FirewallPolicy6FssoGroupOutput values.
// You can construct a concrete instance of `FirewallPolicy6FssoGroupInput` via:
//
//	FirewallPolicy6FssoGroupArgs{...}
type FirewallPolicy6FssoGroupInput interface {
	pulumi.Input

	ToFirewallPolicy6FssoGroupOutput() FirewallPolicy6FssoGroupOutput
	ToFirewallPolicy6FssoGroupOutputWithContext(context.Context) FirewallPolicy6FssoGroupOutput
}

type FirewallPolicy6FssoGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6FssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6FssoGroup)(nil)).Elem()
}

func (i FirewallPolicy6FssoGroupArgs) ToFirewallPolicy6FssoGroupOutput() FirewallPolicy6FssoGroupOutput {
	return i.ToFirewallPolicy6FssoGroupOutputWithContext(context.Background())
}

func (i FirewallPolicy6FssoGroupArgs) ToFirewallPolicy6FssoGroupOutputWithContext(ctx context.Context) FirewallPolicy6FssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6FssoGroupOutput)
}

// FirewallPolicy6FssoGroupArrayInput is an input type that accepts FirewallPolicy6FssoGroupArray and FirewallPolicy6FssoGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6FssoGroupArrayInput` via:
//
//	FirewallPolicy6FssoGroupArray{ FirewallPolicy6FssoGroupArgs{...} }
type FirewallPolicy6FssoGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6FssoGroupArrayOutput() FirewallPolicy6FssoGroupArrayOutput
	ToFirewallPolicy6FssoGroupArrayOutputWithContext(context.Context) FirewallPolicy6FssoGroupArrayOutput
}

type FirewallPolicy6FssoGroupArray []FirewallPolicy6FssoGroupInput

func (FirewallPolicy6FssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6FssoGroup)(nil)).Elem()
}

func (i FirewallPolicy6FssoGroupArray) ToFirewallPolicy6FssoGroupArrayOutput() FirewallPolicy6FssoGroupArrayOutput {
	return i.ToFirewallPolicy6FssoGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6FssoGroupArray) ToFirewallPolicy6FssoGroupArrayOutputWithContext(ctx context.Context) FirewallPolicy6FssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6FssoGroupArrayOutput)
}

type FirewallPolicy6FssoGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6FssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6FssoGroup)(nil)).Elem()
}

func (o FirewallPolicy6FssoGroupOutput) ToFirewallPolicy6FssoGroupOutput() FirewallPolicy6FssoGroupOutput {
	return o
}

func (o FirewallPolicy6FssoGroupOutput) ToFirewallPolicy6FssoGroupOutputWithContext(ctx context.Context) FirewallPolicy6FssoGroupOutput {
	return o
}

// Names of FSSO groups.
func (o FirewallPolicy6FssoGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6FssoGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6FssoGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6FssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6FssoGroup)(nil)).Elem()
}

func (o FirewallPolicy6FssoGroupArrayOutput) ToFirewallPolicy6FssoGroupArrayOutput() FirewallPolicy6FssoGroupArrayOutput {
	return o
}

func (o FirewallPolicy6FssoGroupArrayOutput) ToFirewallPolicy6FssoGroupArrayOutputWithContext(ctx context.Context) FirewallPolicy6FssoGroupArrayOutput {
	return o
}

func (o FirewallPolicy6FssoGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6FssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6FssoGroup {
		return vs[0].([]FirewallPolicy6FssoGroup)[vs[1].(int)]
	}).(FirewallPolicy6FssoGroupOutput)
}

type FirewallPolicy6Group struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6GroupInput is an input type that accepts FirewallPolicy6GroupArgs and FirewallPolicy6GroupOutput values.
// You can construct a concrete instance of `FirewallPolicy6GroupInput` via:
//
//	FirewallPolicy6GroupArgs{...}
type FirewallPolicy6GroupInput interface {
	pulumi.Input

	ToFirewallPolicy6GroupOutput() FirewallPolicy6GroupOutput
	ToFirewallPolicy6GroupOutputWithContext(context.Context) FirewallPolicy6GroupOutput
}

type FirewallPolicy6GroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Group)(nil)).Elem()
}

func (i FirewallPolicy6GroupArgs) ToFirewallPolicy6GroupOutput() FirewallPolicy6GroupOutput {
	return i.ToFirewallPolicy6GroupOutputWithContext(context.Background())
}

func (i FirewallPolicy6GroupArgs) ToFirewallPolicy6GroupOutputWithContext(ctx context.Context) FirewallPolicy6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6GroupOutput)
}

// FirewallPolicy6GroupArrayInput is an input type that accepts FirewallPolicy6GroupArray and FirewallPolicy6GroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6GroupArrayInput` via:
//
//	FirewallPolicy6GroupArray{ FirewallPolicy6GroupArgs{...} }
type FirewallPolicy6GroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6GroupArrayOutput() FirewallPolicy6GroupArrayOutput
	ToFirewallPolicy6GroupArrayOutputWithContext(context.Context) FirewallPolicy6GroupArrayOutput
}

type FirewallPolicy6GroupArray []FirewallPolicy6GroupInput

func (FirewallPolicy6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Group)(nil)).Elem()
}

func (i FirewallPolicy6GroupArray) ToFirewallPolicy6GroupArrayOutput() FirewallPolicy6GroupArrayOutput {
	return i.ToFirewallPolicy6GroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6GroupArray) ToFirewallPolicy6GroupArrayOutputWithContext(ctx context.Context) FirewallPolicy6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6GroupArrayOutput)
}

type FirewallPolicy6GroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Group)(nil)).Elem()
}

func (o FirewallPolicy6GroupOutput) ToFirewallPolicy6GroupOutput() FirewallPolicy6GroupOutput {
	return o
}

func (o FirewallPolicy6GroupOutput) ToFirewallPolicy6GroupOutputWithContext(ctx context.Context) FirewallPolicy6GroupOutput {
	return o
}

// Group name.
func (o FirewallPolicy6GroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6Group) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6GroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Group)(nil)).Elem()
}

func (o FirewallPolicy6GroupArrayOutput) ToFirewallPolicy6GroupArrayOutput() FirewallPolicy6GroupArrayOutput {
	return o
}

func (o FirewallPolicy6GroupArrayOutput) ToFirewallPolicy6GroupArrayOutputWithContext(ctx context.Context) FirewallPolicy6GroupArrayOutput {
	return o
}

func (o FirewallPolicy6GroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6Group {
		return vs[0].([]FirewallPolicy6Group)[vs[1].(int)]
	}).(FirewallPolicy6GroupOutput)
}

type FirewallPolicy6Poolname struct {
	// IP pool name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6PoolnameInput is an input type that accepts FirewallPolicy6PoolnameArgs and FirewallPolicy6PoolnameOutput values.
// You can construct a concrete instance of `FirewallPolicy6PoolnameInput` via:
//
//	FirewallPolicy6PoolnameArgs{...}
type FirewallPolicy6PoolnameInput interface {
	pulumi.Input

	ToFirewallPolicy6PoolnameOutput() FirewallPolicy6PoolnameOutput
	ToFirewallPolicy6PoolnameOutputWithContext(context.Context) FirewallPolicy6PoolnameOutput
}

type FirewallPolicy6PoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6PoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Poolname)(nil)).Elem()
}

func (i FirewallPolicy6PoolnameArgs) ToFirewallPolicy6PoolnameOutput() FirewallPolicy6PoolnameOutput {
	return i.ToFirewallPolicy6PoolnameOutputWithContext(context.Background())
}

func (i FirewallPolicy6PoolnameArgs) ToFirewallPolicy6PoolnameOutputWithContext(ctx context.Context) FirewallPolicy6PoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6PoolnameOutput)
}

// FirewallPolicy6PoolnameArrayInput is an input type that accepts FirewallPolicy6PoolnameArray and FirewallPolicy6PoolnameArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6PoolnameArrayInput` via:
//
//	FirewallPolicy6PoolnameArray{ FirewallPolicy6PoolnameArgs{...} }
type FirewallPolicy6PoolnameArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6PoolnameArrayOutput() FirewallPolicy6PoolnameArrayOutput
	ToFirewallPolicy6PoolnameArrayOutputWithContext(context.Context) FirewallPolicy6PoolnameArrayOutput
}

type FirewallPolicy6PoolnameArray []FirewallPolicy6PoolnameInput

func (FirewallPolicy6PoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Poolname)(nil)).Elem()
}

func (i FirewallPolicy6PoolnameArray) ToFirewallPolicy6PoolnameArrayOutput() FirewallPolicy6PoolnameArrayOutput {
	return i.ToFirewallPolicy6PoolnameArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6PoolnameArray) ToFirewallPolicy6PoolnameArrayOutputWithContext(ctx context.Context) FirewallPolicy6PoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6PoolnameArrayOutput)
}

type FirewallPolicy6PoolnameOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6PoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Poolname)(nil)).Elem()
}

func (o FirewallPolicy6PoolnameOutput) ToFirewallPolicy6PoolnameOutput() FirewallPolicy6PoolnameOutput {
	return o
}

func (o FirewallPolicy6PoolnameOutput) ToFirewallPolicy6PoolnameOutputWithContext(ctx context.Context) FirewallPolicy6PoolnameOutput {
	return o
}

// IP pool name.
func (o FirewallPolicy6PoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6Poolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6PoolnameArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6PoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Poolname)(nil)).Elem()
}

func (o FirewallPolicy6PoolnameArrayOutput) ToFirewallPolicy6PoolnameArrayOutput() FirewallPolicy6PoolnameArrayOutput {
	return o
}

func (o FirewallPolicy6PoolnameArrayOutput) ToFirewallPolicy6PoolnameArrayOutputWithContext(ctx context.Context) FirewallPolicy6PoolnameArrayOutput {
	return o
}

func (o FirewallPolicy6PoolnameArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6PoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6Poolname {
		return vs[0].([]FirewallPolicy6Poolname)[vs[1].(int)]
	}).(FirewallPolicy6PoolnameOutput)
}

type FirewallPolicy6Service struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6ServiceInput is an input type that accepts FirewallPolicy6ServiceArgs and FirewallPolicy6ServiceOutput values.
// You can construct a concrete instance of `FirewallPolicy6ServiceInput` via:
//
//	FirewallPolicy6ServiceArgs{...}
type FirewallPolicy6ServiceInput interface {
	pulumi.Input

	ToFirewallPolicy6ServiceOutput() FirewallPolicy6ServiceOutput
	ToFirewallPolicy6ServiceOutputWithContext(context.Context) FirewallPolicy6ServiceOutput
}

type FirewallPolicy6ServiceArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Service)(nil)).Elem()
}

func (i FirewallPolicy6ServiceArgs) ToFirewallPolicy6ServiceOutput() FirewallPolicy6ServiceOutput {
	return i.ToFirewallPolicy6ServiceOutputWithContext(context.Background())
}

func (i FirewallPolicy6ServiceArgs) ToFirewallPolicy6ServiceOutputWithContext(ctx context.Context) FirewallPolicy6ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6ServiceOutput)
}

// FirewallPolicy6ServiceArrayInput is an input type that accepts FirewallPolicy6ServiceArray and FirewallPolicy6ServiceArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6ServiceArrayInput` via:
//
//	FirewallPolicy6ServiceArray{ FirewallPolicy6ServiceArgs{...} }
type FirewallPolicy6ServiceArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6ServiceArrayOutput() FirewallPolicy6ServiceArrayOutput
	ToFirewallPolicy6ServiceArrayOutputWithContext(context.Context) FirewallPolicy6ServiceArrayOutput
}

type FirewallPolicy6ServiceArray []FirewallPolicy6ServiceInput

func (FirewallPolicy6ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Service)(nil)).Elem()
}

func (i FirewallPolicy6ServiceArray) ToFirewallPolicy6ServiceArrayOutput() FirewallPolicy6ServiceArrayOutput {
	return i.ToFirewallPolicy6ServiceArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6ServiceArray) ToFirewallPolicy6ServiceArrayOutputWithContext(ctx context.Context) FirewallPolicy6ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6ServiceArrayOutput)
}

type FirewallPolicy6ServiceOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Service)(nil)).Elem()
}

func (o FirewallPolicy6ServiceOutput) ToFirewallPolicy6ServiceOutput() FirewallPolicy6ServiceOutput {
	return o
}

func (o FirewallPolicy6ServiceOutput) ToFirewallPolicy6ServiceOutputWithContext(ctx context.Context) FirewallPolicy6ServiceOutput {
	return o
}

// Address name.
func (o FirewallPolicy6ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6Service) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6ServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Service)(nil)).Elem()
}

func (o FirewallPolicy6ServiceArrayOutput) ToFirewallPolicy6ServiceArrayOutput() FirewallPolicy6ServiceArrayOutput {
	return o
}

func (o FirewallPolicy6ServiceArrayOutput) ToFirewallPolicy6ServiceArrayOutputWithContext(ctx context.Context) FirewallPolicy6ServiceArrayOutput {
	return o
}

func (o FirewallPolicy6ServiceArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6Service {
		return vs[0].([]FirewallPolicy6Service)[vs[1].(int)]
	}).(FirewallPolicy6ServiceOutput)
}

type FirewallPolicy6Srcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6SrcaddrInput is an input type that accepts FirewallPolicy6SrcaddrArgs and FirewallPolicy6SrcaddrOutput values.
// You can construct a concrete instance of `FirewallPolicy6SrcaddrInput` via:
//
//	FirewallPolicy6SrcaddrArgs{...}
type FirewallPolicy6SrcaddrInput interface {
	pulumi.Input

	ToFirewallPolicy6SrcaddrOutput() FirewallPolicy6SrcaddrOutput
	ToFirewallPolicy6SrcaddrOutputWithContext(context.Context) FirewallPolicy6SrcaddrOutput
}

type FirewallPolicy6SrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Srcaddr)(nil)).Elem()
}

func (i FirewallPolicy6SrcaddrArgs) ToFirewallPolicy6SrcaddrOutput() FirewallPolicy6SrcaddrOutput {
	return i.ToFirewallPolicy6SrcaddrOutputWithContext(context.Background())
}

func (i FirewallPolicy6SrcaddrArgs) ToFirewallPolicy6SrcaddrOutputWithContext(ctx context.Context) FirewallPolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6SrcaddrOutput)
}

// FirewallPolicy6SrcaddrArrayInput is an input type that accepts FirewallPolicy6SrcaddrArray and FirewallPolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6SrcaddrArrayInput` via:
//
//	FirewallPolicy6SrcaddrArray{ FirewallPolicy6SrcaddrArgs{...} }
type FirewallPolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6SrcaddrArrayOutput() FirewallPolicy6SrcaddrArrayOutput
	ToFirewallPolicy6SrcaddrArrayOutputWithContext(context.Context) FirewallPolicy6SrcaddrArrayOutput
}

type FirewallPolicy6SrcaddrArray []FirewallPolicy6SrcaddrInput

func (FirewallPolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Srcaddr)(nil)).Elem()
}

func (i FirewallPolicy6SrcaddrArray) ToFirewallPolicy6SrcaddrArrayOutput() FirewallPolicy6SrcaddrArrayOutput {
	return i.ToFirewallPolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6SrcaddrArray) ToFirewallPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6SrcaddrArrayOutput)
}

type FirewallPolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Srcaddr)(nil)).Elem()
}

func (o FirewallPolicy6SrcaddrOutput) ToFirewallPolicy6SrcaddrOutput() FirewallPolicy6SrcaddrOutput {
	return o
}

func (o FirewallPolicy6SrcaddrOutput) ToFirewallPolicy6SrcaddrOutputWithContext(ctx context.Context) FirewallPolicy6SrcaddrOutput {
	return o
}

// Address name.
func (o FirewallPolicy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Srcaddr)(nil)).Elem()
}

func (o FirewallPolicy6SrcaddrArrayOutput) ToFirewallPolicy6SrcaddrArrayOutput() FirewallPolicy6SrcaddrArrayOutput {
	return o
}

func (o FirewallPolicy6SrcaddrArrayOutput) ToFirewallPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) FirewallPolicy6SrcaddrArrayOutput {
	return o
}

func (o FirewallPolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6Srcaddr {
		return vs[0].([]FirewallPolicy6Srcaddr)[vs[1].(int)]
	}).(FirewallPolicy6SrcaddrOutput)
}

type FirewallPolicy6Srcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6SrcintfInput is an input type that accepts FirewallPolicy6SrcintfArgs and FirewallPolicy6SrcintfOutput values.
// You can construct a concrete instance of `FirewallPolicy6SrcintfInput` via:
//
//	FirewallPolicy6SrcintfArgs{...}
type FirewallPolicy6SrcintfInput interface {
	pulumi.Input

	ToFirewallPolicy6SrcintfOutput() FirewallPolicy6SrcintfOutput
	ToFirewallPolicy6SrcintfOutputWithContext(context.Context) FirewallPolicy6SrcintfOutput
}

type FirewallPolicy6SrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6SrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Srcintf)(nil)).Elem()
}

func (i FirewallPolicy6SrcintfArgs) ToFirewallPolicy6SrcintfOutput() FirewallPolicy6SrcintfOutput {
	return i.ToFirewallPolicy6SrcintfOutputWithContext(context.Background())
}

func (i FirewallPolicy6SrcintfArgs) ToFirewallPolicy6SrcintfOutputWithContext(ctx context.Context) FirewallPolicy6SrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6SrcintfOutput)
}

// FirewallPolicy6SrcintfArrayInput is an input type that accepts FirewallPolicy6SrcintfArray and FirewallPolicy6SrcintfArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6SrcintfArrayInput` via:
//
//	FirewallPolicy6SrcintfArray{ FirewallPolicy6SrcintfArgs{...} }
type FirewallPolicy6SrcintfArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6SrcintfArrayOutput() FirewallPolicy6SrcintfArrayOutput
	ToFirewallPolicy6SrcintfArrayOutputWithContext(context.Context) FirewallPolicy6SrcintfArrayOutput
}

type FirewallPolicy6SrcintfArray []FirewallPolicy6SrcintfInput

func (FirewallPolicy6SrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Srcintf)(nil)).Elem()
}

func (i FirewallPolicy6SrcintfArray) ToFirewallPolicy6SrcintfArrayOutput() FirewallPolicy6SrcintfArrayOutput {
	return i.ToFirewallPolicy6SrcintfArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6SrcintfArray) ToFirewallPolicy6SrcintfArrayOutputWithContext(ctx context.Context) FirewallPolicy6SrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6SrcintfArrayOutput)
}

type FirewallPolicy6SrcintfOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6SrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6Srcintf)(nil)).Elem()
}

func (o FirewallPolicy6SrcintfOutput) ToFirewallPolicy6SrcintfOutput() FirewallPolicy6SrcintfOutput {
	return o
}

func (o FirewallPolicy6SrcintfOutput) ToFirewallPolicy6SrcintfOutputWithContext(ctx context.Context) FirewallPolicy6SrcintfOutput {
	return o
}

// Interface name.
func (o FirewallPolicy6SrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6Srcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6SrcintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6SrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6Srcintf)(nil)).Elem()
}

func (o FirewallPolicy6SrcintfArrayOutput) ToFirewallPolicy6SrcintfArrayOutput() FirewallPolicy6SrcintfArrayOutput {
	return o
}

func (o FirewallPolicy6SrcintfArrayOutput) ToFirewallPolicy6SrcintfArrayOutputWithContext(ctx context.Context) FirewallPolicy6SrcintfArrayOutput {
	return o
}

func (o FirewallPolicy6SrcintfArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6SrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6Srcintf {
		return vs[0].([]FirewallPolicy6Srcintf)[vs[1].(int)]
	}).(FirewallPolicy6SrcintfOutput)
}

type FirewallPolicy6SslMirrorIntf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6SslMirrorIntfInput is an input type that accepts FirewallPolicy6SslMirrorIntfArgs and FirewallPolicy6SslMirrorIntfOutput values.
// You can construct a concrete instance of `FirewallPolicy6SslMirrorIntfInput` via:
//
//	FirewallPolicy6SslMirrorIntfArgs{...}
type FirewallPolicy6SslMirrorIntfInput interface {
	pulumi.Input

	ToFirewallPolicy6SslMirrorIntfOutput() FirewallPolicy6SslMirrorIntfOutput
	ToFirewallPolicy6SslMirrorIntfOutputWithContext(context.Context) FirewallPolicy6SslMirrorIntfOutput
}

type FirewallPolicy6SslMirrorIntfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6SslMirrorIntfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6SslMirrorIntf)(nil)).Elem()
}

func (i FirewallPolicy6SslMirrorIntfArgs) ToFirewallPolicy6SslMirrorIntfOutput() FirewallPolicy6SslMirrorIntfOutput {
	return i.ToFirewallPolicy6SslMirrorIntfOutputWithContext(context.Background())
}

func (i FirewallPolicy6SslMirrorIntfArgs) ToFirewallPolicy6SslMirrorIntfOutputWithContext(ctx context.Context) FirewallPolicy6SslMirrorIntfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6SslMirrorIntfOutput)
}

// FirewallPolicy6SslMirrorIntfArrayInput is an input type that accepts FirewallPolicy6SslMirrorIntfArray and FirewallPolicy6SslMirrorIntfArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6SslMirrorIntfArrayInput` via:
//
//	FirewallPolicy6SslMirrorIntfArray{ FirewallPolicy6SslMirrorIntfArgs{...} }
type FirewallPolicy6SslMirrorIntfArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6SslMirrorIntfArrayOutput() FirewallPolicy6SslMirrorIntfArrayOutput
	ToFirewallPolicy6SslMirrorIntfArrayOutputWithContext(context.Context) FirewallPolicy6SslMirrorIntfArrayOutput
}

type FirewallPolicy6SslMirrorIntfArray []FirewallPolicy6SslMirrorIntfInput

func (FirewallPolicy6SslMirrorIntfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6SslMirrorIntf)(nil)).Elem()
}

func (i FirewallPolicy6SslMirrorIntfArray) ToFirewallPolicy6SslMirrorIntfArrayOutput() FirewallPolicy6SslMirrorIntfArrayOutput {
	return i.ToFirewallPolicy6SslMirrorIntfArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6SslMirrorIntfArray) ToFirewallPolicy6SslMirrorIntfArrayOutputWithContext(ctx context.Context) FirewallPolicy6SslMirrorIntfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6SslMirrorIntfArrayOutput)
}

type FirewallPolicy6SslMirrorIntfOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6SslMirrorIntfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6SslMirrorIntf)(nil)).Elem()
}

func (o FirewallPolicy6SslMirrorIntfOutput) ToFirewallPolicy6SslMirrorIntfOutput() FirewallPolicy6SslMirrorIntfOutput {
	return o
}

func (o FirewallPolicy6SslMirrorIntfOutput) ToFirewallPolicy6SslMirrorIntfOutputWithContext(ctx context.Context) FirewallPolicy6SslMirrorIntfOutput {
	return o
}

// Interface name.
func (o FirewallPolicy6SslMirrorIntfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6SslMirrorIntf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6SslMirrorIntfArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6SslMirrorIntfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6SslMirrorIntf)(nil)).Elem()
}

func (o FirewallPolicy6SslMirrorIntfArrayOutput) ToFirewallPolicy6SslMirrorIntfArrayOutput() FirewallPolicy6SslMirrorIntfArrayOutput {
	return o
}

func (o FirewallPolicy6SslMirrorIntfArrayOutput) ToFirewallPolicy6SslMirrorIntfArrayOutputWithContext(ctx context.Context) FirewallPolicy6SslMirrorIntfArrayOutput {
	return o
}

func (o FirewallPolicy6SslMirrorIntfArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6SslMirrorIntfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6SslMirrorIntf {
		return vs[0].([]FirewallPolicy6SslMirrorIntf)[vs[1].(int)]
	}).(FirewallPolicy6SslMirrorIntfOutput)
}

type FirewallPolicy6UrlCategory struct {
	// URL category ID.
	Id *int `pulumi:"id"`
}

// FirewallPolicy6UrlCategoryInput is an input type that accepts FirewallPolicy6UrlCategoryArgs and FirewallPolicy6UrlCategoryOutput values.
// You can construct a concrete instance of `FirewallPolicy6UrlCategoryInput` via:
//
//	FirewallPolicy6UrlCategoryArgs{...}
type FirewallPolicy6UrlCategoryInput interface {
	pulumi.Input

	ToFirewallPolicy6UrlCategoryOutput() FirewallPolicy6UrlCategoryOutput
	ToFirewallPolicy6UrlCategoryOutputWithContext(context.Context) FirewallPolicy6UrlCategoryOutput
}

type FirewallPolicy6UrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallPolicy6UrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6UrlCategory)(nil)).Elem()
}

func (i FirewallPolicy6UrlCategoryArgs) ToFirewallPolicy6UrlCategoryOutput() FirewallPolicy6UrlCategoryOutput {
	return i.ToFirewallPolicy6UrlCategoryOutputWithContext(context.Background())
}

func (i FirewallPolicy6UrlCategoryArgs) ToFirewallPolicy6UrlCategoryOutputWithContext(ctx context.Context) FirewallPolicy6UrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6UrlCategoryOutput)
}

// FirewallPolicy6UrlCategoryArrayInput is an input type that accepts FirewallPolicy6UrlCategoryArray and FirewallPolicy6UrlCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6UrlCategoryArrayInput` via:
//
//	FirewallPolicy6UrlCategoryArray{ FirewallPolicy6UrlCategoryArgs{...} }
type FirewallPolicy6UrlCategoryArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6UrlCategoryArrayOutput() FirewallPolicy6UrlCategoryArrayOutput
	ToFirewallPolicy6UrlCategoryArrayOutputWithContext(context.Context) FirewallPolicy6UrlCategoryArrayOutput
}

type FirewallPolicy6UrlCategoryArray []FirewallPolicy6UrlCategoryInput

func (FirewallPolicy6UrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6UrlCategory)(nil)).Elem()
}

func (i FirewallPolicy6UrlCategoryArray) ToFirewallPolicy6UrlCategoryArrayOutput() FirewallPolicy6UrlCategoryArrayOutput {
	return i.ToFirewallPolicy6UrlCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6UrlCategoryArray) ToFirewallPolicy6UrlCategoryArrayOutputWithContext(ctx context.Context) FirewallPolicy6UrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6UrlCategoryArrayOutput)
}

type FirewallPolicy6UrlCategoryOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6UrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6UrlCategory)(nil)).Elem()
}

func (o FirewallPolicy6UrlCategoryOutput) ToFirewallPolicy6UrlCategoryOutput() FirewallPolicy6UrlCategoryOutput {
	return o
}

func (o FirewallPolicy6UrlCategoryOutput) ToFirewallPolicy6UrlCategoryOutputWithContext(ctx context.Context) FirewallPolicy6UrlCategoryOutput {
	return o
}

// URL category ID.
func (o FirewallPolicy6UrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6UrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallPolicy6UrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6UrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6UrlCategory)(nil)).Elem()
}

func (o FirewallPolicy6UrlCategoryArrayOutput) ToFirewallPolicy6UrlCategoryArrayOutput() FirewallPolicy6UrlCategoryArrayOutput {
	return o
}

func (o FirewallPolicy6UrlCategoryArrayOutput) ToFirewallPolicy6UrlCategoryArrayOutputWithContext(ctx context.Context) FirewallPolicy6UrlCategoryArrayOutput {
	return o
}

func (o FirewallPolicy6UrlCategoryArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6UrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6UrlCategory {
		return vs[0].([]FirewallPolicy6UrlCategory)[vs[1].(int)]
	}).(FirewallPolicy6UrlCategoryOutput)
}

type FirewallPolicy6User struct {
	// Names of individual users that can authenticate with this policy.
	Name *string `pulumi:"name"`
}

// FirewallPolicy6UserInput is an input type that accepts FirewallPolicy6UserArgs and FirewallPolicy6UserOutput values.
// You can construct a concrete instance of `FirewallPolicy6UserInput` via:
//
//	FirewallPolicy6UserArgs{...}
type FirewallPolicy6UserInput interface {
	pulumi.Input

	ToFirewallPolicy6UserOutput() FirewallPolicy6UserOutput
	ToFirewallPolicy6UserOutputWithContext(context.Context) FirewallPolicy6UserOutput
}

type FirewallPolicy6UserArgs struct {
	// Names of individual users that can authenticate with this policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicy6UserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6User)(nil)).Elem()
}

func (i FirewallPolicy6UserArgs) ToFirewallPolicy6UserOutput() FirewallPolicy6UserOutput {
	return i.ToFirewallPolicy6UserOutputWithContext(context.Background())
}

func (i FirewallPolicy6UserArgs) ToFirewallPolicy6UserOutputWithContext(ctx context.Context) FirewallPolicy6UserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6UserOutput)
}

// FirewallPolicy6UserArrayInput is an input type that accepts FirewallPolicy6UserArray and FirewallPolicy6UserArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6UserArrayInput` via:
//
//	FirewallPolicy6UserArray{ FirewallPolicy6UserArgs{...} }
type FirewallPolicy6UserArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6UserArrayOutput() FirewallPolicy6UserArrayOutput
	ToFirewallPolicy6UserArrayOutputWithContext(context.Context) FirewallPolicy6UserArrayOutput
}

type FirewallPolicy6UserArray []FirewallPolicy6UserInput

func (FirewallPolicy6UserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6User)(nil)).Elem()
}

func (i FirewallPolicy6UserArray) ToFirewallPolicy6UserArrayOutput() FirewallPolicy6UserArrayOutput {
	return i.ToFirewallPolicy6UserArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6UserArray) ToFirewallPolicy6UserArrayOutputWithContext(ctx context.Context) FirewallPolicy6UserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6UserArrayOutput)
}

type FirewallPolicy6UserOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy6User)(nil)).Elem()
}

func (o FirewallPolicy6UserOutput) ToFirewallPolicy6UserOutput() FirewallPolicy6UserOutput {
	return o
}

func (o FirewallPolicy6UserOutput) ToFirewallPolicy6UserOutputWithContext(ctx context.Context) FirewallPolicy6UserOutput {
	return o
}

// Names of individual users that can authenticate with this policy.
func (o FirewallPolicy6UserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicy6User) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicy6UserArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6UserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy6User)(nil)).Elem()
}

func (o FirewallPolicy6UserArrayOutput) ToFirewallPolicy6UserArrayOutput() FirewallPolicy6UserArrayOutput {
	return o
}

func (o FirewallPolicy6UserArrayOutput) ToFirewallPolicy6UserArrayOutputWithContext(ctx context.Context) FirewallPolicy6UserArrayOutput {
	return o
}

func (o FirewallPolicy6UserArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6UserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy6User {
		return vs[0].([]FirewallPolicy6User)[vs[1].(int)]
	}).(FirewallPolicy6UserOutput)
}

type FirewallPolicyAppCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// FirewallPolicyAppCategoryInput is an input type that accepts FirewallPolicyAppCategoryArgs and FirewallPolicyAppCategoryOutput values.
// You can construct a concrete instance of `FirewallPolicyAppCategoryInput` via:
//
//	FirewallPolicyAppCategoryArgs{...}
type FirewallPolicyAppCategoryInput interface {
	pulumi.Input

	ToFirewallPolicyAppCategoryOutput() FirewallPolicyAppCategoryOutput
	ToFirewallPolicyAppCategoryOutputWithContext(context.Context) FirewallPolicyAppCategoryOutput
}

type FirewallPolicyAppCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallPolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyAppCategory)(nil)).Elem()
}

func (i FirewallPolicyAppCategoryArgs) ToFirewallPolicyAppCategoryOutput() FirewallPolicyAppCategoryOutput {
	return i.ToFirewallPolicyAppCategoryOutputWithContext(context.Background())
}

func (i FirewallPolicyAppCategoryArgs) ToFirewallPolicyAppCategoryOutputWithContext(ctx context.Context) FirewallPolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyAppCategoryOutput)
}

// FirewallPolicyAppCategoryArrayInput is an input type that accepts FirewallPolicyAppCategoryArray and FirewallPolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyAppCategoryArrayInput` via:
//
//	FirewallPolicyAppCategoryArray{ FirewallPolicyAppCategoryArgs{...} }
type FirewallPolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToFirewallPolicyAppCategoryArrayOutput() FirewallPolicyAppCategoryArrayOutput
	ToFirewallPolicyAppCategoryArrayOutputWithContext(context.Context) FirewallPolicyAppCategoryArrayOutput
}

type FirewallPolicyAppCategoryArray []FirewallPolicyAppCategoryInput

func (FirewallPolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyAppCategory)(nil)).Elem()
}

func (i FirewallPolicyAppCategoryArray) ToFirewallPolicyAppCategoryArrayOutput() FirewallPolicyAppCategoryArrayOutput {
	return i.ToFirewallPolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyAppCategoryArray) ToFirewallPolicyAppCategoryArrayOutputWithContext(ctx context.Context) FirewallPolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyAppCategoryArrayOutput)
}

type FirewallPolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (FirewallPolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyAppCategory)(nil)).Elem()
}

func (o FirewallPolicyAppCategoryOutput) ToFirewallPolicyAppCategoryOutput() FirewallPolicyAppCategoryOutput {
	return o
}

func (o FirewallPolicyAppCategoryOutput) ToFirewallPolicyAppCategoryOutputWithContext(ctx context.Context) FirewallPolicyAppCategoryOutput {
	return o
}

// Category IDs.
func (o FirewallPolicyAppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyAppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallPolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyAppCategory)(nil)).Elem()
}

func (o FirewallPolicyAppCategoryArrayOutput) ToFirewallPolicyAppCategoryArrayOutput() FirewallPolicyAppCategoryArrayOutput {
	return o
}

func (o FirewallPolicyAppCategoryArrayOutput) ToFirewallPolicyAppCategoryArrayOutputWithContext(ctx context.Context) FirewallPolicyAppCategoryArrayOutput {
	return o
}

func (o FirewallPolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) FirewallPolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyAppCategory {
		return vs[0].([]FirewallPolicyAppCategory)[vs[1].(int)]
	}).(FirewallPolicyAppCategoryOutput)
}

type FirewallPolicyAppGroup struct {
	// Application group names.
	Name *string `pulumi:"name"`
}

// FirewallPolicyAppGroupInput is an input type that accepts FirewallPolicyAppGroupArgs and FirewallPolicyAppGroupOutput values.
// You can construct a concrete instance of `FirewallPolicyAppGroupInput` via:
//
//	FirewallPolicyAppGroupArgs{...}
type FirewallPolicyAppGroupInput interface {
	pulumi.Input

	ToFirewallPolicyAppGroupOutput() FirewallPolicyAppGroupOutput
	ToFirewallPolicyAppGroupOutputWithContext(context.Context) FirewallPolicyAppGroupOutput
}

type FirewallPolicyAppGroupArgs struct {
	// Application group names.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyAppGroup)(nil)).Elem()
}

func (i FirewallPolicyAppGroupArgs) ToFirewallPolicyAppGroupOutput() FirewallPolicyAppGroupOutput {
	return i.ToFirewallPolicyAppGroupOutputWithContext(context.Background())
}

func (i FirewallPolicyAppGroupArgs) ToFirewallPolicyAppGroupOutputWithContext(ctx context.Context) FirewallPolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyAppGroupOutput)
}

// FirewallPolicyAppGroupArrayInput is an input type that accepts FirewallPolicyAppGroupArray and FirewallPolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyAppGroupArrayInput` via:
//
//	FirewallPolicyAppGroupArray{ FirewallPolicyAppGroupArgs{...} }
type FirewallPolicyAppGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyAppGroupArrayOutput() FirewallPolicyAppGroupArrayOutput
	ToFirewallPolicyAppGroupArrayOutputWithContext(context.Context) FirewallPolicyAppGroupArrayOutput
}

type FirewallPolicyAppGroupArray []FirewallPolicyAppGroupInput

func (FirewallPolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyAppGroup)(nil)).Elem()
}

func (i FirewallPolicyAppGroupArray) ToFirewallPolicyAppGroupArrayOutput() FirewallPolicyAppGroupArrayOutput {
	return i.ToFirewallPolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyAppGroupArray) ToFirewallPolicyAppGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyAppGroupArrayOutput)
}

type FirewallPolicyAppGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyAppGroup)(nil)).Elem()
}

func (o FirewallPolicyAppGroupOutput) ToFirewallPolicyAppGroupOutput() FirewallPolicyAppGroupOutput {
	return o
}

func (o FirewallPolicyAppGroupOutput) ToFirewallPolicyAppGroupOutputWithContext(ctx context.Context) FirewallPolicyAppGroupOutput {
	return o
}

// Application group names.
func (o FirewallPolicyAppGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyAppGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyAppGroup)(nil)).Elem()
}

func (o FirewallPolicyAppGroupArrayOutput) ToFirewallPolicyAppGroupArrayOutput() FirewallPolicyAppGroupArrayOutput {
	return o
}

func (o FirewallPolicyAppGroupArrayOutput) ToFirewallPolicyAppGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyAppGroupArrayOutput {
	return o
}

func (o FirewallPolicyAppGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyAppGroup {
		return vs[0].([]FirewallPolicyAppGroup)[vs[1].(int)]
	}).(FirewallPolicyAppGroupOutput)
}

type FirewallPolicyApplication struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// FirewallPolicyApplicationInput is an input type that accepts FirewallPolicyApplicationArgs and FirewallPolicyApplicationOutput values.
// You can construct a concrete instance of `FirewallPolicyApplicationInput` via:
//
//	FirewallPolicyApplicationArgs{...}
type FirewallPolicyApplicationInput interface {
	pulumi.Input

	ToFirewallPolicyApplicationOutput() FirewallPolicyApplicationOutput
	ToFirewallPolicyApplicationOutputWithContext(context.Context) FirewallPolicyApplicationOutput
}

type FirewallPolicyApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallPolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyApplication)(nil)).Elem()
}

func (i FirewallPolicyApplicationArgs) ToFirewallPolicyApplicationOutput() FirewallPolicyApplicationOutput {
	return i.ToFirewallPolicyApplicationOutputWithContext(context.Background())
}

func (i FirewallPolicyApplicationArgs) ToFirewallPolicyApplicationOutputWithContext(ctx context.Context) FirewallPolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyApplicationOutput)
}

// FirewallPolicyApplicationArrayInput is an input type that accepts FirewallPolicyApplicationArray and FirewallPolicyApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyApplicationArrayInput` via:
//
//	FirewallPolicyApplicationArray{ FirewallPolicyApplicationArgs{...} }
type FirewallPolicyApplicationArrayInput interface {
	pulumi.Input

	ToFirewallPolicyApplicationArrayOutput() FirewallPolicyApplicationArrayOutput
	ToFirewallPolicyApplicationArrayOutputWithContext(context.Context) FirewallPolicyApplicationArrayOutput
}

type FirewallPolicyApplicationArray []FirewallPolicyApplicationInput

func (FirewallPolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyApplication)(nil)).Elem()
}

func (i FirewallPolicyApplicationArray) ToFirewallPolicyApplicationArrayOutput() FirewallPolicyApplicationArrayOutput {
	return i.ToFirewallPolicyApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyApplicationArray) ToFirewallPolicyApplicationArrayOutputWithContext(ctx context.Context) FirewallPolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyApplicationArrayOutput)
}

type FirewallPolicyApplicationOutput struct{ *pulumi.OutputState }

func (FirewallPolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyApplication)(nil)).Elem()
}

func (o FirewallPolicyApplicationOutput) ToFirewallPolicyApplicationOutput() FirewallPolicyApplicationOutput {
	return o
}

func (o FirewallPolicyApplicationOutput) ToFirewallPolicyApplicationOutputWithContext(ctx context.Context) FirewallPolicyApplicationOutput {
	return o
}

// Application IDs.
func (o FirewallPolicyApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallPolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyApplication)(nil)).Elem()
}

func (o FirewallPolicyApplicationArrayOutput) ToFirewallPolicyApplicationArrayOutput() FirewallPolicyApplicationArrayOutput {
	return o
}

func (o FirewallPolicyApplicationArrayOutput) ToFirewallPolicyApplicationArrayOutputWithContext(ctx context.Context) FirewallPolicyApplicationArrayOutput {
	return o
}

func (o FirewallPolicyApplicationArrayOutput) Index(i pulumi.IntInput) FirewallPolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyApplication {
		return vs[0].([]FirewallPolicyApplication)[vs[1].(int)]
	}).(FirewallPolicyApplicationOutput)
}

type FirewallPolicyCustomLogField struct {
	// Custom log field.
	FieldId *string `pulumi:"fieldId"`
}

// FirewallPolicyCustomLogFieldInput is an input type that accepts FirewallPolicyCustomLogFieldArgs and FirewallPolicyCustomLogFieldOutput values.
// You can construct a concrete instance of `FirewallPolicyCustomLogFieldInput` via:
//
//	FirewallPolicyCustomLogFieldArgs{...}
type FirewallPolicyCustomLogFieldInput interface {
	pulumi.Input

	ToFirewallPolicyCustomLogFieldOutput() FirewallPolicyCustomLogFieldOutput
	ToFirewallPolicyCustomLogFieldOutputWithContext(context.Context) FirewallPolicyCustomLogFieldOutput
}

type FirewallPolicyCustomLogFieldArgs struct {
	// Custom log field.
	FieldId pulumi.StringPtrInput `pulumi:"fieldId"`
}

func (FirewallPolicyCustomLogFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCustomLogField)(nil)).Elem()
}

func (i FirewallPolicyCustomLogFieldArgs) ToFirewallPolicyCustomLogFieldOutput() FirewallPolicyCustomLogFieldOutput {
	return i.ToFirewallPolicyCustomLogFieldOutputWithContext(context.Background())
}

func (i FirewallPolicyCustomLogFieldArgs) ToFirewallPolicyCustomLogFieldOutputWithContext(ctx context.Context) FirewallPolicyCustomLogFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCustomLogFieldOutput)
}

// FirewallPolicyCustomLogFieldArrayInput is an input type that accepts FirewallPolicyCustomLogFieldArray and FirewallPolicyCustomLogFieldArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyCustomLogFieldArrayInput` via:
//
//	FirewallPolicyCustomLogFieldArray{ FirewallPolicyCustomLogFieldArgs{...} }
type FirewallPolicyCustomLogFieldArrayInput interface {
	pulumi.Input

	ToFirewallPolicyCustomLogFieldArrayOutput() FirewallPolicyCustomLogFieldArrayOutput
	ToFirewallPolicyCustomLogFieldArrayOutputWithContext(context.Context) FirewallPolicyCustomLogFieldArrayOutput
}

type FirewallPolicyCustomLogFieldArray []FirewallPolicyCustomLogFieldInput

func (FirewallPolicyCustomLogFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyCustomLogField)(nil)).Elem()
}

func (i FirewallPolicyCustomLogFieldArray) ToFirewallPolicyCustomLogFieldArrayOutput() FirewallPolicyCustomLogFieldArrayOutput {
	return i.ToFirewallPolicyCustomLogFieldArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyCustomLogFieldArray) ToFirewallPolicyCustomLogFieldArrayOutputWithContext(ctx context.Context) FirewallPolicyCustomLogFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCustomLogFieldArrayOutput)
}

type FirewallPolicyCustomLogFieldOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCustomLogFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCustomLogField)(nil)).Elem()
}

func (o FirewallPolicyCustomLogFieldOutput) ToFirewallPolicyCustomLogFieldOutput() FirewallPolicyCustomLogFieldOutput {
	return o
}

func (o FirewallPolicyCustomLogFieldOutput) ToFirewallPolicyCustomLogFieldOutputWithContext(ctx context.Context) FirewallPolicyCustomLogFieldOutput {
	return o
}

// Custom log field.
func (o FirewallPolicyCustomLogFieldOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyCustomLogField) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

type FirewallPolicyCustomLogFieldArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCustomLogFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyCustomLogField)(nil)).Elem()
}

func (o FirewallPolicyCustomLogFieldArrayOutput) ToFirewallPolicyCustomLogFieldArrayOutput() FirewallPolicyCustomLogFieldArrayOutput {
	return o
}

func (o FirewallPolicyCustomLogFieldArrayOutput) ToFirewallPolicyCustomLogFieldArrayOutputWithContext(ctx context.Context) FirewallPolicyCustomLogFieldArrayOutput {
	return o
}

func (o FirewallPolicyCustomLogFieldArrayOutput) Index(i pulumi.IntInput) FirewallPolicyCustomLogFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyCustomLogField {
		return vs[0].([]FirewallPolicyCustomLogField)[vs[1].(int)]
	}).(FirewallPolicyCustomLogFieldOutput)
}

type FirewallPolicyDevice struct {
	// Device or group name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyDeviceInput is an input type that accepts FirewallPolicyDeviceArgs and FirewallPolicyDeviceOutput values.
// You can construct a concrete instance of `FirewallPolicyDeviceInput` via:
//
//	FirewallPolicyDeviceArgs{...}
type FirewallPolicyDeviceInput interface {
	pulumi.Input

	ToFirewallPolicyDeviceOutput() FirewallPolicyDeviceOutput
	ToFirewallPolicyDeviceOutputWithContext(context.Context) FirewallPolicyDeviceOutput
}

type FirewallPolicyDeviceArgs struct {
	// Device or group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDevice)(nil)).Elem()
}

func (i FirewallPolicyDeviceArgs) ToFirewallPolicyDeviceOutput() FirewallPolicyDeviceOutput {
	return i.ToFirewallPolicyDeviceOutputWithContext(context.Background())
}

func (i FirewallPolicyDeviceArgs) ToFirewallPolicyDeviceOutputWithContext(ctx context.Context) FirewallPolicyDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDeviceOutput)
}

// FirewallPolicyDeviceArrayInput is an input type that accepts FirewallPolicyDeviceArray and FirewallPolicyDeviceArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyDeviceArrayInput` via:
//
//	FirewallPolicyDeviceArray{ FirewallPolicyDeviceArgs{...} }
type FirewallPolicyDeviceArrayInput interface {
	pulumi.Input

	ToFirewallPolicyDeviceArrayOutput() FirewallPolicyDeviceArrayOutput
	ToFirewallPolicyDeviceArrayOutputWithContext(context.Context) FirewallPolicyDeviceArrayOutput
}

type FirewallPolicyDeviceArray []FirewallPolicyDeviceInput

func (FirewallPolicyDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyDevice)(nil)).Elem()
}

func (i FirewallPolicyDeviceArray) ToFirewallPolicyDeviceArrayOutput() FirewallPolicyDeviceArrayOutput {
	return i.ToFirewallPolicyDeviceArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyDeviceArray) ToFirewallPolicyDeviceArrayOutputWithContext(ctx context.Context) FirewallPolicyDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDeviceArrayOutput)
}

type FirewallPolicyDeviceOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDevice)(nil)).Elem()
}

func (o FirewallPolicyDeviceOutput) ToFirewallPolicyDeviceOutput() FirewallPolicyDeviceOutput {
	return o
}

func (o FirewallPolicyDeviceOutput) ToFirewallPolicyDeviceOutputWithContext(ctx context.Context) FirewallPolicyDeviceOutput {
	return o
}

// Device or group name.
func (o FirewallPolicyDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyDeviceArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyDevice)(nil)).Elem()
}

func (o FirewallPolicyDeviceArrayOutput) ToFirewallPolicyDeviceArrayOutput() FirewallPolicyDeviceArrayOutput {
	return o
}

func (o FirewallPolicyDeviceArrayOutput) ToFirewallPolicyDeviceArrayOutputWithContext(ctx context.Context) FirewallPolicyDeviceArrayOutput {
	return o
}

func (o FirewallPolicyDeviceArrayOutput) Index(i pulumi.IntInput) FirewallPolicyDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyDevice {
		return vs[0].([]FirewallPolicyDevice)[vs[1].(int)]
	}).(FirewallPolicyDeviceOutput)
}

type FirewallPolicyDstaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyDstaddr6Input is an input type that accepts FirewallPolicyDstaddr6Args and FirewallPolicyDstaddr6Output values.
// You can construct a concrete instance of `FirewallPolicyDstaddr6Input` via:
//
//	FirewallPolicyDstaddr6Args{...}
type FirewallPolicyDstaddr6Input interface {
	pulumi.Input

	ToFirewallPolicyDstaddr6Output() FirewallPolicyDstaddr6Output
	ToFirewallPolicyDstaddr6OutputWithContext(context.Context) FirewallPolicyDstaddr6Output
}

type FirewallPolicyDstaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDstaddr6)(nil)).Elem()
}

func (i FirewallPolicyDstaddr6Args) ToFirewallPolicyDstaddr6Output() FirewallPolicyDstaddr6Output {
	return i.ToFirewallPolicyDstaddr6OutputWithContext(context.Background())
}

func (i FirewallPolicyDstaddr6Args) ToFirewallPolicyDstaddr6OutputWithContext(ctx context.Context) FirewallPolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDstaddr6Output)
}

// FirewallPolicyDstaddr6ArrayInput is an input type that accepts FirewallPolicyDstaddr6Array and FirewallPolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyDstaddr6ArrayInput` via:
//
//	FirewallPolicyDstaddr6Array{ FirewallPolicyDstaddr6Args{...} }
type FirewallPolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallPolicyDstaddr6ArrayOutput() FirewallPolicyDstaddr6ArrayOutput
	ToFirewallPolicyDstaddr6ArrayOutputWithContext(context.Context) FirewallPolicyDstaddr6ArrayOutput
}

type FirewallPolicyDstaddr6Array []FirewallPolicyDstaddr6Input

func (FirewallPolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyDstaddr6)(nil)).Elem()
}

func (i FirewallPolicyDstaddr6Array) ToFirewallPolicyDstaddr6ArrayOutput() FirewallPolicyDstaddr6ArrayOutput {
	return i.ToFirewallPolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyDstaddr6Array) ToFirewallPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) FirewallPolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDstaddr6ArrayOutput)
}

type FirewallPolicyDstaddr6Output struct{ *pulumi.OutputState }

func (FirewallPolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDstaddr6)(nil)).Elem()
}

func (o FirewallPolicyDstaddr6Output) ToFirewallPolicyDstaddr6Output() FirewallPolicyDstaddr6Output {
	return o
}

func (o FirewallPolicyDstaddr6Output) ToFirewallPolicyDstaddr6OutputWithContext(ctx context.Context) FirewallPolicyDstaddr6Output {
	return o
}

// Policy name.
func (o FirewallPolicyDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyDstaddr6)(nil)).Elem()
}

func (o FirewallPolicyDstaddr6ArrayOutput) ToFirewallPolicyDstaddr6ArrayOutput() FirewallPolicyDstaddr6ArrayOutput {
	return o
}

func (o FirewallPolicyDstaddr6ArrayOutput) ToFirewallPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) FirewallPolicyDstaddr6ArrayOutput {
	return o
}

func (o FirewallPolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallPolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyDstaddr6 {
		return vs[0].([]FirewallPolicyDstaddr6)[vs[1].(int)]
	}).(FirewallPolicyDstaddr6Output)
}

type FirewallPolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyDstaddrInput is an input type that accepts FirewallPolicyDstaddrArgs and FirewallPolicyDstaddrOutput values.
// You can construct a concrete instance of `FirewallPolicyDstaddrInput` via:
//
//	FirewallPolicyDstaddrArgs{...}
type FirewallPolicyDstaddrInput interface {
	pulumi.Input

	ToFirewallPolicyDstaddrOutput() FirewallPolicyDstaddrOutput
	ToFirewallPolicyDstaddrOutputWithContext(context.Context) FirewallPolicyDstaddrOutput
}

type FirewallPolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDstaddr)(nil)).Elem()
}

func (i FirewallPolicyDstaddrArgs) ToFirewallPolicyDstaddrOutput() FirewallPolicyDstaddrOutput {
	return i.ToFirewallPolicyDstaddrOutputWithContext(context.Background())
}

func (i FirewallPolicyDstaddrArgs) ToFirewallPolicyDstaddrOutputWithContext(ctx context.Context) FirewallPolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDstaddrOutput)
}

// FirewallPolicyDstaddrArrayInput is an input type that accepts FirewallPolicyDstaddrArray and FirewallPolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyDstaddrArrayInput` via:
//
//	FirewallPolicyDstaddrArray{ FirewallPolicyDstaddrArgs{...} }
type FirewallPolicyDstaddrArrayInput interface {
	pulumi.Input

	ToFirewallPolicyDstaddrArrayOutput() FirewallPolicyDstaddrArrayOutput
	ToFirewallPolicyDstaddrArrayOutputWithContext(context.Context) FirewallPolicyDstaddrArrayOutput
}

type FirewallPolicyDstaddrArray []FirewallPolicyDstaddrInput

func (FirewallPolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyDstaddr)(nil)).Elem()
}

func (i FirewallPolicyDstaddrArray) ToFirewallPolicyDstaddrArrayOutput() FirewallPolicyDstaddrArrayOutput {
	return i.ToFirewallPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyDstaddrArray) ToFirewallPolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallPolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDstaddrArrayOutput)
}

type FirewallPolicyDstaddrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDstaddr)(nil)).Elem()
}

func (o FirewallPolicyDstaddrOutput) ToFirewallPolicyDstaddrOutput() FirewallPolicyDstaddrOutput {
	return o
}

func (o FirewallPolicyDstaddrOutput) ToFirewallPolicyDstaddrOutputWithContext(ctx context.Context) FirewallPolicyDstaddrOutput {
	return o
}

// Address name.
func (o FirewallPolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyDstaddr)(nil)).Elem()
}

func (o FirewallPolicyDstaddrArrayOutput) ToFirewallPolicyDstaddrArrayOutput() FirewallPolicyDstaddrArrayOutput {
	return o
}

func (o FirewallPolicyDstaddrArrayOutput) ToFirewallPolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallPolicyDstaddrArrayOutput {
	return o
}

func (o FirewallPolicyDstaddrArrayOutput) Index(i pulumi.IntInput) FirewallPolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyDstaddr {
		return vs[0].([]FirewallPolicyDstaddr)[vs[1].(int)]
	}).(FirewallPolicyDstaddrOutput)
}

type FirewallPolicyDstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyDstintfInput is an input type that accepts FirewallPolicyDstintfArgs and FirewallPolicyDstintfOutput values.
// You can construct a concrete instance of `FirewallPolicyDstintfInput` via:
//
//	FirewallPolicyDstintfArgs{...}
type FirewallPolicyDstintfInput interface {
	pulumi.Input

	ToFirewallPolicyDstintfOutput() FirewallPolicyDstintfOutput
	ToFirewallPolicyDstintfOutputWithContext(context.Context) FirewallPolicyDstintfOutput
}

type FirewallPolicyDstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDstintf)(nil)).Elem()
}

func (i FirewallPolicyDstintfArgs) ToFirewallPolicyDstintfOutput() FirewallPolicyDstintfOutput {
	return i.ToFirewallPolicyDstintfOutputWithContext(context.Background())
}

func (i FirewallPolicyDstintfArgs) ToFirewallPolicyDstintfOutputWithContext(ctx context.Context) FirewallPolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDstintfOutput)
}

// FirewallPolicyDstintfArrayInput is an input type that accepts FirewallPolicyDstintfArray and FirewallPolicyDstintfArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyDstintfArrayInput` via:
//
//	FirewallPolicyDstintfArray{ FirewallPolicyDstintfArgs{...} }
type FirewallPolicyDstintfArrayInput interface {
	pulumi.Input

	ToFirewallPolicyDstintfArrayOutput() FirewallPolicyDstintfArrayOutput
	ToFirewallPolicyDstintfArrayOutputWithContext(context.Context) FirewallPolicyDstintfArrayOutput
}

type FirewallPolicyDstintfArray []FirewallPolicyDstintfInput

func (FirewallPolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyDstintf)(nil)).Elem()
}

func (i FirewallPolicyDstintfArray) ToFirewallPolicyDstintfArrayOutput() FirewallPolicyDstintfArrayOutput {
	return i.ToFirewallPolicyDstintfArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyDstintfArray) ToFirewallPolicyDstintfArrayOutputWithContext(ctx context.Context) FirewallPolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDstintfArrayOutput)
}

type FirewallPolicyDstintfOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDstintf)(nil)).Elem()
}

func (o FirewallPolicyDstintfOutput) ToFirewallPolicyDstintfOutput() FirewallPolicyDstintfOutput {
	return o
}

func (o FirewallPolicyDstintfOutput) ToFirewallPolicyDstintfOutputWithContext(ctx context.Context) FirewallPolicyDstintfOutput {
	return o
}

// Interface name.
func (o FirewallPolicyDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyDstintf)(nil)).Elem()
}

func (o FirewallPolicyDstintfArrayOutput) ToFirewallPolicyDstintfArrayOutput() FirewallPolicyDstintfArrayOutput {
	return o
}

func (o FirewallPolicyDstintfArrayOutput) ToFirewallPolicyDstintfArrayOutputWithContext(ctx context.Context) FirewallPolicyDstintfArrayOutput {
	return o
}

func (o FirewallPolicyDstintfArrayOutput) Index(i pulumi.IntInput) FirewallPolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyDstintf {
		return vs[0].([]FirewallPolicyDstintf)[vs[1].(int)]
	}).(FirewallPolicyDstintfOutput)
}

type FirewallPolicyFssoGroup struct {
	// Names of FSSO groups.
	Name *string `pulumi:"name"`
}

// FirewallPolicyFssoGroupInput is an input type that accepts FirewallPolicyFssoGroupArgs and FirewallPolicyFssoGroupOutput values.
// You can construct a concrete instance of `FirewallPolicyFssoGroupInput` via:
//
//	FirewallPolicyFssoGroupArgs{...}
type FirewallPolicyFssoGroupInput interface {
	pulumi.Input

	ToFirewallPolicyFssoGroupOutput() FirewallPolicyFssoGroupOutput
	ToFirewallPolicyFssoGroupOutputWithContext(context.Context) FirewallPolicyFssoGroupOutput
}

type FirewallPolicyFssoGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFssoGroup)(nil)).Elem()
}

func (i FirewallPolicyFssoGroupArgs) ToFirewallPolicyFssoGroupOutput() FirewallPolicyFssoGroupOutput {
	return i.ToFirewallPolicyFssoGroupOutputWithContext(context.Background())
}

func (i FirewallPolicyFssoGroupArgs) ToFirewallPolicyFssoGroupOutputWithContext(ctx context.Context) FirewallPolicyFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFssoGroupOutput)
}

// FirewallPolicyFssoGroupArrayInput is an input type that accepts FirewallPolicyFssoGroupArray and FirewallPolicyFssoGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyFssoGroupArrayInput` via:
//
//	FirewallPolicyFssoGroupArray{ FirewallPolicyFssoGroupArgs{...} }
type FirewallPolicyFssoGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyFssoGroupArrayOutput() FirewallPolicyFssoGroupArrayOutput
	ToFirewallPolicyFssoGroupArrayOutputWithContext(context.Context) FirewallPolicyFssoGroupArrayOutput
}

type FirewallPolicyFssoGroupArray []FirewallPolicyFssoGroupInput

func (FirewallPolicyFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyFssoGroup)(nil)).Elem()
}

func (i FirewallPolicyFssoGroupArray) ToFirewallPolicyFssoGroupArrayOutput() FirewallPolicyFssoGroupArrayOutput {
	return i.ToFirewallPolicyFssoGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyFssoGroupArray) ToFirewallPolicyFssoGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFssoGroupArrayOutput)
}

type FirewallPolicyFssoGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFssoGroup)(nil)).Elem()
}

func (o FirewallPolicyFssoGroupOutput) ToFirewallPolicyFssoGroupOutput() FirewallPolicyFssoGroupOutput {
	return o
}

func (o FirewallPolicyFssoGroupOutput) ToFirewallPolicyFssoGroupOutputWithContext(ctx context.Context) FirewallPolicyFssoGroupOutput {
	return o
}

// Names of FSSO groups.
func (o FirewallPolicyFssoGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFssoGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyFssoGroup)(nil)).Elem()
}

func (o FirewallPolicyFssoGroupArrayOutput) ToFirewallPolicyFssoGroupArrayOutput() FirewallPolicyFssoGroupArrayOutput {
	return o
}

func (o FirewallPolicyFssoGroupArrayOutput) ToFirewallPolicyFssoGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyFssoGroupArrayOutput {
	return o
}

func (o FirewallPolicyFssoGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyFssoGroup {
		return vs[0].([]FirewallPolicyFssoGroup)[vs[1].(int)]
	}).(FirewallPolicyFssoGroupOutput)
}

type FirewallPolicyGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyGroupInput is an input type that accepts FirewallPolicyGroupArgs and FirewallPolicyGroupOutput values.
// You can construct a concrete instance of `FirewallPolicyGroupInput` via:
//
//	FirewallPolicyGroupArgs{...}
type FirewallPolicyGroupInput interface {
	pulumi.Input

	ToFirewallPolicyGroupOutput() FirewallPolicyGroupOutput
	ToFirewallPolicyGroupOutputWithContext(context.Context) FirewallPolicyGroupOutput
}

type FirewallPolicyGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyGroup)(nil)).Elem()
}

func (i FirewallPolicyGroupArgs) ToFirewallPolicyGroupOutput() FirewallPolicyGroupOutput {
	return i.ToFirewallPolicyGroupOutputWithContext(context.Background())
}

func (i FirewallPolicyGroupArgs) ToFirewallPolicyGroupOutputWithContext(ctx context.Context) FirewallPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyGroupOutput)
}

// FirewallPolicyGroupArrayInput is an input type that accepts FirewallPolicyGroupArray and FirewallPolicyGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyGroupArrayInput` via:
//
//	FirewallPolicyGroupArray{ FirewallPolicyGroupArgs{...} }
type FirewallPolicyGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyGroupArrayOutput() FirewallPolicyGroupArrayOutput
	ToFirewallPolicyGroupArrayOutputWithContext(context.Context) FirewallPolicyGroupArrayOutput
}

type FirewallPolicyGroupArray []FirewallPolicyGroupInput

func (FirewallPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyGroup)(nil)).Elem()
}

func (i FirewallPolicyGroupArray) ToFirewallPolicyGroupArrayOutput() FirewallPolicyGroupArrayOutput {
	return i.ToFirewallPolicyGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyGroupArray) ToFirewallPolicyGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyGroupArrayOutput)
}

type FirewallPolicyGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyGroup)(nil)).Elem()
}

func (o FirewallPolicyGroupOutput) ToFirewallPolicyGroupOutput() FirewallPolicyGroupOutput {
	return o
}

func (o FirewallPolicyGroupOutput) ToFirewallPolicyGroupOutputWithContext(ctx context.Context) FirewallPolicyGroupOutput {
	return o
}

// Group name.
func (o FirewallPolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyGroup)(nil)).Elem()
}

func (o FirewallPolicyGroupArrayOutput) ToFirewallPolicyGroupArrayOutput() FirewallPolicyGroupArrayOutput {
	return o
}

func (o FirewallPolicyGroupArrayOutput) ToFirewallPolicyGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyGroupArrayOutput {
	return o
}

func (o FirewallPolicyGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyGroup {
		return vs[0].([]FirewallPolicyGroup)[vs[1].(int)]
	}).(FirewallPolicyGroupOutput)
}

type FirewallPolicyInternetService6Custom struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetService6CustomInput is an input type that accepts FirewallPolicyInternetService6CustomArgs and FirewallPolicyInternetService6CustomOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6CustomInput` via:
//
//	FirewallPolicyInternetService6CustomArgs{...}
type FirewallPolicyInternetService6CustomInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6CustomOutput() FirewallPolicyInternetService6CustomOutput
	ToFirewallPolicyInternetService6CustomOutputWithContext(context.Context) FirewallPolicyInternetService6CustomOutput
}

type FirewallPolicyInternetService6CustomArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetService6CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6Custom)(nil)).Elem()
}

func (i FirewallPolicyInternetService6CustomArgs) ToFirewallPolicyInternetService6CustomOutput() FirewallPolicyInternetService6CustomOutput {
	return i.ToFirewallPolicyInternetService6CustomOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6CustomArgs) ToFirewallPolicyInternetService6CustomOutputWithContext(ctx context.Context) FirewallPolicyInternetService6CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6CustomOutput)
}

// FirewallPolicyInternetService6CustomArrayInput is an input type that accepts FirewallPolicyInternetService6CustomArray and FirewallPolicyInternetService6CustomArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6CustomArrayInput` via:
//
//	FirewallPolicyInternetService6CustomArray{ FirewallPolicyInternetService6CustomArgs{...} }
type FirewallPolicyInternetService6CustomArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6CustomArrayOutput() FirewallPolicyInternetService6CustomArrayOutput
	ToFirewallPolicyInternetService6CustomArrayOutputWithContext(context.Context) FirewallPolicyInternetService6CustomArrayOutput
}

type FirewallPolicyInternetService6CustomArray []FirewallPolicyInternetService6CustomInput

func (FirewallPolicyInternetService6CustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6Custom)(nil)).Elem()
}

func (i FirewallPolicyInternetService6CustomArray) ToFirewallPolicyInternetService6CustomArrayOutput() FirewallPolicyInternetService6CustomArrayOutput {
	return i.ToFirewallPolicyInternetService6CustomArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6CustomArray) ToFirewallPolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6CustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6CustomArrayOutput)
}

type FirewallPolicyInternetService6CustomOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6Custom)(nil)).Elem()
}

func (o FirewallPolicyInternetService6CustomOutput) ToFirewallPolicyInternetService6CustomOutput() FirewallPolicyInternetService6CustomOutput {
	return o
}

func (o FirewallPolicyInternetService6CustomOutput) ToFirewallPolicyInternetService6CustomOutputWithContext(ctx context.Context) FirewallPolicyInternetService6CustomOutput {
	return o
}

// Policy name.
func (o FirewallPolicyInternetService6CustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetService6Custom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetService6CustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6CustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6Custom)(nil)).Elem()
}

func (o FirewallPolicyInternetService6CustomArrayOutput) ToFirewallPolicyInternetService6CustomArrayOutput() FirewallPolicyInternetService6CustomArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6CustomArrayOutput) ToFirewallPolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6CustomArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6CustomArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetService6CustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetService6Custom {
		return vs[0].([]FirewallPolicyInternetService6Custom)[vs[1].(int)]
	}).(FirewallPolicyInternetService6CustomOutput)
}

type FirewallPolicyInternetService6CustomGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetService6CustomGroupInput is an input type that accepts FirewallPolicyInternetService6CustomGroupArgs and FirewallPolicyInternetService6CustomGroupOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6CustomGroupInput` via:
//
//	FirewallPolicyInternetService6CustomGroupArgs{...}
type FirewallPolicyInternetService6CustomGroupInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6CustomGroupOutput() FirewallPolicyInternetService6CustomGroupOutput
	ToFirewallPolicyInternetService6CustomGroupOutputWithContext(context.Context) FirewallPolicyInternetService6CustomGroupOutput
}

type FirewallPolicyInternetService6CustomGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetService6CustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetService6CustomGroupArgs) ToFirewallPolicyInternetService6CustomGroupOutput() FirewallPolicyInternetService6CustomGroupOutput {
	return i.ToFirewallPolicyInternetService6CustomGroupOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6CustomGroupArgs) ToFirewallPolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetService6CustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6CustomGroupOutput)
}

// FirewallPolicyInternetService6CustomGroupArrayInput is an input type that accepts FirewallPolicyInternetService6CustomGroupArray and FirewallPolicyInternetService6CustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6CustomGroupArrayInput` via:
//
//	FirewallPolicyInternetService6CustomGroupArray{ FirewallPolicyInternetService6CustomGroupArgs{...} }
type FirewallPolicyInternetService6CustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6CustomGroupArrayOutput() FirewallPolicyInternetService6CustomGroupArrayOutput
	ToFirewallPolicyInternetService6CustomGroupArrayOutputWithContext(context.Context) FirewallPolicyInternetService6CustomGroupArrayOutput
}

type FirewallPolicyInternetService6CustomGroupArray []FirewallPolicyInternetService6CustomGroupInput

func (FirewallPolicyInternetService6CustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetService6CustomGroupArray) ToFirewallPolicyInternetService6CustomGroupArrayOutput() FirewallPolicyInternetService6CustomGroupArrayOutput {
	return i.ToFirewallPolicyInternetService6CustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6CustomGroupArray) ToFirewallPolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6CustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6CustomGroupArrayOutput)
}

type FirewallPolicyInternetService6CustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6CustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetService6CustomGroupOutput) ToFirewallPolicyInternetService6CustomGroupOutput() FirewallPolicyInternetService6CustomGroupOutput {
	return o
}

func (o FirewallPolicyInternetService6CustomGroupOutput) ToFirewallPolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetService6CustomGroupOutput {
	return o
}

// Policy name.
func (o FirewallPolicyInternetService6CustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetService6CustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetService6CustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6CustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetService6CustomGroupArrayOutput) ToFirewallPolicyInternetService6CustomGroupArrayOutput() FirewallPolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6CustomGroupArrayOutput) ToFirewallPolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6CustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetService6CustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetService6CustomGroup {
		return vs[0].([]FirewallPolicyInternetService6CustomGroup)[vs[1].(int)]
	}).(FirewallPolicyInternetService6CustomGroupOutput)
}

type FirewallPolicyInternetService6Group struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetService6GroupInput is an input type that accepts FirewallPolicyInternetService6GroupArgs and FirewallPolicyInternetService6GroupOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6GroupInput` via:
//
//	FirewallPolicyInternetService6GroupArgs{...}
type FirewallPolicyInternetService6GroupInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6GroupOutput() FirewallPolicyInternetService6GroupOutput
	ToFirewallPolicyInternetService6GroupOutputWithContext(context.Context) FirewallPolicyInternetService6GroupOutput
}

type FirewallPolicyInternetService6GroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetService6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6Group)(nil)).Elem()
}

func (i FirewallPolicyInternetService6GroupArgs) ToFirewallPolicyInternetService6GroupOutput() FirewallPolicyInternetService6GroupOutput {
	return i.ToFirewallPolicyInternetService6GroupOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6GroupArgs) ToFirewallPolicyInternetService6GroupOutputWithContext(ctx context.Context) FirewallPolicyInternetService6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6GroupOutput)
}

// FirewallPolicyInternetService6GroupArrayInput is an input type that accepts FirewallPolicyInternetService6GroupArray and FirewallPolicyInternetService6GroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6GroupArrayInput` via:
//
//	FirewallPolicyInternetService6GroupArray{ FirewallPolicyInternetService6GroupArgs{...} }
type FirewallPolicyInternetService6GroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6GroupArrayOutput() FirewallPolicyInternetService6GroupArrayOutput
	ToFirewallPolicyInternetService6GroupArrayOutputWithContext(context.Context) FirewallPolicyInternetService6GroupArrayOutput
}

type FirewallPolicyInternetService6GroupArray []FirewallPolicyInternetService6GroupInput

func (FirewallPolicyInternetService6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6Group)(nil)).Elem()
}

func (i FirewallPolicyInternetService6GroupArray) ToFirewallPolicyInternetService6GroupArrayOutput() FirewallPolicyInternetService6GroupArrayOutput {
	return i.ToFirewallPolicyInternetService6GroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6GroupArray) ToFirewallPolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6GroupArrayOutput)
}

type FirewallPolicyInternetService6GroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6Group)(nil)).Elem()
}

func (o FirewallPolicyInternetService6GroupOutput) ToFirewallPolicyInternetService6GroupOutput() FirewallPolicyInternetService6GroupOutput {
	return o
}

func (o FirewallPolicyInternetService6GroupOutput) ToFirewallPolicyInternetService6GroupOutputWithContext(ctx context.Context) FirewallPolicyInternetService6GroupOutput {
	return o
}

// Policy name.
func (o FirewallPolicyInternetService6GroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetService6Group) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetService6GroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6Group)(nil)).Elem()
}

func (o FirewallPolicyInternetService6GroupArrayOutput) ToFirewallPolicyInternetService6GroupArrayOutput() FirewallPolicyInternetService6GroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6GroupArrayOutput) ToFirewallPolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6GroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6GroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetService6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetService6Group {
		return vs[0].([]FirewallPolicyInternetService6Group)[vs[1].(int)]
	}).(FirewallPolicyInternetService6GroupOutput)
}

type FirewallPolicyInternetService6Name struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetService6NameInput is an input type that accepts FirewallPolicyInternetService6NameArgs and FirewallPolicyInternetService6NameOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6NameInput` via:
//
//	FirewallPolicyInternetService6NameArgs{...}
type FirewallPolicyInternetService6NameInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6NameOutput() FirewallPolicyInternetService6NameOutput
	ToFirewallPolicyInternetService6NameOutputWithContext(context.Context) FirewallPolicyInternetService6NameOutput
}

type FirewallPolicyInternetService6NameArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetService6NameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6Name)(nil)).Elem()
}

func (i FirewallPolicyInternetService6NameArgs) ToFirewallPolicyInternetService6NameOutput() FirewallPolicyInternetService6NameOutput {
	return i.ToFirewallPolicyInternetService6NameOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6NameArgs) ToFirewallPolicyInternetService6NameOutputWithContext(ctx context.Context) FirewallPolicyInternetService6NameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6NameOutput)
}

// FirewallPolicyInternetService6NameArrayInput is an input type that accepts FirewallPolicyInternetService6NameArray and FirewallPolicyInternetService6NameArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6NameArrayInput` via:
//
//	FirewallPolicyInternetService6NameArray{ FirewallPolicyInternetService6NameArgs{...} }
type FirewallPolicyInternetService6NameArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6NameArrayOutput() FirewallPolicyInternetService6NameArrayOutput
	ToFirewallPolicyInternetService6NameArrayOutputWithContext(context.Context) FirewallPolicyInternetService6NameArrayOutput
}

type FirewallPolicyInternetService6NameArray []FirewallPolicyInternetService6NameInput

func (FirewallPolicyInternetService6NameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6Name)(nil)).Elem()
}

func (i FirewallPolicyInternetService6NameArray) ToFirewallPolicyInternetService6NameArrayOutput() FirewallPolicyInternetService6NameArrayOutput {
	return i.ToFirewallPolicyInternetService6NameArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6NameArray) ToFirewallPolicyInternetService6NameArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6NameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6NameArrayOutput)
}

type FirewallPolicyInternetService6NameOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6NameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6Name)(nil)).Elem()
}

func (o FirewallPolicyInternetService6NameOutput) ToFirewallPolicyInternetService6NameOutput() FirewallPolicyInternetService6NameOutput {
	return o
}

func (o FirewallPolicyInternetService6NameOutput) ToFirewallPolicyInternetService6NameOutputWithContext(ctx context.Context) FirewallPolicyInternetService6NameOutput {
	return o
}

// Policy name.
func (o FirewallPolicyInternetService6NameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetService6Name) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetService6NameArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6NameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6Name)(nil)).Elem()
}

func (o FirewallPolicyInternetService6NameArrayOutput) ToFirewallPolicyInternetService6NameArrayOutput() FirewallPolicyInternetService6NameArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6NameArrayOutput) ToFirewallPolicyInternetService6NameArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6NameArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6NameArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetService6NameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetService6Name {
		return vs[0].([]FirewallPolicyInternetService6Name)[vs[1].(int)]
	}).(FirewallPolicyInternetService6NameOutput)
}

type FirewallPolicyInternetService6SrcCustom struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetService6SrcCustomInput is an input type that accepts FirewallPolicyInternetService6SrcCustomArgs and FirewallPolicyInternetService6SrcCustomOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6SrcCustomInput` via:
//
//	FirewallPolicyInternetService6SrcCustomArgs{...}
type FirewallPolicyInternetService6SrcCustomInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6SrcCustomOutput() FirewallPolicyInternetService6SrcCustomOutput
	ToFirewallPolicyInternetService6SrcCustomOutputWithContext(context.Context) FirewallPolicyInternetService6SrcCustomOutput
}

type FirewallPolicyInternetService6SrcCustomArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetService6SrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i FirewallPolicyInternetService6SrcCustomArgs) ToFirewallPolicyInternetService6SrcCustomOutput() FirewallPolicyInternetService6SrcCustomOutput {
	return i.ToFirewallPolicyInternetService6SrcCustomOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6SrcCustomArgs) ToFirewallPolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6SrcCustomOutput)
}

// FirewallPolicyInternetService6SrcCustomArrayInput is an input type that accepts FirewallPolicyInternetService6SrcCustomArray and FirewallPolicyInternetService6SrcCustomArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6SrcCustomArrayInput` via:
//
//	FirewallPolicyInternetService6SrcCustomArray{ FirewallPolicyInternetService6SrcCustomArgs{...} }
type FirewallPolicyInternetService6SrcCustomArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6SrcCustomArrayOutput() FirewallPolicyInternetService6SrcCustomArrayOutput
	ToFirewallPolicyInternetService6SrcCustomArrayOutputWithContext(context.Context) FirewallPolicyInternetService6SrcCustomArrayOutput
}

type FirewallPolicyInternetService6SrcCustomArray []FirewallPolicyInternetService6SrcCustomInput

func (FirewallPolicyInternetService6SrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i FirewallPolicyInternetService6SrcCustomArray) ToFirewallPolicyInternetService6SrcCustomArrayOutput() FirewallPolicyInternetService6SrcCustomArrayOutput {
	return i.ToFirewallPolicyInternetService6SrcCustomArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6SrcCustomArray) ToFirewallPolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6SrcCustomArrayOutput)
}

type FirewallPolicyInternetService6SrcCustomOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6SrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o FirewallPolicyInternetService6SrcCustomOutput) ToFirewallPolicyInternetService6SrcCustomOutput() FirewallPolicyInternetService6SrcCustomOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcCustomOutput) ToFirewallPolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcCustomOutput {
	return o
}

// Policy name.
func (o FirewallPolicyInternetService6SrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetService6SrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetService6SrcCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6SrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o FirewallPolicyInternetService6SrcCustomArrayOutput) ToFirewallPolicyInternetService6SrcCustomArrayOutput() FirewallPolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcCustomArrayOutput) ToFirewallPolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcCustomArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetService6SrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetService6SrcCustom {
		return vs[0].([]FirewallPolicyInternetService6SrcCustom)[vs[1].(int)]
	}).(FirewallPolicyInternetService6SrcCustomOutput)
}

type FirewallPolicyInternetService6SrcCustomGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetService6SrcCustomGroupInput is an input type that accepts FirewallPolicyInternetService6SrcCustomGroupArgs and FirewallPolicyInternetService6SrcCustomGroupOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6SrcCustomGroupInput` via:
//
//	FirewallPolicyInternetService6SrcCustomGroupArgs{...}
type FirewallPolicyInternetService6SrcCustomGroupInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6SrcCustomGroupOutput() FirewallPolicyInternetService6SrcCustomGroupOutput
	ToFirewallPolicyInternetService6SrcCustomGroupOutputWithContext(context.Context) FirewallPolicyInternetService6SrcCustomGroupOutput
}

type FirewallPolicyInternetService6SrcCustomGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetService6SrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetService6SrcCustomGroupArgs) ToFirewallPolicyInternetService6SrcCustomGroupOutput() FirewallPolicyInternetService6SrcCustomGroupOutput {
	return i.ToFirewallPolicyInternetService6SrcCustomGroupOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6SrcCustomGroupArgs) ToFirewallPolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6SrcCustomGroupOutput)
}

// FirewallPolicyInternetService6SrcCustomGroupArrayInput is an input type that accepts FirewallPolicyInternetService6SrcCustomGroupArray and FirewallPolicyInternetService6SrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6SrcCustomGroupArrayInput` via:
//
//	FirewallPolicyInternetService6SrcCustomGroupArray{ FirewallPolicyInternetService6SrcCustomGroupArgs{...} }
type FirewallPolicyInternetService6SrcCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6SrcCustomGroupArrayOutput() FirewallPolicyInternetService6SrcCustomGroupArrayOutput
	ToFirewallPolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Context) FirewallPolicyInternetService6SrcCustomGroupArrayOutput
}

type FirewallPolicyInternetService6SrcCustomGroupArray []FirewallPolicyInternetService6SrcCustomGroupInput

func (FirewallPolicyInternetService6SrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetService6SrcCustomGroupArray) ToFirewallPolicyInternetService6SrcCustomGroupArrayOutput() FirewallPolicyInternetService6SrcCustomGroupArrayOutput {
	return i.ToFirewallPolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6SrcCustomGroupArray) ToFirewallPolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6SrcCustomGroupArrayOutput)
}

type FirewallPolicyInternetService6SrcCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6SrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetService6SrcCustomGroupOutput) ToFirewallPolicyInternetService6SrcCustomGroupOutput() FirewallPolicyInternetService6SrcCustomGroupOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcCustomGroupOutput) ToFirewallPolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcCustomGroupOutput {
	return o
}

// Policy name.
func (o FirewallPolicyInternetService6SrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetService6SrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetService6SrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6SrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetService6SrcCustomGroupArrayOutput) ToFirewallPolicyInternetService6SrcCustomGroupArrayOutput() FirewallPolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcCustomGroupArrayOutput) ToFirewallPolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetService6SrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetService6SrcCustomGroup {
		return vs[0].([]FirewallPolicyInternetService6SrcCustomGroup)[vs[1].(int)]
	}).(FirewallPolicyInternetService6SrcCustomGroupOutput)
}

type FirewallPolicyInternetService6SrcGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetService6SrcGroupInput is an input type that accepts FirewallPolicyInternetService6SrcGroupArgs and FirewallPolicyInternetService6SrcGroupOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6SrcGroupInput` via:
//
//	FirewallPolicyInternetService6SrcGroupArgs{...}
type FirewallPolicyInternetService6SrcGroupInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6SrcGroupOutput() FirewallPolicyInternetService6SrcGroupOutput
	ToFirewallPolicyInternetService6SrcGroupOutputWithContext(context.Context) FirewallPolicyInternetService6SrcGroupOutput
}

type FirewallPolicyInternetService6SrcGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetService6SrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetService6SrcGroupArgs) ToFirewallPolicyInternetService6SrcGroupOutput() FirewallPolicyInternetService6SrcGroupOutput {
	return i.ToFirewallPolicyInternetService6SrcGroupOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6SrcGroupArgs) ToFirewallPolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6SrcGroupOutput)
}

// FirewallPolicyInternetService6SrcGroupArrayInput is an input type that accepts FirewallPolicyInternetService6SrcGroupArray and FirewallPolicyInternetService6SrcGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6SrcGroupArrayInput` via:
//
//	FirewallPolicyInternetService6SrcGroupArray{ FirewallPolicyInternetService6SrcGroupArgs{...} }
type FirewallPolicyInternetService6SrcGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6SrcGroupArrayOutput() FirewallPolicyInternetService6SrcGroupArrayOutput
	ToFirewallPolicyInternetService6SrcGroupArrayOutputWithContext(context.Context) FirewallPolicyInternetService6SrcGroupArrayOutput
}

type FirewallPolicyInternetService6SrcGroupArray []FirewallPolicyInternetService6SrcGroupInput

func (FirewallPolicyInternetService6SrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetService6SrcGroupArray) ToFirewallPolicyInternetService6SrcGroupArrayOutput() FirewallPolicyInternetService6SrcGroupArrayOutput {
	return i.ToFirewallPolicyInternetService6SrcGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6SrcGroupArray) ToFirewallPolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6SrcGroupArrayOutput)
}

type FirewallPolicyInternetService6SrcGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6SrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetService6SrcGroupOutput) ToFirewallPolicyInternetService6SrcGroupOutput() FirewallPolicyInternetService6SrcGroupOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcGroupOutput) ToFirewallPolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcGroupOutput {
	return o
}

// Policy name.
func (o FirewallPolicyInternetService6SrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetService6SrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetService6SrcGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6SrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetService6SrcGroupArrayOutput) ToFirewallPolicyInternetService6SrcGroupArrayOutput() FirewallPolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcGroupArrayOutput) ToFirewallPolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetService6SrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetService6SrcGroup {
		return vs[0].([]FirewallPolicyInternetService6SrcGroup)[vs[1].(int)]
	}).(FirewallPolicyInternetService6SrcGroupOutput)
}

type FirewallPolicyInternetService6SrcName struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetService6SrcNameInput is an input type that accepts FirewallPolicyInternetService6SrcNameArgs and FirewallPolicyInternetService6SrcNameOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6SrcNameInput` via:
//
//	FirewallPolicyInternetService6SrcNameArgs{...}
type FirewallPolicyInternetService6SrcNameInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6SrcNameOutput() FirewallPolicyInternetService6SrcNameOutput
	ToFirewallPolicyInternetService6SrcNameOutputWithContext(context.Context) FirewallPolicyInternetService6SrcNameOutput
}

type FirewallPolicyInternetService6SrcNameArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetService6SrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6SrcName)(nil)).Elem()
}

func (i FirewallPolicyInternetService6SrcNameArgs) ToFirewallPolicyInternetService6SrcNameOutput() FirewallPolicyInternetService6SrcNameOutput {
	return i.ToFirewallPolicyInternetService6SrcNameOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6SrcNameArgs) ToFirewallPolicyInternetService6SrcNameOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6SrcNameOutput)
}

// FirewallPolicyInternetService6SrcNameArrayInput is an input type that accepts FirewallPolicyInternetService6SrcNameArray and FirewallPolicyInternetService6SrcNameArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetService6SrcNameArrayInput` via:
//
//	FirewallPolicyInternetService6SrcNameArray{ FirewallPolicyInternetService6SrcNameArgs{...} }
type FirewallPolicyInternetService6SrcNameArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetService6SrcNameArrayOutput() FirewallPolicyInternetService6SrcNameArrayOutput
	ToFirewallPolicyInternetService6SrcNameArrayOutputWithContext(context.Context) FirewallPolicyInternetService6SrcNameArrayOutput
}

type FirewallPolicyInternetService6SrcNameArray []FirewallPolicyInternetService6SrcNameInput

func (FirewallPolicyInternetService6SrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6SrcName)(nil)).Elem()
}

func (i FirewallPolicyInternetService6SrcNameArray) ToFirewallPolicyInternetService6SrcNameArrayOutput() FirewallPolicyInternetService6SrcNameArrayOutput {
	return i.ToFirewallPolicyInternetService6SrcNameArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetService6SrcNameArray) ToFirewallPolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetService6SrcNameArrayOutput)
}

type FirewallPolicyInternetService6SrcNameOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6SrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetService6SrcName)(nil)).Elem()
}

func (o FirewallPolicyInternetService6SrcNameOutput) ToFirewallPolicyInternetService6SrcNameOutput() FirewallPolicyInternetService6SrcNameOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcNameOutput) ToFirewallPolicyInternetService6SrcNameOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcNameOutput {
	return o
}

// Policy name.
func (o FirewallPolicyInternetService6SrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetService6SrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetService6SrcNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetService6SrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetService6SrcName)(nil)).Elem()
}

func (o FirewallPolicyInternetService6SrcNameArrayOutput) ToFirewallPolicyInternetService6SrcNameArrayOutput() FirewallPolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcNameArrayOutput) ToFirewallPolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o FirewallPolicyInternetService6SrcNameArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetService6SrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetService6SrcName {
		return vs[0].([]FirewallPolicyInternetService6SrcName)[vs[1].(int)]
	}).(FirewallPolicyInternetService6SrcNameOutput)
}

type FirewallPolicyInternetServiceCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetServiceCustomInput is an input type that accepts FirewallPolicyInternetServiceCustomArgs and FirewallPolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceCustomInput` via:
//
//	FirewallPolicyInternetServiceCustomArgs{...}
type FirewallPolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceCustomOutput() FirewallPolicyInternetServiceCustomOutput
	ToFirewallPolicyInternetServiceCustomOutputWithContext(context.Context) FirewallPolicyInternetServiceCustomOutput
}

type FirewallPolicyInternetServiceCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceCustom)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceCustomArgs) ToFirewallPolicyInternetServiceCustomOutput() FirewallPolicyInternetServiceCustomOutput {
	return i.ToFirewallPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceCustomArgs) ToFirewallPolicyInternetServiceCustomOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceCustomOutput)
}

// FirewallPolicyInternetServiceCustomArrayInput is an input type that accepts FirewallPolicyInternetServiceCustomArray and FirewallPolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceCustomArrayInput` via:
//
//	FirewallPolicyInternetServiceCustomArray{ FirewallPolicyInternetServiceCustomArgs{...} }
type FirewallPolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceCustomArrayOutput() FirewallPolicyInternetServiceCustomArrayOutput
	ToFirewallPolicyInternetServiceCustomArrayOutputWithContext(context.Context) FirewallPolicyInternetServiceCustomArrayOutput
}

type FirewallPolicyInternetServiceCustomArray []FirewallPolicyInternetServiceCustomInput

func (FirewallPolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceCustom)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceCustomArray) ToFirewallPolicyInternetServiceCustomArrayOutput() FirewallPolicyInternetServiceCustomArrayOutput {
	return i.ToFirewallPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceCustomArray) ToFirewallPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceCustomArrayOutput)
}

type FirewallPolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceCustom)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceCustomOutput) ToFirewallPolicyInternetServiceCustomOutput() FirewallPolicyInternetServiceCustomOutput {
	return o
}

func (o FirewallPolicyInternetServiceCustomOutput) ToFirewallPolicyInternetServiceCustomOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceCustomOutput {
	return o
}

// Custom Internet Service name.
func (o FirewallPolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceCustom)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceCustomArrayOutput) ToFirewallPolicyInternetServiceCustomArrayOutput() FirewallPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceCustomArrayOutput) ToFirewallPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetServiceCustom {
		return vs[0].([]FirewallPolicyInternetServiceCustom)[vs[1].(int)]
	}).(FirewallPolicyInternetServiceCustomOutput)
}

type FirewallPolicyInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetServiceCustomGroupInput is an input type that accepts FirewallPolicyInternetServiceCustomGroupArgs and FirewallPolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceCustomGroupInput` via:
//
//	FirewallPolicyInternetServiceCustomGroupArgs{...}
type FirewallPolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceCustomGroupOutput() FirewallPolicyInternetServiceCustomGroupOutput
	ToFirewallPolicyInternetServiceCustomGroupOutputWithContext(context.Context) FirewallPolicyInternetServiceCustomGroupOutput
}

type FirewallPolicyInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceCustomGroupArgs) ToFirewallPolicyInternetServiceCustomGroupOutput() FirewallPolicyInternetServiceCustomGroupOutput {
	return i.ToFirewallPolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceCustomGroupArgs) ToFirewallPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceCustomGroupOutput)
}

// FirewallPolicyInternetServiceCustomGroupArrayInput is an input type that accepts FirewallPolicyInternetServiceCustomGroupArray and FirewallPolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceCustomGroupArrayInput` via:
//
//	FirewallPolicyInternetServiceCustomGroupArray{ FirewallPolicyInternetServiceCustomGroupArgs{...} }
type FirewallPolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceCustomGroupArrayOutput() FirewallPolicyInternetServiceCustomGroupArrayOutput
	ToFirewallPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) FirewallPolicyInternetServiceCustomGroupArrayOutput
}

type FirewallPolicyInternetServiceCustomGroupArray []FirewallPolicyInternetServiceCustomGroupInput

func (FirewallPolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceCustomGroupArray) ToFirewallPolicyInternetServiceCustomGroupArrayOutput() FirewallPolicyInternetServiceCustomGroupArrayOutput {
	return i.ToFirewallPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceCustomGroupArray) ToFirewallPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceCustomGroupArrayOutput)
}

type FirewallPolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceCustomGroupOutput) ToFirewallPolicyInternetServiceCustomGroupOutput() FirewallPolicyInternetServiceCustomGroupOutput {
	return o
}

func (o FirewallPolicyInternetServiceCustomGroupOutput) ToFirewallPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o FirewallPolicyInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceCustomGroupArrayOutput) ToFirewallPolicyInternetServiceCustomGroupArrayOutput() FirewallPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceCustomGroupArrayOutput) ToFirewallPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetServiceCustomGroup {
		return vs[0].([]FirewallPolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(FirewallPolicyInternetServiceCustomGroupOutput)
}

type FirewallPolicyInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetServiceGroupInput is an input type that accepts FirewallPolicyInternetServiceGroupArgs and FirewallPolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceGroupInput` via:
//
//	FirewallPolicyInternetServiceGroupArgs{...}
type FirewallPolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceGroupOutput() FirewallPolicyInternetServiceGroupOutput
	ToFirewallPolicyInternetServiceGroupOutputWithContext(context.Context) FirewallPolicyInternetServiceGroupOutput
}

type FirewallPolicyInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceGroupArgs) ToFirewallPolicyInternetServiceGroupOutput() FirewallPolicyInternetServiceGroupOutput {
	return i.ToFirewallPolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceGroupArgs) ToFirewallPolicyInternetServiceGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceGroupOutput)
}

// FirewallPolicyInternetServiceGroupArrayInput is an input type that accepts FirewallPolicyInternetServiceGroupArray and FirewallPolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceGroupArrayInput` via:
//
//	FirewallPolicyInternetServiceGroupArray{ FirewallPolicyInternetServiceGroupArgs{...} }
type FirewallPolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceGroupArrayOutput() FirewallPolicyInternetServiceGroupArrayOutput
	ToFirewallPolicyInternetServiceGroupArrayOutputWithContext(context.Context) FirewallPolicyInternetServiceGroupArrayOutput
}

type FirewallPolicyInternetServiceGroupArray []FirewallPolicyInternetServiceGroupInput

func (FirewallPolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceGroupArray) ToFirewallPolicyInternetServiceGroupArrayOutput() FirewallPolicyInternetServiceGroupArrayOutput {
	return i.ToFirewallPolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceGroupArray) ToFirewallPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceGroupArrayOutput)
}

type FirewallPolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceGroupOutput) ToFirewallPolicyInternetServiceGroupOutput() FirewallPolicyInternetServiceGroupOutput {
	return o
}

func (o FirewallPolicyInternetServiceGroupOutput) ToFirewallPolicyInternetServiceGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o FirewallPolicyInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceGroupArrayOutput) ToFirewallPolicyInternetServiceGroupArrayOutput() FirewallPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceGroupArrayOutput) ToFirewallPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetServiceGroup {
		return vs[0].([]FirewallPolicyInternetServiceGroup)[vs[1].(int)]
	}).(FirewallPolicyInternetServiceGroupOutput)
}

type FirewallPolicyInternetServiceId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// FirewallPolicyInternetServiceIdInput is an input type that accepts FirewallPolicyInternetServiceIdArgs and FirewallPolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceIdInput` via:
//
//	FirewallPolicyInternetServiceIdArgs{...}
type FirewallPolicyInternetServiceIdInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceIdOutput() FirewallPolicyInternetServiceIdOutput
	ToFirewallPolicyInternetServiceIdOutputWithContext(context.Context) FirewallPolicyInternetServiceIdOutput
}

type FirewallPolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallPolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceId)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceIdArgs) ToFirewallPolicyInternetServiceIdOutput() FirewallPolicyInternetServiceIdOutput {
	return i.ToFirewallPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceIdArgs) ToFirewallPolicyInternetServiceIdOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceIdOutput)
}

// FirewallPolicyInternetServiceIdArrayInput is an input type that accepts FirewallPolicyInternetServiceIdArray and FirewallPolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceIdArrayInput` via:
//
//	FirewallPolicyInternetServiceIdArray{ FirewallPolicyInternetServiceIdArgs{...} }
type FirewallPolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceIdArrayOutput() FirewallPolicyInternetServiceIdArrayOutput
	ToFirewallPolicyInternetServiceIdArrayOutputWithContext(context.Context) FirewallPolicyInternetServiceIdArrayOutput
}

type FirewallPolicyInternetServiceIdArray []FirewallPolicyInternetServiceIdInput

func (FirewallPolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceId)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceIdArray) ToFirewallPolicyInternetServiceIdArrayOutput() FirewallPolicyInternetServiceIdArrayOutput {
	return i.ToFirewallPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceIdArray) ToFirewallPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceIdArrayOutput)
}

type FirewallPolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceId)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceIdOutput) ToFirewallPolicyInternetServiceIdOutput() FirewallPolicyInternetServiceIdOutput {
	return o
}

func (o FirewallPolicyInternetServiceIdOutput) ToFirewallPolicyInternetServiceIdOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o FirewallPolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallPolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceId)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceIdArrayOutput) ToFirewallPolicyInternetServiceIdArrayOutput() FirewallPolicyInternetServiceIdArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceIdArrayOutput) ToFirewallPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceIdArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetServiceId {
		return vs[0].([]FirewallPolicyInternetServiceId)[vs[1].(int)]
	}).(FirewallPolicyInternetServiceIdOutput)
}

type FirewallPolicyInternetServiceName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetServiceNameInput is an input type that accepts FirewallPolicyInternetServiceNameArgs and FirewallPolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceNameInput` via:
//
//	FirewallPolicyInternetServiceNameArgs{...}
type FirewallPolicyInternetServiceNameInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceNameOutput() FirewallPolicyInternetServiceNameOutput
	ToFirewallPolicyInternetServiceNameOutputWithContext(context.Context) FirewallPolicyInternetServiceNameOutput
}

type FirewallPolicyInternetServiceNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceName)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceNameArgs) ToFirewallPolicyInternetServiceNameOutput() FirewallPolicyInternetServiceNameOutput {
	return i.ToFirewallPolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceNameArgs) ToFirewallPolicyInternetServiceNameOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceNameOutput)
}

// FirewallPolicyInternetServiceNameArrayInput is an input type that accepts FirewallPolicyInternetServiceNameArray and FirewallPolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceNameArrayInput` via:
//
//	FirewallPolicyInternetServiceNameArray{ FirewallPolicyInternetServiceNameArgs{...} }
type FirewallPolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceNameArrayOutput() FirewallPolicyInternetServiceNameArrayOutput
	ToFirewallPolicyInternetServiceNameArrayOutputWithContext(context.Context) FirewallPolicyInternetServiceNameArrayOutput
}

type FirewallPolicyInternetServiceNameArray []FirewallPolicyInternetServiceNameInput

func (FirewallPolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceName)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceNameArray) ToFirewallPolicyInternetServiceNameArrayOutput() FirewallPolicyInternetServiceNameArrayOutput {
	return i.ToFirewallPolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceNameArray) ToFirewallPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceNameArrayOutput)
}

type FirewallPolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceName)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceNameOutput) ToFirewallPolicyInternetServiceNameOutput() FirewallPolicyInternetServiceNameOutput {
	return o
}

func (o FirewallPolicyInternetServiceNameOutput) ToFirewallPolicyInternetServiceNameOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceNameOutput {
	return o
}

// Internet Service name.
func (o FirewallPolicyInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceName)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceNameArrayOutput) ToFirewallPolicyInternetServiceNameArrayOutput() FirewallPolicyInternetServiceNameArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceNameArrayOutput) ToFirewallPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceNameArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetServiceName {
		return vs[0].([]FirewallPolicyInternetServiceName)[vs[1].(int)]
	}).(FirewallPolicyInternetServiceNameOutput)
}

type FirewallPolicyInternetServiceSrcCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetServiceSrcCustomInput is an input type that accepts FirewallPolicyInternetServiceSrcCustomArgs and FirewallPolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceSrcCustomInput` via:
//
//	FirewallPolicyInternetServiceSrcCustomArgs{...}
type FirewallPolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceSrcCustomOutput() FirewallPolicyInternetServiceSrcCustomOutput
	ToFirewallPolicyInternetServiceSrcCustomOutputWithContext(context.Context) FirewallPolicyInternetServiceSrcCustomOutput
}

type FirewallPolicyInternetServiceSrcCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceSrcCustomArgs) ToFirewallPolicyInternetServiceSrcCustomOutput() FirewallPolicyInternetServiceSrcCustomOutput {
	return i.ToFirewallPolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceSrcCustomArgs) ToFirewallPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceSrcCustomOutput)
}

// FirewallPolicyInternetServiceSrcCustomArrayInput is an input type that accepts FirewallPolicyInternetServiceSrcCustomArray and FirewallPolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceSrcCustomArrayInput` via:
//
//	FirewallPolicyInternetServiceSrcCustomArray{ FirewallPolicyInternetServiceSrcCustomArgs{...} }
type FirewallPolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceSrcCustomArrayOutput() FirewallPolicyInternetServiceSrcCustomArrayOutput
	ToFirewallPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) FirewallPolicyInternetServiceSrcCustomArrayOutput
}

type FirewallPolicyInternetServiceSrcCustomArray []FirewallPolicyInternetServiceSrcCustomInput

func (FirewallPolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceSrcCustomArray) ToFirewallPolicyInternetServiceSrcCustomArrayOutput() FirewallPolicyInternetServiceSrcCustomArrayOutput {
	return i.ToFirewallPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceSrcCustomArray) ToFirewallPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceSrcCustomArrayOutput)
}

type FirewallPolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceSrcCustomOutput) ToFirewallPolicyInternetServiceSrcCustomOutput() FirewallPolicyInternetServiceSrcCustomOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcCustomOutput) ToFirewallPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcCustomOutput {
	return o
}

// Custom Internet Service name.
func (o FirewallPolicyInternetServiceSrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetServiceSrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceSrcCustomArrayOutput) ToFirewallPolicyInternetServiceSrcCustomArrayOutput() FirewallPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcCustomArrayOutput) ToFirewallPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetServiceSrcCustom {
		return vs[0].([]FirewallPolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(FirewallPolicyInternetServiceSrcCustomOutput)
}

type FirewallPolicyInternetServiceSrcCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetServiceSrcCustomGroupInput is an input type that accepts FirewallPolicyInternetServiceSrcCustomGroupArgs and FirewallPolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceSrcCustomGroupInput` via:
//
//	FirewallPolicyInternetServiceSrcCustomGroupArgs{...}
type FirewallPolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceSrcCustomGroupOutput() FirewallPolicyInternetServiceSrcCustomGroupOutput
	ToFirewallPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) FirewallPolicyInternetServiceSrcCustomGroupOutput
}

type FirewallPolicyInternetServiceSrcCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceSrcCustomGroupArgs) ToFirewallPolicyInternetServiceSrcCustomGroupOutput() FirewallPolicyInternetServiceSrcCustomGroupOutput {
	return i.ToFirewallPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceSrcCustomGroupArgs) ToFirewallPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceSrcCustomGroupOutput)
}

// FirewallPolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts FirewallPolicyInternetServiceSrcCustomGroupArray and FirewallPolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	FirewallPolicyInternetServiceSrcCustomGroupArray{ FirewallPolicyInternetServiceSrcCustomGroupArgs{...} }
type FirewallPolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceSrcCustomGroupArrayOutput() FirewallPolicyInternetServiceSrcCustomGroupArrayOutput
	ToFirewallPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) FirewallPolicyInternetServiceSrcCustomGroupArrayOutput
}

type FirewallPolicyInternetServiceSrcCustomGroupArray []FirewallPolicyInternetServiceSrcCustomGroupInput

func (FirewallPolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceSrcCustomGroupArray) ToFirewallPolicyInternetServiceSrcCustomGroupArrayOutput() FirewallPolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToFirewallPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceSrcCustomGroupArray) ToFirewallPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceSrcCustomGroupArrayOutput)
}

type FirewallPolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceSrcCustomGroupOutput) ToFirewallPolicyInternetServiceSrcCustomGroupOutput() FirewallPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcCustomGroupOutput) ToFirewallPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o FirewallPolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetServiceSrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceSrcCustomGroupArrayOutput) ToFirewallPolicyInternetServiceSrcCustomGroupArrayOutput() FirewallPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcCustomGroupArrayOutput) ToFirewallPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetServiceSrcCustomGroup {
		return vs[0].([]FirewallPolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(FirewallPolicyInternetServiceSrcCustomGroupOutput)
}

type FirewallPolicyInternetServiceSrcGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetServiceSrcGroupInput is an input type that accepts FirewallPolicyInternetServiceSrcGroupArgs and FirewallPolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceSrcGroupInput` via:
//
//	FirewallPolicyInternetServiceSrcGroupArgs{...}
type FirewallPolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceSrcGroupOutput() FirewallPolicyInternetServiceSrcGroupOutput
	ToFirewallPolicyInternetServiceSrcGroupOutputWithContext(context.Context) FirewallPolicyInternetServiceSrcGroupOutput
}

type FirewallPolicyInternetServiceSrcGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceSrcGroupArgs) ToFirewallPolicyInternetServiceSrcGroupOutput() FirewallPolicyInternetServiceSrcGroupOutput {
	return i.ToFirewallPolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceSrcGroupArgs) ToFirewallPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceSrcGroupOutput)
}

// FirewallPolicyInternetServiceSrcGroupArrayInput is an input type that accepts FirewallPolicyInternetServiceSrcGroupArray and FirewallPolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceSrcGroupArrayInput` via:
//
//	FirewallPolicyInternetServiceSrcGroupArray{ FirewallPolicyInternetServiceSrcGroupArgs{...} }
type FirewallPolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceSrcGroupArrayOutput() FirewallPolicyInternetServiceSrcGroupArrayOutput
	ToFirewallPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) FirewallPolicyInternetServiceSrcGroupArrayOutput
}

type FirewallPolicyInternetServiceSrcGroupArray []FirewallPolicyInternetServiceSrcGroupInput

func (FirewallPolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceSrcGroupArray) ToFirewallPolicyInternetServiceSrcGroupArrayOutput() FirewallPolicyInternetServiceSrcGroupArrayOutput {
	return i.ToFirewallPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceSrcGroupArray) ToFirewallPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceSrcGroupArrayOutput)
}

type FirewallPolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceSrcGroupOutput) ToFirewallPolicyInternetServiceSrcGroupOutput() FirewallPolicyInternetServiceSrcGroupOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcGroupOutput) ToFirewallPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcGroupOutput {
	return o
}

// Internet Service group name.
func (o FirewallPolicyInternetServiceSrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetServiceSrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceSrcGroupArrayOutput) ToFirewallPolicyInternetServiceSrcGroupArrayOutput() FirewallPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcGroupArrayOutput) ToFirewallPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetServiceSrcGroup {
		return vs[0].([]FirewallPolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(FirewallPolicyInternetServiceSrcGroupOutput)
}

type FirewallPolicyInternetServiceSrcId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// FirewallPolicyInternetServiceSrcIdInput is an input type that accepts FirewallPolicyInternetServiceSrcIdArgs and FirewallPolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceSrcIdInput` via:
//
//	FirewallPolicyInternetServiceSrcIdArgs{...}
type FirewallPolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceSrcIdOutput() FirewallPolicyInternetServiceSrcIdOutput
	ToFirewallPolicyInternetServiceSrcIdOutputWithContext(context.Context) FirewallPolicyInternetServiceSrcIdOutput
}

type FirewallPolicyInternetServiceSrcIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallPolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceSrcIdArgs) ToFirewallPolicyInternetServiceSrcIdOutput() FirewallPolicyInternetServiceSrcIdOutput {
	return i.ToFirewallPolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceSrcIdArgs) ToFirewallPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceSrcIdOutput)
}

// FirewallPolicyInternetServiceSrcIdArrayInput is an input type that accepts FirewallPolicyInternetServiceSrcIdArray and FirewallPolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceSrcIdArrayInput` via:
//
//	FirewallPolicyInternetServiceSrcIdArray{ FirewallPolicyInternetServiceSrcIdArgs{...} }
type FirewallPolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceSrcIdArrayOutput() FirewallPolicyInternetServiceSrcIdArrayOutput
	ToFirewallPolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) FirewallPolicyInternetServiceSrcIdArrayOutput
}

type FirewallPolicyInternetServiceSrcIdArray []FirewallPolicyInternetServiceSrcIdInput

func (FirewallPolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceSrcIdArray) ToFirewallPolicyInternetServiceSrcIdArrayOutput() FirewallPolicyInternetServiceSrcIdArrayOutput {
	return i.ToFirewallPolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceSrcIdArray) ToFirewallPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceSrcIdArrayOutput)
}

type FirewallPolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceSrcIdOutput) ToFirewallPolicyInternetServiceSrcIdOutput() FirewallPolicyInternetServiceSrcIdOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcIdOutput) ToFirewallPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcIdOutput {
	return o
}

// Internet Service ID.
func (o FirewallPolicyInternetServiceSrcIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetServiceSrcId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallPolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceSrcIdArrayOutput) ToFirewallPolicyInternetServiceSrcIdArrayOutput() FirewallPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcIdArrayOutput) ToFirewallPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetServiceSrcId {
		return vs[0].([]FirewallPolicyInternetServiceSrcId)[vs[1].(int)]
	}).(FirewallPolicyInternetServiceSrcIdOutput)
}

type FirewallPolicyInternetServiceSrcName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyInternetServiceSrcNameInput is an input type that accepts FirewallPolicyInternetServiceSrcNameArgs and FirewallPolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceSrcNameInput` via:
//
//	FirewallPolicyInternetServiceSrcNameArgs{...}
type FirewallPolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceSrcNameOutput() FirewallPolicyInternetServiceSrcNameOutput
	ToFirewallPolicyInternetServiceSrcNameOutputWithContext(context.Context) FirewallPolicyInternetServiceSrcNameOutput
}

type FirewallPolicyInternetServiceSrcNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceSrcNameArgs) ToFirewallPolicyInternetServiceSrcNameOutput() FirewallPolicyInternetServiceSrcNameOutput {
	return i.ToFirewallPolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceSrcNameArgs) ToFirewallPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceSrcNameOutput)
}

// FirewallPolicyInternetServiceSrcNameArrayInput is an input type that accepts FirewallPolicyInternetServiceSrcNameArray and FirewallPolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInternetServiceSrcNameArrayInput` via:
//
//	FirewallPolicyInternetServiceSrcNameArray{ FirewallPolicyInternetServiceSrcNameArgs{...} }
type FirewallPolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInternetServiceSrcNameArrayOutput() FirewallPolicyInternetServiceSrcNameArrayOutput
	ToFirewallPolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) FirewallPolicyInternetServiceSrcNameArrayOutput
}

type FirewallPolicyInternetServiceSrcNameArray []FirewallPolicyInternetServiceSrcNameInput

func (FirewallPolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i FirewallPolicyInternetServiceSrcNameArray) ToFirewallPolicyInternetServiceSrcNameArrayOutput() FirewallPolicyInternetServiceSrcNameArrayOutput {
	return i.ToFirewallPolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInternetServiceSrcNameArray) ToFirewallPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInternetServiceSrcNameArrayOutput)
}

type FirewallPolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceSrcNameOutput) ToFirewallPolicyInternetServiceSrcNameOutput() FirewallPolicyInternetServiceSrcNameOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcNameOutput) ToFirewallPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcNameOutput {
	return o
}

// Internet Service name.
func (o FirewallPolicyInternetServiceSrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInternetServiceSrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o FirewallPolicyInternetServiceSrcNameArrayOutput) ToFirewallPolicyInternetServiceSrcNameArrayOutput() FirewallPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcNameArrayOutput) ToFirewallPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) FirewallPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o FirewallPolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInternetServiceSrcName {
		return vs[0].([]FirewallPolicyInternetServiceSrcName)[vs[1].(int)]
	}).(FirewallPolicyInternetServiceSrcNameOutput)
}

type FirewallPolicyNetworkServiceDynamic struct {
	// Dynamic Network Service name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyNetworkServiceDynamicInput is an input type that accepts FirewallPolicyNetworkServiceDynamicArgs and FirewallPolicyNetworkServiceDynamicOutput values.
// You can construct a concrete instance of `FirewallPolicyNetworkServiceDynamicInput` via:
//
//	FirewallPolicyNetworkServiceDynamicArgs{...}
type FirewallPolicyNetworkServiceDynamicInput interface {
	pulumi.Input

	ToFirewallPolicyNetworkServiceDynamicOutput() FirewallPolicyNetworkServiceDynamicOutput
	ToFirewallPolicyNetworkServiceDynamicOutputWithContext(context.Context) FirewallPolicyNetworkServiceDynamicOutput
}

type FirewallPolicyNetworkServiceDynamicArgs struct {
	// Dynamic Network Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyNetworkServiceDynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (i FirewallPolicyNetworkServiceDynamicArgs) ToFirewallPolicyNetworkServiceDynamicOutput() FirewallPolicyNetworkServiceDynamicOutput {
	return i.ToFirewallPolicyNetworkServiceDynamicOutputWithContext(context.Background())
}

func (i FirewallPolicyNetworkServiceDynamicArgs) ToFirewallPolicyNetworkServiceDynamicOutputWithContext(ctx context.Context) FirewallPolicyNetworkServiceDynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNetworkServiceDynamicOutput)
}

// FirewallPolicyNetworkServiceDynamicArrayInput is an input type that accepts FirewallPolicyNetworkServiceDynamicArray and FirewallPolicyNetworkServiceDynamicArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyNetworkServiceDynamicArrayInput` via:
//
//	FirewallPolicyNetworkServiceDynamicArray{ FirewallPolicyNetworkServiceDynamicArgs{...} }
type FirewallPolicyNetworkServiceDynamicArrayInput interface {
	pulumi.Input

	ToFirewallPolicyNetworkServiceDynamicArrayOutput() FirewallPolicyNetworkServiceDynamicArrayOutput
	ToFirewallPolicyNetworkServiceDynamicArrayOutputWithContext(context.Context) FirewallPolicyNetworkServiceDynamicArrayOutput
}

type FirewallPolicyNetworkServiceDynamicArray []FirewallPolicyNetworkServiceDynamicInput

func (FirewallPolicyNetworkServiceDynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (i FirewallPolicyNetworkServiceDynamicArray) ToFirewallPolicyNetworkServiceDynamicArrayOutput() FirewallPolicyNetworkServiceDynamicArrayOutput {
	return i.ToFirewallPolicyNetworkServiceDynamicArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyNetworkServiceDynamicArray) ToFirewallPolicyNetworkServiceDynamicArrayOutputWithContext(ctx context.Context) FirewallPolicyNetworkServiceDynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNetworkServiceDynamicArrayOutput)
}

type FirewallPolicyNetworkServiceDynamicOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNetworkServiceDynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (o FirewallPolicyNetworkServiceDynamicOutput) ToFirewallPolicyNetworkServiceDynamicOutput() FirewallPolicyNetworkServiceDynamicOutput {
	return o
}

func (o FirewallPolicyNetworkServiceDynamicOutput) ToFirewallPolicyNetworkServiceDynamicOutputWithContext(ctx context.Context) FirewallPolicyNetworkServiceDynamicOutput {
	return o
}

// Dynamic Network Service name.
func (o FirewallPolicyNetworkServiceDynamicOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNetworkServiceDynamic) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNetworkServiceDynamicArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNetworkServiceDynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyNetworkServiceDynamic)(nil)).Elem()
}

func (o FirewallPolicyNetworkServiceDynamicArrayOutput) ToFirewallPolicyNetworkServiceDynamicArrayOutput() FirewallPolicyNetworkServiceDynamicArrayOutput {
	return o
}

func (o FirewallPolicyNetworkServiceDynamicArrayOutput) ToFirewallPolicyNetworkServiceDynamicArrayOutputWithContext(ctx context.Context) FirewallPolicyNetworkServiceDynamicArrayOutput {
	return o
}

func (o FirewallPolicyNetworkServiceDynamicArrayOutput) Index(i pulumi.IntInput) FirewallPolicyNetworkServiceDynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyNetworkServiceDynamic {
		return vs[0].([]FirewallPolicyNetworkServiceDynamic)[vs[1].(int)]
	}).(FirewallPolicyNetworkServiceDynamicOutput)
}

type FirewallPolicyNetworkServiceSrcDynamic struct {
	// Dynamic Network Service name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyNetworkServiceSrcDynamicInput is an input type that accepts FirewallPolicyNetworkServiceSrcDynamicArgs and FirewallPolicyNetworkServiceSrcDynamicOutput values.
// You can construct a concrete instance of `FirewallPolicyNetworkServiceSrcDynamicInput` via:
//
//	FirewallPolicyNetworkServiceSrcDynamicArgs{...}
type FirewallPolicyNetworkServiceSrcDynamicInput interface {
	pulumi.Input

	ToFirewallPolicyNetworkServiceSrcDynamicOutput() FirewallPolicyNetworkServiceSrcDynamicOutput
	ToFirewallPolicyNetworkServiceSrcDynamicOutputWithContext(context.Context) FirewallPolicyNetworkServiceSrcDynamicOutput
}

type FirewallPolicyNetworkServiceSrcDynamicArgs struct {
	// Dynamic Network Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyNetworkServiceSrcDynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (i FirewallPolicyNetworkServiceSrcDynamicArgs) ToFirewallPolicyNetworkServiceSrcDynamicOutput() FirewallPolicyNetworkServiceSrcDynamicOutput {
	return i.ToFirewallPolicyNetworkServiceSrcDynamicOutputWithContext(context.Background())
}

func (i FirewallPolicyNetworkServiceSrcDynamicArgs) ToFirewallPolicyNetworkServiceSrcDynamicOutputWithContext(ctx context.Context) FirewallPolicyNetworkServiceSrcDynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNetworkServiceSrcDynamicOutput)
}

// FirewallPolicyNetworkServiceSrcDynamicArrayInput is an input type that accepts FirewallPolicyNetworkServiceSrcDynamicArray and FirewallPolicyNetworkServiceSrcDynamicArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyNetworkServiceSrcDynamicArrayInput` via:
//
//	FirewallPolicyNetworkServiceSrcDynamicArray{ FirewallPolicyNetworkServiceSrcDynamicArgs{...} }
type FirewallPolicyNetworkServiceSrcDynamicArrayInput interface {
	pulumi.Input

	ToFirewallPolicyNetworkServiceSrcDynamicArrayOutput() FirewallPolicyNetworkServiceSrcDynamicArrayOutput
	ToFirewallPolicyNetworkServiceSrcDynamicArrayOutputWithContext(context.Context) FirewallPolicyNetworkServiceSrcDynamicArrayOutput
}

type FirewallPolicyNetworkServiceSrcDynamicArray []FirewallPolicyNetworkServiceSrcDynamicInput

func (FirewallPolicyNetworkServiceSrcDynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (i FirewallPolicyNetworkServiceSrcDynamicArray) ToFirewallPolicyNetworkServiceSrcDynamicArrayOutput() FirewallPolicyNetworkServiceSrcDynamicArrayOutput {
	return i.ToFirewallPolicyNetworkServiceSrcDynamicArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyNetworkServiceSrcDynamicArray) ToFirewallPolicyNetworkServiceSrcDynamicArrayOutputWithContext(ctx context.Context) FirewallPolicyNetworkServiceSrcDynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNetworkServiceSrcDynamicArrayOutput)
}

type FirewallPolicyNetworkServiceSrcDynamicOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNetworkServiceSrcDynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (o FirewallPolicyNetworkServiceSrcDynamicOutput) ToFirewallPolicyNetworkServiceSrcDynamicOutput() FirewallPolicyNetworkServiceSrcDynamicOutput {
	return o
}

func (o FirewallPolicyNetworkServiceSrcDynamicOutput) ToFirewallPolicyNetworkServiceSrcDynamicOutputWithContext(ctx context.Context) FirewallPolicyNetworkServiceSrcDynamicOutput {
	return o
}

// Dynamic Network Service name.
func (o FirewallPolicyNetworkServiceSrcDynamicOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNetworkServiceSrcDynamic) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNetworkServiceSrcDynamicArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNetworkServiceSrcDynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyNetworkServiceSrcDynamic)(nil)).Elem()
}

func (o FirewallPolicyNetworkServiceSrcDynamicArrayOutput) ToFirewallPolicyNetworkServiceSrcDynamicArrayOutput() FirewallPolicyNetworkServiceSrcDynamicArrayOutput {
	return o
}

func (o FirewallPolicyNetworkServiceSrcDynamicArrayOutput) ToFirewallPolicyNetworkServiceSrcDynamicArrayOutputWithContext(ctx context.Context) FirewallPolicyNetworkServiceSrcDynamicArrayOutput {
	return o
}

func (o FirewallPolicyNetworkServiceSrcDynamicArrayOutput) Index(i pulumi.IntInput) FirewallPolicyNetworkServiceSrcDynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyNetworkServiceSrcDynamic {
		return vs[0].([]FirewallPolicyNetworkServiceSrcDynamic)[vs[1].(int)]
	}).(FirewallPolicyNetworkServiceSrcDynamicOutput)
}

type FirewallPolicyNtlmEnabledBrowser struct {
	// User agent string.
	UserAgentString *string `pulumi:"userAgentString"`
}

// FirewallPolicyNtlmEnabledBrowserInput is an input type that accepts FirewallPolicyNtlmEnabledBrowserArgs and FirewallPolicyNtlmEnabledBrowserOutput values.
// You can construct a concrete instance of `FirewallPolicyNtlmEnabledBrowserInput` via:
//
//	FirewallPolicyNtlmEnabledBrowserArgs{...}
type FirewallPolicyNtlmEnabledBrowserInput interface {
	pulumi.Input

	ToFirewallPolicyNtlmEnabledBrowserOutput() FirewallPolicyNtlmEnabledBrowserOutput
	ToFirewallPolicyNtlmEnabledBrowserOutputWithContext(context.Context) FirewallPolicyNtlmEnabledBrowserOutput
}

type FirewallPolicyNtlmEnabledBrowserArgs struct {
	// User agent string.
	UserAgentString pulumi.StringPtrInput `pulumi:"userAgentString"`
}

func (FirewallPolicyNtlmEnabledBrowserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (i FirewallPolicyNtlmEnabledBrowserArgs) ToFirewallPolicyNtlmEnabledBrowserOutput() FirewallPolicyNtlmEnabledBrowserOutput {
	return i.ToFirewallPolicyNtlmEnabledBrowserOutputWithContext(context.Background())
}

func (i FirewallPolicyNtlmEnabledBrowserArgs) ToFirewallPolicyNtlmEnabledBrowserOutputWithContext(ctx context.Context) FirewallPolicyNtlmEnabledBrowserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNtlmEnabledBrowserOutput)
}

// FirewallPolicyNtlmEnabledBrowserArrayInput is an input type that accepts FirewallPolicyNtlmEnabledBrowserArray and FirewallPolicyNtlmEnabledBrowserArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyNtlmEnabledBrowserArrayInput` via:
//
//	FirewallPolicyNtlmEnabledBrowserArray{ FirewallPolicyNtlmEnabledBrowserArgs{...} }
type FirewallPolicyNtlmEnabledBrowserArrayInput interface {
	pulumi.Input

	ToFirewallPolicyNtlmEnabledBrowserArrayOutput() FirewallPolicyNtlmEnabledBrowserArrayOutput
	ToFirewallPolicyNtlmEnabledBrowserArrayOutputWithContext(context.Context) FirewallPolicyNtlmEnabledBrowserArrayOutput
}

type FirewallPolicyNtlmEnabledBrowserArray []FirewallPolicyNtlmEnabledBrowserInput

func (FirewallPolicyNtlmEnabledBrowserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (i FirewallPolicyNtlmEnabledBrowserArray) ToFirewallPolicyNtlmEnabledBrowserArrayOutput() FirewallPolicyNtlmEnabledBrowserArrayOutput {
	return i.ToFirewallPolicyNtlmEnabledBrowserArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyNtlmEnabledBrowserArray) ToFirewallPolicyNtlmEnabledBrowserArrayOutputWithContext(ctx context.Context) FirewallPolicyNtlmEnabledBrowserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNtlmEnabledBrowserArrayOutput)
}

type FirewallPolicyNtlmEnabledBrowserOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNtlmEnabledBrowserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (o FirewallPolicyNtlmEnabledBrowserOutput) ToFirewallPolicyNtlmEnabledBrowserOutput() FirewallPolicyNtlmEnabledBrowserOutput {
	return o
}

func (o FirewallPolicyNtlmEnabledBrowserOutput) ToFirewallPolicyNtlmEnabledBrowserOutputWithContext(ctx context.Context) FirewallPolicyNtlmEnabledBrowserOutput {
	return o
}

// User agent string.
func (o FirewallPolicyNtlmEnabledBrowserOutput) UserAgentString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNtlmEnabledBrowser) *string { return v.UserAgentString }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNtlmEnabledBrowserArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNtlmEnabledBrowserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyNtlmEnabledBrowser)(nil)).Elem()
}

func (o FirewallPolicyNtlmEnabledBrowserArrayOutput) ToFirewallPolicyNtlmEnabledBrowserArrayOutput() FirewallPolicyNtlmEnabledBrowserArrayOutput {
	return o
}

func (o FirewallPolicyNtlmEnabledBrowserArrayOutput) ToFirewallPolicyNtlmEnabledBrowserArrayOutputWithContext(ctx context.Context) FirewallPolicyNtlmEnabledBrowserArrayOutput {
	return o
}

func (o FirewallPolicyNtlmEnabledBrowserArrayOutput) Index(i pulumi.IntInput) FirewallPolicyNtlmEnabledBrowserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyNtlmEnabledBrowser {
		return vs[0].([]FirewallPolicyNtlmEnabledBrowser)[vs[1].(int)]
	}).(FirewallPolicyNtlmEnabledBrowserOutput)
}

type FirewallPolicyPoolname6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyPoolname6Input is an input type that accepts FirewallPolicyPoolname6Args and FirewallPolicyPoolname6Output values.
// You can construct a concrete instance of `FirewallPolicyPoolname6Input` via:
//
//	FirewallPolicyPoolname6Args{...}
type FirewallPolicyPoolname6Input interface {
	pulumi.Input

	ToFirewallPolicyPoolname6Output() FirewallPolicyPoolname6Output
	ToFirewallPolicyPoolname6OutputWithContext(context.Context) FirewallPolicyPoolname6Output
}

type FirewallPolicyPoolname6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyPoolname6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyPoolname6)(nil)).Elem()
}

func (i FirewallPolicyPoolname6Args) ToFirewallPolicyPoolname6Output() FirewallPolicyPoolname6Output {
	return i.ToFirewallPolicyPoolname6OutputWithContext(context.Background())
}

func (i FirewallPolicyPoolname6Args) ToFirewallPolicyPoolname6OutputWithContext(ctx context.Context) FirewallPolicyPoolname6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyPoolname6Output)
}

// FirewallPolicyPoolname6ArrayInput is an input type that accepts FirewallPolicyPoolname6Array and FirewallPolicyPoolname6ArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyPoolname6ArrayInput` via:
//
//	FirewallPolicyPoolname6Array{ FirewallPolicyPoolname6Args{...} }
type FirewallPolicyPoolname6ArrayInput interface {
	pulumi.Input

	ToFirewallPolicyPoolname6ArrayOutput() FirewallPolicyPoolname6ArrayOutput
	ToFirewallPolicyPoolname6ArrayOutputWithContext(context.Context) FirewallPolicyPoolname6ArrayOutput
}

type FirewallPolicyPoolname6Array []FirewallPolicyPoolname6Input

func (FirewallPolicyPoolname6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyPoolname6)(nil)).Elem()
}

func (i FirewallPolicyPoolname6Array) ToFirewallPolicyPoolname6ArrayOutput() FirewallPolicyPoolname6ArrayOutput {
	return i.ToFirewallPolicyPoolname6ArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyPoolname6Array) ToFirewallPolicyPoolname6ArrayOutputWithContext(ctx context.Context) FirewallPolicyPoolname6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyPoolname6ArrayOutput)
}

type FirewallPolicyPoolname6Output struct{ *pulumi.OutputState }

func (FirewallPolicyPoolname6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyPoolname6)(nil)).Elem()
}

func (o FirewallPolicyPoolname6Output) ToFirewallPolicyPoolname6Output() FirewallPolicyPoolname6Output {
	return o
}

func (o FirewallPolicyPoolname6Output) ToFirewallPolicyPoolname6OutputWithContext(ctx context.Context) FirewallPolicyPoolname6Output {
	return o
}

// Policy name.
func (o FirewallPolicyPoolname6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyPoolname6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyPoolname6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyPoolname6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyPoolname6)(nil)).Elem()
}

func (o FirewallPolicyPoolname6ArrayOutput) ToFirewallPolicyPoolname6ArrayOutput() FirewallPolicyPoolname6ArrayOutput {
	return o
}

func (o FirewallPolicyPoolname6ArrayOutput) ToFirewallPolicyPoolname6ArrayOutputWithContext(ctx context.Context) FirewallPolicyPoolname6ArrayOutput {
	return o
}

func (o FirewallPolicyPoolname6ArrayOutput) Index(i pulumi.IntInput) FirewallPolicyPoolname6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyPoolname6 {
		return vs[0].([]FirewallPolicyPoolname6)[vs[1].(int)]
	}).(FirewallPolicyPoolname6Output)
}

type FirewallPolicyPoolname struct {
	// IPv6 pool name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyPoolnameInput is an input type that accepts FirewallPolicyPoolnameArgs and FirewallPolicyPoolnameOutput values.
// You can construct a concrete instance of `FirewallPolicyPoolnameInput` via:
//
//	FirewallPolicyPoolnameArgs{...}
type FirewallPolicyPoolnameInput interface {
	pulumi.Input

	ToFirewallPolicyPoolnameOutput() FirewallPolicyPoolnameOutput
	ToFirewallPolicyPoolnameOutputWithContext(context.Context) FirewallPolicyPoolnameOutput
}

type FirewallPolicyPoolnameArgs struct {
	// IPv6 pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyPoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyPoolname)(nil)).Elem()
}

func (i FirewallPolicyPoolnameArgs) ToFirewallPolicyPoolnameOutput() FirewallPolicyPoolnameOutput {
	return i.ToFirewallPolicyPoolnameOutputWithContext(context.Background())
}

func (i FirewallPolicyPoolnameArgs) ToFirewallPolicyPoolnameOutputWithContext(ctx context.Context) FirewallPolicyPoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyPoolnameOutput)
}

// FirewallPolicyPoolnameArrayInput is an input type that accepts FirewallPolicyPoolnameArray and FirewallPolicyPoolnameArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyPoolnameArrayInput` via:
//
//	FirewallPolicyPoolnameArray{ FirewallPolicyPoolnameArgs{...} }
type FirewallPolicyPoolnameArrayInput interface {
	pulumi.Input

	ToFirewallPolicyPoolnameArrayOutput() FirewallPolicyPoolnameArrayOutput
	ToFirewallPolicyPoolnameArrayOutputWithContext(context.Context) FirewallPolicyPoolnameArrayOutput
}

type FirewallPolicyPoolnameArray []FirewallPolicyPoolnameInput

func (FirewallPolicyPoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyPoolname)(nil)).Elem()
}

func (i FirewallPolicyPoolnameArray) ToFirewallPolicyPoolnameArrayOutput() FirewallPolicyPoolnameArrayOutput {
	return i.ToFirewallPolicyPoolnameArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyPoolnameArray) ToFirewallPolicyPoolnameArrayOutputWithContext(ctx context.Context) FirewallPolicyPoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyPoolnameArrayOutput)
}

type FirewallPolicyPoolnameOutput struct{ *pulumi.OutputState }

func (FirewallPolicyPoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyPoolname)(nil)).Elem()
}

func (o FirewallPolicyPoolnameOutput) ToFirewallPolicyPoolnameOutput() FirewallPolicyPoolnameOutput {
	return o
}

func (o FirewallPolicyPoolnameOutput) ToFirewallPolicyPoolnameOutputWithContext(ctx context.Context) FirewallPolicyPoolnameOutput {
	return o
}

// IPv6 pool name.
func (o FirewallPolicyPoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyPoolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyPoolnameArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyPoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyPoolname)(nil)).Elem()
}

func (o FirewallPolicyPoolnameArrayOutput) ToFirewallPolicyPoolnameArrayOutput() FirewallPolicyPoolnameArrayOutput {
	return o
}

func (o FirewallPolicyPoolnameArrayOutput) ToFirewallPolicyPoolnameArrayOutputWithContext(ctx context.Context) FirewallPolicyPoolnameArrayOutput {
	return o
}

func (o FirewallPolicyPoolnameArrayOutput) Index(i pulumi.IntInput) FirewallPolicyPoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyPoolname {
		return vs[0].([]FirewallPolicyPoolname)[vs[1].(int)]
	}).(FirewallPolicyPoolnameOutput)
}

type FirewallPolicyRtpAddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyRtpAddrInput is an input type that accepts FirewallPolicyRtpAddrArgs and FirewallPolicyRtpAddrOutput values.
// You can construct a concrete instance of `FirewallPolicyRtpAddrInput` via:
//
//	FirewallPolicyRtpAddrArgs{...}
type FirewallPolicyRtpAddrInput interface {
	pulumi.Input

	ToFirewallPolicyRtpAddrOutput() FirewallPolicyRtpAddrOutput
	ToFirewallPolicyRtpAddrOutputWithContext(context.Context) FirewallPolicyRtpAddrOutput
}

type FirewallPolicyRtpAddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyRtpAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRtpAddr)(nil)).Elem()
}

func (i FirewallPolicyRtpAddrArgs) ToFirewallPolicyRtpAddrOutput() FirewallPolicyRtpAddrOutput {
	return i.ToFirewallPolicyRtpAddrOutputWithContext(context.Background())
}

func (i FirewallPolicyRtpAddrArgs) ToFirewallPolicyRtpAddrOutputWithContext(ctx context.Context) FirewallPolicyRtpAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRtpAddrOutput)
}

// FirewallPolicyRtpAddrArrayInput is an input type that accepts FirewallPolicyRtpAddrArray and FirewallPolicyRtpAddrArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRtpAddrArrayInput` via:
//
//	FirewallPolicyRtpAddrArray{ FirewallPolicyRtpAddrArgs{...} }
type FirewallPolicyRtpAddrArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRtpAddrArrayOutput() FirewallPolicyRtpAddrArrayOutput
	ToFirewallPolicyRtpAddrArrayOutputWithContext(context.Context) FirewallPolicyRtpAddrArrayOutput
}

type FirewallPolicyRtpAddrArray []FirewallPolicyRtpAddrInput

func (FirewallPolicyRtpAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRtpAddr)(nil)).Elem()
}

func (i FirewallPolicyRtpAddrArray) ToFirewallPolicyRtpAddrArrayOutput() FirewallPolicyRtpAddrArrayOutput {
	return i.ToFirewallPolicyRtpAddrArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRtpAddrArray) ToFirewallPolicyRtpAddrArrayOutputWithContext(ctx context.Context) FirewallPolicyRtpAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRtpAddrArrayOutput)
}

type FirewallPolicyRtpAddrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRtpAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRtpAddr)(nil)).Elem()
}

func (o FirewallPolicyRtpAddrOutput) ToFirewallPolicyRtpAddrOutput() FirewallPolicyRtpAddrOutput {
	return o
}

func (o FirewallPolicyRtpAddrOutput) ToFirewallPolicyRtpAddrOutputWithContext(ctx context.Context) FirewallPolicyRtpAddrOutput {
	return o
}

// Address name.
func (o FirewallPolicyRtpAddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRtpAddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyRtpAddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRtpAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRtpAddr)(nil)).Elem()
}

func (o FirewallPolicyRtpAddrArrayOutput) ToFirewallPolicyRtpAddrArrayOutput() FirewallPolicyRtpAddrArrayOutput {
	return o
}

func (o FirewallPolicyRtpAddrArrayOutput) ToFirewallPolicyRtpAddrArrayOutputWithContext(ctx context.Context) FirewallPolicyRtpAddrArrayOutput {
	return o
}

func (o FirewallPolicyRtpAddrArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRtpAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRtpAddr {
		return vs[0].([]FirewallPolicyRtpAddr)[vs[1].(int)]
	}).(FirewallPolicyRtpAddrOutput)
}

type FirewallPolicyService struct {
	// Service and service group names.
	Name *string `pulumi:"name"`
}

// FirewallPolicyServiceInput is an input type that accepts FirewallPolicyServiceArgs and FirewallPolicyServiceOutput values.
// You can construct a concrete instance of `FirewallPolicyServiceInput` via:
//
//	FirewallPolicyServiceArgs{...}
type FirewallPolicyServiceInput interface {
	pulumi.Input

	ToFirewallPolicyServiceOutput() FirewallPolicyServiceOutput
	ToFirewallPolicyServiceOutputWithContext(context.Context) FirewallPolicyServiceOutput
}

type FirewallPolicyServiceArgs struct {
	// Service and service group names.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyService)(nil)).Elem()
}

func (i FirewallPolicyServiceArgs) ToFirewallPolicyServiceOutput() FirewallPolicyServiceOutput {
	return i.ToFirewallPolicyServiceOutputWithContext(context.Background())
}

func (i FirewallPolicyServiceArgs) ToFirewallPolicyServiceOutputWithContext(ctx context.Context) FirewallPolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyServiceOutput)
}

// FirewallPolicyServiceArrayInput is an input type that accepts FirewallPolicyServiceArray and FirewallPolicyServiceArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyServiceArrayInput` via:
//
//	FirewallPolicyServiceArray{ FirewallPolicyServiceArgs{...} }
type FirewallPolicyServiceArrayInput interface {
	pulumi.Input

	ToFirewallPolicyServiceArrayOutput() FirewallPolicyServiceArrayOutput
	ToFirewallPolicyServiceArrayOutputWithContext(context.Context) FirewallPolicyServiceArrayOutput
}

type FirewallPolicyServiceArray []FirewallPolicyServiceInput

func (FirewallPolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyService)(nil)).Elem()
}

func (i FirewallPolicyServiceArray) ToFirewallPolicyServiceArrayOutput() FirewallPolicyServiceArrayOutput {
	return i.ToFirewallPolicyServiceArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyServiceArray) ToFirewallPolicyServiceArrayOutputWithContext(ctx context.Context) FirewallPolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyServiceArrayOutput)
}

type FirewallPolicyServiceOutput struct{ *pulumi.OutputState }

func (FirewallPolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyService)(nil)).Elem()
}

func (o FirewallPolicyServiceOutput) ToFirewallPolicyServiceOutput() FirewallPolicyServiceOutput {
	return o
}

func (o FirewallPolicyServiceOutput) ToFirewallPolicyServiceOutputWithContext(ctx context.Context) FirewallPolicyServiceOutput {
	return o
}

// Service and service group names.
func (o FirewallPolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyService)(nil)).Elem()
}

func (o FirewallPolicyServiceArrayOutput) ToFirewallPolicyServiceArrayOutput() FirewallPolicyServiceArrayOutput {
	return o
}

func (o FirewallPolicyServiceArrayOutput) ToFirewallPolicyServiceArrayOutputWithContext(ctx context.Context) FirewallPolicyServiceArrayOutput {
	return o
}

func (o FirewallPolicyServiceArrayOutput) Index(i pulumi.IntInput) FirewallPolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyService {
		return vs[0].([]FirewallPolicyService)[vs[1].(int)]
	}).(FirewallPolicyServiceOutput)
}

type FirewallPolicySgt struct {
	// Security group tag.
	Id *int `pulumi:"id"`
}

// FirewallPolicySgtInput is an input type that accepts FirewallPolicySgtArgs and FirewallPolicySgtOutput values.
// You can construct a concrete instance of `FirewallPolicySgtInput` via:
//
//	FirewallPolicySgtArgs{...}
type FirewallPolicySgtInput interface {
	pulumi.Input

	ToFirewallPolicySgtOutput() FirewallPolicySgtOutput
	ToFirewallPolicySgtOutputWithContext(context.Context) FirewallPolicySgtOutput
}

type FirewallPolicySgtArgs struct {
	// Security group tag.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallPolicySgtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySgt)(nil)).Elem()
}

func (i FirewallPolicySgtArgs) ToFirewallPolicySgtOutput() FirewallPolicySgtOutput {
	return i.ToFirewallPolicySgtOutputWithContext(context.Background())
}

func (i FirewallPolicySgtArgs) ToFirewallPolicySgtOutputWithContext(ctx context.Context) FirewallPolicySgtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySgtOutput)
}

// FirewallPolicySgtArrayInput is an input type that accepts FirewallPolicySgtArray and FirewallPolicySgtArrayOutput values.
// You can construct a concrete instance of `FirewallPolicySgtArrayInput` via:
//
//	FirewallPolicySgtArray{ FirewallPolicySgtArgs{...} }
type FirewallPolicySgtArrayInput interface {
	pulumi.Input

	ToFirewallPolicySgtArrayOutput() FirewallPolicySgtArrayOutput
	ToFirewallPolicySgtArrayOutputWithContext(context.Context) FirewallPolicySgtArrayOutput
}

type FirewallPolicySgtArray []FirewallPolicySgtInput

func (FirewallPolicySgtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySgt)(nil)).Elem()
}

func (i FirewallPolicySgtArray) ToFirewallPolicySgtArrayOutput() FirewallPolicySgtArrayOutput {
	return i.ToFirewallPolicySgtArrayOutputWithContext(context.Background())
}

func (i FirewallPolicySgtArray) ToFirewallPolicySgtArrayOutputWithContext(ctx context.Context) FirewallPolicySgtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySgtArrayOutput)
}

type FirewallPolicySgtOutput struct{ *pulumi.OutputState }

func (FirewallPolicySgtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySgt)(nil)).Elem()
}

func (o FirewallPolicySgtOutput) ToFirewallPolicySgtOutput() FirewallPolicySgtOutput {
	return o
}

func (o FirewallPolicySgtOutput) ToFirewallPolicySgtOutputWithContext(ctx context.Context) FirewallPolicySgtOutput {
	return o
}

// Security group tag.
func (o FirewallPolicySgtOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicySgt) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallPolicySgtArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicySgtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySgt)(nil)).Elem()
}

func (o FirewallPolicySgtArrayOutput) ToFirewallPolicySgtArrayOutput() FirewallPolicySgtArrayOutput {
	return o
}

func (o FirewallPolicySgtArrayOutput) ToFirewallPolicySgtArrayOutputWithContext(ctx context.Context) FirewallPolicySgtArrayOutput {
	return o
}

func (o FirewallPolicySgtArrayOutput) Index(i pulumi.IntInput) FirewallPolicySgtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicySgt {
		return vs[0].([]FirewallPolicySgt)[vs[1].(int)]
	}).(FirewallPolicySgtOutput)
}

type FirewallPolicySrcVendorMac struct {
	// Vendor MAC ID.
	//
	// The `internetService6Name` block supports:
	Id *int `pulumi:"id"`
}

// FirewallPolicySrcVendorMacInput is an input type that accepts FirewallPolicySrcVendorMacArgs and FirewallPolicySrcVendorMacOutput values.
// You can construct a concrete instance of `FirewallPolicySrcVendorMacInput` via:
//
//	FirewallPolicySrcVendorMacArgs{...}
type FirewallPolicySrcVendorMacInput interface {
	pulumi.Input

	ToFirewallPolicySrcVendorMacOutput() FirewallPolicySrcVendorMacOutput
	ToFirewallPolicySrcVendorMacOutputWithContext(context.Context) FirewallPolicySrcVendorMacOutput
}

type FirewallPolicySrcVendorMacArgs struct {
	// Vendor MAC ID.
	//
	// The `internetService6Name` block supports:
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallPolicySrcVendorMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySrcVendorMac)(nil)).Elem()
}

func (i FirewallPolicySrcVendorMacArgs) ToFirewallPolicySrcVendorMacOutput() FirewallPolicySrcVendorMacOutput {
	return i.ToFirewallPolicySrcVendorMacOutputWithContext(context.Background())
}

func (i FirewallPolicySrcVendorMacArgs) ToFirewallPolicySrcVendorMacOutputWithContext(ctx context.Context) FirewallPolicySrcVendorMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySrcVendorMacOutput)
}

// FirewallPolicySrcVendorMacArrayInput is an input type that accepts FirewallPolicySrcVendorMacArray and FirewallPolicySrcVendorMacArrayOutput values.
// You can construct a concrete instance of `FirewallPolicySrcVendorMacArrayInput` via:
//
//	FirewallPolicySrcVendorMacArray{ FirewallPolicySrcVendorMacArgs{...} }
type FirewallPolicySrcVendorMacArrayInput interface {
	pulumi.Input

	ToFirewallPolicySrcVendorMacArrayOutput() FirewallPolicySrcVendorMacArrayOutput
	ToFirewallPolicySrcVendorMacArrayOutputWithContext(context.Context) FirewallPolicySrcVendorMacArrayOutput
}

type FirewallPolicySrcVendorMacArray []FirewallPolicySrcVendorMacInput

func (FirewallPolicySrcVendorMacArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySrcVendorMac)(nil)).Elem()
}

func (i FirewallPolicySrcVendorMacArray) ToFirewallPolicySrcVendorMacArrayOutput() FirewallPolicySrcVendorMacArrayOutput {
	return i.ToFirewallPolicySrcVendorMacArrayOutputWithContext(context.Background())
}

func (i FirewallPolicySrcVendorMacArray) ToFirewallPolicySrcVendorMacArrayOutputWithContext(ctx context.Context) FirewallPolicySrcVendorMacArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySrcVendorMacArrayOutput)
}

type FirewallPolicySrcVendorMacOutput struct{ *pulumi.OutputState }

func (FirewallPolicySrcVendorMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySrcVendorMac)(nil)).Elem()
}

func (o FirewallPolicySrcVendorMacOutput) ToFirewallPolicySrcVendorMacOutput() FirewallPolicySrcVendorMacOutput {
	return o
}

func (o FirewallPolicySrcVendorMacOutput) ToFirewallPolicySrcVendorMacOutputWithContext(ctx context.Context) FirewallPolicySrcVendorMacOutput {
	return o
}

// Vendor MAC ID.
//
// The `internetService6Name` block supports:
func (o FirewallPolicySrcVendorMacOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicySrcVendorMac) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallPolicySrcVendorMacArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicySrcVendorMacArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySrcVendorMac)(nil)).Elem()
}

func (o FirewallPolicySrcVendorMacArrayOutput) ToFirewallPolicySrcVendorMacArrayOutput() FirewallPolicySrcVendorMacArrayOutput {
	return o
}

func (o FirewallPolicySrcVendorMacArrayOutput) ToFirewallPolicySrcVendorMacArrayOutputWithContext(ctx context.Context) FirewallPolicySrcVendorMacArrayOutput {
	return o
}

func (o FirewallPolicySrcVendorMacArrayOutput) Index(i pulumi.IntInput) FirewallPolicySrcVendorMacOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicySrcVendorMac {
		return vs[0].([]FirewallPolicySrcVendorMac)[vs[1].(int)]
	}).(FirewallPolicySrcVendorMacOutput)
}

type FirewallPolicySrcaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallPolicySrcaddr6Input is an input type that accepts FirewallPolicySrcaddr6Args and FirewallPolicySrcaddr6Output values.
// You can construct a concrete instance of `FirewallPolicySrcaddr6Input` via:
//
//	FirewallPolicySrcaddr6Args{...}
type FirewallPolicySrcaddr6Input interface {
	pulumi.Input

	ToFirewallPolicySrcaddr6Output() FirewallPolicySrcaddr6Output
	ToFirewallPolicySrcaddr6OutputWithContext(context.Context) FirewallPolicySrcaddr6Output
}

type FirewallPolicySrcaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySrcaddr6)(nil)).Elem()
}

func (i FirewallPolicySrcaddr6Args) ToFirewallPolicySrcaddr6Output() FirewallPolicySrcaddr6Output {
	return i.ToFirewallPolicySrcaddr6OutputWithContext(context.Background())
}

func (i FirewallPolicySrcaddr6Args) ToFirewallPolicySrcaddr6OutputWithContext(ctx context.Context) FirewallPolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySrcaddr6Output)
}

// FirewallPolicySrcaddr6ArrayInput is an input type that accepts FirewallPolicySrcaddr6Array and FirewallPolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallPolicySrcaddr6ArrayInput` via:
//
//	FirewallPolicySrcaddr6Array{ FirewallPolicySrcaddr6Args{...} }
type FirewallPolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallPolicySrcaddr6ArrayOutput() FirewallPolicySrcaddr6ArrayOutput
	ToFirewallPolicySrcaddr6ArrayOutputWithContext(context.Context) FirewallPolicySrcaddr6ArrayOutput
}

type FirewallPolicySrcaddr6Array []FirewallPolicySrcaddr6Input

func (FirewallPolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySrcaddr6)(nil)).Elem()
}

func (i FirewallPolicySrcaddr6Array) ToFirewallPolicySrcaddr6ArrayOutput() FirewallPolicySrcaddr6ArrayOutput {
	return i.ToFirewallPolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallPolicySrcaddr6Array) ToFirewallPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) FirewallPolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySrcaddr6ArrayOutput)
}

type FirewallPolicySrcaddr6Output struct{ *pulumi.OutputState }

func (FirewallPolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySrcaddr6)(nil)).Elem()
}

func (o FirewallPolicySrcaddr6Output) ToFirewallPolicySrcaddr6Output() FirewallPolicySrcaddr6Output {
	return o
}

func (o FirewallPolicySrcaddr6Output) ToFirewallPolicySrcaddr6OutputWithContext(ctx context.Context) FirewallPolicySrcaddr6Output {
	return o
}

// Policy name.
func (o FirewallPolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySrcaddr6)(nil)).Elem()
}

func (o FirewallPolicySrcaddr6ArrayOutput) ToFirewallPolicySrcaddr6ArrayOutput() FirewallPolicySrcaddr6ArrayOutput {
	return o
}

func (o FirewallPolicySrcaddr6ArrayOutput) ToFirewallPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) FirewallPolicySrcaddr6ArrayOutput {
	return o
}

func (o FirewallPolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallPolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicySrcaddr6 {
		return vs[0].([]FirewallPolicySrcaddr6)[vs[1].(int)]
	}).(FirewallPolicySrcaddr6Output)
}

type FirewallPolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicySrcaddrInput is an input type that accepts FirewallPolicySrcaddrArgs and FirewallPolicySrcaddrOutput values.
// You can construct a concrete instance of `FirewallPolicySrcaddrInput` via:
//
//	FirewallPolicySrcaddrArgs{...}
type FirewallPolicySrcaddrInput interface {
	pulumi.Input

	ToFirewallPolicySrcaddrOutput() FirewallPolicySrcaddrOutput
	ToFirewallPolicySrcaddrOutputWithContext(context.Context) FirewallPolicySrcaddrOutput
}

type FirewallPolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySrcaddr)(nil)).Elem()
}

func (i FirewallPolicySrcaddrArgs) ToFirewallPolicySrcaddrOutput() FirewallPolicySrcaddrOutput {
	return i.ToFirewallPolicySrcaddrOutputWithContext(context.Background())
}

func (i FirewallPolicySrcaddrArgs) ToFirewallPolicySrcaddrOutputWithContext(ctx context.Context) FirewallPolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySrcaddrOutput)
}

// FirewallPolicySrcaddrArrayInput is an input type that accepts FirewallPolicySrcaddrArray and FirewallPolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallPolicySrcaddrArrayInput` via:
//
//	FirewallPolicySrcaddrArray{ FirewallPolicySrcaddrArgs{...} }
type FirewallPolicySrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallPolicySrcaddrArrayOutput() FirewallPolicySrcaddrArrayOutput
	ToFirewallPolicySrcaddrArrayOutputWithContext(context.Context) FirewallPolicySrcaddrArrayOutput
}

type FirewallPolicySrcaddrArray []FirewallPolicySrcaddrInput

func (FirewallPolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySrcaddr)(nil)).Elem()
}

func (i FirewallPolicySrcaddrArray) ToFirewallPolicySrcaddrArrayOutput() FirewallPolicySrcaddrArrayOutput {
	return i.ToFirewallPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallPolicySrcaddrArray) ToFirewallPolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallPolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySrcaddrArrayOutput)
}

type FirewallPolicySrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallPolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySrcaddr)(nil)).Elem()
}

func (o FirewallPolicySrcaddrOutput) ToFirewallPolicySrcaddrOutput() FirewallPolicySrcaddrOutput {
	return o
}

func (o FirewallPolicySrcaddrOutput) ToFirewallPolicySrcaddrOutputWithContext(ctx context.Context) FirewallPolicySrcaddrOutput {
	return o
}

// Address name.
func (o FirewallPolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySrcaddr)(nil)).Elem()
}

func (o FirewallPolicySrcaddrArrayOutput) ToFirewallPolicySrcaddrArrayOutput() FirewallPolicySrcaddrArrayOutput {
	return o
}

func (o FirewallPolicySrcaddrArrayOutput) ToFirewallPolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallPolicySrcaddrArrayOutput {
	return o
}

func (o FirewallPolicySrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallPolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicySrcaddr {
		return vs[0].([]FirewallPolicySrcaddr)[vs[1].(int)]
	}).(FirewallPolicySrcaddrOutput)
}

type FirewallPolicySrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallPolicySrcintfInput is an input type that accepts FirewallPolicySrcintfArgs and FirewallPolicySrcintfOutput values.
// You can construct a concrete instance of `FirewallPolicySrcintfInput` via:
//
//	FirewallPolicySrcintfArgs{...}
type FirewallPolicySrcintfInput interface {
	pulumi.Input

	ToFirewallPolicySrcintfOutput() FirewallPolicySrcintfOutput
	ToFirewallPolicySrcintfOutputWithContext(context.Context) FirewallPolicySrcintfOutput
}

type FirewallPolicySrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySrcintf)(nil)).Elem()
}

func (i FirewallPolicySrcintfArgs) ToFirewallPolicySrcintfOutput() FirewallPolicySrcintfOutput {
	return i.ToFirewallPolicySrcintfOutputWithContext(context.Background())
}

func (i FirewallPolicySrcintfArgs) ToFirewallPolicySrcintfOutputWithContext(ctx context.Context) FirewallPolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySrcintfOutput)
}

// FirewallPolicySrcintfArrayInput is an input type that accepts FirewallPolicySrcintfArray and FirewallPolicySrcintfArrayOutput values.
// You can construct a concrete instance of `FirewallPolicySrcintfArrayInput` via:
//
//	FirewallPolicySrcintfArray{ FirewallPolicySrcintfArgs{...} }
type FirewallPolicySrcintfArrayInput interface {
	pulumi.Input

	ToFirewallPolicySrcintfArrayOutput() FirewallPolicySrcintfArrayOutput
	ToFirewallPolicySrcintfArrayOutputWithContext(context.Context) FirewallPolicySrcintfArrayOutput
}

type FirewallPolicySrcintfArray []FirewallPolicySrcintfInput

func (FirewallPolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySrcintf)(nil)).Elem()
}

func (i FirewallPolicySrcintfArray) ToFirewallPolicySrcintfArrayOutput() FirewallPolicySrcintfArrayOutput {
	return i.ToFirewallPolicySrcintfArrayOutputWithContext(context.Background())
}

func (i FirewallPolicySrcintfArray) ToFirewallPolicySrcintfArrayOutputWithContext(ctx context.Context) FirewallPolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySrcintfArrayOutput)
}

type FirewallPolicySrcintfOutput struct{ *pulumi.OutputState }

func (FirewallPolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySrcintf)(nil)).Elem()
}

func (o FirewallPolicySrcintfOutput) ToFirewallPolicySrcintfOutput() FirewallPolicySrcintfOutput {
	return o
}

func (o FirewallPolicySrcintfOutput) ToFirewallPolicySrcintfOutputWithContext(ctx context.Context) FirewallPolicySrcintfOutput {
	return o
}

// Interface name.
func (o FirewallPolicySrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicySrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySrcintf)(nil)).Elem()
}

func (o FirewallPolicySrcintfArrayOutput) ToFirewallPolicySrcintfArrayOutput() FirewallPolicySrcintfArrayOutput {
	return o
}

func (o FirewallPolicySrcintfArrayOutput) ToFirewallPolicySrcintfArrayOutputWithContext(ctx context.Context) FirewallPolicySrcintfArrayOutput {
	return o
}

func (o FirewallPolicySrcintfArrayOutput) Index(i pulumi.IntInput) FirewallPolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicySrcintf {
		return vs[0].([]FirewallPolicySrcintf)[vs[1].(int)]
	}).(FirewallPolicySrcintfOutput)
}

type FirewallPolicySslMirrorIntf struct {
	// Mirror Interface name.
	Name *string `pulumi:"name"`
}

// FirewallPolicySslMirrorIntfInput is an input type that accepts FirewallPolicySslMirrorIntfArgs and FirewallPolicySslMirrorIntfOutput values.
// You can construct a concrete instance of `FirewallPolicySslMirrorIntfInput` via:
//
//	FirewallPolicySslMirrorIntfArgs{...}
type FirewallPolicySslMirrorIntfInput interface {
	pulumi.Input

	ToFirewallPolicySslMirrorIntfOutput() FirewallPolicySslMirrorIntfOutput
	ToFirewallPolicySslMirrorIntfOutputWithContext(context.Context) FirewallPolicySslMirrorIntfOutput
}

type FirewallPolicySslMirrorIntfArgs struct {
	// Mirror Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicySslMirrorIntfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySslMirrorIntf)(nil)).Elem()
}

func (i FirewallPolicySslMirrorIntfArgs) ToFirewallPolicySslMirrorIntfOutput() FirewallPolicySslMirrorIntfOutput {
	return i.ToFirewallPolicySslMirrorIntfOutputWithContext(context.Background())
}

func (i FirewallPolicySslMirrorIntfArgs) ToFirewallPolicySslMirrorIntfOutputWithContext(ctx context.Context) FirewallPolicySslMirrorIntfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySslMirrorIntfOutput)
}

// FirewallPolicySslMirrorIntfArrayInput is an input type that accepts FirewallPolicySslMirrorIntfArray and FirewallPolicySslMirrorIntfArrayOutput values.
// You can construct a concrete instance of `FirewallPolicySslMirrorIntfArrayInput` via:
//
//	FirewallPolicySslMirrorIntfArray{ FirewallPolicySslMirrorIntfArgs{...} }
type FirewallPolicySslMirrorIntfArrayInput interface {
	pulumi.Input

	ToFirewallPolicySslMirrorIntfArrayOutput() FirewallPolicySslMirrorIntfArrayOutput
	ToFirewallPolicySslMirrorIntfArrayOutputWithContext(context.Context) FirewallPolicySslMirrorIntfArrayOutput
}

type FirewallPolicySslMirrorIntfArray []FirewallPolicySslMirrorIntfInput

func (FirewallPolicySslMirrorIntfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySslMirrorIntf)(nil)).Elem()
}

func (i FirewallPolicySslMirrorIntfArray) ToFirewallPolicySslMirrorIntfArrayOutput() FirewallPolicySslMirrorIntfArrayOutput {
	return i.ToFirewallPolicySslMirrorIntfArrayOutputWithContext(context.Background())
}

func (i FirewallPolicySslMirrorIntfArray) ToFirewallPolicySslMirrorIntfArrayOutputWithContext(ctx context.Context) FirewallPolicySslMirrorIntfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySslMirrorIntfArrayOutput)
}

type FirewallPolicySslMirrorIntfOutput struct{ *pulumi.OutputState }

func (FirewallPolicySslMirrorIntfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySslMirrorIntf)(nil)).Elem()
}

func (o FirewallPolicySslMirrorIntfOutput) ToFirewallPolicySslMirrorIntfOutput() FirewallPolicySslMirrorIntfOutput {
	return o
}

func (o FirewallPolicySslMirrorIntfOutput) ToFirewallPolicySslMirrorIntfOutputWithContext(ctx context.Context) FirewallPolicySslMirrorIntfOutput {
	return o
}

// Mirror Interface name.
func (o FirewallPolicySslMirrorIntfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicySslMirrorIntf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicySslMirrorIntfArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicySslMirrorIntfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicySslMirrorIntf)(nil)).Elem()
}

func (o FirewallPolicySslMirrorIntfArrayOutput) ToFirewallPolicySslMirrorIntfArrayOutput() FirewallPolicySslMirrorIntfArrayOutput {
	return o
}

func (o FirewallPolicySslMirrorIntfArrayOutput) ToFirewallPolicySslMirrorIntfArrayOutputWithContext(ctx context.Context) FirewallPolicySslMirrorIntfArrayOutput {
	return o
}

func (o FirewallPolicySslMirrorIntfArrayOutput) Index(i pulumi.IntInput) FirewallPolicySslMirrorIntfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicySslMirrorIntf {
		return vs[0].([]FirewallPolicySslMirrorIntf)[vs[1].(int)]
	}).(FirewallPolicySslMirrorIntfOutput)
}

type FirewallPolicyUrlCategory struct {
	// URL category ID.
	Id *int `pulumi:"id"`
}

// FirewallPolicyUrlCategoryInput is an input type that accepts FirewallPolicyUrlCategoryArgs and FirewallPolicyUrlCategoryOutput values.
// You can construct a concrete instance of `FirewallPolicyUrlCategoryInput` via:
//
//	FirewallPolicyUrlCategoryArgs{...}
type FirewallPolicyUrlCategoryInput interface {
	pulumi.Input

	ToFirewallPolicyUrlCategoryOutput() FirewallPolicyUrlCategoryOutput
	ToFirewallPolicyUrlCategoryOutputWithContext(context.Context) FirewallPolicyUrlCategoryOutput
}

type FirewallPolicyUrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallPolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyUrlCategory)(nil)).Elem()
}

func (i FirewallPolicyUrlCategoryArgs) ToFirewallPolicyUrlCategoryOutput() FirewallPolicyUrlCategoryOutput {
	return i.ToFirewallPolicyUrlCategoryOutputWithContext(context.Background())
}

func (i FirewallPolicyUrlCategoryArgs) ToFirewallPolicyUrlCategoryOutputWithContext(ctx context.Context) FirewallPolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyUrlCategoryOutput)
}

// FirewallPolicyUrlCategoryArrayInput is an input type that accepts FirewallPolicyUrlCategoryArray and FirewallPolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyUrlCategoryArrayInput` via:
//
//	FirewallPolicyUrlCategoryArray{ FirewallPolicyUrlCategoryArgs{...} }
type FirewallPolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToFirewallPolicyUrlCategoryArrayOutput() FirewallPolicyUrlCategoryArrayOutput
	ToFirewallPolicyUrlCategoryArrayOutputWithContext(context.Context) FirewallPolicyUrlCategoryArrayOutput
}

type FirewallPolicyUrlCategoryArray []FirewallPolicyUrlCategoryInput

func (FirewallPolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyUrlCategory)(nil)).Elem()
}

func (i FirewallPolicyUrlCategoryArray) ToFirewallPolicyUrlCategoryArrayOutput() FirewallPolicyUrlCategoryArrayOutput {
	return i.ToFirewallPolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyUrlCategoryArray) ToFirewallPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) FirewallPolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyUrlCategoryArrayOutput)
}

type FirewallPolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (FirewallPolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyUrlCategory)(nil)).Elem()
}

func (o FirewallPolicyUrlCategoryOutput) ToFirewallPolicyUrlCategoryOutput() FirewallPolicyUrlCategoryOutput {
	return o
}

func (o FirewallPolicyUrlCategoryOutput) ToFirewallPolicyUrlCategoryOutputWithContext(ctx context.Context) FirewallPolicyUrlCategoryOutput {
	return o
}

// URL category ID.
func (o FirewallPolicyUrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyUrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallPolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyUrlCategory)(nil)).Elem()
}

func (o FirewallPolicyUrlCategoryArrayOutput) ToFirewallPolicyUrlCategoryArrayOutput() FirewallPolicyUrlCategoryArrayOutput {
	return o
}

func (o FirewallPolicyUrlCategoryArrayOutput) ToFirewallPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) FirewallPolicyUrlCategoryArrayOutput {
	return o
}

func (o FirewallPolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) FirewallPolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyUrlCategory {
		return vs[0].([]FirewallPolicyUrlCategory)[vs[1].(int)]
	}).(FirewallPolicyUrlCategoryOutput)
}

type FirewallPolicyUser struct {
	// Names of individual users that can authenticate with this policy.
	Name *string `pulumi:"name"`
}

// FirewallPolicyUserInput is an input type that accepts FirewallPolicyUserArgs and FirewallPolicyUserOutput values.
// You can construct a concrete instance of `FirewallPolicyUserInput` via:
//
//	FirewallPolicyUserArgs{...}
type FirewallPolicyUserInput interface {
	pulumi.Input

	ToFirewallPolicyUserOutput() FirewallPolicyUserOutput
	ToFirewallPolicyUserOutputWithContext(context.Context) FirewallPolicyUserOutput
}

type FirewallPolicyUserArgs struct {
	// Names of individual users that can authenticate with this policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyUser)(nil)).Elem()
}

func (i FirewallPolicyUserArgs) ToFirewallPolicyUserOutput() FirewallPolicyUserOutput {
	return i.ToFirewallPolicyUserOutputWithContext(context.Background())
}

func (i FirewallPolicyUserArgs) ToFirewallPolicyUserOutputWithContext(ctx context.Context) FirewallPolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyUserOutput)
}

// FirewallPolicyUserArrayInput is an input type that accepts FirewallPolicyUserArray and FirewallPolicyUserArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyUserArrayInput` via:
//
//	FirewallPolicyUserArray{ FirewallPolicyUserArgs{...} }
type FirewallPolicyUserArrayInput interface {
	pulumi.Input

	ToFirewallPolicyUserArrayOutput() FirewallPolicyUserArrayOutput
	ToFirewallPolicyUserArrayOutputWithContext(context.Context) FirewallPolicyUserArrayOutput
}

type FirewallPolicyUserArray []FirewallPolicyUserInput

func (FirewallPolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyUser)(nil)).Elem()
}

func (i FirewallPolicyUserArray) ToFirewallPolicyUserArrayOutput() FirewallPolicyUserArrayOutput {
	return i.ToFirewallPolicyUserArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyUserArray) ToFirewallPolicyUserArrayOutputWithContext(ctx context.Context) FirewallPolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyUserArrayOutput)
}

type FirewallPolicyUserOutput struct{ *pulumi.OutputState }

func (FirewallPolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyUser)(nil)).Elem()
}

func (o FirewallPolicyUserOutput) ToFirewallPolicyUserOutput() FirewallPolicyUserOutput {
	return o
}

func (o FirewallPolicyUserOutput) ToFirewallPolicyUserOutputWithContext(ctx context.Context) FirewallPolicyUserOutput {
	return o
}

// Names of individual users that can authenticate with this policy.
func (o FirewallPolicyUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyUserArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyUser)(nil)).Elem()
}

func (o FirewallPolicyUserArrayOutput) ToFirewallPolicyUserArrayOutput() FirewallPolicyUserArrayOutput {
	return o
}

func (o FirewallPolicyUserArrayOutput) ToFirewallPolicyUserArrayOutputWithContext(ctx context.Context) FirewallPolicyUserArrayOutput {
	return o
}

func (o FirewallPolicyUserArrayOutput) Index(i pulumi.IntInput) FirewallPolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyUser {
		return vs[0].([]FirewallPolicyUser)[vs[1].(int)]
	}).(FirewallPolicyUserOutput)
}

type FirewallPolicyZtnaEmsTag struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyZtnaEmsTagInput is an input type that accepts FirewallPolicyZtnaEmsTagArgs and FirewallPolicyZtnaEmsTagOutput values.
// You can construct a concrete instance of `FirewallPolicyZtnaEmsTagInput` via:
//
//	FirewallPolicyZtnaEmsTagArgs{...}
type FirewallPolicyZtnaEmsTagInput interface {
	pulumi.Input

	ToFirewallPolicyZtnaEmsTagOutput() FirewallPolicyZtnaEmsTagOutput
	ToFirewallPolicyZtnaEmsTagOutputWithContext(context.Context) FirewallPolicyZtnaEmsTagOutput
}

type FirewallPolicyZtnaEmsTagArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyZtnaEmsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyZtnaEmsTag)(nil)).Elem()
}

func (i FirewallPolicyZtnaEmsTagArgs) ToFirewallPolicyZtnaEmsTagOutput() FirewallPolicyZtnaEmsTagOutput {
	return i.ToFirewallPolicyZtnaEmsTagOutputWithContext(context.Background())
}

func (i FirewallPolicyZtnaEmsTagArgs) ToFirewallPolicyZtnaEmsTagOutputWithContext(ctx context.Context) FirewallPolicyZtnaEmsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyZtnaEmsTagOutput)
}

// FirewallPolicyZtnaEmsTagArrayInput is an input type that accepts FirewallPolicyZtnaEmsTagArray and FirewallPolicyZtnaEmsTagArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyZtnaEmsTagArrayInput` via:
//
//	FirewallPolicyZtnaEmsTagArray{ FirewallPolicyZtnaEmsTagArgs{...} }
type FirewallPolicyZtnaEmsTagArrayInput interface {
	pulumi.Input

	ToFirewallPolicyZtnaEmsTagArrayOutput() FirewallPolicyZtnaEmsTagArrayOutput
	ToFirewallPolicyZtnaEmsTagArrayOutputWithContext(context.Context) FirewallPolicyZtnaEmsTagArrayOutput
}

type FirewallPolicyZtnaEmsTagArray []FirewallPolicyZtnaEmsTagInput

func (FirewallPolicyZtnaEmsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyZtnaEmsTag)(nil)).Elem()
}

func (i FirewallPolicyZtnaEmsTagArray) ToFirewallPolicyZtnaEmsTagArrayOutput() FirewallPolicyZtnaEmsTagArrayOutput {
	return i.ToFirewallPolicyZtnaEmsTagArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyZtnaEmsTagArray) ToFirewallPolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) FirewallPolicyZtnaEmsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyZtnaEmsTagArrayOutput)
}

type FirewallPolicyZtnaEmsTagOutput struct{ *pulumi.OutputState }

func (FirewallPolicyZtnaEmsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyZtnaEmsTag)(nil)).Elem()
}

func (o FirewallPolicyZtnaEmsTagOutput) ToFirewallPolicyZtnaEmsTagOutput() FirewallPolicyZtnaEmsTagOutput {
	return o
}

func (o FirewallPolicyZtnaEmsTagOutput) ToFirewallPolicyZtnaEmsTagOutputWithContext(ctx context.Context) FirewallPolicyZtnaEmsTagOutput {
	return o
}

// Address name.
func (o FirewallPolicyZtnaEmsTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyZtnaEmsTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyZtnaEmsTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyZtnaEmsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyZtnaEmsTag)(nil)).Elem()
}

func (o FirewallPolicyZtnaEmsTagArrayOutput) ToFirewallPolicyZtnaEmsTagArrayOutput() FirewallPolicyZtnaEmsTagArrayOutput {
	return o
}

func (o FirewallPolicyZtnaEmsTagArrayOutput) ToFirewallPolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) FirewallPolicyZtnaEmsTagArrayOutput {
	return o
}

func (o FirewallPolicyZtnaEmsTagArrayOutput) Index(i pulumi.IntInput) FirewallPolicyZtnaEmsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyZtnaEmsTag {
		return vs[0].([]FirewallPolicyZtnaEmsTag)[vs[1].(int)]
	}).(FirewallPolicyZtnaEmsTagOutput)
}

type FirewallPolicyZtnaGeoTag struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallPolicyZtnaGeoTagInput is an input type that accepts FirewallPolicyZtnaGeoTagArgs and FirewallPolicyZtnaGeoTagOutput values.
// You can construct a concrete instance of `FirewallPolicyZtnaGeoTagInput` via:
//
//	FirewallPolicyZtnaGeoTagArgs{...}
type FirewallPolicyZtnaGeoTagInput interface {
	pulumi.Input

	ToFirewallPolicyZtnaGeoTagOutput() FirewallPolicyZtnaGeoTagOutput
	ToFirewallPolicyZtnaGeoTagOutputWithContext(context.Context) FirewallPolicyZtnaGeoTagOutput
}

type FirewallPolicyZtnaGeoTagArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyZtnaGeoTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyZtnaGeoTag)(nil)).Elem()
}

func (i FirewallPolicyZtnaGeoTagArgs) ToFirewallPolicyZtnaGeoTagOutput() FirewallPolicyZtnaGeoTagOutput {
	return i.ToFirewallPolicyZtnaGeoTagOutputWithContext(context.Background())
}

func (i FirewallPolicyZtnaGeoTagArgs) ToFirewallPolicyZtnaGeoTagOutputWithContext(ctx context.Context) FirewallPolicyZtnaGeoTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyZtnaGeoTagOutput)
}

// FirewallPolicyZtnaGeoTagArrayInput is an input type that accepts FirewallPolicyZtnaGeoTagArray and FirewallPolicyZtnaGeoTagArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyZtnaGeoTagArrayInput` via:
//
//	FirewallPolicyZtnaGeoTagArray{ FirewallPolicyZtnaGeoTagArgs{...} }
type FirewallPolicyZtnaGeoTagArrayInput interface {
	pulumi.Input

	ToFirewallPolicyZtnaGeoTagArrayOutput() FirewallPolicyZtnaGeoTagArrayOutput
	ToFirewallPolicyZtnaGeoTagArrayOutputWithContext(context.Context) FirewallPolicyZtnaGeoTagArrayOutput
}

type FirewallPolicyZtnaGeoTagArray []FirewallPolicyZtnaGeoTagInput

func (FirewallPolicyZtnaGeoTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyZtnaGeoTag)(nil)).Elem()
}

func (i FirewallPolicyZtnaGeoTagArray) ToFirewallPolicyZtnaGeoTagArrayOutput() FirewallPolicyZtnaGeoTagArrayOutput {
	return i.ToFirewallPolicyZtnaGeoTagArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyZtnaGeoTagArray) ToFirewallPolicyZtnaGeoTagArrayOutputWithContext(ctx context.Context) FirewallPolicyZtnaGeoTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyZtnaGeoTagArrayOutput)
}

type FirewallPolicyZtnaGeoTagOutput struct{ *pulumi.OutputState }

func (FirewallPolicyZtnaGeoTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyZtnaGeoTag)(nil)).Elem()
}

func (o FirewallPolicyZtnaGeoTagOutput) ToFirewallPolicyZtnaGeoTagOutput() FirewallPolicyZtnaGeoTagOutput {
	return o
}

func (o FirewallPolicyZtnaGeoTagOutput) ToFirewallPolicyZtnaGeoTagOutputWithContext(ctx context.Context) FirewallPolicyZtnaGeoTagOutput {
	return o
}

// Address name.
func (o FirewallPolicyZtnaGeoTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyZtnaGeoTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyZtnaGeoTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyZtnaGeoTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyZtnaGeoTag)(nil)).Elem()
}

func (o FirewallPolicyZtnaGeoTagArrayOutput) ToFirewallPolicyZtnaGeoTagArrayOutput() FirewallPolicyZtnaGeoTagArrayOutput {
	return o
}

func (o FirewallPolicyZtnaGeoTagArrayOutput) ToFirewallPolicyZtnaGeoTagArrayOutputWithContext(ctx context.Context) FirewallPolicyZtnaGeoTagArrayOutput {
	return o
}

func (o FirewallPolicyZtnaGeoTagArrayOutput) Index(i pulumi.IntInput) FirewallPolicyZtnaGeoTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyZtnaGeoTag {
		return vs[0].([]FirewallPolicyZtnaGeoTag)[vs[1].(int)]
	}).(FirewallPolicyZtnaGeoTagOutput)
}

type FirewallProfileprotocoloptionsCifs struct {
	// Domain for which to decrypt CIFS traffic.
	DomainController *string `pulumi:"domainController"`
	// One or more options that can be applied to the session. Valid values: `oversize`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports *int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// CIFS server credential type. Valid values: `none`, `credential-replication`, `credential-keytab`.
	ServerCredentialType *string `pulumi:"serverCredentialType"`
	// Server keytab. The structure of `serverKeytab` block is documented below.
	ServerKeytabs []FirewallProfileprotocoloptionsCifsServerKeytab `pulumi:"serverKeytabs"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum *int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum *int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize *int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType *string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// FirewallProfileprotocoloptionsCifsInput is an input type that accepts FirewallProfileprotocoloptionsCifsArgs and FirewallProfileprotocoloptionsCifsOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsCifsInput` via:
//
//	FirewallProfileprotocoloptionsCifsArgs{...}
type FirewallProfileprotocoloptionsCifsInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsCifsOutput() FirewallProfileprotocoloptionsCifsOutput
	ToFirewallProfileprotocoloptionsCifsOutputWithContext(context.Context) FirewallProfileprotocoloptionsCifsOutput
}

type FirewallProfileprotocoloptionsCifsArgs struct {
	// Domain for which to decrypt CIFS traffic.
	DomainController pulumi.StringPtrInput `pulumi:"domainController"`
	// One or more options that can be applied to the session. Valid values: `oversize`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 445).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// CIFS server credential type. Valid values: `none`, `credential-replication`, `credential-keytab`.
	ServerCredentialType pulumi.StringPtrInput `pulumi:"serverCredentialType"`
	// Server keytab. The structure of `serverKeytab` block is documented below.
	ServerKeytabs FirewallProfileprotocoloptionsCifsServerKeytabArrayInput `pulumi:"serverKeytabs"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum pulumi.IntPtrInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum pulumi.IntPtrInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize pulumi.IntPtrInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringPtrInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (FirewallProfileprotocoloptionsCifsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsCifs)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsCifsArgs) ToFirewallProfileprotocoloptionsCifsOutput() FirewallProfileprotocoloptionsCifsOutput {
	return i.ToFirewallProfileprotocoloptionsCifsOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsCifsArgs) ToFirewallProfileprotocoloptionsCifsOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsCifsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsCifsOutput)
}

func (i FirewallProfileprotocoloptionsCifsArgs) ToFirewallProfileprotocoloptionsCifsPtrOutput() FirewallProfileprotocoloptionsCifsPtrOutput {
	return i.ToFirewallProfileprotocoloptionsCifsPtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsCifsArgs) ToFirewallProfileprotocoloptionsCifsPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsCifsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsCifsOutput).ToFirewallProfileprotocoloptionsCifsPtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsCifsPtrInput is an input type that accepts FirewallProfileprotocoloptionsCifsArgs, FirewallProfileprotocoloptionsCifsPtr and FirewallProfileprotocoloptionsCifsPtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsCifsPtrInput` via:
//
//	        FirewallProfileprotocoloptionsCifsArgs{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsCifsPtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsCifsPtrOutput() FirewallProfileprotocoloptionsCifsPtrOutput
	ToFirewallProfileprotocoloptionsCifsPtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsCifsPtrOutput
}

type firewallProfileprotocoloptionsCifsPtrType FirewallProfileprotocoloptionsCifsArgs

func FirewallProfileprotocoloptionsCifsPtr(v *FirewallProfileprotocoloptionsCifsArgs) FirewallProfileprotocoloptionsCifsPtrInput {
	return (*firewallProfileprotocoloptionsCifsPtrType)(v)
}

func (*firewallProfileprotocoloptionsCifsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsCifs)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsCifsPtrType) ToFirewallProfileprotocoloptionsCifsPtrOutput() FirewallProfileprotocoloptionsCifsPtrOutput {
	return i.ToFirewallProfileprotocoloptionsCifsPtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsCifsPtrType) ToFirewallProfileprotocoloptionsCifsPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsCifsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsCifsPtrOutput)
}

type FirewallProfileprotocoloptionsCifsOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsCifsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsCifs)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsCifsOutput) ToFirewallProfileprotocoloptionsCifsOutput() FirewallProfileprotocoloptionsCifsOutput {
	return o
}

func (o FirewallProfileprotocoloptionsCifsOutput) ToFirewallProfileprotocoloptionsCifsOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsCifsOutput {
	return o
}

func (o FirewallProfileprotocoloptionsCifsOutput) ToFirewallProfileprotocoloptionsCifsPtrOutput() FirewallProfileprotocoloptionsCifsPtrOutput {
	return o.ToFirewallProfileprotocoloptionsCifsPtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsCifsOutput) ToFirewallProfileprotocoloptionsCifsPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsCifsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsCifs) *FirewallProfileprotocoloptionsCifs {
		return &v
	}).(FirewallProfileprotocoloptionsCifsPtrOutput)
}

// Domain for which to decrypt CIFS traffic.
func (o FirewallProfileprotocoloptionsCifsOutput) DomainController() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *string { return v.DomainController }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`.
func (o FirewallProfileprotocoloptionsCifsOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsCifsOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o FirewallProfileprotocoloptionsCifsOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsCifsOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// CIFS server credential type. Valid values: `none`, `credential-replication`, `credential-keytab`.
func (o FirewallProfileprotocoloptionsCifsOutput) ServerCredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *string { return v.ServerCredentialType }).(pulumi.StringPtrOutput)
}

// Server keytab. The structure of `serverKeytab` block is documented below.
func (o FirewallProfileprotocoloptionsCifsOutput) ServerKeytabs() FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) []FirewallProfileprotocoloptionsCifsServerKeytab {
		return v.ServerKeytabs
	}).(FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsCifsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o FirewallProfileprotocoloptionsCifsOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *int { return v.TcpWindowMaximum }).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o FirewallProfileprotocoloptionsCifsOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *int { return v.TcpWindowMinimum }).(pulumi.IntPtrOutput)
}

// Set TCP static window size (default = 256KB).
func (o FirewallProfileprotocoloptionsCifsOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *int { return v.TcpWindowSize }).(pulumi.IntPtrOutput)
}

// Specify type of TCP window to use for this protocol.
func (o FirewallProfileprotocoloptionsCifsOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *string { return v.TcpWindowType }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsCifsOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsCifsOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifs) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsCifsPtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsCifsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsCifs)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsCifsPtrOutput) ToFirewallProfileprotocoloptionsCifsPtrOutput() FirewallProfileprotocoloptionsCifsPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsCifsPtrOutput) ToFirewallProfileprotocoloptionsCifsPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsCifsPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsCifsPtrOutput) Elem() FirewallProfileprotocoloptionsCifsOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) FirewallProfileprotocoloptionsCifs {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsCifs
		return ret
	}).(FirewallProfileprotocoloptionsCifsOutput)
}

// Domain for which to decrypt CIFS traffic.
func (o FirewallProfileprotocoloptionsCifsPtrOutput) DomainController() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.DomainController
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`.
func (o FirewallProfileprotocoloptionsCifsPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsCifsPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 445).
func (o FirewallProfileprotocoloptionsCifsPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsCifsPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// CIFS server credential type. Valid values: `none`, `credential-replication`, `credential-keytab`.
func (o FirewallProfileprotocoloptionsCifsPtrOutput) ServerCredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.ServerCredentialType
	}).(pulumi.StringPtrOutput)
}

// Server keytab. The structure of `serverKeytab` block is documented below.
func (o FirewallProfileprotocoloptionsCifsPtrOutput) ServerKeytabs() FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) []FirewallProfileprotocoloptionsCifsServerKeytab {
		if v == nil {
			return nil
		}
		return v.ServerKeytabs
	}).(FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsCifsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o FirewallProfileprotocoloptionsCifsPtrOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMaximum
	}).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o FirewallProfileprotocoloptionsCifsPtrOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMinimum
	}).(pulumi.IntPtrOutput)
}

// Set TCP static window size (default = 256KB).
func (o FirewallProfileprotocoloptionsCifsPtrOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowSize
	}).(pulumi.IntPtrOutput)
}

// Specify type of TCP window to use for this protocol.
func (o FirewallProfileprotocoloptionsCifsPtrOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *string {
		if v == nil {
			return nil
		}
		return v.TcpWindowType
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsCifsPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsCifsPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsCifs) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsCifsServerKeytab struct {
	// Base64 encoded keytab file containing credential of the server.
	Keytab *string `pulumi:"keytab"`
	// Service principal.  For example, "host/cifsserver.example.com@example.com".
	Principal *string `pulumi:"principal"`
}

// FirewallProfileprotocoloptionsCifsServerKeytabInput is an input type that accepts FirewallProfileprotocoloptionsCifsServerKeytabArgs and FirewallProfileprotocoloptionsCifsServerKeytabOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsCifsServerKeytabInput` via:
//
//	FirewallProfileprotocoloptionsCifsServerKeytabArgs{...}
type FirewallProfileprotocoloptionsCifsServerKeytabInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsCifsServerKeytabOutput() FirewallProfileprotocoloptionsCifsServerKeytabOutput
	ToFirewallProfileprotocoloptionsCifsServerKeytabOutputWithContext(context.Context) FirewallProfileprotocoloptionsCifsServerKeytabOutput
}

type FirewallProfileprotocoloptionsCifsServerKeytabArgs struct {
	// Base64 encoded keytab file containing credential of the server.
	Keytab pulumi.StringPtrInput `pulumi:"keytab"`
	// Service principal.  For example, "host/cifsserver.example.com@example.com".
	Principal pulumi.StringPtrInput `pulumi:"principal"`
}

func (FirewallProfileprotocoloptionsCifsServerKeytabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsCifsServerKeytab)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsCifsServerKeytabArgs) ToFirewallProfileprotocoloptionsCifsServerKeytabOutput() FirewallProfileprotocoloptionsCifsServerKeytabOutput {
	return i.ToFirewallProfileprotocoloptionsCifsServerKeytabOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsCifsServerKeytabArgs) ToFirewallProfileprotocoloptionsCifsServerKeytabOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsCifsServerKeytabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsCifsServerKeytabOutput)
}

// FirewallProfileprotocoloptionsCifsServerKeytabArrayInput is an input type that accepts FirewallProfileprotocoloptionsCifsServerKeytabArray and FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsCifsServerKeytabArrayInput` via:
//
//	FirewallProfileprotocoloptionsCifsServerKeytabArray{ FirewallProfileprotocoloptionsCifsServerKeytabArgs{...} }
type FirewallProfileprotocoloptionsCifsServerKeytabArrayInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsCifsServerKeytabArrayOutput() FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput
	ToFirewallProfileprotocoloptionsCifsServerKeytabArrayOutputWithContext(context.Context) FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput
}

type FirewallProfileprotocoloptionsCifsServerKeytabArray []FirewallProfileprotocoloptionsCifsServerKeytabInput

func (FirewallProfileprotocoloptionsCifsServerKeytabArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProfileprotocoloptionsCifsServerKeytab)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsCifsServerKeytabArray) ToFirewallProfileprotocoloptionsCifsServerKeytabArrayOutput() FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return i.ToFirewallProfileprotocoloptionsCifsServerKeytabArrayOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsCifsServerKeytabArray) ToFirewallProfileprotocoloptionsCifsServerKeytabArrayOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput)
}

type FirewallProfileprotocoloptionsCifsServerKeytabOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsCifsServerKeytabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsCifsServerKeytab)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsCifsServerKeytabOutput) ToFirewallProfileprotocoloptionsCifsServerKeytabOutput() FirewallProfileprotocoloptionsCifsServerKeytabOutput {
	return o
}

func (o FirewallProfileprotocoloptionsCifsServerKeytabOutput) ToFirewallProfileprotocoloptionsCifsServerKeytabOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsCifsServerKeytabOutput {
	return o
}

// Base64 encoded keytab file containing credential of the server.
func (o FirewallProfileprotocoloptionsCifsServerKeytabOutput) Keytab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifsServerKeytab) *string { return v.Keytab }).(pulumi.StringPtrOutput)
}

// Service principal.  For example, "host/cifsserver.example.com@example.com".
func (o FirewallProfileprotocoloptionsCifsServerKeytabOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsCifsServerKeytab) *string { return v.Principal }).(pulumi.StringPtrOutput)
}

type FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProfileprotocoloptionsCifsServerKeytab)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput) ToFirewallProfileprotocoloptionsCifsServerKeytabArrayOutput() FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return o
}

func (o FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput) ToFirewallProfileprotocoloptionsCifsServerKeytabArrayOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput {
	return o
}

func (o FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput) Index(i pulumi.IntInput) FirewallProfileprotocoloptionsCifsServerKeytabOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProfileprotocoloptionsCifsServerKeytab {
		return vs[0].([]FirewallProfileprotocoloptionsCifsServerKeytab)[vs[1].(int)]
	}).(FirewallProfileprotocoloptionsCifsServerKeytabOutput)
}

type FirewallProfileprotocoloptionsDns struct {
	// Ports to scan for content (1 - 65535, default = 53).
	Ports *int `pulumi:"ports"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// FirewallProfileprotocoloptionsDnsInput is an input type that accepts FirewallProfileprotocoloptionsDnsArgs and FirewallProfileprotocoloptionsDnsOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsDnsInput` via:
//
//	FirewallProfileprotocoloptionsDnsArgs{...}
type FirewallProfileprotocoloptionsDnsInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsDnsOutput() FirewallProfileprotocoloptionsDnsOutput
	ToFirewallProfileprotocoloptionsDnsOutputWithContext(context.Context) FirewallProfileprotocoloptionsDnsOutput
}

type FirewallProfileprotocoloptionsDnsArgs struct {
	// Ports to scan for content (1 - 65535, default = 53).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (FirewallProfileprotocoloptionsDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsDns)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsDnsArgs) ToFirewallProfileprotocoloptionsDnsOutput() FirewallProfileprotocoloptionsDnsOutput {
	return i.ToFirewallProfileprotocoloptionsDnsOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsDnsArgs) ToFirewallProfileprotocoloptionsDnsOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsDnsOutput)
}

func (i FirewallProfileprotocoloptionsDnsArgs) ToFirewallProfileprotocoloptionsDnsPtrOutput() FirewallProfileprotocoloptionsDnsPtrOutput {
	return i.ToFirewallProfileprotocoloptionsDnsPtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsDnsArgs) ToFirewallProfileprotocoloptionsDnsPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsDnsOutput).ToFirewallProfileprotocoloptionsDnsPtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsDnsPtrInput is an input type that accepts FirewallProfileprotocoloptionsDnsArgs, FirewallProfileprotocoloptionsDnsPtr and FirewallProfileprotocoloptionsDnsPtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsDnsPtrInput` via:
//
//	        FirewallProfileprotocoloptionsDnsArgs{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsDnsPtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsDnsPtrOutput() FirewallProfileprotocoloptionsDnsPtrOutput
	ToFirewallProfileprotocoloptionsDnsPtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsDnsPtrOutput
}

type firewallProfileprotocoloptionsDnsPtrType FirewallProfileprotocoloptionsDnsArgs

func FirewallProfileprotocoloptionsDnsPtr(v *FirewallProfileprotocoloptionsDnsArgs) FirewallProfileprotocoloptionsDnsPtrInput {
	return (*firewallProfileprotocoloptionsDnsPtrType)(v)
}

func (*firewallProfileprotocoloptionsDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsDns)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsDnsPtrType) ToFirewallProfileprotocoloptionsDnsPtrOutput() FirewallProfileprotocoloptionsDnsPtrOutput {
	return i.ToFirewallProfileprotocoloptionsDnsPtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsDnsPtrType) ToFirewallProfileprotocoloptionsDnsPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsDnsPtrOutput)
}

type FirewallProfileprotocoloptionsDnsOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsDns)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsDnsOutput) ToFirewallProfileprotocoloptionsDnsOutput() FirewallProfileprotocoloptionsDnsOutput {
	return o
}

func (o FirewallProfileprotocoloptionsDnsOutput) ToFirewallProfileprotocoloptionsDnsOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsDnsOutput {
	return o
}

func (o FirewallProfileprotocoloptionsDnsOutput) ToFirewallProfileprotocoloptionsDnsPtrOutput() FirewallProfileprotocoloptionsDnsPtrOutput {
	return o.ToFirewallProfileprotocoloptionsDnsPtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsDnsOutput) ToFirewallProfileprotocoloptionsDnsPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsDns) *FirewallProfileprotocoloptionsDns {
		return &v
	}).(FirewallProfileprotocoloptionsDnsPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 53).
func (o FirewallProfileprotocoloptionsDnsOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsDns) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsDnsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsDns) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type FirewallProfileprotocoloptionsDnsPtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsDns)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsDnsPtrOutput) ToFirewallProfileprotocoloptionsDnsPtrOutput() FirewallProfileprotocoloptionsDnsPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsDnsPtrOutput) ToFirewallProfileprotocoloptionsDnsPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsDnsPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsDnsPtrOutput) Elem() FirewallProfileprotocoloptionsDnsOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsDns) FirewallProfileprotocoloptionsDns {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsDns
		return ret
	}).(FirewallProfileprotocoloptionsDnsOutput)
}

// Ports to scan for content (1 - 65535, default = 53).
func (o FirewallProfileprotocoloptionsDnsPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsDns) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsDnsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsDns) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type FirewallProfileprotocoloptionsFtp struct {
	// Amount of data to send in a transmission for client comforting (1 - 10240 bytes, default = 1).
	ComfortAmount *int `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval *int `pulumi:"comfortInterval"`
	// Enable/disable FTP redirection for explicit FTPS. Valid values: `enable`, `disable`.
	ExplicitFtpTls *string `pulumi:"explicitFtpTls"`
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `clientcomfort`, `oversize`, `splice`, `bypass-rest-command`, `bypass-mode-command`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 21).
	Ports *int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit *int `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum *int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum *int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize *int `pulumi:"tcpWindowSize"`
	// TCP window type to use for this protocol.
	TcpWindowType *string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// FirewallProfileprotocoloptionsFtpInput is an input type that accepts FirewallProfileprotocoloptionsFtpArgs and FirewallProfileprotocoloptionsFtpOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsFtpInput` via:
//
//	FirewallProfileprotocoloptionsFtpArgs{...}
type FirewallProfileprotocoloptionsFtpInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsFtpOutput() FirewallProfileprotocoloptionsFtpOutput
	ToFirewallProfileprotocoloptionsFtpOutputWithContext(context.Context) FirewallProfileprotocoloptionsFtpOutput
}

type FirewallProfileprotocoloptionsFtpArgs struct {
	// Amount of data to send in a transmission for client comforting (1 - 10240 bytes, default = 1).
	ComfortAmount pulumi.IntPtrInput `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval pulumi.IntPtrInput `pulumi:"comfortInterval"`
	// Enable/disable FTP redirection for explicit FTPS. Valid values: `enable`, `disable`.
	ExplicitFtpTls pulumi.StringPtrInput `pulumi:"explicitFtpTls"`
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `clientcomfort`, `oversize`, `splice`, `bypass-rest-command`, `bypass-mode-command`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 21).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit pulumi.IntPtrInput `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum pulumi.IntPtrInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum pulumi.IntPtrInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize pulumi.IntPtrInput `pulumi:"tcpWindowSize"`
	// TCP window type to use for this protocol.
	TcpWindowType pulumi.StringPtrInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (FirewallProfileprotocoloptionsFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsFtp)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsFtpArgs) ToFirewallProfileprotocoloptionsFtpOutput() FirewallProfileprotocoloptionsFtpOutput {
	return i.ToFirewallProfileprotocoloptionsFtpOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsFtpArgs) ToFirewallProfileprotocoloptionsFtpOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsFtpOutput)
}

func (i FirewallProfileprotocoloptionsFtpArgs) ToFirewallProfileprotocoloptionsFtpPtrOutput() FirewallProfileprotocoloptionsFtpPtrOutput {
	return i.ToFirewallProfileprotocoloptionsFtpPtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsFtpArgs) ToFirewallProfileprotocoloptionsFtpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsFtpOutput).ToFirewallProfileprotocoloptionsFtpPtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsFtpPtrInput is an input type that accepts FirewallProfileprotocoloptionsFtpArgs, FirewallProfileprotocoloptionsFtpPtr and FirewallProfileprotocoloptionsFtpPtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsFtpPtrInput` via:
//
//	        FirewallProfileprotocoloptionsFtpArgs{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsFtpPtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsFtpPtrOutput() FirewallProfileprotocoloptionsFtpPtrOutput
	ToFirewallProfileprotocoloptionsFtpPtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsFtpPtrOutput
}

type firewallProfileprotocoloptionsFtpPtrType FirewallProfileprotocoloptionsFtpArgs

func FirewallProfileprotocoloptionsFtpPtr(v *FirewallProfileprotocoloptionsFtpArgs) FirewallProfileprotocoloptionsFtpPtrInput {
	return (*firewallProfileprotocoloptionsFtpPtrType)(v)
}

func (*firewallProfileprotocoloptionsFtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsFtp)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsFtpPtrType) ToFirewallProfileprotocoloptionsFtpPtrOutput() FirewallProfileprotocoloptionsFtpPtrOutput {
	return i.ToFirewallProfileprotocoloptionsFtpPtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsFtpPtrType) ToFirewallProfileprotocoloptionsFtpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsFtpPtrOutput)
}

type FirewallProfileprotocoloptionsFtpOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsFtp)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsFtpOutput) ToFirewallProfileprotocoloptionsFtpOutput() FirewallProfileprotocoloptionsFtpOutput {
	return o
}

func (o FirewallProfileprotocoloptionsFtpOutput) ToFirewallProfileprotocoloptionsFtpOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsFtpOutput {
	return o
}

func (o FirewallProfileprotocoloptionsFtpOutput) ToFirewallProfileprotocoloptionsFtpPtrOutput() FirewallProfileprotocoloptionsFtpPtrOutput {
	return o.ToFirewallProfileprotocoloptionsFtpPtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsFtpOutput) ToFirewallProfileprotocoloptionsFtpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsFtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsFtp) *FirewallProfileprotocoloptionsFtp {
		return &v
	}).(FirewallProfileprotocoloptionsFtpPtrOutput)
}

// Amount of data to send in a transmission for client comforting (1 - 10240 bytes, default = 1).
func (o FirewallProfileprotocoloptionsFtpOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *int { return v.ComfortAmount }).(pulumi.IntPtrOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o FirewallProfileprotocoloptionsFtpOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *int { return v.ComfortInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable FTP redirection for explicit FTPS. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsFtpOutput) ExplicitFtpTls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *string { return v.ExplicitFtpTls }).(pulumi.StringPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsFtpOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `clientcomfort`, `oversize`, `splice`, `bypass-rest-command`, `bypass-mode-command`.
func (o FirewallProfileprotocoloptionsFtpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsFtpOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 21).
func (o FirewallProfileprotocoloptionsFtpOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsFtpOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsFtpOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsFtpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o FirewallProfileprotocoloptionsFtpOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *int { return v.StreamBasedUncompressedLimit }).(pulumi.IntPtrOutput)
}

// Maximum dynamic TCP window size.
func (o FirewallProfileprotocoloptionsFtpOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *int { return v.TcpWindowMaximum }).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o FirewallProfileprotocoloptionsFtpOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *int { return v.TcpWindowMinimum }).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o FirewallProfileprotocoloptionsFtpOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *int { return v.TcpWindowSize }).(pulumi.IntPtrOutput)
}

// TCP window type to use for this protocol.
func (o FirewallProfileprotocoloptionsFtpOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *string { return v.TcpWindowType }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsFtpOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsFtpOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsFtp) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsFtpPtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsFtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsFtp)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsFtpPtrOutput) ToFirewallProfileprotocoloptionsFtpPtrOutput() FirewallProfileprotocoloptionsFtpPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsFtpPtrOutput) ToFirewallProfileprotocoloptionsFtpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsFtpPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsFtpPtrOutput) Elem() FirewallProfileprotocoloptionsFtpOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) FirewallProfileprotocoloptionsFtp {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsFtp
		return ret
	}).(FirewallProfileprotocoloptionsFtpOutput)
}

// Amount of data to send in a transmission for client comforting (1 - 10240 bytes, default = 1).
func (o FirewallProfileprotocoloptionsFtpPtrOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.ComfortAmount
	}).(pulumi.IntPtrOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o FirewallProfileprotocoloptionsFtpPtrOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.ComfortInterval
	}).(pulumi.IntPtrOutput)
}

// Enable/disable FTP redirection for explicit FTPS. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsFtpPtrOutput) ExplicitFtpTls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.ExplicitFtpTls
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsFtpPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `clientcomfort`, `oversize`, `splice`, `bypass-rest-command`, `bypass-mode-command`.
func (o FirewallProfileprotocoloptionsFtpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsFtpPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 21).
func (o FirewallProfileprotocoloptionsFtpPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsFtpPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsFtpPtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsFtpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o FirewallProfileprotocoloptionsFtpPtrOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.StreamBasedUncompressedLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum dynamic TCP window size.
func (o FirewallProfileprotocoloptionsFtpPtrOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMaximum
	}).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o FirewallProfileprotocoloptionsFtpPtrOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMinimum
	}).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o FirewallProfileprotocoloptionsFtpPtrOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowSize
	}).(pulumi.IntPtrOutput)
}

// TCP window type to use for this protocol.
func (o FirewallProfileprotocoloptionsFtpPtrOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *string {
		if v == nil {
			return nil
		}
		return v.TcpWindowType
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsFtpPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsFtpPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsFtp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsHttp struct {
	// Enable/disable IP based URL rating. Valid values: `enable`, `disable`.
	AddressIpRating *string `pulumi:"addressIpRating"`
	// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
	BlockPageStatusCode *int `pulumi:"blockPageStatusCode"`
	// Amount of data to send in a transmission for client comforting (1 - 10240 bytes, default = 1).
	ComfortAmount *int `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval *int `pulumi:"comfortInterval"`
	// Enable/disable Fortinet bar on HTML content. Valid values: `enable`, `disable`.
	FortinetBar *string `pulumi:"fortinetBar"`
	// Port for use by Fortinet Bar (1 - 65535, default = 8011).
	FortinetBarPort *int `pulumi:"fortinetBarPort"`
	// Enable/disable h2c HTTP connection upgrade. Valid values: `enable`, `disable`.
	H2c *string `pulumi:"h2c"`
	// Enable/disable HTTP policy check. Valid values: `disable`, `enable`.
	HttpPolicy *string `pulumi:"httpPolicy"`
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 80).
	Ports *int `pulumi:"ports"`
	// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets). Valid values: `jisx0201`, `jisx0208`, `jisx0212`, `gb2312`, `ksc5601-ex`, `euc-jp`, `sjis`, `iso2022-jp`, `iso2022-jp-1`, `iso2022-jp-2`, `euc-cn`, `ces-gbk`, `hz`, `ces-big5`, `euc-kr`, `iso2022-jp-3`, `iso8859-1`, `tis620`, `cp874`, `cp1252`, `cp1251`.
	PostLang *string `pulumi:"postLang"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable blocking of partial downloads. Valid values: `disable`, `enable`.
	RangeBlock *string `pulumi:"rangeBlock"`
	// Number of attempts to retry HTTP connection (0 - 100, default = 0).
	RetryCount *int `pulumi:"retryCount"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit *int `pulumi:"streamBasedUncompressedLimit"`
	// Enable/disable bypassing of streaming content from buffering. Valid values: `enable`, `disable`.
	StreamingContentBypass *string `pulumi:"streamingContentBypass"`
	// Enable/disable stripping of HTTP X-Forwarded-For header. Valid values: `disable`, `enable`.
	StripXForwardedFor *string `pulumi:"stripXForwardedFor"`
	// Bypass from scanning, or block a connection that attempts to switch protocol. Valid values: `bypass`, `block`.
	SwitchingProtocols *string `pulumi:"switchingProtocols"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum *int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum *int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize *int `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType *string `pulumi:"tcpWindowType"`
	// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
	TunnelNonHttp *string `pulumi:"tunnelNonHttp"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
	// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion *string `pulumi:"unknownHttpVersion"`
	// Enable/disable verification of DNS for policy matching. Valid values: `enable`, `disable`.
	VerifyDnsForPolicyMatching *string `pulumi:"verifyDnsForPolicyMatching"`
}

// FirewallProfileprotocoloptionsHttpInput is an input type that accepts FirewallProfileprotocoloptionsHttpArgs and FirewallProfileprotocoloptionsHttpOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsHttpInput` via:
//
//	FirewallProfileprotocoloptionsHttpArgs{...}
type FirewallProfileprotocoloptionsHttpInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsHttpOutput() FirewallProfileprotocoloptionsHttpOutput
	ToFirewallProfileprotocoloptionsHttpOutputWithContext(context.Context) FirewallProfileprotocoloptionsHttpOutput
}

type FirewallProfileprotocoloptionsHttpArgs struct {
	// Enable/disable IP based URL rating. Valid values: `enable`, `disable`.
	AddressIpRating pulumi.StringPtrInput `pulumi:"addressIpRating"`
	// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
	BlockPageStatusCode pulumi.IntPtrInput `pulumi:"blockPageStatusCode"`
	// Amount of data to send in a transmission for client comforting (1 - 10240 bytes, default = 1).
	ComfortAmount pulumi.IntPtrInput `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval pulumi.IntPtrInput `pulumi:"comfortInterval"`
	// Enable/disable Fortinet bar on HTML content. Valid values: `enable`, `disable`.
	FortinetBar pulumi.StringPtrInput `pulumi:"fortinetBar"`
	// Port for use by Fortinet Bar (1 - 65535, default = 8011).
	FortinetBarPort pulumi.IntPtrInput `pulumi:"fortinetBarPort"`
	// Enable/disable h2c HTTP connection upgrade. Valid values: `enable`, `disable`.
	H2c pulumi.StringPtrInput `pulumi:"h2c"`
	// Enable/disable HTTP policy check. Valid values: `disable`, `enable`.
	HttpPolicy pulumi.StringPtrInput `pulumi:"httpPolicy"`
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 80).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets). Valid values: `jisx0201`, `jisx0208`, `jisx0212`, `gb2312`, `ksc5601-ex`, `euc-jp`, `sjis`, `iso2022-jp`, `iso2022-jp-1`, `iso2022-jp-2`, `euc-cn`, `ces-gbk`, `hz`, `ces-big5`, `euc-kr`, `iso2022-jp-3`, `iso8859-1`, `tis620`, `cp874`, `cp1252`, `cp1251`.
	PostLang pulumi.StringPtrInput `pulumi:"postLang"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable blocking of partial downloads. Valid values: `disable`, `enable`.
	RangeBlock pulumi.StringPtrInput `pulumi:"rangeBlock"`
	// Number of attempts to retry HTTP connection (0 - 100, default = 0).
	RetryCount pulumi.IntPtrInput `pulumi:"retryCount"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit pulumi.IntPtrInput `pulumi:"streamBasedUncompressedLimit"`
	// Enable/disable bypassing of streaming content from buffering. Valid values: `enable`, `disable`.
	StreamingContentBypass pulumi.StringPtrInput `pulumi:"streamingContentBypass"`
	// Enable/disable stripping of HTTP X-Forwarded-For header. Valid values: `disable`, `enable`.
	StripXForwardedFor pulumi.StringPtrInput `pulumi:"stripXForwardedFor"`
	// Bypass from scanning, or block a connection that attempts to switch protocol. Valid values: `bypass`, `block`.
	SwitchingProtocols pulumi.StringPtrInput `pulumi:"switchingProtocols"`
	// Maximum dynamic TCP window size (default = 8MB).
	TcpWindowMaximum pulumi.IntPtrInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size (default = 128KB).
	TcpWindowMinimum pulumi.IntPtrInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size (default = 256KB).
	TcpWindowSize pulumi.IntPtrInput `pulumi:"tcpWindowSize"`
	// Specify type of TCP window to use for this protocol.
	TcpWindowType pulumi.StringPtrInput `pulumi:"tcpWindowType"`
	// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
	TunnelNonHttp pulumi.StringPtrInput `pulumi:"tunnelNonHttp"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
	// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion pulumi.StringPtrInput `pulumi:"unknownHttpVersion"`
	// Enable/disable verification of DNS for policy matching. Valid values: `enable`, `disable`.
	VerifyDnsForPolicyMatching pulumi.StringPtrInput `pulumi:"verifyDnsForPolicyMatching"`
}

func (FirewallProfileprotocoloptionsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsHttp)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsHttpArgs) ToFirewallProfileprotocoloptionsHttpOutput() FirewallProfileprotocoloptionsHttpOutput {
	return i.ToFirewallProfileprotocoloptionsHttpOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsHttpArgs) ToFirewallProfileprotocoloptionsHttpOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsHttpOutput)
}

func (i FirewallProfileprotocoloptionsHttpArgs) ToFirewallProfileprotocoloptionsHttpPtrOutput() FirewallProfileprotocoloptionsHttpPtrOutput {
	return i.ToFirewallProfileprotocoloptionsHttpPtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsHttpArgs) ToFirewallProfileprotocoloptionsHttpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsHttpOutput).ToFirewallProfileprotocoloptionsHttpPtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsHttpPtrInput is an input type that accepts FirewallProfileprotocoloptionsHttpArgs, FirewallProfileprotocoloptionsHttpPtr and FirewallProfileprotocoloptionsHttpPtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsHttpPtrInput` via:
//
//	        FirewallProfileprotocoloptionsHttpArgs{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsHttpPtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsHttpPtrOutput() FirewallProfileprotocoloptionsHttpPtrOutput
	ToFirewallProfileprotocoloptionsHttpPtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsHttpPtrOutput
}

type firewallProfileprotocoloptionsHttpPtrType FirewallProfileprotocoloptionsHttpArgs

func FirewallProfileprotocoloptionsHttpPtr(v *FirewallProfileprotocoloptionsHttpArgs) FirewallProfileprotocoloptionsHttpPtrInput {
	return (*firewallProfileprotocoloptionsHttpPtrType)(v)
}

func (*firewallProfileprotocoloptionsHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsHttp)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsHttpPtrType) ToFirewallProfileprotocoloptionsHttpPtrOutput() FirewallProfileprotocoloptionsHttpPtrOutput {
	return i.ToFirewallProfileprotocoloptionsHttpPtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsHttpPtrType) ToFirewallProfileprotocoloptionsHttpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsHttpPtrOutput)
}

type FirewallProfileprotocoloptionsHttpOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsHttp)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsHttpOutput) ToFirewallProfileprotocoloptionsHttpOutput() FirewallProfileprotocoloptionsHttpOutput {
	return o
}

func (o FirewallProfileprotocoloptionsHttpOutput) ToFirewallProfileprotocoloptionsHttpOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsHttpOutput {
	return o
}

func (o FirewallProfileprotocoloptionsHttpOutput) ToFirewallProfileprotocoloptionsHttpPtrOutput() FirewallProfileprotocoloptionsHttpPtrOutput {
	return o.ToFirewallProfileprotocoloptionsHttpPtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsHttpOutput) ToFirewallProfileprotocoloptionsHttpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsHttp) *FirewallProfileprotocoloptionsHttp {
		return &v
	}).(FirewallProfileprotocoloptionsHttpPtrOutput)
}

// Enable/disable IP based URL rating. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpOutput) AddressIpRating() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.AddressIpRating }).(pulumi.StringPtrOutput)
}

// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
func (o FirewallProfileprotocoloptionsHttpOutput) BlockPageStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.BlockPageStatusCode }).(pulumi.IntPtrOutput)
}

// Amount of data to send in a transmission for client comforting (1 - 10240 bytes, default = 1).
func (o FirewallProfileprotocoloptionsHttpOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.ComfortAmount }).(pulumi.IntPtrOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o FirewallProfileprotocoloptionsHttpOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.ComfortInterval }).(pulumi.IntPtrOutput)
}

// Enable/disable Fortinet bar on HTML content. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpOutput) FortinetBar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.FortinetBar }).(pulumi.StringPtrOutput)
}

// Port for use by Fortinet Bar (1 - 65535, default = 8011).
func (o FirewallProfileprotocoloptionsHttpOutput) FortinetBarPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.FortinetBarPort }).(pulumi.IntPtrOutput)
}

// Enable/disable h2c HTTP connection upgrade. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpOutput) H2c() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.H2c }).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP policy check. Valid values: `disable`, `enable`.
func (o FirewallProfileprotocoloptionsHttpOutput) HttpPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.HttpPolicy }).(pulumi.StringPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
func (o FirewallProfileprotocoloptionsHttpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsHttpOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 80).
func (o FirewallProfileprotocoloptionsHttpOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets). Valid values: `jisx0201`, `jisx0208`, `jisx0212`, `gb2312`, `ksc5601-ex`, `euc-jp`, `sjis`, `iso2022-jp`, `iso2022-jp-1`, `iso2022-jp-2`, `euc-cn`, `ces-gbk`, `hz`, `ces-big5`, `euc-kr`, `iso2022-jp-3`, `iso8859-1`, `tis620`, `cp874`, `cp1252`, `cp1251`.
func (o FirewallProfileprotocoloptionsHttpOutput) PostLang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.PostLang }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Enable/disable blocking of partial downloads. Valid values: `disable`, `enable`.
func (o FirewallProfileprotocoloptionsHttpOutput) RangeBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.RangeBlock }).(pulumi.StringPtrOutput)
}

// Number of attempts to retry HTTP connection (0 - 100, default = 0).
func (o FirewallProfileprotocoloptionsHttpOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsHttpOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o FirewallProfileprotocoloptionsHttpOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.StreamBasedUncompressedLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable bypassing of streaming content from buffering. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpOutput) StreamingContentBypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.StreamingContentBypass }).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of HTTP X-Forwarded-For header. Valid values: `disable`, `enable`.
func (o FirewallProfileprotocoloptionsHttpOutput) StripXForwardedFor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.StripXForwardedFor }).(pulumi.StringPtrOutput)
}

// Bypass from scanning, or block a connection that attempts to switch protocol. Valid values: `bypass`, `block`.
func (o FirewallProfileprotocoloptionsHttpOutput) SwitchingProtocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.SwitchingProtocols }).(pulumi.StringPtrOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o FirewallProfileprotocoloptionsHttpOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.TcpWindowMaximum }).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o FirewallProfileprotocoloptionsHttpOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.TcpWindowMinimum }).(pulumi.IntPtrOutput)
}

// Set TCP static window size (default = 256KB).
func (o FirewallProfileprotocoloptionsHttpOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.TcpWindowSize }).(pulumi.IntPtrOutput)
}

// Specify type of TCP window to use for this protocol.
func (o FirewallProfileprotocoloptionsHttpOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.TcpWindowType }).(pulumi.StringPtrOutput)
}

// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpOutput) TunnelNonHttp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.TunnelNonHttp }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsHttpOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsHttpOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
func (o FirewallProfileprotocoloptionsHttpOutput) UnknownHttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.UnknownHttpVersion }).(pulumi.StringPtrOutput)
}

// Enable/disable verification of DNS for policy matching. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpOutput) VerifyDnsForPolicyMatching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsHttp) *string { return v.VerifyDnsForPolicyMatching }).(pulumi.StringPtrOutput)
}

type FirewallProfileprotocoloptionsHttpPtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsHttp)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsHttpPtrOutput) ToFirewallProfileprotocoloptionsHttpPtrOutput() FirewallProfileprotocoloptionsHttpPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsHttpPtrOutput) ToFirewallProfileprotocoloptionsHttpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsHttpPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsHttpPtrOutput) Elem() FirewallProfileprotocoloptionsHttpOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) FirewallProfileprotocoloptionsHttp {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsHttp
		return ret
	}).(FirewallProfileprotocoloptionsHttpOutput)
}

// Enable/disable IP based URL rating. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) AddressIpRating() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.AddressIpRating
	}).(pulumi.StringPtrOutput)
}

// Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) BlockPageStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.BlockPageStatusCode
	}).(pulumi.IntPtrOutput)
}

// Amount of data to send in a transmission for client comforting (1 - 10240 bytes, default = 1).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.ComfortAmount
	}).(pulumi.IntPtrOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.ComfortInterval
	}).(pulumi.IntPtrOutput)
}

// Enable/disable Fortinet bar on HTML content. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) FortinetBar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.FortinetBar
	}).(pulumi.StringPtrOutput)
}

// Port for use by Fortinet Bar (1 - 65535, default = 8011).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) FortinetBarPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.FortinetBarPort
	}).(pulumi.IntPtrOutput)
}

// Enable/disable h2c HTTP connection upgrade. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) H2c() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.H2c
	}).(pulumi.StringPtrOutput)
}

// Enable/disable HTTP policy check. Valid values: `disable`, `enable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) HttpPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.HttpPolicy
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 80).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// ID codes for character sets to be used to convert to UTF-8 for banned words and DLP on HTTP posts (maximum of 5 character sets). Valid values: `jisx0201`, `jisx0208`, `jisx0212`, `gb2312`, `ksc5601-ex`, `euc-jp`, `sjis`, `iso2022-jp`, `iso2022-jp-1`, `iso2022-jp-2`, `euc-cn`, `ces-gbk`, `hz`, `ces-big5`, `euc-kr`, `iso2022-jp-3`, `iso8859-1`, `tis620`, `cp874`, `cp1252`, `cp1251`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) PostLang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.PostLang
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Enable/disable blocking of partial downloads. Valid values: `disable`, `enable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) RangeBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.RangeBlock
	}).(pulumi.StringPtrOutput)
}

// Number of attempts to retry HTTP connection (0 - 100, default = 0).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.RetryCount
	}).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.StreamBasedUncompressedLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable bypassing of streaming content from buffering. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) StreamingContentBypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.StreamingContentBypass
	}).(pulumi.StringPtrOutput)
}

// Enable/disable stripping of HTTP X-Forwarded-For header. Valid values: `disable`, `enable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) StripXForwardedFor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.StripXForwardedFor
	}).(pulumi.StringPtrOutput)
}

// Bypass from scanning, or block a connection that attempts to switch protocol. Valid values: `bypass`, `block`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) SwitchingProtocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.SwitchingProtocols
	}).(pulumi.StringPtrOutput)
}

// Maximum dynamic TCP window size (default = 8MB).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMaximum
	}).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size (default = 128KB).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMinimum
	}).(pulumi.IntPtrOutput)
}

// Set TCP static window size (default = 256KB).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowSize
	}).(pulumi.IntPtrOutput)
}

// Specify type of TCP window to use for this protocol.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.TcpWindowType
	}).(pulumi.StringPtrOutput)
}

// Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) TunnelNonHttp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.TunnelNonHttp
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsHttpPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

// How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1. Valid values: `reject`, `tunnel`, `best-effort`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) UnknownHttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UnknownHttpVersion
	}).(pulumi.StringPtrOutput)
}

// Enable/disable verification of DNS for policy matching. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsHttpPtrOutput) VerifyDnsForPolicyMatching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsHttp) *string {
		if v == nil {
			return nil
		}
		return v.VerifyDnsForPolicyMatching
	}).(pulumi.StringPtrOutput)
}

type FirewallProfileprotocoloptionsImap struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 143).
	Ports *int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// FirewallProfileprotocoloptionsImapInput is an input type that accepts FirewallProfileprotocoloptionsImapArgs and FirewallProfileprotocoloptionsImapOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsImapInput` via:
//
//	FirewallProfileprotocoloptionsImapArgs{...}
type FirewallProfileprotocoloptionsImapInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsImapOutput() FirewallProfileprotocoloptionsImapOutput
	ToFirewallProfileprotocoloptionsImapOutputWithContext(context.Context) FirewallProfileprotocoloptionsImapOutput
}

type FirewallProfileprotocoloptionsImapArgs struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 143).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (FirewallProfileprotocoloptionsImapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsImap)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsImapArgs) ToFirewallProfileprotocoloptionsImapOutput() FirewallProfileprotocoloptionsImapOutput {
	return i.ToFirewallProfileprotocoloptionsImapOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsImapArgs) ToFirewallProfileprotocoloptionsImapOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsImapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsImapOutput)
}

func (i FirewallProfileprotocoloptionsImapArgs) ToFirewallProfileprotocoloptionsImapPtrOutput() FirewallProfileprotocoloptionsImapPtrOutput {
	return i.ToFirewallProfileprotocoloptionsImapPtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsImapArgs) ToFirewallProfileprotocoloptionsImapPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsImapOutput).ToFirewallProfileprotocoloptionsImapPtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsImapPtrInput is an input type that accepts FirewallProfileprotocoloptionsImapArgs, FirewallProfileprotocoloptionsImapPtr and FirewallProfileprotocoloptionsImapPtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsImapPtrInput` via:
//
//	        FirewallProfileprotocoloptionsImapArgs{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsImapPtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsImapPtrOutput() FirewallProfileprotocoloptionsImapPtrOutput
	ToFirewallProfileprotocoloptionsImapPtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsImapPtrOutput
}

type firewallProfileprotocoloptionsImapPtrType FirewallProfileprotocoloptionsImapArgs

func FirewallProfileprotocoloptionsImapPtr(v *FirewallProfileprotocoloptionsImapArgs) FirewallProfileprotocoloptionsImapPtrInput {
	return (*firewallProfileprotocoloptionsImapPtrType)(v)
}

func (*firewallProfileprotocoloptionsImapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsImap)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsImapPtrType) ToFirewallProfileprotocoloptionsImapPtrOutput() FirewallProfileprotocoloptionsImapPtrOutput {
	return i.ToFirewallProfileprotocoloptionsImapPtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsImapPtrType) ToFirewallProfileprotocoloptionsImapPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsImapPtrOutput)
}

type FirewallProfileprotocoloptionsImapOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsImapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsImap)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsImapOutput) ToFirewallProfileprotocoloptionsImapOutput() FirewallProfileprotocoloptionsImapOutput {
	return o
}

func (o FirewallProfileprotocoloptionsImapOutput) ToFirewallProfileprotocoloptionsImapOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsImapOutput {
	return o
}

func (o FirewallProfileprotocoloptionsImapOutput) ToFirewallProfileprotocoloptionsImapPtrOutput() FirewallProfileprotocoloptionsImapPtrOutput {
	return o.ToFirewallProfileprotocoloptionsImapPtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsImapOutput) ToFirewallProfileprotocoloptionsImapPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsImapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsImap) *FirewallProfileprotocoloptionsImap {
		return &v
	}).(FirewallProfileprotocoloptionsImapPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsImapOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsImap) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
func (o FirewallProfileprotocoloptionsImapOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsImap) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsImapOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsImap) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 143).
func (o FirewallProfileprotocoloptionsImapOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsImap) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsImapOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsImap) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsImapOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsImap) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsImapOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsImap) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsImapOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsImap) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsImapOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsImap) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsImapOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsImap) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsImapPtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsImapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsImap)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsImapPtrOutput) ToFirewallProfileprotocoloptionsImapPtrOutput() FirewallProfileprotocoloptionsImapPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsImapPtrOutput) ToFirewallProfileprotocoloptionsImapPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsImapPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsImapPtrOutput) Elem() FirewallProfileprotocoloptionsImapOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) FirewallProfileprotocoloptionsImap {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsImap
		return ret
	}).(FirewallProfileprotocoloptionsImapOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsImapPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
func (o FirewallProfileprotocoloptionsImapPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsImapPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 143).
func (o FirewallProfileprotocoloptionsImapPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsImapPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsImapPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsImapPtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsImapPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsImapPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsImapPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsImap) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsMailSignature struct {
	// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
	Signature *string `pulumi:"signature"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// FirewallProfileprotocoloptionsMailSignatureInput is an input type that accepts FirewallProfileprotocoloptionsMailSignatureArgs and FirewallProfileprotocoloptionsMailSignatureOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsMailSignatureInput` via:
//
//	FirewallProfileprotocoloptionsMailSignatureArgs{...}
type FirewallProfileprotocoloptionsMailSignatureInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsMailSignatureOutput() FirewallProfileprotocoloptionsMailSignatureOutput
	ToFirewallProfileprotocoloptionsMailSignatureOutputWithContext(context.Context) FirewallProfileprotocoloptionsMailSignatureOutput
}

type FirewallProfileprotocoloptionsMailSignatureArgs struct {
	// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
	Signature pulumi.StringPtrInput `pulumi:"signature"`
	// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (FirewallProfileprotocoloptionsMailSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsMailSignatureArgs) ToFirewallProfileprotocoloptionsMailSignatureOutput() FirewallProfileprotocoloptionsMailSignatureOutput {
	return i.ToFirewallProfileprotocoloptionsMailSignatureOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsMailSignatureArgs) ToFirewallProfileprotocoloptionsMailSignatureOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMailSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsMailSignatureOutput)
}

func (i FirewallProfileprotocoloptionsMailSignatureArgs) ToFirewallProfileprotocoloptionsMailSignaturePtrOutput() FirewallProfileprotocoloptionsMailSignaturePtrOutput {
	return i.ToFirewallProfileprotocoloptionsMailSignaturePtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsMailSignatureArgs) ToFirewallProfileprotocoloptionsMailSignaturePtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMailSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsMailSignatureOutput).ToFirewallProfileprotocoloptionsMailSignaturePtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsMailSignaturePtrInput is an input type that accepts FirewallProfileprotocoloptionsMailSignatureArgs, FirewallProfileprotocoloptionsMailSignaturePtr and FirewallProfileprotocoloptionsMailSignaturePtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsMailSignaturePtrInput` via:
//
//	        FirewallProfileprotocoloptionsMailSignatureArgs{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsMailSignaturePtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsMailSignaturePtrOutput() FirewallProfileprotocoloptionsMailSignaturePtrOutput
	ToFirewallProfileprotocoloptionsMailSignaturePtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsMailSignaturePtrOutput
}

type firewallProfileprotocoloptionsMailSignaturePtrType FirewallProfileprotocoloptionsMailSignatureArgs

func FirewallProfileprotocoloptionsMailSignaturePtr(v *FirewallProfileprotocoloptionsMailSignatureArgs) FirewallProfileprotocoloptionsMailSignaturePtrInput {
	return (*firewallProfileprotocoloptionsMailSignaturePtrType)(v)
}

func (*firewallProfileprotocoloptionsMailSignaturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsMailSignaturePtrType) ToFirewallProfileprotocoloptionsMailSignaturePtrOutput() FirewallProfileprotocoloptionsMailSignaturePtrOutput {
	return i.ToFirewallProfileprotocoloptionsMailSignaturePtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsMailSignaturePtrType) ToFirewallProfileprotocoloptionsMailSignaturePtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMailSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsMailSignaturePtrOutput)
}

type FirewallProfileprotocoloptionsMailSignatureOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsMailSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsMailSignatureOutput) ToFirewallProfileprotocoloptionsMailSignatureOutput() FirewallProfileprotocoloptionsMailSignatureOutput {
	return o
}

func (o FirewallProfileprotocoloptionsMailSignatureOutput) ToFirewallProfileprotocoloptionsMailSignatureOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMailSignatureOutput {
	return o
}

func (o FirewallProfileprotocoloptionsMailSignatureOutput) ToFirewallProfileprotocoloptionsMailSignaturePtrOutput() FirewallProfileprotocoloptionsMailSignaturePtrOutput {
	return o.ToFirewallProfileprotocoloptionsMailSignaturePtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsMailSignatureOutput) ToFirewallProfileprotocoloptionsMailSignaturePtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMailSignaturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsMailSignature) *FirewallProfileprotocoloptionsMailSignature {
		return &v
	}).(FirewallProfileprotocoloptionsMailSignaturePtrOutput)
}

// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
func (o FirewallProfileprotocoloptionsMailSignatureOutput) Signature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsMailSignature) *string { return v.Signature }).(pulumi.StringPtrOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate. Valid values: `disable`, `enable`.
func (o FirewallProfileprotocoloptionsMailSignatureOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsMailSignature) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type FirewallProfileprotocoloptionsMailSignaturePtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsMailSignaturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsMailSignature)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsMailSignaturePtrOutput) ToFirewallProfileprotocoloptionsMailSignaturePtrOutput() FirewallProfileprotocoloptionsMailSignaturePtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsMailSignaturePtrOutput) ToFirewallProfileprotocoloptionsMailSignaturePtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMailSignaturePtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsMailSignaturePtrOutput) Elem() FirewallProfileprotocoloptionsMailSignatureOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMailSignature) FirewallProfileprotocoloptionsMailSignature {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsMailSignature
		return ret
	}).(FirewallProfileprotocoloptionsMailSignatureOutput)
}

// Email signature to be added to outgoing email (if the signature contains spaces, enclose with quotation marks).
func (o FirewallProfileprotocoloptionsMailSignaturePtrOutput) Signature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMailSignature) *string {
		if v == nil {
			return nil
		}
		return v.Signature
	}).(pulumi.StringPtrOutput)
}

// Enable/disable adding an email signature to SMTP email messages as they pass through the FortiGate. Valid values: `disable`, `enable`.
func (o FirewallProfileprotocoloptionsMailSignaturePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMailSignature) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type FirewallProfileprotocoloptionsMapi struct {
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 110).
	Ports *int `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// FirewallProfileprotocoloptionsMapiInput is an input type that accepts FirewallProfileprotocoloptionsMapiArgs and FirewallProfileprotocoloptionsMapiOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsMapiInput` via:
//
//	FirewallProfileprotocoloptionsMapiArgs{...}
type FirewallProfileprotocoloptionsMapiInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsMapiOutput() FirewallProfileprotocoloptionsMapiOutput
	ToFirewallProfileprotocoloptionsMapiOutputWithContext(context.Context) FirewallProfileprotocoloptionsMapiOutput
}

type FirewallProfileprotocoloptionsMapiArgs struct {
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 110).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (FirewallProfileprotocoloptionsMapiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsMapi)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsMapiArgs) ToFirewallProfileprotocoloptionsMapiOutput() FirewallProfileprotocoloptionsMapiOutput {
	return i.ToFirewallProfileprotocoloptionsMapiOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsMapiArgs) ToFirewallProfileprotocoloptionsMapiOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMapiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsMapiOutput)
}

func (i FirewallProfileprotocoloptionsMapiArgs) ToFirewallProfileprotocoloptionsMapiPtrOutput() FirewallProfileprotocoloptionsMapiPtrOutput {
	return i.ToFirewallProfileprotocoloptionsMapiPtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsMapiArgs) ToFirewallProfileprotocoloptionsMapiPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsMapiOutput).ToFirewallProfileprotocoloptionsMapiPtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsMapiPtrInput is an input type that accepts FirewallProfileprotocoloptionsMapiArgs, FirewallProfileprotocoloptionsMapiPtr and FirewallProfileprotocoloptionsMapiPtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsMapiPtrInput` via:
//
//	        FirewallProfileprotocoloptionsMapiArgs{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsMapiPtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsMapiPtrOutput() FirewallProfileprotocoloptionsMapiPtrOutput
	ToFirewallProfileprotocoloptionsMapiPtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsMapiPtrOutput
}

type firewallProfileprotocoloptionsMapiPtrType FirewallProfileprotocoloptionsMapiArgs

func FirewallProfileprotocoloptionsMapiPtr(v *FirewallProfileprotocoloptionsMapiArgs) FirewallProfileprotocoloptionsMapiPtrInput {
	return (*firewallProfileprotocoloptionsMapiPtrType)(v)
}

func (*firewallProfileprotocoloptionsMapiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsMapi)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsMapiPtrType) ToFirewallProfileprotocoloptionsMapiPtrOutput() FirewallProfileprotocoloptionsMapiPtrOutput {
	return i.ToFirewallProfileprotocoloptionsMapiPtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsMapiPtrType) ToFirewallProfileprotocoloptionsMapiPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsMapiPtrOutput)
}

type FirewallProfileprotocoloptionsMapiOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsMapiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsMapi)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsMapiOutput) ToFirewallProfileprotocoloptionsMapiOutput() FirewallProfileprotocoloptionsMapiOutput {
	return o
}

func (o FirewallProfileprotocoloptionsMapiOutput) ToFirewallProfileprotocoloptionsMapiOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMapiOutput {
	return o
}

func (o FirewallProfileprotocoloptionsMapiOutput) ToFirewallProfileprotocoloptionsMapiPtrOutput() FirewallProfileprotocoloptionsMapiPtrOutput {
	return o.ToFirewallProfileprotocoloptionsMapiPtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsMapiOutput) ToFirewallProfileprotocoloptionsMapiPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMapiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsMapi) *FirewallProfileprotocoloptionsMapi {
		return &v
	}).(FirewallProfileprotocoloptionsMapiPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
func (o FirewallProfileprotocoloptionsMapiOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsMapi) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsMapiOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsMapi) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 110).
func (o FirewallProfileprotocoloptionsMapiOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsMapi) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsMapiOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsMapi) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsMapiOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsMapi) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsMapiOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsMapi) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsMapiOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsMapi) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsMapiPtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsMapiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsMapi)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsMapiPtrOutput) ToFirewallProfileprotocoloptionsMapiPtrOutput() FirewallProfileprotocoloptionsMapiPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsMapiPtrOutput) ToFirewallProfileprotocoloptionsMapiPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsMapiPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsMapiPtrOutput) Elem() FirewallProfileprotocoloptionsMapiOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMapi) FirewallProfileprotocoloptionsMapi {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsMapi
		return ret
	}).(FirewallProfileprotocoloptionsMapiOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`.
func (o FirewallProfileprotocoloptionsMapiPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMapi) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsMapiPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMapi) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 110).
func (o FirewallProfileprotocoloptionsMapiPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMapi) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsMapiPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMapi) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsMapiPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMapi) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsMapiPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMapi) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsMapiPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsMapi) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsNntp struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `oversize`, `splice`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 119).
	Ports *int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// FirewallProfileprotocoloptionsNntpInput is an input type that accepts FirewallProfileprotocoloptionsNntpArgs and FirewallProfileprotocoloptionsNntpOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsNntpInput` via:
//
//	FirewallProfileprotocoloptionsNntpArgs{...}
type FirewallProfileprotocoloptionsNntpInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsNntpOutput() FirewallProfileprotocoloptionsNntpOutput
	ToFirewallProfileprotocoloptionsNntpOutputWithContext(context.Context) FirewallProfileprotocoloptionsNntpOutput
}

type FirewallProfileprotocoloptionsNntpArgs struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `oversize`, `splice`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 119).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (FirewallProfileprotocoloptionsNntpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsNntp)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsNntpArgs) ToFirewallProfileprotocoloptionsNntpOutput() FirewallProfileprotocoloptionsNntpOutput {
	return i.ToFirewallProfileprotocoloptionsNntpOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsNntpArgs) ToFirewallProfileprotocoloptionsNntpOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsNntpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsNntpOutput)
}

func (i FirewallProfileprotocoloptionsNntpArgs) ToFirewallProfileprotocoloptionsNntpPtrOutput() FirewallProfileprotocoloptionsNntpPtrOutput {
	return i.ToFirewallProfileprotocoloptionsNntpPtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsNntpArgs) ToFirewallProfileprotocoloptionsNntpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsNntpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsNntpOutput).ToFirewallProfileprotocoloptionsNntpPtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsNntpPtrInput is an input type that accepts FirewallProfileprotocoloptionsNntpArgs, FirewallProfileprotocoloptionsNntpPtr and FirewallProfileprotocoloptionsNntpPtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsNntpPtrInput` via:
//
//	        FirewallProfileprotocoloptionsNntpArgs{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsNntpPtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsNntpPtrOutput() FirewallProfileprotocoloptionsNntpPtrOutput
	ToFirewallProfileprotocoloptionsNntpPtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsNntpPtrOutput
}

type firewallProfileprotocoloptionsNntpPtrType FirewallProfileprotocoloptionsNntpArgs

func FirewallProfileprotocoloptionsNntpPtr(v *FirewallProfileprotocoloptionsNntpArgs) FirewallProfileprotocoloptionsNntpPtrInput {
	return (*firewallProfileprotocoloptionsNntpPtrType)(v)
}

func (*firewallProfileprotocoloptionsNntpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsNntp)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsNntpPtrType) ToFirewallProfileprotocoloptionsNntpPtrOutput() FirewallProfileprotocoloptionsNntpPtrOutput {
	return i.ToFirewallProfileprotocoloptionsNntpPtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsNntpPtrType) ToFirewallProfileprotocoloptionsNntpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsNntpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsNntpPtrOutput)
}

type FirewallProfileprotocoloptionsNntpOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsNntpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsNntp)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsNntpOutput) ToFirewallProfileprotocoloptionsNntpOutput() FirewallProfileprotocoloptionsNntpOutput {
	return o
}

func (o FirewallProfileprotocoloptionsNntpOutput) ToFirewallProfileprotocoloptionsNntpOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsNntpOutput {
	return o
}

func (o FirewallProfileprotocoloptionsNntpOutput) ToFirewallProfileprotocoloptionsNntpPtrOutput() FirewallProfileprotocoloptionsNntpPtrOutput {
	return o.ToFirewallProfileprotocoloptionsNntpPtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsNntpOutput) ToFirewallProfileprotocoloptionsNntpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsNntpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsNntp) *FirewallProfileprotocoloptionsNntp {
		return &v
	}).(FirewallProfileprotocoloptionsNntpPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsNntpOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsNntp) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`, `splice`.
func (o FirewallProfileprotocoloptionsNntpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsNntp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsNntpOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsNntp) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 119).
func (o FirewallProfileprotocoloptionsNntpOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsNntp) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsNntpOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsNntp) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsNntpOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsNntp) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsNntpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsNntp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsNntpOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsNntp) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsNntpOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsNntp) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsNntpPtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsNntpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsNntp)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsNntpPtrOutput) ToFirewallProfileprotocoloptionsNntpPtrOutput() FirewallProfileprotocoloptionsNntpPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsNntpPtrOutput) ToFirewallProfileprotocoloptionsNntpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsNntpPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsNntpPtrOutput) Elem() FirewallProfileprotocoloptionsNntpOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsNntp) FirewallProfileprotocoloptionsNntp {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsNntp
		return ret
	}).(FirewallProfileprotocoloptionsNntpOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsNntpPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsNntp) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`, `splice`.
func (o FirewallProfileprotocoloptionsNntpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsNntp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsNntpPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsNntp) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 119).
func (o FirewallProfileprotocoloptionsNntpPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsNntp) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsNntpPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsNntp) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsNntpPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsNntp) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsNntpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsNntp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsNntpPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsNntp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsNntpPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsNntp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsPop3 struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 80).
	Ports *int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	//
	// The `pop3` block supports:
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// FirewallProfileprotocoloptionsPop3Input is an input type that accepts FirewallProfileprotocoloptionsPop3Args and FirewallProfileprotocoloptionsPop3Output values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsPop3Input` via:
//
//	FirewallProfileprotocoloptionsPop3Args{...}
type FirewallProfileprotocoloptionsPop3Input interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsPop3Output() FirewallProfileprotocoloptionsPop3Output
	ToFirewallProfileprotocoloptionsPop3OutputWithContext(context.Context) FirewallProfileprotocoloptionsPop3Output
}

type FirewallProfileprotocoloptionsPop3Args struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 80).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	//
	// The `pop3` block supports:
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (FirewallProfileprotocoloptionsPop3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsPop3)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsPop3Args) ToFirewallProfileprotocoloptionsPop3Output() FirewallProfileprotocoloptionsPop3Output {
	return i.ToFirewallProfileprotocoloptionsPop3OutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsPop3Args) ToFirewallProfileprotocoloptionsPop3OutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsPop3Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsPop3Output)
}

func (i FirewallProfileprotocoloptionsPop3Args) ToFirewallProfileprotocoloptionsPop3PtrOutput() FirewallProfileprotocoloptionsPop3PtrOutput {
	return i.ToFirewallProfileprotocoloptionsPop3PtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsPop3Args) ToFirewallProfileprotocoloptionsPop3PtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsPop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsPop3Output).ToFirewallProfileprotocoloptionsPop3PtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsPop3PtrInput is an input type that accepts FirewallProfileprotocoloptionsPop3Args, FirewallProfileprotocoloptionsPop3Ptr and FirewallProfileprotocoloptionsPop3PtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsPop3PtrInput` via:
//
//	        FirewallProfileprotocoloptionsPop3Args{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsPop3PtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsPop3PtrOutput() FirewallProfileprotocoloptionsPop3PtrOutput
	ToFirewallProfileprotocoloptionsPop3PtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsPop3PtrOutput
}

type firewallProfileprotocoloptionsPop3PtrType FirewallProfileprotocoloptionsPop3Args

func FirewallProfileprotocoloptionsPop3Ptr(v *FirewallProfileprotocoloptionsPop3Args) FirewallProfileprotocoloptionsPop3PtrInput {
	return (*firewallProfileprotocoloptionsPop3PtrType)(v)
}

func (*firewallProfileprotocoloptionsPop3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsPop3)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsPop3PtrType) ToFirewallProfileprotocoloptionsPop3PtrOutput() FirewallProfileprotocoloptionsPop3PtrOutput {
	return i.ToFirewallProfileprotocoloptionsPop3PtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsPop3PtrType) ToFirewallProfileprotocoloptionsPop3PtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsPop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsPop3PtrOutput)
}

type FirewallProfileprotocoloptionsPop3Output struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsPop3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsPop3)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsPop3Output) ToFirewallProfileprotocoloptionsPop3Output() FirewallProfileprotocoloptionsPop3Output {
	return o
}

func (o FirewallProfileprotocoloptionsPop3Output) ToFirewallProfileprotocoloptionsPop3OutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsPop3Output {
	return o
}

func (o FirewallProfileprotocoloptionsPop3Output) ToFirewallProfileprotocoloptionsPop3PtrOutput() FirewallProfileprotocoloptionsPop3PtrOutput {
	return o.ToFirewallProfileprotocoloptionsPop3PtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsPop3Output) ToFirewallProfileprotocoloptionsPop3PtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsPop3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsPop3) *FirewallProfileprotocoloptionsPop3 {
		return &v
	}).(FirewallProfileprotocoloptionsPop3PtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsPop3Output) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsPop3) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
func (o FirewallProfileprotocoloptionsPop3Output) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsPop3) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsPop3Output) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsPop3) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 80).
func (o FirewallProfileprotocoloptionsPop3Output) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsPop3) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsPop3Output) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsPop3) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
//
// The `pop3` block supports:
func (o FirewallProfileprotocoloptionsPop3Output) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsPop3) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsPop3Output) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsPop3) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsPop3Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsPop3) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsPop3Output) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsPop3) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsPop3Output) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsPop3) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsPop3PtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsPop3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsPop3)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsPop3PtrOutput) ToFirewallProfileprotocoloptionsPop3PtrOutput() FirewallProfileprotocoloptionsPop3PtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsPop3PtrOutput) ToFirewallProfileprotocoloptionsPop3PtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsPop3PtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsPop3PtrOutput) Elem() FirewallProfileprotocoloptionsPop3Output {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) FirewallProfileprotocoloptionsPop3 {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsPop3
		return ret
	}).(FirewallProfileprotocoloptionsPop3Output)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsPop3PtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `clientcomfort`, `servercomfort`, `oversize`, `chunkedbypass`.
func (o FirewallProfileprotocoloptionsPop3PtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsPop3PtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 80).
func (o FirewallProfileprotocoloptionsPop3PtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsPop3PtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
//
// The `pop3` block supports:
func (o FirewallProfileprotocoloptionsPop3PtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsPop3PtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsPop3PtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsPop3PtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsPop3PtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsPop3) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsSmtp struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll *string `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`, `splice`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 25).
	Ports *int `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// Enable/disable SMTP server busy when server not available. Valid values: `enable`, `disable`.
	ServerBusy *string `pulumi:"serverBusy"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// FirewallProfileprotocoloptionsSmtpInput is an input type that accepts FirewallProfileprotocoloptionsSmtpArgs and FirewallProfileprotocoloptionsSmtpOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsSmtpInput` via:
//
//	FirewallProfileprotocoloptionsSmtpArgs{...}
type FirewallProfileprotocoloptionsSmtpInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsSmtpOutput() FirewallProfileprotocoloptionsSmtpOutput
	ToFirewallProfileprotocoloptionsSmtpOutputWithContext(context.Context) FirewallProfileprotocoloptionsSmtpOutput
}

type FirewallProfileprotocoloptionsSmtpArgs struct {
	// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`, `splice`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Ports to scan for content (1 - 65535, default = 25).
	Ports pulumi.IntPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// Enable/disable SMTP server busy when server not available. Valid values: `enable`, `disable`.
	ServerBusy pulumi.StringPtrInput `pulumi:"serverBusy"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (FirewallProfileprotocoloptionsSmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsSmtpArgs) ToFirewallProfileprotocoloptionsSmtpOutput() FirewallProfileprotocoloptionsSmtpOutput {
	return i.ToFirewallProfileprotocoloptionsSmtpOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsSmtpArgs) ToFirewallProfileprotocoloptionsSmtpOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsSmtpOutput)
}

func (i FirewallProfileprotocoloptionsSmtpArgs) ToFirewallProfileprotocoloptionsSmtpPtrOutput() FirewallProfileprotocoloptionsSmtpPtrOutput {
	return i.ToFirewallProfileprotocoloptionsSmtpPtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsSmtpArgs) ToFirewallProfileprotocoloptionsSmtpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsSmtpOutput).ToFirewallProfileprotocoloptionsSmtpPtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsSmtpPtrInput is an input type that accepts FirewallProfileprotocoloptionsSmtpArgs, FirewallProfileprotocoloptionsSmtpPtr and FirewallProfileprotocoloptionsSmtpPtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsSmtpPtrInput` via:
//
//	        FirewallProfileprotocoloptionsSmtpArgs{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsSmtpPtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsSmtpPtrOutput() FirewallProfileprotocoloptionsSmtpPtrOutput
	ToFirewallProfileprotocoloptionsSmtpPtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsSmtpPtrOutput
}

type firewallProfileprotocoloptionsSmtpPtrType FirewallProfileprotocoloptionsSmtpArgs

func FirewallProfileprotocoloptionsSmtpPtr(v *FirewallProfileprotocoloptionsSmtpArgs) FirewallProfileprotocoloptionsSmtpPtrInput {
	return (*firewallProfileprotocoloptionsSmtpPtrType)(v)
}

func (*firewallProfileprotocoloptionsSmtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsSmtpPtrType) ToFirewallProfileprotocoloptionsSmtpPtrOutput() FirewallProfileprotocoloptionsSmtpPtrOutput {
	return i.ToFirewallProfileprotocoloptionsSmtpPtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsSmtpPtrType) ToFirewallProfileprotocoloptionsSmtpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsSmtpPtrOutput)
}

type FirewallProfileprotocoloptionsSmtpOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsSmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsSmtpOutput) ToFirewallProfileprotocoloptionsSmtpOutput() FirewallProfileprotocoloptionsSmtpOutput {
	return o
}

func (o FirewallProfileprotocoloptionsSmtpOutput) ToFirewallProfileprotocoloptionsSmtpOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSmtpOutput {
	return o
}

func (o FirewallProfileprotocoloptionsSmtpOutput) ToFirewallProfileprotocoloptionsSmtpPtrOutput() FirewallProfileprotocoloptionsSmtpPtrOutput {
	return o.ToFirewallProfileprotocoloptionsSmtpPtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsSmtpOutput) ToFirewallProfileprotocoloptionsSmtpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSmtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsSmtp) *FirewallProfileprotocoloptionsSmtp {
		return &v
	}).(FirewallProfileprotocoloptionsSmtpPtrOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSmtpOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`, `splice`.
func (o FirewallProfileprotocoloptionsSmtpOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsSmtpOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 25).
func (o FirewallProfileprotocoloptionsSmtpOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *int { return v.Ports }).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSmtpOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSmtpOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP server busy when server not available. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSmtpOutput) ServerBusy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *string { return v.ServerBusy }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsSmtpOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSmtpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsSmtpOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsSmtpOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSmtp) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsSmtpPtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsSmtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsSmtp)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsSmtpPtrOutput) ToFirewallProfileprotocoloptionsSmtpPtrOutput() FirewallProfileprotocoloptionsSmtpPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsSmtpPtrOutput) ToFirewallProfileprotocoloptionsSmtpPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSmtpPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsSmtpPtrOutput) Elem() FirewallProfileprotocoloptionsSmtpOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) FirewallProfileprotocoloptionsSmtp {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsSmtp
		return ret
	}).(FirewallProfileprotocoloptionsSmtpOutput)
}

// Enable/disable the inspection of all ports for the protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `fragmail`, `oversize`, `splice`.
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Ports to scan for content (1 - 65535, default = 25).
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) Ports() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SMTP server busy when server not available. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) ServerBusy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.ServerBusy
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Enable/disable the active status of scanning for this protocol. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsSmtpPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSmtp) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsSsh struct {
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount *int `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval *int `pulumi:"comfortInterval"`
	// One or more options that can be applied to the session. Valid values: `oversize`, `clientcomfort`, `servercomfort`.
	Options *string `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit *int `pulumi:"oversizeLimit"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 *string `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded *string `pulumi:"sslOffloaded"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit *int `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum *int `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum *int `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize *int `pulumi:"tcpWindowSize"`
	// TCP window type to use for this protocol.
	TcpWindowType *string `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit *int `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit *int `pulumi:"uncompressedOversizeLimit"`
}

// FirewallProfileprotocoloptionsSshInput is an input type that accepts FirewallProfileprotocoloptionsSshArgs and FirewallProfileprotocoloptionsSshOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsSshInput` via:
//
//	FirewallProfileprotocoloptionsSshArgs{...}
type FirewallProfileprotocoloptionsSshInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsSshOutput() FirewallProfileprotocoloptionsSshOutput
	ToFirewallProfileprotocoloptionsSshOutputWithContext(context.Context) FirewallProfileprotocoloptionsSshOutput
}

type FirewallProfileprotocoloptionsSshArgs struct {
	// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
	ComfortAmount pulumi.IntPtrInput `pulumi:"comfortAmount"`
	// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
	ComfortInterval pulumi.IntPtrInput `pulumi:"comfortInterval"`
	// One or more options that can be applied to the session. Valid values: `oversize`, `clientcomfort`, `servercomfort`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
	OversizeLimit pulumi.IntPtrInput `pulumi:"oversizeLimit"`
	// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
	ScanBzip2 pulumi.StringPtrInput `pulumi:"scanBzip2"`
	// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
	SslOffloaded pulumi.StringPtrInput `pulumi:"sslOffloaded"`
	// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
	StreamBasedUncompressedLimit pulumi.IntPtrInput `pulumi:"streamBasedUncompressedLimit"`
	// Maximum dynamic TCP window size.
	TcpWindowMaximum pulumi.IntPtrInput `pulumi:"tcpWindowMaximum"`
	// Minimum dynamic TCP window size.
	TcpWindowMinimum pulumi.IntPtrInput `pulumi:"tcpWindowMinimum"`
	// Set TCP static window size.
	TcpWindowSize pulumi.IntPtrInput `pulumi:"tcpWindowSize"`
	// TCP window type to use for this protocol.
	TcpWindowType pulumi.StringPtrInput `pulumi:"tcpWindowType"`
	// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
	UncompressedNestLimit pulumi.IntPtrInput `pulumi:"uncompressedNestLimit"`
	// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
	UncompressedOversizeLimit pulumi.IntPtrInput `pulumi:"uncompressedOversizeLimit"`
}

func (FirewallProfileprotocoloptionsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsSsh)(nil)).Elem()
}

func (i FirewallProfileprotocoloptionsSshArgs) ToFirewallProfileprotocoloptionsSshOutput() FirewallProfileprotocoloptionsSshOutput {
	return i.ToFirewallProfileprotocoloptionsSshOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsSshArgs) ToFirewallProfileprotocoloptionsSshOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsSshOutput)
}

func (i FirewallProfileprotocoloptionsSshArgs) ToFirewallProfileprotocoloptionsSshPtrOutput() FirewallProfileprotocoloptionsSshPtrOutput {
	return i.ToFirewallProfileprotocoloptionsSshPtrOutputWithContext(context.Background())
}

func (i FirewallProfileprotocoloptionsSshArgs) ToFirewallProfileprotocoloptionsSshPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsSshOutput).ToFirewallProfileprotocoloptionsSshPtrOutputWithContext(ctx)
}

// FirewallProfileprotocoloptionsSshPtrInput is an input type that accepts FirewallProfileprotocoloptionsSshArgs, FirewallProfileprotocoloptionsSshPtr and FirewallProfileprotocoloptionsSshPtrOutput values.
// You can construct a concrete instance of `FirewallProfileprotocoloptionsSshPtrInput` via:
//
//	        FirewallProfileprotocoloptionsSshArgs{...}
//
//	or:
//
//	        nil
type FirewallProfileprotocoloptionsSshPtrInput interface {
	pulumi.Input

	ToFirewallProfileprotocoloptionsSshPtrOutput() FirewallProfileprotocoloptionsSshPtrOutput
	ToFirewallProfileprotocoloptionsSshPtrOutputWithContext(context.Context) FirewallProfileprotocoloptionsSshPtrOutput
}

type firewallProfileprotocoloptionsSshPtrType FirewallProfileprotocoloptionsSshArgs

func FirewallProfileprotocoloptionsSshPtr(v *FirewallProfileprotocoloptionsSshArgs) FirewallProfileprotocoloptionsSshPtrInput {
	return (*firewallProfileprotocoloptionsSshPtrType)(v)
}

func (*firewallProfileprotocoloptionsSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsSsh)(nil)).Elem()
}

func (i *firewallProfileprotocoloptionsSshPtrType) ToFirewallProfileprotocoloptionsSshPtrOutput() FirewallProfileprotocoloptionsSshPtrOutput {
	return i.ToFirewallProfileprotocoloptionsSshPtrOutputWithContext(context.Background())
}

func (i *firewallProfileprotocoloptionsSshPtrType) ToFirewallProfileprotocoloptionsSshPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileprotocoloptionsSshPtrOutput)
}

type FirewallProfileprotocoloptionsSshOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProfileprotocoloptionsSsh)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsSshOutput) ToFirewallProfileprotocoloptionsSshOutput() FirewallProfileprotocoloptionsSshOutput {
	return o
}

func (o FirewallProfileprotocoloptionsSshOutput) ToFirewallProfileprotocoloptionsSshOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSshOutput {
	return o
}

func (o FirewallProfileprotocoloptionsSshOutput) ToFirewallProfileprotocoloptionsSshPtrOutput() FirewallProfileprotocoloptionsSshPtrOutput {
	return o.ToFirewallProfileprotocoloptionsSshPtrOutputWithContext(context.Background())
}

func (o FirewallProfileprotocoloptionsSshOutput) ToFirewallProfileprotocoloptionsSshPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallProfileprotocoloptionsSsh) *FirewallProfileprotocoloptionsSsh {
		return &v
	}).(FirewallProfileprotocoloptionsSshPtrOutput)
}

// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
func (o FirewallProfileprotocoloptionsSshOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *int { return v.ComfortAmount }).(pulumi.IntPtrOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o FirewallProfileprotocoloptionsSshOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *int { return v.ComfortInterval }).(pulumi.IntPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`, `clientcomfort`, `servercomfort`.
func (o FirewallProfileprotocoloptionsSshOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsSshOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *int { return v.OversizeLimit }).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSshOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *string { return v.ScanBzip2 }).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsSshOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *string { return v.SslOffloaded }).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o FirewallProfileprotocoloptionsSshOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *int { return v.StreamBasedUncompressedLimit }).(pulumi.IntPtrOutput)
}

// Maximum dynamic TCP window size.
func (o FirewallProfileprotocoloptionsSshOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *int { return v.TcpWindowMaximum }).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o FirewallProfileprotocoloptionsSshOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *int { return v.TcpWindowMinimum }).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o FirewallProfileprotocoloptionsSshOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *int { return v.TcpWindowSize }).(pulumi.IntPtrOutput)
}

// TCP window type to use for this protocol.
func (o FirewallProfileprotocoloptionsSshOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *string { return v.TcpWindowType }).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsSshOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *int { return v.UncompressedNestLimit }).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsSshOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProfileprotocoloptionsSsh) *int { return v.UncompressedOversizeLimit }).(pulumi.IntPtrOutput)
}

type FirewallProfileprotocoloptionsSshPtrOutput struct{ *pulumi.OutputState }

func (FirewallProfileprotocoloptionsSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileprotocoloptionsSsh)(nil)).Elem()
}

func (o FirewallProfileprotocoloptionsSshPtrOutput) ToFirewallProfileprotocoloptionsSshPtrOutput() FirewallProfileprotocoloptionsSshPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsSshPtrOutput) ToFirewallProfileprotocoloptionsSshPtrOutputWithContext(ctx context.Context) FirewallProfileprotocoloptionsSshPtrOutput {
	return o
}

func (o FirewallProfileprotocoloptionsSshPtrOutput) Elem() FirewallProfileprotocoloptionsSshOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) FirewallProfileprotocoloptionsSsh {
		if v != nil {
			return *v
		}
		var ret FirewallProfileprotocoloptionsSsh
		return ret
	}).(FirewallProfileprotocoloptionsSshOutput)
}

// Amount of data to send in a transmission for client comforting (1 - 65535 bytes, default = 1).
func (o FirewallProfileprotocoloptionsSshPtrOutput) ComfortAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.ComfortAmount
	}).(pulumi.IntPtrOutput)
}

// Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
func (o FirewallProfileprotocoloptionsSshPtrOutput) ComfortInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.ComfortInterval
	}).(pulumi.IntPtrOutput)
}

// One or more options that can be applied to the session. Valid values: `oversize`, `clientcomfort`, `servercomfort`.
func (o FirewallProfileprotocoloptionsSshPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
func (o FirewallProfileprotocoloptionsSshPtrOutput) OversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.OversizeLimit
	}).(pulumi.IntPtrOutput)
}

// Enable/disable scanning of BZip2 compressed files. Valid values: `enable`, `disable`.
func (o FirewallProfileprotocoloptionsSshPtrOutput) ScanBzip2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *string {
		if v == nil {
			return nil
		}
		return v.ScanBzip2
	}).(pulumi.StringPtrOutput)
}

// SSL decryption and encryption performed by an external device. Valid values: `no`, `yes`.
func (o FirewallProfileprotocoloptionsSshPtrOutput) SslOffloaded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *string {
		if v == nil {
			return nil
		}
		return v.SslOffloaded
	}).(pulumi.StringPtrOutput)
}

// Maximum stream-based uncompressed data size that will be scanned (MB, 0 = unlimited (default).  Stream-based uncompression used only under certain conditions.).
func (o FirewallProfileprotocoloptionsSshPtrOutput) StreamBasedUncompressedLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.StreamBasedUncompressedLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum dynamic TCP window size.
func (o FirewallProfileprotocoloptionsSshPtrOutput) TcpWindowMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMaximum
	}).(pulumi.IntPtrOutput)
}

// Minimum dynamic TCP window size.
func (o FirewallProfileprotocoloptionsSshPtrOutput) TcpWindowMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowMinimum
	}).(pulumi.IntPtrOutput)
}

// Set TCP static window size.
func (o FirewallProfileprotocoloptionsSshPtrOutput) TcpWindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.TcpWindowSize
	}).(pulumi.IntPtrOutput)
}

// TCP window type to use for this protocol.
func (o FirewallProfileprotocoloptionsSshPtrOutput) TcpWindowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *string {
		if v == nil {
			return nil
		}
		return v.TcpWindowType
	}).(pulumi.StringPtrOutput)
}

// Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
func (o FirewallProfileprotocoloptionsSshPtrOutput) UncompressedNestLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedNestLimit
	}).(pulumi.IntPtrOutput)
}

// Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
func (o FirewallProfileprotocoloptionsSshPtrOutput) UncompressedOversizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallProfileprotocoloptionsSsh) *int {
		if v == nil {
			return nil
		}
		return v.UncompressedOversizeLimit
	}).(pulumi.IntPtrOutput)
}

type FirewallProxyaddressApplication struct {
	// SaaS applicaton name.
	Name *string `pulumi:"name"`
}

// FirewallProxyaddressApplicationInput is an input type that accepts FirewallProxyaddressApplicationArgs and FirewallProxyaddressApplicationOutput values.
// You can construct a concrete instance of `FirewallProxyaddressApplicationInput` via:
//
//	FirewallProxyaddressApplicationArgs{...}
type FirewallProxyaddressApplicationInput interface {
	pulumi.Input

	ToFirewallProxyaddressApplicationOutput() FirewallProxyaddressApplicationOutput
	ToFirewallProxyaddressApplicationOutputWithContext(context.Context) FirewallProxyaddressApplicationOutput
}

type FirewallProxyaddressApplicationArgs struct {
	// SaaS applicaton name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxyaddressApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddressApplication)(nil)).Elem()
}

func (i FirewallProxyaddressApplicationArgs) ToFirewallProxyaddressApplicationOutput() FirewallProxyaddressApplicationOutput {
	return i.ToFirewallProxyaddressApplicationOutputWithContext(context.Background())
}

func (i FirewallProxyaddressApplicationArgs) ToFirewallProxyaddressApplicationOutputWithContext(ctx context.Context) FirewallProxyaddressApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddressApplicationOutput)
}

// FirewallProxyaddressApplicationArrayInput is an input type that accepts FirewallProxyaddressApplicationArray and FirewallProxyaddressApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallProxyaddressApplicationArrayInput` via:
//
//	FirewallProxyaddressApplicationArray{ FirewallProxyaddressApplicationArgs{...} }
type FirewallProxyaddressApplicationArrayInput interface {
	pulumi.Input

	ToFirewallProxyaddressApplicationArrayOutput() FirewallProxyaddressApplicationArrayOutput
	ToFirewallProxyaddressApplicationArrayOutputWithContext(context.Context) FirewallProxyaddressApplicationArrayOutput
}

type FirewallProxyaddressApplicationArray []FirewallProxyaddressApplicationInput

func (FirewallProxyaddressApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddressApplication)(nil)).Elem()
}

func (i FirewallProxyaddressApplicationArray) ToFirewallProxyaddressApplicationArrayOutput() FirewallProxyaddressApplicationArrayOutput {
	return i.ToFirewallProxyaddressApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallProxyaddressApplicationArray) ToFirewallProxyaddressApplicationArrayOutputWithContext(ctx context.Context) FirewallProxyaddressApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddressApplicationArrayOutput)
}

type FirewallProxyaddressApplicationOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddressApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddressApplication)(nil)).Elem()
}

func (o FirewallProxyaddressApplicationOutput) ToFirewallProxyaddressApplicationOutput() FirewallProxyaddressApplicationOutput {
	return o
}

func (o FirewallProxyaddressApplicationOutput) ToFirewallProxyaddressApplicationOutputWithContext(ctx context.Context) FirewallProxyaddressApplicationOutput {
	return o
}

// SaaS applicaton name.
func (o FirewallProxyaddressApplicationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddressApplication) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxyaddressApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddressApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddressApplication)(nil)).Elem()
}

func (o FirewallProxyaddressApplicationArrayOutput) ToFirewallProxyaddressApplicationArrayOutput() FirewallProxyaddressApplicationArrayOutput {
	return o
}

func (o FirewallProxyaddressApplicationArrayOutput) ToFirewallProxyaddressApplicationArrayOutputWithContext(ctx context.Context) FirewallProxyaddressApplicationArrayOutput {
	return o
}

func (o FirewallProxyaddressApplicationArrayOutput) Index(i pulumi.IntInput) FirewallProxyaddressApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxyaddressApplication {
		return vs[0].([]FirewallProxyaddressApplication)[vs[1].(int)]
	}).(FirewallProxyaddressApplicationOutput)
}

type FirewallProxyaddressCategory struct {
	// Fortiguard category id.
	Id *int `pulumi:"id"`
}

// FirewallProxyaddressCategoryInput is an input type that accepts FirewallProxyaddressCategoryArgs and FirewallProxyaddressCategoryOutput values.
// You can construct a concrete instance of `FirewallProxyaddressCategoryInput` via:
//
//	FirewallProxyaddressCategoryArgs{...}
type FirewallProxyaddressCategoryInput interface {
	pulumi.Input

	ToFirewallProxyaddressCategoryOutput() FirewallProxyaddressCategoryOutput
	ToFirewallProxyaddressCategoryOutputWithContext(context.Context) FirewallProxyaddressCategoryOutput
}

type FirewallProxyaddressCategoryArgs struct {
	// Fortiguard category id.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallProxyaddressCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddressCategory)(nil)).Elem()
}

func (i FirewallProxyaddressCategoryArgs) ToFirewallProxyaddressCategoryOutput() FirewallProxyaddressCategoryOutput {
	return i.ToFirewallProxyaddressCategoryOutputWithContext(context.Background())
}

func (i FirewallProxyaddressCategoryArgs) ToFirewallProxyaddressCategoryOutputWithContext(ctx context.Context) FirewallProxyaddressCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddressCategoryOutput)
}

// FirewallProxyaddressCategoryArrayInput is an input type that accepts FirewallProxyaddressCategoryArray and FirewallProxyaddressCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallProxyaddressCategoryArrayInput` via:
//
//	FirewallProxyaddressCategoryArray{ FirewallProxyaddressCategoryArgs{...} }
type FirewallProxyaddressCategoryArrayInput interface {
	pulumi.Input

	ToFirewallProxyaddressCategoryArrayOutput() FirewallProxyaddressCategoryArrayOutput
	ToFirewallProxyaddressCategoryArrayOutputWithContext(context.Context) FirewallProxyaddressCategoryArrayOutput
}

type FirewallProxyaddressCategoryArray []FirewallProxyaddressCategoryInput

func (FirewallProxyaddressCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddressCategory)(nil)).Elem()
}

func (i FirewallProxyaddressCategoryArray) ToFirewallProxyaddressCategoryArrayOutput() FirewallProxyaddressCategoryArrayOutput {
	return i.ToFirewallProxyaddressCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallProxyaddressCategoryArray) ToFirewallProxyaddressCategoryArrayOutputWithContext(ctx context.Context) FirewallProxyaddressCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddressCategoryArrayOutput)
}

type FirewallProxyaddressCategoryOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddressCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddressCategory)(nil)).Elem()
}

func (o FirewallProxyaddressCategoryOutput) ToFirewallProxyaddressCategoryOutput() FirewallProxyaddressCategoryOutput {
	return o
}

func (o FirewallProxyaddressCategoryOutput) ToFirewallProxyaddressCategoryOutputWithContext(ctx context.Context) FirewallProxyaddressCategoryOutput {
	return o
}

// Fortiguard category id.
func (o FirewallProxyaddressCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddressCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallProxyaddressCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddressCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddressCategory)(nil)).Elem()
}

func (o FirewallProxyaddressCategoryArrayOutput) ToFirewallProxyaddressCategoryArrayOutput() FirewallProxyaddressCategoryArrayOutput {
	return o
}

func (o FirewallProxyaddressCategoryArrayOutput) ToFirewallProxyaddressCategoryArrayOutputWithContext(ctx context.Context) FirewallProxyaddressCategoryArrayOutput {
	return o
}

func (o FirewallProxyaddressCategoryArrayOutput) Index(i pulumi.IntInput) FirewallProxyaddressCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxyaddressCategory {
		return vs[0].([]FirewallProxyaddressCategory)[vs[1].(int)]
	}).(FirewallProxyaddressCategoryOutput)
}

type FirewallProxyaddressHeaderGroup struct {
	// Case sensitivity in pattern. Valid values: `disable`, `enable`.
	CaseSensitivity *string `pulumi:"caseSensitivity"`
	// HTTP header regular expression.
	Header *string `pulumi:"header"`
	// HTTP header.
	HeaderName *string `pulumi:"headerName"`
	// ID.
	Id *int `pulumi:"id"`
}

// FirewallProxyaddressHeaderGroupInput is an input type that accepts FirewallProxyaddressHeaderGroupArgs and FirewallProxyaddressHeaderGroupOutput values.
// You can construct a concrete instance of `FirewallProxyaddressHeaderGroupInput` via:
//
//	FirewallProxyaddressHeaderGroupArgs{...}
type FirewallProxyaddressHeaderGroupInput interface {
	pulumi.Input

	ToFirewallProxyaddressHeaderGroupOutput() FirewallProxyaddressHeaderGroupOutput
	ToFirewallProxyaddressHeaderGroupOutputWithContext(context.Context) FirewallProxyaddressHeaderGroupOutput
}

type FirewallProxyaddressHeaderGroupArgs struct {
	// Case sensitivity in pattern. Valid values: `disable`, `enable`.
	CaseSensitivity pulumi.StringPtrInput `pulumi:"caseSensitivity"`
	// HTTP header regular expression.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// HTTP header.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallProxyaddressHeaderGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddressHeaderGroup)(nil)).Elem()
}

func (i FirewallProxyaddressHeaderGroupArgs) ToFirewallProxyaddressHeaderGroupOutput() FirewallProxyaddressHeaderGroupOutput {
	return i.ToFirewallProxyaddressHeaderGroupOutputWithContext(context.Background())
}

func (i FirewallProxyaddressHeaderGroupArgs) ToFirewallProxyaddressHeaderGroupOutputWithContext(ctx context.Context) FirewallProxyaddressHeaderGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddressHeaderGroupOutput)
}

// FirewallProxyaddressHeaderGroupArrayInput is an input type that accepts FirewallProxyaddressHeaderGroupArray and FirewallProxyaddressHeaderGroupArrayOutput values.
// You can construct a concrete instance of `FirewallProxyaddressHeaderGroupArrayInput` via:
//
//	FirewallProxyaddressHeaderGroupArray{ FirewallProxyaddressHeaderGroupArgs{...} }
type FirewallProxyaddressHeaderGroupArrayInput interface {
	pulumi.Input

	ToFirewallProxyaddressHeaderGroupArrayOutput() FirewallProxyaddressHeaderGroupArrayOutput
	ToFirewallProxyaddressHeaderGroupArrayOutputWithContext(context.Context) FirewallProxyaddressHeaderGroupArrayOutput
}

type FirewallProxyaddressHeaderGroupArray []FirewallProxyaddressHeaderGroupInput

func (FirewallProxyaddressHeaderGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddressHeaderGroup)(nil)).Elem()
}

func (i FirewallProxyaddressHeaderGroupArray) ToFirewallProxyaddressHeaderGroupArrayOutput() FirewallProxyaddressHeaderGroupArrayOutput {
	return i.ToFirewallProxyaddressHeaderGroupArrayOutputWithContext(context.Background())
}

func (i FirewallProxyaddressHeaderGroupArray) ToFirewallProxyaddressHeaderGroupArrayOutputWithContext(ctx context.Context) FirewallProxyaddressHeaderGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddressHeaderGroupArrayOutput)
}

type FirewallProxyaddressHeaderGroupOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddressHeaderGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddressHeaderGroup)(nil)).Elem()
}

func (o FirewallProxyaddressHeaderGroupOutput) ToFirewallProxyaddressHeaderGroupOutput() FirewallProxyaddressHeaderGroupOutput {
	return o
}

func (o FirewallProxyaddressHeaderGroupOutput) ToFirewallProxyaddressHeaderGroupOutputWithContext(ctx context.Context) FirewallProxyaddressHeaderGroupOutput {
	return o
}

// Case sensitivity in pattern. Valid values: `disable`, `enable`.
func (o FirewallProxyaddressHeaderGroupOutput) CaseSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddressHeaderGroup) *string { return v.CaseSensitivity }).(pulumi.StringPtrOutput)
}

// HTTP header regular expression.
func (o FirewallProxyaddressHeaderGroupOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddressHeaderGroup) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// HTTP header.
func (o FirewallProxyaddressHeaderGroupOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddressHeaderGroup) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// ID.
func (o FirewallProxyaddressHeaderGroupOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddressHeaderGroup) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallProxyaddressHeaderGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddressHeaderGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddressHeaderGroup)(nil)).Elem()
}

func (o FirewallProxyaddressHeaderGroupArrayOutput) ToFirewallProxyaddressHeaderGroupArrayOutput() FirewallProxyaddressHeaderGroupArrayOutput {
	return o
}

func (o FirewallProxyaddressHeaderGroupArrayOutput) ToFirewallProxyaddressHeaderGroupArrayOutputWithContext(ctx context.Context) FirewallProxyaddressHeaderGroupArrayOutput {
	return o
}

func (o FirewallProxyaddressHeaderGroupArrayOutput) Index(i pulumi.IntInput) FirewallProxyaddressHeaderGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxyaddressHeaderGroup {
		return vs[0].([]FirewallProxyaddressHeaderGroup)[vs[1].(int)]
	}).(FirewallProxyaddressHeaderGroupOutput)
}

type FirewallProxyaddressTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []FirewallProxyaddressTaggingTag `pulumi:"tags"`
}

// FirewallProxyaddressTaggingInput is an input type that accepts FirewallProxyaddressTaggingArgs and FirewallProxyaddressTaggingOutput values.
// You can construct a concrete instance of `FirewallProxyaddressTaggingInput` via:
//
//	FirewallProxyaddressTaggingArgs{...}
type FirewallProxyaddressTaggingInput interface {
	pulumi.Input

	ToFirewallProxyaddressTaggingOutput() FirewallProxyaddressTaggingOutput
	ToFirewallProxyaddressTaggingOutputWithContext(context.Context) FirewallProxyaddressTaggingOutput
}

type FirewallProxyaddressTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags FirewallProxyaddressTaggingTagArrayInput `pulumi:"tags"`
}

func (FirewallProxyaddressTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddressTagging)(nil)).Elem()
}

func (i FirewallProxyaddressTaggingArgs) ToFirewallProxyaddressTaggingOutput() FirewallProxyaddressTaggingOutput {
	return i.ToFirewallProxyaddressTaggingOutputWithContext(context.Background())
}

func (i FirewallProxyaddressTaggingArgs) ToFirewallProxyaddressTaggingOutputWithContext(ctx context.Context) FirewallProxyaddressTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddressTaggingOutput)
}

// FirewallProxyaddressTaggingArrayInput is an input type that accepts FirewallProxyaddressTaggingArray and FirewallProxyaddressTaggingArrayOutput values.
// You can construct a concrete instance of `FirewallProxyaddressTaggingArrayInput` via:
//
//	FirewallProxyaddressTaggingArray{ FirewallProxyaddressTaggingArgs{...} }
type FirewallProxyaddressTaggingArrayInput interface {
	pulumi.Input

	ToFirewallProxyaddressTaggingArrayOutput() FirewallProxyaddressTaggingArrayOutput
	ToFirewallProxyaddressTaggingArrayOutputWithContext(context.Context) FirewallProxyaddressTaggingArrayOutput
}

type FirewallProxyaddressTaggingArray []FirewallProxyaddressTaggingInput

func (FirewallProxyaddressTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddressTagging)(nil)).Elem()
}

func (i FirewallProxyaddressTaggingArray) ToFirewallProxyaddressTaggingArrayOutput() FirewallProxyaddressTaggingArrayOutput {
	return i.ToFirewallProxyaddressTaggingArrayOutputWithContext(context.Background())
}

func (i FirewallProxyaddressTaggingArray) ToFirewallProxyaddressTaggingArrayOutputWithContext(ctx context.Context) FirewallProxyaddressTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddressTaggingArrayOutput)
}

type FirewallProxyaddressTaggingOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddressTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddressTagging)(nil)).Elem()
}

func (o FirewallProxyaddressTaggingOutput) ToFirewallProxyaddressTaggingOutput() FirewallProxyaddressTaggingOutput {
	return o
}

func (o FirewallProxyaddressTaggingOutput) ToFirewallProxyaddressTaggingOutputWithContext(ctx context.Context) FirewallProxyaddressTaggingOutput {
	return o
}

// Tag category.
func (o FirewallProxyaddressTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddressTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o FirewallProxyaddressTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddressTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o FirewallProxyaddressTaggingOutput) Tags() FirewallProxyaddressTaggingTagArrayOutput {
	return o.ApplyT(func(v FirewallProxyaddressTagging) []FirewallProxyaddressTaggingTag { return v.Tags }).(FirewallProxyaddressTaggingTagArrayOutput)
}

type FirewallProxyaddressTaggingArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddressTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddressTagging)(nil)).Elem()
}

func (o FirewallProxyaddressTaggingArrayOutput) ToFirewallProxyaddressTaggingArrayOutput() FirewallProxyaddressTaggingArrayOutput {
	return o
}

func (o FirewallProxyaddressTaggingArrayOutput) ToFirewallProxyaddressTaggingArrayOutputWithContext(ctx context.Context) FirewallProxyaddressTaggingArrayOutput {
	return o
}

func (o FirewallProxyaddressTaggingArrayOutput) Index(i pulumi.IntInput) FirewallProxyaddressTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxyaddressTagging {
		return vs[0].([]FirewallProxyaddressTagging)[vs[1].(int)]
	}).(FirewallProxyaddressTaggingOutput)
}

type FirewallProxyaddressTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// FirewallProxyaddressTaggingTagInput is an input type that accepts FirewallProxyaddressTaggingTagArgs and FirewallProxyaddressTaggingTagOutput values.
// You can construct a concrete instance of `FirewallProxyaddressTaggingTagInput` via:
//
//	FirewallProxyaddressTaggingTagArgs{...}
type FirewallProxyaddressTaggingTagInput interface {
	pulumi.Input

	ToFirewallProxyaddressTaggingTagOutput() FirewallProxyaddressTaggingTagOutput
	ToFirewallProxyaddressTaggingTagOutputWithContext(context.Context) FirewallProxyaddressTaggingTagOutput
}

type FirewallProxyaddressTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxyaddressTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddressTaggingTag)(nil)).Elem()
}

func (i FirewallProxyaddressTaggingTagArgs) ToFirewallProxyaddressTaggingTagOutput() FirewallProxyaddressTaggingTagOutput {
	return i.ToFirewallProxyaddressTaggingTagOutputWithContext(context.Background())
}

func (i FirewallProxyaddressTaggingTagArgs) ToFirewallProxyaddressTaggingTagOutputWithContext(ctx context.Context) FirewallProxyaddressTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddressTaggingTagOutput)
}

// FirewallProxyaddressTaggingTagArrayInput is an input type that accepts FirewallProxyaddressTaggingTagArray and FirewallProxyaddressTaggingTagArrayOutput values.
// You can construct a concrete instance of `FirewallProxyaddressTaggingTagArrayInput` via:
//
//	FirewallProxyaddressTaggingTagArray{ FirewallProxyaddressTaggingTagArgs{...} }
type FirewallProxyaddressTaggingTagArrayInput interface {
	pulumi.Input

	ToFirewallProxyaddressTaggingTagArrayOutput() FirewallProxyaddressTaggingTagArrayOutput
	ToFirewallProxyaddressTaggingTagArrayOutputWithContext(context.Context) FirewallProxyaddressTaggingTagArrayOutput
}

type FirewallProxyaddressTaggingTagArray []FirewallProxyaddressTaggingTagInput

func (FirewallProxyaddressTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddressTaggingTag)(nil)).Elem()
}

func (i FirewallProxyaddressTaggingTagArray) ToFirewallProxyaddressTaggingTagArrayOutput() FirewallProxyaddressTaggingTagArrayOutput {
	return i.ToFirewallProxyaddressTaggingTagArrayOutputWithContext(context.Background())
}

func (i FirewallProxyaddressTaggingTagArray) ToFirewallProxyaddressTaggingTagArrayOutputWithContext(ctx context.Context) FirewallProxyaddressTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddressTaggingTagArrayOutput)
}

type FirewallProxyaddressTaggingTagOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddressTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddressTaggingTag)(nil)).Elem()
}

func (o FirewallProxyaddressTaggingTagOutput) ToFirewallProxyaddressTaggingTagOutput() FirewallProxyaddressTaggingTagOutput {
	return o
}

func (o FirewallProxyaddressTaggingTagOutput) ToFirewallProxyaddressTaggingTagOutputWithContext(ctx context.Context) FirewallProxyaddressTaggingTagOutput {
	return o
}

// Tag name.
func (o FirewallProxyaddressTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddressTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxyaddressTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddressTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddressTaggingTag)(nil)).Elem()
}

func (o FirewallProxyaddressTaggingTagArrayOutput) ToFirewallProxyaddressTaggingTagArrayOutput() FirewallProxyaddressTaggingTagArrayOutput {
	return o
}

func (o FirewallProxyaddressTaggingTagArrayOutput) ToFirewallProxyaddressTaggingTagArrayOutputWithContext(ctx context.Context) FirewallProxyaddressTaggingTagArrayOutput {
	return o
}

func (o FirewallProxyaddressTaggingTagArrayOutput) Index(i pulumi.IntInput) FirewallProxyaddressTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxyaddressTaggingTag {
		return vs[0].([]FirewallProxyaddressTaggingTag)[vs[1].(int)]
	}).(FirewallProxyaddressTaggingTagOutput)
}

type FirewallProxyaddrgrpMember struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallProxyaddrgrpMemberInput is an input type that accepts FirewallProxyaddrgrpMemberArgs and FirewallProxyaddrgrpMemberOutput values.
// You can construct a concrete instance of `FirewallProxyaddrgrpMemberInput` via:
//
//	FirewallProxyaddrgrpMemberArgs{...}
type FirewallProxyaddrgrpMemberInput interface {
	pulumi.Input

	ToFirewallProxyaddrgrpMemberOutput() FirewallProxyaddrgrpMemberOutput
	ToFirewallProxyaddrgrpMemberOutputWithContext(context.Context) FirewallProxyaddrgrpMemberOutput
}

type FirewallProxyaddrgrpMemberArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxyaddrgrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddrgrpMember)(nil)).Elem()
}

func (i FirewallProxyaddrgrpMemberArgs) ToFirewallProxyaddrgrpMemberOutput() FirewallProxyaddrgrpMemberOutput {
	return i.ToFirewallProxyaddrgrpMemberOutputWithContext(context.Background())
}

func (i FirewallProxyaddrgrpMemberArgs) ToFirewallProxyaddrgrpMemberOutputWithContext(ctx context.Context) FirewallProxyaddrgrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddrgrpMemberOutput)
}

// FirewallProxyaddrgrpMemberArrayInput is an input type that accepts FirewallProxyaddrgrpMemberArray and FirewallProxyaddrgrpMemberArrayOutput values.
// You can construct a concrete instance of `FirewallProxyaddrgrpMemberArrayInput` via:
//
//	FirewallProxyaddrgrpMemberArray{ FirewallProxyaddrgrpMemberArgs{...} }
type FirewallProxyaddrgrpMemberArrayInput interface {
	pulumi.Input

	ToFirewallProxyaddrgrpMemberArrayOutput() FirewallProxyaddrgrpMemberArrayOutput
	ToFirewallProxyaddrgrpMemberArrayOutputWithContext(context.Context) FirewallProxyaddrgrpMemberArrayOutput
}

type FirewallProxyaddrgrpMemberArray []FirewallProxyaddrgrpMemberInput

func (FirewallProxyaddrgrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddrgrpMember)(nil)).Elem()
}

func (i FirewallProxyaddrgrpMemberArray) ToFirewallProxyaddrgrpMemberArrayOutput() FirewallProxyaddrgrpMemberArrayOutput {
	return i.ToFirewallProxyaddrgrpMemberArrayOutputWithContext(context.Background())
}

func (i FirewallProxyaddrgrpMemberArray) ToFirewallProxyaddrgrpMemberArrayOutputWithContext(ctx context.Context) FirewallProxyaddrgrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddrgrpMemberArrayOutput)
}

type FirewallProxyaddrgrpMemberOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddrgrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddrgrpMember)(nil)).Elem()
}

func (o FirewallProxyaddrgrpMemberOutput) ToFirewallProxyaddrgrpMemberOutput() FirewallProxyaddrgrpMemberOutput {
	return o
}

func (o FirewallProxyaddrgrpMemberOutput) ToFirewallProxyaddrgrpMemberOutputWithContext(ctx context.Context) FirewallProxyaddrgrpMemberOutput {
	return o
}

// Address name.
func (o FirewallProxyaddrgrpMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddrgrpMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxyaddrgrpMemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddrgrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddrgrpMember)(nil)).Elem()
}

func (o FirewallProxyaddrgrpMemberArrayOutput) ToFirewallProxyaddrgrpMemberArrayOutput() FirewallProxyaddrgrpMemberArrayOutput {
	return o
}

func (o FirewallProxyaddrgrpMemberArrayOutput) ToFirewallProxyaddrgrpMemberArrayOutputWithContext(ctx context.Context) FirewallProxyaddrgrpMemberArrayOutput {
	return o
}

func (o FirewallProxyaddrgrpMemberArrayOutput) Index(i pulumi.IntInput) FirewallProxyaddrgrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxyaddrgrpMember {
		return vs[0].([]FirewallProxyaddrgrpMember)[vs[1].(int)]
	}).(FirewallProxyaddrgrpMemberOutput)
}

type FirewallProxyaddrgrpTagging struct {
	// Tag category.
	Category *string `pulumi:"category"`
	// Tagging entry name.
	Name *string `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags []FirewallProxyaddrgrpTaggingTag `pulumi:"tags"`
}

// FirewallProxyaddrgrpTaggingInput is an input type that accepts FirewallProxyaddrgrpTaggingArgs and FirewallProxyaddrgrpTaggingOutput values.
// You can construct a concrete instance of `FirewallProxyaddrgrpTaggingInput` via:
//
//	FirewallProxyaddrgrpTaggingArgs{...}
type FirewallProxyaddrgrpTaggingInput interface {
	pulumi.Input

	ToFirewallProxyaddrgrpTaggingOutput() FirewallProxyaddrgrpTaggingOutput
	ToFirewallProxyaddrgrpTaggingOutputWithContext(context.Context) FirewallProxyaddrgrpTaggingOutput
}

type FirewallProxyaddrgrpTaggingArgs struct {
	// Tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Tagging entry name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags. The structure of `tags` block is documented below.
	Tags FirewallProxyaddrgrpTaggingTagArrayInput `pulumi:"tags"`
}

func (FirewallProxyaddrgrpTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddrgrpTagging)(nil)).Elem()
}

func (i FirewallProxyaddrgrpTaggingArgs) ToFirewallProxyaddrgrpTaggingOutput() FirewallProxyaddrgrpTaggingOutput {
	return i.ToFirewallProxyaddrgrpTaggingOutputWithContext(context.Background())
}

func (i FirewallProxyaddrgrpTaggingArgs) ToFirewallProxyaddrgrpTaggingOutputWithContext(ctx context.Context) FirewallProxyaddrgrpTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddrgrpTaggingOutput)
}

// FirewallProxyaddrgrpTaggingArrayInput is an input type that accepts FirewallProxyaddrgrpTaggingArray and FirewallProxyaddrgrpTaggingArrayOutput values.
// You can construct a concrete instance of `FirewallProxyaddrgrpTaggingArrayInput` via:
//
//	FirewallProxyaddrgrpTaggingArray{ FirewallProxyaddrgrpTaggingArgs{...} }
type FirewallProxyaddrgrpTaggingArrayInput interface {
	pulumi.Input

	ToFirewallProxyaddrgrpTaggingArrayOutput() FirewallProxyaddrgrpTaggingArrayOutput
	ToFirewallProxyaddrgrpTaggingArrayOutputWithContext(context.Context) FirewallProxyaddrgrpTaggingArrayOutput
}

type FirewallProxyaddrgrpTaggingArray []FirewallProxyaddrgrpTaggingInput

func (FirewallProxyaddrgrpTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddrgrpTagging)(nil)).Elem()
}

func (i FirewallProxyaddrgrpTaggingArray) ToFirewallProxyaddrgrpTaggingArrayOutput() FirewallProxyaddrgrpTaggingArrayOutput {
	return i.ToFirewallProxyaddrgrpTaggingArrayOutputWithContext(context.Background())
}

func (i FirewallProxyaddrgrpTaggingArray) ToFirewallProxyaddrgrpTaggingArrayOutputWithContext(ctx context.Context) FirewallProxyaddrgrpTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddrgrpTaggingArrayOutput)
}

type FirewallProxyaddrgrpTaggingOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddrgrpTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddrgrpTagging)(nil)).Elem()
}

func (o FirewallProxyaddrgrpTaggingOutput) ToFirewallProxyaddrgrpTaggingOutput() FirewallProxyaddrgrpTaggingOutput {
	return o
}

func (o FirewallProxyaddrgrpTaggingOutput) ToFirewallProxyaddrgrpTaggingOutputWithContext(ctx context.Context) FirewallProxyaddrgrpTaggingOutput {
	return o
}

// Tag category.
func (o FirewallProxyaddrgrpTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddrgrpTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Tagging entry name.
func (o FirewallProxyaddrgrpTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddrgrpTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags. The structure of `tags` block is documented below.
func (o FirewallProxyaddrgrpTaggingOutput) Tags() FirewallProxyaddrgrpTaggingTagArrayOutput {
	return o.ApplyT(func(v FirewallProxyaddrgrpTagging) []FirewallProxyaddrgrpTaggingTag { return v.Tags }).(FirewallProxyaddrgrpTaggingTagArrayOutput)
}

type FirewallProxyaddrgrpTaggingArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddrgrpTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddrgrpTagging)(nil)).Elem()
}

func (o FirewallProxyaddrgrpTaggingArrayOutput) ToFirewallProxyaddrgrpTaggingArrayOutput() FirewallProxyaddrgrpTaggingArrayOutput {
	return o
}

func (o FirewallProxyaddrgrpTaggingArrayOutput) ToFirewallProxyaddrgrpTaggingArrayOutputWithContext(ctx context.Context) FirewallProxyaddrgrpTaggingArrayOutput {
	return o
}

func (o FirewallProxyaddrgrpTaggingArrayOutput) Index(i pulumi.IntInput) FirewallProxyaddrgrpTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxyaddrgrpTagging {
		return vs[0].([]FirewallProxyaddrgrpTagging)[vs[1].(int)]
	}).(FirewallProxyaddrgrpTaggingOutput)
}

type FirewallProxyaddrgrpTaggingTag struct {
	// Tag name.
	Name *string `pulumi:"name"`
}

// FirewallProxyaddrgrpTaggingTagInput is an input type that accepts FirewallProxyaddrgrpTaggingTagArgs and FirewallProxyaddrgrpTaggingTagOutput values.
// You can construct a concrete instance of `FirewallProxyaddrgrpTaggingTagInput` via:
//
//	FirewallProxyaddrgrpTaggingTagArgs{...}
type FirewallProxyaddrgrpTaggingTagInput interface {
	pulumi.Input

	ToFirewallProxyaddrgrpTaggingTagOutput() FirewallProxyaddrgrpTaggingTagOutput
	ToFirewallProxyaddrgrpTaggingTagOutputWithContext(context.Context) FirewallProxyaddrgrpTaggingTagOutput
}

type FirewallProxyaddrgrpTaggingTagArgs struct {
	// Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxyaddrgrpTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (i FirewallProxyaddrgrpTaggingTagArgs) ToFirewallProxyaddrgrpTaggingTagOutput() FirewallProxyaddrgrpTaggingTagOutput {
	return i.ToFirewallProxyaddrgrpTaggingTagOutputWithContext(context.Background())
}

func (i FirewallProxyaddrgrpTaggingTagArgs) ToFirewallProxyaddrgrpTaggingTagOutputWithContext(ctx context.Context) FirewallProxyaddrgrpTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddrgrpTaggingTagOutput)
}

// FirewallProxyaddrgrpTaggingTagArrayInput is an input type that accepts FirewallProxyaddrgrpTaggingTagArray and FirewallProxyaddrgrpTaggingTagArrayOutput values.
// You can construct a concrete instance of `FirewallProxyaddrgrpTaggingTagArrayInput` via:
//
//	FirewallProxyaddrgrpTaggingTagArray{ FirewallProxyaddrgrpTaggingTagArgs{...} }
type FirewallProxyaddrgrpTaggingTagArrayInput interface {
	pulumi.Input

	ToFirewallProxyaddrgrpTaggingTagArrayOutput() FirewallProxyaddrgrpTaggingTagArrayOutput
	ToFirewallProxyaddrgrpTaggingTagArrayOutputWithContext(context.Context) FirewallProxyaddrgrpTaggingTagArrayOutput
}

type FirewallProxyaddrgrpTaggingTagArray []FirewallProxyaddrgrpTaggingTagInput

func (FirewallProxyaddrgrpTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (i FirewallProxyaddrgrpTaggingTagArray) ToFirewallProxyaddrgrpTaggingTagArrayOutput() FirewallProxyaddrgrpTaggingTagArrayOutput {
	return i.ToFirewallProxyaddrgrpTaggingTagArrayOutputWithContext(context.Background())
}

func (i FirewallProxyaddrgrpTaggingTagArray) ToFirewallProxyaddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) FirewallProxyaddrgrpTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyaddrgrpTaggingTagArrayOutput)
}

type FirewallProxyaddrgrpTaggingTagOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddrgrpTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (o FirewallProxyaddrgrpTaggingTagOutput) ToFirewallProxyaddrgrpTaggingTagOutput() FirewallProxyaddrgrpTaggingTagOutput {
	return o
}

func (o FirewallProxyaddrgrpTaggingTagOutput) ToFirewallProxyaddrgrpTaggingTagOutputWithContext(ctx context.Context) FirewallProxyaddrgrpTaggingTagOutput {
	return o
}

// Tag name.
func (o FirewallProxyaddrgrpTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxyaddrgrpTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxyaddrgrpTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxyaddrgrpTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxyaddrgrpTaggingTag)(nil)).Elem()
}

func (o FirewallProxyaddrgrpTaggingTagArrayOutput) ToFirewallProxyaddrgrpTaggingTagArrayOutput() FirewallProxyaddrgrpTaggingTagArrayOutput {
	return o
}

func (o FirewallProxyaddrgrpTaggingTagArrayOutput) ToFirewallProxyaddrgrpTaggingTagArrayOutputWithContext(ctx context.Context) FirewallProxyaddrgrpTaggingTagArrayOutput {
	return o
}

func (o FirewallProxyaddrgrpTaggingTagArrayOutput) Index(i pulumi.IntInput) FirewallProxyaddrgrpTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxyaddrgrpTaggingTag {
		return vs[0].([]FirewallProxyaddrgrpTaggingTag)[vs[1].(int)]
	}).(FirewallProxyaddrgrpTaggingTagOutput)
}

type FirewallProxypolicyAccessProxy6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyAccessProxy6Input is an input type that accepts FirewallProxypolicyAccessProxy6Args and FirewallProxypolicyAccessProxy6Output values.
// You can construct a concrete instance of `FirewallProxypolicyAccessProxy6Input` via:
//
//	FirewallProxypolicyAccessProxy6Args{...}
type FirewallProxypolicyAccessProxy6Input interface {
	pulumi.Input

	ToFirewallProxypolicyAccessProxy6Output() FirewallProxypolicyAccessProxy6Output
	ToFirewallProxypolicyAccessProxy6OutputWithContext(context.Context) FirewallProxypolicyAccessProxy6Output
}

type FirewallProxypolicyAccessProxy6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyAccessProxy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyAccessProxy6)(nil)).Elem()
}

func (i FirewallProxypolicyAccessProxy6Args) ToFirewallProxypolicyAccessProxy6Output() FirewallProxypolicyAccessProxy6Output {
	return i.ToFirewallProxypolicyAccessProxy6OutputWithContext(context.Background())
}

func (i FirewallProxypolicyAccessProxy6Args) ToFirewallProxypolicyAccessProxy6OutputWithContext(ctx context.Context) FirewallProxypolicyAccessProxy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyAccessProxy6Output)
}

// FirewallProxypolicyAccessProxy6ArrayInput is an input type that accepts FirewallProxypolicyAccessProxy6Array and FirewallProxypolicyAccessProxy6ArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyAccessProxy6ArrayInput` via:
//
//	FirewallProxypolicyAccessProxy6Array{ FirewallProxypolicyAccessProxy6Args{...} }
type FirewallProxypolicyAccessProxy6ArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyAccessProxy6ArrayOutput() FirewallProxypolicyAccessProxy6ArrayOutput
	ToFirewallProxypolicyAccessProxy6ArrayOutputWithContext(context.Context) FirewallProxypolicyAccessProxy6ArrayOutput
}

type FirewallProxypolicyAccessProxy6Array []FirewallProxypolicyAccessProxy6Input

func (FirewallProxypolicyAccessProxy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyAccessProxy6)(nil)).Elem()
}

func (i FirewallProxypolicyAccessProxy6Array) ToFirewallProxypolicyAccessProxy6ArrayOutput() FirewallProxypolicyAccessProxy6ArrayOutput {
	return i.ToFirewallProxypolicyAccessProxy6ArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyAccessProxy6Array) ToFirewallProxypolicyAccessProxy6ArrayOutputWithContext(ctx context.Context) FirewallProxypolicyAccessProxy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyAccessProxy6ArrayOutput)
}

type FirewallProxypolicyAccessProxy6Output struct{ *pulumi.OutputState }

func (FirewallProxypolicyAccessProxy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyAccessProxy6)(nil)).Elem()
}

func (o FirewallProxypolicyAccessProxy6Output) ToFirewallProxypolicyAccessProxy6Output() FirewallProxypolicyAccessProxy6Output {
	return o
}

func (o FirewallProxypolicyAccessProxy6Output) ToFirewallProxypolicyAccessProxy6OutputWithContext(ctx context.Context) FirewallProxypolicyAccessProxy6Output {
	return o
}

// Policy name.
func (o FirewallProxypolicyAccessProxy6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyAccessProxy6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyAccessProxy6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyAccessProxy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyAccessProxy6)(nil)).Elem()
}

func (o FirewallProxypolicyAccessProxy6ArrayOutput) ToFirewallProxypolicyAccessProxy6ArrayOutput() FirewallProxypolicyAccessProxy6ArrayOutput {
	return o
}

func (o FirewallProxypolicyAccessProxy6ArrayOutput) ToFirewallProxypolicyAccessProxy6ArrayOutputWithContext(ctx context.Context) FirewallProxypolicyAccessProxy6ArrayOutput {
	return o
}

func (o FirewallProxypolicyAccessProxy6ArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyAccessProxy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyAccessProxy6 {
		return vs[0].([]FirewallProxypolicyAccessProxy6)[vs[1].(int)]
	}).(FirewallProxypolicyAccessProxy6Output)
}

type FirewallProxypolicyAccessProxy struct {
	// Access proxy name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyAccessProxyInput is an input type that accepts FirewallProxypolicyAccessProxyArgs and FirewallProxypolicyAccessProxyOutput values.
// You can construct a concrete instance of `FirewallProxypolicyAccessProxyInput` via:
//
//	FirewallProxypolicyAccessProxyArgs{...}
type FirewallProxypolicyAccessProxyInput interface {
	pulumi.Input

	ToFirewallProxypolicyAccessProxyOutput() FirewallProxypolicyAccessProxyOutput
	ToFirewallProxypolicyAccessProxyOutputWithContext(context.Context) FirewallProxypolicyAccessProxyOutput
}

type FirewallProxypolicyAccessProxyArgs struct {
	// Access proxy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyAccessProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyAccessProxy)(nil)).Elem()
}

func (i FirewallProxypolicyAccessProxyArgs) ToFirewallProxypolicyAccessProxyOutput() FirewallProxypolicyAccessProxyOutput {
	return i.ToFirewallProxypolicyAccessProxyOutputWithContext(context.Background())
}

func (i FirewallProxypolicyAccessProxyArgs) ToFirewallProxypolicyAccessProxyOutputWithContext(ctx context.Context) FirewallProxypolicyAccessProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyAccessProxyOutput)
}

// FirewallProxypolicyAccessProxyArrayInput is an input type that accepts FirewallProxypolicyAccessProxyArray and FirewallProxypolicyAccessProxyArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyAccessProxyArrayInput` via:
//
//	FirewallProxypolicyAccessProxyArray{ FirewallProxypolicyAccessProxyArgs{...} }
type FirewallProxypolicyAccessProxyArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyAccessProxyArrayOutput() FirewallProxypolicyAccessProxyArrayOutput
	ToFirewallProxypolicyAccessProxyArrayOutputWithContext(context.Context) FirewallProxypolicyAccessProxyArrayOutput
}

type FirewallProxypolicyAccessProxyArray []FirewallProxypolicyAccessProxyInput

func (FirewallProxypolicyAccessProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyAccessProxy)(nil)).Elem()
}

func (i FirewallProxypolicyAccessProxyArray) ToFirewallProxypolicyAccessProxyArrayOutput() FirewallProxypolicyAccessProxyArrayOutput {
	return i.ToFirewallProxypolicyAccessProxyArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyAccessProxyArray) ToFirewallProxypolicyAccessProxyArrayOutputWithContext(ctx context.Context) FirewallProxypolicyAccessProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyAccessProxyArrayOutput)
}

type FirewallProxypolicyAccessProxyOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyAccessProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyAccessProxy)(nil)).Elem()
}

func (o FirewallProxypolicyAccessProxyOutput) ToFirewallProxypolicyAccessProxyOutput() FirewallProxypolicyAccessProxyOutput {
	return o
}

func (o FirewallProxypolicyAccessProxyOutput) ToFirewallProxypolicyAccessProxyOutputWithContext(ctx context.Context) FirewallProxypolicyAccessProxyOutput {
	return o
}

// Access proxy name.
func (o FirewallProxypolicyAccessProxyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyAccessProxy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyAccessProxyArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyAccessProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyAccessProxy)(nil)).Elem()
}

func (o FirewallProxypolicyAccessProxyArrayOutput) ToFirewallProxypolicyAccessProxyArrayOutput() FirewallProxypolicyAccessProxyArrayOutput {
	return o
}

func (o FirewallProxypolicyAccessProxyArrayOutput) ToFirewallProxypolicyAccessProxyArrayOutputWithContext(ctx context.Context) FirewallProxypolicyAccessProxyArrayOutput {
	return o
}

func (o FirewallProxypolicyAccessProxyArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyAccessProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyAccessProxy {
		return vs[0].([]FirewallProxypolicyAccessProxy)[vs[1].(int)]
	}).(FirewallProxypolicyAccessProxyOutput)
}

type FirewallProxypolicyDstaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyDstaddr6Input is an input type that accepts FirewallProxypolicyDstaddr6Args and FirewallProxypolicyDstaddr6Output values.
// You can construct a concrete instance of `FirewallProxypolicyDstaddr6Input` via:
//
//	FirewallProxypolicyDstaddr6Args{...}
type FirewallProxypolicyDstaddr6Input interface {
	pulumi.Input

	ToFirewallProxypolicyDstaddr6Output() FirewallProxypolicyDstaddr6Output
	ToFirewallProxypolicyDstaddr6OutputWithContext(context.Context) FirewallProxypolicyDstaddr6Output
}

type FirewallProxypolicyDstaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyDstaddr6)(nil)).Elem()
}

func (i FirewallProxypolicyDstaddr6Args) ToFirewallProxypolicyDstaddr6Output() FirewallProxypolicyDstaddr6Output {
	return i.ToFirewallProxypolicyDstaddr6OutputWithContext(context.Background())
}

func (i FirewallProxypolicyDstaddr6Args) ToFirewallProxypolicyDstaddr6OutputWithContext(ctx context.Context) FirewallProxypolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyDstaddr6Output)
}

// FirewallProxypolicyDstaddr6ArrayInput is an input type that accepts FirewallProxypolicyDstaddr6Array and FirewallProxypolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyDstaddr6ArrayInput` via:
//
//	FirewallProxypolicyDstaddr6Array{ FirewallProxypolicyDstaddr6Args{...} }
type FirewallProxypolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyDstaddr6ArrayOutput() FirewallProxypolicyDstaddr6ArrayOutput
	ToFirewallProxypolicyDstaddr6ArrayOutputWithContext(context.Context) FirewallProxypolicyDstaddr6ArrayOutput
}

type FirewallProxypolicyDstaddr6Array []FirewallProxypolicyDstaddr6Input

func (FirewallProxypolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyDstaddr6)(nil)).Elem()
}

func (i FirewallProxypolicyDstaddr6Array) ToFirewallProxypolicyDstaddr6ArrayOutput() FirewallProxypolicyDstaddr6ArrayOutput {
	return i.ToFirewallProxypolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyDstaddr6Array) ToFirewallProxypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) FirewallProxypolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyDstaddr6ArrayOutput)
}

type FirewallProxypolicyDstaddr6Output struct{ *pulumi.OutputState }

func (FirewallProxypolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyDstaddr6)(nil)).Elem()
}

func (o FirewallProxypolicyDstaddr6Output) ToFirewallProxypolicyDstaddr6Output() FirewallProxypolicyDstaddr6Output {
	return o
}

func (o FirewallProxypolicyDstaddr6Output) ToFirewallProxypolicyDstaddr6OutputWithContext(ctx context.Context) FirewallProxypolicyDstaddr6Output {
	return o
}

// Policy name.
func (o FirewallProxypolicyDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyDstaddr6)(nil)).Elem()
}

func (o FirewallProxypolicyDstaddr6ArrayOutput) ToFirewallProxypolicyDstaddr6ArrayOutput() FirewallProxypolicyDstaddr6ArrayOutput {
	return o
}

func (o FirewallProxypolicyDstaddr6ArrayOutput) ToFirewallProxypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) FirewallProxypolicyDstaddr6ArrayOutput {
	return o
}

func (o FirewallProxypolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyDstaddr6 {
		return vs[0].([]FirewallProxypolicyDstaddr6)[vs[1].(int)]
	}).(FirewallProxypolicyDstaddr6Output)
}

type FirewallProxypolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyDstaddrInput is an input type that accepts FirewallProxypolicyDstaddrArgs and FirewallProxypolicyDstaddrOutput values.
// You can construct a concrete instance of `FirewallProxypolicyDstaddrInput` via:
//
//	FirewallProxypolicyDstaddrArgs{...}
type FirewallProxypolicyDstaddrInput interface {
	pulumi.Input

	ToFirewallProxypolicyDstaddrOutput() FirewallProxypolicyDstaddrOutput
	ToFirewallProxypolicyDstaddrOutputWithContext(context.Context) FirewallProxypolicyDstaddrOutput
}

type FirewallProxypolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyDstaddr)(nil)).Elem()
}

func (i FirewallProxypolicyDstaddrArgs) ToFirewallProxypolicyDstaddrOutput() FirewallProxypolicyDstaddrOutput {
	return i.ToFirewallProxypolicyDstaddrOutputWithContext(context.Background())
}

func (i FirewallProxypolicyDstaddrArgs) ToFirewallProxypolicyDstaddrOutputWithContext(ctx context.Context) FirewallProxypolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyDstaddrOutput)
}

// FirewallProxypolicyDstaddrArrayInput is an input type that accepts FirewallProxypolicyDstaddrArray and FirewallProxypolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyDstaddrArrayInput` via:
//
//	FirewallProxypolicyDstaddrArray{ FirewallProxypolicyDstaddrArgs{...} }
type FirewallProxypolicyDstaddrArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyDstaddrArrayOutput() FirewallProxypolicyDstaddrArrayOutput
	ToFirewallProxypolicyDstaddrArrayOutputWithContext(context.Context) FirewallProxypolicyDstaddrArrayOutput
}

type FirewallProxypolicyDstaddrArray []FirewallProxypolicyDstaddrInput

func (FirewallProxypolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyDstaddr)(nil)).Elem()
}

func (i FirewallProxypolicyDstaddrArray) ToFirewallProxypolicyDstaddrArrayOutput() FirewallProxypolicyDstaddrArrayOutput {
	return i.ToFirewallProxypolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyDstaddrArray) ToFirewallProxypolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallProxypolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyDstaddrArrayOutput)
}

type FirewallProxypolicyDstaddrOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyDstaddr)(nil)).Elem()
}

func (o FirewallProxypolicyDstaddrOutput) ToFirewallProxypolicyDstaddrOutput() FirewallProxypolicyDstaddrOutput {
	return o
}

func (o FirewallProxypolicyDstaddrOutput) ToFirewallProxypolicyDstaddrOutputWithContext(ctx context.Context) FirewallProxypolicyDstaddrOutput {
	return o
}

// Address name.
func (o FirewallProxypolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyDstaddr)(nil)).Elem()
}

func (o FirewallProxypolicyDstaddrArrayOutput) ToFirewallProxypolicyDstaddrArrayOutput() FirewallProxypolicyDstaddrArrayOutput {
	return o
}

func (o FirewallProxypolicyDstaddrArrayOutput) ToFirewallProxypolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallProxypolicyDstaddrArrayOutput {
	return o
}

func (o FirewallProxypolicyDstaddrArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyDstaddr {
		return vs[0].([]FirewallProxypolicyDstaddr)[vs[1].(int)]
	}).(FirewallProxypolicyDstaddrOutput)
}

type FirewallProxypolicyDstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyDstintfInput is an input type that accepts FirewallProxypolicyDstintfArgs and FirewallProxypolicyDstintfOutput values.
// You can construct a concrete instance of `FirewallProxypolicyDstintfInput` via:
//
//	FirewallProxypolicyDstintfArgs{...}
type FirewallProxypolicyDstintfInput interface {
	pulumi.Input

	ToFirewallProxypolicyDstintfOutput() FirewallProxypolicyDstintfOutput
	ToFirewallProxypolicyDstintfOutputWithContext(context.Context) FirewallProxypolicyDstintfOutput
}

type FirewallProxypolicyDstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyDstintf)(nil)).Elem()
}

func (i FirewallProxypolicyDstintfArgs) ToFirewallProxypolicyDstintfOutput() FirewallProxypolicyDstintfOutput {
	return i.ToFirewallProxypolicyDstintfOutputWithContext(context.Background())
}

func (i FirewallProxypolicyDstintfArgs) ToFirewallProxypolicyDstintfOutputWithContext(ctx context.Context) FirewallProxypolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyDstintfOutput)
}

// FirewallProxypolicyDstintfArrayInput is an input type that accepts FirewallProxypolicyDstintfArray and FirewallProxypolicyDstintfArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyDstintfArrayInput` via:
//
//	FirewallProxypolicyDstintfArray{ FirewallProxypolicyDstintfArgs{...} }
type FirewallProxypolicyDstintfArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyDstintfArrayOutput() FirewallProxypolicyDstintfArrayOutput
	ToFirewallProxypolicyDstintfArrayOutputWithContext(context.Context) FirewallProxypolicyDstintfArrayOutput
}

type FirewallProxypolicyDstintfArray []FirewallProxypolicyDstintfInput

func (FirewallProxypolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyDstintf)(nil)).Elem()
}

func (i FirewallProxypolicyDstintfArray) ToFirewallProxypolicyDstintfArrayOutput() FirewallProxypolicyDstintfArrayOutput {
	return i.ToFirewallProxypolicyDstintfArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyDstintfArray) ToFirewallProxypolicyDstintfArrayOutputWithContext(ctx context.Context) FirewallProxypolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyDstintfArrayOutput)
}

type FirewallProxypolicyDstintfOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyDstintf)(nil)).Elem()
}

func (o FirewallProxypolicyDstintfOutput) ToFirewallProxypolicyDstintfOutput() FirewallProxypolicyDstintfOutput {
	return o
}

func (o FirewallProxypolicyDstintfOutput) ToFirewallProxypolicyDstintfOutputWithContext(ctx context.Context) FirewallProxypolicyDstintfOutput {
	return o
}

// Interface name.
func (o FirewallProxypolicyDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyDstintf)(nil)).Elem()
}

func (o FirewallProxypolicyDstintfArrayOutput) ToFirewallProxypolicyDstintfArrayOutput() FirewallProxypolicyDstintfArrayOutput {
	return o
}

func (o FirewallProxypolicyDstintfArrayOutput) ToFirewallProxypolicyDstintfArrayOutputWithContext(ctx context.Context) FirewallProxypolicyDstintfArrayOutput {
	return o
}

func (o FirewallProxypolicyDstintfArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyDstintf {
		return vs[0].([]FirewallProxypolicyDstintf)[vs[1].(int)]
	}).(FirewallProxypolicyDstintfOutput)
}

type FirewallProxypolicyGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyGroupInput is an input type that accepts FirewallProxypolicyGroupArgs and FirewallProxypolicyGroupOutput values.
// You can construct a concrete instance of `FirewallProxypolicyGroupInput` via:
//
//	FirewallProxypolicyGroupArgs{...}
type FirewallProxypolicyGroupInput interface {
	pulumi.Input

	ToFirewallProxypolicyGroupOutput() FirewallProxypolicyGroupOutput
	ToFirewallProxypolicyGroupOutputWithContext(context.Context) FirewallProxypolicyGroupOutput
}

type FirewallProxypolicyGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyGroup)(nil)).Elem()
}

func (i FirewallProxypolicyGroupArgs) ToFirewallProxypolicyGroupOutput() FirewallProxypolicyGroupOutput {
	return i.ToFirewallProxypolicyGroupOutputWithContext(context.Background())
}

func (i FirewallProxypolicyGroupArgs) ToFirewallProxypolicyGroupOutputWithContext(ctx context.Context) FirewallProxypolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyGroupOutput)
}

// FirewallProxypolicyGroupArrayInput is an input type that accepts FirewallProxypolicyGroupArray and FirewallProxypolicyGroupArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyGroupArrayInput` via:
//
//	FirewallProxypolicyGroupArray{ FirewallProxypolicyGroupArgs{...} }
type FirewallProxypolicyGroupArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyGroupArrayOutput() FirewallProxypolicyGroupArrayOutput
	ToFirewallProxypolicyGroupArrayOutputWithContext(context.Context) FirewallProxypolicyGroupArrayOutput
}

type FirewallProxypolicyGroupArray []FirewallProxypolicyGroupInput

func (FirewallProxypolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyGroup)(nil)).Elem()
}

func (i FirewallProxypolicyGroupArray) ToFirewallProxypolicyGroupArrayOutput() FirewallProxypolicyGroupArrayOutput {
	return i.ToFirewallProxypolicyGroupArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyGroupArray) ToFirewallProxypolicyGroupArrayOutputWithContext(ctx context.Context) FirewallProxypolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyGroupArrayOutput)
}

type FirewallProxypolicyGroupOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyGroup)(nil)).Elem()
}

func (o FirewallProxypolicyGroupOutput) ToFirewallProxypolicyGroupOutput() FirewallProxypolicyGroupOutput {
	return o
}

func (o FirewallProxypolicyGroupOutput) ToFirewallProxypolicyGroupOutputWithContext(ctx context.Context) FirewallProxypolicyGroupOutput {
	return o
}

// Group name.
func (o FirewallProxypolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyGroup)(nil)).Elem()
}

func (o FirewallProxypolicyGroupArrayOutput) ToFirewallProxypolicyGroupArrayOutput() FirewallProxypolicyGroupArrayOutput {
	return o
}

func (o FirewallProxypolicyGroupArrayOutput) ToFirewallProxypolicyGroupArrayOutputWithContext(ctx context.Context) FirewallProxypolicyGroupArrayOutput {
	return o
}

func (o FirewallProxypolicyGroupArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyGroup {
		return vs[0].([]FirewallProxypolicyGroup)[vs[1].(int)]
	}).(FirewallProxypolicyGroupOutput)
}

type FirewallProxypolicyInternetServiceCustom struct {
	// Custom name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyInternetServiceCustomInput is an input type that accepts FirewallProxypolicyInternetServiceCustomArgs and FirewallProxypolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `FirewallProxypolicyInternetServiceCustomInput` via:
//
//	FirewallProxypolicyInternetServiceCustomArgs{...}
type FirewallProxypolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToFirewallProxypolicyInternetServiceCustomOutput() FirewallProxypolicyInternetServiceCustomOutput
	ToFirewallProxypolicyInternetServiceCustomOutputWithContext(context.Context) FirewallProxypolicyInternetServiceCustomOutput
}

type FirewallProxypolicyInternetServiceCustomArgs struct {
	// Custom name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (i FirewallProxypolicyInternetServiceCustomArgs) ToFirewallProxypolicyInternetServiceCustomOutput() FirewallProxypolicyInternetServiceCustomOutput {
	return i.ToFirewallProxypolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i FirewallProxypolicyInternetServiceCustomArgs) ToFirewallProxypolicyInternetServiceCustomOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyInternetServiceCustomOutput)
}

// FirewallProxypolicyInternetServiceCustomArrayInput is an input type that accepts FirewallProxypolicyInternetServiceCustomArray and FirewallProxypolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyInternetServiceCustomArrayInput` via:
//
//	FirewallProxypolicyInternetServiceCustomArray{ FirewallProxypolicyInternetServiceCustomArgs{...} }
type FirewallProxypolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyInternetServiceCustomArrayOutput() FirewallProxypolicyInternetServiceCustomArrayOutput
	ToFirewallProxypolicyInternetServiceCustomArrayOutputWithContext(context.Context) FirewallProxypolicyInternetServiceCustomArrayOutput
}

type FirewallProxypolicyInternetServiceCustomArray []FirewallProxypolicyInternetServiceCustomInput

func (FirewallProxypolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (i FirewallProxypolicyInternetServiceCustomArray) ToFirewallProxypolicyInternetServiceCustomArrayOutput() FirewallProxypolicyInternetServiceCustomArrayOutput {
	return i.ToFirewallProxypolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyInternetServiceCustomArray) ToFirewallProxypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyInternetServiceCustomArrayOutput)
}

type FirewallProxypolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (o FirewallProxypolicyInternetServiceCustomOutput) ToFirewallProxypolicyInternetServiceCustomOutput() FirewallProxypolicyInternetServiceCustomOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceCustomOutput) ToFirewallProxypolicyInternetServiceCustomOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceCustomOutput {
	return o
}

// Custom name.
func (o FirewallProxypolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyInternetServiceCustom)(nil)).Elem()
}

func (o FirewallProxypolicyInternetServiceCustomArrayOutput) ToFirewallProxypolicyInternetServiceCustomArrayOutput() FirewallProxypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceCustomArrayOutput) ToFirewallProxypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyInternetServiceCustom {
		return vs[0].([]FirewallProxypolicyInternetServiceCustom)[vs[1].(int)]
	}).(FirewallProxypolicyInternetServiceCustomOutput)
}

type FirewallProxypolicyInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyInternetServiceCustomGroupInput is an input type that accepts FirewallProxypolicyInternetServiceCustomGroupArgs and FirewallProxypolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `FirewallProxypolicyInternetServiceCustomGroupInput` via:
//
//	FirewallProxypolicyInternetServiceCustomGroupArgs{...}
type FirewallProxypolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToFirewallProxypolicyInternetServiceCustomGroupOutput() FirewallProxypolicyInternetServiceCustomGroupOutput
	ToFirewallProxypolicyInternetServiceCustomGroupOutputWithContext(context.Context) FirewallProxypolicyInternetServiceCustomGroupOutput
}

type FirewallProxypolicyInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i FirewallProxypolicyInternetServiceCustomGroupArgs) ToFirewallProxypolicyInternetServiceCustomGroupOutput() FirewallProxypolicyInternetServiceCustomGroupOutput {
	return i.ToFirewallProxypolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i FirewallProxypolicyInternetServiceCustomGroupArgs) ToFirewallProxypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyInternetServiceCustomGroupOutput)
}

// FirewallProxypolicyInternetServiceCustomGroupArrayInput is an input type that accepts FirewallProxypolicyInternetServiceCustomGroupArray and FirewallProxypolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyInternetServiceCustomGroupArrayInput` via:
//
//	FirewallProxypolicyInternetServiceCustomGroupArray{ FirewallProxypolicyInternetServiceCustomGroupArgs{...} }
type FirewallProxypolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyInternetServiceCustomGroupArrayOutput() FirewallProxypolicyInternetServiceCustomGroupArrayOutput
	ToFirewallProxypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) FirewallProxypolicyInternetServiceCustomGroupArrayOutput
}

type FirewallProxypolicyInternetServiceCustomGroupArray []FirewallProxypolicyInternetServiceCustomGroupInput

func (FirewallProxypolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i FirewallProxypolicyInternetServiceCustomGroupArray) ToFirewallProxypolicyInternetServiceCustomGroupArrayOutput() FirewallProxypolicyInternetServiceCustomGroupArrayOutput {
	return i.ToFirewallProxypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyInternetServiceCustomGroupArray) ToFirewallProxypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyInternetServiceCustomGroupArrayOutput)
}

type FirewallProxypolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o FirewallProxypolicyInternetServiceCustomGroupOutput) ToFirewallProxypolicyInternetServiceCustomGroupOutput() FirewallProxypolicyInternetServiceCustomGroupOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceCustomGroupOutput) ToFirewallProxypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o FirewallProxypolicyInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o FirewallProxypolicyInternetServiceCustomGroupArrayOutput) ToFirewallProxypolicyInternetServiceCustomGroupArrayOutput() FirewallProxypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceCustomGroupArrayOutput) ToFirewallProxypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyInternetServiceCustomGroup {
		return vs[0].([]FirewallProxypolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(FirewallProxypolicyInternetServiceCustomGroupOutput)
}

type FirewallProxypolicyInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyInternetServiceGroupInput is an input type that accepts FirewallProxypolicyInternetServiceGroupArgs and FirewallProxypolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `FirewallProxypolicyInternetServiceGroupInput` via:
//
//	FirewallProxypolicyInternetServiceGroupArgs{...}
type FirewallProxypolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToFirewallProxypolicyInternetServiceGroupOutput() FirewallProxypolicyInternetServiceGroupOutput
	ToFirewallProxypolicyInternetServiceGroupOutputWithContext(context.Context) FirewallProxypolicyInternetServiceGroupOutput
}

type FirewallProxypolicyInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (i FirewallProxypolicyInternetServiceGroupArgs) ToFirewallProxypolicyInternetServiceGroupOutput() FirewallProxypolicyInternetServiceGroupOutput {
	return i.ToFirewallProxypolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i FirewallProxypolicyInternetServiceGroupArgs) ToFirewallProxypolicyInternetServiceGroupOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyInternetServiceGroupOutput)
}

// FirewallProxypolicyInternetServiceGroupArrayInput is an input type that accepts FirewallProxypolicyInternetServiceGroupArray and FirewallProxypolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyInternetServiceGroupArrayInput` via:
//
//	FirewallProxypolicyInternetServiceGroupArray{ FirewallProxypolicyInternetServiceGroupArgs{...} }
type FirewallProxypolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyInternetServiceGroupArrayOutput() FirewallProxypolicyInternetServiceGroupArrayOutput
	ToFirewallProxypolicyInternetServiceGroupArrayOutputWithContext(context.Context) FirewallProxypolicyInternetServiceGroupArrayOutput
}

type FirewallProxypolicyInternetServiceGroupArray []FirewallProxypolicyInternetServiceGroupInput

func (FirewallProxypolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (i FirewallProxypolicyInternetServiceGroupArray) ToFirewallProxypolicyInternetServiceGroupArrayOutput() FirewallProxypolicyInternetServiceGroupArrayOutput {
	return i.ToFirewallProxypolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyInternetServiceGroupArray) ToFirewallProxypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyInternetServiceGroupArrayOutput)
}

type FirewallProxypolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (o FirewallProxypolicyInternetServiceGroupOutput) ToFirewallProxypolicyInternetServiceGroupOutput() FirewallProxypolicyInternetServiceGroupOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceGroupOutput) ToFirewallProxypolicyInternetServiceGroupOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o FirewallProxypolicyInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyInternetServiceGroup)(nil)).Elem()
}

func (o FirewallProxypolicyInternetServiceGroupArrayOutput) ToFirewallProxypolicyInternetServiceGroupArrayOutput() FirewallProxypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceGroupArrayOutput) ToFirewallProxypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyInternetServiceGroup {
		return vs[0].([]FirewallProxypolicyInternetServiceGroup)[vs[1].(int)]
	}).(FirewallProxypolicyInternetServiceGroupOutput)
}

type FirewallProxypolicyInternetServiceId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// FirewallProxypolicyInternetServiceIdInput is an input type that accepts FirewallProxypolicyInternetServiceIdArgs and FirewallProxypolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `FirewallProxypolicyInternetServiceIdInput` via:
//
//	FirewallProxypolicyInternetServiceIdArgs{...}
type FirewallProxypolicyInternetServiceIdInput interface {
	pulumi.Input

	ToFirewallProxypolicyInternetServiceIdOutput() FirewallProxypolicyInternetServiceIdOutput
	ToFirewallProxypolicyInternetServiceIdOutputWithContext(context.Context) FirewallProxypolicyInternetServiceIdOutput
}

type FirewallProxypolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallProxypolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyInternetServiceId)(nil)).Elem()
}

func (i FirewallProxypolicyInternetServiceIdArgs) ToFirewallProxypolicyInternetServiceIdOutput() FirewallProxypolicyInternetServiceIdOutput {
	return i.ToFirewallProxypolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i FirewallProxypolicyInternetServiceIdArgs) ToFirewallProxypolicyInternetServiceIdOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyInternetServiceIdOutput)
}

// FirewallProxypolicyInternetServiceIdArrayInput is an input type that accepts FirewallProxypolicyInternetServiceIdArray and FirewallProxypolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyInternetServiceIdArrayInput` via:
//
//	FirewallProxypolicyInternetServiceIdArray{ FirewallProxypolicyInternetServiceIdArgs{...} }
type FirewallProxypolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyInternetServiceIdArrayOutput() FirewallProxypolicyInternetServiceIdArrayOutput
	ToFirewallProxypolicyInternetServiceIdArrayOutputWithContext(context.Context) FirewallProxypolicyInternetServiceIdArrayOutput
}

type FirewallProxypolicyInternetServiceIdArray []FirewallProxypolicyInternetServiceIdInput

func (FirewallProxypolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyInternetServiceId)(nil)).Elem()
}

func (i FirewallProxypolicyInternetServiceIdArray) ToFirewallProxypolicyInternetServiceIdArrayOutput() FirewallProxypolicyInternetServiceIdArrayOutput {
	return i.ToFirewallProxypolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyInternetServiceIdArray) ToFirewallProxypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyInternetServiceIdArrayOutput)
}

type FirewallProxypolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyInternetServiceId)(nil)).Elem()
}

func (o FirewallProxypolicyInternetServiceIdOutput) ToFirewallProxypolicyInternetServiceIdOutput() FirewallProxypolicyInternetServiceIdOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceIdOutput) ToFirewallProxypolicyInternetServiceIdOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o FirewallProxypolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallProxypolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyInternetServiceId)(nil)).Elem()
}

func (o FirewallProxypolicyInternetServiceIdArrayOutput) ToFirewallProxypolicyInternetServiceIdArrayOutput() FirewallProxypolicyInternetServiceIdArrayOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceIdArrayOutput) ToFirewallProxypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceIdArrayOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyInternetServiceId {
		return vs[0].([]FirewallProxypolicyInternetServiceId)[vs[1].(int)]
	}).(FirewallProxypolicyInternetServiceIdOutput)
}

type FirewallProxypolicyInternetServiceName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyInternetServiceNameInput is an input type that accepts FirewallProxypolicyInternetServiceNameArgs and FirewallProxypolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `FirewallProxypolicyInternetServiceNameInput` via:
//
//	FirewallProxypolicyInternetServiceNameArgs{...}
type FirewallProxypolicyInternetServiceNameInput interface {
	pulumi.Input

	ToFirewallProxypolicyInternetServiceNameOutput() FirewallProxypolicyInternetServiceNameOutput
	ToFirewallProxypolicyInternetServiceNameOutputWithContext(context.Context) FirewallProxypolicyInternetServiceNameOutput
}

type FirewallProxypolicyInternetServiceNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyInternetServiceName)(nil)).Elem()
}

func (i FirewallProxypolicyInternetServiceNameArgs) ToFirewallProxypolicyInternetServiceNameOutput() FirewallProxypolicyInternetServiceNameOutput {
	return i.ToFirewallProxypolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i FirewallProxypolicyInternetServiceNameArgs) ToFirewallProxypolicyInternetServiceNameOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyInternetServiceNameOutput)
}

// FirewallProxypolicyInternetServiceNameArrayInput is an input type that accepts FirewallProxypolicyInternetServiceNameArray and FirewallProxypolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyInternetServiceNameArrayInput` via:
//
//	FirewallProxypolicyInternetServiceNameArray{ FirewallProxypolicyInternetServiceNameArgs{...} }
type FirewallProxypolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyInternetServiceNameArrayOutput() FirewallProxypolicyInternetServiceNameArrayOutput
	ToFirewallProxypolicyInternetServiceNameArrayOutputWithContext(context.Context) FirewallProxypolicyInternetServiceNameArrayOutput
}

type FirewallProxypolicyInternetServiceNameArray []FirewallProxypolicyInternetServiceNameInput

func (FirewallProxypolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyInternetServiceName)(nil)).Elem()
}

func (i FirewallProxypolicyInternetServiceNameArray) ToFirewallProxypolicyInternetServiceNameArrayOutput() FirewallProxypolicyInternetServiceNameArrayOutput {
	return i.ToFirewallProxypolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyInternetServiceNameArray) ToFirewallProxypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyInternetServiceNameArrayOutput)
}

type FirewallProxypolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyInternetServiceName)(nil)).Elem()
}

func (o FirewallProxypolicyInternetServiceNameOutput) ToFirewallProxypolicyInternetServiceNameOutput() FirewallProxypolicyInternetServiceNameOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceNameOutput) ToFirewallProxypolicyInternetServiceNameOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceNameOutput {
	return o
}

// Internet Service name.
func (o FirewallProxypolicyInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyInternetServiceName)(nil)).Elem()
}

func (o FirewallProxypolicyInternetServiceNameArrayOutput) ToFirewallProxypolicyInternetServiceNameArrayOutput() FirewallProxypolicyInternetServiceNameArrayOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceNameArrayOutput) ToFirewallProxypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallProxypolicyInternetServiceNameArrayOutput {
	return o
}

func (o FirewallProxypolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyInternetServiceName {
		return vs[0].([]FirewallProxypolicyInternetServiceName)[vs[1].(int)]
	}).(FirewallProxypolicyInternetServiceNameOutput)
}

type FirewallProxypolicyPoolname struct {
	// IP pool name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyPoolnameInput is an input type that accepts FirewallProxypolicyPoolnameArgs and FirewallProxypolicyPoolnameOutput values.
// You can construct a concrete instance of `FirewallProxypolicyPoolnameInput` via:
//
//	FirewallProxypolicyPoolnameArgs{...}
type FirewallProxypolicyPoolnameInput interface {
	pulumi.Input

	ToFirewallProxypolicyPoolnameOutput() FirewallProxypolicyPoolnameOutput
	ToFirewallProxypolicyPoolnameOutputWithContext(context.Context) FirewallProxypolicyPoolnameOutput
}

type FirewallProxypolicyPoolnameArgs struct {
	// IP pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyPoolnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyPoolname)(nil)).Elem()
}

func (i FirewallProxypolicyPoolnameArgs) ToFirewallProxypolicyPoolnameOutput() FirewallProxypolicyPoolnameOutput {
	return i.ToFirewallProxypolicyPoolnameOutputWithContext(context.Background())
}

func (i FirewallProxypolicyPoolnameArgs) ToFirewallProxypolicyPoolnameOutputWithContext(ctx context.Context) FirewallProxypolicyPoolnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyPoolnameOutput)
}

// FirewallProxypolicyPoolnameArrayInput is an input type that accepts FirewallProxypolicyPoolnameArray and FirewallProxypolicyPoolnameArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyPoolnameArrayInput` via:
//
//	FirewallProxypolicyPoolnameArray{ FirewallProxypolicyPoolnameArgs{...} }
type FirewallProxypolicyPoolnameArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyPoolnameArrayOutput() FirewallProxypolicyPoolnameArrayOutput
	ToFirewallProxypolicyPoolnameArrayOutputWithContext(context.Context) FirewallProxypolicyPoolnameArrayOutput
}

type FirewallProxypolicyPoolnameArray []FirewallProxypolicyPoolnameInput

func (FirewallProxypolicyPoolnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyPoolname)(nil)).Elem()
}

func (i FirewallProxypolicyPoolnameArray) ToFirewallProxypolicyPoolnameArrayOutput() FirewallProxypolicyPoolnameArrayOutput {
	return i.ToFirewallProxypolicyPoolnameArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyPoolnameArray) ToFirewallProxypolicyPoolnameArrayOutputWithContext(ctx context.Context) FirewallProxypolicyPoolnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyPoolnameArrayOutput)
}

type FirewallProxypolicyPoolnameOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyPoolnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyPoolname)(nil)).Elem()
}

func (o FirewallProxypolicyPoolnameOutput) ToFirewallProxypolicyPoolnameOutput() FirewallProxypolicyPoolnameOutput {
	return o
}

func (o FirewallProxypolicyPoolnameOutput) ToFirewallProxypolicyPoolnameOutputWithContext(ctx context.Context) FirewallProxypolicyPoolnameOutput {
	return o
}

// IP pool name.
func (o FirewallProxypolicyPoolnameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyPoolname) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyPoolnameArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyPoolnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyPoolname)(nil)).Elem()
}

func (o FirewallProxypolicyPoolnameArrayOutput) ToFirewallProxypolicyPoolnameArrayOutput() FirewallProxypolicyPoolnameArrayOutput {
	return o
}

func (o FirewallProxypolicyPoolnameArrayOutput) ToFirewallProxypolicyPoolnameArrayOutputWithContext(ctx context.Context) FirewallProxypolicyPoolnameArrayOutput {
	return o
}

func (o FirewallProxypolicyPoolnameArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyPoolnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyPoolname {
		return vs[0].([]FirewallProxypolicyPoolname)[vs[1].(int)]
	}).(FirewallProxypolicyPoolnameOutput)
}

type FirewallProxypolicyService struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyServiceInput is an input type that accepts FirewallProxypolicyServiceArgs and FirewallProxypolicyServiceOutput values.
// You can construct a concrete instance of `FirewallProxypolicyServiceInput` via:
//
//	FirewallProxypolicyServiceArgs{...}
type FirewallProxypolicyServiceInput interface {
	pulumi.Input

	ToFirewallProxypolicyServiceOutput() FirewallProxypolicyServiceOutput
	ToFirewallProxypolicyServiceOutputWithContext(context.Context) FirewallProxypolicyServiceOutput
}

type FirewallProxypolicyServiceArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyService)(nil)).Elem()
}

func (i FirewallProxypolicyServiceArgs) ToFirewallProxypolicyServiceOutput() FirewallProxypolicyServiceOutput {
	return i.ToFirewallProxypolicyServiceOutputWithContext(context.Background())
}

func (i FirewallProxypolicyServiceArgs) ToFirewallProxypolicyServiceOutputWithContext(ctx context.Context) FirewallProxypolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyServiceOutput)
}

// FirewallProxypolicyServiceArrayInput is an input type that accepts FirewallProxypolicyServiceArray and FirewallProxypolicyServiceArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyServiceArrayInput` via:
//
//	FirewallProxypolicyServiceArray{ FirewallProxypolicyServiceArgs{...} }
type FirewallProxypolicyServiceArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyServiceArrayOutput() FirewallProxypolicyServiceArrayOutput
	ToFirewallProxypolicyServiceArrayOutputWithContext(context.Context) FirewallProxypolicyServiceArrayOutput
}

type FirewallProxypolicyServiceArray []FirewallProxypolicyServiceInput

func (FirewallProxypolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyService)(nil)).Elem()
}

func (i FirewallProxypolicyServiceArray) ToFirewallProxypolicyServiceArrayOutput() FirewallProxypolicyServiceArrayOutput {
	return i.ToFirewallProxypolicyServiceArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyServiceArray) ToFirewallProxypolicyServiceArrayOutputWithContext(ctx context.Context) FirewallProxypolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyServiceArrayOutput)
}

type FirewallProxypolicyServiceOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyService)(nil)).Elem()
}

func (o FirewallProxypolicyServiceOutput) ToFirewallProxypolicyServiceOutput() FirewallProxypolicyServiceOutput {
	return o
}

func (o FirewallProxypolicyServiceOutput) ToFirewallProxypolicyServiceOutputWithContext(ctx context.Context) FirewallProxypolicyServiceOutput {
	return o
}

// Address name.
func (o FirewallProxypolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyService)(nil)).Elem()
}

func (o FirewallProxypolicyServiceArrayOutput) ToFirewallProxypolicyServiceArrayOutput() FirewallProxypolicyServiceArrayOutput {
	return o
}

func (o FirewallProxypolicyServiceArrayOutput) ToFirewallProxypolicyServiceArrayOutputWithContext(ctx context.Context) FirewallProxypolicyServiceArrayOutput {
	return o
}

func (o FirewallProxypolicyServiceArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyService {
		return vs[0].([]FirewallProxypolicyService)[vs[1].(int)]
	}).(FirewallProxypolicyServiceOutput)
}

type FirewallProxypolicySrcaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicySrcaddr6Input is an input type that accepts FirewallProxypolicySrcaddr6Args and FirewallProxypolicySrcaddr6Output values.
// You can construct a concrete instance of `FirewallProxypolicySrcaddr6Input` via:
//
//	FirewallProxypolicySrcaddr6Args{...}
type FirewallProxypolicySrcaddr6Input interface {
	pulumi.Input

	ToFirewallProxypolicySrcaddr6Output() FirewallProxypolicySrcaddr6Output
	ToFirewallProxypolicySrcaddr6OutputWithContext(context.Context) FirewallProxypolicySrcaddr6Output
}

type FirewallProxypolicySrcaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicySrcaddr6)(nil)).Elem()
}

func (i FirewallProxypolicySrcaddr6Args) ToFirewallProxypolicySrcaddr6Output() FirewallProxypolicySrcaddr6Output {
	return i.ToFirewallProxypolicySrcaddr6OutputWithContext(context.Background())
}

func (i FirewallProxypolicySrcaddr6Args) ToFirewallProxypolicySrcaddr6OutputWithContext(ctx context.Context) FirewallProxypolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicySrcaddr6Output)
}

// FirewallProxypolicySrcaddr6ArrayInput is an input type that accepts FirewallProxypolicySrcaddr6Array and FirewallProxypolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicySrcaddr6ArrayInput` via:
//
//	FirewallProxypolicySrcaddr6Array{ FirewallProxypolicySrcaddr6Args{...} }
type FirewallProxypolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicySrcaddr6ArrayOutput() FirewallProxypolicySrcaddr6ArrayOutput
	ToFirewallProxypolicySrcaddr6ArrayOutputWithContext(context.Context) FirewallProxypolicySrcaddr6ArrayOutput
}

type FirewallProxypolicySrcaddr6Array []FirewallProxypolicySrcaddr6Input

func (FirewallProxypolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicySrcaddr6)(nil)).Elem()
}

func (i FirewallProxypolicySrcaddr6Array) ToFirewallProxypolicySrcaddr6ArrayOutput() FirewallProxypolicySrcaddr6ArrayOutput {
	return i.ToFirewallProxypolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicySrcaddr6Array) ToFirewallProxypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) FirewallProxypolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicySrcaddr6ArrayOutput)
}

type FirewallProxypolicySrcaddr6Output struct{ *pulumi.OutputState }

func (FirewallProxypolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicySrcaddr6)(nil)).Elem()
}

func (o FirewallProxypolicySrcaddr6Output) ToFirewallProxypolicySrcaddr6Output() FirewallProxypolicySrcaddr6Output {
	return o
}

func (o FirewallProxypolicySrcaddr6Output) ToFirewallProxypolicySrcaddr6OutputWithContext(ctx context.Context) FirewallProxypolicySrcaddr6Output {
	return o
}

// Policy name.
func (o FirewallProxypolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicySrcaddr6)(nil)).Elem()
}

func (o FirewallProxypolicySrcaddr6ArrayOutput) ToFirewallProxypolicySrcaddr6ArrayOutput() FirewallProxypolicySrcaddr6ArrayOutput {
	return o
}

func (o FirewallProxypolicySrcaddr6ArrayOutput) ToFirewallProxypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) FirewallProxypolicySrcaddr6ArrayOutput {
	return o
}

func (o FirewallProxypolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicySrcaddr6 {
		return vs[0].([]FirewallProxypolicySrcaddr6)[vs[1].(int)]
	}).(FirewallProxypolicySrcaddr6Output)
}

type FirewallProxypolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicySrcaddrInput is an input type that accepts FirewallProxypolicySrcaddrArgs and FirewallProxypolicySrcaddrOutput values.
// You can construct a concrete instance of `FirewallProxypolicySrcaddrInput` via:
//
//	FirewallProxypolicySrcaddrArgs{...}
type FirewallProxypolicySrcaddrInput interface {
	pulumi.Input

	ToFirewallProxypolicySrcaddrOutput() FirewallProxypolicySrcaddrOutput
	ToFirewallProxypolicySrcaddrOutputWithContext(context.Context) FirewallProxypolicySrcaddrOutput
}

type FirewallProxypolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicySrcaddr)(nil)).Elem()
}

func (i FirewallProxypolicySrcaddrArgs) ToFirewallProxypolicySrcaddrOutput() FirewallProxypolicySrcaddrOutput {
	return i.ToFirewallProxypolicySrcaddrOutputWithContext(context.Background())
}

func (i FirewallProxypolicySrcaddrArgs) ToFirewallProxypolicySrcaddrOutputWithContext(ctx context.Context) FirewallProxypolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicySrcaddrOutput)
}

// FirewallProxypolicySrcaddrArrayInput is an input type that accepts FirewallProxypolicySrcaddrArray and FirewallProxypolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicySrcaddrArrayInput` via:
//
//	FirewallProxypolicySrcaddrArray{ FirewallProxypolicySrcaddrArgs{...} }
type FirewallProxypolicySrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicySrcaddrArrayOutput() FirewallProxypolicySrcaddrArrayOutput
	ToFirewallProxypolicySrcaddrArrayOutputWithContext(context.Context) FirewallProxypolicySrcaddrArrayOutput
}

type FirewallProxypolicySrcaddrArray []FirewallProxypolicySrcaddrInput

func (FirewallProxypolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicySrcaddr)(nil)).Elem()
}

func (i FirewallProxypolicySrcaddrArray) ToFirewallProxypolicySrcaddrArrayOutput() FirewallProxypolicySrcaddrArrayOutput {
	return i.ToFirewallProxypolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicySrcaddrArray) ToFirewallProxypolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallProxypolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicySrcaddrArrayOutput)
}

type FirewallProxypolicySrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicySrcaddr)(nil)).Elem()
}

func (o FirewallProxypolicySrcaddrOutput) ToFirewallProxypolicySrcaddrOutput() FirewallProxypolicySrcaddrOutput {
	return o
}

func (o FirewallProxypolicySrcaddrOutput) ToFirewallProxypolicySrcaddrOutputWithContext(ctx context.Context) FirewallProxypolicySrcaddrOutput {
	return o
}

// Address name.
func (o FirewallProxypolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicySrcaddr)(nil)).Elem()
}

func (o FirewallProxypolicySrcaddrArrayOutput) ToFirewallProxypolicySrcaddrArrayOutput() FirewallProxypolicySrcaddrArrayOutput {
	return o
}

func (o FirewallProxypolicySrcaddrArrayOutput) ToFirewallProxypolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallProxypolicySrcaddrArrayOutput {
	return o
}

func (o FirewallProxypolicySrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicySrcaddr {
		return vs[0].([]FirewallProxypolicySrcaddr)[vs[1].(int)]
	}).(FirewallProxypolicySrcaddrOutput)
}

type FirewallProxypolicySrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicySrcintfInput is an input type that accepts FirewallProxypolicySrcintfArgs and FirewallProxypolicySrcintfOutput values.
// You can construct a concrete instance of `FirewallProxypolicySrcintfInput` via:
//
//	FirewallProxypolicySrcintfArgs{...}
type FirewallProxypolicySrcintfInput interface {
	pulumi.Input

	ToFirewallProxypolicySrcintfOutput() FirewallProxypolicySrcintfOutput
	ToFirewallProxypolicySrcintfOutputWithContext(context.Context) FirewallProxypolicySrcintfOutput
}

type FirewallProxypolicySrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicySrcintf)(nil)).Elem()
}

func (i FirewallProxypolicySrcintfArgs) ToFirewallProxypolicySrcintfOutput() FirewallProxypolicySrcintfOutput {
	return i.ToFirewallProxypolicySrcintfOutputWithContext(context.Background())
}

func (i FirewallProxypolicySrcintfArgs) ToFirewallProxypolicySrcintfOutputWithContext(ctx context.Context) FirewallProxypolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicySrcintfOutput)
}

// FirewallProxypolicySrcintfArrayInput is an input type that accepts FirewallProxypolicySrcintfArray and FirewallProxypolicySrcintfArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicySrcintfArrayInput` via:
//
//	FirewallProxypolicySrcintfArray{ FirewallProxypolicySrcintfArgs{...} }
type FirewallProxypolicySrcintfArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicySrcintfArrayOutput() FirewallProxypolicySrcintfArrayOutput
	ToFirewallProxypolicySrcintfArrayOutputWithContext(context.Context) FirewallProxypolicySrcintfArrayOutput
}

type FirewallProxypolicySrcintfArray []FirewallProxypolicySrcintfInput

func (FirewallProxypolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicySrcintf)(nil)).Elem()
}

func (i FirewallProxypolicySrcintfArray) ToFirewallProxypolicySrcintfArrayOutput() FirewallProxypolicySrcintfArrayOutput {
	return i.ToFirewallProxypolicySrcintfArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicySrcintfArray) ToFirewallProxypolicySrcintfArrayOutputWithContext(ctx context.Context) FirewallProxypolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicySrcintfArrayOutput)
}

type FirewallProxypolicySrcintfOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicySrcintf)(nil)).Elem()
}

func (o FirewallProxypolicySrcintfOutput) ToFirewallProxypolicySrcintfOutput() FirewallProxypolicySrcintfOutput {
	return o
}

func (o FirewallProxypolicySrcintfOutput) ToFirewallProxypolicySrcintfOutputWithContext(ctx context.Context) FirewallProxypolicySrcintfOutput {
	return o
}

// Interface name.
func (o FirewallProxypolicySrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicySrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicySrcintf)(nil)).Elem()
}

func (o FirewallProxypolicySrcintfArrayOutput) ToFirewallProxypolicySrcintfArrayOutput() FirewallProxypolicySrcintfArrayOutput {
	return o
}

func (o FirewallProxypolicySrcintfArrayOutput) ToFirewallProxypolicySrcintfArrayOutputWithContext(ctx context.Context) FirewallProxypolicySrcintfArrayOutput {
	return o
}

func (o FirewallProxypolicySrcintfArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicySrcintf {
		return vs[0].([]FirewallProxypolicySrcintf)[vs[1].(int)]
	}).(FirewallProxypolicySrcintfOutput)
}

type FirewallProxypolicyUser struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyUserInput is an input type that accepts FirewallProxypolicyUserArgs and FirewallProxypolicyUserOutput values.
// You can construct a concrete instance of `FirewallProxypolicyUserInput` via:
//
//	FirewallProxypolicyUserArgs{...}
type FirewallProxypolicyUserInput interface {
	pulumi.Input

	ToFirewallProxypolicyUserOutput() FirewallProxypolicyUserOutput
	ToFirewallProxypolicyUserOutputWithContext(context.Context) FirewallProxypolicyUserOutput
}

type FirewallProxypolicyUserArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyUser)(nil)).Elem()
}

func (i FirewallProxypolicyUserArgs) ToFirewallProxypolicyUserOutput() FirewallProxypolicyUserOutput {
	return i.ToFirewallProxypolicyUserOutputWithContext(context.Background())
}

func (i FirewallProxypolicyUserArgs) ToFirewallProxypolicyUserOutputWithContext(ctx context.Context) FirewallProxypolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyUserOutput)
}

// FirewallProxypolicyUserArrayInput is an input type that accepts FirewallProxypolicyUserArray and FirewallProxypolicyUserArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyUserArrayInput` via:
//
//	FirewallProxypolicyUserArray{ FirewallProxypolicyUserArgs{...} }
type FirewallProxypolicyUserArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyUserArrayOutput() FirewallProxypolicyUserArrayOutput
	ToFirewallProxypolicyUserArrayOutputWithContext(context.Context) FirewallProxypolicyUserArrayOutput
}

type FirewallProxypolicyUserArray []FirewallProxypolicyUserInput

func (FirewallProxypolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyUser)(nil)).Elem()
}

func (i FirewallProxypolicyUserArray) ToFirewallProxypolicyUserArrayOutput() FirewallProxypolicyUserArrayOutput {
	return i.ToFirewallProxypolicyUserArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyUserArray) ToFirewallProxypolicyUserArrayOutputWithContext(ctx context.Context) FirewallProxypolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyUserArrayOutput)
}

type FirewallProxypolicyUserOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyUser)(nil)).Elem()
}

func (o FirewallProxypolicyUserOutput) ToFirewallProxypolicyUserOutput() FirewallProxypolicyUserOutput {
	return o
}

func (o FirewallProxypolicyUserOutput) ToFirewallProxypolicyUserOutputWithContext(ctx context.Context) FirewallProxypolicyUserOutput {
	return o
}

// Group name.
func (o FirewallProxypolicyUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyUserArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyUser)(nil)).Elem()
}

func (o FirewallProxypolicyUserArrayOutput) ToFirewallProxypolicyUserArrayOutput() FirewallProxypolicyUserArrayOutput {
	return o
}

func (o FirewallProxypolicyUserArrayOutput) ToFirewallProxypolicyUserArrayOutputWithContext(ctx context.Context) FirewallProxypolicyUserArrayOutput {
	return o
}

func (o FirewallProxypolicyUserArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyUser {
		return vs[0].([]FirewallProxypolicyUser)[vs[1].(int)]
	}).(FirewallProxypolicyUserOutput)
}

type FirewallProxypolicyZtnaEmsTag struct {
	// EMS Tag name.
	Name *string `pulumi:"name"`
}

// FirewallProxypolicyZtnaEmsTagInput is an input type that accepts FirewallProxypolicyZtnaEmsTagArgs and FirewallProxypolicyZtnaEmsTagOutput values.
// You can construct a concrete instance of `FirewallProxypolicyZtnaEmsTagInput` via:
//
//	FirewallProxypolicyZtnaEmsTagArgs{...}
type FirewallProxypolicyZtnaEmsTagInput interface {
	pulumi.Input

	ToFirewallProxypolicyZtnaEmsTagOutput() FirewallProxypolicyZtnaEmsTagOutput
	ToFirewallProxypolicyZtnaEmsTagOutputWithContext(context.Context) FirewallProxypolicyZtnaEmsTagOutput
}

type FirewallProxypolicyZtnaEmsTagArgs struct {
	// EMS Tag name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallProxypolicyZtnaEmsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (i FirewallProxypolicyZtnaEmsTagArgs) ToFirewallProxypolicyZtnaEmsTagOutput() FirewallProxypolicyZtnaEmsTagOutput {
	return i.ToFirewallProxypolicyZtnaEmsTagOutputWithContext(context.Background())
}

func (i FirewallProxypolicyZtnaEmsTagArgs) ToFirewallProxypolicyZtnaEmsTagOutputWithContext(ctx context.Context) FirewallProxypolicyZtnaEmsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyZtnaEmsTagOutput)
}

// FirewallProxypolicyZtnaEmsTagArrayInput is an input type that accepts FirewallProxypolicyZtnaEmsTagArray and FirewallProxypolicyZtnaEmsTagArrayOutput values.
// You can construct a concrete instance of `FirewallProxypolicyZtnaEmsTagArrayInput` via:
//
//	FirewallProxypolicyZtnaEmsTagArray{ FirewallProxypolicyZtnaEmsTagArgs{...} }
type FirewallProxypolicyZtnaEmsTagArrayInput interface {
	pulumi.Input

	ToFirewallProxypolicyZtnaEmsTagArrayOutput() FirewallProxypolicyZtnaEmsTagArrayOutput
	ToFirewallProxypolicyZtnaEmsTagArrayOutputWithContext(context.Context) FirewallProxypolicyZtnaEmsTagArrayOutput
}

type FirewallProxypolicyZtnaEmsTagArray []FirewallProxypolicyZtnaEmsTagInput

func (FirewallProxypolicyZtnaEmsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (i FirewallProxypolicyZtnaEmsTagArray) ToFirewallProxypolicyZtnaEmsTagArrayOutput() FirewallProxypolicyZtnaEmsTagArrayOutput {
	return i.ToFirewallProxypolicyZtnaEmsTagArrayOutputWithContext(context.Background())
}

func (i FirewallProxypolicyZtnaEmsTagArray) ToFirewallProxypolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) FirewallProxypolicyZtnaEmsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxypolicyZtnaEmsTagArrayOutput)
}

type FirewallProxypolicyZtnaEmsTagOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyZtnaEmsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (o FirewallProxypolicyZtnaEmsTagOutput) ToFirewallProxypolicyZtnaEmsTagOutput() FirewallProxypolicyZtnaEmsTagOutput {
	return o
}

func (o FirewallProxypolicyZtnaEmsTagOutput) ToFirewallProxypolicyZtnaEmsTagOutputWithContext(ctx context.Context) FirewallProxypolicyZtnaEmsTagOutput {
	return o
}

// EMS Tag name.
func (o FirewallProxypolicyZtnaEmsTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProxypolicyZtnaEmsTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallProxypolicyZtnaEmsTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxypolicyZtnaEmsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProxypolicyZtnaEmsTag)(nil)).Elem()
}

func (o FirewallProxypolicyZtnaEmsTagArrayOutput) ToFirewallProxypolicyZtnaEmsTagArrayOutput() FirewallProxypolicyZtnaEmsTagArrayOutput {
	return o
}

func (o FirewallProxypolicyZtnaEmsTagArrayOutput) ToFirewallProxypolicyZtnaEmsTagArrayOutputWithContext(ctx context.Context) FirewallProxypolicyZtnaEmsTagArrayOutput {
	return o
}

func (o FirewallProxypolicyZtnaEmsTagArrayOutput) Index(i pulumi.IntInput) FirewallProxypolicyZtnaEmsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProxypolicyZtnaEmsTag {
		return vs[0].([]FirewallProxypolicyZtnaEmsTag)[vs[1].(int)]
	}).(FirewallProxypolicyZtnaEmsTagOutput)
}

type FirewallRegionCity struct {
	// City ID.
	Id *int `pulumi:"id"`
}

// FirewallRegionCityInput is an input type that accepts FirewallRegionCityArgs and FirewallRegionCityOutput values.
// You can construct a concrete instance of `FirewallRegionCityInput` via:
//
//	FirewallRegionCityArgs{...}
type FirewallRegionCityInput interface {
	pulumi.Input

	ToFirewallRegionCityOutput() FirewallRegionCityOutput
	ToFirewallRegionCityOutputWithContext(context.Context) FirewallRegionCityOutput
}

type FirewallRegionCityArgs struct {
	// City ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallRegionCityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRegionCity)(nil)).Elem()
}

func (i FirewallRegionCityArgs) ToFirewallRegionCityOutput() FirewallRegionCityOutput {
	return i.ToFirewallRegionCityOutputWithContext(context.Background())
}

func (i FirewallRegionCityArgs) ToFirewallRegionCityOutputWithContext(ctx context.Context) FirewallRegionCityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRegionCityOutput)
}

// FirewallRegionCityArrayInput is an input type that accepts FirewallRegionCityArray and FirewallRegionCityArrayOutput values.
// You can construct a concrete instance of `FirewallRegionCityArrayInput` via:
//
//	FirewallRegionCityArray{ FirewallRegionCityArgs{...} }
type FirewallRegionCityArrayInput interface {
	pulumi.Input

	ToFirewallRegionCityArrayOutput() FirewallRegionCityArrayOutput
	ToFirewallRegionCityArrayOutputWithContext(context.Context) FirewallRegionCityArrayOutput
}

type FirewallRegionCityArray []FirewallRegionCityInput

func (FirewallRegionCityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallRegionCity)(nil)).Elem()
}

func (i FirewallRegionCityArray) ToFirewallRegionCityArrayOutput() FirewallRegionCityArrayOutput {
	return i.ToFirewallRegionCityArrayOutputWithContext(context.Background())
}

func (i FirewallRegionCityArray) ToFirewallRegionCityArrayOutputWithContext(ctx context.Context) FirewallRegionCityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRegionCityArrayOutput)
}

type FirewallRegionCityOutput struct{ *pulumi.OutputState }

func (FirewallRegionCityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRegionCity)(nil)).Elem()
}

func (o FirewallRegionCityOutput) ToFirewallRegionCityOutput() FirewallRegionCityOutput {
	return o
}

func (o FirewallRegionCityOutput) ToFirewallRegionCityOutputWithContext(ctx context.Context) FirewallRegionCityOutput {
	return o
}

// City ID.
func (o FirewallRegionCityOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallRegionCity) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallRegionCityArrayOutput struct{ *pulumi.OutputState }

func (FirewallRegionCityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallRegionCity)(nil)).Elem()
}

func (o FirewallRegionCityArrayOutput) ToFirewallRegionCityArrayOutput() FirewallRegionCityArrayOutput {
	return o
}

func (o FirewallRegionCityArrayOutput) ToFirewallRegionCityArrayOutputWithContext(ctx context.Context) FirewallRegionCityArrayOutput {
	return o
}

func (o FirewallRegionCityArrayOutput) Index(i pulumi.IntInput) FirewallRegionCityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallRegionCity {
		return vs[0].([]FirewallRegionCity)[vs[1].(int)]
	}).(FirewallRegionCityOutput)
}

type FirewallSecurityPolicyseqStatePolicyList struct {
	Action   *string `pulumi:"action"`
	Name     *string `pulumi:"name"`
	Policyid *string `pulumi:"policyid"`
}

// FirewallSecurityPolicyseqStatePolicyListInput is an input type that accepts FirewallSecurityPolicyseqStatePolicyListArgs and FirewallSecurityPolicyseqStatePolicyListOutput values.
// You can construct a concrete instance of `FirewallSecurityPolicyseqStatePolicyListInput` via:
//
//	FirewallSecurityPolicyseqStatePolicyListArgs{...}
type FirewallSecurityPolicyseqStatePolicyListInput interface {
	pulumi.Input

	ToFirewallSecurityPolicyseqStatePolicyListOutput() FirewallSecurityPolicyseqStatePolicyListOutput
	ToFirewallSecurityPolicyseqStatePolicyListOutputWithContext(context.Context) FirewallSecurityPolicyseqStatePolicyListOutput
}

type FirewallSecurityPolicyseqStatePolicyListArgs struct {
	Action   pulumi.StringPtrInput `pulumi:"action"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Policyid pulumi.StringPtrInput `pulumi:"policyid"`
}

func (FirewallSecurityPolicyseqStatePolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecurityPolicyseqStatePolicyList)(nil)).Elem()
}

func (i FirewallSecurityPolicyseqStatePolicyListArgs) ToFirewallSecurityPolicyseqStatePolicyListOutput() FirewallSecurityPolicyseqStatePolicyListOutput {
	return i.ToFirewallSecurityPolicyseqStatePolicyListOutputWithContext(context.Background())
}

func (i FirewallSecurityPolicyseqStatePolicyListArgs) ToFirewallSecurityPolicyseqStatePolicyListOutputWithContext(ctx context.Context) FirewallSecurityPolicyseqStatePolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecurityPolicyseqStatePolicyListOutput)
}

// FirewallSecurityPolicyseqStatePolicyListArrayInput is an input type that accepts FirewallSecurityPolicyseqStatePolicyListArray and FirewallSecurityPolicyseqStatePolicyListArrayOutput values.
// You can construct a concrete instance of `FirewallSecurityPolicyseqStatePolicyListArrayInput` via:
//
//	FirewallSecurityPolicyseqStatePolicyListArray{ FirewallSecurityPolicyseqStatePolicyListArgs{...} }
type FirewallSecurityPolicyseqStatePolicyListArrayInput interface {
	pulumi.Input

	ToFirewallSecurityPolicyseqStatePolicyListArrayOutput() FirewallSecurityPolicyseqStatePolicyListArrayOutput
	ToFirewallSecurityPolicyseqStatePolicyListArrayOutputWithContext(context.Context) FirewallSecurityPolicyseqStatePolicyListArrayOutput
}

type FirewallSecurityPolicyseqStatePolicyListArray []FirewallSecurityPolicyseqStatePolicyListInput

func (FirewallSecurityPolicyseqStatePolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecurityPolicyseqStatePolicyList)(nil)).Elem()
}

func (i FirewallSecurityPolicyseqStatePolicyListArray) ToFirewallSecurityPolicyseqStatePolicyListArrayOutput() FirewallSecurityPolicyseqStatePolicyListArrayOutput {
	return i.ToFirewallSecurityPolicyseqStatePolicyListArrayOutputWithContext(context.Background())
}

func (i FirewallSecurityPolicyseqStatePolicyListArray) ToFirewallSecurityPolicyseqStatePolicyListArrayOutputWithContext(ctx context.Context) FirewallSecurityPolicyseqStatePolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecurityPolicyseqStatePolicyListArrayOutput)
}

type FirewallSecurityPolicyseqStatePolicyListOutput struct{ *pulumi.OutputState }

func (FirewallSecurityPolicyseqStatePolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecurityPolicyseqStatePolicyList)(nil)).Elem()
}

func (o FirewallSecurityPolicyseqStatePolicyListOutput) ToFirewallSecurityPolicyseqStatePolicyListOutput() FirewallSecurityPolicyseqStatePolicyListOutput {
	return o
}

func (o FirewallSecurityPolicyseqStatePolicyListOutput) ToFirewallSecurityPolicyseqStatePolicyListOutputWithContext(ctx context.Context) FirewallSecurityPolicyseqStatePolicyListOutput {
	return o
}

func (o FirewallSecurityPolicyseqStatePolicyListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecurityPolicyseqStatePolicyList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o FirewallSecurityPolicyseqStatePolicyListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecurityPolicyseqStatePolicyList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FirewallSecurityPolicyseqStatePolicyListOutput) Policyid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecurityPolicyseqStatePolicyList) *string { return v.Policyid }).(pulumi.StringPtrOutput)
}

type FirewallSecurityPolicyseqStatePolicyListArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecurityPolicyseqStatePolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecurityPolicyseqStatePolicyList)(nil)).Elem()
}

func (o FirewallSecurityPolicyseqStatePolicyListArrayOutput) ToFirewallSecurityPolicyseqStatePolicyListArrayOutput() FirewallSecurityPolicyseqStatePolicyListArrayOutput {
	return o
}

func (o FirewallSecurityPolicyseqStatePolicyListArrayOutput) ToFirewallSecurityPolicyseqStatePolicyListArrayOutputWithContext(ctx context.Context) FirewallSecurityPolicyseqStatePolicyListArrayOutput {
	return o
}

func (o FirewallSecurityPolicyseqStatePolicyListArrayOutput) Index(i pulumi.IntInput) FirewallSecurityPolicyseqStatePolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecurityPolicyseqStatePolicyList {
		return vs[0].([]FirewallSecurityPolicyseqStatePolicyList)[vs[1].(int)]
	}).(FirewallSecurityPolicyseqStatePolicyListOutput)
}

type FirewallSecurityPolicysortStatePolicyList struct {
	Action   *string `pulumi:"action"`
	Name     *string `pulumi:"name"`
	Policyid *string `pulumi:"policyid"`
}

// FirewallSecurityPolicysortStatePolicyListInput is an input type that accepts FirewallSecurityPolicysortStatePolicyListArgs and FirewallSecurityPolicysortStatePolicyListOutput values.
// You can construct a concrete instance of `FirewallSecurityPolicysortStatePolicyListInput` via:
//
//	FirewallSecurityPolicysortStatePolicyListArgs{...}
type FirewallSecurityPolicysortStatePolicyListInput interface {
	pulumi.Input

	ToFirewallSecurityPolicysortStatePolicyListOutput() FirewallSecurityPolicysortStatePolicyListOutput
	ToFirewallSecurityPolicysortStatePolicyListOutputWithContext(context.Context) FirewallSecurityPolicysortStatePolicyListOutput
}

type FirewallSecurityPolicysortStatePolicyListArgs struct {
	Action   pulumi.StringPtrInput `pulumi:"action"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Policyid pulumi.StringPtrInput `pulumi:"policyid"`
}

func (FirewallSecurityPolicysortStatePolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecurityPolicysortStatePolicyList)(nil)).Elem()
}

func (i FirewallSecurityPolicysortStatePolicyListArgs) ToFirewallSecurityPolicysortStatePolicyListOutput() FirewallSecurityPolicysortStatePolicyListOutput {
	return i.ToFirewallSecurityPolicysortStatePolicyListOutputWithContext(context.Background())
}

func (i FirewallSecurityPolicysortStatePolicyListArgs) ToFirewallSecurityPolicysortStatePolicyListOutputWithContext(ctx context.Context) FirewallSecurityPolicysortStatePolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecurityPolicysortStatePolicyListOutput)
}

// FirewallSecurityPolicysortStatePolicyListArrayInput is an input type that accepts FirewallSecurityPolicysortStatePolicyListArray and FirewallSecurityPolicysortStatePolicyListArrayOutput values.
// You can construct a concrete instance of `FirewallSecurityPolicysortStatePolicyListArrayInput` via:
//
//	FirewallSecurityPolicysortStatePolicyListArray{ FirewallSecurityPolicysortStatePolicyListArgs{...} }
type FirewallSecurityPolicysortStatePolicyListArrayInput interface {
	pulumi.Input

	ToFirewallSecurityPolicysortStatePolicyListArrayOutput() FirewallSecurityPolicysortStatePolicyListArrayOutput
	ToFirewallSecurityPolicysortStatePolicyListArrayOutputWithContext(context.Context) FirewallSecurityPolicysortStatePolicyListArrayOutput
}

type FirewallSecurityPolicysortStatePolicyListArray []FirewallSecurityPolicysortStatePolicyListInput

func (FirewallSecurityPolicysortStatePolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecurityPolicysortStatePolicyList)(nil)).Elem()
}

func (i FirewallSecurityPolicysortStatePolicyListArray) ToFirewallSecurityPolicysortStatePolicyListArrayOutput() FirewallSecurityPolicysortStatePolicyListArrayOutput {
	return i.ToFirewallSecurityPolicysortStatePolicyListArrayOutputWithContext(context.Background())
}

func (i FirewallSecurityPolicysortStatePolicyListArray) ToFirewallSecurityPolicysortStatePolicyListArrayOutputWithContext(ctx context.Context) FirewallSecurityPolicysortStatePolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecurityPolicysortStatePolicyListArrayOutput)
}

type FirewallSecurityPolicysortStatePolicyListOutput struct{ *pulumi.OutputState }

func (FirewallSecurityPolicysortStatePolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecurityPolicysortStatePolicyList)(nil)).Elem()
}

func (o FirewallSecurityPolicysortStatePolicyListOutput) ToFirewallSecurityPolicysortStatePolicyListOutput() FirewallSecurityPolicysortStatePolicyListOutput {
	return o
}

func (o FirewallSecurityPolicysortStatePolicyListOutput) ToFirewallSecurityPolicysortStatePolicyListOutputWithContext(ctx context.Context) FirewallSecurityPolicysortStatePolicyListOutput {
	return o
}

func (o FirewallSecurityPolicysortStatePolicyListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecurityPolicysortStatePolicyList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o FirewallSecurityPolicysortStatePolicyListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecurityPolicysortStatePolicyList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FirewallSecurityPolicysortStatePolicyListOutput) Policyid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecurityPolicysortStatePolicyList) *string { return v.Policyid }).(pulumi.StringPtrOutput)
}

type FirewallSecurityPolicysortStatePolicyListArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecurityPolicysortStatePolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecurityPolicysortStatePolicyList)(nil)).Elem()
}

func (o FirewallSecurityPolicysortStatePolicyListArrayOutput) ToFirewallSecurityPolicysortStatePolicyListArrayOutput() FirewallSecurityPolicysortStatePolicyListArrayOutput {
	return o
}

func (o FirewallSecurityPolicysortStatePolicyListArrayOutput) ToFirewallSecurityPolicysortStatePolicyListArrayOutputWithContext(ctx context.Context) FirewallSecurityPolicysortStatePolicyListArrayOutput {
	return o
}

func (o FirewallSecurityPolicysortStatePolicyListArrayOutput) Index(i pulumi.IntInput) FirewallSecurityPolicysortStatePolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecurityPolicysortStatePolicyList {
		return vs[0].([]FirewallSecurityPolicysortStatePolicyList)[vs[1].(int)]
	}).(FirewallSecurityPolicysortStatePolicyListOutput)
}

type FirewallSecuritypolicyAppCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// FirewallSecuritypolicyAppCategoryInput is an input type that accepts FirewallSecuritypolicyAppCategoryArgs and FirewallSecuritypolicyAppCategoryOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyAppCategoryInput` via:
//
//	FirewallSecuritypolicyAppCategoryArgs{...}
type FirewallSecuritypolicyAppCategoryInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyAppCategoryOutput() FirewallSecuritypolicyAppCategoryOutput
	ToFirewallSecuritypolicyAppCategoryOutputWithContext(context.Context) FirewallSecuritypolicyAppCategoryOutput
}

type FirewallSecuritypolicyAppCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallSecuritypolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyAppCategory)(nil)).Elem()
}

func (i FirewallSecuritypolicyAppCategoryArgs) ToFirewallSecuritypolicyAppCategoryOutput() FirewallSecuritypolicyAppCategoryOutput {
	return i.ToFirewallSecuritypolicyAppCategoryOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyAppCategoryArgs) ToFirewallSecuritypolicyAppCategoryOutputWithContext(ctx context.Context) FirewallSecuritypolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyAppCategoryOutput)
}

// FirewallSecuritypolicyAppCategoryArrayInput is an input type that accepts FirewallSecuritypolicyAppCategoryArray and FirewallSecuritypolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyAppCategoryArrayInput` via:
//
//	FirewallSecuritypolicyAppCategoryArray{ FirewallSecuritypolicyAppCategoryArgs{...} }
type FirewallSecuritypolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyAppCategoryArrayOutput() FirewallSecuritypolicyAppCategoryArrayOutput
	ToFirewallSecuritypolicyAppCategoryArrayOutputWithContext(context.Context) FirewallSecuritypolicyAppCategoryArrayOutput
}

type FirewallSecuritypolicyAppCategoryArray []FirewallSecuritypolicyAppCategoryInput

func (FirewallSecuritypolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyAppCategory)(nil)).Elem()
}

func (i FirewallSecuritypolicyAppCategoryArray) ToFirewallSecuritypolicyAppCategoryArrayOutput() FirewallSecuritypolicyAppCategoryArrayOutput {
	return i.ToFirewallSecuritypolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyAppCategoryArray) ToFirewallSecuritypolicyAppCategoryArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyAppCategoryArrayOutput)
}

type FirewallSecuritypolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyAppCategory)(nil)).Elem()
}

func (o FirewallSecuritypolicyAppCategoryOutput) ToFirewallSecuritypolicyAppCategoryOutput() FirewallSecuritypolicyAppCategoryOutput {
	return o
}

func (o FirewallSecuritypolicyAppCategoryOutput) ToFirewallSecuritypolicyAppCategoryOutputWithContext(ctx context.Context) FirewallSecuritypolicyAppCategoryOutput {
	return o
}

// Category IDs.
func (o FirewallSecuritypolicyAppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyAppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallSecuritypolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyAppCategory)(nil)).Elem()
}

func (o FirewallSecuritypolicyAppCategoryArrayOutput) ToFirewallSecuritypolicyAppCategoryArrayOutput() FirewallSecuritypolicyAppCategoryArrayOutput {
	return o
}

func (o FirewallSecuritypolicyAppCategoryArrayOutput) ToFirewallSecuritypolicyAppCategoryArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyAppCategoryArrayOutput {
	return o
}

func (o FirewallSecuritypolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyAppCategory {
		return vs[0].([]FirewallSecuritypolicyAppCategory)[vs[1].(int)]
	}).(FirewallSecuritypolicyAppCategoryOutput)
}

type FirewallSecuritypolicyAppGroup struct {
	// Application group names.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyAppGroupInput is an input type that accepts FirewallSecuritypolicyAppGroupArgs and FirewallSecuritypolicyAppGroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyAppGroupInput` via:
//
//	FirewallSecuritypolicyAppGroupArgs{...}
type FirewallSecuritypolicyAppGroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyAppGroupOutput() FirewallSecuritypolicyAppGroupOutput
	ToFirewallSecuritypolicyAppGroupOutputWithContext(context.Context) FirewallSecuritypolicyAppGroupOutput
}

type FirewallSecuritypolicyAppGroupArgs struct {
	// Application group names.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyAppGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyAppGroupArgs) ToFirewallSecuritypolicyAppGroupOutput() FirewallSecuritypolicyAppGroupOutput {
	return i.ToFirewallSecuritypolicyAppGroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyAppGroupArgs) ToFirewallSecuritypolicyAppGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyAppGroupOutput)
}

// FirewallSecuritypolicyAppGroupArrayInput is an input type that accepts FirewallSecuritypolicyAppGroupArray and FirewallSecuritypolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyAppGroupArrayInput` via:
//
//	FirewallSecuritypolicyAppGroupArray{ FirewallSecuritypolicyAppGroupArgs{...} }
type FirewallSecuritypolicyAppGroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyAppGroupArrayOutput() FirewallSecuritypolicyAppGroupArrayOutput
	ToFirewallSecuritypolicyAppGroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyAppGroupArrayOutput
}

type FirewallSecuritypolicyAppGroupArray []FirewallSecuritypolicyAppGroupInput

func (FirewallSecuritypolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyAppGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyAppGroupArray) ToFirewallSecuritypolicyAppGroupArrayOutput() FirewallSecuritypolicyAppGroupArrayOutput {
	return i.ToFirewallSecuritypolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyAppGroupArray) ToFirewallSecuritypolicyAppGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyAppGroupArrayOutput)
}

type FirewallSecuritypolicyAppGroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyAppGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyAppGroupOutput) ToFirewallSecuritypolicyAppGroupOutput() FirewallSecuritypolicyAppGroupOutput {
	return o
}

func (o FirewallSecuritypolicyAppGroupOutput) ToFirewallSecuritypolicyAppGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyAppGroupOutput {
	return o
}

// Application group names.
func (o FirewallSecuritypolicyAppGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyAppGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyAppGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyAppGroupArrayOutput) ToFirewallSecuritypolicyAppGroupArrayOutput() FirewallSecuritypolicyAppGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyAppGroupArrayOutput) ToFirewallSecuritypolicyAppGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyAppGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyAppGroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyAppGroup {
		return vs[0].([]FirewallSecuritypolicyAppGroup)[vs[1].(int)]
	}).(FirewallSecuritypolicyAppGroupOutput)
}

type FirewallSecuritypolicyApplication struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// FirewallSecuritypolicyApplicationInput is an input type that accepts FirewallSecuritypolicyApplicationArgs and FirewallSecuritypolicyApplicationOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyApplicationInput` via:
//
//	FirewallSecuritypolicyApplicationArgs{...}
type FirewallSecuritypolicyApplicationInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyApplicationOutput() FirewallSecuritypolicyApplicationOutput
	ToFirewallSecuritypolicyApplicationOutputWithContext(context.Context) FirewallSecuritypolicyApplicationOutput
}

type FirewallSecuritypolicyApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallSecuritypolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyApplication)(nil)).Elem()
}

func (i FirewallSecuritypolicyApplicationArgs) ToFirewallSecuritypolicyApplicationOutput() FirewallSecuritypolicyApplicationOutput {
	return i.ToFirewallSecuritypolicyApplicationOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyApplicationArgs) ToFirewallSecuritypolicyApplicationOutputWithContext(ctx context.Context) FirewallSecuritypolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyApplicationOutput)
}

// FirewallSecuritypolicyApplicationArrayInput is an input type that accepts FirewallSecuritypolicyApplicationArray and FirewallSecuritypolicyApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyApplicationArrayInput` via:
//
//	FirewallSecuritypolicyApplicationArray{ FirewallSecuritypolicyApplicationArgs{...} }
type FirewallSecuritypolicyApplicationArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyApplicationArrayOutput() FirewallSecuritypolicyApplicationArrayOutput
	ToFirewallSecuritypolicyApplicationArrayOutputWithContext(context.Context) FirewallSecuritypolicyApplicationArrayOutput
}

type FirewallSecuritypolicyApplicationArray []FirewallSecuritypolicyApplicationInput

func (FirewallSecuritypolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyApplication)(nil)).Elem()
}

func (i FirewallSecuritypolicyApplicationArray) ToFirewallSecuritypolicyApplicationArrayOutput() FirewallSecuritypolicyApplicationArrayOutput {
	return i.ToFirewallSecuritypolicyApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyApplicationArray) ToFirewallSecuritypolicyApplicationArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyApplicationArrayOutput)
}

type FirewallSecuritypolicyApplicationOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyApplication)(nil)).Elem()
}

func (o FirewallSecuritypolicyApplicationOutput) ToFirewallSecuritypolicyApplicationOutput() FirewallSecuritypolicyApplicationOutput {
	return o
}

func (o FirewallSecuritypolicyApplicationOutput) ToFirewallSecuritypolicyApplicationOutputWithContext(ctx context.Context) FirewallSecuritypolicyApplicationOutput {
	return o
}

// Application IDs.
func (o FirewallSecuritypolicyApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallSecuritypolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyApplication)(nil)).Elem()
}

func (o FirewallSecuritypolicyApplicationArrayOutput) ToFirewallSecuritypolicyApplicationArrayOutput() FirewallSecuritypolicyApplicationArrayOutput {
	return o
}

func (o FirewallSecuritypolicyApplicationArrayOutput) ToFirewallSecuritypolicyApplicationArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyApplicationArrayOutput {
	return o
}

func (o FirewallSecuritypolicyApplicationArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyApplication {
		return vs[0].([]FirewallSecuritypolicyApplication)[vs[1].(int)]
	}).(FirewallSecuritypolicyApplicationOutput)
}

type FirewallSecuritypolicyDstaddr4 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyDstaddr4Input is an input type that accepts FirewallSecuritypolicyDstaddr4Args and FirewallSecuritypolicyDstaddr4Output values.
// You can construct a concrete instance of `FirewallSecuritypolicyDstaddr4Input` via:
//
//	FirewallSecuritypolicyDstaddr4Args{...}
type FirewallSecuritypolicyDstaddr4Input interface {
	pulumi.Input

	ToFirewallSecuritypolicyDstaddr4Output() FirewallSecuritypolicyDstaddr4Output
	ToFirewallSecuritypolicyDstaddr4OutputWithContext(context.Context) FirewallSecuritypolicyDstaddr4Output
}

type FirewallSecuritypolicyDstaddr4Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyDstaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyDstaddr4)(nil)).Elem()
}

func (i FirewallSecuritypolicyDstaddr4Args) ToFirewallSecuritypolicyDstaddr4Output() FirewallSecuritypolicyDstaddr4Output {
	return i.ToFirewallSecuritypolicyDstaddr4OutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyDstaddr4Args) ToFirewallSecuritypolicyDstaddr4OutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyDstaddr4Output)
}

// FirewallSecuritypolicyDstaddr4ArrayInput is an input type that accepts FirewallSecuritypolicyDstaddr4Array and FirewallSecuritypolicyDstaddr4ArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyDstaddr4ArrayInput` via:
//
//	FirewallSecuritypolicyDstaddr4Array{ FirewallSecuritypolicyDstaddr4Args{...} }
type FirewallSecuritypolicyDstaddr4ArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyDstaddr4ArrayOutput() FirewallSecuritypolicyDstaddr4ArrayOutput
	ToFirewallSecuritypolicyDstaddr4ArrayOutputWithContext(context.Context) FirewallSecuritypolicyDstaddr4ArrayOutput
}

type FirewallSecuritypolicyDstaddr4Array []FirewallSecuritypolicyDstaddr4Input

func (FirewallSecuritypolicyDstaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyDstaddr4)(nil)).Elem()
}

func (i FirewallSecuritypolicyDstaddr4Array) ToFirewallSecuritypolicyDstaddr4ArrayOutput() FirewallSecuritypolicyDstaddr4ArrayOutput {
	return i.ToFirewallSecuritypolicyDstaddr4ArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyDstaddr4Array) ToFirewallSecuritypolicyDstaddr4ArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyDstaddr4ArrayOutput)
}

type FirewallSecuritypolicyDstaddr4Output struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyDstaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyDstaddr4)(nil)).Elem()
}

func (o FirewallSecuritypolicyDstaddr4Output) ToFirewallSecuritypolicyDstaddr4Output() FirewallSecuritypolicyDstaddr4Output {
	return o
}

func (o FirewallSecuritypolicyDstaddr4Output) ToFirewallSecuritypolicyDstaddr4OutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddr4Output {
	return o
}

// Policy name.
func (o FirewallSecuritypolicyDstaddr4Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyDstaddr4) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyDstaddr4ArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyDstaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyDstaddr4)(nil)).Elem()
}

func (o FirewallSecuritypolicyDstaddr4ArrayOutput) ToFirewallSecuritypolicyDstaddr4ArrayOutput() FirewallSecuritypolicyDstaddr4ArrayOutput {
	return o
}

func (o FirewallSecuritypolicyDstaddr4ArrayOutput) ToFirewallSecuritypolicyDstaddr4ArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddr4ArrayOutput {
	return o
}

func (o FirewallSecuritypolicyDstaddr4ArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyDstaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyDstaddr4 {
		return vs[0].([]FirewallSecuritypolicyDstaddr4)[vs[1].(int)]
	}).(FirewallSecuritypolicyDstaddr4Output)
}

type FirewallSecuritypolicyDstaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyDstaddr6Input is an input type that accepts FirewallSecuritypolicyDstaddr6Args and FirewallSecuritypolicyDstaddr6Output values.
// You can construct a concrete instance of `FirewallSecuritypolicyDstaddr6Input` via:
//
//	FirewallSecuritypolicyDstaddr6Args{...}
type FirewallSecuritypolicyDstaddr6Input interface {
	pulumi.Input

	ToFirewallSecuritypolicyDstaddr6Output() FirewallSecuritypolicyDstaddr6Output
	ToFirewallSecuritypolicyDstaddr6OutputWithContext(context.Context) FirewallSecuritypolicyDstaddr6Output
}

type FirewallSecuritypolicyDstaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyDstaddr6)(nil)).Elem()
}

func (i FirewallSecuritypolicyDstaddr6Args) ToFirewallSecuritypolicyDstaddr6Output() FirewallSecuritypolicyDstaddr6Output {
	return i.ToFirewallSecuritypolicyDstaddr6OutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyDstaddr6Args) ToFirewallSecuritypolicyDstaddr6OutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyDstaddr6Output)
}

// FirewallSecuritypolicyDstaddr6ArrayInput is an input type that accepts FirewallSecuritypolicyDstaddr6Array and FirewallSecuritypolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyDstaddr6ArrayInput` via:
//
//	FirewallSecuritypolicyDstaddr6Array{ FirewallSecuritypolicyDstaddr6Args{...} }
type FirewallSecuritypolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyDstaddr6ArrayOutput() FirewallSecuritypolicyDstaddr6ArrayOutput
	ToFirewallSecuritypolicyDstaddr6ArrayOutputWithContext(context.Context) FirewallSecuritypolicyDstaddr6ArrayOutput
}

type FirewallSecuritypolicyDstaddr6Array []FirewallSecuritypolicyDstaddr6Input

func (FirewallSecuritypolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyDstaddr6)(nil)).Elem()
}

func (i FirewallSecuritypolicyDstaddr6Array) ToFirewallSecuritypolicyDstaddr6ArrayOutput() FirewallSecuritypolicyDstaddr6ArrayOutput {
	return i.ToFirewallSecuritypolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyDstaddr6Array) ToFirewallSecuritypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyDstaddr6ArrayOutput)
}

type FirewallSecuritypolicyDstaddr6Output struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyDstaddr6)(nil)).Elem()
}

func (o FirewallSecuritypolicyDstaddr6Output) ToFirewallSecuritypolicyDstaddr6Output() FirewallSecuritypolicyDstaddr6Output {
	return o
}

func (o FirewallSecuritypolicyDstaddr6Output) ToFirewallSecuritypolicyDstaddr6OutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddr6Output {
	return o
}

// Policy name.
func (o FirewallSecuritypolicyDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyDstaddr6)(nil)).Elem()
}

func (o FirewallSecuritypolicyDstaddr6ArrayOutput) ToFirewallSecuritypolicyDstaddr6ArrayOutput() FirewallSecuritypolicyDstaddr6ArrayOutput {
	return o
}

func (o FirewallSecuritypolicyDstaddr6ArrayOutput) ToFirewallSecuritypolicyDstaddr6ArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddr6ArrayOutput {
	return o
}

func (o FirewallSecuritypolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyDstaddr6 {
		return vs[0].([]FirewallSecuritypolicyDstaddr6)[vs[1].(int)]
	}).(FirewallSecuritypolicyDstaddr6Output)
}

type FirewallSecuritypolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyDstaddrInput is an input type that accepts FirewallSecuritypolicyDstaddrArgs and FirewallSecuritypolicyDstaddrOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyDstaddrInput` via:
//
//	FirewallSecuritypolicyDstaddrArgs{...}
type FirewallSecuritypolicyDstaddrInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyDstaddrOutput() FirewallSecuritypolicyDstaddrOutput
	ToFirewallSecuritypolicyDstaddrOutputWithContext(context.Context) FirewallSecuritypolicyDstaddrOutput
}

type FirewallSecuritypolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyDstaddr)(nil)).Elem()
}

func (i FirewallSecuritypolicyDstaddrArgs) ToFirewallSecuritypolicyDstaddrOutput() FirewallSecuritypolicyDstaddrOutput {
	return i.ToFirewallSecuritypolicyDstaddrOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyDstaddrArgs) ToFirewallSecuritypolicyDstaddrOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyDstaddrOutput)
}

// FirewallSecuritypolicyDstaddrArrayInput is an input type that accepts FirewallSecuritypolicyDstaddrArray and FirewallSecuritypolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyDstaddrArrayInput` via:
//
//	FirewallSecuritypolicyDstaddrArray{ FirewallSecuritypolicyDstaddrArgs{...} }
type FirewallSecuritypolicyDstaddrArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyDstaddrArrayOutput() FirewallSecuritypolicyDstaddrArrayOutput
	ToFirewallSecuritypolicyDstaddrArrayOutputWithContext(context.Context) FirewallSecuritypolicyDstaddrArrayOutput
}

type FirewallSecuritypolicyDstaddrArray []FirewallSecuritypolicyDstaddrInput

func (FirewallSecuritypolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyDstaddr)(nil)).Elem()
}

func (i FirewallSecuritypolicyDstaddrArray) ToFirewallSecuritypolicyDstaddrArrayOutput() FirewallSecuritypolicyDstaddrArrayOutput {
	return i.ToFirewallSecuritypolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyDstaddrArray) ToFirewallSecuritypolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyDstaddrArrayOutput)
}

type FirewallSecuritypolicyDstaddrOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyDstaddr)(nil)).Elem()
}

func (o FirewallSecuritypolicyDstaddrOutput) ToFirewallSecuritypolicyDstaddrOutput() FirewallSecuritypolicyDstaddrOutput {
	return o
}

func (o FirewallSecuritypolicyDstaddrOutput) ToFirewallSecuritypolicyDstaddrOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddrOutput {
	return o
}

// Address name.
func (o FirewallSecuritypolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyDstaddr)(nil)).Elem()
}

func (o FirewallSecuritypolicyDstaddrArrayOutput) ToFirewallSecuritypolicyDstaddrArrayOutput() FirewallSecuritypolicyDstaddrArrayOutput {
	return o
}

func (o FirewallSecuritypolicyDstaddrArrayOutput) ToFirewallSecuritypolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstaddrArrayOutput {
	return o
}

func (o FirewallSecuritypolicyDstaddrArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyDstaddr {
		return vs[0].([]FirewallSecuritypolicyDstaddr)[vs[1].(int)]
	}).(FirewallSecuritypolicyDstaddrOutput)
}

type FirewallSecuritypolicyDstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyDstintfInput is an input type that accepts FirewallSecuritypolicyDstintfArgs and FirewallSecuritypolicyDstintfOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyDstintfInput` via:
//
//	FirewallSecuritypolicyDstintfArgs{...}
type FirewallSecuritypolicyDstintfInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyDstintfOutput() FirewallSecuritypolicyDstintfOutput
	ToFirewallSecuritypolicyDstintfOutputWithContext(context.Context) FirewallSecuritypolicyDstintfOutput
}

type FirewallSecuritypolicyDstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyDstintf)(nil)).Elem()
}

func (i FirewallSecuritypolicyDstintfArgs) ToFirewallSecuritypolicyDstintfOutput() FirewallSecuritypolicyDstintfOutput {
	return i.ToFirewallSecuritypolicyDstintfOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyDstintfArgs) ToFirewallSecuritypolicyDstintfOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyDstintfOutput)
}

// FirewallSecuritypolicyDstintfArrayInput is an input type that accepts FirewallSecuritypolicyDstintfArray and FirewallSecuritypolicyDstintfArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyDstintfArrayInput` via:
//
//	FirewallSecuritypolicyDstintfArray{ FirewallSecuritypolicyDstintfArgs{...} }
type FirewallSecuritypolicyDstintfArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyDstintfArrayOutput() FirewallSecuritypolicyDstintfArrayOutput
	ToFirewallSecuritypolicyDstintfArrayOutputWithContext(context.Context) FirewallSecuritypolicyDstintfArrayOutput
}

type FirewallSecuritypolicyDstintfArray []FirewallSecuritypolicyDstintfInput

func (FirewallSecuritypolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyDstintf)(nil)).Elem()
}

func (i FirewallSecuritypolicyDstintfArray) ToFirewallSecuritypolicyDstintfArrayOutput() FirewallSecuritypolicyDstintfArrayOutput {
	return i.ToFirewallSecuritypolicyDstintfArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyDstintfArray) ToFirewallSecuritypolicyDstintfArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyDstintfArrayOutput)
}

type FirewallSecuritypolicyDstintfOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyDstintf)(nil)).Elem()
}

func (o FirewallSecuritypolicyDstintfOutput) ToFirewallSecuritypolicyDstintfOutput() FirewallSecuritypolicyDstintfOutput {
	return o
}

func (o FirewallSecuritypolicyDstintfOutput) ToFirewallSecuritypolicyDstintfOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstintfOutput {
	return o
}

// Interface name.
func (o FirewallSecuritypolicyDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyDstintf)(nil)).Elem()
}

func (o FirewallSecuritypolicyDstintfArrayOutput) ToFirewallSecuritypolicyDstintfArrayOutput() FirewallSecuritypolicyDstintfArrayOutput {
	return o
}

func (o FirewallSecuritypolicyDstintfArrayOutput) ToFirewallSecuritypolicyDstintfArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyDstintfArrayOutput {
	return o
}

func (o FirewallSecuritypolicyDstintfArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyDstintf {
		return vs[0].([]FirewallSecuritypolicyDstintf)[vs[1].(int)]
	}).(FirewallSecuritypolicyDstintfOutput)
}

type FirewallSecuritypolicyFssoGroup struct {
	// Names of FSSO groups.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyFssoGroupInput is an input type that accepts FirewallSecuritypolicyFssoGroupArgs and FirewallSecuritypolicyFssoGroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyFssoGroupInput` via:
//
//	FirewallSecuritypolicyFssoGroupArgs{...}
type FirewallSecuritypolicyFssoGroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyFssoGroupOutput() FirewallSecuritypolicyFssoGroupOutput
	ToFirewallSecuritypolicyFssoGroupOutputWithContext(context.Context) FirewallSecuritypolicyFssoGroupOutput
}

type FirewallSecuritypolicyFssoGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyFssoGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyFssoGroupArgs) ToFirewallSecuritypolicyFssoGroupOutput() FirewallSecuritypolicyFssoGroupOutput {
	return i.ToFirewallSecuritypolicyFssoGroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyFssoGroupArgs) ToFirewallSecuritypolicyFssoGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyFssoGroupOutput)
}

// FirewallSecuritypolicyFssoGroupArrayInput is an input type that accepts FirewallSecuritypolicyFssoGroupArray and FirewallSecuritypolicyFssoGroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyFssoGroupArrayInput` via:
//
//	FirewallSecuritypolicyFssoGroupArray{ FirewallSecuritypolicyFssoGroupArgs{...} }
type FirewallSecuritypolicyFssoGroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyFssoGroupArrayOutput() FirewallSecuritypolicyFssoGroupArrayOutput
	ToFirewallSecuritypolicyFssoGroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyFssoGroupArrayOutput
}

type FirewallSecuritypolicyFssoGroupArray []FirewallSecuritypolicyFssoGroupInput

func (FirewallSecuritypolicyFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyFssoGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyFssoGroupArray) ToFirewallSecuritypolicyFssoGroupArrayOutput() FirewallSecuritypolicyFssoGroupArrayOutput {
	return i.ToFirewallSecuritypolicyFssoGroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyFssoGroupArray) ToFirewallSecuritypolicyFssoGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyFssoGroupArrayOutput)
}

type FirewallSecuritypolicyFssoGroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyFssoGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyFssoGroupOutput) ToFirewallSecuritypolicyFssoGroupOutput() FirewallSecuritypolicyFssoGroupOutput {
	return o
}

func (o FirewallSecuritypolicyFssoGroupOutput) ToFirewallSecuritypolicyFssoGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyFssoGroupOutput {
	return o
}

// Names of FSSO groups.
func (o FirewallSecuritypolicyFssoGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyFssoGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyFssoGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyFssoGroupArrayOutput) ToFirewallSecuritypolicyFssoGroupArrayOutput() FirewallSecuritypolicyFssoGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyFssoGroupArrayOutput) ToFirewallSecuritypolicyFssoGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyFssoGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyFssoGroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyFssoGroup {
		return vs[0].([]FirewallSecuritypolicyFssoGroup)[vs[1].(int)]
	}).(FirewallSecuritypolicyFssoGroupOutput)
}

type FirewallSecuritypolicyGroup struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyGroupInput is an input type that accepts FirewallSecuritypolicyGroupArgs and FirewallSecuritypolicyGroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyGroupInput` via:
//
//	FirewallSecuritypolicyGroupArgs{...}
type FirewallSecuritypolicyGroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyGroupOutput() FirewallSecuritypolicyGroupOutput
	ToFirewallSecuritypolicyGroupOutputWithContext(context.Context) FirewallSecuritypolicyGroupOutput
}

type FirewallSecuritypolicyGroupArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyGroupArgs) ToFirewallSecuritypolicyGroupOutput() FirewallSecuritypolicyGroupOutput {
	return i.ToFirewallSecuritypolicyGroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyGroupArgs) ToFirewallSecuritypolicyGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyGroupOutput)
}

// FirewallSecuritypolicyGroupArrayInput is an input type that accepts FirewallSecuritypolicyGroupArray and FirewallSecuritypolicyGroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyGroupArrayInput` via:
//
//	FirewallSecuritypolicyGroupArray{ FirewallSecuritypolicyGroupArgs{...} }
type FirewallSecuritypolicyGroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyGroupArrayOutput() FirewallSecuritypolicyGroupArrayOutput
	ToFirewallSecuritypolicyGroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyGroupArrayOutput
}

type FirewallSecuritypolicyGroupArray []FirewallSecuritypolicyGroupInput

func (FirewallSecuritypolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyGroupArray) ToFirewallSecuritypolicyGroupArrayOutput() FirewallSecuritypolicyGroupArrayOutput {
	return i.ToFirewallSecuritypolicyGroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyGroupArray) ToFirewallSecuritypolicyGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyGroupArrayOutput)
}

type FirewallSecuritypolicyGroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyGroupOutput) ToFirewallSecuritypolicyGroupOutput() FirewallSecuritypolicyGroupOutput {
	return o
}

func (o FirewallSecuritypolicyGroupOutput) ToFirewallSecuritypolicyGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyGroupOutput {
	return o
}

// User group name.
func (o FirewallSecuritypolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyGroupArrayOutput) ToFirewallSecuritypolicyGroupArrayOutput() FirewallSecuritypolicyGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyGroupArrayOutput) ToFirewallSecuritypolicyGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyGroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyGroup {
		return vs[0].([]FirewallSecuritypolicyGroup)[vs[1].(int)]
	}).(FirewallSecuritypolicyGroupOutput)
}

type FirewallSecuritypolicyInternetService6Custom struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetService6CustomInput is an input type that accepts FirewallSecuritypolicyInternetService6CustomArgs and FirewallSecuritypolicyInternetService6CustomOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6CustomInput` via:
//
//	FirewallSecuritypolicyInternetService6CustomArgs{...}
type FirewallSecuritypolicyInternetService6CustomInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6CustomOutput() FirewallSecuritypolicyInternetService6CustomOutput
	ToFirewallSecuritypolicyInternetService6CustomOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6CustomOutput
}

type FirewallSecuritypolicyInternetService6CustomArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetService6CustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6Custom)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6CustomArgs) ToFirewallSecuritypolicyInternetService6CustomOutput() FirewallSecuritypolicyInternetService6CustomOutput {
	return i.ToFirewallSecuritypolicyInternetService6CustomOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6CustomArgs) ToFirewallSecuritypolicyInternetService6CustomOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6CustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6CustomOutput)
}

// FirewallSecuritypolicyInternetService6CustomArrayInput is an input type that accepts FirewallSecuritypolicyInternetService6CustomArray and FirewallSecuritypolicyInternetService6CustomArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6CustomArrayInput` via:
//
//	FirewallSecuritypolicyInternetService6CustomArray{ FirewallSecuritypolicyInternetService6CustomArgs{...} }
type FirewallSecuritypolicyInternetService6CustomArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6CustomArrayOutput() FirewallSecuritypolicyInternetService6CustomArrayOutput
	ToFirewallSecuritypolicyInternetService6CustomArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6CustomArrayOutput
}

type FirewallSecuritypolicyInternetService6CustomArray []FirewallSecuritypolicyInternetService6CustomInput

func (FirewallSecuritypolicyInternetService6CustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6Custom)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6CustomArray) ToFirewallSecuritypolicyInternetService6CustomArrayOutput() FirewallSecuritypolicyInternetService6CustomArrayOutput {
	return i.ToFirewallSecuritypolicyInternetService6CustomArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6CustomArray) ToFirewallSecuritypolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6CustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6CustomArrayOutput)
}

type FirewallSecuritypolicyInternetService6CustomOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6CustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6Custom)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6CustomOutput) ToFirewallSecuritypolicyInternetService6CustomOutput() FirewallSecuritypolicyInternetService6CustomOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6CustomOutput) ToFirewallSecuritypolicyInternetService6CustomOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6CustomOutput {
	return o
}

// Policy name.
func (o FirewallSecuritypolicyInternetService6CustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetService6Custom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetService6CustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6CustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6Custom)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6CustomArrayOutput) ToFirewallSecuritypolicyInternetService6CustomArrayOutput() FirewallSecuritypolicyInternetService6CustomArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6CustomArrayOutput) ToFirewallSecuritypolicyInternetService6CustomArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6CustomArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6CustomArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetService6CustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetService6Custom {
		return vs[0].([]FirewallSecuritypolicyInternetService6Custom)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetService6CustomOutput)
}

type FirewallSecuritypolicyInternetService6CustomGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetService6CustomGroupInput is an input type that accepts FirewallSecuritypolicyInternetService6CustomGroupArgs and FirewallSecuritypolicyInternetService6CustomGroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6CustomGroupInput` via:
//
//	FirewallSecuritypolicyInternetService6CustomGroupArgs{...}
type FirewallSecuritypolicyInternetService6CustomGroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6CustomGroupOutput() FirewallSecuritypolicyInternetService6CustomGroupOutput
	ToFirewallSecuritypolicyInternetService6CustomGroupOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6CustomGroupOutput
}

type FirewallSecuritypolicyInternetService6CustomGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetService6CustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6CustomGroupArgs) ToFirewallSecuritypolicyInternetService6CustomGroupOutput() FirewallSecuritypolicyInternetService6CustomGroupOutput {
	return i.ToFirewallSecuritypolicyInternetService6CustomGroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6CustomGroupArgs) ToFirewallSecuritypolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6CustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6CustomGroupOutput)
}

// FirewallSecuritypolicyInternetService6CustomGroupArrayInput is an input type that accepts FirewallSecuritypolicyInternetService6CustomGroupArray and FirewallSecuritypolicyInternetService6CustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6CustomGroupArrayInput` via:
//
//	FirewallSecuritypolicyInternetService6CustomGroupArray{ FirewallSecuritypolicyInternetService6CustomGroupArgs{...} }
type FirewallSecuritypolicyInternetService6CustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6CustomGroupArrayOutput() FirewallSecuritypolicyInternetService6CustomGroupArrayOutput
	ToFirewallSecuritypolicyInternetService6CustomGroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6CustomGroupArrayOutput
}

type FirewallSecuritypolicyInternetService6CustomGroupArray []FirewallSecuritypolicyInternetService6CustomGroupInput

func (FirewallSecuritypolicyInternetService6CustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6CustomGroupArray) ToFirewallSecuritypolicyInternetService6CustomGroupArrayOutput() FirewallSecuritypolicyInternetService6CustomGroupArrayOutput {
	return i.ToFirewallSecuritypolicyInternetService6CustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6CustomGroupArray) ToFirewallSecuritypolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6CustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6CustomGroupArrayOutput)
}

type FirewallSecuritypolicyInternetService6CustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6CustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6CustomGroupOutput) ToFirewallSecuritypolicyInternetService6CustomGroupOutput() FirewallSecuritypolicyInternetService6CustomGroupOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6CustomGroupOutput) ToFirewallSecuritypolicyInternetService6CustomGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6CustomGroupOutput {
	return o
}

// Policy name.
func (o FirewallSecuritypolicyInternetService6CustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetService6CustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetService6CustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6CustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6CustomGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6CustomGroupArrayOutput) ToFirewallSecuritypolicyInternetService6CustomGroupArrayOutput() FirewallSecuritypolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6CustomGroupArrayOutput) ToFirewallSecuritypolicyInternetService6CustomGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6CustomGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6CustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetService6CustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetService6CustomGroup {
		return vs[0].([]FirewallSecuritypolicyInternetService6CustomGroup)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetService6CustomGroupOutput)
}

type FirewallSecuritypolicyInternetService6Group struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetService6GroupInput is an input type that accepts FirewallSecuritypolicyInternetService6GroupArgs and FirewallSecuritypolicyInternetService6GroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6GroupInput` via:
//
//	FirewallSecuritypolicyInternetService6GroupArgs{...}
type FirewallSecuritypolicyInternetService6GroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6GroupOutput() FirewallSecuritypolicyInternetService6GroupOutput
	ToFirewallSecuritypolicyInternetService6GroupOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6GroupOutput
}

type FirewallSecuritypolicyInternetService6GroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetService6GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6Group)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6GroupArgs) ToFirewallSecuritypolicyInternetService6GroupOutput() FirewallSecuritypolicyInternetService6GroupOutput {
	return i.ToFirewallSecuritypolicyInternetService6GroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6GroupArgs) ToFirewallSecuritypolicyInternetService6GroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6GroupOutput)
}

// FirewallSecuritypolicyInternetService6GroupArrayInput is an input type that accepts FirewallSecuritypolicyInternetService6GroupArray and FirewallSecuritypolicyInternetService6GroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6GroupArrayInput` via:
//
//	FirewallSecuritypolicyInternetService6GroupArray{ FirewallSecuritypolicyInternetService6GroupArgs{...} }
type FirewallSecuritypolicyInternetService6GroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6GroupArrayOutput() FirewallSecuritypolicyInternetService6GroupArrayOutput
	ToFirewallSecuritypolicyInternetService6GroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6GroupArrayOutput
}

type FirewallSecuritypolicyInternetService6GroupArray []FirewallSecuritypolicyInternetService6GroupInput

func (FirewallSecuritypolicyInternetService6GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6Group)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6GroupArray) ToFirewallSecuritypolicyInternetService6GroupArrayOutput() FirewallSecuritypolicyInternetService6GroupArrayOutput {
	return i.ToFirewallSecuritypolicyInternetService6GroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6GroupArray) ToFirewallSecuritypolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6GroupArrayOutput)
}

type FirewallSecuritypolicyInternetService6GroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6Group)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6GroupOutput) ToFirewallSecuritypolicyInternetService6GroupOutput() FirewallSecuritypolicyInternetService6GroupOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6GroupOutput) ToFirewallSecuritypolicyInternetService6GroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6GroupOutput {
	return o
}

// Policy name.
func (o FirewallSecuritypolicyInternetService6GroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetService6Group) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetService6GroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6Group)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6GroupArrayOutput) ToFirewallSecuritypolicyInternetService6GroupArrayOutput() FirewallSecuritypolicyInternetService6GroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6GroupArrayOutput) ToFirewallSecuritypolicyInternetService6GroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6GroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6GroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetService6GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetService6Group {
		return vs[0].([]FirewallSecuritypolicyInternetService6Group)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetService6GroupOutput)
}

type FirewallSecuritypolicyInternetService6Name struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetService6NameInput is an input type that accepts FirewallSecuritypolicyInternetService6NameArgs and FirewallSecuritypolicyInternetService6NameOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6NameInput` via:
//
//	FirewallSecuritypolicyInternetService6NameArgs{...}
type FirewallSecuritypolicyInternetService6NameInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6NameOutput() FirewallSecuritypolicyInternetService6NameOutput
	ToFirewallSecuritypolicyInternetService6NameOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6NameOutput
}

type FirewallSecuritypolicyInternetService6NameArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetService6NameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6Name)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6NameArgs) ToFirewallSecuritypolicyInternetService6NameOutput() FirewallSecuritypolicyInternetService6NameOutput {
	return i.ToFirewallSecuritypolicyInternetService6NameOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6NameArgs) ToFirewallSecuritypolicyInternetService6NameOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6NameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6NameOutput)
}

// FirewallSecuritypolicyInternetService6NameArrayInput is an input type that accepts FirewallSecuritypolicyInternetService6NameArray and FirewallSecuritypolicyInternetService6NameArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6NameArrayInput` via:
//
//	FirewallSecuritypolicyInternetService6NameArray{ FirewallSecuritypolicyInternetService6NameArgs{...} }
type FirewallSecuritypolicyInternetService6NameArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6NameArrayOutput() FirewallSecuritypolicyInternetService6NameArrayOutput
	ToFirewallSecuritypolicyInternetService6NameArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6NameArrayOutput
}

type FirewallSecuritypolicyInternetService6NameArray []FirewallSecuritypolicyInternetService6NameInput

func (FirewallSecuritypolicyInternetService6NameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6Name)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6NameArray) ToFirewallSecuritypolicyInternetService6NameArrayOutput() FirewallSecuritypolicyInternetService6NameArrayOutput {
	return i.ToFirewallSecuritypolicyInternetService6NameArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6NameArray) ToFirewallSecuritypolicyInternetService6NameArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6NameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6NameArrayOutput)
}

type FirewallSecuritypolicyInternetService6NameOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6NameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6Name)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6NameOutput) ToFirewallSecuritypolicyInternetService6NameOutput() FirewallSecuritypolicyInternetService6NameOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6NameOutput) ToFirewallSecuritypolicyInternetService6NameOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6NameOutput {
	return o
}

// Policy name.
func (o FirewallSecuritypolicyInternetService6NameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetService6Name) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetService6NameArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6NameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6Name)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6NameArrayOutput) ToFirewallSecuritypolicyInternetService6NameArrayOutput() FirewallSecuritypolicyInternetService6NameArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6NameArrayOutput) ToFirewallSecuritypolicyInternetService6NameArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6NameArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6NameArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetService6NameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetService6Name {
		return vs[0].([]FirewallSecuritypolicyInternetService6Name)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetService6NameOutput)
}

type FirewallSecuritypolicyInternetService6SrcCustom struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetService6SrcCustomInput is an input type that accepts FirewallSecuritypolicyInternetService6SrcCustomArgs and FirewallSecuritypolicyInternetService6SrcCustomOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6SrcCustomInput` via:
//
//	FirewallSecuritypolicyInternetService6SrcCustomArgs{...}
type FirewallSecuritypolicyInternetService6SrcCustomInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6SrcCustomOutput() FirewallSecuritypolicyInternetService6SrcCustomOutput
	ToFirewallSecuritypolicyInternetService6SrcCustomOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6SrcCustomOutput
}

type FirewallSecuritypolicyInternetService6SrcCustomArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetService6SrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6SrcCustomArgs) ToFirewallSecuritypolicyInternetService6SrcCustomOutput() FirewallSecuritypolicyInternetService6SrcCustomOutput {
	return i.ToFirewallSecuritypolicyInternetService6SrcCustomOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6SrcCustomArgs) ToFirewallSecuritypolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6SrcCustomOutput)
}

// FirewallSecuritypolicyInternetService6SrcCustomArrayInput is an input type that accepts FirewallSecuritypolicyInternetService6SrcCustomArray and FirewallSecuritypolicyInternetService6SrcCustomArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6SrcCustomArrayInput` via:
//
//	FirewallSecuritypolicyInternetService6SrcCustomArray{ FirewallSecuritypolicyInternetService6SrcCustomArgs{...} }
type FirewallSecuritypolicyInternetService6SrcCustomArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6SrcCustomArrayOutput() FirewallSecuritypolicyInternetService6SrcCustomArrayOutput
	ToFirewallSecuritypolicyInternetService6SrcCustomArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6SrcCustomArrayOutput
}

type FirewallSecuritypolicyInternetService6SrcCustomArray []FirewallSecuritypolicyInternetService6SrcCustomInput

func (FirewallSecuritypolicyInternetService6SrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6SrcCustom)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6SrcCustomArray) ToFirewallSecuritypolicyInternetService6SrcCustomArrayOutput() FirewallSecuritypolicyInternetService6SrcCustomArrayOutput {
	return i.ToFirewallSecuritypolicyInternetService6SrcCustomArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6SrcCustomArray) ToFirewallSecuritypolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6SrcCustomArrayOutput)
}

type FirewallSecuritypolicyInternetService6SrcCustomOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6SrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6SrcCustomOutput) ToFirewallSecuritypolicyInternetService6SrcCustomOutput() FirewallSecuritypolicyInternetService6SrcCustomOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcCustomOutput) ToFirewallSecuritypolicyInternetService6SrcCustomOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcCustomOutput {
	return o
}

// Policy name.
func (o FirewallSecuritypolicyInternetService6SrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetService6SrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetService6SrcCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6SrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6SrcCustom)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6SrcCustomArrayOutput) ToFirewallSecuritypolicyInternetService6SrcCustomArrayOutput() FirewallSecuritypolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcCustomArrayOutput) ToFirewallSecuritypolicyInternetService6SrcCustomArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcCustomArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcCustomArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetService6SrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetService6SrcCustom {
		return vs[0].([]FirewallSecuritypolicyInternetService6SrcCustom)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetService6SrcCustomOutput)
}

type FirewallSecuritypolicyInternetService6SrcCustomGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetService6SrcCustomGroupInput is an input type that accepts FirewallSecuritypolicyInternetService6SrcCustomGroupArgs and FirewallSecuritypolicyInternetService6SrcCustomGroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6SrcCustomGroupInput` via:
//
//	FirewallSecuritypolicyInternetService6SrcCustomGroupArgs{...}
type FirewallSecuritypolicyInternetService6SrcCustomGroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6SrcCustomGroupOutput() FirewallSecuritypolicyInternetService6SrcCustomGroupOutput
	ToFirewallSecuritypolicyInternetService6SrcCustomGroupOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6SrcCustomGroupOutput
}

type FirewallSecuritypolicyInternetService6SrcCustomGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetService6SrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6SrcCustomGroupArgs) ToFirewallSecuritypolicyInternetService6SrcCustomGroupOutput() FirewallSecuritypolicyInternetService6SrcCustomGroupOutput {
	return i.ToFirewallSecuritypolicyInternetService6SrcCustomGroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6SrcCustomGroupArgs) ToFirewallSecuritypolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6SrcCustomGroupOutput)
}

// FirewallSecuritypolicyInternetService6SrcCustomGroupArrayInput is an input type that accepts FirewallSecuritypolicyInternetService6SrcCustomGroupArray and FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6SrcCustomGroupArrayInput` via:
//
//	FirewallSecuritypolicyInternetService6SrcCustomGroupArray{ FirewallSecuritypolicyInternetService6SrcCustomGroupArgs{...} }
type FirewallSecuritypolicyInternetService6SrcCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput() FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput
	ToFirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput
}

type FirewallSecuritypolicyInternetService6SrcCustomGroupArray []FirewallSecuritypolicyInternetService6SrcCustomGroupInput

func (FirewallSecuritypolicyInternetService6SrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6SrcCustomGroupArray) ToFirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput() FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput {
	return i.ToFirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6SrcCustomGroupArray) ToFirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput)
}

type FirewallSecuritypolicyInternetService6SrcCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6SrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6SrcCustomGroupOutput) ToFirewallSecuritypolicyInternetService6SrcCustomGroupOutput() FirewallSecuritypolicyInternetService6SrcCustomGroupOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcCustomGroupOutput) ToFirewallSecuritypolicyInternetService6SrcCustomGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcCustomGroupOutput {
	return o
}

// Policy name.
func (o FirewallSecuritypolicyInternetService6SrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetService6SrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6SrcCustomGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput) ToFirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput() FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput) ToFirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetService6SrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetService6SrcCustomGroup {
		return vs[0].([]FirewallSecuritypolicyInternetService6SrcCustomGroup)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetService6SrcCustomGroupOutput)
}

type FirewallSecuritypolicyInternetService6SrcGroup struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetService6SrcGroupInput is an input type that accepts FirewallSecuritypolicyInternetService6SrcGroupArgs and FirewallSecuritypolicyInternetService6SrcGroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6SrcGroupInput` via:
//
//	FirewallSecuritypolicyInternetService6SrcGroupArgs{...}
type FirewallSecuritypolicyInternetService6SrcGroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6SrcGroupOutput() FirewallSecuritypolicyInternetService6SrcGroupOutput
	ToFirewallSecuritypolicyInternetService6SrcGroupOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6SrcGroupOutput
}

type FirewallSecuritypolicyInternetService6SrcGroupArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetService6SrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6SrcGroupArgs) ToFirewallSecuritypolicyInternetService6SrcGroupOutput() FirewallSecuritypolicyInternetService6SrcGroupOutput {
	return i.ToFirewallSecuritypolicyInternetService6SrcGroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6SrcGroupArgs) ToFirewallSecuritypolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6SrcGroupOutput)
}

// FirewallSecuritypolicyInternetService6SrcGroupArrayInput is an input type that accepts FirewallSecuritypolicyInternetService6SrcGroupArray and FirewallSecuritypolicyInternetService6SrcGroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6SrcGroupArrayInput` via:
//
//	FirewallSecuritypolicyInternetService6SrcGroupArray{ FirewallSecuritypolicyInternetService6SrcGroupArgs{...} }
type FirewallSecuritypolicyInternetService6SrcGroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6SrcGroupArrayOutput() FirewallSecuritypolicyInternetService6SrcGroupArrayOutput
	ToFirewallSecuritypolicyInternetService6SrcGroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6SrcGroupArrayOutput
}

type FirewallSecuritypolicyInternetService6SrcGroupArray []FirewallSecuritypolicyInternetService6SrcGroupInput

func (FirewallSecuritypolicyInternetService6SrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6SrcGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6SrcGroupArray) ToFirewallSecuritypolicyInternetService6SrcGroupArrayOutput() FirewallSecuritypolicyInternetService6SrcGroupArrayOutput {
	return i.ToFirewallSecuritypolicyInternetService6SrcGroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6SrcGroupArray) ToFirewallSecuritypolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6SrcGroupArrayOutput)
}

type FirewallSecuritypolicyInternetService6SrcGroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6SrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6SrcGroupOutput) ToFirewallSecuritypolicyInternetService6SrcGroupOutput() FirewallSecuritypolicyInternetService6SrcGroupOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcGroupOutput) ToFirewallSecuritypolicyInternetService6SrcGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcGroupOutput {
	return o
}

// Policy name.
func (o FirewallSecuritypolicyInternetService6SrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetService6SrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetService6SrcGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6SrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6SrcGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6SrcGroupArrayOutput) ToFirewallSecuritypolicyInternetService6SrcGroupArrayOutput() FirewallSecuritypolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcGroupArrayOutput) ToFirewallSecuritypolicyInternetService6SrcGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcGroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetService6SrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetService6SrcGroup {
		return vs[0].([]FirewallSecuritypolicyInternetService6SrcGroup)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetService6SrcGroupOutput)
}

type FirewallSecuritypolicyInternetService6SrcName struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetService6SrcNameInput is an input type that accepts FirewallSecuritypolicyInternetService6SrcNameArgs and FirewallSecuritypolicyInternetService6SrcNameOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6SrcNameInput` via:
//
//	FirewallSecuritypolicyInternetService6SrcNameArgs{...}
type FirewallSecuritypolicyInternetService6SrcNameInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6SrcNameOutput() FirewallSecuritypolicyInternetService6SrcNameOutput
	ToFirewallSecuritypolicyInternetService6SrcNameOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6SrcNameOutput
}

type FirewallSecuritypolicyInternetService6SrcNameArgs struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetService6SrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcName)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6SrcNameArgs) ToFirewallSecuritypolicyInternetService6SrcNameOutput() FirewallSecuritypolicyInternetService6SrcNameOutput {
	return i.ToFirewallSecuritypolicyInternetService6SrcNameOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6SrcNameArgs) ToFirewallSecuritypolicyInternetService6SrcNameOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6SrcNameOutput)
}

// FirewallSecuritypolicyInternetService6SrcNameArrayInput is an input type that accepts FirewallSecuritypolicyInternetService6SrcNameArray and FirewallSecuritypolicyInternetService6SrcNameArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetService6SrcNameArrayInput` via:
//
//	FirewallSecuritypolicyInternetService6SrcNameArray{ FirewallSecuritypolicyInternetService6SrcNameArgs{...} }
type FirewallSecuritypolicyInternetService6SrcNameArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetService6SrcNameArrayOutput() FirewallSecuritypolicyInternetService6SrcNameArrayOutput
	ToFirewallSecuritypolicyInternetService6SrcNameArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetService6SrcNameArrayOutput
}

type FirewallSecuritypolicyInternetService6SrcNameArray []FirewallSecuritypolicyInternetService6SrcNameInput

func (FirewallSecuritypolicyInternetService6SrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6SrcName)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetService6SrcNameArray) ToFirewallSecuritypolicyInternetService6SrcNameArrayOutput() FirewallSecuritypolicyInternetService6SrcNameArrayOutput {
	return i.ToFirewallSecuritypolicyInternetService6SrcNameArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetService6SrcNameArray) ToFirewallSecuritypolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetService6SrcNameArrayOutput)
}

type FirewallSecuritypolicyInternetService6SrcNameOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6SrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcName)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6SrcNameOutput) ToFirewallSecuritypolicyInternetService6SrcNameOutput() FirewallSecuritypolicyInternetService6SrcNameOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcNameOutput) ToFirewallSecuritypolicyInternetService6SrcNameOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcNameOutput {
	return o
}

// Policy name.
func (o FirewallSecuritypolicyInternetService6SrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetService6SrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetService6SrcNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetService6SrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetService6SrcName)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetService6SrcNameArrayOutput) ToFirewallSecuritypolicyInternetService6SrcNameArrayOutput() FirewallSecuritypolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcNameArrayOutput) ToFirewallSecuritypolicyInternetService6SrcNameArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetService6SrcNameArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetService6SrcNameArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetService6SrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetService6SrcName {
		return vs[0].([]FirewallSecuritypolicyInternetService6SrcName)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetService6SrcNameOutput)
}

type FirewallSecuritypolicyInternetServiceCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetServiceCustomInput is an input type that accepts FirewallSecuritypolicyInternetServiceCustomArgs and FirewallSecuritypolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceCustomInput` via:
//
//	FirewallSecuritypolicyInternetServiceCustomArgs{...}
type FirewallSecuritypolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceCustomOutput() FirewallSecuritypolicyInternetServiceCustomOutput
	ToFirewallSecuritypolicyInternetServiceCustomOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceCustomOutput
}

type FirewallSecuritypolicyInternetServiceCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceCustom)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceCustomArgs) ToFirewallSecuritypolicyInternetServiceCustomOutput() FirewallSecuritypolicyInternetServiceCustomOutput {
	return i.ToFirewallSecuritypolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceCustomArgs) ToFirewallSecuritypolicyInternetServiceCustomOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceCustomOutput)
}

// FirewallSecuritypolicyInternetServiceCustomArrayInput is an input type that accepts FirewallSecuritypolicyInternetServiceCustomArray and FirewallSecuritypolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceCustomArrayInput` via:
//
//	FirewallSecuritypolicyInternetServiceCustomArray{ FirewallSecuritypolicyInternetServiceCustomArgs{...} }
type FirewallSecuritypolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceCustomArrayOutput() FirewallSecuritypolicyInternetServiceCustomArrayOutput
	ToFirewallSecuritypolicyInternetServiceCustomArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceCustomArrayOutput
}

type FirewallSecuritypolicyInternetServiceCustomArray []FirewallSecuritypolicyInternetServiceCustomInput

func (FirewallSecuritypolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceCustom)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceCustomArray) ToFirewallSecuritypolicyInternetServiceCustomArrayOutput() FirewallSecuritypolicyInternetServiceCustomArrayOutput {
	return i.ToFirewallSecuritypolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceCustomArray) ToFirewallSecuritypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceCustomArrayOutput)
}

type FirewallSecuritypolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceCustom)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceCustomOutput) ToFirewallSecuritypolicyInternetServiceCustomOutput() FirewallSecuritypolicyInternetServiceCustomOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceCustomOutput) ToFirewallSecuritypolicyInternetServiceCustomOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceCustomOutput {
	return o
}

// Custom Internet Service name.
func (o FirewallSecuritypolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceCustom)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceCustomArrayOutput) ToFirewallSecuritypolicyInternetServiceCustomArrayOutput() FirewallSecuritypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceCustomArrayOutput) ToFirewallSecuritypolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceCustomArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetServiceCustom {
		return vs[0].([]FirewallSecuritypolicyInternetServiceCustom)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetServiceCustomOutput)
}

type FirewallSecuritypolicyInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetServiceCustomGroupInput is an input type that accepts FirewallSecuritypolicyInternetServiceCustomGroupArgs and FirewallSecuritypolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceCustomGroupInput` via:
//
//	FirewallSecuritypolicyInternetServiceCustomGroupArgs{...}
type FirewallSecuritypolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceCustomGroupOutput() FirewallSecuritypolicyInternetServiceCustomGroupOutput
	ToFirewallSecuritypolicyInternetServiceCustomGroupOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceCustomGroupOutput
}

type FirewallSecuritypolicyInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceCustomGroupArgs) ToFirewallSecuritypolicyInternetServiceCustomGroupOutput() FirewallSecuritypolicyInternetServiceCustomGroupOutput {
	return i.ToFirewallSecuritypolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceCustomGroupArgs) ToFirewallSecuritypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceCustomGroupOutput)
}

// FirewallSecuritypolicyInternetServiceCustomGroupArrayInput is an input type that accepts FirewallSecuritypolicyInternetServiceCustomGroupArray and FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceCustomGroupArrayInput` via:
//
//	FirewallSecuritypolicyInternetServiceCustomGroupArray{ FirewallSecuritypolicyInternetServiceCustomGroupArgs{...} }
type FirewallSecuritypolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceCustomGroupArrayOutput() FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput
	ToFirewallSecuritypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput
}

type FirewallSecuritypolicyInternetServiceCustomGroupArray []FirewallSecuritypolicyInternetServiceCustomGroupInput

func (FirewallSecuritypolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceCustomGroupArray) ToFirewallSecuritypolicyInternetServiceCustomGroupArrayOutput() FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput {
	return i.ToFirewallSecuritypolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceCustomGroupArray) ToFirewallSecuritypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput)
}

type FirewallSecuritypolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceCustomGroupOutput) ToFirewallSecuritypolicyInternetServiceCustomGroupOutput() FirewallSecuritypolicyInternetServiceCustomGroupOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceCustomGroupOutput) ToFirewallSecuritypolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o FirewallSecuritypolicyInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput) ToFirewallSecuritypolicyInternetServiceCustomGroupArrayOutput() FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput) ToFirewallSecuritypolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetServiceCustomGroup {
		return vs[0].([]FirewallSecuritypolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetServiceCustomGroupOutput)
}

type FirewallSecuritypolicyInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetServiceGroupInput is an input type that accepts FirewallSecuritypolicyInternetServiceGroupArgs and FirewallSecuritypolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceGroupInput` via:
//
//	FirewallSecuritypolicyInternetServiceGroupArgs{...}
type FirewallSecuritypolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceGroupOutput() FirewallSecuritypolicyInternetServiceGroupOutput
	ToFirewallSecuritypolicyInternetServiceGroupOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceGroupOutput
}

type FirewallSecuritypolicyInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceGroupArgs) ToFirewallSecuritypolicyInternetServiceGroupOutput() FirewallSecuritypolicyInternetServiceGroupOutput {
	return i.ToFirewallSecuritypolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceGroupArgs) ToFirewallSecuritypolicyInternetServiceGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceGroupOutput)
}

// FirewallSecuritypolicyInternetServiceGroupArrayInput is an input type that accepts FirewallSecuritypolicyInternetServiceGroupArray and FirewallSecuritypolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceGroupArrayInput` via:
//
//	FirewallSecuritypolicyInternetServiceGroupArray{ FirewallSecuritypolicyInternetServiceGroupArgs{...} }
type FirewallSecuritypolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceGroupArrayOutput() FirewallSecuritypolicyInternetServiceGroupArrayOutput
	ToFirewallSecuritypolicyInternetServiceGroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceGroupArrayOutput
}

type FirewallSecuritypolicyInternetServiceGroupArray []FirewallSecuritypolicyInternetServiceGroupInput

func (FirewallSecuritypolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceGroupArray) ToFirewallSecuritypolicyInternetServiceGroupArrayOutput() FirewallSecuritypolicyInternetServiceGroupArrayOutput {
	return i.ToFirewallSecuritypolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceGroupArray) ToFirewallSecuritypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceGroupArrayOutput)
}

type FirewallSecuritypolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceGroupOutput) ToFirewallSecuritypolicyInternetServiceGroupOutput() FirewallSecuritypolicyInternetServiceGroupOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceGroupOutput) ToFirewallSecuritypolicyInternetServiceGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o FirewallSecuritypolicyInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceGroupArrayOutput) ToFirewallSecuritypolicyInternetServiceGroupArrayOutput() FirewallSecuritypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceGroupArrayOutput) ToFirewallSecuritypolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetServiceGroup {
		return vs[0].([]FirewallSecuritypolicyInternetServiceGroup)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetServiceGroupOutput)
}

type FirewallSecuritypolicyInternetServiceId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// FirewallSecuritypolicyInternetServiceIdInput is an input type that accepts FirewallSecuritypolicyInternetServiceIdArgs and FirewallSecuritypolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceIdInput` via:
//
//	FirewallSecuritypolicyInternetServiceIdArgs{...}
type FirewallSecuritypolicyInternetServiceIdInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceIdOutput() FirewallSecuritypolicyInternetServiceIdOutput
	ToFirewallSecuritypolicyInternetServiceIdOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceIdOutput
}

type FirewallSecuritypolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallSecuritypolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceId)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceIdArgs) ToFirewallSecuritypolicyInternetServiceIdOutput() FirewallSecuritypolicyInternetServiceIdOutput {
	return i.ToFirewallSecuritypolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceIdArgs) ToFirewallSecuritypolicyInternetServiceIdOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceIdOutput)
}

// FirewallSecuritypolicyInternetServiceIdArrayInput is an input type that accepts FirewallSecuritypolicyInternetServiceIdArray and FirewallSecuritypolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceIdArrayInput` via:
//
//	FirewallSecuritypolicyInternetServiceIdArray{ FirewallSecuritypolicyInternetServiceIdArgs{...} }
type FirewallSecuritypolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceIdArrayOutput() FirewallSecuritypolicyInternetServiceIdArrayOutput
	ToFirewallSecuritypolicyInternetServiceIdArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceIdArrayOutput
}

type FirewallSecuritypolicyInternetServiceIdArray []FirewallSecuritypolicyInternetServiceIdInput

func (FirewallSecuritypolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceId)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceIdArray) ToFirewallSecuritypolicyInternetServiceIdArrayOutput() FirewallSecuritypolicyInternetServiceIdArrayOutput {
	return i.ToFirewallSecuritypolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceIdArray) ToFirewallSecuritypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceIdArrayOutput)
}

type FirewallSecuritypolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceId)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceIdOutput) ToFirewallSecuritypolicyInternetServiceIdOutput() FirewallSecuritypolicyInternetServiceIdOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceIdOutput) ToFirewallSecuritypolicyInternetServiceIdOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o FirewallSecuritypolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallSecuritypolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceId)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceIdArrayOutput) ToFirewallSecuritypolicyInternetServiceIdArrayOutput() FirewallSecuritypolicyInternetServiceIdArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceIdArrayOutput) ToFirewallSecuritypolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceIdArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetServiceId {
		return vs[0].([]FirewallSecuritypolicyInternetServiceId)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetServiceIdOutput)
}

type FirewallSecuritypolicyInternetServiceName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetServiceNameInput is an input type that accepts FirewallSecuritypolicyInternetServiceNameArgs and FirewallSecuritypolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceNameInput` via:
//
//	FirewallSecuritypolicyInternetServiceNameArgs{...}
type FirewallSecuritypolicyInternetServiceNameInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceNameOutput() FirewallSecuritypolicyInternetServiceNameOutput
	ToFirewallSecuritypolicyInternetServiceNameOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceNameOutput
}

type FirewallSecuritypolicyInternetServiceNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceName)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceNameArgs) ToFirewallSecuritypolicyInternetServiceNameOutput() FirewallSecuritypolicyInternetServiceNameOutput {
	return i.ToFirewallSecuritypolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceNameArgs) ToFirewallSecuritypolicyInternetServiceNameOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceNameOutput)
}

// FirewallSecuritypolicyInternetServiceNameArrayInput is an input type that accepts FirewallSecuritypolicyInternetServiceNameArray and FirewallSecuritypolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceNameArrayInput` via:
//
//	FirewallSecuritypolicyInternetServiceNameArray{ FirewallSecuritypolicyInternetServiceNameArgs{...} }
type FirewallSecuritypolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceNameArrayOutput() FirewallSecuritypolicyInternetServiceNameArrayOutput
	ToFirewallSecuritypolicyInternetServiceNameArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceNameArrayOutput
}

type FirewallSecuritypolicyInternetServiceNameArray []FirewallSecuritypolicyInternetServiceNameInput

func (FirewallSecuritypolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceName)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceNameArray) ToFirewallSecuritypolicyInternetServiceNameArrayOutput() FirewallSecuritypolicyInternetServiceNameArrayOutput {
	return i.ToFirewallSecuritypolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceNameArray) ToFirewallSecuritypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceNameArrayOutput)
}

type FirewallSecuritypolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceName)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceNameOutput) ToFirewallSecuritypolicyInternetServiceNameOutput() FirewallSecuritypolicyInternetServiceNameOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceNameOutput) ToFirewallSecuritypolicyInternetServiceNameOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceNameOutput {
	return o
}

// Internet Service name.
func (o FirewallSecuritypolicyInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceName)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceNameArrayOutput) ToFirewallSecuritypolicyInternetServiceNameArrayOutput() FirewallSecuritypolicyInternetServiceNameArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceNameArrayOutput) ToFirewallSecuritypolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceNameArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetServiceName {
		return vs[0].([]FirewallSecuritypolicyInternetServiceName)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetServiceNameOutput)
}

type FirewallSecuritypolicyInternetServiceSrcCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetServiceSrcCustomInput is an input type that accepts FirewallSecuritypolicyInternetServiceSrcCustomArgs and FirewallSecuritypolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceSrcCustomInput` via:
//
//	FirewallSecuritypolicyInternetServiceSrcCustomArgs{...}
type FirewallSecuritypolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceSrcCustomOutput() FirewallSecuritypolicyInternetServiceSrcCustomOutput
	ToFirewallSecuritypolicyInternetServiceSrcCustomOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceSrcCustomOutput
}

type FirewallSecuritypolicyInternetServiceSrcCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceSrcCustomArgs) ToFirewallSecuritypolicyInternetServiceSrcCustomOutput() FirewallSecuritypolicyInternetServiceSrcCustomOutput {
	return i.ToFirewallSecuritypolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceSrcCustomArgs) ToFirewallSecuritypolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceSrcCustomOutput)
}

// FirewallSecuritypolicyInternetServiceSrcCustomArrayInput is an input type that accepts FirewallSecuritypolicyInternetServiceSrcCustomArray and FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceSrcCustomArrayInput` via:
//
//	FirewallSecuritypolicyInternetServiceSrcCustomArray{ FirewallSecuritypolicyInternetServiceSrcCustomArgs{...} }
type FirewallSecuritypolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceSrcCustomArrayOutput() FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput
	ToFirewallSecuritypolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput
}

type FirewallSecuritypolicyInternetServiceSrcCustomArray []FirewallSecuritypolicyInternetServiceSrcCustomInput

func (FirewallSecuritypolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceSrcCustomArray) ToFirewallSecuritypolicyInternetServiceSrcCustomArrayOutput() FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput {
	return i.ToFirewallSecuritypolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceSrcCustomArray) ToFirewallSecuritypolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput)
}

type FirewallSecuritypolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceSrcCustomOutput) ToFirewallSecuritypolicyInternetServiceSrcCustomOutput() FirewallSecuritypolicyInternetServiceSrcCustomOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcCustomOutput) ToFirewallSecuritypolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcCustomOutput {
	return o
}

// Custom Internet Service name.
func (o FirewallSecuritypolicyInternetServiceSrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetServiceSrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput) ToFirewallSecuritypolicyInternetServiceSrcCustomArrayOutput() FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput) ToFirewallSecuritypolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetServiceSrcCustom {
		return vs[0].([]FirewallSecuritypolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetServiceSrcCustomOutput)
}

type FirewallSecuritypolicyInternetServiceSrcCustomGroup struct {
	// Custom Internet Service6 group name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetServiceSrcCustomGroupInput is an input type that accepts FirewallSecuritypolicyInternetServiceSrcCustomGroupArgs and FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceSrcCustomGroupInput` via:
//
//	FirewallSecuritypolicyInternetServiceSrcCustomGroupArgs{...}
type FirewallSecuritypolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceSrcCustomGroupOutput() FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput
	ToFirewallSecuritypolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput
}

type FirewallSecuritypolicyInternetServiceSrcCustomGroupArgs struct {
	// Custom Internet Service6 group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceSrcCustomGroupArgs) ToFirewallSecuritypolicyInternetServiceSrcCustomGroupOutput() FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput {
	return i.ToFirewallSecuritypolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceSrcCustomGroupArgs) ToFirewallSecuritypolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput)
}

// FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts FirewallSecuritypolicyInternetServiceSrcCustomGroupArray and FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	FirewallSecuritypolicyInternetServiceSrcCustomGroupArray{ FirewallSecuritypolicyInternetServiceSrcCustomGroupArgs{...} }
type FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput() FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput
	ToFirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput
}

type FirewallSecuritypolicyInternetServiceSrcCustomGroupArray []FirewallSecuritypolicyInternetServiceSrcCustomGroupInput

func (FirewallSecuritypolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceSrcCustomGroupArray) ToFirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput() FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToFirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceSrcCustomGroupArray) ToFirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput)
}

type FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput) ToFirewallSecuritypolicyInternetServiceSrcCustomGroupOutput() FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput) ToFirewallSecuritypolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Custom Internet Service6 group name.
func (o FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetServiceSrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput) ToFirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput() FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput) ToFirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetServiceSrcCustomGroup {
		return vs[0].([]FirewallSecuritypolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput)
}

type FirewallSecuritypolicyInternetServiceSrcGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetServiceSrcGroupInput is an input type that accepts FirewallSecuritypolicyInternetServiceSrcGroupArgs and FirewallSecuritypolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceSrcGroupInput` via:
//
//	FirewallSecuritypolicyInternetServiceSrcGroupArgs{...}
type FirewallSecuritypolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceSrcGroupOutput() FirewallSecuritypolicyInternetServiceSrcGroupOutput
	ToFirewallSecuritypolicyInternetServiceSrcGroupOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceSrcGroupOutput
}

type FirewallSecuritypolicyInternetServiceSrcGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceSrcGroupArgs) ToFirewallSecuritypolicyInternetServiceSrcGroupOutput() FirewallSecuritypolicyInternetServiceSrcGroupOutput {
	return i.ToFirewallSecuritypolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceSrcGroupArgs) ToFirewallSecuritypolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceSrcGroupOutput)
}

// FirewallSecuritypolicyInternetServiceSrcGroupArrayInput is an input type that accepts FirewallSecuritypolicyInternetServiceSrcGroupArray and FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceSrcGroupArrayInput` via:
//
//	FirewallSecuritypolicyInternetServiceSrcGroupArray{ FirewallSecuritypolicyInternetServiceSrcGroupArgs{...} }
type FirewallSecuritypolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceSrcGroupArrayOutput() FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput
	ToFirewallSecuritypolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput
}

type FirewallSecuritypolicyInternetServiceSrcGroupArray []FirewallSecuritypolicyInternetServiceSrcGroupInput

func (FirewallSecuritypolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceSrcGroupArray) ToFirewallSecuritypolicyInternetServiceSrcGroupArrayOutput() FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput {
	return i.ToFirewallSecuritypolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceSrcGroupArray) ToFirewallSecuritypolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput)
}

type FirewallSecuritypolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceSrcGroupOutput) ToFirewallSecuritypolicyInternetServiceSrcGroupOutput() FirewallSecuritypolicyInternetServiceSrcGroupOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcGroupOutput) ToFirewallSecuritypolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcGroupOutput {
	return o
}

// Internet Service group name.
func (o FirewallSecuritypolicyInternetServiceSrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetServiceSrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput) ToFirewallSecuritypolicyInternetServiceSrcGroupArrayOutput() FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput) ToFirewallSecuritypolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetServiceSrcGroup {
		return vs[0].([]FirewallSecuritypolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetServiceSrcGroupOutput)
}

type FirewallSecuritypolicyInternetServiceSrcId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// FirewallSecuritypolicyInternetServiceSrcIdInput is an input type that accepts FirewallSecuritypolicyInternetServiceSrcIdArgs and FirewallSecuritypolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceSrcIdInput` via:
//
//	FirewallSecuritypolicyInternetServiceSrcIdArgs{...}
type FirewallSecuritypolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceSrcIdOutput() FirewallSecuritypolicyInternetServiceSrcIdOutput
	ToFirewallSecuritypolicyInternetServiceSrcIdOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceSrcIdOutput
}

type FirewallSecuritypolicyInternetServiceSrcIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallSecuritypolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcId)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceSrcIdArgs) ToFirewallSecuritypolicyInternetServiceSrcIdOutput() FirewallSecuritypolicyInternetServiceSrcIdOutput {
	return i.ToFirewallSecuritypolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceSrcIdArgs) ToFirewallSecuritypolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceSrcIdOutput)
}

// FirewallSecuritypolicyInternetServiceSrcIdArrayInput is an input type that accepts FirewallSecuritypolicyInternetServiceSrcIdArray and FirewallSecuritypolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceSrcIdArrayInput` via:
//
//	FirewallSecuritypolicyInternetServiceSrcIdArray{ FirewallSecuritypolicyInternetServiceSrcIdArgs{...} }
type FirewallSecuritypolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceSrcIdArrayOutput() FirewallSecuritypolicyInternetServiceSrcIdArrayOutput
	ToFirewallSecuritypolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceSrcIdArrayOutput
}

type FirewallSecuritypolicyInternetServiceSrcIdArray []FirewallSecuritypolicyInternetServiceSrcIdInput

func (FirewallSecuritypolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceSrcId)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceSrcIdArray) ToFirewallSecuritypolicyInternetServiceSrcIdArrayOutput() FirewallSecuritypolicyInternetServiceSrcIdArrayOutput {
	return i.ToFirewallSecuritypolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceSrcIdArray) ToFirewallSecuritypolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceSrcIdArrayOutput)
}

type FirewallSecuritypolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcId)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceSrcIdOutput) ToFirewallSecuritypolicyInternetServiceSrcIdOutput() FirewallSecuritypolicyInternetServiceSrcIdOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcIdOutput) ToFirewallSecuritypolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcIdOutput {
	return o
}

// Internet Service ID.
func (o FirewallSecuritypolicyInternetServiceSrcIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetServiceSrcId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallSecuritypolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceSrcId)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceSrcIdArrayOutput) ToFirewallSecuritypolicyInternetServiceSrcIdArrayOutput() FirewallSecuritypolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcIdArrayOutput) ToFirewallSecuritypolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetServiceSrcId {
		return vs[0].([]FirewallSecuritypolicyInternetServiceSrcId)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetServiceSrcIdOutput)
}

type FirewallSecuritypolicyInternetServiceSrcName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyInternetServiceSrcNameInput is an input type that accepts FirewallSecuritypolicyInternetServiceSrcNameArgs and FirewallSecuritypolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceSrcNameInput` via:
//
//	FirewallSecuritypolicyInternetServiceSrcNameArgs{...}
type FirewallSecuritypolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceSrcNameOutput() FirewallSecuritypolicyInternetServiceSrcNameOutput
	ToFirewallSecuritypolicyInternetServiceSrcNameOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceSrcNameOutput
}

type FirewallSecuritypolicyInternetServiceSrcNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcName)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceSrcNameArgs) ToFirewallSecuritypolicyInternetServiceSrcNameOutput() FirewallSecuritypolicyInternetServiceSrcNameOutput {
	return i.ToFirewallSecuritypolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceSrcNameArgs) ToFirewallSecuritypolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceSrcNameOutput)
}

// FirewallSecuritypolicyInternetServiceSrcNameArrayInput is an input type that accepts FirewallSecuritypolicyInternetServiceSrcNameArray and FirewallSecuritypolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyInternetServiceSrcNameArrayInput` via:
//
//	FirewallSecuritypolicyInternetServiceSrcNameArray{ FirewallSecuritypolicyInternetServiceSrcNameArgs{...} }
type FirewallSecuritypolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyInternetServiceSrcNameArrayOutput() FirewallSecuritypolicyInternetServiceSrcNameArrayOutput
	ToFirewallSecuritypolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) FirewallSecuritypolicyInternetServiceSrcNameArrayOutput
}

type FirewallSecuritypolicyInternetServiceSrcNameArray []FirewallSecuritypolicyInternetServiceSrcNameInput

func (FirewallSecuritypolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceSrcName)(nil)).Elem()
}

func (i FirewallSecuritypolicyInternetServiceSrcNameArray) ToFirewallSecuritypolicyInternetServiceSrcNameArrayOutput() FirewallSecuritypolicyInternetServiceSrcNameArrayOutput {
	return i.ToFirewallSecuritypolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyInternetServiceSrcNameArray) ToFirewallSecuritypolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyInternetServiceSrcNameArrayOutput)
}

type FirewallSecuritypolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcName)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceSrcNameOutput) ToFirewallSecuritypolicyInternetServiceSrcNameOutput() FirewallSecuritypolicyInternetServiceSrcNameOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcNameOutput) ToFirewallSecuritypolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcNameOutput {
	return o
}

// Internet Service name.
func (o FirewallSecuritypolicyInternetServiceSrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyInternetServiceSrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyInternetServiceSrcName)(nil)).Elem()
}

func (o FirewallSecuritypolicyInternetServiceSrcNameArrayOutput) ToFirewallSecuritypolicyInternetServiceSrcNameArrayOutput() FirewallSecuritypolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcNameArrayOutput) ToFirewallSecuritypolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o FirewallSecuritypolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyInternetServiceSrcName {
		return vs[0].([]FirewallSecuritypolicyInternetServiceSrcName)[vs[1].(int)]
	}).(FirewallSecuritypolicyInternetServiceSrcNameOutput)
}

type FirewallSecuritypolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyServiceInput is an input type that accepts FirewallSecuritypolicyServiceArgs and FirewallSecuritypolicyServiceOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyServiceInput` via:
//
//	FirewallSecuritypolicyServiceArgs{...}
type FirewallSecuritypolicyServiceInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyServiceOutput() FirewallSecuritypolicyServiceOutput
	ToFirewallSecuritypolicyServiceOutputWithContext(context.Context) FirewallSecuritypolicyServiceOutput
}

type FirewallSecuritypolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyService)(nil)).Elem()
}

func (i FirewallSecuritypolicyServiceArgs) ToFirewallSecuritypolicyServiceOutput() FirewallSecuritypolicyServiceOutput {
	return i.ToFirewallSecuritypolicyServiceOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyServiceArgs) ToFirewallSecuritypolicyServiceOutputWithContext(ctx context.Context) FirewallSecuritypolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyServiceOutput)
}

// FirewallSecuritypolicyServiceArrayInput is an input type that accepts FirewallSecuritypolicyServiceArray and FirewallSecuritypolicyServiceArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyServiceArrayInput` via:
//
//	FirewallSecuritypolicyServiceArray{ FirewallSecuritypolicyServiceArgs{...} }
type FirewallSecuritypolicyServiceArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyServiceArrayOutput() FirewallSecuritypolicyServiceArrayOutput
	ToFirewallSecuritypolicyServiceArrayOutputWithContext(context.Context) FirewallSecuritypolicyServiceArrayOutput
}

type FirewallSecuritypolicyServiceArray []FirewallSecuritypolicyServiceInput

func (FirewallSecuritypolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyService)(nil)).Elem()
}

func (i FirewallSecuritypolicyServiceArray) ToFirewallSecuritypolicyServiceArrayOutput() FirewallSecuritypolicyServiceArrayOutput {
	return i.ToFirewallSecuritypolicyServiceArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyServiceArray) ToFirewallSecuritypolicyServiceArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyServiceArrayOutput)
}

type FirewallSecuritypolicyServiceOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyService)(nil)).Elem()
}

func (o FirewallSecuritypolicyServiceOutput) ToFirewallSecuritypolicyServiceOutput() FirewallSecuritypolicyServiceOutput {
	return o
}

func (o FirewallSecuritypolicyServiceOutput) ToFirewallSecuritypolicyServiceOutputWithContext(ctx context.Context) FirewallSecuritypolicyServiceOutput {
	return o
}

// Service name.
func (o FirewallSecuritypolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyService)(nil)).Elem()
}

func (o FirewallSecuritypolicyServiceArrayOutput) ToFirewallSecuritypolicyServiceArrayOutput() FirewallSecuritypolicyServiceArrayOutput {
	return o
}

func (o FirewallSecuritypolicyServiceArrayOutput) ToFirewallSecuritypolicyServiceArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyServiceArrayOutput {
	return o
}

func (o FirewallSecuritypolicyServiceArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyService {
		return vs[0].([]FirewallSecuritypolicyService)[vs[1].(int)]
	}).(FirewallSecuritypolicyServiceOutput)
}

type FirewallSecuritypolicySrcaddr4 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicySrcaddr4Input is an input type that accepts FirewallSecuritypolicySrcaddr4Args and FirewallSecuritypolicySrcaddr4Output values.
// You can construct a concrete instance of `FirewallSecuritypolicySrcaddr4Input` via:
//
//	FirewallSecuritypolicySrcaddr4Args{...}
type FirewallSecuritypolicySrcaddr4Input interface {
	pulumi.Input

	ToFirewallSecuritypolicySrcaddr4Output() FirewallSecuritypolicySrcaddr4Output
	ToFirewallSecuritypolicySrcaddr4OutputWithContext(context.Context) FirewallSecuritypolicySrcaddr4Output
}

type FirewallSecuritypolicySrcaddr4Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicySrcaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicySrcaddr4)(nil)).Elem()
}

func (i FirewallSecuritypolicySrcaddr4Args) ToFirewallSecuritypolicySrcaddr4Output() FirewallSecuritypolicySrcaddr4Output {
	return i.ToFirewallSecuritypolicySrcaddr4OutputWithContext(context.Background())
}

func (i FirewallSecuritypolicySrcaddr4Args) ToFirewallSecuritypolicySrcaddr4OutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicySrcaddr4Output)
}

// FirewallSecuritypolicySrcaddr4ArrayInput is an input type that accepts FirewallSecuritypolicySrcaddr4Array and FirewallSecuritypolicySrcaddr4ArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicySrcaddr4ArrayInput` via:
//
//	FirewallSecuritypolicySrcaddr4Array{ FirewallSecuritypolicySrcaddr4Args{...} }
type FirewallSecuritypolicySrcaddr4ArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicySrcaddr4ArrayOutput() FirewallSecuritypolicySrcaddr4ArrayOutput
	ToFirewallSecuritypolicySrcaddr4ArrayOutputWithContext(context.Context) FirewallSecuritypolicySrcaddr4ArrayOutput
}

type FirewallSecuritypolicySrcaddr4Array []FirewallSecuritypolicySrcaddr4Input

func (FirewallSecuritypolicySrcaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicySrcaddr4)(nil)).Elem()
}

func (i FirewallSecuritypolicySrcaddr4Array) ToFirewallSecuritypolicySrcaddr4ArrayOutput() FirewallSecuritypolicySrcaddr4ArrayOutput {
	return i.ToFirewallSecuritypolicySrcaddr4ArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicySrcaddr4Array) ToFirewallSecuritypolicySrcaddr4ArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicySrcaddr4ArrayOutput)
}

type FirewallSecuritypolicySrcaddr4Output struct{ *pulumi.OutputState }

func (FirewallSecuritypolicySrcaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicySrcaddr4)(nil)).Elem()
}

func (o FirewallSecuritypolicySrcaddr4Output) ToFirewallSecuritypolicySrcaddr4Output() FirewallSecuritypolicySrcaddr4Output {
	return o
}

func (o FirewallSecuritypolicySrcaddr4Output) ToFirewallSecuritypolicySrcaddr4OutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddr4Output {
	return o
}

// Policy name.
func (o FirewallSecuritypolicySrcaddr4Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicySrcaddr4) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicySrcaddr4ArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicySrcaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicySrcaddr4)(nil)).Elem()
}

func (o FirewallSecuritypolicySrcaddr4ArrayOutput) ToFirewallSecuritypolicySrcaddr4ArrayOutput() FirewallSecuritypolicySrcaddr4ArrayOutput {
	return o
}

func (o FirewallSecuritypolicySrcaddr4ArrayOutput) ToFirewallSecuritypolicySrcaddr4ArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddr4ArrayOutput {
	return o
}

func (o FirewallSecuritypolicySrcaddr4ArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicySrcaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicySrcaddr4 {
		return vs[0].([]FirewallSecuritypolicySrcaddr4)[vs[1].(int)]
	}).(FirewallSecuritypolicySrcaddr4Output)
}

type FirewallSecuritypolicySrcaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicySrcaddr6Input is an input type that accepts FirewallSecuritypolicySrcaddr6Args and FirewallSecuritypolicySrcaddr6Output values.
// You can construct a concrete instance of `FirewallSecuritypolicySrcaddr6Input` via:
//
//	FirewallSecuritypolicySrcaddr6Args{...}
type FirewallSecuritypolicySrcaddr6Input interface {
	pulumi.Input

	ToFirewallSecuritypolicySrcaddr6Output() FirewallSecuritypolicySrcaddr6Output
	ToFirewallSecuritypolicySrcaddr6OutputWithContext(context.Context) FirewallSecuritypolicySrcaddr6Output
}

type FirewallSecuritypolicySrcaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicySrcaddr6)(nil)).Elem()
}

func (i FirewallSecuritypolicySrcaddr6Args) ToFirewallSecuritypolicySrcaddr6Output() FirewallSecuritypolicySrcaddr6Output {
	return i.ToFirewallSecuritypolicySrcaddr6OutputWithContext(context.Background())
}

func (i FirewallSecuritypolicySrcaddr6Args) ToFirewallSecuritypolicySrcaddr6OutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicySrcaddr6Output)
}

// FirewallSecuritypolicySrcaddr6ArrayInput is an input type that accepts FirewallSecuritypolicySrcaddr6Array and FirewallSecuritypolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicySrcaddr6ArrayInput` via:
//
//	FirewallSecuritypolicySrcaddr6Array{ FirewallSecuritypolicySrcaddr6Args{...} }
type FirewallSecuritypolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicySrcaddr6ArrayOutput() FirewallSecuritypolicySrcaddr6ArrayOutput
	ToFirewallSecuritypolicySrcaddr6ArrayOutputWithContext(context.Context) FirewallSecuritypolicySrcaddr6ArrayOutput
}

type FirewallSecuritypolicySrcaddr6Array []FirewallSecuritypolicySrcaddr6Input

func (FirewallSecuritypolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicySrcaddr6)(nil)).Elem()
}

func (i FirewallSecuritypolicySrcaddr6Array) ToFirewallSecuritypolicySrcaddr6ArrayOutput() FirewallSecuritypolicySrcaddr6ArrayOutput {
	return i.ToFirewallSecuritypolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicySrcaddr6Array) ToFirewallSecuritypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicySrcaddr6ArrayOutput)
}

type FirewallSecuritypolicySrcaddr6Output struct{ *pulumi.OutputState }

func (FirewallSecuritypolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicySrcaddr6)(nil)).Elem()
}

func (o FirewallSecuritypolicySrcaddr6Output) ToFirewallSecuritypolicySrcaddr6Output() FirewallSecuritypolicySrcaddr6Output {
	return o
}

func (o FirewallSecuritypolicySrcaddr6Output) ToFirewallSecuritypolicySrcaddr6OutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddr6Output {
	return o
}

// Policy name.
func (o FirewallSecuritypolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicySrcaddr6)(nil)).Elem()
}

func (o FirewallSecuritypolicySrcaddr6ArrayOutput) ToFirewallSecuritypolicySrcaddr6ArrayOutput() FirewallSecuritypolicySrcaddr6ArrayOutput {
	return o
}

func (o FirewallSecuritypolicySrcaddr6ArrayOutput) ToFirewallSecuritypolicySrcaddr6ArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddr6ArrayOutput {
	return o
}

func (o FirewallSecuritypolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicySrcaddr6 {
		return vs[0].([]FirewallSecuritypolicySrcaddr6)[vs[1].(int)]
	}).(FirewallSecuritypolicySrcaddr6Output)
}

type FirewallSecuritypolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicySrcaddrInput is an input type that accepts FirewallSecuritypolicySrcaddrArgs and FirewallSecuritypolicySrcaddrOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicySrcaddrInput` via:
//
//	FirewallSecuritypolicySrcaddrArgs{...}
type FirewallSecuritypolicySrcaddrInput interface {
	pulumi.Input

	ToFirewallSecuritypolicySrcaddrOutput() FirewallSecuritypolicySrcaddrOutput
	ToFirewallSecuritypolicySrcaddrOutputWithContext(context.Context) FirewallSecuritypolicySrcaddrOutput
}

type FirewallSecuritypolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicySrcaddr)(nil)).Elem()
}

func (i FirewallSecuritypolicySrcaddrArgs) ToFirewallSecuritypolicySrcaddrOutput() FirewallSecuritypolicySrcaddrOutput {
	return i.ToFirewallSecuritypolicySrcaddrOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicySrcaddrArgs) ToFirewallSecuritypolicySrcaddrOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicySrcaddrOutput)
}

// FirewallSecuritypolicySrcaddrArrayInput is an input type that accepts FirewallSecuritypolicySrcaddrArray and FirewallSecuritypolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicySrcaddrArrayInput` via:
//
//	FirewallSecuritypolicySrcaddrArray{ FirewallSecuritypolicySrcaddrArgs{...} }
type FirewallSecuritypolicySrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicySrcaddrArrayOutput() FirewallSecuritypolicySrcaddrArrayOutput
	ToFirewallSecuritypolicySrcaddrArrayOutputWithContext(context.Context) FirewallSecuritypolicySrcaddrArrayOutput
}

type FirewallSecuritypolicySrcaddrArray []FirewallSecuritypolicySrcaddrInput

func (FirewallSecuritypolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicySrcaddr)(nil)).Elem()
}

func (i FirewallSecuritypolicySrcaddrArray) ToFirewallSecuritypolicySrcaddrArrayOutput() FirewallSecuritypolicySrcaddrArrayOutput {
	return i.ToFirewallSecuritypolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicySrcaddrArray) ToFirewallSecuritypolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicySrcaddrArrayOutput)
}

type FirewallSecuritypolicySrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicySrcaddr)(nil)).Elem()
}

func (o FirewallSecuritypolicySrcaddrOutput) ToFirewallSecuritypolicySrcaddrOutput() FirewallSecuritypolicySrcaddrOutput {
	return o
}

func (o FirewallSecuritypolicySrcaddrOutput) ToFirewallSecuritypolicySrcaddrOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddrOutput {
	return o
}

// Address name.
func (o FirewallSecuritypolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicySrcaddr)(nil)).Elem()
}

func (o FirewallSecuritypolicySrcaddrArrayOutput) ToFirewallSecuritypolicySrcaddrArrayOutput() FirewallSecuritypolicySrcaddrArrayOutput {
	return o
}

func (o FirewallSecuritypolicySrcaddrArrayOutput) ToFirewallSecuritypolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcaddrArrayOutput {
	return o
}

func (o FirewallSecuritypolicySrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicySrcaddr {
		return vs[0].([]FirewallSecuritypolicySrcaddr)[vs[1].(int)]
	}).(FirewallSecuritypolicySrcaddrOutput)
}

type FirewallSecuritypolicySrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicySrcintfInput is an input type that accepts FirewallSecuritypolicySrcintfArgs and FirewallSecuritypolicySrcintfOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicySrcintfInput` via:
//
//	FirewallSecuritypolicySrcintfArgs{...}
type FirewallSecuritypolicySrcintfInput interface {
	pulumi.Input

	ToFirewallSecuritypolicySrcintfOutput() FirewallSecuritypolicySrcintfOutput
	ToFirewallSecuritypolicySrcintfOutputWithContext(context.Context) FirewallSecuritypolicySrcintfOutput
}

type FirewallSecuritypolicySrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicySrcintf)(nil)).Elem()
}

func (i FirewallSecuritypolicySrcintfArgs) ToFirewallSecuritypolicySrcintfOutput() FirewallSecuritypolicySrcintfOutput {
	return i.ToFirewallSecuritypolicySrcintfOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicySrcintfArgs) ToFirewallSecuritypolicySrcintfOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicySrcintfOutput)
}

// FirewallSecuritypolicySrcintfArrayInput is an input type that accepts FirewallSecuritypolicySrcintfArray and FirewallSecuritypolicySrcintfArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicySrcintfArrayInput` via:
//
//	FirewallSecuritypolicySrcintfArray{ FirewallSecuritypolicySrcintfArgs{...} }
type FirewallSecuritypolicySrcintfArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicySrcintfArrayOutput() FirewallSecuritypolicySrcintfArrayOutput
	ToFirewallSecuritypolicySrcintfArrayOutputWithContext(context.Context) FirewallSecuritypolicySrcintfArrayOutput
}

type FirewallSecuritypolicySrcintfArray []FirewallSecuritypolicySrcintfInput

func (FirewallSecuritypolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicySrcintf)(nil)).Elem()
}

func (i FirewallSecuritypolicySrcintfArray) ToFirewallSecuritypolicySrcintfArrayOutput() FirewallSecuritypolicySrcintfArrayOutput {
	return i.ToFirewallSecuritypolicySrcintfArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicySrcintfArray) ToFirewallSecuritypolicySrcintfArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicySrcintfArrayOutput)
}

type FirewallSecuritypolicySrcintfOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicySrcintf)(nil)).Elem()
}

func (o FirewallSecuritypolicySrcintfOutput) ToFirewallSecuritypolicySrcintfOutput() FirewallSecuritypolicySrcintfOutput {
	return o
}

func (o FirewallSecuritypolicySrcintfOutput) ToFirewallSecuritypolicySrcintfOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcintfOutput {
	return o
}

// Interface name.
func (o FirewallSecuritypolicySrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicySrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicySrcintf)(nil)).Elem()
}

func (o FirewallSecuritypolicySrcintfArrayOutput) ToFirewallSecuritypolicySrcintfArrayOutput() FirewallSecuritypolicySrcintfArrayOutput {
	return o
}

func (o FirewallSecuritypolicySrcintfArrayOutput) ToFirewallSecuritypolicySrcintfArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicySrcintfArrayOutput {
	return o
}

func (o FirewallSecuritypolicySrcintfArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicySrcintf {
		return vs[0].([]FirewallSecuritypolicySrcintf)[vs[1].(int)]
	}).(FirewallSecuritypolicySrcintfOutput)
}

type FirewallSecuritypolicyUrlCategory struct {
	// URL category ID.
	Id *int `pulumi:"id"`
}

// FirewallSecuritypolicyUrlCategoryInput is an input type that accepts FirewallSecuritypolicyUrlCategoryArgs and FirewallSecuritypolicyUrlCategoryOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyUrlCategoryInput` via:
//
//	FirewallSecuritypolicyUrlCategoryArgs{...}
type FirewallSecuritypolicyUrlCategoryInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyUrlCategoryOutput() FirewallSecuritypolicyUrlCategoryOutput
	ToFirewallSecuritypolicyUrlCategoryOutputWithContext(context.Context) FirewallSecuritypolicyUrlCategoryOutput
}

type FirewallSecuritypolicyUrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallSecuritypolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyUrlCategory)(nil)).Elem()
}

func (i FirewallSecuritypolicyUrlCategoryArgs) ToFirewallSecuritypolicyUrlCategoryOutput() FirewallSecuritypolicyUrlCategoryOutput {
	return i.ToFirewallSecuritypolicyUrlCategoryOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyUrlCategoryArgs) ToFirewallSecuritypolicyUrlCategoryOutputWithContext(ctx context.Context) FirewallSecuritypolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyUrlCategoryOutput)
}

// FirewallSecuritypolicyUrlCategoryArrayInput is an input type that accepts FirewallSecuritypolicyUrlCategoryArray and FirewallSecuritypolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyUrlCategoryArrayInput` via:
//
//	FirewallSecuritypolicyUrlCategoryArray{ FirewallSecuritypolicyUrlCategoryArgs{...} }
type FirewallSecuritypolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyUrlCategoryArrayOutput() FirewallSecuritypolicyUrlCategoryArrayOutput
	ToFirewallSecuritypolicyUrlCategoryArrayOutputWithContext(context.Context) FirewallSecuritypolicyUrlCategoryArrayOutput
}

type FirewallSecuritypolicyUrlCategoryArray []FirewallSecuritypolicyUrlCategoryInput

func (FirewallSecuritypolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyUrlCategory)(nil)).Elem()
}

func (i FirewallSecuritypolicyUrlCategoryArray) ToFirewallSecuritypolicyUrlCategoryArrayOutput() FirewallSecuritypolicyUrlCategoryArrayOutput {
	return i.ToFirewallSecuritypolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyUrlCategoryArray) ToFirewallSecuritypolicyUrlCategoryArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyUrlCategoryArrayOutput)
}

type FirewallSecuritypolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyUrlCategory)(nil)).Elem()
}

func (o FirewallSecuritypolicyUrlCategoryOutput) ToFirewallSecuritypolicyUrlCategoryOutput() FirewallSecuritypolicyUrlCategoryOutput {
	return o
}

func (o FirewallSecuritypolicyUrlCategoryOutput) ToFirewallSecuritypolicyUrlCategoryOutputWithContext(ctx context.Context) FirewallSecuritypolicyUrlCategoryOutput {
	return o
}

// URL category ID.
func (o FirewallSecuritypolicyUrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyUrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallSecuritypolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyUrlCategory)(nil)).Elem()
}

func (o FirewallSecuritypolicyUrlCategoryArrayOutput) ToFirewallSecuritypolicyUrlCategoryArrayOutput() FirewallSecuritypolicyUrlCategoryArrayOutput {
	return o
}

func (o FirewallSecuritypolicyUrlCategoryArrayOutput) ToFirewallSecuritypolicyUrlCategoryArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyUrlCategoryArrayOutput {
	return o
}

func (o FirewallSecuritypolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyUrlCategory {
		return vs[0].([]FirewallSecuritypolicyUrlCategory)[vs[1].(int)]
	}).(FirewallSecuritypolicyUrlCategoryOutput)
}

type FirewallSecuritypolicyUser struct {
	// User name.
	Name *string `pulumi:"name"`
}

// FirewallSecuritypolicyUserInput is an input type that accepts FirewallSecuritypolicyUserArgs and FirewallSecuritypolicyUserOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyUserInput` via:
//
//	FirewallSecuritypolicyUserArgs{...}
type FirewallSecuritypolicyUserInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyUserOutput() FirewallSecuritypolicyUserOutput
	ToFirewallSecuritypolicyUserOutputWithContext(context.Context) FirewallSecuritypolicyUserOutput
}

type FirewallSecuritypolicyUserArgs struct {
	// User name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSecuritypolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyUser)(nil)).Elem()
}

func (i FirewallSecuritypolicyUserArgs) ToFirewallSecuritypolicyUserOutput() FirewallSecuritypolicyUserOutput {
	return i.ToFirewallSecuritypolicyUserOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyUserArgs) ToFirewallSecuritypolicyUserOutputWithContext(ctx context.Context) FirewallSecuritypolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyUserOutput)
}

// FirewallSecuritypolicyUserArrayInput is an input type that accepts FirewallSecuritypolicyUserArray and FirewallSecuritypolicyUserArrayOutput values.
// You can construct a concrete instance of `FirewallSecuritypolicyUserArrayInput` via:
//
//	FirewallSecuritypolicyUserArray{ FirewallSecuritypolicyUserArgs{...} }
type FirewallSecuritypolicyUserArrayInput interface {
	pulumi.Input

	ToFirewallSecuritypolicyUserArrayOutput() FirewallSecuritypolicyUserArrayOutput
	ToFirewallSecuritypolicyUserArrayOutputWithContext(context.Context) FirewallSecuritypolicyUserArrayOutput
}

type FirewallSecuritypolicyUserArray []FirewallSecuritypolicyUserInput

func (FirewallSecuritypolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyUser)(nil)).Elem()
}

func (i FirewallSecuritypolicyUserArray) ToFirewallSecuritypolicyUserArrayOutput() FirewallSecuritypolicyUserArrayOutput {
	return i.ToFirewallSecuritypolicyUserArrayOutputWithContext(context.Background())
}

func (i FirewallSecuritypolicyUserArray) ToFirewallSecuritypolicyUserArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSecuritypolicyUserArrayOutput)
}

type FirewallSecuritypolicyUserOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSecuritypolicyUser)(nil)).Elem()
}

func (o FirewallSecuritypolicyUserOutput) ToFirewallSecuritypolicyUserOutput() FirewallSecuritypolicyUserOutput {
	return o
}

func (o FirewallSecuritypolicyUserOutput) ToFirewallSecuritypolicyUserOutputWithContext(ctx context.Context) FirewallSecuritypolicyUserOutput {
	return o
}

// User name.
func (o FirewallSecuritypolicyUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSecuritypolicyUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSecuritypolicyUserArrayOutput struct{ *pulumi.OutputState }

func (FirewallSecuritypolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSecuritypolicyUser)(nil)).Elem()
}

func (o FirewallSecuritypolicyUserArrayOutput) ToFirewallSecuritypolicyUserArrayOutput() FirewallSecuritypolicyUserArrayOutput {
	return o
}

func (o FirewallSecuritypolicyUserArrayOutput) ToFirewallSecuritypolicyUserArrayOutputWithContext(ctx context.Context) FirewallSecuritypolicyUserArrayOutput {
	return o
}

func (o FirewallSecuritypolicyUserArrayOutput) Index(i pulumi.IntInput) FirewallSecuritypolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSecuritypolicyUser {
		return vs[0].([]FirewallSecuritypolicyUser)[vs[1].(int)]
	}).(FirewallSecuritypolicyUserOutput)
}

type FirewallShapingpolicyAppCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// FirewallShapingpolicyAppCategoryInput is an input type that accepts FirewallShapingpolicyAppCategoryArgs and FirewallShapingpolicyAppCategoryOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyAppCategoryInput` via:
//
//	FirewallShapingpolicyAppCategoryArgs{...}
type FirewallShapingpolicyAppCategoryInput interface {
	pulumi.Input

	ToFirewallShapingpolicyAppCategoryOutput() FirewallShapingpolicyAppCategoryOutput
	ToFirewallShapingpolicyAppCategoryOutputWithContext(context.Context) FirewallShapingpolicyAppCategoryOutput
}

type FirewallShapingpolicyAppCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallShapingpolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyAppCategory)(nil)).Elem()
}

func (i FirewallShapingpolicyAppCategoryArgs) ToFirewallShapingpolicyAppCategoryOutput() FirewallShapingpolicyAppCategoryOutput {
	return i.ToFirewallShapingpolicyAppCategoryOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyAppCategoryArgs) ToFirewallShapingpolicyAppCategoryOutputWithContext(ctx context.Context) FirewallShapingpolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyAppCategoryOutput)
}

// FirewallShapingpolicyAppCategoryArrayInput is an input type that accepts FirewallShapingpolicyAppCategoryArray and FirewallShapingpolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyAppCategoryArrayInput` via:
//
//	FirewallShapingpolicyAppCategoryArray{ FirewallShapingpolicyAppCategoryArgs{...} }
type FirewallShapingpolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyAppCategoryArrayOutput() FirewallShapingpolicyAppCategoryArrayOutput
	ToFirewallShapingpolicyAppCategoryArrayOutputWithContext(context.Context) FirewallShapingpolicyAppCategoryArrayOutput
}

type FirewallShapingpolicyAppCategoryArray []FirewallShapingpolicyAppCategoryInput

func (FirewallShapingpolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyAppCategory)(nil)).Elem()
}

func (i FirewallShapingpolicyAppCategoryArray) ToFirewallShapingpolicyAppCategoryArrayOutput() FirewallShapingpolicyAppCategoryArrayOutput {
	return i.ToFirewallShapingpolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyAppCategoryArray) ToFirewallShapingpolicyAppCategoryArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyAppCategoryArrayOutput)
}

type FirewallShapingpolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyAppCategory)(nil)).Elem()
}

func (o FirewallShapingpolicyAppCategoryOutput) ToFirewallShapingpolicyAppCategoryOutput() FirewallShapingpolicyAppCategoryOutput {
	return o
}

func (o FirewallShapingpolicyAppCategoryOutput) ToFirewallShapingpolicyAppCategoryOutputWithContext(ctx context.Context) FirewallShapingpolicyAppCategoryOutput {
	return o
}

// Category IDs.
func (o FirewallShapingpolicyAppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyAppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallShapingpolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyAppCategory)(nil)).Elem()
}

func (o FirewallShapingpolicyAppCategoryArrayOutput) ToFirewallShapingpolicyAppCategoryArrayOutput() FirewallShapingpolicyAppCategoryArrayOutput {
	return o
}

func (o FirewallShapingpolicyAppCategoryArrayOutput) ToFirewallShapingpolicyAppCategoryArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyAppCategoryArrayOutput {
	return o
}

func (o FirewallShapingpolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyAppCategory {
		return vs[0].([]FirewallShapingpolicyAppCategory)[vs[1].(int)]
	}).(FirewallShapingpolicyAppCategoryOutput)
}

type FirewallShapingpolicyAppGroup struct {
	// Application group name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyAppGroupInput is an input type that accepts FirewallShapingpolicyAppGroupArgs and FirewallShapingpolicyAppGroupOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyAppGroupInput` via:
//
//	FirewallShapingpolicyAppGroupArgs{...}
type FirewallShapingpolicyAppGroupInput interface {
	pulumi.Input

	ToFirewallShapingpolicyAppGroupOutput() FirewallShapingpolicyAppGroupOutput
	ToFirewallShapingpolicyAppGroupOutputWithContext(context.Context) FirewallShapingpolicyAppGroupOutput
}

type FirewallShapingpolicyAppGroupArgs struct {
	// Application group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyAppGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyAppGroupArgs) ToFirewallShapingpolicyAppGroupOutput() FirewallShapingpolicyAppGroupOutput {
	return i.ToFirewallShapingpolicyAppGroupOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyAppGroupArgs) ToFirewallShapingpolicyAppGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyAppGroupOutput)
}

// FirewallShapingpolicyAppGroupArrayInput is an input type that accepts FirewallShapingpolicyAppGroupArray and FirewallShapingpolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyAppGroupArrayInput` via:
//
//	FirewallShapingpolicyAppGroupArray{ FirewallShapingpolicyAppGroupArgs{...} }
type FirewallShapingpolicyAppGroupArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyAppGroupArrayOutput() FirewallShapingpolicyAppGroupArrayOutput
	ToFirewallShapingpolicyAppGroupArrayOutputWithContext(context.Context) FirewallShapingpolicyAppGroupArrayOutput
}

type FirewallShapingpolicyAppGroupArray []FirewallShapingpolicyAppGroupInput

func (FirewallShapingpolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyAppGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyAppGroupArray) ToFirewallShapingpolicyAppGroupArrayOutput() FirewallShapingpolicyAppGroupArrayOutput {
	return i.ToFirewallShapingpolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyAppGroupArray) ToFirewallShapingpolicyAppGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyAppGroupArrayOutput)
}

type FirewallShapingpolicyAppGroupOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyAppGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyAppGroupOutput) ToFirewallShapingpolicyAppGroupOutput() FirewallShapingpolicyAppGroupOutput {
	return o
}

func (o FirewallShapingpolicyAppGroupOutput) ToFirewallShapingpolicyAppGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyAppGroupOutput {
	return o
}

// Application group name.
func (o FirewallShapingpolicyAppGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyAppGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyAppGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyAppGroupArrayOutput) ToFirewallShapingpolicyAppGroupArrayOutput() FirewallShapingpolicyAppGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyAppGroupArrayOutput) ToFirewallShapingpolicyAppGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyAppGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyAppGroupArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyAppGroup {
		return vs[0].([]FirewallShapingpolicyAppGroup)[vs[1].(int)]
	}).(FirewallShapingpolicyAppGroupOutput)
}

type FirewallShapingpolicyApplication struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// FirewallShapingpolicyApplicationInput is an input type that accepts FirewallShapingpolicyApplicationArgs and FirewallShapingpolicyApplicationOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyApplicationInput` via:
//
//	FirewallShapingpolicyApplicationArgs{...}
type FirewallShapingpolicyApplicationInput interface {
	pulumi.Input

	ToFirewallShapingpolicyApplicationOutput() FirewallShapingpolicyApplicationOutput
	ToFirewallShapingpolicyApplicationOutputWithContext(context.Context) FirewallShapingpolicyApplicationOutput
}

type FirewallShapingpolicyApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallShapingpolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyApplication)(nil)).Elem()
}

func (i FirewallShapingpolicyApplicationArgs) ToFirewallShapingpolicyApplicationOutput() FirewallShapingpolicyApplicationOutput {
	return i.ToFirewallShapingpolicyApplicationOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyApplicationArgs) ToFirewallShapingpolicyApplicationOutputWithContext(ctx context.Context) FirewallShapingpolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyApplicationOutput)
}

// FirewallShapingpolicyApplicationArrayInput is an input type that accepts FirewallShapingpolicyApplicationArray and FirewallShapingpolicyApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyApplicationArrayInput` via:
//
//	FirewallShapingpolicyApplicationArray{ FirewallShapingpolicyApplicationArgs{...} }
type FirewallShapingpolicyApplicationArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyApplicationArrayOutput() FirewallShapingpolicyApplicationArrayOutput
	ToFirewallShapingpolicyApplicationArrayOutputWithContext(context.Context) FirewallShapingpolicyApplicationArrayOutput
}

type FirewallShapingpolicyApplicationArray []FirewallShapingpolicyApplicationInput

func (FirewallShapingpolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyApplication)(nil)).Elem()
}

func (i FirewallShapingpolicyApplicationArray) ToFirewallShapingpolicyApplicationArrayOutput() FirewallShapingpolicyApplicationArrayOutput {
	return i.ToFirewallShapingpolicyApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyApplicationArray) ToFirewallShapingpolicyApplicationArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyApplicationArrayOutput)
}

type FirewallShapingpolicyApplicationOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyApplication)(nil)).Elem()
}

func (o FirewallShapingpolicyApplicationOutput) ToFirewallShapingpolicyApplicationOutput() FirewallShapingpolicyApplicationOutput {
	return o
}

func (o FirewallShapingpolicyApplicationOutput) ToFirewallShapingpolicyApplicationOutputWithContext(ctx context.Context) FirewallShapingpolicyApplicationOutput {
	return o
}

// Application IDs.
func (o FirewallShapingpolicyApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallShapingpolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyApplication)(nil)).Elem()
}

func (o FirewallShapingpolicyApplicationArrayOutput) ToFirewallShapingpolicyApplicationArrayOutput() FirewallShapingpolicyApplicationArrayOutput {
	return o
}

func (o FirewallShapingpolicyApplicationArrayOutput) ToFirewallShapingpolicyApplicationArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyApplicationArrayOutput {
	return o
}

func (o FirewallShapingpolicyApplicationArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyApplication {
		return vs[0].([]FirewallShapingpolicyApplication)[vs[1].(int)]
	}).(FirewallShapingpolicyApplicationOutput)
}

type FirewallShapingpolicyDstaddr6 struct {
	// Shaping policy name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyDstaddr6Input is an input type that accepts FirewallShapingpolicyDstaddr6Args and FirewallShapingpolicyDstaddr6Output values.
// You can construct a concrete instance of `FirewallShapingpolicyDstaddr6Input` via:
//
//	FirewallShapingpolicyDstaddr6Args{...}
type FirewallShapingpolicyDstaddr6Input interface {
	pulumi.Input

	ToFirewallShapingpolicyDstaddr6Output() FirewallShapingpolicyDstaddr6Output
	ToFirewallShapingpolicyDstaddr6OutputWithContext(context.Context) FirewallShapingpolicyDstaddr6Output
}

type FirewallShapingpolicyDstaddr6Args struct {
	// Shaping policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyDstaddr6)(nil)).Elem()
}

func (i FirewallShapingpolicyDstaddr6Args) ToFirewallShapingpolicyDstaddr6Output() FirewallShapingpolicyDstaddr6Output {
	return i.ToFirewallShapingpolicyDstaddr6OutputWithContext(context.Background())
}

func (i FirewallShapingpolicyDstaddr6Args) ToFirewallShapingpolicyDstaddr6OutputWithContext(ctx context.Context) FirewallShapingpolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyDstaddr6Output)
}

// FirewallShapingpolicyDstaddr6ArrayInput is an input type that accepts FirewallShapingpolicyDstaddr6Array and FirewallShapingpolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyDstaddr6ArrayInput` via:
//
//	FirewallShapingpolicyDstaddr6Array{ FirewallShapingpolicyDstaddr6Args{...} }
type FirewallShapingpolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyDstaddr6ArrayOutput() FirewallShapingpolicyDstaddr6ArrayOutput
	ToFirewallShapingpolicyDstaddr6ArrayOutputWithContext(context.Context) FirewallShapingpolicyDstaddr6ArrayOutput
}

type FirewallShapingpolicyDstaddr6Array []FirewallShapingpolicyDstaddr6Input

func (FirewallShapingpolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyDstaddr6)(nil)).Elem()
}

func (i FirewallShapingpolicyDstaddr6Array) ToFirewallShapingpolicyDstaddr6ArrayOutput() FirewallShapingpolicyDstaddr6ArrayOutput {
	return i.ToFirewallShapingpolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyDstaddr6Array) ToFirewallShapingpolicyDstaddr6ArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyDstaddr6ArrayOutput)
}

type FirewallShapingpolicyDstaddr6Output struct{ *pulumi.OutputState }

func (FirewallShapingpolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyDstaddr6)(nil)).Elem()
}

func (o FirewallShapingpolicyDstaddr6Output) ToFirewallShapingpolicyDstaddr6Output() FirewallShapingpolicyDstaddr6Output {
	return o
}

func (o FirewallShapingpolicyDstaddr6Output) ToFirewallShapingpolicyDstaddr6OutputWithContext(ctx context.Context) FirewallShapingpolicyDstaddr6Output {
	return o
}

// Shaping policy name.
func (o FirewallShapingpolicyDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyDstaddr6)(nil)).Elem()
}

func (o FirewallShapingpolicyDstaddr6ArrayOutput) ToFirewallShapingpolicyDstaddr6ArrayOutput() FirewallShapingpolicyDstaddr6ArrayOutput {
	return o
}

func (o FirewallShapingpolicyDstaddr6ArrayOutput) ToFirewallShapingpolicyDstaddr6ArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyDstaddr6ArrayOutput {
	return o
}

func (o FirewallShapingpolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyDstaddr6 {
		return vs[0].([]FirewallShapingpolicyDstaddr6)[vs[1].(int)]
	}).(FirewallShapingpolicyDstaddr6Output)
}

type FirewallShapingpolicyDstaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyDstaddrInput is an input type that accepts FirewallShapingpolicyDstaddrArgs and FirewallShapingpolicyDstaddrOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyDstaddrInput` via:
//
//	FirewallShapingpolicyDstaddrArgs{...}
type FirewallShapingpolicyDstaddrInput interface {
	pulumi.Input

	ToFirewallShapingpolicyDstaddrOutput() FirewallShapingpolicyDstaddrOutput
	ToFirewallShapingpolicyDstaddrOutputWithContext(context.Context) FirewallShapingpolicyDstaddrOutput
}

type FirewallShapingpolicyDstaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyDstaddr)(nil)).Elem()
}

func (i FirewallShapingpolicyDstaddrArgs) ToFirewallShapingpolicyDstaddrOutput() FirewallShapingpolicyDstaddrOutput {
	return i.ToFirewallShapingpolicyDstaddrOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyDstaddrArgs) ToFirewallShapingpolicyDstaddrOutputWithContext(ctx context.Context) FirewallShapingpolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyDstaddrOutput)
}

// FirewallShapingpolicyDstaddrArrayInput is an input type that accepts FirewallShapingpolicyDstaddrArray and FirewallShapingpolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyDstaddrArrayInput` via:
//
//	FirewallShapingpolicyDstaddrArray{ FirewallShapingpolicyDstaddrArgs{...} }
type FirewallShapingpolicyDstaddrArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyDstaddrArrayOutput() FirewallShapingpolicyDstaddrArrayOutput
	ToFirewallShapingpolicyDstaddrArrayOutputWithContext(context.Context) FirewallShapingpolicyDstaddrArrayOutput
}

type FirewallShapingpolicyDstaddrArray []FirewallShapingpolicyDstaddrInput

func (FirewallShapingpolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyDstaddr)(nil)).Elem()
}

func (i FirewallShapingpolicyDstaddrArray) ToFirewallShapingpolicyDstaddrArrayOutput() FirewallShapingpolicyDstaddrArrayOutput {
	return i.ToFirewallShapingpolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyDstaddrArray) ToFirewallShapingpolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyDstaddrArrayOutput)
}

type FirewallShapingpolicyDstaddrOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyDstaddr)(nil)).Elem()
}

func (o FirewallShapingpolicyDstaddrOutput) ToFirewallShapingpolicyDstaddrOutput() FirewallShapingpolicyDstaddrOutput {
	return o
}

func (o FirewallShapingpolicyDstaddrOutput) ToFirewallShapingpolicyDstaddrOutputWithContext(ctx context.Context) FirewallShapingpolicyDstaddrOutput {
	return o
}

// Address name.
func (o FirewallShapingpolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyDstaddr)(nil)).Elem()
}

func (o FirewallShapingpolicyDstaddrArrayOutput) ToFirewallShapingpolicyDstaddrArrayOutput() FirewallShapingpolicyDstaddrArrayOutput {
	return o
}

func (o FirewallShapingpolicyDstaddrArrayOutput) ToFirewallShapingpolicyDstaddrArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyDstaddrArrayOutput {
	return o
}

func (o FirewallShapingpolicyDstaddrArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyDstaddr {
		return vs[0].([]FirewallShapingpolicyDstaddr)[vs[1].(int)]
	}).(FirewallShapingpolicyDstaddrOutput)
}

type FirewallShapingpolicyDstintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyDstintfInput is an input type that accepts FirewallShapingpolicyDstintfArgs and FirewallShapingpolicyDstintfOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyDstintfInput` via:
//
//	FirewallShapingpolicyDstintfArgs{...}
type FirewallShapingpolicyDstintfInput interface {
	pulumi.Input

	ToFirewallShapingpolicyDstintfOutput() FirewallShapingpolicyDstintfOutput
	ToFirewallShapingpolicyDstintfOutputWithContext(context.Context) FirewallShapingpolicyDstintfOutput
}

type FirewallShapingpolicyDstintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyDstintf)(nil)).Elem()
}

func (i FirewallShapingpolicyDstintfArgs) ToFirewallShapingpolicyDstintfOutput() FirewallShapingpolicyDstintfOutput {
	return i.ToFirewallShapingpolicyDstintfOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyDstintfArgs) ToFirewallShapingpolicyDstintfOutputWithContext(ctx context.Context) FirewallShapingpolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyDstintfOutput)
}

// FirewallShapingpolicyDstintfArrayInput is an input type that accepts FirewallShapingpolicyDstintfArray and FirewallShapingpolicyDstintfArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyDstintfArrayInput` via:
//
//	FirewallShapingpolicyDstintfArray{ FirewallShapingpolicyDstintfArgs{...} }
type FirewallShapingpolicyDstintfArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyDstintfArrayOutput() FirewallShapingpolicyDstintfArrayOutput
	ToFirewallShapingpolicyDstintfArrayOutputWithContext(context.Context) FirewallShapingpolicyDstintfArrayOutput
}

type FirewallShapingpolicyDstintfArray []FirewallShapingpolicyDstintfInput

func (FirewallShapingpolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyDstintf)(nil)).Elem()
}

func (i FirewallShapingpolicyDstintfArray) ToFirewallShapingpolicyDstintfArrayOutput() FirewallShapingpolicyDstintfArrayOutput {
	return i.ToFirewallShapingpolicyDstintfArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyDstintfArray) ToFirewallShapingpolicyDstintfArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyDstintfArrayOutput)
}

type FirewallShapingpolicyDstintfOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyDstintf)(nil)).Elem()
}

func (o FirewallShapingpolicyDstintfOutput) ToFirewallShapingpolicyDstintfOutput() FirewallShapingpolicyDstintfOutput {
	return o
}

func (o FirewallShapingpolicyDstintfOutput) ToFirewallShapingpolicyDstintfOutputWithContext(ctx context.Context) FirewallShapingpolicyDstintfOutput {
	return o
}

// Interface name.
func (o FirewallShapingpolicyDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyDstintf)(nil)).Elem()
}

func (o FirewallShapingpolicyDstintfArrayOutput) ToFirewallShapingpolicyDstintfArrayOutput() FirewallShapingpolicyDstintfArrayOutput {
	return o
}

func (o FirewallShapingpolicyDstintfArrayOutput) ToFirewallShapingpolicyDstintfArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyDstintfArrayOutput {
	return o
}

func (o FirewallShapingpolicyDstintfArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyDstintf {
		return vs[0].([]FirewallShapingpolicyDstintf)[vs[1].(int)]
	}).(FirewallShapingpolicyDstintfOutput)
}

type FirewallShapingpolicyGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyGroupInput is an input type that accepts FirewallShapingpolicyGroupArgs and FirewallShapingpolicyGroupOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyGroupInput` via:
//
//	FirewallShapingpolicyGroupArgs{...}
type FirewallShapingpolicyGroupInput interface {
	pulumi.Input

	ToFirewallShapingpolicyGroupOutput() FirewallShapingpolicyGroupOutput
	ToFirewallShapingpolicyGroupOutputWithContext(context.Context) FirewallShapingpolicyGroupOutput
}

type FirewallShapingpolicyGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyGroupArgs) ToFirewallShapingpolicyGroupOutput() FirewallShapingpolicyGroupOutput {
	return i.ToFirewallShapingpolicyGroupOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyGroupArgs) ToFirewallShapingpolicyGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyGroupOutput)
}

// FirewallShapingpolicyGroupArrayInput is an input type that accepts FirewallShapingpolicyGroupArray and FirewallShapingpolicyGroupArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyGroupArrayInput` via:
//
//	FirewallShapingpolicyGroupArray{ FirewallShapingpolicyGroupArgs{...} }
type FirewallShapingpolicyGroupArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyGroupArrayOutput() FirewallShapingpolicyGroupArrayOutput
	ToFirewallShapingpolicyGroupArrayOutputWithContext(context.Context) FirewallShapingpolicyGroupArrayOutput
}

type FirewallShapingpolicyGroupArray []FirewallShapingpolicyGroupInput

func (FirewallShapingpolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyGroupArray) ToFirewallShapingpolicyGroupArrayOutput() FirewallShapingpolicyGroupArrayOutput {
	return i.ToFirewallShapingpolicyGroupArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyGroupArray) ToFirewallShapingpolicyGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyGroupArrayOutput)
}

type FirewallShapingpolicyGroupOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyGroupOutput) ToFirewallShapingpolicyGroupOutput() FirewallShapingpolicyGroupOutput {
	return o
}

func (o FirewallShapingpolicyGroupOutput) ToFirewallShapingpolicyGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyGroupOutput {
	return o
}

// Group name.
func (o FirewallShapingpolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyGroupArrayOutput) ToFirewallShapingpolicyGroupArrayOutput() FirewallShapingpolicyGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyGroupArrayOutput) ToFirewallShapingpolicyGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyGroupArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyGroup {
		return vs[0].([]FirewallShapingpolicyGroup)[vs[1].(int)]
	}).(FirewallShapingpolicyGroupOutput)
}

type FirewallShapingpolicyInternetServiceCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyInternetServiceCustomInput is an input type that accepts FirewallShapingpolicyInternetServiceCustomArgs and FirewallShapingpolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceCustomInput` via:
//
//	FirewallShapingpolicyInternetServiceCustomArgs{...}
type FirewallShapingpolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceCustomOutput() FirewallShapingpolicyInternetServiceCustomOutput
	ToFirewallShapingpolicyInternetServiceCustomOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceCustomOutput
}

type FirewallShapingpolicyInternetServiceCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceCustom)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceCustomArgs) ToFirewallShapingpolicyInternetServiceCustomOutput() FirewallShapingpolicyInternetServiceCustomOutput {
	return i.ToFirewallShapingpolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceCustomArgs) ToFirewallShapingpolicyInternetServiceCustomOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceCustomOutput)
}

// FirewallShapingpolicyInternetServiceCustomArrayInput is an input type that accepts FirewallShapingpolicyInternetServiceCustomArray and FirewallShapingpolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceCustomArrayInput` via:
//
//	FirewallShapingpolicyInternetServiceCustomArray{ FirewallShapingpolicyInternetServiceCustomArgs{...} }
type FirewallShapingpolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceCustomArrayOutput() FirewallShapingpolicyInternetServiceCustomArrayOutput
	ToFirewallShapingpolicyInternetServiceCustomArrayOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceCustomArrayOutput
}

type FirewallShapingpolicyInternetServiceCustomArray []FirewallShapingpolicyInternetServiceCustomInput

func (FirewallShapingpolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceCustom)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceCustomArray) ToFirewallShapingpolicyInternetServiceCustomArrayOutput() FirewallShapingpolicyInternetServiceCustomArrayOutput {
	return i.ToFirewallShapingpolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceCustomArray) ToFirewallShapingpolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceCustomArrayOutput)
}

type FirewallShapingpolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceCustom)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceCustomOutput) ToFirewallShapingpolicyInternetServiceCustomOutput() FirewallShapingpolicyInternetServiceCustomOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceCustomOutput) ToFirewallShapingpolicyInternetServiceCustomOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceCustomOutput {
	return o
}

// Custom Internet Service name.
func (o FirewallShapingpolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceCustom)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceCustomArrayOutput) ToFirewallShapingpolicyInternetServiceCustomArrayOutput() FirewallShapingpolicyInternetServiceCustomArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceCustomArrayOutput) ToFirewallShapingpolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceCustomArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyInternetServiceCustom {
		return vs[0].([]FirewallShapingpolicyInternetServiceCustom)[vs[1].(int)]
	}).(FirewallShapingpolicyInternetServiceCustomOutput)
}

type FirewallShapingpolicyInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyInternetServiceCustomGroupInput is an input type that accepts FirewallShapingpolicyInternetServiceCustomGroupArgs and FirewallShapingpolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceCustomGroupInput` via:
//
//	FirewallShapingpolicyInternetServiceCustomGroupArgs{...}
type FirewallShapingpolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceCustomGroupOutput() FirewallShapingpolicyInternetServiceCustomGroupOutput
	ToFirewallShapingpolicyInternetServiceCustomGroupOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceCustomGroupOutput
}

type FirewallShapingpolicyInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceCustomGroupArgs) ToFirewallShapingpolicyInternetServiceCustomGroupOutput() FirewallShapingpolicyInternetServiceCustomGroupOutput {
	return i.ToFirewallShapingpolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceCustomGroupArgs) ToFirewallShapingpolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceCustomGroupOutput)
}

// FirewallShapingpolicyInternetServiceCustomGroupArrayInput is an input type that accepts FirewallShapingpolicyInternetServiceCustomGroupArray and FirewallShapingpolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceCustomGroupArrayInput` via:
//
//	FirewallShapingpolicyInternetServiceCustomGroupArray{ FirewallShapingpolicyInternetServiceCustomGroupArgs{...} }
type FirewallShapingpolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceCustomGroupArrayOutput() FirewallShapingpolicyInternetServiceCustomGroupArrayOutput
	ToFirewallShapingpolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceCustomGroupArrayOutput
}

type FirewallShapingpolicyInternetServiceCustomGroupArray []FirewallShapingpolicyInternetServiceCustomGroupInput

func (FirewallShapingpolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceCustomGroupArray) ToFirewallShapingpolicyInternetServiceCustomGroupArrayOutput() FirewallShapingpolicyInternetServiceCustomGroupArrayOutput {
	return i.ToFirewallShapingpolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceCustomGroupArray) ToFirewallShapingpolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceCustomGroupArrayOutput)
}

type FirewallShapingpolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceCustomGroupOutput) ToFirewallShapingpolicyInternetServiceCustomGroupOutput() FirewallShapingpolicyInternetServiceCustomGroupOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceCustomGroupOutput) ToFirewallShapingpolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o FirewallShapingpolicyInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceCustomGroupArrayOutput) ToFirewallShapingpolicyInternetServiceCustomGroupArrayOutput() FirewallShapingpolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceCustomGroupArrayOutput) ToFirewallShapingpolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyInternetServiceCustomGroup {
		return vs[0].([]FirewallShapingpolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(FirewallShapingpolicyInternetServiceCustomGroupOutput)
}

type FirewallShapingpolicyInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyInternetServiceGroupInput is an input type that accepts FirewallShapingpolicyInternetServiceGroupArgs and FirewallShapingpolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceGroupInput` via:
//
//	FirewallShapingpolicyInternetServiceGroupArgs{...}
type FirewallShapingpolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceGroupOutput() FirewallShapingpolicyInternetServiceGroupOutput
	ToFirewallShapingpolicyInternetServiceGroupOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceGroupOutput
}

type FirewallShapingpolicyInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceGroupArgs) ToFirewallShapingpolicyInternetServiceGroupOutput() FirewallShapingpolicyInternetServiceGroupOutput {
	return i.ToFirewallShapingpolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceGroupArgs) ToFirewallShapingpolicyInternetServiceGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceGroupOutput)
}

// FirewallShapingpolicyInternetServiceGroupArrayInput is an input type that accepts FirewallShapingpolicyInternetServiceGroupArray and FirewallShapingpolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceGroupArrayInput` via:
//
//	FirewallShapingpolicyInternetServiceGroupArray{ FirewallShapingpolicyInternetServiceGroupArgs{...} }
type FirewallShapingpolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceGroupArrayOutput() FirewallShapingpolicyInternetServiceGroupArrayOutput
	ToFirewallShapingpolicyInternetServiceGroupArrayOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceGroupArrayOutput
}

type FirewallShapingpolicyInternetServiceGroupArray []FirewallShapingpolicyInternetServiceGroupInput

func (FirewallShapingpolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceGroupArray) ToFirewallShapingpolicyInternetServiceGroupArrayOutput() FirewallShapingpolicyInternetServiceGroupArrayOutput {
	return i.ToFirewallShapingpolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceGroupArray) ToFirewallShapingpolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceGroupArrayOutput)
}

type FirewallShapingpolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceGroupOutput) ToFirewallShapingpolicyInternetServiceGroupOutput() FirewallShapingpolicyInternetServiceGroupOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceGroupOutput) ToFirewallShapingpolicyInternetServiceGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o FirewallShapingpolicyInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceGroupArrayOutput) ToFirewallShapingpolicyInternetServiceGroupArrayOutput() FirewallShapingpolicyInternetServiceGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceGroupArrayOutput) ToFirewallShapingpolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyInternetServiceGroup {
		return vs[0].([]FirewallShapingpolicyInternetServiceGroup)[vs[1].(int)]
	}).(FirewallShapingpolicyInternetServiceGroupOutput)
}

type FirewallShapingpolicyInternetServiceId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// FirewallShapingpolicyInternetServiceIdInput is an input type that accepts FirewallShapingpolicyInternetServiceIdArgs and FirewallShapingpolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceIdInput` via:
//
//	FirewallShapingpolicyInternetServiceIdArgs{...}
type FirewallShapingpolicyInternetServiceIdInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceIdOutput() FirewallShapingpolicyInternetServiceIdOutput
	ToFirewallShapingpolicyInternetServiceIdOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceIdOutput
}

type FirewallShapingpolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallShapingpolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceId)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceIdArgs) ToFirewallShapingpolicyInternetServiceIdOutput() FirewallShapingpolicyInternetServiceIdOutput {
	return i.ToFirewallShapingpolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceIdArgs) ToFirewallShapingpolicyInternetServiceIdOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceIdOutput)
}

// FirewallShapingpolicyInternetServiceIdArrayInput is an input type that accepts FirewallShapingpolicyInternetServiceIdArray and FirewallShapingpolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceIdArrayInput` via:
//
//	FirewallShapingpolicyInternetServiceIdArray{ FirewallShapingpolicyInternetServiceIdArgs{...} }
type FirewallShapingpolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceIdArrayOutput() FirewallShapingpolicyInternetServiceIdArrayOutput
	ToFirewallShapingpolicyInternetServiceIdArrayOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceIdArrayOutput
}

type FirewallShapingpolicyInternetServiceIdArray []FirewallShapingpolicyInternetServiceIdInput

func (FirewallShapingpolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceId)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceIdArray) ToFirewallShapingpolicyInternetServiceIdArrayOutput() FirewallShapingpolicyInternetServiceIdArrayOutput {
	return i.ToFirewallShapingpolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceIdArray) ToFirewallShapingpolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceIdArrayOutput)
}

type FirewallShapingpolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceId)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceIdOutput) ToFirewallShapingpolicyInternetServiceIdOutput() FirewallShapingpolicyInternetServiceIdOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceIdOutput) ToFirewallShapingpolicyInternetServiceIdOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o FirewallShapingpolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallShapingpolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceId)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceIdArrayOutput) ToFirewallShapingpolicyInternetServiceIdArrayOutput() FirewallShapingpolicyInternetServiceIdArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceIdArrayOutput) ToFirewallShapingpolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceIdArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyInternetServiceId {
		return vs[0].([]FirewallShapingpolicyInternetServiceId)[vs[1].(int)]
	}).(FirewallShapingpolicyInternetServiceIdOutput)
}

type FirewallShapingpolicyInternetServiceName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyInternetServiceNameInput is an input type that accepts FirewallShapingpolicyInternetServiceNameArgs and FirewallShapingpolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceNameInput` via:
//
//	FirewallShapingpolicyInternetServiceNameArgs{...}
type FirewallShapingpolicyInternetServiceNameInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceNameOutput() FirewallShapingpolicyInternetServiceNameOutput
	ToFirewallShapingpolicyInternetServiceNameOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceNameOutput
}

type FirewallShapingpolicyInternetServiceNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceName)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceNameArgs) ToFirewallShapingpolicyInternetServiceNameOutput() FirewallShapingpolicyInternetServiceNameOutput {
	return i.ToFirewallShapingpolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceNameArgs) ToFirewallShapingpolicyInternetServiceNameOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceNameOutput)
}

// FirewallShapingpolicyInternetServiceNameArrayInput is an input type that accepts FirewallShapingpolicyInternetServiceNameArray and FirewallShapingpolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceNameArrayInput` via:
//
//	FirewallShapingpolicyInternetServiceNameArray{ FirewallShapingpolicyInternetServiceNameArgs{...} }
type FirewallShapingpolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceNameArrayOutput() FirewallShapingpolicyInternetServiceNameArrayOutput
	ToFirewallShapingpolicyInternetServiceNameArrayOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceNameArrayOutput
}

type FirewallShapingpolicyInternetServiceNameArray []FirewallShapingpolicyInternetServiceNameInput

func (FirewallShapingpolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceName)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceNameArray) ToFirewallShapingpolicyInternetServiceNameArrayOutput() FirewallShapingpolicyInternetServiceNameArrayOutput {
	return i.ToFirewallShapingpolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceNameArray) ToFirewallShapingpolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceNameArrayOutput)
}

type FirewallShapingpolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceName)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceNameOutput) ToFirewallShapingpolicyInternetServiceNameOutput() FirewallShapingpolicyInternetServiceNameOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceNameOutput) ToFirewallShapingpolicyInternetServiceNameOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceNameOutput {
	return o
}

// Internet Service name.
func (o FirewallShapingpolicyInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceName)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceNameArrayOutput) ToFirewallShapingpolicyInternetServiceNameArrayOutput() FirewallShapingpolicyInternetServiceNameArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceNameArrayOutput) ToFirewallShapingpolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceNameArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyInternetServiceName {
		return vs[0].([]FirewallShapingpolicyInternetServiceName)[vs[1].(int)]
	}).(FirewallShapingpolicyInternetServiceNameOutput)
}

type FirewallShapingpolicyInternetServiceSrcCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyInternetServiceSrcCustomInput is an input type that accepts FirewallShapingpolicyInternetServiceSrcCustomArgs and FirewallShapingpolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceSrcCustomInput` via:
//
//	FirewallShapingpolicyInternetServiceSrcCustomArgs{...}
type FirewallShapingpolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceSrcCustomOutput() FirewallShapingpolicyInternetServiceSrcCustomOutput
	ToFirewallShapingpolicyInternetServiceSrcCustomOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceSrcCustomOutput
}

type FirewallShapingpolicyInternetServiceSrcCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceSrcCustomArgs) ToFirewallShapingpolicyInternetServiceSrcCustomOutput() FirewallShapingpolicyInternetServiceSrcCustomOutput {
	return i.ToFirewallShapingpolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceSrcCustomArgs) ToFirewallShapingpolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceSrcCustomOutput)
}

// FirewallShapingpolicyInternetServiceSrcCustomArrayInput is an input type that accepts FirewallShapingpolicyInternetServiceSrcCustomArray and FirewallShapingpolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceSrcCustomArrayInput` via:
//
//	FirewallShapingpolicyInternetServiceSrcCustomArray{ FirewallShapingpolicyInternetServiceSrcCustomArgs{...} }
type FirewallShapingpolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceSrcCustomArrayOutput() FirewallShapingpolicyInternetServiceSrcCustomArrayOutput
	ToFirewallShapingpolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceSrcCustomArrayOutput
}

type FirewallShapingpolicyInternetServiceSrcCustomArray []FirewallShapingpolicyInternetServiceSrcCustomInput

func (FirewallShapingpolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceSrcCustomArray) ToFirewallShapingpolicyInternetServiceSrcCustomArrayOutput() FirewallShapingpolicyInternetServiceSrcCustomArrayOutput {
	return i.ToFirewallShapingpolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceSrcCustomArray) ToFirewallShapingpolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceSrcCustomArrayOutput)
}

type FirewallShapingpolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceSrcCustomOutput) ToFirewallShapingpolicyInternetServiceSrcCustomOutput() FirewallShapingpolicyInternetServiceSrcCustomOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcCustomOutput) ToFirewallShapingpolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcCustomOutput {
	return o
}

// Custom Internet Service name.
func (o FirewallShapingpolicyInternetServiceSrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyInternetServiceSrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceSrcCustomArrayOutput) ToFirewallShapingpolicyInternetServiceSrcCustomArrayOutput() FirewallShapingpolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcCustomArrayOutput) ToFirewallShapingpolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyInternetServiceSrcCustom {
		return vs[0].([]FirewallShapingpolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(FirewallShapingpolicyInternetServiceSrcCustomOutput)
}

type FirewallShapingpolicyInternetServiceSrcCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyInternetServiceSrcCustomGroupInput is an input type that accepts FirewallShapingpolicyInternetServiceSrcCustomGroupArgs and FirewallShapingpolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceSrcCustomGroupInput` via:
//
//	FirewallShapingpolicyInternetServiceSrcCustomGroupArgs{...}
type FirewallShapingpolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceSrcCustomGroupOutput() FirewallShapingpolicyInternetServiceSrcCustomGroupOutput
	ToFirewallShapingpolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceSrcCustomGroupOutput
}

type FirewallShapingpolicyInternetServiceSrcCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceSrcCustomGroupArgs) ToFirewallShapingpolicyInternetServiceSrcCustomGroupOutput() FirewallShapingpolicyInternetServiceSrcCustomGroupOutput {
	return i.ToFirewallShapingpolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceSrcCustomGroupArgs) ToFirewallShapingpolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceSrcCustomGroupOutput)
}

// FirewallShapingpolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts FirewallShapingpolicyInternetServiceSrcCustomGroupArray and FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	FirewallShapingpolicyInternetServiceSrcCustomGroupArray{ FirewallShapingpolicyInternetServiceSrcCustomGroupArgs{...} }
type FirewallShapingpolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput() FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput
	ToFirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput
}

type FirewallShapingpolicyInternetServiceSrcCustomGroupArray []FirewallShapingpolicyInternetServiceSrcCustomGroupInput

func (FirewallShapingpolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceSrcCustomGroupArray) ToFirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput() FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToFirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceSrcCustomGroupArray) ToFirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput)
}

type FirewallShapingpolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceSrcCustomGroupOutput) ToFirewallShapingpolicyInternetServiceSrcCustomGroupOutput() FirewallShapingpolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcCustomGroupOutput) ToFirewallShapingpolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o FirewallShapingpolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyInternetServiceSrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput) ToFirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput() FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput) ToFirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyInternetServiceSrcCustomGroup {
		return vs[0].([]FirewallShapingpolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(FirewallShapingpolicyInternetServiceSrcCustomGroupOutput)
}

type FirewallShapingpolicyInternetServiceSrcGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyInternetServiceSrcGroupInput is an input type that accepts FirewallShapingpolicyInternetServiceSrcGroupArgs and FirewallShapingpolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceSrcGroupInput` via:
//
//	FirewallShapingpolicyInternetServiceSrcGroupArgs{...}
type FirewallShapingpolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceSrcGroupOutput() FirewallShapingpolicyInternetServiceSrcGroupOutput
	ToFirewallShapingpolicyInternetServiceSrcGroupOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceSrcGroupOutput
}

type FirewallShapingpolicyInternetServiceSrcGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceSrcGroupArgs) ToFirewallShapingpolicyInternetServiceSrcGroupOutput() FirewallShapingpolicyInternetServiceSrcGroupOutput {
	return i.ToFirewallShapingpolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceSrcGroupArgs) ToFirewallShapingpolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceSrcGroupOutput)
}

// FirewallShapingpolicyInternetServiceSrcGroupArrayInput is an input type that accepts FirewallShapingpolicyInternetServiceSrcGroupArray and FirewallShapingpolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceSrcGroupArrayInput` via:
//
//	FirewallShapingpolicyInternetServiceSrcGroupArray{ FirewallShapingpolicyInternetServiceSrcGroupArgs{...} }
type FirewallShapingpolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceSrcGroupArrayOutput() FirewallShapingpolicyInternetServiceSrcGroupArrayOutput
	ToFirewallShapingpolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceSrcGroupArrayOutput
}

type FirewallShapingpolicyInternetServiceSrcGroupArray []FirewallShapingpolicyInternetServiceSrcGroupInput

func (FirewallShapingpolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceSrcGroupArray) ToFirewallShapingpolicyInternetServiceSrcGroupArrayOutput() FirewallShapingpolicyInternetServiceSrcGroupArrayOutput {
	return i.ToFirewallShapingpolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceSrcGroupArray) ToFirewallShapingpolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceSrcGroupArrayOutput)
}

type FirewallShapingpolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceSrcGroupOutput) ToFirewallShapingpolicyInternetServiceSrcGroupOutput() FirewallShapingpolicyInternetServiceSrcGroupOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcGroupOutput) ToFirewallShapingpolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcGroupOutput {
	return o
}

// Internet Service group name.
func (o FirewallShapingpolicyInternetServiceSrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyInternetServiceSrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceSrcGroupArrayOutput) ToFirewallShapingpolicyInternetServiceSrcGroupArrayOutput() FirewallShapingpolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcGroupArrayOutput) ToFirewallShapingpolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyInternetServiceSrcGroup {
		return vs[0].([]FirewallShapingpolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(FirewallShapingpolicyInternetServiceSrcGroupOutput)
}

type FirewallShapingpolicyInternetServiceSrcId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// FirewallShapingpolicyInternetServiceSrcIdInput is an input type that accepts FirewallShapingpolicyInternetServiceSrcIdArgs and FirewallShapingpolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceSrcIdInput` via:
//
//	FirewallShapingpolicyInternetServiceSrcIdArgs{...}
type FirewallShapingpolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceSrcIdOutput() FirewallShapingpolicyInternetServiceSrcIdOutput
	ToFirewallShapingpolicyInternetServiceSrcIdOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceSrcIdOutput
}

type FirewallShapingpolicyInternetServiceSrcIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallShapingpolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcId)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceSrcIdArgs) ToFirewallShapingpolicyInternetServiceSrcIdOutput() FirewallShapingpolicyInternetServiceSrcIdOutput {
	return i.ToFirewallShapingpolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceSrcIdArgs) ToFirewallShapingpolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceSrcIdOutput)
}

// FirewallShapingpolicyInternetServiceSrcIdArrayInput is an input type that accepts FirewallShapingpolicyInternetServiceSrcIdArray and FirewallShapingpolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceSrcIdArrayInput` via:
//
//	FirewallShapingpolicyInternetServiceSrcIdArray{ FirewallShapingpolicyInternetServiceSrcIdArgs{...} }
type FirewallShapingpolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceSrcIdArrayOutput() FirewallShapingpolicyInternetServiceSrcIdArrayOutput
	ToFirewallShapingpolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceSrcIdArrayOutput
}

type FirewallShapingpolicyInternetServiceSrcIdArray []FirewallShapingpolicyInternetServiceSrcIdInput

func (FirewallShapingpolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceSrcId)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceSrcIdArray) ToFirewallShapingpolicyInternetServiceSrcIdArrayOutput() FirewallShapingpolicyInternetServiceSrcIdArrayOutput {
	return i.ToFirewallShapingpolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceSrcIdArray) ToFirewallShapingpolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceSrcIdArrayOutput)
}

type FirewallShapingpolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcId)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceSrcIdOutput) ToFirewallShapingpolicyInternetServiceSrcIdOutput() FirewallShapingpolicyInternetServiceSrcIdOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcIdOutput) ToFirewallShapingpolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcIdOutput {
	return o
}

// Internet Service ID.
func (o FirewallShapingpolicyInternetServiceSrcIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyInternetServiceSrcId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallShapingpolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceSrcId)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceSrcIdArrayOutput) ToFirewallShapingpolicyInternetServiceSrcIdArrayOutput() FirewallShapingpolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcIdArrayOutput) ToFirewallShapingpolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyInternetServiceSrcId {
		return vs[0].([]FirewallShapingpolicyInternetServiceSrcId)[vs[1].(int)]
	}).(FirewallShapingpolicyInternetServiceSrcIdOutput)
}

type FirewallShapingpolicyInternetServiceSrcName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyInternetServiceSrcNameInput is an input type that accepts FirewallShapingpolicyInternetServiceSrcNameArgs and FirewallShapingpolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceSrcNameInput` via:
//
//	FirewallShapingpolicyInternetServiceSrcNameArgs{...}
type FirewallShapingpolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceSrcNameOutput() FirewallShapingpolicyInternetServiceSrcNameOutput
	ToFirewallShapingpolicyInternetServiceSrcNameOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceSrcNameOutput
}

type FirewallShapingpolicyInternetServiceSrcNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcName)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceSrcNameArgs) ToFirewallShapingpolicyInternetServiceSrcNameOutput() FirewallShapingpolicyInternetServiceSrcNameOutput {
	return i.ToFirewallShapingpolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceSrcNameArgs) ToFirewallShapingpolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceSrcNameOutput)
}

// FirewallShapingpolicyInternetServiceSrcNameArrayInput is an input type that accepts FirewallShapingpolicyInternetServiceSrcNameArray and FirewallShapingpolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyInternetServiceSrcNameArrayInput` via:
//
//	FirewallShapingpolicyInternetServiceSrcNameArray{ FirewallShapingpolicyInternetServiceSrcNameArgs{...} }
type FirewallShapingpolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyInternetServiceSrcNameArrayOutput() FirewallShapingpolicyInternetServiceSrcNameArrayOutput
	ToFirewallShapingpolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) FirewallShapingpolicyInternetServiceSrcNameArrayOutput
}

type FirewallShapingpolicyInternetServiceSrcNameArray []FirewallShapingpolicyInternetServiceSrcNameInput

func (FirewallShapingpolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceSrcName)(nil)).Elem()
}

func (i FirewallShapingpolicyInternetServiceSrcNameArray) ToFirewallShapingpolicyInternetServiceSrcNameArrayOutput() FirewallShapingpolicyInternetServiceSrcNameArrayOutput {
	return i.ToFirewallShapingpolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyInternetServiceSrcNameArray) ToFirewallShapingpolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyInternetServiceSrcNameArrayOutput)
}

type FirewallShapingpolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcName)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceSrcNameOutput) ToFirewallShapingpolicyInternetServiceSrcNameOutput() FirewallShapingpolicyInternetServiceSrcNameOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcNameOutput) ToFirewallShapingpolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcNameOutput {
	return o
}

// Internet Service name.
func (o FirewallShapingpolicyInternetServiceSrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyInternetServiceSrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyInternetServiceSrcName)(nil)).Elem()
}

func (o FirewallShapingpolicyInternetServiceSrcNameArrayOutput) ToFirewallShapingpolicyInternetServiceSrcNameArrayOutput() FirewallShapingpolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcNameArrayOutput) ToFirewallShapingpolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o FirewallShapingpolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyInternetServiceSrcName {
		return vs[0].([]FirewallShapingpolicyInternetServiceSrcName)[vs[1].(int)]
	}).(FirewallShapingpolicyInternetServiceSrcNameOutput)
}

type FirewallShapingpolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyServiceInput is an input type that accepts FirewallShapingpolicyServiceArgs and FirewallShapingpolicyServiceOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyServiceInput` via:
//
//	FirewallShapingpolicyServiceArgs{...}
type FirewallShapingpolicyServiceInput interface {
	pulumi.Input

	ToFirewallShapingpolicyServiceOutput() FirewallShapingpolicyServiceOutput
	ToFirewallShapingpolicyServiceOutputWithContext(context.Context) FirewallShapingpolicyServiceOutput
}

type FirewallShapingpolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyService)(nil)).Elem()
}

func (i FirewallShapingpolicyServiceArgs) ToFirewallShapingpolicyServiceOutput() FirewallShapingpolicyServiceOutput {
	return i.ToFirewallShapingpolicyServiceOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyServiceArgs) ToFirewallShapingpolicyServiceOutputWithContext(ctx context.Context) FirewallShapingpolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyServiceOutput)
}

// FirewallShapingpolicyServiceArrayInput is an input type that accepts FirewallShapingpolicyServiceArray and FirewallShapingpolicyServiceArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyServiceArrayInput` via:
//
//	FirewallShapingpolicyServiceArray{ FirewallShapingpolicyServiceArgs{...} }
type FirewallShapingpolicyServiceArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyServiceArrayOutput() FirewallShapingpolicyServiceArrayOutput
	ToFirewallShapingpolicyServiceArrayOutputWithContext(context.Context) FirewallShapingpolicyServiceArrayOutput
}

type FirewallShapingpolicyServiceArray []FirewallShapingpolicyServiceInput

func (FirewallShapingpolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyService)(nil)).Elem()
}

func (i FirewallShapingpolicyServiceArray) ToFirewallShapingpolicyServiceArrayOutput() FirewallShapingpolicyServiceArrayOutput {
	return i.ToFirewallShapingpolicyServiceArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyServiceArray) ToFirewallShapingpolicyServiceArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyServiceArrayOutput)
}

type FirewallShapingpolicyServiceOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyService)(nil)).Elem()
}

func (o FirewallShapingpolicyServiceOutput) ToFirewallShapingpolicyServiceOutput() FirewallShapingpolicyServiceOutput {
	return o
}

func (o FirewallShapingpolicyServiceOutput) ToFirewallShapingpolicyServiceOutputWithContext(ctx context.Context) FirewallShapingpolicyServiceOutput {
	return o
}

// Service name.
func (o FirewallShapingpolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyService)(nil)).Elem()
}

func (o FirewallShapingpolicyServiceArrayOutput) ToFirewallShapingpolicyServiceArrayOutput() FirewallShapingpolicyServiceArrayOutput {
	return o
}

func (o FirewallShapingpolicyServiceArrayOutput) ToFirewallShapingpolicyServiceArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyServiceArrayOutput {
	return o
}

func (o FirewallShapingpolicyServiceArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyService {
		return vs[0].([]FirewallShapingpolicyService)[vs[1].(int)]
	}).(FirewallShapingpolicyServiceOutput)
}

type FirewallShapingpolicySrcaddr6 struct {
	// Shaping policy name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicySrcaddr6Input is an input type that accepts FirewallShapingpolicySrcaddr6Args and FirewallShapingpolicySrcaddr6Output values.
// You can construct a concrete instance of `FirewallShapingpolicySrcaddr6Input` via:
//
//	FirewallShapingpolicySrcaddr6Args{...}
type FirewallShapingpolicySrcaddr6Input interface {
	pulumi.Input

	ToFirewallShapingpolicySrcaddr6Output() FirewallShapingpolicySrcaddr6Output
	ToFirewallShapingpolicySrcaddr6OutputWithContext(context.Context) FirewallShapingpolicySrcaddr6Output
}

type FirewallShapingpolicySrcaddr6Args struct {
	// Shaping policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicySrcaddr6)(nil)).Elem()
}

func (i FirewallShapingpolicySrcaddr6Args) ToFirewallShapingpolicySrcaddr6Output() FirewallShapingpolicySrcaddr6Output {
	return i.ToFirewallShapingpolicySrcaddr6OutputWithContext(context.Background())
}

func (i FirewallShapingpolicySrcaddr6Args) ToFirewallShapingpolicySrcaddr6OutputWithContext(ctx context.Context) FirewallShapingpolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicySrcaddr6Output)
}

// FirewallShapingpolicySrcaddr6ArrayInput is an input type that accepts FirewallShapingpolicySrcaddr6Array and FirewallShapingpolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicySrcaddr6ArrayInput` via:
//
//	FirewallShapingpolicySrcaddr6Array{ FirewallShapingpolicySrcaddr6Args{...} }
type FirewallShapingpolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicySrcaddr6ArrayOutput() FirewallShapingpolicySrcaddr6ArrayOutput
	ToFirewallShapingpolicySrcaddr6ArrayOutputWithContext(context.Context) FirewallShapingpolicySrcaddr6ArrayOutput
}

type FirewallShapingpolicySrcaddr6Array []FirewallShapingpolicySrcaddr6Input

func (FirewallShapingpolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicySrcaddr6)(nil)).Elem()
}

func (i FirewallShapingpolicySrcaddr6Array) ToFirewallShapingpolicySrcaddr6ArrayOutput() FirewallShapingpolicySrcaddr6ArrayOutput {
	return i.ToFirewallShapingpolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicySrcaddr6Array) ToFirewallShapingpolicySrcaddr6ArrayOutputWithContext(ctx context.Context) FirewallShapingpolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicySrcaddr6ArrayOutput)
}

type FirewallShapingpolicySrcaddr6Output struct{ *pulumi.OutputState }

func (FirewallShapingpolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicySrcaddr6)(nil)).Elem()
}

func (o FirewallShapingpolicySrcaddr6Output) ToFirewallShapingpolicySrcaddr6Output() FirewallShapingpolicySrcaddr6Output {
	return o
}

func (o FirewallShapingpolicySrcaddr6Output) ToFirewallShapingpolicySrcaddr6OutputWithContext(ctx context.Context) FirewallShapingpolicySrcaddr6Output {
	return o
}

// Shaping policy name.
func (o FirewallShapingpolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicySrcaddr6)(nil)).Elem()
}

func (o FirewallShapingpolicySrcaddr6ArrayOutput) ToFirewallShapingpolicySrcaddr6ArrayOutput() FirewallShapingpolicySrcaddr6ArrayOutput {
	return o
}

func (o FirewallShapingpolicySrcaddr6ArrayOutput) ToFirewallShapingpolicySrcaddr6ArrayOutputWithContext(ctx context.Context) FirewallShapingpolicySrcaddr6ArrayOutput {
	return o
}

func (o FirewallShapingpolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicySrcaddr6 {
		return vs[0].([]FirewallShapingpolicySrcaddr6)[vs[1].(int)]
	}).(FirewallShapingpolicySrcaddr6Output)
}

type FirewallShapingpolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicySrcaddrInput is an input type that accepts FirewallShapingpolicySrcaddrArgs and FirewallShapingpolicySrcaddrOutput values.
// You can construct a concrete instance of `FirewallShapingpolicySrcaddrInput` via:
//
//	FirewallShapingpolicySrcaddrArgs{...}
type FirewallShapingpolicySrcaddrInput interface {
	pulumi.Input

	ToFirewallShapingpolicySrcaddrOutput() FirewallShapingpolicySrcaddrOutput
	ToFirewallShapingpolicySrcaddrOutputWithContext(context.Context) FirewallShapingpolicySrcaddrOutput
}

type FirewallShapingpolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicySrcaddr)(nil)).Elem()
}

func (i FirewallShapingpolicySrcaddrArgs) ToFirewallShapingpolicySrcaddrOutput() FirewallShapingpolicySrcaddrOutput {
	return i.ToFirewallShapingpolicySrcaddrOutputWithContext(context.Background())
}

func (i FirewallShapingpolicySrcaddrArgs) ToFirewallShapingpolicySrcaddrOutputWithContext(ctx context.Context) FirewallShapingpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicySrcaddrOutput)
}

// FirewallShapingpolicySrcaddrArrayInput is an input type that accepts FirewallShapingpolicySrcaddrArray and FirewallShapingpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicySrcaddrArrayInput` via:
//
//	FirewallShapingpolicySrcaddrArray{ FirewallShapingpolicySrcaddrArgs{...} }
type FirewallShapingpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicySrcaddrArrayOutput() FirewallShapingpolicySrcaddrArrayOutput
	ToFirewallShapingpolicySrcaddrArrayOutputWithContext(context.Context) FirewallShapingpolicySrcaddrArrayOutput
}

type FirewallShapingpolicySrcaddrArray []FirewallShapingpolicySrcaddrInput

func (FirewallShapingpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicySrcaddr)(nil)).Elem()
}

func (i FirewallShapingpolicySrcaddrArray) ToFirewallShapingpolicySrcaddrArrayOutput() FirewallShapingpolicySrcaddrArrayOutput {
	return i.ToFirewallShapingpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicySrcaddrArray) ToFirewallShapingpolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallShapingpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicySrcaddrArrayOutput)
}

type FirewallShapingpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicySrcaddr)(nil)).Elem()
}

func (o FirewallShapingpolicySrcaddrOutput) ToFirewallShapingpolicySrcaddrOutput() FirewallShapingpolicySrcaddrOutput {
	return o
}

func (o FirewallShapingpolicySrcaddrOutput) ToFirewallShapingpolicySrcaddrOutputWithContext(ctx context.Context) FirewallShapingpolicySrcaddrOutput {
	return o
}

// Address name.
func (o FirewallShapingpolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicySrcaddr)(nil)).Elem()
}

func (o FirewallShapingpolicySrcaddrArrayOutput) ToFirewallShapingpolicySrcaddrArrayOutput() FirewallShapingpolicySrcaddrArrayOutput {
	return o
}

func (o FirewallShapingpolicySrcaddrArrayOutput) ToFirewallShapingpolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallShapingpolicySrcaddrArrayOutput {
	return o
}

func (o FirewallShapingpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicySrcaddr {
		return vs[0].([]FirewallShapingpolicySrcaddr)[vs[1].(int)]
	}).(FirewallShapingpolicySrcaddrOutput)
}

type FirewallShapingpolicySrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicySrcintfInput is an input type that accepts FirewallShapingpolicySrcintfArgs and FirewallShapingpolicySrcintfOutput values.
// You can construct a concrete instance of `FirewallShapingpolicySrcintfInput` via:
//
//	FirewallShapingpolicySrcintfArgs{...}
type FirewallShapingpolicySrcintfInput interface {
	pulumi.Input

	ToFirewallShapingpolicySrcintfOutput() FirewallShapingpolicySrcintfOutput
	ToFirewallShapingpolicySrcintfOutputWithContext(context.Context) FirewallShapingpolicySrcintfOutput
}

type FirewallShapingpolicySrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicySrcintf)(nil)).Elem()
}

func (i FirewallShapingpolicySrcintfArgs) ToFirewallShapingpolicySrcintfOutput() FirewallShapingpolicySrcintfOutput {
	return i.ToFirewallShapingpolicySrcintfOutputWithContext(context.Background())
}

func (i FirewallShapingpolicySrcintfArgs) ToFirewallShapingpolicySrcintfOutputWithContext(ctx context.Context) FirewallShapingpolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicySrcintfOutput)
}

// FirewallShapingpolicySrcintfArrayInput is an input type that accepts FirewallShapingpolicySrcintfArray and FirewallShapingpolicySrcintfArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicySrcintfArrayInput` via:
//
//	FirewallShapingpolicySrcintfArray{ FirewallShapingpolicySrcintfArgs{...} }
type FirewallShapingpolicySrcintfArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicySrcintfArrayOutput() FirewallShapingpolicySrcintfArrayOutput
	ToFirewallShapingpolicySrcintfArrayOutputWithContext(context.Context) FirewallShapingpolicySrcintfArrayOutput
}

type FirewallShapingpolicySrcintfArray []FirewallShapingpolicySrcintfInput

func (FirewallShapingpolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicySrcintf)(nil)).Elem()
}

func (i FirewallShapingpolicySrcintfArray) ToFirewallShapingpolicySrcintfArrayOutput() FirewallShapingpolicySrcintfArrayOutput {
	return i.ToFirewallShapingpolicySrcintfArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicySrcintfArray) ToFirewallShapingpolicySrcintfArrayOutputWithContext(ctx context.Context) FirewallShapingpolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicySrcintfArrayOutput)
}

type FirewallShapingpolicySrcintfOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicySrcintf)(nil)).Elem()
}

func (o FirewallShapingpolicySrcintfOutput) ToFirewallShapingpolicySrcintfOutput() FirewallShapingpolicySrcintfOutput {
	return o
}

func (o FirewallShapingpolicySrcintfOutput) ToFirewallShapingpolicySrcintfOutputWithContext(ctx context.Context) FirewallShapingpolicySrcintfOutput {
	return o
}

// Interface name.
func (o FirewallShapingpolicySrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicySrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicySrcintf)(nil)).Elem()
}

func (o FirewallShapingpolicySrcintfArrayOutput) ToFirewallShapingpolicySrcintfArrayOutput() FirewallShapingpolicySrcintfArrayOutput {
	return o
}

func (o FirewallShapingpolicySrcintfArrayOutput) ToFirewallShapingpolicySrcintfArrayOutputWithContext(ctx context.Context) FirewallShapingpolicySrcintfArrayOutput {
	return o
}

func (o FirewallShapingpolicySrcintfArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicySrcintf {
		return vs[0].([]FirewallShapingpolicySrcintf)[vs[1].(int)]
	}).(FirewallShapingpolicySrcintfOutput)
}

type FirewallShapingpolicyUrlCategory struct {
	// URL category ID.
	Id *int `pulumi:"id"`
}

// FirewallShapingpolicyUrlCategoryInput is an input type that accepts FirewallShapingpolicyUrlCategoryArgs and FirewallShapingpolicyUrlCategoryOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyUrlCategoryInput` via:
//
//	FirewallShapingpolicyUrlCategoryArgs{...}
type FirewallShapingpolicyUrlCategoryInput interface {
	pulumi.Input

	ToFirewallShapingpolicyUrlCategoryOutput() FirewallShapingpolicyUrlCategoryOutput
	ToFirewallShapingpolicyUrlCategoryOutputWithContext(context.Context) FirewallShapingpolicyUrlCategoryOutput
}

type FirewallShapingpolicyUrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallShapingpolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyUrlCategory)(nil)).Elem()
}

func (i FirewallShapingpolicyUrlCategoryArgs) ToFirewallShapingpolicyUrlCategoryOutput() FirewallShapingpolicyUrlCategoryOutput {
	return i.ToFirewallShapingpolicyUrlCategoryOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyUrlCategoryArgs) ToFirewallShapingpolicyUrlCategoryOutputWithContext(ctx context.Context) FirewallShapingpolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyUrlCategoryOutput)
}

// FirewallShapingpolicyUrlCategoryArrayInput is an input type that accepts FirewallShapingpolicyUrlCategoryArray and FirewallShapingpolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyUrlCategoryArrayInput` via:
//
//	FirewallShapingpolicyUrlCategoryArray{ FirewallShapingpolicyUrlCategoryArgs{...} }
type FirewallShapingpolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyUrlCategoryArrayOutput() FirewallShapingpolicyUrlCategoryArrayOutput
	ToFirewallShapingpolicyUrlCategoryArrayOutputWithContext(context.Context) FirewallShapingpolicyUrlCategoryArrayOutput
}

type FirewallShapingpolicyUrlCategoryArray []FirewallShapingpolicyUrlCategoryInput

func (FirewallShapingpolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyUrlCategory)(nil)).Elem()
}

func (i FirewallShapingpolicyUrlCategoryArray) ToFirewallShapingpolicyUrlCategoryArrayOutput() FirewallShapingpolicyUrlCategoryArrayOutput {
	return i.ToFirewallShapingpolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyUrlCategoryArray) ToFirewallShapingpolicyUrlCategoryArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyUrlCategoryArrayOutput)
}

type FirewallShapingpolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyUrlCategory)(nil)).Elem()
}

func (o FirewallShapingpolicyUrlCategoryOutput) ToFirewallShapingpolicyUrlCategoryOutput() FirewallShapingpolicyUrlCategoryOutput {
	return o
}

func (o FirewallShapingpolicyUrlCategoryOutput) ToFirewallShapingpolicyUrlCategoryOutputWithContext(ctx context.Context) FirewallShapingpolicyUrlCategoryOutput {
	return o
}

// URL category ID.
func (o FirewallShapingpolicyUrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyUrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallShapingpolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyUrlCategory)(nil)).Elem()
}

func (o FirewallShapingpolicyUrlCategoryArrayOutput) ToFirewallShapingpolicyUrlCategoryArrayOutput() FirewallShapingpolicyUrlCategoryArrayOutput {
	return o
}

func (o FirewallShapingpolicyUrlCategoryArrayOutput) ToFirewallShapingpolicyUrlCategoryArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyUrlCategoryArrayOutput {
	return o
}

func (o FirewallShapingpolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyUrlCategory {
		return vs[0].([]FirewallShapingpolicyUrlCategory)[vs[1].(int)]
	}).(FirewallShapingpolicyUrlCategoryOutput)
}

type FirewallShapingpolicyUser struct {
	// User name.
	Name *string `pulumi:"name"`
}

// FirewallShapingpolicyUserInput is an input type that accepts FirewallShapingpolicyUserArgs and FirewallShapingpolicyUserOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyUserInput` via:
//
//	FirewallShapingpolicyUserArgs{...}
type FirewallShapingpolicyUserInput interface {
	pulumi.Input

	ToFirewallShapingpolicyUserOutput() FirewallShapingpolicyUserOutput
	ToFirewallShapingpolicyUserOutputWithContext(context.Context) FirewallShapingpolicyUserOutput
}

type FirewallShapingpolicyUserArgs struct {
	// User name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallShapingpolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyUser)(nil)).Elem()
}

func (i FirewallShapingpolicyUserArgs) ToFirewallShapingpolicyUserOutput() FirewallShapingpolicyUserOutput {
	return i.ToFirewallShapingpolicyUserOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyUserArgs) ToFirewallShapingpolicyUserOutputWithContext(ctx context.Context) FirewallShapingpolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyUserOutput)
}

// FirewallShapingpolicyUserArrayInput is an input type that accepts FirewallShapingpolicyUserArray and FirewallShapingpolicyUserArrayOutput values.
// You can construct a concrete instance of `FirewallShapingpolicyUserArrayInput` via:
//
//	FirewallShapingpolicyUserArray{ FirewallShapingpolicyUserArgs{...} }
type FirewallShapingpolicyUserArrayInput interface {
	pulumi.Input

	ToFirewallShapingpolicyUserArrayOutput() FirewallShapingpolicyUserArrayOutput
	ToFirewallShapingpolicyUserArrayOutputWithContext(context.Context) FirewallShapingpolicyUserArrayOutput
}

type FirewallShapingpolicyUserArray []FirewallShapingpolicyUserInput

func (FirewallShapingpolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyUser)(nil)).Elem()
}

func (i FirewallShapingpolicyUserArray) ToFirewallShapingpolicyUserArrayOutput() FirewallShapingpolicyUserArrayOutput {
	return i.ToFirewallShapingpolicyUserArrayOutputWithContext(context.Background())
}

func (i FirewallShapingpolicyUserArray) ToFirewallShapingpolicyUserArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingpolicyUserArrayOutput)
}

type FirewallShapingpolicyUserOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingpolicyUser)(nil)).Elem()
}

func (o FirewallShapingpolicyUserOutput) ToFirewallShapingpolicyUserOutput() FirewallShapingpolicyUserOutput {
	return o
}

func (o FirewallShapingpolicyUserOutput) ToFirewallShapingpolicyUserOutputWithContext(ctx context.Context) FirewallShapingpolicyUserOutput {
	return o
}

// User name.
func (o FirewallShapingpolicyUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingpolicyUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallShapingpolicyUserArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingpolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingpolicyUser)(nil)).Elem()
}

func (o FirewallShapingpolicyUserArrayOutput) ToFirewallShapingpolicyUserArrayOutput() FirewallShapingpolicyUserArrayOutput {
	return o
}

func (o FirewallShapingpolicyUserArrayOutput) ToFirewallShapingpolicyUserArrayOutputWithContext(ctx context.Context) FirewallShapingpolicyUserArrayOutput {
	return o
}

func (o FirewallShapingpolicyUserArrayOutput) Index(i pulumi.IntInput) FirewallShapingpolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingpolicyUser {
		return vs[0].([]FirewallShapingpolicyUser)[vs[1].(int)]
	}).(FirewallShapingpolicyUserOutput)
}

type FirewallShapingprofileShapingEntry struct {
	// Number of bytes that can be burst at maximum-bandwidth speed. Formula: burst = maximum-bandwidth*burst-in-msec.
	BurstInMsec *int `pulumi:"burstInMsec"`
	// Number of bytes that can be burst as fast as the interface can transmit. Formula: cburst = maximum-bandwidth*cburst-in-msec.
	CburstInMsec *int `pulumi:"cburstInMsec"`
	// Class ID.
	ClassId *int `pulumi:"classId"`
	// Guaranteed bandwith in percentage.
	GuaranteedBandwidthPercentage *int `pulumi:"guaranteedBandwidthPercentage"`
	// ID number.
	Id *int `pulumi:"id"`
	// Hard limit on the real queue size in packets.
	Limit *int `pulumi:"limit"`
	// Average queue size in packets at which RED drop probability is maximal.
	Max *int `pulumi:"max"`
	// Maximum bandwith in percentage.
	MaximumBandwidthPercentage *int `pulumi:"maximumBandwidthPercentage"`
	// Average queue size in packets at which RED drop becomes a possibility.
	Min *int `pulumi:"min"`
	// Priority.
	Priority *string `pulumi:"priority"`
	// Maximum probability (in percentage) for RED marking.
	RedProbability *int `pulumi:"redProbability"`
}

// FirewallShapingprofileShapingEntryInput is an input type that accepts FirewallShapingprofileShapingEntryArgs and FirewallShapingprofileShapingEntryOutput values.
// You can construct a concrete instance of `FirewallShapingprofileShapingEntryInput` via:
//
//	FirewallShapingprofileShapingEntryArgs{...}
type FirewallShapingprofileShapingEntryInput interface {
	pulumi.Input

	ToFirewallShapingprofileShapingEntryOutput() FirewallShapingprofileShapingEntryOutput
	ToFirewallShapingprofileShapingEntryOutputWithContext(context.Context) FirewallShapingprofileShapingEntryOutput
}

type FirewallShapingprofileShapingEntryArgs struct {
	// Number of bytes that can be burst at maximum-bandwidth speed. Formula: burst = maximum-bandwidth*burst-in-msec.
	BurstInMsec pulumi.IntPtrInput `pulumi:"burstInMsec"`
	// Number of bytes that can be burst as fast as the interface can transmit. Formula: cburst = maximum-bandwidth*cburst-in-msec.
	CburstInMsec pulumi.IntPtrInput `pulumi:"cburstInMsec"`
	// Class ID.
	ClassId pulumi.IntPtrInput `pulumi:"classId"`
	// Guaranteed bandwith in percentage.
	GuaranteedBandwidthPercentage pulumi.IntPtrInput `pulumi:"guaranteedBandwidthPercentage"`
	// ID number.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Hard limit on the real queue size in packets.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Average queue size in packets at which RED drop probability is maximal.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Maximum bandwith in percentage.
	MaximumBandwidthPercentage pulumi.IntPtrInput `pulumi:"maximumBandwidthPercentage"`
	// Average queue size in packets at which RED drop becomes a possibility.
	Min pulumi.IntPtrInput `pulumi:"min"`
	// Priority.
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// Maximum probability (in percentage) for RED marking.
	RedProbability pulumi.IntPtrInput `pulumi:"redProbability"`
}

func (FirewallShapingprofileShapingEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingprofileShapingEntry)(nil)).Elem()
}

func (i FirewallShapingprofileShapingEntryArgs) ToFirewallShapingprofileShapingEntryOutput() FirewallShapingprofileShapingEntryOutput {
	return i.ToFirewallShapingprofileShapingEntryOutputWithContext(context.Background())
}

func (i FirewallShapingprofileShapingEntryArgs) ToFirewallShapingprofileShapingEntryOutputWithContext(ctx context.Context) FirewallShapingprofileShapingEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingprofileShapingEntryOutput)
}

// FirewallShapingprofileShapingEntryArrayInput is an input type that accepts FirewallShapingprofileShapingEntryArray and FirewallShapingprofileShapingEntryArrayOutput values.
// You can construct a concrete instance of `FirewallShapingprofileShapingEntryArrayInput` via:
//
//	FirewallShapingprofileShapingEntryArray{ FirewallShapingprofileShapingEntryArgs{...} }
type FirewallShapingprofileShapingEntryArrayInput interface {
	pulumi.Input

	ToFirewallShapingprofileShapingEntryArrayOutput() FirewallShapingprofileShapingEntryArrayOutput
	ToFirewallShapingprofileShapingEntryArrayOutputWithContext(context.Context) FirewallShapingprofileShapingEntryArrayOutput
}

type FirewallShapingprofileShapingEntryArray []FirewallShapingprofileShapingEntryInput

func (FirewallShapingprofileShapingEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingprofileShapingEntry)(nil)).Elem()
}

func (i FirewallShapingprofileShapingEntryArray) ToFirewallShapingprofileShapingEntryArrayOutput() FirewallShapingprofileShapingEntryArrayOutput {
	return i.ToFirewallShapingprofileShapingEntryArrayOutputWithContext(context.Background())
}

func (i FirewallShapingprofileShapingEntryArray) ToFirewallShapingprofileShapingEntryArrayOutputWithContext(ctx context.Context) FirewallShapingprofileShapingEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShapingprofileShapingEntryArrayOutput)
}

type FirewallShapingprofileShapingEntryOutput struct{ *pulumi.OutputState }

func (FirewallShapingprofileShapingEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallShapingprofileShapingEntry)(nil)).Elem()
}

func (o FirewallShapingprofileShapingEntryOutput) ToFirewallShapingprofileShapingEntryOutput() FirewallShapingprofileShapingEntryOutput {
	return o
}

func (o FirewallShapingprofileShapingEntryOutput) ToFirewallShapingprofileShapingEntryOutputWithContext(ctx context.Context) FirewallShapingprofileShapingEntryOutput {
	return o
}

// Number of bytes that can be burst at maximum-bandwidth speed. Formula: burst = maximum-bandwidth*burst-in-msec.
func (o FirewallShapingprofileShapingEntryOutput) BurstInMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *int { return v.BurstInMsec }).(pulumi.IntPtrOutput)
}

// Number of bytes that can be burst as fast as the interface can transmit. Formula: cburst = maximum-bandwidth*cburst-in-msec.
func (o FirewallShapingprofileShapingEntryOutput) CburstInMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *int { return v.CburstInMsec }).(pulumi.IntPtrOutput)
}

// Class ID.
func (o FirewallShapingprofileShapingEntryOutput) ClassId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *int { return v.ClassId }).(pulumi.IntPtrOutput)
}

// Guaranteed bandwith in percentage.
func (o FirewallShapingprofileShapingEntryOutput) GuaranteedBandwidthPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *int { return v.GuaranteedBandwidthPercentage }).(pulumi.IntPtrOutput)
}

// ID number.
func (o FirewallShapingprofileShapingEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Hard limit on the real queue size in packets.
func (o FirewallShapingprofileShapingEntryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// Average queue size in packets at which RED drop probability is maximal.
func (o FirewallShapingprofileShapingEntryOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Maximum bandwith in percentage.
func (o FirewallShapingprofileShapingEntryOutput) MaximumBandwidthPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *int { return v.MaximumBandwidthPercentage }).(pulumi.IntPtrOutput)
}

// Average queue size in packets at which RED drop becomes a possibility.
func (o FirewallShapingprofileShapingEntryOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *int { return v.Min }).(pulumi.IntPtrOutput)
}

// Priority.
func (o FirewallShapingprofileShapingEntryOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// Maximum probability (in percentage) for RED marking.
func (o FirewallShapingprofileShapingEntryOutput) RedProbability() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallShapingprofileShapingEntry) *int { return v.RedProbability }).(pulumi.IntPtrOutput)
}

type FirewallShapingprofileShapingEntryArrayOutput struct{ *pulumi.OutputState }

func (FirewallShapingprofileShapingEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallShapingprofileShapingEntry)(nil)).Elem()
}

func (o FirewallShapingprofileShapingEntryArrayOutput) ToFirewallShapingprofileShapingEntryArrayOutput() FirewallShapingprofileShapingEntryArrayOutput {
	return o
}

func (o FirewallShapingprofileShapingEntryArrayOutput) ToFirewallShapingprofileShapingEntryArrayOutputWithContext(ctx context.Context) FirewallShapingprofileShapingEntryArrayOutput {
	return o
}

func (o FirewallShapingprofileShapingEntryArrayOutput) Index(i pulumi.IntInput) FirewallShapingprofileShapingEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallShapingprofileShapingEntry {
		return vs[0].([]FirewallShapingprofileShapingEntry)[vs[1].(int)]
	}).(FirewallShapingprofileShapingEntryOutput)
}

type FirewallSnifferAnomaly struct {
	// Action taken when the threshold is reached.
	Action *string `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Anomaly name.
	Name *string `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine *string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry *string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog *string `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold *int `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault *int `pulumi:"thresholddefault"`
}

// FirewallSnifferAnomalyInput is an input type that accepts FirewallSnifferAnomalyArgs and FirewallSnifferAnomalyOutput values.
// You can construct a concrete instance of `FirewallSnifferAnomalyInput` via:
//
//	FirewallSnifferAnomalyArgs{...}
type FirewallSnifferAnomalyInput interface {
	pulumi.Input

	ToFirewallSnifferAnomalyOutput() FirewallSnifferAnomalyOutput
	ToFirewallSnifferAnomalyOutputWithContext(context.Context) FirewallSnifferAnomalyOutput
}

type FirewallSnifferAnomalyArgs struct {
	// Action taken when the threshold is reached.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Anomaly name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringPtrInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog pulumi.StringPtrInput `pulumi:"quarantineLog"`
	// Enable/disable this anomaly. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
	Thresholddefault pulumi.IntPtrInput `pulumi:"thresholddefault"`
}

func (FirewallSnifferAnomalyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSnifferAnomaly)(nil)).Elem()
}

func (i FirewallSnifferAnomalyArgs) ToFirewallSnifferAnomalyOutput() FirewallSnifferAnomalyOutput {
	return i.ToFirewallSnifferAnomalyOutputWithContext(context.Background())
}

func (i FirewallSnifferAnomalyArgs) ToFirewallSnifferAnomalyOutputWithContext(ctx context.Context) FirewallSnifferAnomalyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSnifferAnomalyOutput)
}

// FirewallSnifferAnomalyArrayInput is an input type that accepts FirewallSnifferAnomalyArray and FirewallSnifferAnomalyArrayOutput values.
// You can construct a concrete instance of `FirewallSnifferAnomalyArrayInput` via:
//
//	FirewallSnifferAnomalyArray{ FirewallSnifferAnomalyArgs{...} }
type FirewallSnifferAnomalyArrayInput interface {
	pulumi.Input

	ToFirewallSnifferAnomalyArrayOutput() FirewallSnifferAnomalyArrayOutput
	ToFirewallSnifferAnomalyArrayOutputWithContext(context.Context) FirewallSnifferAnomalyArrayOutput
}

type FirewallSnifferAnomalyArray []FirewallSnifferAnomalyInput

func (FirewallSnifferAnomalyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSnifferAnomaly)(nil)).Elem()
}

func (i FirewallSnifferAnomalyArray) ToFirewallSnifferAnomalyArrayOutput() FirewallSnifferAnomalyArrayOutput {
	return i.ToFirewallSnifferAnomalyArrayOutputWithContext(context.Background())
}

func (i FirewallSnifferAnomalyArray) ToFirewallSnifferAnomalyArrayOutputWithContext(ctx context.Context) FirewallSnifferAnomalyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSnifferAnomalyArrayOutput)
}

type FirewallSnifferAnomalyOutput struct{ *pulumi.OutputState }

func (FirewallSnifferAnomalyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSnifferAnomaly)(nil)).Elem()
}

func (o FirewallSnifferAnomalyOutput) ToFirewallSnifferAnomalyOutput() FirewallSnifferAnomalyOutput {
	return o
}

func (o FirewallSnifferAnomalyOutput) ToFirewallSnifferAnomalyOutputWithContext(ctx context.Context) FirewallSnifferAnomalyOutput {
	return o
}

// Action taken when the threshold is reached.
func (o FirewallSnifferAnomalyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSnifferAnomaly) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
func (o FirewallSnifferAnomalyOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSnifferAnomaly) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Anomaly name.
func (o FirewallSnifferAnomalyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSnifferAnomaly) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Quarantine method. Valid values: `none`, `attacker`.
func (o FirewallSnifferAnomalyOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSnifferAnomaly) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o FirewallSnifferAnomalyOutput) QuarantineExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSnifferAnomaly) *string { return v.QuarantineExpiry }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
func (o FirewallSnifferAnomalyOutput) QuarantineLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSnifferAnomaly) *string { return v.QuarantineLog }).(pulumi.StringPtrOutput)
}

// Enable/disable this anomaly. Valid values: `disable`, `enable`.
func (o FirewallSnifferAnomalyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSnifferAnomaly) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Anomaly threshold. Number of detected instances per minute that triggers the anomaly action.
func (o FirewallSnifferAnomalyOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSnifferAnomaly) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a different threshold value assigned to it.
func (o FirewallSnifferAnomalyOutput) Thresholddefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSnifferAnomaly) *int { return v.Thresholddefault }).(pulumi.IntPtrOutput)
}

type FirewallSnifferAnomalyArrayOutput struct{ *pulumi.OutputState }

func (FirewallSnifferAnomalyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSnifferAnomaly)(nil)).Elem()
}

func (o FirewallSnifferAnomalyArrayOutput) ToFirewallSnifferAnomalyArrayOutput() FirewallSnifferAnomalyArrayOutput {
	return o
}

func (o FirewallSnifferAnomalyArrayOutput) ToFirewallSnifferAnomalyArrayOutputWithContext(ctx context.Context) FirewallSnifferAnomalyArrayOutput {
	return o
}

func (o FirewallSnifferAnomalyArrayOutput) Index(i pulumi.IntInput) FirewallSnifferAnomalyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSnifferAnomaly {
		return vs[0].([]FirewallSnifferAnomaly)[vs[1].(int)]
	}).(FirewallSnifferAnomalyOutput)
}

type FirewallSnifferIpThreatfeed struct {
	// Threat feed name.
	Name *string `pulumi:"name"`
}

// FirewallSnifferIpThreatfeedInput is an input type that accepts FirewallSnifferIpThreatfeedArgs and FirewallSnifferIpThreatfeedOutput values.
// You can construct a concrete instance of `FirewallSnifferIpThreatfeedInput` via:
//
//	FirewallSnifferIpThreatfeedArgs{...}
type FirewallSnifferIpThreatfeedInput interface {
	pulumi.Input

	ToFirewallSnifferIpThreatfeedOutput() FirewallSnifferIpThreatfeedOutput
	ToFirewallSnifferIpThreatfeedOutputWithContext(context.Context) FirewallSnifferIpThreatfeedOutput
}

type FirewallSnifferIpThreatfeedArgs struct {
	// Threat feed name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallSnifferIpThreatfeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSnifferIpThreatfeed)(nil)).Elem()
}

func (i FirewallSnifferIpThreatfeedArgs) ToFirewallSnifferIpThreatfeedOutput() FirewallSnifferIpThreatfeedOutput {
	return i.ToFirewallSnifferIpThreatfeedOutputWithContext(context.Background())
}

func (i FirewallSnifferIpThreatfeedArgs) ToFirewallSnifferIpThreatfeedOutputWithContext(ctx context.Context) FirewallSnifferIpThreatfeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSnifferIpThreatfeedOutput)
}

// FirewallSnifferIpThreatfeedArrayInput is an input type that accepts FirewallSnifferIpThreatfeedArray and FirewallSnifferIpThreatfeedArrayOutput values.
// You can construct a concrete instance of `FirewallSnifferIpThreatfeedArrayInput` via:
//
//	FirewallSnifferIpThreatfeedArray{ FirewallSnifferIpThreatfeedArgs{...} }
type FirewallSnifferIpThreatfeedArrayInput interface {
	pulumi.Input

	ToFirewallSnifferIpThreatfeedArrayOutput() FirewallSnifferIpThreatfeedArrayOutput
	ToFirewallSnifferIpThreatfeedArrayOutputWithContext(context.Context) FirewallSnifferIpThreatfeedArrayOutput
}

type FirewallSnifferIpThreatfeedArray []FirewallSnifferIpThreatfeedInput

func (FirewallSnifferIpThreatfeedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSnifferIpThreatfeed)(nil)).Elem()
}

func (i FirewallSnifferIpThreatfeedArray) ToFirewallSnifferIpThreatfeedArrayOutput() FirewallSnifferIpThreatfeedArrayOutput {
	return i.ToFirewallSnifferIpThreatfeedArrayOutputWithContext(context.Background())
}

func (i FirewallSnifferIpThreatfeedArray) ToFirewallSnifferIpThreatfeedArrayOutputWithContext(ctx context.Context) FirewallSnifferIpThreatfeedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSnifferIpThreatfeedArrayOutput)
}

type FirewallSnifferIpThreatfeedOutput struct{ *pulumi.OutputState }

func (FirewallSnifferIpThreatfeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSnifferIpThreatfeed)(nil)).Elem()
}

func (o FirewallSnifferIpThreatfeedOutput) ToFirewallSnifferIpThreatfeedOutput() FirewallSnifferIpThreatfeedOutput {
	return o
}

func (o FirewallSnifferIpThreatfeedOutput) ToFirewallSnifferIpThreatfeedOutputWithContext(ctx context.Context) FirewallSnifferIpThreatfeedOutput {
	return o
}

// Threat feed name.
func (o FirewallSnifferIpThreatfeedOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSnifferIpThreatfeed) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallSnifferIpThreatfeedArrayOutput struct{ *pulumi.OutputState }

func (FirewallSnifferIpThreatfeedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSnifferIpThreatfeed)(nil)).Elem()
}

func (o FirewallSnifferIpThreatfeedArrayOutput) ToFirewallSnifferIpThreatfeedArrayOutput() FirewallSnifferIpThreatfeedArrayOutput {
	return o
}

func (o FirewallSnifferIpThreatfeedArrayOutput) ToFirewallSnifferIpThreatfeedArrayOutputWithContext(ctx context.Context) FirewallSnifferIpThreatfeedArrayOutput {
	return o
}

func (o FirewallSnifferIpThreatfeedArrayOutput) Index(i pulumi.IntInput) FirewallSnifferIpThreatfeedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSnifferIpThreatfeed {
		return vs[0].([]FirewallSnifferIpThreatfeed)[vs[1].(int)]
	}).(FirewallSnifferIpThreatfeedOutput)
}

type FirewallSslsshprofileDot struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// FirewallSslsshprofileDotInput is an input type that accepts FirewallSslsshprofileDotArgs and FirewallSslsshprofileDotOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileDotInput` via:
//
//	FirewallSslsshprofileDotArgs{...}
type FirewallSslsshprofileDotInput interface {
	pulumi.Input

	ToFirewallSslsshprofileDotOutput() FirewallSslsshprofileDotOutput
	ToFirewallSslsshprofileDotOutputWithContext(context.Context) FirewallSslsshprofileDotOutput
}

type FirewallSslsshprofileDotArgs struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (FirewallSslsshprofileDotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileDot)(nil)).Elem()
}

func (i FirewallSslsshprofileDotArgs) ToFirewallSslsshprofileDotOutput() FirewallSslsshprofileDotOutput {
	return i.ToFirewallSslsshprofileDotOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileDotArgs) ToFirewallSslsshprofileDotOutputWithContext(ctx context.Context) FirewallSslsshprofileDotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileDotOutput)
}

func (i FirewallSslsshprofileDotArgs) ToFirewallSslsshprofileDotPtrOutput() FirewallSslsshprofileDotPtrOutput {
	return i.ToFirewallSslsshprofileDotPtrOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileDotArgs) ToFirewallSslsshprofileDotPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileDotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileDotOutput).ToFirewallSslsshprofileDotPtrOutputWithContext(ctx)
}

// FirewallSslsshprofileDotPtrInput is an input type that accepts FirewallSslsshprofileDotArgs, FirewallSslsshprofileDotPtr and FirewallSslsshprofileDotPtrOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileDotPtrInput` via:
//
//	        FirewallSslsshprofileDotArgs{...}
//
//	or:
//
//	        nil
type FirewallSslsshprofileDotPtrInput interface {
	pulumi.Input

	ToFirewallSslsshprofileDotPtrOutput() FirewallSslsshprofileDotPtrOutput
	ToFirewallSslsshprofileDotPtrOutputWithContext(context.Context) FirewallSslsshprofileDotPtrOutput
}

type firewallSslsshprofileDotPtrType FirewallSslsshprofileDotArgs

func FirewallSslsshprofileDotPtr(v *FirewallSslsshprofileDotArgs) FirewallSslsshprofileDotPtrInput {
	return (*firewallSslsshprofileDotPtrType)(v)
}

func (*firewallSslsshprofileDotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileDot)(nil)).Elem()
}

func (i *firewallSslsshprofileDotPtrType) ToFirewallSslsshprofileDotPtrOutput() FirewallSslsshprofileDotPtrOutput {
	return i.ToFirewallSslsshprofileDotPtrOutputWithContext(context.Background())
}

func (i *firewallSslsshprofileDotPtrType) ToFirewallSslsshprofileDotPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileDotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileDotPtrOutput)
}

type FirewallSslsshprofileDotOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileDotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileDot)(nil)).Elem()
}

func (o FirewallSslsshprofileDotOutput) ToFirewallSslsshprofileDotOutput() FirewallSslsshprofileDotOutput {
	return o
}

func (o FirewallSslsshprofileDotOutput) ToFirewallSslsshprofileDotOutputWithContext(ctx context.Context) FirewallSslsshprofileDotOutput {
	return o
}

func (o FirewallSslsshprofileDotOutput) ToFirewallSslsshprofileDotPtrOutput() FirewallSslsshprofileDotPtrOutput {
	return o.ToFirewallSslsshprofileDotPtrOutputWithContext(context.Background())
}

func (o FirewallSslsshprofileDotOutput) ToFirewallSslsshprofileDotPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileDotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallSslsshprofileDot) *FirewallSslsshprofileDot {
		return &v
	}).(FirewallSslsshprofileDotPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileDotOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileDotOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileDotOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileDotOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofileDotOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileDotOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileDotOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileDotOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileDotOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileDotOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileDotOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileDotOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileDot) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileDotPtrOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileDotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileDot)(nil)).Elem()
}

func (o FirewallSslsshprofileDotPtrOutput) ToFirewallSslsshprofileDotPtrOutput() FirewallSslsshprofileDotPtrOutput {
	return o
}

func (o FirewallSslsshprofileDotPtrOutput) ToFirewallSslsshprofileDotPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileDotPtrOutput {
	return o
}

func (o FirewallSslsshprofileDotPtrOutput) Elem() FirewallSslsshprofileDotOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) FirewallSslsshprofileDot {
		if v != nil {
			return *v
		}
		var ret FirewallSslsshprofileDot
		return ret
	}).(FirewallSslsshprofileDotOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileDotPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileDotPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileDotPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileDotPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofileDotPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileDotPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileDotPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileDotPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileDotPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileDotPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileDotPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is not issued by a trusted CA. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileDotPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileDot) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileFtps struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion *string `pulumi:"minAllowedSslVersion"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// FirewallSslsshprofileFtpsInput is an input type that accepts FirewallSslsshprofileFtpsArgs and FirewallSslsshprofileFtpsOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileFtpsInput` via:
//
//	FirewallSslsshprofileFtpsArgs{...}
type FirewallSslsshprofileFtpsInput interface {
	pulumi.Input

	ToFirewallSslsshprofileFtpsOutput() FirewallSslsshprofileFtpsOutput
	ToFirewallSslsshprofileFtpsOutputWithContext(context.Context) FirewallSslsshprofileFtpsOutput
}

type FirewallSslsshprofileFtpsArgs struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion pulumi.StringPtrInput `pulumi:"minAllowedSslVersion"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (FirewallSslsshprofileFtpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileFtps)(nil)).Elem()
}

func (i FirewallSslsshprofileFtpsArgs) ToFirewallSslsshprofileFtpsOutput() FirewallSslsshprofileFtpsOutput {
	return i.ToFirewallSslsshprofileFtpsOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileFtpsArgs) ToFirewallSslsshprofileFtpsOutputWithContext(ctx context.Context) FirewallSslsshprofileFtpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileFtpsOutput)
}

func (i FirewallSslsshprofileFtpsArgs) ToFirewallSslsshprofileFtpsPtrOutput() FirewallSslsshprofileFtpsPtrOutput {
	return i.ToFirewallSslsshprofileFtpsPtrOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileFtpsArgs) ToFirewallSslsshprofileFtpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileFtpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileFtpsOutput).ToFirewallSslsshprofileFtpsPtrOutputWithContext(ctx)
}

// FirewallSslsshprofileFtpsPtrInput is an input type that accepts FirewallSslsshprofileFtpsArgs, FirewallSslsshprofileFtpsPtr and FirewallSslsshprofileFtpsPtrOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileFtpsPtrInput` via:
//
//	        FirewallSslsshprofileFtpsArgs{...}
//
//	or:
//
//	        nil
type FirewallSslsshprofileFtpsPtrInput interface {
	pulumi.Input

	ToFirewallSslsshprofileFtpsPtrOutput() FirewallSslsshprofileFtpsPtrOutput
	ToFirewallSslsshprofileFtpsPtrOutputWithContext(context.Context) FirewallSslsshprofileFtpsPtrOutput
}

type firewallSslsshprofileFtpsPtrType FirewallSslsshprofileFtpsArgs

func FirewallSslsshprofileFtpsPtr(v *FirewallSslsshprofileFtpsArgs) FirewallSslsshprofileFtpsPtrInput {
	return (*firewallSslsshprofileFtpsPtrType)(v)
}

func (*firewallSslsshprofileFtpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileFtps)(nil)).Elem()
}

func (i *firewallSslsshprofileFtpsPtrType) ToFirewallSslsshprofileFtpsPtrOutput() FirewallSslsshprofileFtpsPtrOutput {
	return i.ToFirewallSslsshprofileFtpsPtrOutputWithContext(context.Background())
}

func (i *firewallSslsshprofileFtpsPtrType) ToFirewallSslsshprofileFtpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileFtpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileFtpsPtrOutput)
}

type FirewallSslsshprofileFtpsOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileFtpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileFtps)(nil)).Elem()
}

func (o FirewallSslsshprofileFtpsOutput) ToFirewallSslsshprofileFtpsOutput() FirewallSslsshprofileFtpsOutput {
	return o
}

func (o FirewallSslsshprofileFtpsOutput) ToFirewallSslsshprofileFtpsOutputWithContext(ctx context.Context) FirewallSslsshprofileFtpsOutput {
	return o
}

func (o FirewallSslsshprofileFtpsOutput) ToFirewallSslsshprofileFtpsPtrOutput() FirewallSslsshprofileFtpsPtrOutput {
	return o.ToFirewallSslsshprofileFtpsPtrOutputWithContext(context.Background())
}

func (o FirewallSslsshprofileFtpsOutput) ToFirewallSslsshprofileFtpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileFtpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallSslsshprofileFtps) *FirewallSslsshprofileFtps {
		return &v
	}).(FirewallSslsshprofileFtpsPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileFtpsOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileFtpsOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileFtpsOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileFtpsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileFtpsOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileFtpsOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallSslsshprofileFtpsOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.MinAllowedSslVersion }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofileFtpsOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileFtpsOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileFtpsOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileFtpsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileFtpsOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileFtpsOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileFtpsOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileFtpsOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileFtpsOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileFtps) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileFtpsPtrOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileFtpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileFtps)(nil)).Elem()
}

func (o FirewallSslsshprofileFtpsPtrOutput) ToFirewallSslsshprofileFtpsPtrOutput() FirewallSslsshprofileFtpsPtrOutput {
	return o
}

func (o FirewallSslsshprofileFtpsPtrOutput) ToFirewallSslsshprofileFtpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileFtpsPtrOutput {
	return o
}

func (o FirewallSslsshprofileFtpsPtrOutput) Elem() FirewallSslsshprofileFtpsOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) FirewallSslsshprofileFtps {
		if v != nil {
			return *v
		}
		var ret FirewallSslsshprofileFtps
		return ret
	}).(FirewallSslsshprofileFtpsOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileFtpsPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileFtpsPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileFtpsPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileFtpsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileFtpsPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileFtpsPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallSslsshprofileFtpsPtrOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.MinAllowedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofileFtpsPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileFtpsPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileFtpsPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileFtpsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileFtpsPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileFtpsPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileFtpsPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileFtpsPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileFtpsPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileFtps) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileHttps struct {
	// Action based on certificate probe failure. Valid values: `allow`, `block`.
	CertProbeFailure *string `pulumi:"certProbeFailure"`
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion *string `pulumi:"minAllowedSslVersion"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// FirewallSslsshprofileHttpsInput is an input type that accepts FirewallSslsshprofileHttpsArgs and FirewallSslsshprofileHttpsOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileHttpsInput` via:
//
//	FirewallSslsshprofileHttpsArgs{...}
type FirewallSslsshprofileHttpsInput interface {
	pulumi.Input

	ToFirewallSslsshprofileHttpsOutput() FirewallSslsshprofileHttpsOutput
	ToFirewallSslsshprofileHttpsOutputWithContext(context.Context) FirewallSslsshprofileHttpsOutput
}

type FirewallSslsshprofileHttpsArgs struct {
	// Action based on certificate probe failure. Valid values: `allow`, `block`.
	CertProbeFailure pulumi.StringPtrInput `pulumi:"certProbeFailure"`
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion pulumi.StringPtrInput `pulumi:"minAllowedSslVersion"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (FirewallSslsshprofileHttpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileHttps)(nil)).Elem()
}

func (i FirewallSslsshprofileHttpsArgs) ToFirewallSslsshprofileHttpsOutput() FirewallSslsshprofileHttpsOutput {
	return i.ToFirewallSslsshprofileHttpsOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileHttpsArgs) ToFirewallSslsshprofileHttpsOutputWithContext(ctx context.Context) FirewallSslsshprofileHttpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileHttpsOutput)
}

func (i FirewallSslsshprofileHttpsArgs) ToFirewallSslsshprofileHttpsPtrOutput() FirewallSslsshprofileHttpsPtrOutput {
	return i.ToFirewallSslsshprofileHttpsPtrOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileHttpsArgs) ToFirewallSslsshprofileHttpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileHttpsOutput).ToFirewallSslsshprofileHttpsPtrOutputWithContext(ctx)
}

// FirewallSslsshprofileHttpsPtrInput is an input type that accepts FirewallSslsshprofileHttpsArgs, FirewallSslsshprofileHttpsPtr and FirewallSslsshprofileHttpsPtrOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileHttpsPtrInput` via:
//
//	        FirewallSslsshprofileHttpsArgs{...}
//
//	or:
//
//	        nil
type FirewallSslsshprofileHttpsPtrInput interface {
	pulumi.Input

	ToFirewallSslsshprofileHttpsPtrOutput() FirewallSslsshprofileHttpsPtrOutput
	ToFirewallSslsshprofileHttpsPtrOutputWithContext(context.Context) FirewallSslsshprofileHttpsPtrOutput
}

type firewallSslsshprofileHttpsPtrType FirewallSslsshprofileHttpsArgs

func FirewallSslsshprofileHttpsPtr(v *FirewallSslsshprofileHttpsArgs) FirewallSslsshprofileHttpsPtrInput {
	return (*firewallSslsshprofileHttpsPtrType)(v)
}

func (*firewallSslsshprofileHttpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileHttps)(nil)).Elem()
}

func (i *firewallSslsshprofileHttpsPtrType) ToFirewallSslsshprofileHttpsPtrOutput() FirewallSslsshprofileHttpsPtrOutput {
	return i.ToFirewallSslsshprofileHttpsPtrOutputWithContext(context.Background())
}

func (i *firewallSslsshprofileHttpsPtrType) ToFirewallSslsshprofileHttpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileHttpsPtrOutput)
}

type FirewallSslsshprofileHttpsOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileHttpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileHttps)(nil)).Elem()
}

func (o FirewallSslsshprofileHttpsOutput) ToFirewallSslsshprofileHttpsOutput() FirewallSslsshprofileHttpsOutput {
	return o
}

func (o FirewallSslsshprofileHttpsOutput) ToFirewallSslsshprofileHttpsOutputWithContext(ctx context.Context) FirewallSslsshprofileHttpsOutput {
	return o
}

func (o FirewallSslsshprofileHttpsOutput) ToFirewallSslsshprofileHttpsPtrOutput() FirewallSslsshprofileHttpsPtrOutput {
	return o.ToFirewallSslsshprofileHttpsPtrOutputWithContext(context.Background())
}

func (o FirewallSslsshprofileHttpsOutput) ToFirewallSslsshprofileHttpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileHttpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallSslsshprofileHttps) *FirewallSslsshprofileHttps {
		return &v
	}).(FirewallSslsshprofileHttpsPtrOutput)
}

// Action based on certificate probe failure. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileHttpsOutput) CertProbeFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.CertProbeFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileHttpsOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileHttpsOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileHttpsOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileHttpsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileHttpsOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileHttpsOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallSslsshprofileHttpsOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.MinAllowedSslVersion }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofileHttpsOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofileHttpsOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileHttpsOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileHttpsOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
func (o FirewallSslsshprofileHttpsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileHttpsOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileHttpsOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileHttpsOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileHttpsOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileHttpsOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileHttps) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileHttpsPtrOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileHttpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileHttps)(nil)).Elem()
}

func (o FirewallSslsshprofileHttpsPtrOutput) ToFirewallSslsshprofileHttpsPtrOutput() FirewallSslsshprofileHttpsPtrOutput {
	return o
}

func (o FirewallSslsshprofileHttpsPtrOutput) ToFirewallSslsshprofileHttpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileHttpsPtrOutput {
	return o
}

func (o FirewallSslsshprofileHttpsPtrOutput) Elem() FirewallSslsshprofileHttpsOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) FirewallSslsshprofileHttps {
		if v != nil {
			return *v
		}
		var ret FirewallSslsshprofileHttps
		return ret
	}).(FirewallSslsshprofileHttpsOutput)
}

// Action based on certificate probe failure. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileHttpsPtrOutput) CertProbeFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.CertProbeFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileHttpsPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileHttpsPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileHttpsPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileHttpsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileHttpsPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileHttpsPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallSslsshprofileHttpsPtrOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.MinAllowedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofileHttpsPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofileHttpsPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileHttpsPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileHttpsPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
func (o FirewallSslsshprofileHttpsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileHttpsPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileHttpsPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileHttpsPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileHttpsPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileHttpsPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileHttps) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileImaps struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// FirewallSslsshprofileImapsInput is an input type that accepts FirewallSslsshprofileImapsArgs and FirewallSslsshprofileImapsOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileImapsInput` via:
//
//	FirewallSslsshprofileImapsArgs{...}
type FirewallSslsshprofileImapsInput interface {
	pulumi.Input

	ToFirewallSslsshprofileImapsOutput() FirewallSslsshprofileImapsOutput
	ToFirewallSslsshprofileImapsOutputWithContext(context.Context) FirewallSslsshprofileImapsOutput
}

type FirewallSslsshprofileImapsArgs struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (FirewallSslsshprofileImapsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileImaps)(nil)).Elem()
}

func (i FirewallSslsshprofileImapsArgs) ToFirewallSslsshprofileImapsOutput() FirewallSslsshprofileImapsOutput {
	return i.ToFirewallSslsshprofileImapsOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileImapsArgs) ToFirewallSslsshprofileImapsOutputWithContext(ctx context.Context) FirewallSslsshprofileImapsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileImapsOutput)
}

func (i FirewallSslsshprofileImapsArgs) ToFirewallSslsshprofileImapsPtrOutput() FirewallSslsshprofileImapsPtrOutput {
	return i.ToFirewallSslsshprofileImapsPtrOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileImapsArgs) ToFirewallSslsshprofileImapsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileImapsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileImapsOutput).ToFirewallSslsshprofileImapsPtrOutputWithContext(ctx)
}

// FirewallSslsshprofileImapsPtrInput is an input type that accepts FirewallSslsshprofileImapsArgs, FirewallSslsshprofileImapsPtr and FirewallSslsshprofileImapsPtrOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileImapsPtrInput` via:
//
//	        FirewallSslsshprofileImapsArgs{...}
//
//	or:
//
//	        nil
type FirewallSslsshprofileImapsPtrInput interface {
	pulumi.Input

	ToFirewallSslsshprofileImapsPtrOutput() FirewallSslsshprofileImapsPtrOutput
	ToFirewallSslsshprofileImapsPtrOutputWithContext(context.Context) FirewallSslsshprofileImapsPtrOutput
}

type firewallSslsshprofileImapsPtrType FirewallSslsshprofileImapsArgs

func FirewallSslsshprofileImapsPtr(v *FirewallSslsshprofileImapsArgs) FirewallSslsshprofileImapsPtrInput {
	return (*firewallSslsshprofileImapsPtrType)(v)
}

func (*firewallSslsshprofileImapsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileImaps)(nil)).Elem()
}

func (i *firewallSslsshprofileImapsPtrType) ToFirewallSslsshprofileImapsPtrOutput() FirewallSslsshprofileImapsPtrOutput {
	return i.ToFirewallSslsshprofileImapsPtrOutputWithContext(context.Background())
}

func (i *firewallSslsshprofileImapsPtrType) ToFirewallSslsshprofileImapsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileImapsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileImapsPtrOutput)
}

type FirewallSslsshprofileImapsOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileImapsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileImaps)(nil)).Elem()
}

func (o FirewallSslsshprofileImapsOutput) ToFirewallSslsshprofileImapsOutput() FirewallSslsshprofileImapsOutput {
	return o
}

func (o FirewallSslsshprofileImapsOutput) ToFirewallSslsshprofileImapsOutputWithContext(ctx context.Context) FirewallSslsshprofileImapsOutput {
	return o
}

func (o FirewallSslsshprofileImapsOutput) ToFirewallSslsshprofileImapsPtrOutput() FirewallSslsshprofileImapsPtrOutput {
	return o.ToFirewallSslsshprofileImapsPtrOutputWithContext(context.Background())
}

func (o FirewallSslsshprofileImapsOutput) ToFirewallSslsshprofileImapsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileImapsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallSslsshprofileImaps) *FirewallSslsshprofileImaps {
		return &v
	}).(FirewallSslsshprofileImapsPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileImapsOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileImapsOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileImapsOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileImapsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileImapsOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileImapsOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofileImapsOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofileImapsOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileImapsOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileImapsOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileImapsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileImapsOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileImapsOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileImapsOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileImapsOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileImapsOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileImaps) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileImapsPtrOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileImapsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileImaps)(nil)).Elem()
}

func (o FirewallSslsshprofileImapsPtrOutput) ToFirewallSslsshprofileImapsPtrOutput() FirewallSslsshprofileImapsPtrOutput {
	return o
}

func (o FirewallSslsshprofileImapsPtrOutput) ToFirewallSslsshprofileImapsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileImapsPtrOutput {
	return o
}

func (o FirewallSslsshprofileImapsPtrOutput) Elem() FirewallSslsshprofileImapsOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) FirewallSslsshprofileImaps {
		if v != nil {
			return *v
		}
		var ret FirewallSslsshprofileImaps
		return ret
	}).(FirewallSslsshprofileImapsOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileImapsPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileImapsPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileImapsPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileImapsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileImapsPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileImapsPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofileImapsPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofileImapsPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileImapsPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileImapsPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileImapsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileImapsPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileImapsPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileImapsPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileImapsPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileImapsPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileImaps) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofilePop3s struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	//
	// The `pop3s` block supports:
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// FirewallSslsshprofilePop3sInput is an input type that accepts FirewallSslsshprofilePop3sArgs and FirewallSslsshprofilePop3sOutput values.
// You can construct a concrete instance of `FirewallSslsshprofilePop3sInput` via:
//
//	FirewallSslsshprofilePop3sArgs{...}
type FirewallSslsshprofilePop3sInput interface {
	pulumi.Input

	ToFirewallSslsshprofilePop3sOutput() FirewallSslsshprofilePop3sOutput
	ToFirewallSslsshprofilePop3sOutputWithContext(context.Context) FirewallSslsshprofilePop3sOutput
}

type FirewallSslsshprofilePop3sArgs struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	//
	// The `pop3s` block supports:
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (FirewallSslsshprofilePop3sArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofilePop3s)(nil)).Elem()
}

func (i FirewallSslsshprofilePop3sArgs) ToFirewallSslsshprofilePop3sOutput() FirewallSslsshprofilePop3sOutput {
	return i.ToFirewallSslsshprofilePop3sOutputWithContext(context.Background())
}

func (i FirewallSslsshprofilePop3sArgs) ToFirewallSslsshprofilePop3sOutputWithContext(ctx context.Context) FirewallSslsshprofilePop3sOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofilePop3sOutput)
}

func (i FirewallSslsshprofilePop3sArgs) ToFirewallSslsshprofilePop3sPtrOutput() FirewallSslsshprofilePop3sPtrOutput {
	return i.ToFirewallSslsshprofilePop3sPtrOutputWithContext(context.Background())
}

func (i FirewallSslsshprofilePop3sArgs) ToFirewallSslsshprofilePop3sPtrOutputWithContext(ctx context.Context) FirewallSslsshprofilePop3sPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofilePop3sOutput).ToFirewallSslsshprofilePop3sPtrOutputWithContext(ctx)
}

// FirewallSslsshprofilePop3sPtrInput is an input type that accepts FirewallSslsshprofilePop3sArgs, FirewallSslsshprofilePop3sPtr and FirewallSslsshprofilePop3sPtrOutput values.
// You can construct a concrete instance of `FirewallSslsshprofilePop3sPtrInput` via:
//
//	        FirewallSslsshprofilePop3sArgs{...}
//
//	or:
//
//	        nil
type FirewallSslsshprofilePop3sPtrInput interface {
	pulumi.Input

	ToFirewallSslsshprofilePop3sPtrOutput() FirewallSslsshprofilePop3sPtrOutput
	ToFirewallSslsshprofilePop3sPtrOutputWithContext(context.Context) FirewallSslsshprofilePop3sPtrOutput
}

type firewallSslsshprofilePop3sPtrType FirewallSslsshprofilePop3sArgs

func FirewallSslsshprofilePop3sPtr(v *FirewallSslsshprofilePop3sArgs) FirewallSslsshprofilePop3sPtrInput {
	return (*firewallSslsshprofilePop3sPtrType)(v)
}

func (*firewallSslsshprofilePop3sPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofilePop3s)(nil)).Elem()
}

func (i *firewallSslsshprofilePop3sPtrType) ToFirewallSslsshprofilePop3sPtrOutput() FirewallSslsshprofilePop3sPtrOutput {
	return i.ToFirewallSslsshprofilePop3sPtrOutputWithContext(context.Background())
}

func (i *firewallSslsshprofilePop3sPtrType) ToFirewallSslsshprofilePop3sPtrOutputWithContext(ctx context.Context) FirewallSslsshprofilePop3sPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofilePop3sPtrOutput)
}

type FirewallSslsshprofilePop3sOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofilePop3sOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofilePop3s)(nil)).Elem()
}

func (o FirewallSslsshprofilePop3sOutput) ToFirewallSslsshprofilePop3sOutput() FirewallSslsshprofilePop3sOutput {
	return o
}

func (o FirewallSslsshprofilePop3sOutput) ToFirewallSslsshprofilePop3sOutputWithContext(ctx context.Context) FirewallSslsshprofilePop3sOutput {
	return o
}

func (o FirewallSslsshprofilePop3sOutput) ToFirewallSslsshprofilePop3sPtrOutput() FirewallSslsshprofilePop3sPtrOutput {
	return o.ToFirewallSslsshprofilePop3sPtrOutputWithContext(context.Background())
}

func (o FirewallSslsshprofilePop3sOutput) ToFirewallSslsshprofilePop3sPtrOutputWithContext(ctx context.Context) FirewallSslsshprofilePop3sPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallSslsshprofilePop3s) *FirewallSslsshprofilePop3s {
		return &v
	}).(FirewallSslsshprofilePop3sPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofilePop3sOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofilePop3sOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofilePop3sOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofilePop3sOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofilePop3sOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofilePop3sOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofilePop3sOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofilePop3sOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofilePop3sOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
//
// The `pop3s` block supports:
func (o FirewallSslsshprofilePop3sOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
func (o FirewallSslsshprofilePop3sOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofilePop3sOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofilePop3sOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofilePop3sOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofilePop3sOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofilePop3sOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofilePop3s) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofilePop3sPtrOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofilePop3sPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofilePop3s)(nil)).Elem()
}

func (o FirewallSslsshprofilePop3sPtrOutput) ToFirewallSslsshprofilePop3sPtrOutput() FirewallSslsshprofilePop3sPtrOutput {
	return o
}

func (o FirewallSslsshprofilePop3sPtrOutput) ToFirewallSslsshprofilePop3sPtrOutputWithContext(ctx context.Context) FirewallSslsshprofilePop3sPtrOutput {
	return o
}

func (o FirewallSslsshprofilePop3sPtrOutput) Elem() FirewallSslsshprofilePop3sOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) FirewallSslsshprofilePop3s {
		if v != nil {
			return *v
		}
		var ret FirewallSslsshprofilePop3s
		return ret
	}).(FirewallSslsshprofilePop3sOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofilePop3sPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofilePop3sPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofilePop3sPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofilePop3sPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofilePop3sPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofilePop3sPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofilePop3sPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofilePop3sPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofilePop3sPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
//
// The `pop3s` block supports:
func (o FirewallSslsshprofilePop3sPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
func (o FirewallSslsshprofilePop3sPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofilePop3sPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofilePop3sPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofilePop3sPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofilePop3sPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofilePop3sPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofilePop3s) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileSmtps struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// FirewallSslsshprofileSmtpsInput is an input type that accepts FirewallSslsshprofileSmtpsArgs and FirewallSslsshprofileSmtpsOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileSmtpsInput` via:
//
//	FirewallSslsshprofileSmtpsArgs{...}
type FirewallSslsshprofileSmtpsInput interface {
	pulumi.Input

	ToFirewallSslsshprofileSmtpsOutput() FirewallSslsshprofileSmtpsOutput
	ToFirewallSslsshprofileSmtpsOutputWithContext(context.Context) FirewallSslsshprofileSmtpsOutput
}

type FirewallSslsshprofileSmtpsArgs struct {
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (FirewallSslsshprofileSmtpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileSmtps)(nil)).Elem()
}

func (i FirewallSslsshprofileSmtpsArgs) ToFirewallSslsshprofileSmtpsOutput() FirewallSslsshprofileSmtpsOutput {
	return i.ToFirewallSslsshprofileSmtpsOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileSmtpsArgs) ToFirewallSslsshprofileSmtpsOutputWithContext(ctx context.Context) FirewallSslsshprofileSmtpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSmtpsOutput)
}

func (i FirewallSslsshprofileSmtpsArgs) ToFirewallSslsshprofileSmtpsPtrOutput() FirewallSslsshprofileSmtpsPtrOutput {
	return i.ToFirewallSslsshprofileSmtpsPtrOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileSmtpsArgs) ToFirewallSslsshprofileSmtpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSmtpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSmtpsOutput).ToFirewallSslsshprofileSmtpsPtrOutputWithContext(ctx)
}

// FirewallSslsshprofileSmtpsPtrInput is an input type that accepts FirewallSslsshprofileSmtpsArgs, FirewallSslsshprofileSmtpsPtr and FirewallSslsshprofileSmtpsPtrOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileSmtpsPtrInput` via:
//
//	        FirewallSslsshprofileSmtpsArgs{...}
//
//	or:
//
//	        nil
type FirewallSslsshprofileSmtpsPtrInput interface {
	pulumi.Input

	ToFirewallSslsshprofileSmtpsPtrOutput() FirewallSslsshprofileSmtpsPtrOutput
	ToFirewallSslsshprofileSmtpsPtrOutputWithContext(context.Context) FirewallSslsshprofileSmtpsPtrOutput
}

type firewallSslsshprofileSmtpsPtrType FirewallSslsshprofileSmtpsArgs

func FirewallSslsshprofileSmtpsPtr(v *FirewallSslsshprofileSmtpsArgs) FirewallSslsshprofileSmtpsPtrInput {
	return (*firewallSslsshprofileSmtpsPtrType)(v)
}

func (*firewallSslsshprofileSmtpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileSmtps)(nil)).Elem()
}

func (i *firewallSslsshprofileSmtpsPtrType) ToFirewallSslsshprofileSmtpsPtrOutput() FirewallSslsshprofileSmtpsPtrOutput {
	return i.ToFirewallSslsshprofileSmtpsPtrOutputWithContext(context.Background())
}

func (i *firewallSslsshprofileSmtpsPtrType) ToFirewallSslsshprofileSmtpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSmtpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSmtpsPtrOutput)
}

type FirewallSslsshprofileSmtpsOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileSmtpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileSmtps)(nil)).Elem()
}

func (o FirewallSslsshprofileSmtpsOutput) ToFirewallSslsshprofileSmtpsOutput() FirewallSslsshprofileSmtpsOutput {
	return o
}

func (o FirewallSslsshprofileSmtpsOutput) ToFirewallSslsshprofileSmtpsOutputWithContext(ctx context.Context) FirewallSslsshprofileSmtpsOutput {
	return o
}

func (o FirewallSslsshprofileSmtpsOutput) ToFirewallSslsshprofileSmtpsPtrOutput() FirewallSslsshprofileSmtpsPtrOutput {
	return o.ToFirewallSslsshprofileSmtpsPtrOutputWithContext(context.Background())
}

func (o FirewallSslsshprofileSmtpsOutput) ToFirewallSslsshprofileSmtpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSmtpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallSslsshprofileSmtps) *FirewallSslsshprofileSmtps {
		return &v
	}).(FirewallSslsshprofileSmtpsPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSmtpsOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSmtpsOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSmtpsOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSmtpsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSmtpsOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSmtpsOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofileSmtpsOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofileSmtpsOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSmtpsOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileSmtpsOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileSmtpsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSmtpsOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSmtpsOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSmtpsOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileSmtpsOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSmtpsOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSmtps) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileSmtpsPtrOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileSmtpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileSmtps)(nil)).Elem()
}

func (o FirewallSslsshprofileSmtpsPtrOutput) ToFirewallSslsshprofileSmtpsPtrOutput() FirewallSslsshprofileSmtpsPtrOutput {
	return o
}

func (o FirewallSslsshprofileSmtpsPtrOutput) ToFirewallSslsshprofileSmtpsPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSmtpsPtrOutput {
	return o
}

func (o FirewallSslsshprofileSmtpsPtrOutput) Elem() FirewallSslsshprofileSmtpsOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) FirewallSslsshprofileSmtps {
		if v != nil {
			return *v
		}
		var ret FirewallSslsshprofileSmtps
		return ret
	}).(FirewallSslsshprofileSmtpsOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSmtpsPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSmtpsPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSmtpsPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSmtpsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSmtpsPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSmtpsPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofileSmtpsPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofileSmtpsPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSmtpsPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileSmtpsPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileSmtpsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSmtpsPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSmtpsPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSmtpsPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileSmtpsPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSmtpsPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSmtps) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileSsh struct {
	// Level of SSL inspection. Valid values: `disable`, `deep-inspection`.
	InspectAll *string `pulumi:"inspectAll"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports *string `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake *string `pulumi:"proxyAfterTcpHandshake"`
	// Relative strength of encryption algorithms accepted during negotiation. Valid values: `compatible`, `high-encryption`.
	SshAlgorithm *string `pulumi:"sshAlgorithm"`
	// Enable/disable SSH policy check. Valid values: `disable`, `enable`.
	SshPolicyCheck *string `pulumi:"sshPolicyCheck"`
	// Enable/disable SSH tunnel policy check. Valid values: `disable`, `enable`.
	SshTunPolicyCheck *string `pulumi:"sshTunPolicyCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status *string `pulumi:"status"`
	// Action based on SSH version being unsupported. Valid values: `bypass`, `block`.
	UnsupportedVersion *string `pulumi:"unsupportedVersion"`
}

// FirewallSslsshprofileSshInput is an input type that accepts FirewallSslsshprofileSshArgs and FirewallSslsshprofileSshOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileSshInput` via:
//
//	FirewallSslsshprofileSshArgs{...}
type FirewallSslsshprofileSshInput interface {
	pulumi.Input

	ToFirewallSslsshprofileSshOutput() FirewallSslsshprofileSshOutput
	ToFirewallSslsshprofileSshOutputWithContext(context.Context) FirewallSslsshprofileSshOutput
}

type FirewallSslsshprofileSshArgs struct {
	// Level of SSL inspection. Valid values: `disable`, `deep-inspection`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// Ports to use for scanning (1 - 65535, default = 443).
	Ports pulumi.StringPtrInput `pulumi:"ports"`
	// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
	ProxyAfterTcpHandshake pulumi.StringPtrInput `pulumi:"proxyAfterTcpHandshake"`
	// Relative strength of encryption algorithms accepted during negotiation. Valid values: `compatible`, `high-encryption`.
	SshAlgorithm pulumi.StringPtrInput `pulumi:"sshAlgorithm"`
	// Enable/disable SSH policy check. Valid values: `disable`, `enable`.
	SshPolicyCheck pulumi.StringPtrInput `pulumi:"sshPolicyCheck"`
	// Enable/disable SSH tunnel policy check. Valid values: `disable`, `enable`.
	SshTunPolicyCheck pulumi.StringPtrInput `pulumi:"sshTunPolicyCheck"`
	// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Action based on SSH version being unsupported. Valid values: `bypass`, `block`.
	UnsupportedVersion pulumi.StringPtrInput `pulumi:"unsupportedVersion"`
}

func (FirewallSslsshprofileSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileSsh)(nil)).Elem()
}

func (i FirewallSslsshprofileSshArgs) ToFirewallSslsshprofileSshOutput() FirewallSslsshprofileSshOutput {
	return i.ToFirewallSslsshprofileSshOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileSshArgs) ToFirewallSslsshprofileSshOutputWithContext(ctx context.Context) FirewallSslsshprofileSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSshOutput)
}

func (i FirewallSslsshprofileSshArgs) ToFirewallSslsshprofileSshPtrOutput() FirewallSslsshprofileSshPtrOutput {
	return i.ToFirewallSslsshprofileSshPtrOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileSshArgs) ToFirewallSslsshprofileSshPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSshOutput).ToFirewallSslsshprofileSshPtrOutputWithContext(ctx)
}

// FirewallSslsshprofileSshPtrInput is an input type that accepts FirewallSslsshprofileSshArgs, FirewallSslsshprofileSshPtr and FirewallSslsshprofileSshPtrOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileSshPtrInput` via:
//
//	        FirewallSslsshprofileSshArgs{...}
//
//	or:
//
//	        nil
type FirewallSslsshprofileSshPtrInput interface {
	pulumi.Input

	ToFirewallSslsshprofileSshPtrOutput() FirewallSslsshprofileSshPtrOutput
	ToFirewallSslsshprofileSshPtrOutputWithContext(context.Context) FirewallSslsshprofileSshPtrOutput
}

type firewallSslsshprofileSshPtrType FirewallSslsshprofileSshArgs

func FirewallSslsshprofileSshPtr(v *FirewallSslsshprofileSshArgs) FirewallSslsshprofileSshPtrInput {
	return (*firewallSslsshprofileSshPtrType)(v)
}

func (*firewallSslsshprofileSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileSsh)(nil)).Elem()
}

func (i *firewallSslsshprofileSshPtrType) ToFirewallSslsshprofileSshPtrOutput() FirewallSslsshprofileSshPtrOutput {
	return i.ToFirewallSslsshprofileSshPtrOutputWithContext(context.Background())
}

func (i *firewallSslsshprofileSshPtrType) ToFirewallSslsshprofileSshPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSshPtrOutput)
}

type FirewallSslsshprofileSshOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileSsh)(nil)).Elem()
}

func (o FirewallSslsshprofileSshOutput) ToFirewallSslsshprofileSshOutput() FirewallSslsshprofileSshOutput {
	return o
}

func (o FirewallSslsshprofileSshOutput) ToFirewallSslsshprofileSshOutputWithContext(ctx context.Context) FirewallSslsshprofileSshOutput {
	return o
}

func (o FirewallSslsshprofileSshOutput) ToFirewallSslsshprofileSshPtrOutput() FirewallSslsshprofileSshPtrOutput {
	return o.ToFirewallSslsshprofileSshPtrOutputWithContext(context.Background())
}

func (o FirewallSslsshprofileSshOutput) ToFirewallSslsshprofileSshPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallSslsshprofileSsh) *FirewallSslsshprofileSsh {
		return &v
	}).(FirewallSslsshprofileSshPtrOutput)
}

// Level of SSL inspection. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileSshOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsh) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofileSshOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsh) *string { return v.Ports }).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofileSshOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsh) *string { return v.ProxyAfterTcpHandshake }).(pulumi.StringPtrOutput)
}

// Relative strength of encryption algorithms accepted during negotiation. Valid values: `compatible`, `high-encryption`.
func (o FirewallSslsshprofileSshOutput) SshAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsh) *string { return v.SshAlgorithm }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH policy check. Valid values: `disable`, `enable`.
func (o FirewallSslsshprofileSshOutput) SshPolicyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsh) *string { return v.SshPolicyCheck }).(pulumi.StringPtrOutput)
}

// Enable/disable SSH tunnel policy check. Valid values: `disable`, `enable`.
func (o FirewallSslsshprofileSshOutput) SshTunPolicyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsh) *string { return v.SshTunPolicyCheck }).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileSshOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsh) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Action based on SSH version being unsupported. Valid values: `bypass`, `block`.
func (o FirewallSslsshprofileSshOutput) UnsupportedVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsh) *string { return v.UnsupportedVersion }).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileSshPtrOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileSsh)(nil)).Elem()
}

func (o FirewallSslsshprofileSshPtrOutput) ToFirewallSslsshprofileSshPtrOutput() FirewallSslsshprofileSshPtrOutput {
	return o
}

func (o FirewallSslsshprofileSshPtrOutput) ToFirewallSslsshprofileSshPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSshPtrOutput {
	return o
}

func (o FirewallSslsshprofileSshPtrOutput) Elem() FirewallSslsshprofileSshOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsh) FirewallSslsshprofileSsh {
		if v != nil {
			return *v
		}
		var ret FirewallSslsshprofileSsh
		return ret
	}).(FirewallSslsshprofileSshOutput)
}

// Level of SSL inspection. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileSshPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// Ports to use for scanning (1 - 65535, default = 443).
func (o FirewallSslsshprofileSshPtrOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringPtrOutput)
}

// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
func (o FirewallSslsshprofileSshPtrOutput) ProxyAfterTcpHandshake() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.ProxyAfterTcpHandshake
	}).(pulumi.StringPtrOutput)
}

// Relative strength of encryption algorithms accepted during negotiation. Valid values: `compatible`, `high-encryption`.
func (o FirewallSslsshprofileSshPtrOutput) SshAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.SshAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SSH policy check. Valid values: `disable`, `enable`.
func (o FirewallSslsshprofileSshPtrOutput) SshPolicyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.SshPolicyCheck
	}).(pulumi.StringPtrOutput)
}

// Enable/disable SSH tunnel policy check. Valid values: `disable`, `enable`.
func (o FirewallSslsshprofileSshPtrOutput) SshTunPolicyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.SshTunPolicyCheck
	}).(pulumi.StringPtrOutput)
}

// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
func (o FirewallSslsshprofileSshPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Action based on SSH version being unsupported. Valid values: `bypass`, `block`.
func (o FirewallSslsshprofileSshPtrOutput) UnsupportedVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsh) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedVersion
	}).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileSsl struct {
	// Action based on certificate probe failure. Valid values: `allow`, `block`.
	CertProbeFailure *string `pulumi:"certProbeFailure"`
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure *string `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout *string `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest *string `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert *string `pulumi:"expiredServerCert"`
	// Level of SSL inspection. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
	InspectAll *string `pulumi:"inspectAll"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert *string `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion *string `pulumi:"minAllowedSslVersion"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert *string `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck *string `pulumi:"sniServerCertCheck"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl *string `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher *string `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation *string `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion *string `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert *string `pulumi:"untrustedServerCert"`
}

// FirewallSslsshprofileSslInput is an input type that accepts FirewallSslsshprofileSslArgs and FirewallSslsshprofileSslOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileSslInput` via:
//
//	FirewallSslsshprofileSslArgs{...}
type FirewallSslsshprofileSslInput interface {
	pulumi.Input

	ToFirewallSslsshprofileSslOutput() FirewallSslsshprofileSslOutput
	ToFirewallSslsshprofileSslOutputWithContext(context.Context) FirewallSslsshprofileSslOutput
}

type FirewallSslsshprofileSslArgs struct {
	// Action based on certificate probe failure. Valid values: `allow`, `block`.
	CertProbeFailure pulumi.StringPtrInput `pulumi:"certProbeFailure"`
	// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
	CertValidationFailure pulumi.StringPtrInput `pulumi:"certValidationFailure"`
	// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
	CertValidationTimeout pulumi.StringPtrInput `pulumi:"certValidationTimeout"`
	// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
	ClientCertRequest pulumi.StringPtrInput `pulumi:"clientCertRequest"`
	// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
	ExpiredServerCert pulumi.StringPtrInput `pulumi:"expiredServerCert"`
	// Level of SSL inspection. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
	InspectAll pulumi.StringPtrInput `pulumi:"inspectAll"`
	// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
	InvalidServerCert pulumi.StringPtrInput `pulumi:"invalidServerCert"`
	// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
	MinAllowedSslVersion pulumi.StringPtrInput `pulumi:"minAllowedSslVersion"`
	// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
	RevokedServerCert pulumi.StringPtrInput `pulumi:"revokedServerCert"`
	// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
	SniServerCertCheck pulumi.StringPtrInput `pulumi:"sniServerCertCheck"`
	// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
	UnsupportedSsl pulumi.StringPtrInput `pulumi:"unsupportedSsl"`
	// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslCipher pulumi.StringPtrInput `pulumi:"unsupportedSslCipher"`
	// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
	UnsupportedSslNegotiation pulumi.StringPtrInput `pulumi:"unsupportedSslNegotiation"`
	// Action based on the SSL version used being unsupported.
	UnsupportedSslVersion pulumi.StringPtrInput `pulumi:"unsupportedSslVersion"`
	// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
	UntrustedServerCert pulumi.StringPtrInput `pulumi:"untrustedServerCert"`
}

func (FirewallSslsshprofileSslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileSsl)(nil)).Elem()
}

func (i FirewallSslsshprofileSslArgs) ToFirewallSslsshprofileSslOutput() FirewallSslsshprofileSslOutput {
	return i.ToFirewallSslsshprofileSslOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileSslArgs) ToFirewallSslsshprofileSslOutputWithContext(ctx context.Context) FirewallSslsshprofileSslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSslOutput)
}

func (i FirewallSslsshprofileSslArgs) ToFirewallSslsshprofileSslPtrOutput() FirewallSslsshprofileSslPtrOutput {
	return i.ToFirewallSslsshprofileSslPtrOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileSslArgs) ToFirewallSslsshprofileSslPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSslOutput).ToFirewallSslsshprofileSslPtrOutputWithContext(ctx)
}

// FirewallSslsshprofileSslPtrInput is an input type that accepts FirewallSslsshprofileSslArgs, FirewallSslsshprofileSslPtr and FirewallSslsshprofileSslPtrOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileSslPtrInput` via:
//
//	        FirewallSslsshprofileSslArgs{...}
//
//	or:
//
//	        nil
type FirewallSslsshprofileSslPtrInput interface {
	pulumi.Input

	ToFirewallSslsshprofileSslPtrOutput() FirewallSslsshprofileSslPtrOutput
	ToFirewallSslsshprofileSslPtrOutputWithContext(context.Context) FirewallSslsshprofileSslPtrOutput
}

type firewallSslsshprofileSslPtrType FirewallSslsshprofileSslArgs

func FirewallSslsshprofileSslPtr(v *FirewallSslsshprofileSslArgs) FirewallSslsshprofileSslPtrInput {
	return (*firewallSslsshprofileSslPtrType)(v)
}

func (*firewallSslsshprofileSslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileSsl)(nil)).Elem()
}

func (i *firewallSslsshprofileSslPtrType) ToFirewallSslsshprofileSslPtrOutput() FirewallSslsshprofileSslPtrOutput {
	return i.ToFirewallSslsshprofileSslPtrOutputWithContext(context.Background())
}

func (i *firewallSslsshprofileSslPtrType) ToFirewallSslsshprofileSslPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSslPtrOutput)
}

type FirewallSslsshprofileSslOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileSslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileSsl)(nil)).Elem()
}

func (o FirewallSslsshprofileSslOutput) ToFirewallSslsshprofileSslOutput() FirewallSslsshprofileSslOutput {
	return o
}

func (o FirewallSslsshprofileSslOutput) ToFirewallSslsshprofileSslOutputWithContext(ctx context.Context) FirewallSslsshprofileSslOutput {
	return o
}

func (o FirewallSslsshprofileSslOutput) ToFirewallSslsshprofileSslPtrOutput() FirewallSslsshprofileSslPtrOutput {
	return o.ToFirewallSslsshprofileSslPtrOutputWithContext(context.Background())
}

func (o FirewallSslsshprofileSslOutput) ToFirewallSslsshprofileSslPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSslPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallSslsshprofileSsl) *FirewallSslsshprofileSsl {
		return &v
	}).(FirewallSslsshprofileSslPtrOutput)
}

// Action based on certificate probe failure. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSslOutput) CertProbeFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.CertProbeFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSslOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.CertValidationFailure }).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSslOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.CertValidationTimeout }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.ClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSslOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.ExpiredServerCert }).(pulumi.StringPtrOutput)
}

// Level of SSL inspection. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
func (o FirewallSslsshprofileSslOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.InspectAll }).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSslOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.InvalidServerCert }).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallSslsshprofileSslOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.MinAllowedSslVersion }).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSslOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.RevokedServerCert }).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileSslOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.SniServerCertCheck }).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.UnsupportedSsl }).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSslOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.UnsupportedSslCipher }).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSslOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.UnsupportedSslNegotiation }).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileSslOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.UnsupportedSslVersion }).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSslOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSsl) *string { return v.UntrustedServerCert }).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileSslPtrOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileSslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSslsshprofileSsl)(nil)).Elem()
}

func (o FirewallSslsshprofileSslPtrOutput) ToFirewallSslsshprofileSslPtrOutput() FirewallSslsshprofileSslPtrOutput {
	return o
}

func (o FirewallSslsshprofileSslPtrOutput) ToFirewallSslsshprofileSslPtrOutputWithContext(ctx context.Context) FirewallSslsshprofileSslPtrOutput {
	return o
}

func (o FirewallSslsshprofileSslPtrOutput) Elem() FirewallSslsshprofileSslOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) FirewallSslsshprofileSsl {
		if v != nil {
			return *v
		}
		var ret FirewallSslsshprofileSsl
		return ret
	}).(FirewallSslsshprofileSslOutput)
}

// Action based on certificate probe failure. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSslPtrOutput) CertProbeFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.CertProbeFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation failure. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSslPtrOutput) CertValidationFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationFailure
	}).(pulumi.StringPtrOutput)
}

// Action based on certificate validation timeout. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSslPtrOutput) CertValidationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.CertValidationTimeout
	}).(pulumi.StringPtrOutput)
}

// Action based on client certificate request. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslPtrOutput) ClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertRequest
	}).(pulumi.StringPtrOutput)
}

// Action based on received client certificate. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is expired. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSslPtrOutput) ExpiredServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.ExpiredServerCert
	}).(pulumi.StringPtrOutput)
}

// Level of SSL inspection. Valid values: `disable`, `certificate-inspection`, `deep-inspection`.
func (o FirewallSslsshprofileSslPtrOutput) InspectAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.InspectAll
	}).(pulumi.StringPtrOutput)
}

// Allow or block the invalid SSL session server certificate. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSslPtrOutput) InvalidServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.InvalidServerCert
	}).(pulumi.StringPtrOutput)
}

// Minimum SSL version to be allowed. Valid values: `ssl-3.0`, `tls-1.0`, `tls-1.1`, `tls-1.2`, `tls-1.3`.
func (o FirewallSslsshprofileSslPtrOutput) MinAllowedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.MinAllowedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Action based on server certificate is revoked. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSslPtrOutput) RevokedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.RevokedServerCert
	}).(pulumi.StringPtrOutput)
}

// Check the SNI in the client hello message with the CN or SAN fields in the returned server certificate. Valid values: `enable`, `strict`, `disable`.
func (o FirewallSslsshprofileSslPtrOutput) SniServerCertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.SniServerCertCheck
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL encryption used being unsupported. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslPtrOutput) UnsupportedSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSsl
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL cipher used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSslPtrOutput) UnsupportedSslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslCipher
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL negotiation used being unsupported. Valid values: `allow`, `block`.
func (o FirewallSslsshprofileSslPtrOutput) UnsupportedSslNegotiation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslNegotiation
	}).(pulumi.StringPtrOutput)
}

// Action based on the SSL version used being unsupported.
func (o FirewallSslsshprofileSslPtrOutput) UnsupportedSslVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.UnsupportedSslVersion
	}).(pulumi.StringPtrOutput)
}

// Allow, ignore, or block the untrusted SSL session server certificate. Valid values: `allow`, `block`, `ignore`.
func (o FirewallSslsshprofileSslPtrOutput) UntrustedServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallSslsshprofileSsl) *string {
		if v == nil {
			return nil
		}
		return v.UntrustedServerCert
	}).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileSslExempt struct {
	// IPv4 address object.
	Address *string `pulumi:"address"`
	// IPv6 address object.
	Address6 *string `pulumi:"address6"`
	// FortiGuard category ID.
	FortiguardCategory *int `pulumi:"fortiguardCategory"`
	// ID number.
	Id *int `pulumi:"id"`
	// Exempt servers by regular expression.
	Regex *string `pulumi:"regex"`
	// Type of address object (IPv4 or IPv6) or FortiGuard category. Valid values: `fortiguard-category`, `address`, `address6`, `wildcard-fqdn`, `regex`.
	Type *string `pulumi:"type"`
	// Exempt servers by wildcard FQDN.
	WildcardFqdn *string `pulumi:"wildcardFqdn"`
}

// FirewallSslsshprofileSslExemptInput is an input type that accepts FirewallSslsshprofileSslExemptArgs and FirewallSslsshprofileSslExemptOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileSslExemptInput` via:
//
//	FirewallSslsshprofileSslExemptArgs{...}
type FirewallSslsshprofileSslExemptInput interface {
	pulumi.Input

	ToFirewallSslsshprofileSslExemptOutput() FirewallSslsshprofileSslExemptOutput
	ToFirewallSslsshprofileSslExemptOutputWithContext(context.Context) FirewallSslsshprofileSslExemptOutput
}

type FirewallSslsshprofileSslExemptArgs struct {
	// IPv4 address object.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// IPv6 address object.
	Address6 pulumi.StringPtrInput `pulumi:"address6"`
	// FortiGuard category ID.
	FortiguardCategory pulumi.IntPtrInput `pulumi:"fortiguardCategory"`
	// ID number.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Exempt servers by regular expression.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Type of address object (IPv4 or IPv6) or FortiGuard category. Valid values: `fortiguard-category`, `address`, `address6`, `wildcard-fqdn`, `regex`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Exempt servers by wildcard FQDN.
	WildcardFqdn pulumi.StringPtrInput `pulumi:"wildcardFqdn"`
}

func (FirewallSslsshprofileSslExemptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileSslExempt)(nil)).Elem()
}

func (i FirewallSslsshprofileSslExemptArgs) ToFirewallSslsshprofileSslExemptOutput() FirewallSslsshprofileSslExemptOutput {
	return i.ToFirewallSslsshprofileSslExemptOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileSslExemptArgs) ToFirewallSslsshprofileSslExemptOutputWithContext(ctx context.Context) FirewallSslsshprofileSslExemptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSslExemptOutput)
}

// FirewallSslsshprofileSslExemptArrayInput is an input type that accepts FirewallSslsshprofileSslExemptArray and FirewallSslsshprofileSslExemptArrayOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileSslExemptArrayInput` via:
//
//	FirewallSslsshprofileSslExemptArray{ FirewallSslsshprofileSslExemptArgs{...} }
type FirewallSslsshprofileSslExemptArrayInput interface {
	pulumi.Input

	ToFirewallSslsshprofileSslExemptArrayOutput() FirewallSslsshprofileSslExemptArrayOutput
	ToFirewallSslsshprofileSslExemptArrayOutputWithContext(context.Context) FirewallSslsshprofileSslExemptArrayOutput
}

type FirewallSslsshprofileSslExemptArray []FirewallSslsshprofileSslExemptInput

func (FirewallSslsshprofileSslExemptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSslsshprofileSslExempt)(nil)).Elem()
}

func (i FirewallSslsshprofileSslExemptArray) ToFirewallSslsshprofileSslExemptArrayOutput() FirewallSslsshprofileSslExemptArrayOutput {
	return i.ToFirewallSslsshprofileSslExemptArrayOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileSslExemptArray) ToFirewallSslsshprofileSslExemptArrayOutputWithContext(ctx context.Context) FirewallSslsshprofileSslExemptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSslExemptArrayOutput)
}

type FirewallSslsshprofileSslExemptOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileSslExemptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileSslExempt)(nil)).Elem()
}

func (o FirewallSslsshprofileSslExemptOutput) ToFirewallSslsshprofileSslExemptOutput() FirewallSslsshprofileSslExemptOutput {
	return o
}

func (o FirewallSslsshprofileSslExemptOutput) ToFirewallSslsshprofileSslExemptOutputWithContext(ctx context.Context) FirewallSslsshprofileSslExemptOutput {
	return o
}

// IPv4 address object.
func (o FirewallSslsshprofileSslExemptOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslExempt) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// IPv6 address object.
func (o FirewallSslsshprofileSslExemptOutput) Address6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslExempt) *string { return v.Address6 }).(pulumi.StringPtrOutput)
}

// FortiGuard category ID.
func (o FirewallSslsshprofileSslExemptOutput) FortiguardCategory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslExempt) *int { return v.FortiguardCategory }).(pulumi.IntPtrOutput)
}

// ID number.
func (o FirewallSslsshprofileSslExemptOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslExempt) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Exempt servers by regular expression.
func (o FirewallSslsshprofileSslExemptOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslExempt) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Type of address object (IPv4 or IPv6) or FortiGuard category. Valid values: `fortiguard-category`, `address`, `address6`, `wildcard-fqdn`, `regex`.
func (o FirewallSslsshprofileSslExemptOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslExempt) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Exempt servers by wildcard FQDN.
func (o FirewallSslsshprofileSslExemptOutput) WildcardFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslExempt) *string { return v.WildcardFqdn }).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileSslExemptArrayOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileSslExemptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSslsshprofileSslExempt)(nil)).Elem()
}

func (o FirewallSslsshprofileSslExemptArrayOutput) ToFirewallSslsshprofileSslExemptArrayOutput() FirewallSslsshprofileSslExemptArrayOutput {
	return o
}

func (o FirewallSslsshprofileSslExemptArrayOutput) ToFirewallSslsshprofileSslExemptArrayOutputWithContext(ctx context.Context) FirewallSslsshprofileSslExemptArrayOutput {
	return o
}

func (o FirewallSslsshprofileSslExemptArrayOutput) Index(i pulumi.IntInput) FirewallSslsshprofileSslExemptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSslsshprofileSslExempt {
		return vs[0].([]FirewallSslsshprofileSslExempt)[vs[1].(int)]
	}).(FirewallSslsshprofileSslExemptOutput)
}

type FirewallSslsshprofileSslServer struct {
	// Action based on client certificate request during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	FtpsClientCertRequest *string `pulumi:"ftpsClientCertRequest"`
	// Action based on received client certificate during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	FtpsClientCertificate *string `pulumi:"ftpsClientCertificate"`
	// Action based on client certificate request during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	HttpsClientCertRequest *string `pulumi:"httpsClientCertRequest"`
	// Action based on received client certificate during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	HttpsClientCertificate *string `pulumi:"httpsClientCertificate"`
	// SSL server ID.
	Id *int `pulumi:"id"`
	// Action based on client certificate request during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
	ImapsClientCertRequest *string `pulumi:"imapsClientCertRequest"`
	// Action based on received client certificate during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
	ImapsClientCertificate *string `pulumi:"imapsClientCertificate"`
	// IPv4 address of the SSL server.
	Ip *string `pulumi:"ip"`
	// Action based on client certificate request during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
	Pop3sClientCertRequest *string `pulumi:"pop3sClientCertRequest"`
	// Action based on received client certificate during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
	Pop3sClientCertificate *string `pulumi:"pop3sClientCertificate"`
	// Action based on client certificate request during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	SmtpsClientCertRequest *string `pulumi:"smtpsClientCertRequest"`
	// Action based on received client certificate during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	SmtpsClientCertificate *string `pulumi:"smtpsClientCertificate"`
	// Action based on client certificate request during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
	SslOtherClientCertRequest *string `pulumi:"sslOtherClientCertRequest"`
	// Action based on received client certificate during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
	SslOtherClientCertificate *string `pulumi:"sslOtherClientCertificate"`
}

// FirewallSslsshprofileSslServerInput is an input type that accepts FirewallSslsshprofileSslServerArgs and FirewallSslsshprofileSslServerOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileSslServerInput` via:
//
//	FirewallSslsshprofileSslServerArgs{...}
type FirewallSslsshprofileSslServerInput interface {
	pulumi.Input

	ToFirewallSslsshprofileSslServerOutput() FirewallSslsshprofileSslServerOutput
	ToFirewallSslsshprofileSslServerOutputWithContext(context.Context) FirewallSslsshprofileSslServerOutput
}

type FirewallSslsshprofileSslServerArgs struct {
	// Action based on client certificate request during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	FtpsClientCertRequest pulumi.StringPtrInput `pulumi:"ftpsClientCertRequest"`
	// Action based on received client certificate during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	FtpsClientCertificate pulumi.StringPtrInput `pulumi:"ftpsClientCertificate"`
	// Action based on client certificate request during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	HttpsClientCertRequest pulumi.StringPtrInput `pulumi:"httpsClientCertRequest"`
	// Action based on received client certificate during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	HttpsClientCertificate pulumi.StringPtrInput `pulumi:"httpsClientCertificate"`
	// SSL server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Action based on client certificate request during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
	ImapsClientCertRequest pulumi.StringPtrInput `pulumi:"imapsClientCertRequest"`
	// Action based on received client certificate during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
	ImapsClientCertificate pulumi.StringPtrInput `pulumi:"imapsClientCertificate"`
	// IPv4 address of the SSL server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Action based on client certificate request during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
	Pop3sClientCertRequest pulumi.StringPtrInput `pulumi:"pop3sClientCertRequest"`
	// Action based on received client certificate during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
	Pop3sClientCertificate pulumi.StringPtrInput `pulumi:"pop3sClientCertificate"`
	// Action based on client certificate request during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	SmtpsClientCertRequest pulumi.StringPtrInput `pulumi:"smtpsClientCertRequest"`
	// Action based on received client certificate during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
	SmtpsClientCertificate pulumi.StringPtrInput `pulumi:"smtpsClientCertificate"`
	// Action based on client certificate request during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
	SslOtherClientCertRequest pulumi.StringPtrInput `pulumi:"sslOtherClientCertRequest"`
	// Action based on received client certificate during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
	SslOtherClientCertificate pulumi.StringPtrInput `pulumi:"sslOtherClientCertificate"`
}

func (FirewallSslsshprofileSslServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileSslServer)(nil)).Elem()
}

func (i FirewallSslsshprofileSslServerArgs) ToFirewallSslsshprofileSslServerOutput() FirewallSslsshprofileSslServerOutput {
	return i.ToFirewallSslsshprofileSslServerOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileSslServerArgs) ToFirewallSslsshprofileSslServerOutputWithContext(ctx context.Context) FirewallSslsshprofileSslServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSslServerOutput)
}

// FirewallSslsshprofileSslServerArrayInput is an input type that accepts FirewallSslsshprofileSslServerArray and FirewallSslsshprofileSslServerArrayOutput values.
// You can construct a concrete instance of `FirewallSslsshprofileSslServerArrayInput` via:
//
//	FirewallSslsshprofileSslServerArray{ FirewallSslsshprofileSslServerArgs{...} }
type FirewallSslsshprofileSslServerArrayInput interface {
	pulumi.Input

	ToFirewallSslsshprofileSslServerArrayOutput() FirewallSslsshprofileSslServerArrayOutput
	ToFirewallSslsshprofileSslServerArrayOutputWithContext(context.Context) FirewallSslsshprofileSslServerArrayOutput
}

type FirewallSslsshprofileSslServerArray []FirewallSslsshprofileSslServerInput

func (FirewallSslsshprofileSslServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSslsshprofileSslServer)(nil)).Elem()
}

func (i FirewallSslsshprofileSslServerArray) ToFirewallSslsshprofileSslServerArrayOutput() FirewallSslsshprofileSslServerArrayOutput {
	return i.ToFirewallSslsshprofileSslServerArrayOutputWithContext(context.Background())
}

func (i FirewallSslsshprofileSslServerArray) ToFirewallSslsshprofileSslServerArrayOutputWithContext(ctx context.Context) FirewallSslsshprofileSslServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSslsshprofileSslServerArrayOutput)
}

type FirewallSslsshprofileSslServerOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileSslServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSslsshprofileSslServer)(nil)).Elem()
}

func (o FirewallSslsshprofileSslServerOutput) ToFirewallSslsshprofileSslServerOutput() FirewallSslsshprofileSslServerOutput {
	return o
}

func (o FirewallSslsshprofileSslServerOutput) ToFirewallSslsshprofileSslServerOutputWithContext(ctx context.Context) FirewallSslsshprofileSslServerOutput {
	return o
}

// Action based on client certificate request during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) FtpsClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.FtpsClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during the FTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) FtpsClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.FtpsClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) HttpsClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.HttpsClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during the HTTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) HttpsClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.HttpsClientCertificate }).(pulumi.StringPtrOutput)
}

// SSL server ID.
func (o FirewallSslsshprofileSslServerOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Action based on client certificate request during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) ImapsClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.ImapsClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during the IMAPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) ImapsClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.ImapsClientCertificate }).(pulumi.StringPtrOutput)
}

// IPv4 address of the SSL server.
func (o FirewallSslsshprofileSslServerOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) Pop3sClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.Pop3sClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during the POP3S handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) Pop3sClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.Pop3sClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) SmtpsClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.SmtpsClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during the SMTPS handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) SmtpsClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.SmtpsClientCertificate }).(pulumi.StringPtrOutput)
}

// Action based on client certificate request during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) SslOtherClientCertRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.SslOtherClientCertRequest }).(pulumi.StringPtrOutput)
}

// Action based on received client certificate during an SSL protocol handshake. Valid values: `bypass`, `inspect`, `block`.
func (o FirewallSslsshprofileSslServerOutput) SslOtherClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSslsshprofileSslServer) *string { return v.SslOtherClientCertificate }).(pulumi.StringPtrOutput)
}

type FirewallSslsshprofileSslServerArrayOutput struct{ *pulumi.OutputState }

func (FirewallSslsshprofileSslServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSslsshprofileSslServer)(nil)).Elem()
}

func (o FirewallSslsshprofileSslServerArrayOutput) ToFirewallSslsshprofileSslServerArrayOutput() FirewallSslsshprofileSslServerArrayOutput {
	return o
}

func (o FirewallSslsshprofileSslServerArrayOutput) ToFirewallSslsshprofileSslServerArrayOutputWithContext(ctx context.Context) FirewallSslsshprofileSslServerArrayOutput {
	return o
}

func (o FirewallSslsshprofileSslServerArrayOutput) Index(i pulumi.IntInput) FirewallSslsshprofileSslServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSslsshprofileSslServer {
		return vs[0].([]FirewallSslsshprofileSslServer)[vs[1].(int)]
	}).(FirewallSslsshprofileSslServerOutput)
}

type FirewallTtlpolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallTtlpolicyServiceInput is an input type that accepts FirewallTtlpolicyServiceArgs and FirewallTtlpolicyServiceOutput values.
// You can construct a concrete instance of `FirewallTtlpolicyServiceInput` via:
//
//	FirewallTtlpolicyServiceArgs{...}
type FirewallTtlpolicyServiceInput interface {
	pulumi.Input

	ToFirewallTtlpolicyServiceOutput() FirewallTtlpolicyServiceOutput
	ToFirewallTtlpolicyServiceOutputWithContext(context.Context) FirewallTtlpolicyServiceOutput
}

type FirewallTtlpolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallTtlpolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallTtlpolicyService)(nil)).Elem()
}

func (i FirewallTtlpolicyServiceArgs) ToFirewallTtlpolicyServiceOutput() FirewallTtlpolicyServiceOutput {
	return i.ToFirewallTtlpolicyServiceOutputWithContext(context.Background())
}

func (i FirewallTtlpolicyServiceArgs) ToFirewallTtlpolicyServiceOutputWithContext(ctx context.Context) FirewallTtlpolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTtlpolicyServiceOutput)
}

// FirewallTtlpolicyServiceArrayInput is an input type that accepts FirewallTtlpolicyServiceArray and FirewallTtlpolicyServiceArrayOutput values.
// You can construct a concrete instance of `FirewallTtlpolicyServiceArrayInput` via:
//
//	FirewallTtlpolicyServiceArray{ FirewallTtlpolicyServiceArgs{...} }
type FirewallTtlpolicyServiceArrayInput interface {
	pulumi.Input

	ToFirewallTtlpolicyServiceArrayOutput() FirewallTtlpolicyServiceArrayOutput
	ToFirewallTtlpolicyServiceArrayOutputWithContext(context.Context) FirewallTtlpolicyServiceArrayOutput
}

type FirewallTtlpolicyServiceArray []FirewallTtlpolicyServiceInput

func (FirewallTtlpolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallTtlpolicyService)(nil)).Elem()
}

func (i FirewallTtlpolicyServiceArray) ToFirewallTtlpolicyServiceArrayOutput() FirewallTtlpolicyServiceArrayOutput {
	return i.ToFirewallTtlpolicyServiceArrayOutputWithContext(context.Background())
}

func (i FirewallTtlpolicyServiceArray) ToFirewallTtlpolicyServiceArrayOutputWithContext(ctx context.Context) FirewallTtlpolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTtlpolicyServiceArrayOutput)
}

type FirewallTtlpolicyServiceOutput struct{ *pulumi.OutputState }

func (FirewallTtlpolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallTtlpolicyService)(nil)).Elem()
}

func (o FirewallTtlpolicyServiceOutput) ToFirewallTtlpolicyServiceOutput() FirewallTtlpolicyServiceOutput {
	return o
}

func (o FirewallTtlpolicyServiceOutput) ToFirewallTtlpolicyServiceOutputWithContext(ctx context.Context) FirewallTtlpolicyServiceOutput {
	return o
}

// Service name.
func (o FirewallTtlpolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallTtlpolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallTtlpolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallTtlpolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallTtlpolicyService)(nil)).Elem()
}

func (o FirewallTtlpolicyServiceArrayOutput) ToFirewallTtlpolicyServiceArrayOutput() FirewallTtlpolicyServiceArrayOutput {
	return o
}

func (o FirewallTtlpolicyServiceArrayOutput) ToFirewallTtlpolicyServiceArrayOutputWithContext(ctx context.Context) FirewallTtlpolicyServiceArrayOutput {
	return o
}

func (o FirewallTtlpolicyServiceArrayOutput) Index(i pulumi.IntInput) FirewallTtlpolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallTtlpolicyService {
		return vs[0].([]FirewallTtlpolicyService)[vs[1].(int)]
	}).(FirewallTtlpolicyServiceOutput)
}

type FirewallTtlpolicySrcaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallTtlpolicySrcaddrInput is an input type that accepts FirewallTtlpolicySrcaddrArgs and FirewallTtlpolicySrcaddrOutput values.
// You can construct a concrete instance of `FirewallTtlpolicySrcaddrInput` via:
//
//	FirewallTtlpolicySrcaddrArgs{...}
type FirewallTtlpolicySrcaddrInput interface {
	pulumi.Input

	ToFirewallTtlpolicySrcaddrOutput() FirewallTtlpolicySrcaddrOutput
	ToFirewallTtlpolicySrcaddrOutputWithContext(context.Context) FirewallTtlpolicySrcaddrOutput
}

type FirewallTtlpolicySrcaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallTtlpolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallTtlpolicySrcaddr)(nil)).Elem()
}

func (i FirewallTtlpolicySrcaddrArgs) ToFirewallTtlpolicySrcaddrOutput() FirewallTtlpolicySrcaddrOutput {
	return i.ToFirewallTtlpolicySrcaddrOutputWithContext(context.Background())
}

func (i FirewallTtlpolicySrcaddrArgs) ToFirewallTtlpolicySrcaddrOutputWithContext(ctx context.Context) FirewallTtlpolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTtlpolicySrcaddrOutput)
}

// FirewallTtlpolicySrcaddrArrayInput is an input type that accepts FirewallTtlpolicySrcaddrArray and FirewallTtlpolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `FirewallTtlpolicySrcaddrArrayInput` via:
//
//	FirewallTtlpolicySrcaddrArray{ FirewallTtlpolicySrcaddrArgs{...} }
type FirewallTtlpolicySrcaddrArrayInput interface {
	pulumi.Input

	ToFirewallTtlpolicySrcaddrArrayOutput() FirewallTtlpolicySrcaddrArrayOutput
	ToFirewallTtlpolicySrcaddrArrayOutputWithContext(context.Context) FirewallTtlpolicySrcaddrArrayOutput
}

type FirewallTtlpolicySrcaddrArray []FirewallTtlpolicySrcaddrInput

func (FirewallTtlpolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallTtlpolicySrcaddr)(nil)).Elem()
}

func (i FirewallTtlpolicySrcaddrArray) ToFirewallTtlpolicySrcaddrArrayOutput() FirewallTtlpolicySrcaddrArrayOutput {
	return i.ToFirewallTtlpolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i FirewallTtlpolicySrcaddrArray) ToFirewallTtlpolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallTtlpolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTtlpolicySrcaddrArrayOutput)
}

type FirewallTtlpolicySrcaddrOutput struct{ *pulumi.OutputState }

func (FirewallTtlpolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallTtlpolicySrcaddr)(nil)).Elem()
}

func (o FirewallTtlpolicySrcaddrOutput) ToFirewallTtlpolicySrcaddrOutput() FirewallTtlpolicySrcaddrOutput {
	return o
}

func (o FirewallTtlpolicySrcaddrOutput) ToFirewallTtlpolicySrcaddrOutputWithContext(ctx context.Context) FirewallTtlpolicySrcaddrOutput {
	return o
}

// Address name.
func (o FirewallTtlpolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallTtlpolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallTtlpolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallTtlpolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallTtlpolicySrcaddr)(nil)).Elem()
}

func (o FirewallTtlpolicySrcaddrArrayOutput) ToFirewallTtlpolicySrcaddrArrayOutput() FirewallTtlpolicySrcaddrArrayOutput {
	return o
}

func (o FirewallTtlpolicySrcaddrArrayOutput) ToFirewallTtlpolicySrcaddrArrayOutputWithContext(ctx context.Context) FirewallTtlpolicySrcaddrArrayOutput {
	return o
}

func (o FirewallTtlpolicySrcaddrArrayOutput) Index(i pulumi.IntInput) FirewallTtlpolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallTtlpolicySrcaddr {
		return vs[0].([]FirewallTtlpolicySrcaddr)[vs[1].(int)]
	}).(FirewallTtlpolicySrcaddrOutput)
}

type FirewallVip46Monitor struct {
	// Health monitor name.
	Name *string `pulumi:"name"`
}

// FirewallVip46MonitorInput is an input type that accepts FirewallVip46MonitorArgs and FirewallVip46MonitorOutput values.
// You can construct a concrete instance of `FirewallVip46MonitorInput` via:
//
//	FirewallVip46MonitorArgs{...}
type FirewallVip46MonitorInput interface {
	pulumi.Input

	ToFirewallVip46MonitorOutput() FirewallVip46MonitorOutput
	ToFirewallVip46MonitorOutputWithContext(context.Context) FirewallVip46MonitorOutput
}

type FirewallVip46MonitorArgs struct {
	// Health monitor name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallVip46MonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip46Monitor)(nil)).Elem()
}

func (i FirewallVip46MonitorArgs) ToFirewallVip46MonitorOutput() FirewallVip46MonitorOutput {
	return i.ToFirewallVip46MonitorOutputWithContext(context.Background())
}

func (i FirewallVip46MonitorArgs) ToFirewallVip46MonitorOutputWithContext(ctx context.Context) FirewallVip46MonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip46MonitorOutput)
}

// FirewallVip46MonitorArrayInput is an input type that accepts FirewallVip46MonitorArray and FirewallVip46MonitorArrayOutput values.
// You can construct a concrete instance of `FirewallVip46MonitorArrayInput` via:
//
//	FirewallVip46MonitorArray{ FirewallVip46MonitorArgs{...} }
type FirewallVip46MonitorArrayInput interface {
	pulumi.Input

	ToFirewallVip46MonitorArrayOutput() FirewallVip46MonitorArrayOutput
	ToFirewallVip46MonitorArrayOutputWithContext(context.Context) FirewallVip46MonitorArrayOutput
}

type FirewallVip46MonitorArray []FirewallVip46MonitorInput

func (FirewallVip46MonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip46Monitor)(nil)).Elem()
}

func (i FirewallVip46MonitorArray) ToFirewallVip46MonitorArrayOutput() FirewallVip46MonitorArrayOutput {
	return i.ToFirewallVip46MonitorArrayOutputWithContext(context.Background())
}

func (i FirewallVip46MonitorArray) ToFirewallVip46MonitorArrayOutputWithContext(ctx context.Context) FirewallVip46MonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip46MonitorArrayOutput)
}

type FirewallVip46MonitorOutput struct{ *pulumi.OutputState }

func (FirewallVip46MonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip46Monitor)(nil)).Elem()
}

func (o FirewallVip46MonitorOutput) ToFirewallVip46MonitorOutput() FirewallVip46MonitorOutput {
	return o
}

func (o FirewallVip46MonitorOutput) ToFirewallVip46MonitorOutputWithContext(ctx context.Context) FirewallVip46MonitorOutput {
	return o
}

// Health monitor name.
func (o FirewallVip46MonitorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip46Monitor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallVip46MonitorArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip46MonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip46Monitor)(nil)).Elem()
}

func (o FirewallVip46MonitorArrayOutput) ToFirewallVip46MonitorArrayOutput() FirewallVip46MonitorArrayOutput {
	return o
}

func (o FirewallVip46MonitorArrayOutput) ToFirewallVip46MonitorArrayOutputWithContext(ctx context.Context) FirewallVip46MonitorArrayOutput {
	return o
}

func (o FirewallVip46MonitorArrayOutput) Index(i pulumi.IntInput) FirewallVip46MonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip46Monitor {
		return vs[0].([]FirewallVip46Monitor)[vs[1].(int)]
	}).(FirewallVip46MonitorOutput)
}

type FirewallVip46Realserver struct {
	// Restrict server to a client IP in this range.
	ClientIp *string `pulumi:"clientIp"`
	// Per server health check. Valid values: `disable`, `enable`, `vip`.
	Healthcheck *string `pulumi:"healthcheck"`
	// Hold down interval.
	HolddownInterval *int `pulumi:"holddownInterval"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// Mapped server IPv6.
	Ip *string `pulumi:"ip"`
	// Maximum number of connections allowed to server.
	MaxConnections *int `pulumi:"maxConnections"`
	// Health monitors.
	Monitor *string `pulumi:"monitor"`
	// Mapped server port.
	Port *int `pulumi:"port"`
	// Server administrative status. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// weight
	Weight *int `pulumi:"weight"`
}

// FirewallVip46RealserverInput is an input type that accepts FirewallVip46RealserverArgs and FirewallVip46RealserverOutput values.
// You can construct a concrete instance of `FirewallVip46RealserverInput` via:
//
//	FirewallVip46RealserverArgs{...}
type FirewallVip46RealserverInput interface {
	pulumi.Input

	ToFirewallVip46RealserverOutput() FirewallVip46RealserverOutput
	ToFirewallVip46RealserverOutputWithContext(context.Context) FirewallVip46RealserverOutput
}

type FirewallVip46RealserverArgs struct {
	// Restrict server to a client IP in this range.
	ClientIp pulumi.StringPtrInput `pulumi:"clientIp"`
	// Per server health check. Valid values: `disable`, `enable`, `vip`.
	Healthcheck pulumi.StringPtrInput `pulumi:"healthcheck"`
	// Hold down interval.
	HolddownInterval pulumi.IntPtrInput `pulumi:"holddownInterval"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Mapped server IPv6.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Maximum number of connections allowed to server.
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Health monitors.
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	// Mapped server port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Server administrative status. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// weight
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (FirewallVip46RealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip46Realserver)(nil)).Elem()
}

func (i FirewallVip46RealserverArgs) ToFirewallVip46RealserverOutput() FirewallVip46RealserverOutput {
	return i.ToFirewallVip46RealserverOutputWithContext(context.Background())
}

func (i FirewallVip46RealserverArgs) ToFirewallVip46RealserverOutputWithContext(ctx context.Context) FirewallVip46RealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip46RealserverOutput)
}

// FirewallVip46RealserverArrayInput is an input type that accepts FirewallVip46RealserverArray and FirewallVip46RealserverArrayOutput values.
// You can construct a concrete instance of `FirewallVip46RealserverArrayInput` via:
//
//	FirewallVip46RealserverArray{ FirewallVip46RealserverArgs{...} }
type FirewallVip46RealserverArrayInput interface {
	pulumi.Input

	ToFirewallVip46RealserverArrayOutput() FirewallVip46RealserverArrayOutput
	ToFirewallVip46RealserverArrayOutputWithContext(context.Context) FirewallVip46RealserverArrayOutput
}

type FirewallVip46RealserverArray []FirewallVip46RealserverInput

func (FirewallVip46RealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip46Realserver)(nil)).Elem()
}

func (i FirewallVip46RealserverArray) ToFirewallVip46RealserverArrayOutput() FirewallVip46RealserverArrayOutput {
	return i.ToFirewallVip46RealserverArrayOutputWithContext(context.Background())
}

func (i FirewallVip46RealserverArray) ToFirewallVip46RealserverArrayOutputWithContext(ctx context.Context) FirewallVip46RealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip46RealserverArrayOutput)
}

type FirewallVip46RealserverOutput struct{ *pulumi.OutputState }

func (FirewallVip46RealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip46Realserver)(nil)).Elem()
}

func (o FirewallVip46RealserverOutput) ToFirewallVip46RealserverOutput() FirewallVip46RealserverOutput {
	return o
}

func (o FirewallVip46RealserverOutput) ToFirewallVip46RealserverOutputWithContext(ctx context.Context) FirewallVip46RealserverOutput {
	return o
}

// Restrict server to a client IP in this range.
func (o FirewallVip46RealserverOutput) ClientIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip46Realserver) *string { return v.ClientIp }).(pulumi.StringPtrOutput)
}

// Per server health check. Valid values: `disable`, `enable`, `vip`.
func (o FirewallVip46RealserverOutput) Healthcheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip46Realserver) *string { return v.Healthcheck }).(pulumi.StringPtrOutput)
}

// Hold down interval.
func (o FirewallVip46RealserverOutput) HolddownInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip46Realserver) *int { return v.HolddownInterval }).(pulumi.IntPtrOutput)
}

// Real server ID.
func (o FirewallVip46RealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip46Realserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Mapped server IPv6.
func (o FirewallVip46RealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip46Realserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Maximum number of connections allowed to server.
func (o FirewallVip46RealserverOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip46Realserver) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Health monitors.
func (o FirewallVip46RealserverOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip46Realserver) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

// Mapped server port.
func (o FirewallVip46RealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip46Realserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Server administrative status. Valid values: `active`, `standby`, `disable`.
func (o FirewallVip46RealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip46Realserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// weight
func (o FirewallVip46RealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip46Realserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type FirewallVip46RealserverArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip46RealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip46Realserver)(nil)).Elem()
}

func (o FirewallVip46RealserverArrayOutput) ToFirewallVip46RealserverArrayOutput() FirewallVip46RealserverArrayOutput {
	return o
}

func (o FirewallVip46RealserverArrayOutput) ToFirewallVip46RealserverArrayOutputWithContext(ctx context.Context) FirewallVip46RealserverArrayOutput {
	return o
}

func (o FirewallVip46RealserverArrayOutput) Index(i pulumi.IntInput) FirewallVip46RealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip46Realserver {
		return vs[0].([]FirewallVip46Realserver)[vs[1].(int)]
	}).(FirewallVip46RealserverOutput)
}

type FirewallVip46SrcFilter struct {
	// Src-filter range.
	Range *string `pulumi:"range"`
}

// FirewallVip46SrcFilterInput is an input type that accepts FirewallVip46SrcFilterArgs and FirewallVip46SrcFilterOutput values.
// You can construct a concrete instance of `FirewallVip46SrcFilterInput` via:
//
//	FirewallVip46SrcFilterArgs{...}
type FirewallVip46SrcFilterInput interface {
	pulumi.Input

	ToFirewallVip46SrcFilterOutput() FirewallVip46SrcFilterOutput
	ToFirewallVip46SrcFilterOutputWithContext(context.Context) FirewallVip46SrcFilterOutput
}

type FirewallVip46SrcFilterArgs struct {
	// Src-filter range.
	Range pulumi.StringPtrInput `pulumi:"range"`
}

func (FirewallVip46SrcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip46SrcFilter)(nil)).Elem()
}

func (i FirewallVip46SrcFilterArgs) ToFirewallVip46SrcFilterOutput() FirewallVip46SrcFilterOutput {
	return i.ToFirewallVip46SrcFilterOutputWithContext(context.Background())
}

func (i FirewallVip46SrcFilterArgs) ToFirewallVip46SrcFilterOutputWithContext(ctx context.Context) FirewallVip46SrcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip46SrcFilterOutput)
}

// FirewallVip46SrcFilterArrayInput is an input type that accepts FirewallVip46SrcFilterArray and FirewallVip46SrcFilterArrayOutput values.
// You can construct a concrete instance of `FirewallVip46SrcFilterArrayInput` via:
//
//	FirewallVip46SrcFilterArray{ FirewallVip46SrcFilterArgs{...} }
type FirewallVip46SrcFilterArrayInput interface {
	pulumi.Input

	ToFirewallVip46SrcFilterArrayOutput() FirewallVip46SrcFilterArrayOutput
	ToFirewallVip46SrcFilterArrayOutputWithContext(context.Context) FirewallVip46SrcFilterArrayOutput
}

type FirewallVip46SrcFilterArray []FirewallVip46SrcFilterInput

func (FirewallVip46SrcFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip46SrcFilter)(nil)).Elem()
}

func (i FirewallVip46SrcFilterArray) ToFirewallVip46SrcFilterArrayOutput() FirewallVip46SrcFilterArrayOutput {
	return i.ToFirewallVip46SrcFilterArrayOutputWithContext(context.Background())
}

func (i FirewallVip46SrcFilterArray) ToFirewallVip46SrcFilterArrayOutputWithContext(ctx context.Context) FirewallVip46SrcFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip46SrcFilterArrayOutput)
}

type FirewallVip46SrcFilterOutput struct{ *pulumi.OutputState }

func (FirewallVip46SrcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip46SrcFilter)(nil)).Elem()
}

func (o FirewallVip46SrcFilterOutput) ToFirewallVip46SrcFilterOutput() FirewallVip46SrcFilterOutput {
	return o
}

func (o FirewallVip46SrcFilterOutput) ToFirewallVip46SrcFilterOutputWithContext(ctx context.Context) FirewallVip46SrcFilterOutput {
	return o
}

// Src-filter range.
func (o FirewallVip46SrcFilterOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip46SrcFilter) *string { return v.Range }).(pulumi.StringPtrOutput)
}

type FirewallVip46SrcFilterArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip46SrcFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip46SrcFilter)(nil)).Elem()
}

func (o FirewallVip46SrcFilterArrayOutput) ToFirewallVip46SrcFilterArrayOutput() FirewallVip46SrcFilterArrayOutput {
	return o
}

func (o FirewallVip46SrcFilterArrayOutput) ToFirewallVip46SrcFilterArrayOutputWithContext(ctx context.Context) FirewallVip46SrcFilterArrayOutput {
	return o
}

func (o FirewallVip46SrcFilterArrayOutput) Index(i pulumi.IntInput) FirewallVip46SrcFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip46SrcFilter {
		return vs[0].([]FirewallVip46SrcFilter)[vs[1].(int)]
	}).(FirewallVip46SrcFilterOutput)
}

type FirewallVip46SrcintfFilter struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// FirewallVip46SrcintfFilterInput is an input type that accepts FirewallVip46SrcintfFilterArgs and FirewallVip46SrcintfFilterOutput values.
// You can construct a concrete instance of `FirewallVip46SrcintfFilterInput` via:
//
//	FirewallVip46SrcintfFilterArgs{...}
type FirewallVip46SrcintfFilterInput interface {
	pulumi.Input

	ToFirewallVip46SrcintfFilterOutput() FirewallVip46SrcintfFilterOutput
	ToFirewallVip46SrcintfFilterOutputWithContext(context.Context) FirewallVip46SrcintfFilterOutput
}

type FirewallVip46SrcintfFilterArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (FirewallVip46SrcintfFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip46SrcintfFilter)(nil)).Elem()
}

func (i FirewallVip46SrcintfFilterArgs) ToFirewallVip46SrcintfFilterOutput() FirewallVip46SrcintfFilterOutput {
	return i.ToFirewallVip46SrcintfFilterOutputWithContext(context.Background())
}

func (i FirewallVip46SrcintfFilterArgs) ToFirewallVip46SrcintfFilterOutputWithContext(ctx context.Context) FirewallVip46SrcintfFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip46SrcintfFilterOutput)
}

// FirewallVip46SrcintfFilterArrayInput is an input type that accepts FirewallVip46SrcintfFilterArray and FirewallVip46SrcintfFilterArrayOutput values.
// You can construct a concrete instance of `FirewallVip46SrcintfFilterArrayInput` via:
//
//	FirewallVip46SrcintfFilterArray{ FirewallVip46SrcintfFilterArgs{...} }
type FirewallVip46SrcintfFilterArrayInput interface {
	pulumi.Input

	ToFirewallVip46SrcintfFilterArrayOutput() FirewallVip46SrcintfFilterArrayOutput
	ToFirewallVip46SrcintfFilterArrayOutputWithContext(context.Context) FirewallVip46SrcintfFilterArrayOutput
}

type FirewallVip46SrcintfFilterArray []FirewallVip46SrcintfFilterInput

func (FirewallVip46SrcintfFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip46SrcintfFilter)(nil)).Elem()
}

func (i FirewallVip46SrcintfFilterArray) ToFirewallVip46SrcintfFilterArrayOutput() FirewallVip46SrcintfFilterArrayOutput {
	return i.ToFirewallVip46SrcintfFilterArrayOutputWithContext(context.Background())
}

func (i FirewallVip46SrcintfFilterArray) ToFirewallVip46SrcintfFilterArrayOutputWithContext(ctx context.Context) FirewallVip46SrcintfFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip46SrcintfFilterArrayOutput)
}

type FirewallVip46SrcintfFilterOutput struct{ *pulumi.OutputState }

func (FirewallVip46SrcintfFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip46SrcintfFilter)(nil)).Elem()
}

func (o FirewallVip46SrcintfFilterOutput) ToFirewallVip46SrcintfFilterOutput() FirewallVip46SrcintfFilterOutput {
	return o
}

func (o FirewallVip46SrcintfFilterOutput) ToFirewallVip46SrcintfFilterOutputWithContext(ctx context.Context) FirewallVip46SrcintfFilterOutput {
	return o
}

// Interface name.
func (o FirewallVip46SrcintfFilterOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip46SrcintfFilter) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type FirewallVip46SrcintfFilterArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip46SrcintfFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip46SrcintfFilter)(nil)).Elem()
}

func (o FirewallVip46SrcintfFilterArrayOutput) ToFirewallVip46SrcintfFilterArrayOutput() FirewallVip46SrcintfFilterArrayOutput {
	return o
}

func (o FirewallVip46SrcintfFilterArrayOutput) ToFirewallVip46SrcintfFilterArrayOutputWithContext(ctx context.Context) FirewallVip46SrcintfFilterArrayOutput {
	return o
}

func (o FirewallVip46SrcintfFilterArrayOutput) Index(i pulumi.IntInput) FirewallVip46SrcintfFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip46SrcintfFilter {
		return vs[0].([]FirewallVip46SrcintfFilter)[vs[1].(int)]
	}).(FirewallVip46SrcintfFilterOutput)
}

type FirewallVip64Monitor struct {
	// Health monitor name.
	Name *string `pulumi:"name"`
}

// FirewallVip64MonitorInput is an input type that accepts FirewallVip64MonitorArgs and FirewallVip64MonitorOutput values.
// You can construct a concrete instance of `FirewallVip64MonitorInput` via:
//
//	FirewallVip64MonitorArgs{...}
type FirewallVip64MonitorInput interface {
	pulumi.Input

	ToFirewallVip64MonitorOutput() FirewallVip64MonitorOutput
	ToFirewallVip64MonitorOutputWithContext(context.Context) FirewallVip64MonitorOutput
}

type FirewallVip64MonitorArgs struct {
	// Health monitor name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallVip64MonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip64Monitor)(nil)).Elem()
}

func (i FirewallVip64MonitorArgs) ToFirewallVip64MonitorOutput() FirewallVip64MonitorOutput {
	return i.ToFirewallVip64MonitorOutputWithContext(context.Background())
}

func (i FirewallVip64MonitorArgs) ToFirewallVip64MonitorOutputWithContext(ctx context.Context) FirewallVip64MonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip64MonitorOutput)
}

// FirewallVip64MonitorArrayInput is an input type that accepts FirewallVip64MonitorArray and FirewallVip64MonitorArrayOutput values.
// You can construct a concrete instance of `FirewallVip64MonitorArrayInput` via:
//
//	FirewallVip64MonitorArray{ FirewallVip64MonitorArgs{...} }
type FirewallVip64MonitorArrayInput interface {
	pulumi.Input

	ToFirewallVip64MonitorArrayOutput() FirewallVip64MonitorArrayOutput
	ToFirewallVip64MonitorArrayOutputWithContext(context.Context) FirewallVip64MonitorArrayOutput
}

type FirewallVip64MonitorArray []FirewallVip64MonitorInput

func (FirewallVip64MonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip64Monitor)(nil)).Elem()
}

func (i FirewallVip64MonitorArray) ToFirewallVip64MonitorArrayOutput() FirewallVip64MonitorArrayOutput {
	return i.ToFirewallVip64MonitorArrayOutputWithContext(context.Background())
}

func (i FirewallVip64MonitorArray) ToFirewallVip64MonitorArrayOutputWithContext(ctx context.Context) FirewallVip64MonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip64MonitorArrayOutput)
}

type FirewallVip64MonitorOutput struct{ *pulumi.OutputState }

func (FirewallVip64MonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip64Monitor)(nil)).Elem()
}

func (o FirewallVip64MonitorOutput) ToFirewallVip64MonitorOutput() FirewallVip64MonitorOutput {
	return o
}

func (o FirewallVip64MonitorOutput) ToFirewallVip64MonitorOutputWithContext(ctx context.Context) FirewallVip64MonitorOutput {
	return o
}

// Health monitor name.
func (o FirewallVip64MonitorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip64Monitor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallVip64MonitorArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip64MonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip64Monitor)(nil)).Elem()
}

func (o FirewallVip64MonitorArrayOutput) ToFirewallVip64MonitorArrayOutput() FirewallVip64MonitorArrayOutput {
	return o
}

func (o FirewallVip64MonitorArrayOutput) ToFirewallVip64MonitorArrayOutputWithContext(ctx context.Context) FirewallVip64MonitorArrayOutput {
	return o
}

func (o FirewallVip64MonitorArrayOutput) Index(i pulumi.IntInput) FirewallVip64MonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip64Monitor {
		return vs[0].([]FirewallVip64Monitor)[vs[1].(int)]
	}).(FirewallVip64MonitorOutput)
}

type FirewallVip64Realserver struct {
	// Restrict server to a client IP in this range.
	ClientIp *string `pulumi:"clientIp"`
	// Per server health check. Valid values: `disable`, `enable`, `vip`.
	Healthcheck *string `pulumi:"healthcheck"`
	// Hold down interval.
	HolddownInterval *int `pulumi:"holddownInterval"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// Mapped server IP.
	Ip *string `pulumi:"ip"`
	// Maximum number of connections allowed to server.
	MaxConnections *int `pulumi:"maxConnections"`
	// Health monitors.
	Monitor *string `pulumi:"monitor"`
	// Mapped server port.
	Port *int `pulumi:"port"`
	// Server administrative status. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// weight
	Weight *int `pulumi:"weight"`
}

// FirewallVip64RealserverInput is an input type that accepts FirewallVip64RealserverArgs and FirewallVip64RealserverOutput values.
// You can construct a concrete instance of `FirewallVip64RealserverInput` via:
//
//	FirewallVip64RealserverArgs{...}
type FirewallVip64RealserverInput interface {
	pulumi.Input

	ToFirewallVip64RealserverOutput() FirewallVip64RealserverOutput
	ToFirewallVip64RealserverOutputWithContext(context.Context) FirewallVip64RealserverOutput
}

type FirewallVip64RealserverArgs struct {
	// Restrict server to a client IP in this range.
	ClientIp pulumi.StringPtrInput `pulumi:"clientIp"`
	// Per server health check. Valid values: `disable`, `enable`, `vip`.
	Healthcheck pulumi.StringPtrInput `pulumi:"healthcheck"`
	// Hold down interval.
	HolddownInterval pulumi.IntPtrInput `pulumi:"holddownInterval"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Mapped server IP.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Maximum number of connections allowed to server.
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Health monitors.
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	// Mapped server port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Server administrative status. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// weight
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (FirewallVip64RealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip64Realserver)(nil)).Elem()
}

func (i FirewallVip64RealserverArgs) ToFirewallVip64RealserverOutput() FirewallVip64RealserverOutput {
	return i.ToFirewallVip64RealserverOutputWithContext(context.Background())
}

func (i FirewallVip64RealserverArgs) ToFirewallVip64RealserverOutputWithContext(ctx context.Context) FirewallVip64RealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip64RealserverOutput)
}

// FirewallVip64RealserverArrayInput is an input type that accepts FirewallVip64RealserverArray and FirewallVip64RealserverArrayOutput values.
// You can construct a concrete instance of `FirewallVip64RealserverArrayInput` via:
//
//	FirewallVip64RealserverArray{ FirewallVip64RealserverArgs{...} }
type FirewallVip64RealserverArrayInput interface {
	pulumi.Input

	ToFirewallVip64RealserverArrayOutput() FirewallVip64RealserverArrayOutput
	ToFirewallVip64RealserverArrayOutputWithContext(context.Context) FirewallVip64RealserverArrayOutput
}

type FirewallVip64RealserverArray []FirewallVip64RealserverInput

func (FirewallVip64RealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip64Realserver)(nil)).Elem()
}

func (i FirewallVip64RealserverArray) ToFirewallVip64RealserverArrayOutput() FirewallVip64RealserverArrayOutput {
	return i.ToFirewallVip64RealserverArrayOutputWithContext(context.Background())
}

func (i FirewallVip64RealserverArray) ToFirewallVip64RealserverArrayOutputWithContext(ctx context.Context) FirewallVip64RealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip64RealserverArrayOutput)
}

type FirewallVip64RealserverOutput struct{ *pulumi.OutputState }

func (FirewallVip64RealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip64Realserver)(nil)).Elem()
}

func (o FirewallVip64RealserverOutput) ToFirewallVip64RealserverOutput() FirewallVip64RealserverOutput {
	return o
}

func (o FirewallVip64RealserverOutput) ToFirewallVip64RealserverOutputWithContext(ctx context.Context) FirewallVip64RealserverOutput {
	return o
}

// Restrict server to a client IP in this range.
func (o FirewallVip64RealserverOutput) ClientIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip64Realserver) *string { return v.ClientIp }).(pulumi.StringPtrOutput)
}

// Per server health check. Valid values: `disable`, `enable`, `vip`.
func (o FirewallVip64RealserverOutput) Healthcheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip64Realserver) *string { return v.Healthcheck }).(pulumi.StringPtrOutput)
}

// Hold down interval.
func (o FirewallVip64RealserverOutput) HolddownInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip64Realserver) *int { return v.HolddownInterval }).(pulumi.IntPtrOutput)
}

// Real server ID.
func (o FirewallVip64RealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip64Realserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Mapped server IP.
func (o FirewallVip64RealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip64Realserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Maximum number of connections allowed to server.
func (o FirewallVip64RealserverOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip64Realserver) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Health monitors.
func (o FirewallVip64RealserverOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip64Realserver) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

// Mapped server port.
func (o FirewallVip64RealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip64Realserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Server administrative status. Valid values: `active`, `standby`, `disable`.
func (o FirewallVip64RealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip64Realserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// weight
func (o FirewallVip64RealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip64Realserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type FirewallVip64RealserverArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip64RealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip64Realserver)(nil)).Elem()
}

func (o FirewallVip64RealserverArrayOutput) ToFirewallVip64RealserverArrayOutput() FirewallVip64RealserverArrayOutput {
	return o
}

func (o FirewallVip64RealserverArrayOutput) ToFirewallVip64RealserverArrayOutputWithContext(ctx context.Context) FirewallVip64RealserverArrayOutput {
	return o
}

func (o FirewallVip64RealserverArrayOutput) Index(i pulumi.IntInput) FirewallVip64RealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip64Realserver {
		return vs[0].([]FirewallVip64Realserver)[vs[1].(int)]
	}).(FirewallVip64RealserverOutput)
}

type FirewallVip64SrcFilter struct {
	// Src-filter range.
	Range *string `pulumi:"range"`
}

// FirewallVip64SrcFilterInput is an input type that accepts FirewallVip64SrcFilterArgs and FirewallVip64SrcFilterOutput values.
// You can construct a concrete instance of `FirewallVip64SrcFilterInput` via:
//
//	FirewallVip64SrcFilterArgs{...}
type FirewallVip64SrcFilterInput interface {
	pulumi.Input

	ToFirewallVip64SrcFilterOutput() FirewallVip64SrcFilterOutput
	ToFirewallVip64SrcFilterOutputWithContext(context.Context) FirewallVip64SrcFilterOutput
}

type FirewallVip64SrcFilterArgs struct {
	// Src-filter range.
	Range pulumi.StringPtrInput `pulumi:"range"`
}

func (FirewallVip64SrcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip64SrcFilter)(nil)).Elem()
}

func (i FirewallVip64SrcFilterArgs) ToFirewallVip64SrcFilterOutput() FirewallVip64SrcFilterOutput {
	return i.ToFirewallVip64SrcFilterOutputWithContext(context.Background())
}

func (i FirewallVip64SrcFilterArgs) ToFirewallVip64SrcFilterOutputWithContext(ctx context.Context) FirewallVip64SrcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip64SrcFilterOutput)
}

// FirewallVip64SrcFilterArrayInput is an input type that accepts FirewallVip64SrcFilterArray and FirewallVip64SrcFilterArrayOutput values.
// You can construct a concrete instance of `FirewallVip64SrcFilterArrayInput` via:
//
//	FirewallVip64SrcFilterArray{ FirewallVip64SrcFilterArgs{...} }
type FirewallVip64SrcFilterArrayInput interface {
	pulumi.Input

	ToFirewallVip64SrcFilterArrayOutput() FirewallVip64SrcFilterArrayOutput
	ToFirewallVip64SrcFilterArrayOutputWithContext(context.Context) FirewallVip64SrcFilterArrayOutput
}

type FirewallVip64SrcFilterArray []FirewallVip64SrcFilterInput

func (FirewallVip64SrcFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip64SrcFilter)(nil)).Elem()
}

func (i FirewallVip64SrcFilterArray) ToFirewallVip64SrcFilterArrayOutput() FirewallVip64SrcFilterArrayOutput {
	return i.ToFirewallVip64SrcFilterArrayOutputWithContext(context.Background())
}

func (i FirewallVip64SrcFilterArray) ToFirewallVip64SrcFilterArrayOutputWithContext(ctx context.Context) FirewallVip64SrcFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip64SrcFilterArrayOutput)
}

type FirewallVip64SrcFilterOutput struct{ *pulumi.OutputState }

func (FirewallVip64SrcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip64SrcFilter)(nil)).Elem()
}

func (o FirewallVip64SrcFilterOutput) ToFirewallVip64SrcFilterOutput() FirewallVip64SrcFilterOutput {
	return o
}

func (o FirewallVip64SrcFilterOutput) ToFirewallVip64SrcFilterOutputWithContext(ctx context.Context) FirewallVip64SrcFilterOutput {
	return o
}

// Src-filter range.
func (o FirewallVip64SrcFilterOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip64SrcFilter) *string { return v.Range }).(pulumi.StringPtrOutput)
}

type FirewallVip64SrcFilterArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip64SrcFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip64SrcFilter)(nil)).Elem()
}

func (o FirewallVip64SrcFilterArrayOutput) ToFirewallVip64SrcFilterArrayOutput() FirewallVip64SrcFilterArrayOutput {
	return o
}

func (o FirewallVip64SrcFilterArrayOutput) ToFirewallVip64SrcFilterArrayOutputWithContext(ctx context.Context) FirewallVip64SrcFilterArrayOutput {
	return o
}

func (o FirewallVip64SrcFilterArrayOutput) Index(i pulumi.IntInput) FirewallVip64SrcFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip64SrcFilter {
		return vs[0].([]FirewallVip64SrcFilter)[vs[1].(int)]
	}).(FirewallVip64SrcFilterOutput)
}

type FirewallVip6Monitor struct {
	// Health monitor name.
	Name *string `pulumi:"name"`
}

// FirewallVip6MonitorInput is an input type that accepts FirewallVip6MonitorArgs and FirewallVip6MonitorOutput values.
// You can construct a concrete instance of `FirewallVip6MonitorInput` via:
//
//	FirewallVip6MonitorArgs{...}
type FirewallVip6MonitorInput interface {
	pulumi.Input

	ToFirewallVip6MonitorOutput() FirewallVip6MonitorOutput
	ToFirewallVip6MonitorOutputWithContext(context.Context) FirewallVip6MonitorOutput
}

type FirewallVip6MonitorArgs struct {
	// Health monitor name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallVip6MonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip6Monitor)(nil)).Elem()
}

func (i FirewallVip6MonitorArgs) ToFirewallVip6MonitorOutput() FirewallVip6MonitorOutput {
	return i.ToFirewallVip6MonitorOutputWithContext(context.Background())
}

func (i FirewallVip6MonitorArgs) ToFirewallVip6MonitorOutputWithContext(ctx context.Context) FirewallVip6MonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip6MonitorOutput)
}

// FirewallVip6MonitorArrayInput is an input type that accepts FirewallVip6MonitorArray and FirewallVip6MonitorArrayOutput values.
// You can construct a concrete instance of `FirewallVip6MonitorArrayInput` via:
//
//	FirewallVip6MonitorArray{ FirewallVip6MonitorArgs{...} }
type FirewallVip6MonitorArrayInput interface {
	pulumi.Input

	ToFirewallVip6MonitorArrayOutput() FirewallVip6MonitorArrayOutput
	ToFirewallVip6MonitorArrayOutputWithContext(context.Context) FirewallVip6MonitorArrayOutput
}

type FirewallVip6MonitorArray []FirewallVip6MonitorInput

func (FirewallVip6MonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip6Monitor)(nil)).Elem()
}

func (i FirewallVip6MonitorArray) ToFirewallVip6MonitorArrayOutput() FirewallVip6MonitorArrayOutput {
	return i.ToFirewallVip6MonitorArrayOutputWithContext(context.Background())
}

func (i FirewallVip6MonitorArray) ToFirewallVip6MonitorArrayOutputWithContext(ctx context.Context) FirewallVip6MonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip6MonitorArrayOutput)
}

type FirewallVip6MonitorOutput struct{ *pulumi.OutputState }

func (FirewallVip6MonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip6Monitor)(nil)).Elem()
}

func (o FirewallVip6MonitorOutput) ToFirewallVip6MonitorOutput() FirewallVip6MonitorOutput {
	return o
}

func (o FirewallVip6MonitorOutput) ToFirewallVip6MonitorOutputWithContext(ctx context.Context) FirewallVip6MonitorOutput {
	return o
}

// Health monitor name.
func (o FirewallVip6MonitorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6Monitor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallVip6MonitorArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip6MonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip6Monitor)(nil)).Elem()
}

func (o FirewallVip6MonitorArrayOutput) ToFirewallVip6MonitorArrayOutput() FirewallVip6MonitorArrayOutput {
	return o
}

func (o FirewallVip6MonitorArrayOutput) ToFirewallVip6MonitorArrayOutputWithContext(ctx context.Context) FirewallVip6MonitorArrayOutput {
	return o
}

func (o FirewallVip6MonitorArrayOutput) Index(i pulumi.IntInput) FirewallVip6MonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip6Monitor {
		return vs[0].([]FirewallVip6Monitor)[vs[1].(int)]
	}).(FirewallVip6MonitorOutput)
}

type FirewallVip6Realserver struct {
	// Only clients in this IP range can connect to this real server.
	ClientIp *string `pulumi:"clientIp"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
	Healthcheck *string `pulumi:"healthcheck"`
	// Time in seconds that the health check monitor continues to monitor an unresponsive server that should be active.
	HolddownInterval *int `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IPv6 address of the real server.
	Ip *string `pulumi:"ip"`
	// Max number of active connections that can directed to the real server. When reached, sessions are sent to other real servers.
	MaxConnections *int `pulumi:"maxConnections"`
	// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
	Monitor *string `pulumi:"monitor"`
	// Port for communicating with the real server. Required if port forwarding is enabled.
	Port *int `pulumi:"port"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// FirewallVip6RealserverInput is an input type that accepts FirewallVip6RealserverArgs and FirewallVip6RealserverOutput values.
// You can construct a concrete instance of `FirewallVip6RealserverInput` via:
//
//	FirewallVip6RealserverArgs{...}
type FirewallVip6RealserverInput interface {
	pulumi.Input

	ToFirewallVip6RealserverOutput() FirewallVip6RealserverOutput
	ToFirewallVip6RealserverOutputWithContext(context.Context) FirewallVip6RealserverOutput
}

type FirewallVip6RealserverArgs struct {
	// Only clients in this IP range can connect to this real server.
	ClientIp pulumi.StringPtrInput `pulumi:"clientIp"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
	Healthcheck pulumi.StringPtrInput `pulumi:"healthcheck"`
	// Time in seconds that the health check monitor continues to monitor an unresponsive server that should be active.
	HolddownInterval pulumi.IntPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IPv6 address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Max number of active connections that can directed to the real server. When reached, sessions are sent to other real servers.
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	// Port for communicating with the real server. Required if port forwarding is enabled.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (FirewallVip6RealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip6Realserver)(nil)).Elem()
}

func (i FirewallVip6RealserverArgs) ToFirewallVip6RealserverOutput() FirewallVip6RealserverOutput {
	return i.ToFirewallVip6RealserverOutputWithContext(context.Background())
}

func (i FirewallVip6RealserverArgs) ToFirewallVip6RealserverOutputWithContext(ctx context.Context) FirewallVip6RealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip6RealserverOutput)
}

// FirewallVip6RealserverArrayInput is an input type that accepts FirewallVip6RealserverArray and FirewallVip6RealserverArrayOutput values.
// You can construct a concrete instance of `FirewallVip6RealserverArrayInput` via:
//
//	FirewallVip6RealserverArray{ FirewallVip6RealserverArgs{...} }
type FirewallVip6RealserverArrayInput interface {
	pulumi.Input

	ToFirewallVip6RealserverArrayOutput() FirewallVip6RealserverArrayOutput
	ToFirewallVip6RealserverArrayOutputWithContext(context.Context) FirewallVip6RealserverArrayOutput
}

type FirewallVip6RealserverArray []FirewallVip6RealserverInput

func (FirewallVip6RealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip6Realserver)(nil)).Elem()
}

func (i FirewallVip6RealserverArray) ToFirewallVip6RealserverArrayOutput() FirewallVip6RealserverArrayOutput {
	return i.ToFirewallVip6RealserverArrayOutputWithContext(context.Background())
}

func (i FirewallVip6RealserverArray) ToFirewallVip6RealserverArrayOutputWithContext(ctx context.Context) FirewallVip6RealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip6RealserverArrayOutput)
}

type FirewallVip6RealserverOutput struct{ *pulumi.OutputState }

func (FirewallVip6RealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip6Realserver)(nil)).Elem()
}

func (o FirewallVip6RealserverOutput) ToFirewallVip6RealserverOutput() FirewallVip6RealserverOutput {
	return o
}

func (o FirewallVip6RealserverOutput) ToFirewallVip6RealserverOutputWithContext(ctx context.Context) FirewallVip6RealserverOutput {
	return o
}

// Only clients in this IP range can connect to this real server.
func (o FirewallVip6RealserverOutput) ClientIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *string { return v.ClientIp }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
func (o FirewallVip6RealserverOutput) Healthcheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *string { return v.Healthcheck }).(pulumi.StringPtrOutput)
}

// Time in seconds that the health check monitor continues to monitor an unresponsive server that should be active.
func (o FirewallVip6RealserverOutput) HolddownInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *int { return v.HolddownInterval }).(pulumi.IntPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o FirewallVip6RealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o FirewallVip6RealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IPv6 address of the real server.
func (o FirewallVip6RealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Max number of active connections that can directed to the real server. When reached, sessions are sent to other real servers.
func (o FirewallVip6RealserverOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
func (o FirewallVip6RealserverOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server. Required if port forwarding is enabled.
func (o FirewallVip6RealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o FirewallVip6RealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o FirewallVip6RealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip6Realserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type FirewallVip6RealserverArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip6RealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip6Realserver)(nil)).Elem()
}

func (o FirewallVip6RealserverArrayOutput) ToFirewallVip6RealserverArrayOutput() FirewallVip6RealserverArrayOutput {
	return o
}

func (o FirewallVip6RealserverArrayOutput) ToFirewallVip6RealserverArrayOutputWithContext(ctx context.Context) FirewallVip6RealserverArrayOutput {
	return o
}

func (o FirewallVip6RealserverArrayOutput) Index(i pulumi.IntInput) FirewallVip6RealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip6Realserver {
		return vs[0].([]FirewallVip6Realserver)[vs[1].(int)]
	}).(FirewallVip6RealserverOutput)
}

type FirewallVip6SrcFilter struct {
	// Source-filter range.
	Range *string `pulumi:"range"`
}

// FirewallVip6SrcFilterInput is an input type that accepts FirewallVip6SrcFilterArgs and FirewallVip6SrcFilterOutput values.
// You can construct a concrete instance of `FirewallVip6SrcFilterInput` via:
//
//	FirewallVip6SrcFilterArgs{...}
type FirewallVip6SrcFilterInput interface {
	pulumi.Input

	ToFirewallVip6SrcFilterOutput() FirewallVip6SrcFilterOutput
	ToFirewallVip6SrcFilterOutputWithContext(context.Context) FirewallVip6SrcFilterOutput
}

type FirewallVip6SrcFilterArgs struct {
	// Source-filter range.
	Range pulumi.StringPtrInput `pulumi:"range"`
}

func (FirewallVip6SrcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip6SrcFilter)(nil)).Elem()
}

func (i FirewallVip6SrcFilterArgs) ToFirewallVip6SrcFilterOutput() FirewallVip6SrcFilterOutput {
	return i.ToFirewallVip6SrcFilterOutputWithContext(context.Background())
}

func (i FirewallVip6SrcFilterArgs) ToFirewallVip6SrcFilterOutputWithContext(ctx context.Context) FirewallVip6SrcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip6SrcFilterOutput)
}

// FirewallVip6SrcFilterArrayInput is an input type that accepts FirewallVip6SrcFilterArray and FirewallVip6SrcFilterArrayOutput values.
// You can construct a concrete instance of `FirewallVip6SrcFilterArrayInput` via:
//
//	FirewallVip6SrcFilterArray{ FirewallVip6SrcFilterArgs{...} }
type FirewallVip6SrcFilterArrayInput interface {
	pulumi.Input

	ToFirewallVip6SrcFilterArrayOutput() FirewallVip6SrcFilterArrayOutput
	ToFirewallVip6SrcFilterArrayOutputWithContext(context.Context) FirewallVip6SrcFilterArrayOutput
}

type FirewallVip6SrcFilterArray []FirewallVip6SrcFilterInput

func (FirewallVip6SrcFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip6SrcFilter)(nil)).Elem()
}

func (i FirewallVip6SrcFilterArray) ToFirewallVip6SrcFilterArrayOutput() FirewallVip6SrcFilterArrayOutput {
	return i.ToFirewallVip6SrcFilterArrayOutputWithContext(context.Background())
}

func (i FirewallVip6SrcFilterArray) ToFirewallVip6SrcFilterArrayOutputWithContext(ctx context.Context) FirewallVip6SrcFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip6SrcFilterArrayOutput)
}

type FirewallVip6SrcFilterOutput struct{ *pulumi.OutputState }

func (FirewallVip6SrcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip6SrcFilter)(nil)).Elem()
}

func (o FirewallVip6SrcFilterOutput) ToFirewallVip6SrcFilterOutput() FirewallVip6SrcFilterOutput {
	return o
}

func (o FirewallVip6SrcFilterOutput) ToFirewallVip6SrcFilterOutputWithContext(ctx context.Context) FirewallVip6SrcFilterOutput {
	return o
}

// Source-filter range.
func (o FirewallVip6SrcFilterOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6SrcFilter) *string { return v.Range }).(pulumi.StringPtrOutput)
}

type FirewallVip6SrcFilterArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip6SrcFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip6SrcFilter)(nil)).Elem()
}

func (o FirewallVip6SrcFilterArrayOutput) ToFirewallVip6SrcFilterArrayOutput() FirewallVip6SrcFilterArrayOutput {
	return o
}

func (o FirewallVip6SrcFilterArrayOutput) ToFirewallVip6SrcFilterArrayOutputWithContext(ctx context.Context) FirewallVip6SrcFilterArrayOutput {
	return o
}

func (o FirewallVip6SrcFilterArrayOutput) Index(i pulumi.IntInput) FirewallVip6SrcFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip6SrcFilter {
		return vs[0].([]FirewallVip6SrcFilter)[vs[1].(int)]
	}).(FirewallVip6SrcFilterOutput)
}

type FirewallVip6SslCipherSuite struct {
	// Cipher suite name.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions *string `pulumi:"versions"`
}

// FirewallVip6SslCipherSuiteInput is an input type that accepts FirewallVip6SslCipherSuiteArgs and FirewallVip6SslCipherSuiteOutput values.
// You can construct a concrete instance of `FirewallVip6SslCipherSuiteInput` via:
//
//	FirewallVip6SslCipherSuiteArgs{...}
type FirewallVip6SslCipherSuiteInput interface {
	pulumi.Input

	ToFirewallVip6SslCipherSuiteOutput() FirewallVip6SslCipherSuiteOutput
	ToFirewallVip6SslCipherSuiteOutputWithContext(context.Context) FirewallVip6SslCipherSuiteOutput
}

type FirewallVip6SslCipherSuiteArgs struct {
	// Cipher suite name.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (FirewallVip6SslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip6SslCipherSuite)(nil)).Elem()
}

func (i FirewallVip6SslCipherSuiteArgs) ToFirewallVip6SslCipherSuiteOutput() FirewallVip6SslCipherSuiteOutput {
	return i.ToFirewallVip6SslCipherSuiteOutputWithContext(context.Background())
}

func (i FirewallVip6SslCipherSuiteArgs) ToFirewallVip6SslCipherSuiteOutputWithContext(ctx context.Context) FirewallVip6SslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip6SslCipherSuiteOutput)
}

// FirewallVip6SslCipherSuiteArrayInput is an input type that accepts FirewallVip6SslCipherSuiteArray and FirewallVip6SslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `FirewallVip6SslCipherSuiteArrayInput` via:
//
//	FirewallVip6SslCipherSuiteArray{ FirewallVip6SslCipherSuiteArgs{...} }
type FirewallVip6SslCipherSuiteArrayInput interface {
	pulumi.Input

	ToFirewallVip6SslCipherSuiteArrayOutput() FirewallVip6SslCipherSuiteArrayOutput
	ToFirewallVip6SslCipherSuiteArrayOutputWithContext(context.Context) FirewallVip6SslCipherSuiteArrayOutput
}

type FirewallVip6SslCipherSuiteArray []FirewallVip6SslCipherSuiteInput

func (FirewallVip6SslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip6SslCipherSuite)(nil)).Elem()
}

func (i FirewallVip6SslCipherSuiteArray) ToFirewallVip6SslCipherSuiteArrayOutput() FirewallVip6SslCipherSuiteArrayOutput {
	return i.ToFirewallVip6SslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i FirewallVip6SslCipherSuiteArray) ToFirewallVip6SslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallVip6SslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip6SslCipherSuiteArrayOutput)
}

type FirewallVip6SslCipherSuiteOutput struct{ *pulumi.OutputState }

func (FirewallVip6SslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip6SslCipherSuite)(nil)).Elem()
}

func (o FirewallVip6SslCipherSuiteOutput) ToFirewallVip6SslCipherSuiteOutput() FirewallVip6SslCipherSuiteOutput {
	return o
}

func (o FirewallVip6SslCipherSuiteOutput) ToFirewallVip6SslCipherSuiteOutputWithContext(ctx context.Context) FirewallVip6SslCipherSuiteOutput {
	return o
}

// Cipher suite name.
func (o FirewallVip6SslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6SslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o FirewallVip6SslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip6SslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with.
func (o FirewallVip6SslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6SslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type FirewallVip6SslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip6SslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip6SslCipherSuite)(nil)).Elem()
}

func (o FirewallVip6SslCipherSuiteArrayOutput) ToFirewallVip6SslCipherSuiteArrayOutput() FirewallVip6SslCipherSuiteArrayOutput {
	return o
}

func (o FirewallVip6SslCipherSuiteArrayOutput) ToFirewallVip6SslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallVip6SslCipherSuiteArrayOutput {
	return o
}

func (o FirewallVip6SslCipherSuiteArrayOutput) Index(i pulumi.IntInput) FirewallVip6SslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip6SslCipherSuite {
		return vs[0].([]FirewallVip6SslCipherSuite)[vs[1].(int)]
	}).(FirewallVip6SslCipherSuiteOutput)
}

type FirewallVip6SslServerCipherSuite struct {
	// Cipher suite name.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions *string `pulumi:"versions"`
}

// FirewallVip6SslServerCipherSuiteInput is an input type that accepts FirewallVip6SslServerCipherSuiteArgs and FirewallVip6SslServerCipherSuiteOutput values.
// You can construct a concrete instance of `FirewallVip6SslServerCipherSuiteInput` via:
//
//	FirewallVip6SslServerCipherSuiteArgs{...}
type FirewallVip6SslServerCipherSuiteInput interface {
	pulumi.Input

	ToFirewallVip6SslServerCipherSuiteOutput() FirewallVip6SslServerCipherSuiteOutput
	ToFirewallVip6SslServerCipherSuiteOutputWithContext(context.Context) FirewallVip6SslServerCipherSuiteOutput
}

type FirewallVip6SslServerCipherSuiteArgs struct {
	// Cipher suite name.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (FirewallVip6SslServerCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip6SslServerCipherSuite)(nil)).Elem()
}

func (i FirewallVip6SslServerCipherSuiteArgs) ToFirewallVip6SslServerCipherSuiteOutput() FirewallVip6SslServerCipherSuiteOutput {
	return i.ToFirewallVip6SslServerCipherSuiteOutputWithContext(context.Background())
}

func (i FirewallVip6SslServerCipherSuiteArgs) ToFirewallVip6SslServerCipherSuiteOutputWithContext(ctx context.Context) FirewallVip6SslServerCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip6SslServerCipherSuiteOutput)
}

// FirewallVip6SslServerCipherSuiteArrayInput is an input type that accepts FirewallVip6SslServerCipherSuiteArray and FirewallVip6SslServerCipherSuiteArrayOutput values.
// You can construct a concrete instance of `FirewallVip6SslServerCipherSuiteArrayInput` via:
//
//	FirewallVip6SslServerCipherSuiteArray{ FirewallVip6SslServerCipherSuiteArgs{...} }
type FirewallVip6SslServerCipherSuiteArrayInput interface {
	pulumi.Input

	ToFirewallVip6SslServerCipherSuiteArrayOutput() FirewallVip6SslServerCipherSuiteArrayOutput
	ToFirewallVip6SslServerCipherSuiteArrayOutputWithContext(context.Context) FirewallVip6SslServerCipherSuiteArrayOutput
}

type FirewallVip6SslServerCipherSuiteArray []FirewallVip6SslServerCipherSuiteInput

func (FirewallVip6SslServerCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip6SslServerCipherSuite)(nil)).Elem()
}

func (i FirewallVip6SslServerCipherSuiteArray) ToFirewallVip6SslServerCipherSuiteArrayOutput() FirewallVip6SslServerCipherSuiteArrayOutput {
	return i.ToFirewallVip6SslServerCipherSuiteArrayOutputWithContext(context.Background())
}

func (i FirewallVip6SslServerCipherSuiteArray) ToFirewallVip6SslServerCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallVip6SslServerCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVip6SslServerCipherSuiteArrayOutput)
}

type FirewallVip6SslServerCipherSuiteOutput struct{ *pulumi.OutputState }

func (FirewallVip6SslServerCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVip6SslServerCipherSuite)(nil)).Elem()
}

func (o FirewallVip6SslServerCipherSuiteOutput) ToFirewallVip6SslServerCipherSuiteOutput() FirewallVip6SslServerCipherSuiteOutput {
	return o
}

func (o FirewallVip6SslServerCipherSuiteOutput) ToFirewallVip6SslServerCipherSuiteOutputWithContext(ctx context.Context) FirewallVip6SslServerCipherSuiteOutput {
	return o
}

// Cipher suite name.
func (o FirewallVip6SslServerCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6SslServerCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o FirewallVip6SslServerCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVip6SslServerCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with.
func (o FirewallVip6SslServerCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVip6SslServerCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type FirewallVip6SslServerCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (FirewallVip6SslServerCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVip6SslServerCipherSuite)(nil)).Elem()
}

func (o FirewallVip6SslServerCipherSuiteArrayOutput) ToFirewallVip6SslServerCipherSuiteArrayOutput() FirewallVip6SslServerCipherSuiteArrayOutput {
	return o
}

func (o FirewallVip6SslServerCipherSuiteArrayOutput) ToFirewallVip6SslServerCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallVip6SslServerCipherSuiteArrayOutput {
	return o
}

func (o FirewallVip6SslServerCipherSuiteArrayOutput) Index(i pulumi.IntInput) FirewallVip6SslServerCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVip6SslServerCipherSuite {
		return vs[0].([]FirewallVip6SslServerCipherSuite)[vs[1].(int)]
	}).(FirewallVip6SslServerCipherSuiteOutput)
}

type FirewallVipExtaddr struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallVipExtaddrInput is an input type that accepts FirewallVipExtaddrArgs and FirewallVipExtaddrOutput values.
// You can construct a concrete instance of `FirewallVipExtaddrInput` via:
//
//	FirewallVipExtaddrArgs{...}
type FirewallVipExtaddrInput interface {
	pulumi.Input

	ToFirewallVipExtaddrOutput() FirewallVipExtaddrOutput
	ToFirewallVipExtaddrOutputWithContext(context.Context) FirewallVipExtaddrOutput
}

type FirewallVipExtaddrArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallVipExtaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipExtaddr)(nil)).Elem()
}

func (i FirewallVipExtaddrArgs) ToFirewallVipExtaddrOutput() FirewallVipExtaddrOutput {
	return i.ToFirewallVipExtaddrOutputWithContext(context.Background())
}

func (i FirewallVipExtaddrArgs) ToFirewallVipExtaddrOutputWithContext(ctx context.Context) FirewallVipExtaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipExtaddrOutput)
}

// FirewallVipExtaddrArrayInput is an input type that accepts FirewallVipExtaddrArray and FirewallVipExtaddrArrayOutput values.
// You can construct a concrete instance of `FirewallVipExtaddrArrayInput` via:
//
//	FirewallVipExtaddrArray{ FirewallVipExtaddrArgs{...} }
type FirewallVipExtaddrArrayInput interface {
	pulumi.Input

	ToFirewallVipExtaddrArrayOutput() FirewallVipExtaddrArrayOutput
	ToFirewallVipExtaddrArrayOutputWithContext(context.Context) FirewallVipExtaddrArrayOutput
}

type FirewallVipExtaddrArray []FirewallVipExtaddrInput

func (FirewallVipExtaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipExtaddr)(nil)).Elem()
}

func (i FirewallVipExtaddrArray) ToFirewallVipExtaddrArrayOutput() FirewallVipExtaddrArrayOutput {
	return i.ToFirewallVipExtaddrArrayOutputWithContext(context.Background())
}

func (i FirewallVipExtaddrArray) ToFirewallVipExtaddrArrayOutputWithContext(ctx context.Context) FirewallVipExtaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipExtaddrArrayOutput)
}

type FirewallVipExtaddrOutput struct{ *pulumi.OutputState }

func (FirewallVipExtaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipExtaddr)(nil)).Elem()
}

func (o FirewallVipExtaddrOutput) ToFirewallVipExtaddrOutput() FirewallVipExtaddrOutput {
	return o
}

func (o FirewallVipExtaddrOutput) ToFirewallVipExtaddrOutputWithContext(ctx context.Context) FirewallVipExtaddrOutput {
	return o
}

// Address name.
func (o FirewallVipExtaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipExtaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallVipExtaddrArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipExtaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipExtaddr)(nil)).Elem()
}

func (o FirewallVipExtaddrArrayOutput) ToFirewallVipExtaddrArrayOutput() FirewallVipExtaddrArrayOutput {
	return o
}

func (o FirewallVipExtaddrArrayOutput) ToFirewallVipExtaddrArrayOutputWithContext(ctx context.Context) FirewallVipExtaddrArrayOutput {
	return o
}

func (o FirewallVipExtaddrArrayOutput) Index(i pulumi.IntInput) FirewallVipExtaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipExtaddr {
		return vs[0].([]FirewallVipExtaddr)[vs[1].(int)]
	}).(FirewallVipExtaddrOutput)
}

type FirewallVipMappedip struct {
	// Mapped IP range.
	Range *string `pulumi:"range"`
}

// FirewallVipMappedipInput is an input type that accepts FirewallVipMappedipArgs and FirewallVipMappedipOutput values.
// You can construct a concrete instance of `FirewallVipMappedipInput` via:
//
//	FirewallVipMappedipArgs{...}
type FirewallVipMappedipInput interface {
	pulumi.Input

	ToFirewallVipMappedipOutput() FirewallVipMappedipOutput
	ToFirewallVipMappedipOutputWithContext(context.Context) FirewallVipMappedipOutput
}

type FirewallVipMappedipArgs struct {
	// Mapped IP range.
	Range pulumi.StringPtrInput `pulumi:"range"`
}

func (FirewallVipMappedipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipMappedip)(nil)).Elem()
}

func (i FirewallVipMappedipArgs) ToFirewallVipMappedipOutput() FirewallVipMappedipOutput {
	return i.ToFirewallVipMappedipOutputWithContext(context.Background())
}

func (i FirewallVipMappedipArgs) ToFirewallVipMappedipOutputWithContext(ctx context.Context) FirewallVipMappedipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipMappedipOutput)
}

// FirewallVipMappedipArrayInput is an input type that accepts FirewallVipMappedipArray and FirewallVipMappedipArrayOutput values.
// You can construct a concrete instance of `FirewallVipMappedipArrayInput` via:
//
//	FirewallVipMappedipArray{ FirewallVipMappedipArgs{...} }
type FirewallVipMappedipArrayInput interface {
	pulumi.Input

	ToFirewallVipMappedipArrayOutput() FirewallVipMappedipArrayOutput
	ToFirewallVipMappedipArrayOutputWithContext(context.Context) FirewallVipMappedipArrayOutput
}

type FirewallVipMappedipArray []FirewallVipMappedipInput

func (FirewallVipMappedipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipMappedip)(nil)).Elem()
}

func (i FirewallVipMappedipArray) ToFirewallVipMappedipArrayOutput() FirewallVipMappedipArrayOutput {
	return i.ToFirewallVipMappedipArrayOutputWithContext(context.Background())
}

func (i FirewallVipMappedipArray) ToFirewallVipMappedipArrayOutputWithContext(ctx context.Context) FirewallVipMappedipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipMappedipArrayOutput)
}

type FirewallVipMappedipOutput struct{ *pulumi.OutputState }

func (FirewallVipMappedipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipMappedip)(nil)).Elem()
}

func (o FirewallVipMappedipOutput) ToFirewallVipMappedipOutput() FirewallVipMappedipOutput {
	return o
}

func (o FirewallVipMappedipOutput) ToFirewallVipMappedipOutputWithContext(ctx context.Context) FirewallVipMappedipOutput {
	return o
}

// Mapped IP range.
func (o FirewallVipMappedipOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipMappedip) *string { return v.Range }).(pulumi.StringPtrOutput)
}

type FirewallVipMappedipArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipMappedipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipMappedip)(nil)).Elem()
}

func (o FirewallVipMappedipArrayOutput) ToFirewallVipMappedipArrayOutput() FirewallVipMappedipArrayOutput {
	return o
}

func (o FirewallVipMappedipArrayOutput) ToFirewallVipMappedipArrayOutputWithContext(ctx context.Context) FirewallVipMappedipArrayOutput {
	return o
}

func (o FirewallVipMappedipArrayOutput) Index(i pulumi.IntInput) FirewallVipMappedipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipMappedip {
		return vs[0].([]FirewallVipMappedip)[vs[1].(int)]
	}).(FirewallVipMappedipOutput)
}

type FirewallVipMonitor struct {
	// Health monitor name.
	Name *string `pulumi:"name"`
}

// FirewallVipMonitorInput is an input type that accepts FirewallVipMonitorArgs and FirewallVipMonitorOutput values.
// You can construct a concrete instance of `FirewallVipMonitorInput` via:
//
//	FirewallVipMonitorArgs{...}
type FirewallVipMonitorInput interface {
	pulumi.Input

	ToFirewallVipMonitorOutput() FirewallVipMonitorOutput
	ToFirewallVipMonitorOutputWithContext(context.Context) FirewallVipMonitorOutput
}

type FirewallVipMonitorArgs struct {
	// Health monitor name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallVipMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipMonitor)(nil)).Elem()
}

func (i FirewallVipMonitorArgs) ToFirewallVipMonitorOutput() FirewallVipMonitorOutput {
	return i.ToFirewallVipMonitorOutputWithContext(context.Background())
}

func (i FirewallVipMonitorArgs) ToFirewallVipMonitorOutputWithContext(ctx context.Context) FirewallVipMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipMonitorOutput)
}

// FirewallVipMonitorArrayInput is an input type that accepts FirewallVipMonitorArray and FirewallVipMonitorArrayOutput values.
// You can construct a concrete instance of `FirewallVipMonitorArrayInput` via:
//
//	FirewallVipMonitorArray{ FirewallVipMonitorArgs{...} }
type FirewallVipMonitorArrayInput interface {
	pulumi.Input

	ToFirewallVipMonitorArrayOutput() FirewallVipMonitorArrayOutput
	ToFirewallVipMonitorArrayOutputWithContext(context.Context) FirewallVipMonitorArrayOutput
}

type FirewallVipMonitorArray []FirewallVipMonitorInput

func (FirewallVipMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipMonitor)(nil)).Elem()
}

func (i FirewallVipMonitorArray) ToFirewallVipMonitorArrayOutput() FirewallVipMonitorArrayOutput {
	return i.ToFirewallVipMonitorArrayOutputWithContext(context.Background())
}

func (i FirewallVipMonitorArray) ToFirewallVipMonitorArrayOutputWithContext(ctx context.Context) FirewallVipMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipMonitorArrayOutput)
}

type FirewallVipMonitorOutput struct{ *pulumi.OutputState }

func (FirewallVipMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipMonitor)(nil)).Elem()
}

func (o FirewallVipMonitorOutput) ToFirewallVipMonitorOutput() FirewallVipMonitorOutput {
	return o
}

func (o FirewallVipMonitorOutput) ToFirewallVipMonitorOutputWithContext(ctx context.Context) FirewallVipMonitorOutput {
	return o
}

// Health monitor name.
func (o FirewallVipMonitorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipMonitor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallVipMonitorArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipMonitor)(nil)).Elem()
}

func (o FirewallVipMonitorArrayOutput) ToFirewallVipMonitorArrayOutput() FirewallVipMonitorArrayOutput {
	return o
}

func (o FirewallVipMonitorArrayOutput) ToFirewallVipMonitorArrayOutputWithContext(ctx context.Context) FirewallVipMonitorArrayOutput {
	return o
}

func (o FirewallVipMonitorArrayOutput) Index(i pulumi.IntInput) FirewallVipMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipMonitor {
		return vs[0].([]FirewallVipMonitor)[vs[1].(int)]
	}).(FirewallVipMonitorOutput)
}

type FirewallVipRealserver struct {
	// Dynamic address of the real server.
	Address *string `pulumi:"address"`
	// Only clients in this IP range can connect to this real server.
	ClientIp *string `pulumi:"clientIp"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
	Healthcheck *string `pulumi:"healthcheck"`
	// Time in seconds that the health check monitor continues to monitor and unresponsive server that should be active.
	HolddownInterval *int `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost *string `pulumi:"httpHost"`
	// Real server ID.
	Id *int `pulumi:"id"`
	// IP address of the real server.
	Ip *string `pulumi:"ip"`
	// Max number of active connections that can be directed to the real server. When reached, sessions are sent to other real servers.
	MaxConnections *int `pulumi:"maxConnections"`
	// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
	Monitor *string `pulumi:"monitor"`
	// Port for communicating with the real server. Required if port forwarding is enabled.
	Port *int `pulumi:"port"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status *string `pulumi:"status"`
	// Type of address. Valid values: `ip`, `address`.
	Type *string `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight *int `pulumi:"weight"`
}

// FirewallVipRealserverInput is an input type that accepts FirewallVipRealserverArgs and FirewallVipRealserverOutput values.
// You can construct a concrete instance of `FirewallVipRealserverInput` via:
//
//	FirewallVipRealserverArgs{...}
type FirewallVipRealserverInput interface {
	pulumi.Input

	ToFirewallVipRealserverOutput() FirewallVipRealserverOutput
	ToFirewallVipRealserverOutputWithContext(context.Context) FirewallVipRealserverOutput
}

type FirewallVipRealserverArgs struct {
	// Dynamic address of the real server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Only clients in this IP range can connect to this real server.
	ClientIp pulumi.StringPtrInput `pulumi:"clientIp"`
	// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
	Healthcheck pulumi.StringPtrInput `pulumi:"healthcheck"`
	// Time in seconds that the health check monitor continues to monitor and unresponsive server that should be active.
	HolddownInterval pulumi.IntPtrInput `pulumi:"holddownInterval"`
	// HTTP server domain name in HTTP header.
	HttpHost pulumi.StringPtrInput `pulumi:"httpHost"`
	// Real server ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// IP address of the real server.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Max number of active connections that can be directed to the real server. When reached, sessions are sent to other real servers.
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
	Monitor pulumi.StringPtrInput `pulumi:"monitor"`
	// Port for communicating with the real server. Required if port forwarding is enabled.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Type of address. Valid values: `ip`, `address`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (FirewallVipRealserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipRealserver)(nil)).Elem()
}

func (i FirewallVipRealserverArgs) ToFirewallVipRealserverOutput() FirewallVipRealserverOutput {
	return i.ToFirewallVipRealserverOutputWithContext(context.Background())
}

func (i FirewallVipRealserverArgs) ToFirewallVipRealserverOutputWithContext(ctx context.Context) FirewallVipRealserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipRealserverOutput)
}

// FirewallVipRealserverArrayInput is an input type that accepts FirewallVipRealserverArray and FirewallVipRealserverArrayOutput values.
// You can construct a concrete instance of `FirewallVipRealserverArrayInput` via:
//
//	FirewallVipRealserverArray{ FirewallVipRealserverArgs{...} }
type FirewallVipRealserverArrayInput interface {
	pulumi.Input

	ToFirewallVipRealserverArrayOutput() FirewallVipRealserverArrayOutput
	ToFirewallVipRealserverArrayOutputWithContext(context.Context) FirewallVipRealserverArrayOutput
}

type FirewallVipRealserverArray []FirewallVipRealserverInput

func (FirewallVipRealserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipRealserver)(nil)).Elem()
}

func (i FirewallVipRealserverArray) ToFirewallVipRealserverArrayOutput() FirewallVipRealserverArrayOutput {
	return i.ToFirewallVipRealserverArrayOutputWithContext(context.Background())
}

func (i FirewallVipRealserverArray) ToFirewallVipRealserverArrayOutputWithContext(ctx context.Context) FirewallVipRealserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipRealserverArrayOutput)
}

type FirewallVipRealserverOutput struct{ *pulumi.OutputState }

func (FirewallVipRealserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipRealserver)(nil)).Elem()
}

func (o FirewallVipRealserverOutput) ToFirewallVipRealserverOutput() FirewallVipRealserverOutput {
	return o
}

func (o FirewallVipRealserverOutput) ToFirewallVipRealserverOutputWithContext(ctx context.Context) FirewallVipRealserverOutput {
	return o
}

// Dynamic address of the real server.
func (o FirewallVipRealserverOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Only clients in this IP range can connect to this real server.
func (o FirewallVipRealserverOutput) ClientIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *string { return v.ClientIp }).(pulumi.StringPtrOutput)
}

// Enable to check the responsiveness of the real server before forwarding traffic. Valid values: `disable`, `enable`, `vip`.
func (o FirewallVipRealserverOutput) Healthcheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *string { return v.Healthcheck }).(pulumi.StringPtrOutput)
}

// Time in seconds that the health check monitor continues to monitor and unresponsive server that should be active.
func (o FirewallVipRealserverOutput) HolddownInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *int { return v.HolddownInterval }).(pulumi.IntPtrOutput)
}

// HTTP server domain name in HTTP header.
func (o FirewallVipRealserverOutput) HttpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *string { return v.HttpHost }).(pulumi.StringPtrOutput)
}

// Real server ID.
func (o FirewallVipRealserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// IP address of the real server.
func (o FirewallVipRealserverOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Max number of active connections that can be directed to the real server. When reached, sessions are sent to other real servers.
func (o FirewallVipRealserverOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Name of the health check monitor to use when polling to determine a virtual server's connectivity status.
func (o FirewallVipRealserverOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

// Port for communicating with the real server. Required if port forwarding is enabled.
func (o FirewallVipRealserverOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Set the status of the real server to active so that it can accept traffic, or on standby or disabled so no traffic is sent. Valid values: `active`, `standby`, `disable`.
func (o FirewallVipRealserverOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Type of address. Valid values: `ip`, `address`.
func (o FirewallVipRealserverOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more connections.
func (o FirewallVipRealserverOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVipRealserver) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type FirewallVipRealserverArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipRealserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipRealserver)(nil)).Elem()
}

func (o FirewallVipRealserverArrayOutput) ToFirewallVipRealserverArrayOutput() FirewallVipRealserverArrayOutput {
	return o
}

func (o FirewallVipRealserverArrayOutput) ToFirewallVipRealserverArrayOutputWithContext(ctx context.Context) FirewallVipRealserverArrayOutput {
	return o
}

func (o FirewallVipRealserverArrayOutput) Index(i pulumi.IntInput) FirewallVipRealserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipRealserver {
		return vs[0].([]FirewallVipRealserver)[vs[1].(int)]
	}).(FirewallVipRealserverOutput)
}

type FirewallVipService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallVipServiceInput is an input type that accepts FirewallVipServiceArgs and FirewallVipServiceOutput values.
// You can construct a concrete instance of `FirewallVipServiceInput` via:
//
//	FirewallVipServiceArgs{...}
type FirewallVipServiceInput interface {
	pulumi.Input

	ToFirewallVipServiceOutput() FirewallVipServiceOutput
	ToFirewallVipServiceOutputWithContext(context.Context) FirewallVipServiceOutput
}

type FirewallVipServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallVipServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipService)(nil)).Elem()
}

func (i FirewallVipServiceArgs) ToFirewallVipServiceOutput() FirewallVipServiceOutput {
	return i.ToFirewallVipServiceOutputWithContext(context.Background())
}

func (i FirewallVipServiceArgs) ToFirewallVipServiceOutputWithContext(ctx context.Context) FirewallVipServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipServiceOutput)
}

// FirewallVipServiceArrayInput is an input type that accepts FirewallVipServiceArray and FirewallVipServiceArrayOutput values.
// You can construct a concrete instance of `FirewallVipServiceArrayInput` via:
//
//	FirewallVipServiceArray{ FirewallVipServiceArgs{...} }
type FirewallVipServiceArrayInput interface {
	pulumi.Input

	ToFirewallVipServiceArrayOutput() FirewallVipServiceArrayOutput
	ToFirewallVipServiceArrayOutputWithContext(context.Context) FirewallVipServiceArrayOutput
}

type FirewallVipServiceArray []FirewallVipServiceInput

func (FirewallVipServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipService)(nil)).Elem()
}

func (i FirewallVipServiceArray) ToFirewallVipServiceArrayOutput() FirewallVipServiceArrayOutput {
	return i.ToFirewallVipServiceArrayOutputWithContext(context.Background())
}

func (i FirewallVipServiceArray) ToFirewallVipServiceArrayOutputWithContext(ctx context.Context) FirewallVipServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipServiceArrayOutput)
}

type FirewallVipServiceOutput struct{ *pulumi.OutputState }

func (FirewallVipServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipService)(nil)).Elem()
}

func (o FirewallVipServiceOutput) ToFirewallVipServiceOutput() FirewallVipServiceOutput {
	return o
}

func (o FirewallVipServiceOutput) ToFirewallVipServiceOutputWithContext(ctx context.Context) FirewallVipServiceOutput {
	return o
}

// Service name.
func (o FirewallVipServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallVipServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipService)(nil)).Elem()
}

func (o FirewallVipServiceArrayOutput) ToFirewallVipServiceArrayOutput() FirewallVipServiceArrayOutput {
	return o
}

func (o FirewallVipServiceArrayOutput) ToFirewallVipServiceArrayOutputWithContext(ctx context.Context) FirewallVipServiceArrayOutput {
	return o
}

func (o FirewallVipServiceArrayOutput) Index(i pulumi.IntInput) FirewallVipServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipService {
		return vs[0].([]FirewallVipService)[vs[1].(int)]
	}).(FirewallVipServiceOutput)
}

type FirewallVipSrcFilter struct {
	// Source-filter range.
	Range *string `pulumi:"range"`
}

// FirewallVipSrcFilterInput is an input type that accepts FirewallVipSrcFilterArgs and FirewallVipSrcFilterOutput values.
// You can construct a concrete instance of `FirewallVipSrcFilterInput` via:
//
//	FirewallVipSrcFilterArgs{...}
type FirewallVipSrcFilterInput interface {
	pulumi.Input

	ToFirewallVipSrcFilterOutput() FirewallVipSrcFilterOutput
	ToFirewallVipSrcFilterOutputWithContext(context.Context) FirewallVipSrcFilterOutput
}

type FirewallVipSrcFilterArgs struct {
	// Source-filter range.
	Range pulumi.StringPtrInput `pulumi:"range"`
}

func (FirewallVipSrcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipSrcFilter)(nil)).Elem()
}

func (i FirewallVipSrcFilterArgs) ToFirewallVipSrcFilterOutput() FirewallVipSrcFilterOutput {
	return i.ToFirewallVipSrcFilterOutputWithContext(context.Background())
}

func (i FirewallVipSrcFilterArgs) ToFirewallVipSrcFilterOutputWithContext(ctx context.Context) FirewallVipSrcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipSrcFilterOutput)
}

// FirewallVipSrcFilterArrayInput is an input type that accepts FirewallVipSrcFilterArray and FirewallVipSrcFilterArrayOutput values.
// You can construct a concrete instance of `FirewallVipSrcFilterArrayInput` via:
//
//	FirewallVipSrcFilterArray{ FirewallVipSrcFilterArgs{...} }
type FirewallVipSrcFilterArrayInput interface {
	pulumi.Input

	ToFirewallVipSrcFilterArrayOutput() FirewallVipSrcFilterArrayOutput
	ToFirewallVipSrcFilterArrayOutputWithContext(context.Context) FirewallVipSrcFilterArrayOutput
}

type FirewallVipSrcFilterArray []FirewallVipSrcFilterInput

func (FirewallVipSrcFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipSrcFilter)(nil)).Elem()
}

func (i FirewallVipSrcFilterArray) ToFirewallVipSrcFilterArrayOutput() FirewallVipSrcFilterArrayOutput {
	return i.ToFirewallVipSrcFilterArrayOutputWithContext(context.Background())
}

func (i FirewallVipSrcFilterArray) ToFirewallVipSrcFilterArrayOutputWithContext(ctx context.Context) FirewallVipSrcFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipSrcFilterArrayOutput)
}

type FirewallVipSrcFilterOutput struct{ *pulumi.OutputState }

func (FirewallVipSrcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipSrcFilter)(nil)).Elem()
}

func (o FirewallVipSrcFilterOutput) ToFirewallVipSrcFilterOutput() FirewallVipSrcFilterOutput {
	return o
}

func (o FirewallVipSrcFilterOutput) ToFirewallVipSrcFilterOutputWithContext(ctx context.Context) FirewallVipSrcFilterOutput {
	return o
}

// Source-filter range.
func (o FirewallVipSrcFilterOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipSrcFilter) *string { return v.Range }).(pulumi.StringPtrOutput)
}

type FirewallVipSrcFilterArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipSrcFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipSrcFilter)(nil)).Elem()
}

func (o FirewallVipSrcFilterArrayOutput) ToFirewallVipSrcFilterArrayOutput() FirewallVipSrcFilterArrayOutput {
	return o
}

func (o FirewallVipSrcFilterArrayOutput) ToFirewallVipSrcFilterArrayOutputWithContext(ctx context.Context) FirewallVipSrcFilterArrayOutput {
	return o
}

func (o FirewallVipSrcFilterArrayOutput) Index(i pulumi.IntInput) FirewallVipSrcFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipSrcFilter {
		return vs[0].([]FirewallVipSrcFilter)[vs[1].(int)]
	}).(FirewallVipSrcFilterOutput)
}

type FirewallVipSrcintfFilter struct {
	// Interface name.
	InterfaceName *string `pulumi:"interfaceName"`
}

// FirewallVipSrcintfFilterInput is an input type that accepts FirewallVipSrcintfFilterArgs and FirewallVipSrcintfFilterOutput values.
// You can construct a concrete instance of `FirewallVipSrcintfFilterInput` via:
//
//	FirewallVipSrcintfFilterArgs{...}
type FirewallVipSrcintfFilterInput interface {
	pulumi.Input

	ToFirewallVipSrcintfFilterOutput() FirewallVipSrcintfFilterOutput
	ToFirewallVipSrcintfFilterOutputWithContext(context.Context) FirewallVipSrcintfFilterOutput
}

type FirewallVipSrcintfFilterArgs struct {
	// Interface name.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (FirewallVipSrcintfFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipSrcintfFilter)(nil)).Elem()
}

func (i FirewallVipSrcintfFilterArgs) ToFirewallVipSrcintfFilterOutput() FirewallVipSrcintfFilterOutput {
	return i.ToFirewallVipSrcintfFilterOutputWithContext(context.Background())
}

func (i FirewallVipSrcintfFilterArgs) ToFirewallVipSrcintfFilterOutputWithContext(ctx context.Context) FirewallVipSrcintfFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipSrcintfFilterOutput)
}

// FirewallVipSrcintfFilterArrayInput is an input type that accepts FirewallVipSrcintfFilterArray and FirewallVipSrcintfFilterArrayOutput values.
// You can construct a concrete instance of `FirewallVipSrcintfFilterArrayInput` via:
//
//	FirewallVipSrcintfFilterArray{ FirewallVipSrcintfFilterArgs{...} }
type FirewallVipSrcintfFilterArrayInput interface {
	pulumi.Input

	ToFirewallVipSrcintfFilterArrayOutput() FirewallVipSrcintfFilterArrayOutput
	ToFirewallVipSrcintfFilterArrayOutputWithContext(context.Context) FirewallVipSrcintfFilterArrayOutput
}

type FirewallVipSrcintfFilterArray []FirewallVipSrcintfFilterInput

func (FirewallVipSrcintfFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipSrcintfFilter)(nil)).Elem()
}

func (i FirewallVipSrcintfFilterArray) ToFirewallVipSrcintfFilterArrayOutput() FirewallVipSrcintfFilterArrayOutput {
	return i.ToFirewallVipSrcintfFilterArrayOutputWithContext(context.Background())
}

func (i FirewallVipSrcintfFilterArray) ToFirewallVipSrcintfFilterArrayOutputWithContext(ctx context.Context) FirewallVipSrcintfFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipSrcintfFilterArrayOutput)
}

type FirewallVipSrcintfFilterOutput struct{ *pulumi.OutputState }

func (FirewallVipSrcintfFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipSrcintfFilter)(nil)).Elem()
}

func (o FirewallVipSrcintfFilterOutput) ToFirewallVipSrcintfFilterOutput() FirewallVipSrcintfFilterOutput {
	return o
}

func (o FirewallVipSrcintfFilterOutput) ToFirewallVipSrcintfFilterOutputWithContext(ctx context.Context) FirewallVipSrcintfFilterOutput {
	return o
}

// Interface name.
func (o FirewallVipSrcintfFilterOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipSrcintfFilter) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type FirewallVipSrcintfFilterArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipSrcintfFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipSrcintfFilter)(nil)).Elem()
}

func (o FirewallVipSrcintfFilterArrayOutput) ToFirewallVipSrcintfFilterArrayOutput() FirewallVipSrcintfFilterArrayOutput {
	return o
}

func (o FirewallVipSrcintfFilterArrayOutput) ToFirewallVipSrcintfFilterArrayOutputWithContext(ctx context.Context) FirewallVipSrcintfFilterArrayOutput {
	return o
}

func (o FirewallVipSrcintfFilterArrayOutput) Index(i pulumi.IntInput) FirewallVipSrcintfFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipSrcintfFilter {
		return vs[0].([]FirewallVipSrcintfFilter)[vs[1].(int)]
	}).(FirewallVipSrcintfFilterOutput)
}

type FirewallVipSslCipherSuite struct {
	// Cipher suite name.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions *string `pulumi:"versions"`
}

// FirewallVipSslCipherSuiteInput is an input type that accepts FirewallVipSslCipherSuiteArgs and FirewallVipSslCipherSuiteOutput values.
// You can construct a concrete instance of `FirewallVipSslCipherSuiteInput` via:
//
//	FirewallVipSslCipherSuiteArgs{...}
type FirewallVipSslCipherSuiteInput interface {
	pulumi.Input

	ToFirewallVipSslCipherSuiteOutput() FirewallVipSslCipherSuiteOutput
	ToFirewallVipSslCipherSuiteOutputWithContext(context.Context) FirewallVipSslCipherSuiteOutput
}

type FirewallVipSslCipherSuiteArgs struct {
	// Cipher suite name.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (FirewallVipSslCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipSslCipherSuite)(nil)).Elem()
}

func (i FirewallVipSslCipherSuiteArgs) ToFirewallVipSslCipherSuiteOutput() FirewallVipSslCipherSuiteOutput {
	return i.ToFirewallVipSslCipherSuiteOutputWithContext(context.Background())
}

func (i FirewallVipSslCipherSuiteArgs) ToFirewallVipSslCipherSuiteOutputWithContext(ctx context.Context) FirewallVipSslCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipSslCipherSuiteOutput)
}

// FirewallVipSslCipherSuiteArrayInput is an input type that accepts FirewallVipSslCipherSuiteArray and FirewallVipSslCipherSuiteArrayOutput values.
// You can construct a concrete instance of `FirewallVipSslCipherSuiteArrayInput` via:
//
//	FirewallVipSslCipherSuiteArray{ FirewallVipSslCipherSuiteArgs{...} }
type FirewallVipSslCipherSuiteArrayInput interface {
	pulumi.Input

	ToFirewallVipSslCipherSuiteArrayOutput() FirewallVipSslCipherSuiteArrayOutput
	ToFirewallVipSslCipherSuiteArrayOutputWithContext(context.Context) FirewallVipSslCipherSuiteArrayOutput
}

type FirewallVipSslCipherSuiteArray []FirewallVipSslCipherSuiteInput

func (FirewallVipSslCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipSslCipherSuite)(nil)).Elem()
}

func (i FirewallVipSslCipherSuiteArray) ToFirewallVipSslCipherSuiteArrayOutput() FirewallVipSslCipherSuiteArrayOutput {
	return i.ToFirewallVipSslCipherSuiteArrayOutputWithContext(context.Background())
}

func (i FirewallVipSslCipherSuiteArray) ToFirewallVipSslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallVipSslCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipSslCipherSuiteArrayOutput)
}

type FirewallVipSslCipherSuiteOutput struct{ *pulumi.OutputState }

func (FirewallVipSslCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipSslCipherSuite)(nil)).Elem()
}

func (o FirewallVipSslCipherSuiteOutput) ToFirewallVipSslCipherSuiteOutput() FirewallVipSslCipherSuiteOutput {
	return o
}

func (o FirewallVipSslCipherSuiteOutput) ToFirewallVipSslCipherSuiteOutputWithContext(ctx context.Context) FirewallVipSslCipherSuiteOutput {
	return o
}

// Cipher suite name.
func (o FirewallVipSslCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipSslCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o FirewallVipSslCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVipSslCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with.
func (o FirewallVipSslCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipSslCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type FirewallVipSslCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipSslCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipSslCipherSuite)(nil)).Elem()
}

func (o FirewallVipSslCipherSuiteArrayOutput) ToFirewallVipSslCipherSuiteArrayOutput() FirewallVipSslCipherSuiteArrayOutput {
	return o
}

func (o FirewallVipSslCipherSuiteArrayOutput) ToFirewallVipSslCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallVipSslCipherSuiteArrayOutput {
	return o
}

func (o FirewallVipSslCipherSuiteArrayOutput) Index(i pulumi.IntInput) FirewallVipSslCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipSslCipherSuite {
		return vs[0].([]FirewallVipSslCipherSuite)[vs[1].(int)]
	}).(FirewallVipSslCipherSuiteOutput)
}

type FirewallVipSslServerCipherSuite struct {
	// Cipher suite name.
	Cipher *string `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority *int `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions *string `pulumi:"versions"`
}

// FirewallVipSslServerCipherSuiteInput is an input type that accepts FirewallVipSslServerCipherSuiteArgs and FirewallVipSslServerCipherSuiteOutput values.
// You can construct a concrete instance of `FirewallVipSslServerCipherSuiteInput` via:
//
//	FirewallVipSslServerCipherSuiteArgs{...}
type FirewallVipSslServerCipherSuiteInput interface {
	pulumi.Input

	ToFirewallVipSslServerCipherSuiteOutput() FirewallVipSslServerCipherSuiteOutput
	ToFirewallVipSslServerCipherSuiteOutputWithContext(context.Context) FirewallVipSslServerCipherSuiteOutput
}

type FirewallVipSslServerCipherSuiteArgs struct {
	// Cipher suite name.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// SSL/TLS cipher suites priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// SSL/TLS versions that the cipher suite can be used with.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (FirewallVipSslServerCipherSuiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipSslServerCipherSuite)(nil)).Elem()
}

func (i FirewallVipSslServerCipherSuiteArgs) ToFirewallVipSslServerCipherSuiteOutput() FirewallVipSslServerCipherSuiteOutput {
	return i.ToFirewallVipSslServerCipherSuiteOutputWithContext(context.Background())
}

func (i FirewallVipSslServerCipherSuiteArgs) ToFirewallVipSslServerCipherSuiteOutputWithContext(ctx context.Context) FirewallVipSslServerCipherSuiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipSslServerCipherSuiteOutput)
}

// FirewallVipSslServerCipherSuiteArrayInput is an input type that accepts FirewallVipSslServerCipherSuiteArray and FirewallVipSslServerCipherSuiteArrayOutput values.
// You can construct a concrete instance of `FirewallVipSslServerCipherSuiteArrayInput` via:
//
//	FirewallVipSslServerCipherSuiteArray{ FirewallVipSslServerCipherSuiteArgs{...} }
type FirewallVipSslServerCipherSuiteArrayInput interface {
	pulumi.Input

	ToFirewallVipSslServerCipherSuiteArrayOutput() FirewallVipSslServerCipherSuiteArrayOutput
	ToFirewallVipSslServerCipherSuiteArrayOutputWithContext(context.Context) FirewallVipSslServerCipherSuiteArrayOutput
}

type FirewallVipSslServerCipherSuiteArray []FirewallVipSslServerCipherSuiteInput

func (FirewallVipSslServerCipherSuiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipSslServerCipherSuite)(nil)).Elem()
}

func (i FirewallVipSslServerCipherSuiteArray) ToFirewallVipSslServerCipherSuiteArrayOutput() FirewallVipSslServerCipherSuiteArrayOutput {
	return i.ToFirewallVipSslServerCipherSuiteArrayOutputWithContext(context.Background())
}

func (i FirewallVipSslServerCipherSuiteArray) ToFirewallVipSslServerCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallVipSslServerCipherSuiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipSslServerCipherSuiteArrayOutput)
}

type FirewallVipSslServerCipherSuiteOutput struct{ *pulumi.OutputState }

func (FirewallVipSslServerCipherSuiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipSslServerCipherSuite)(nil)).Elem()
}

func (o FirewallVipSslServerCipherSuiteOutput) ToFirewallVipSslServerCipherSuiteOutput() FirewallVipSslServerCipherSuiteOutput {
	return o
}

func (o FirewallVipSslServerCipherSuiteOutput) ToFirewallVipSslServerCipherSuiteOutputWithContext(ctx context.Context) FirewallVipSslServerCipherSuiteOutput {
	return o
}

// Cipher suite name.
func (o FirewallVipSslServerCipherSuiteOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipSslServerCipherSuite) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// SSL/TLS cipher suites priority.
func (o FirewallVipSslServerCipherSuiteOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVipSslServerCipherSuite) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// SSL/TLS versions that the cipher suite can be used with.
func (o FirewallVipSslServerCipherSuiteOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipSslServerCipherSuite) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type FirewallVipSslServerCipherSuiteArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipSslServerCipherSuiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipSslServerCipherSuite)(nil)).Elem()
}

func (o FirewallVipSslServerCipherSuiteArrayOutput) ToFirewallVipSslServerCipherSuiteArrayOutput() FirewallVipSslServerCipherSuiteArrayOutput {
	return o
}

func (o FirewallVipSslServerCipherSuiteArrayOutput) ToFirewallVipSslServerCipherSuiteArrayOutputWithContext(ctx context.Context) FirewallVipSslServerCipherSuiteArrayOutput {
	return o
}

func (o FirewallVipSslServerCipherSuiteArrayOutput) Index(i pulumi.IntInput) FirewallVipSslServerCipherSuiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipSslServerCipherSuite {
		return vs[0].([]FirewallVipSslServerCipherSuite)[vs[1].(int)]
	}).(FirewallVipSslServerCipherSuiteOutput)
}

type FirewallVipgrp46Member struct {
	// VIP46 name.
	Name *string `pulumi:"name"`
}

// FirewallVipgrp46MemberInput is an input type that accepts FirewallVipgrp46MemberArgs and FirewallVipgrp46MemberOutput values.
// You can construct a concrete instance of `FirewallVipgrp46MemberInput` via:
//
//	FirewallVipgrp46MemberArgs{...}
type FirewallVipgrp46MemberInput interface {
	pulumi.Input

	ToFirewallVipgrp46MemberOutput() FirewallVipgrp46MemberOutput
	ToFirewallVipgrp46MemberOutputWithContext(context.Context) FirewallVipgrp46MemberOutput
}

type FirewallVipgrp46MemberArgs struct {
	// VIP46 name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallVipgrp46MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipgrp46Member)(nil)).Elem()
}

func (i FirewallVipgrp46MemberArgs) ToFirewallVipgrp46MemberOutput() FirewallVipgrp46MemberOutput {
	return i.ToFirewallVipgrp46MemberOutputWithContext(context.Background())
}

func (i FirewallVipgrp46MemberArgs) ToFirewallVipgrp46MemberOutputWithContext(ctx context.Context) FirewallVipgrp46MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp46MemberOutput)
}

// FirewallVipgrp46MemberArrayInput is an input type that accepts FirewallVipgrp46MemberArray and FirewallVipgrp46MemberArrayOutput values.
// You can construct a concrete instance of `FirewallVipgrp46MemberArrayInput` via:
//
//	FirewallVipgrp46MemberArray{ FirewallVipgrp46MemberArgs{...} }
type FirewallVipgrp46MemberArrayInput interface {
	pulumi.Input

	ToFirewallVipgrp46MemberArrayOutput() FirewallVipgrp46MemberArrayOutput
	ToFirewallVipgrp46MemberArrayOutputWithContext(context.Context) FirewallVipgrp46MemberArrayOutput
}

type FirewallVipgrp46MemberArray []FirewallVipgrp46MemberInput

func (FirewallVipgrp46MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipgrp46Member)(nil)).Elem()
}

func (i FirewallVipgrp46MemberArray) ToFirewallVipgrp46MemberArrayOutput() FirewallVipgrp46MemberArrayOutput {
	return i.ToFirewallVipgrp46MemberArrayOutputWithContext(context.Background())
}

func (i FirewallVipgrp46MemberArray) ToFirewallVipgrp46MemberArrayOutputWithContext(ctx context.Context) FirewallVipgrp46MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp46MemberArrayOutput)
}

type FirewallVipgrp46MemberOutput struct{ *pulumi.OutputState }

func (FirewallVipgrp46MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipgrp46Member)(nil)).Elem()
}

func (o FirewallVipgrp46MemberOutput) ToFirewallVipgrp46MemberOutput() FirewallVipgrp46MemberOutput {
	return o
}

func (o FirewallVipgrp46MemberOutput) ToFirewallVipgrp46MemberOutputWithContext(ctx context.Context) FirewallVipgrp46MemberOutput {
	return o
}

// VIP46 name.
func (o FirewallVipgrp46MemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipgrp46Member) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallVipgrp46MemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipgrp46MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipgrp46Member)(nil)).Elem()
}

func (o FirewallVipgrp46MemberArrayOutput) ToFirewallVipgrp46MemberArrayOutput() FirewallVipgrp46MemberArrayOutput {
	return o
}

func (o FirewallVipgrp46MemberArrayOutput) ToFirewallVipgrp46MemberArrayOutputWithContext(ctx context.Context) FirewallVipgrp46MemberArrayOutput {
	return o
}

func (o FirewallVipgrp46MemberArrayOutput) Index(i pulumi.IntInput) FirewallVipgrp46MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipgrp46Member {
		return vs[0].([]FirewallVipgrp46Member)[vs[1].(int)]
	}).(FirewallVipgrp46MemberOutput)
}

type FirewallVipgrp64Member struct {
	// VIP64 name.
	Name *string `pulumi:"name"`
}

// FirewallVipgrp64MemberInput is an input type that accepts FirewallVipgrp64MemberArgs and FirewallVipgrp64MemberOutput values.
// You can construct a concrete instance of `FirewallVipgrp64MemberInput` via:
//
//	FirewallVipgrp64MemberArgs{...}
type FirewallVipgrp64MemberInput interface {
	pulumi.Input

	ToFirewallVipgrp64MemberOutput() FirewallVipgrp64MemberOutput
	ToFirewallVipgrp64MemberOutputWithContext(context.Context) FirewallVipgrp64MemberOutput
}

type FirewallVipgrp64MemberArgs struct {
	// VIP64 name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallVipgrp64MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipgrp64Member)(nil)).Elem()
}

func (i FirewallVipgrp64MemberArgs) ToFirewallVipgrp64MemberOutput() FirewallVipgrp64MemberOutput {
	return i.ToFirewallVipgrp64MemberOutputWithContext(context.Background())
}

func (i FirewallVipgrp64MemberArgs) ToFirewallVipgrp64MemberOutputWithContext(ctx context.Context) FirewallVipgrp64MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp64MemberOutput)
}

// FirewallVipgrp64MemberArrayInput is an input type that accepts FirewallVipgrp64MemberArray and FirewallVipgrp64MemberArrayOutput values.
// You can construct a concrete instance of `FirewallVipgrp64MemberArrayInput` via:
//
//	FirewallVipgrp64MemberArray{ FirewallVipgrp64MemberArgs{...} }
type FirewallVipgrp64MemberArrayInput interface {
	pulumi.Input

	ToFirewallVipgrp64MemberArrayOutput() FirewallVipgrp64MemberArrayOutput
	ToFirewallVipgrp64MemberArrayOutputWithContext(context.Context) FirewallVipgrp64MemberArrayOutput
}

type FirewallVipgrp64MemberArray []FirewallVipgrp64MemberInput

func (FirewallVipgrp64MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipgrp64Member)(nil)).Elem()
}

func (i FirewallVipgrp64MemberArray) ToFirewallVipgrp64MemberArrayOutput() FirewallVipgrp64MemberArrayOutput {
	return i.ToFirewallVipgrp64MemberArrayOutputWithContext(context.Background())
}

func (i FirewallVipgrp64MemberArray) ToFirewallVipgrp64MemberArrayOutputWithContext(ctx context.Context) FirewallVipgrp64MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp64MemberArrayOutput)
}

type FirewallVipgrp64MemberOutput struct{ *pulumi.OutputState }

func (FirewallVipgrp64MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipgrp64Member)(nil)).Elem()
}

func (o FirewallVipgrp64MemberOutput) ToFirewallVipgrp64MemberOutput() FirewallVipgrp64MemberOutput {
	return o
}

func (o FirewallVipgrp64MemberOutput) ToFirewallVipgrp64MemberOutputWithContext(ctx context.Context) FirewallVipgrp64MemberOutput {
	return o
}

// VIP64 name.
func (o FirewallVipgrp64MemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipgrp64Member) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallVipgrp64MemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipgrp64MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipgrp64Member)(nil)).Elem()
}

func (o FirewallVipgrp64MemberArrayOutput) ToFirewallVipgrp64MemberArrayOutput() FirewallVipgrp64MemberArrayOutput {
	return o
}

func (o FirewallVipgrp64MemberArrayOutput) ToFirewallVipgrp64MemberArrayOutputWithContext(ctx context.Context) FirewallVipgrp64MemberArrayOutput {
	return o
}

func (o FirewallVipgrp64MemberArrayOutput) Index(i pulumi.IntInput) FirewallVipgrp64MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipgrp64Member {
		return vs[0].([]FirewallVipgrp64Member)[vs[1].(int)]
	}).(FirewallVipgrp64MemberOutput)
}

type FirewallVipgrp6Member struct {
	// IPv6 VIP name.
	Name *string `pulumi:"name"`
}

// FirewallVipgrp6MemberInput is an input type that accepts FirewallVipgrp6MemberArgs and FirewallVipgrp6MemberOutput values.
// You can construct a concrete instance of `FirewallVipgrp6MemberInput` via:
//
//	FirewallVipgrp6MemberArgs{...}
type FirewallVipgrp6MemberInput interface {
	pulumi.Input

	ToFirewallVipgrp6MemberOutput() FirewallVipgrp6MemberOutput
	ToFirewallVipgrp6MemberOutputWithContext(context.Context) FirewallVipgrp6MemberOutput
}

type FirewallVipgrp6MemberArgs struct {
	// IPv6 VIP name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallVipgrp6MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipgrp6Member)(nil)).Elem()
}

func (i FirewallVipgrp6MemberArgs) ToFirewallVipgrp6MemberOutput() FirewallVipgrp6MemberOutput {
	return i.ToFirewallVipgrp6MemberOutputWithContext(context.Background())
}

func (i FirewallVipgrp6MemberArgs) ToFirewallVipgrp6MemberOutputWithContext(ctx context.Context) FirewallVipgrp6MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp6MemberOutput)
}

// FirewallVipgrp6MemberArrayInput is an input type that accepts FirewallVipgrp6MemberArray and FirewallVipgrp6MemberArrayOutput values.
// You can construct a concrete instance of `FirewallVipgrp6MemberArrayInput` via:
//
//	FirewallVipgrp6MemberArray{ FirewallVipgrp6MemberArgs{...} }
type FirewallVipgrp6MemberArrayInput interface {
	pulumi.Input

	ToFirewallVipgrp6MemberArrayOutput() FirewallVipgrp6MemberArrayOutput
	ToFirewallVipgrp6MemberArrayOutputWithContext(context.Context) FirewallVipgrp6MemberArrayOutput
}

type FirewallVipgrp6MemberArray []FirewallVipgrp6MemberInput

func (FirewallVipgrp6MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipgrp6Member)(nil)).Elem()
}

func (i FirewallVipgrp6MemberArray) ToFirewallVipgrp6MemberArrayOutput() FirewallVipgrp6MemberArrayOutput {
	return i.ToFirewallVipgrp6MemberArrayOutputWithContext(context.Background())
}

func (i FirewallVipgrp6MemberArray) ToFirewallVipgrp6MemberArrayOutputWithContext(ctx context.Context) FirewallVipgrp6MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp6MemberArrayOutput)
}

type FirewallVipgrp6MemberOutput struct{ *pulumi.OutputState }

func (FirewallVipgrp6MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipgrp6Member)(nil)).Elem()
}

func (o FirewallVipgrp6MemberOutput) ToFirewallVipgrp6MemberOutput() FirewallVipgrp6MemberOutput {
	return o
}

func (o FirewallVipgrp6MemberOutput) ToFirewallVipgrp6MemberOutputWithContext(ctx context.Context) FirewallVipgrp6MemberOutput {
	return o
}

// IPv6 VIP name.
func (o FirewallVipgrp6MemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipgrp6Member) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallVipgrp6MemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipgrp6MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipgrp6Member)(nil)).Elem()
}

func (o FirewallVipgrp6MemberArrayOutput) ToFirewallVipgrp6MemberArrayOutput() FirewallVipgrp6MemberArrayOutput {
	return o
}

func (o FirewallVipgrp6MemberArrayOutput) ToFirewallVipgrp6MemberArrayOutputWithContext(ctx context.Context) FirewallVipgrp6MemberArrayOutput {
	return o
}

func (o FirewallVipgrp6MemberArrayOutput) Index(i pulumi.IntInput) FirewallVipgrp6MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipgrp6Member {
		return vs[0].([]FirewallVipgrp6Member)[vs[1].(int)]
	}).(FirewallVipgrp6MemberOutput)
}

type FirewallVipgrpMember struct {
	// VIP name.
	Name *string `pulumi:"name"`
}

// FirewallVipgrpMemberInput is an input type that accepts FirewallVipgrpMemberArgs and FirewallVipgrpMemberOutput values.
// You can construct a concrete instance of `FirewallVipgrpMemberInput` via:
//
//	FirewallVipgrpMemberArgs{...}
type FirewallVipgrpMemberInput interface {
	pulumi.Input

	ToFirewallVipgrpMemberOutput() FirewallVipgrpMemberOutput
	ToFirewallVipgrpMemberOutputWithContext(context.Context) FirewallVipgrpMemberOutput
}

type FirewallVipgrpMemberArgs struct {
	// VIP name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallVipgrpMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipgrpMember)(nil)).Elem()
}

func (i FirewallVipgrpMemberArgs) ToFirewallVipgrpMemberOutput() FirewallVipgrpMemberOutput {
	return i.ToFirewallVipgrpMemberOutputWithContext(context.Background())
}

func (i FirewallVipgrpMemberArgs) ToFirewallVipgrpMemberOutputWithContext(ctx context.Context) FirewallVipgrpMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrpMemberOutput)
}

// FirewallVipgrpMemberArrayInput is an input type that accepts FirewallVipgrpMemberArray and FirewallVipgrpMemberArrayOutput values.
// You can construct a concrete instance of `FirewallVipgrpMemberArrayInput` via:
//
//	FirewallVipgrpMemberArray{ FirewallVipgrpMemberArgs{...} }
type FirewallVipgrpMemberArrayInput interface {
	pulumi.Input

	ToFirewallVipgrpMemberArrayOutput() FirewallVipgrpMemberArrayOutput
	ToFirewallVipgrpMemberArrayOutputWithContext(context.Context) FirewallVipgrpMemberArrayOutput
}

type FirewallVipgrpMemberArray []FirewallVipgrpMemberInput

func (FirewallVipgrpMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipgrpMember)(nil)).Elem()
}

func (i FirewallVipgrpMemberArray) ToFirewallVipgrpMemberArrayOutput() FirewallVipgrpMemberArrayOutput {
	return i.ToFirewallVipgrpMemberArrayOutputWithContext(context.Background())
}

func (i FirewallVipgrpMemberArray) ToFirewallVipgrpMemberArrayOutputWithContext(ctx context.Context) FirewallVipgrpMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrpMemberArrayOutput)
}

type FirewallVipgrpMemberOutput struct{ *pulumi.OutputState }

func (FirewallVipgrpMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVipgrpMember)(nil)).Elem()
}

func (o FirewallVipgrpMemberOutput) ToFirewallVipgrpMemberOutput() FirewallVipgrpMemberOutput {
	return o
}

func (o FirewallVipgrpMemberOutput) ToFirewallVipgrpMemberOutputWithContext(ctx context.Context) FirewallVipgrpMemberOutput {
	return o
}

// VIP name.
func (o FirewallVipgrpMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVipgrpMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallVipgrpMemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipgrpMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVipgrpMember)(nil)).Elem()
}

func (o FirewallVipgrpMemberArrayOutput) ToFirewallVipgrpMemberArrayOutput() FirewallVipgrpMemberArrayOutput {
	return o
}

func (o FirewallVipgrpMemberArrayOutput) ToFirewallVipgrpMemberArrayOutputWithContext(ctx context.Context) FirewallVipgrpMemberArrayOutput {
	return o
}

func (o FirewallVipgrpMemberArrayOutput) Index(i pulumi.IntInput) FirewallVipgrpMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVipgrpMember {
		return vs[0].([]FirewallVipgrpMember)[vs[1].(int)]
	}).(FirewallVipgrpMemberOutput)
}

type FirewallconsolidatedPolicyAppCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// FirewallconsolidatedPolicyAppCategoryInput is an input type that accepts FirewallconsolidatedPolicyAppCategoryArgs and FirewallconsolidatedPolicyAppCategoryOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyAppCategoryInput` via:
//
//	FirewallconsolidatedPolicyAppCategoryArgs{...}
type FirewallconsolidatedPolicyAppCategoryInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyAppCategoryOutput() FirewallconsolidatedPolicyAppCategoryOutput
	ToFirewallconsolidatedPolicyAppCategoryOutputWithContext(context.Context) FirewallconsolidatedPolicyAppCategoryOutput
}

type FirewallconsolidatedPolicyAppCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallconsolidatedPolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyAppCategory)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyAppCategoryArgs) ToFirewallconsolidatedPolicyAppCategoryOutput() FirewallconsolidatedPolicyAppCategoryOutput {
	return i.ToFirewallconsolidatedPolicyAppCategoryOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyAppCategoryArgs) ToFirewallconsolidatedPolicyAppCategoryOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyAppCategoryOutput)
}

// FirewallconsolidatedPolicyAppCategoryArrayInput is an input type that accepts FirewallconsolidatedPolicyAppCategoryArray and FirewallconsolidatedPolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyAppCategoryArrayInput` via:
//
//	FirewallconsolidatedPolicyAppCategoryArray{ FirewallconsolidatedPolicyAppCategoryArgs{...} }
type FirewallconsolidatedPolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyAppCategoryArrayOutput() FirewallconsolidatedPolicyAppCategoryArrayOutput
	ToFirewallconsolidatedPolicyAppCategoryArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyAppCategoryArrayOutput
}

type FirewallconsolidatedPolicyAppCategoryArray []FirewallconsolidatedPolicyAppCategoryInput

func (FirewallconsolidatedPolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyAppCategory)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyAppCategoryArray) ToFirewallconsolidatedPolicyAppCategoryArrayOutput() FirewallconsolidatedPolicyAppCategoryArrayOutput {
	return i.ToFirewallconsolidatedPolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyAppCategoryArray) ToFirewallconsolidatedPolicyAppCategoryArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyAppCategoryArrayOutput)
}

type FirewallconsolidatedPolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyAppCategory)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyAppCategoryOutput) ToFirewallconsolidatedPolicyAppCategoryOutput() FirewallconsolidatedPolicyAppCategoryOutput {
	return o
}

func (o FirewallconsolidatedPolicyAppCategoryOutput) ToFirewallconsolidatedPolicyAppCategoryOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyAppCategoryOutput {
	return o
}

// Category IDs.
func (o FirewallconsolidatedPolicyAppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyAppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallconsolidatedPolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyAppCategory)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyAppCategoryArrayOutput) ToFirewallconsolidatedPolicyAppCategoryArrayOutput() FirewallconsolidatedPolicyAppCategoryArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyAppCategoryArrayOutput) ToFirewallconsolidatedPolicyAppCategoryArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyAppCategoryArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyAppCategory {
		return vs[0].([]FirewallconsolidatedPolicyAppCategory)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyAppCategoryOutput)
}

type FirewallconsolidatedPolicyAppGroup struct {
	// Application group names.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyAppGroupInput is an input type that accepts FirewallconsolidatedPolicyAppGroupArgs and FirewallconsolidatedPolicyAppGroupOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyAppGroupInput` via:
//
//	FirewallconsolidatedPolicyAppGroupArgs{...}
type FirewallconsolidatedPolicyAppGroupInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyAppGroupOutput() FirewallconsolidatedPolicyAppGroupOutput
	ToFirewallconsolidatedPolicyAppGroupOutputWithContext(context.Context) FirewallconsolidatedPolicyAppGroupOutput
}

type FirewallconsolidatedPolicyAppGroupArgs struct {
	// Application group names.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyAppGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyAppGroupArgs) ToFirewallconsolidatedPolicyAppGroupOutput() FirewallconsolidatedPolicyAppGroupOutput {
	return i.ToFirewallconsolidatedPolicyAppGroupOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyAppGroupArgs) ToFirewallconsolidatedPolicyAppGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyAppGroupOutput)
}

// FirewallconsolidatedPolicyAppGroupArrayInput is an input type that accepts FirewallconsolidatedPolicyAppGroupArray and FirewallconsolidatedPolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyAppGroupArrayInput` via:
//
//	FirewallconsolidatedPolicyAppGroupArray{ FirewallconsolidatedPolicyAppGroupArgs{...} }
type FirewallconsolidatedPolicyAppGroupArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyAppGroupArrayOutput() FirewallconsolidatedPolicyAppGroupArrayOutput
	ToFirewallconsolidatedPolicyAppGroupArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyAppGroupArrayOutput
}

type FirewallconsolidatedPolicyAppGroupArray []FirewallconsolidatedPolicyAppGroupInput

func (FirewallconsolidatedPolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyAppGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyAppGroupArray) ToFirewallconsolidatedPolicyAppGroupArrayOutput() FirewallconsolidatedPolicyAppGroupArrayOutput {
	return i.ToFirewallconsolidatedPolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyAppGroupArray) ToFirewallconsolidatedPolicyAppGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyAppGroupArrayOutput)
}

type FirewallconsolidatedPolicyAppGroupOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyAppGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyAppGroupOutput) ToFirewallconsolidatedPolicyAppGroupOutput() FirewallconsolidatedPolicyAppGroupOutput {
	return o
}

func (o FirewallconsolidatedPolicyAppGroupOutput) ToFirewallconsolidatedPolicyAppGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyAppGroupOutput {
	return o
}

// Application group names.
func (o FirewallconsolidatedPolicyAppGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyAppGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyAppGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyAppGroupArrayOutput) ToFirewallconsolidatedPolicyAppGroupArrayOutput() FirewallconsolidatedPolicyAppGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyAppGroupArrayOutput) ToFirewallconsolidatedPolicyAppGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyAppGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyAppGroupArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyAppGroup {
		return vs[0].([]FirewallconsolidatedPolicyAppGroup)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyAppGroupOutput)
}

type FirewallconsolidatedPolicyApplication struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// FirewallconsolidatedPolicyApplicationInput is an input type that accepts FirewallconsolidatedPolicyApplicationArgs and FirewallconsolidatedPolicyApplicationOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyApplicationInput` via:
//
//	FirewallconsolidatedPolicyApplicationArgs{...}
type FirewallconsolidatedPolicyApplicationInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyApplicationOutput() FirewallconsolidatedPolicyApplicationOutput
	ToFirewallconsolidatedPolicyApplicationOutputWithContext(context.Context) FirewallconsolidatedPolicyApplicationOutput
}

type FirewallconsolidatedPolicyApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallconsolidatedPolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyApplication)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyApplicationArgs) ToFirewallconsolidatedPolicyApplicationOutput() FirewallconsolidatedPolicyApplicationOutput {
	return i.ToFirewallconsolidatedPolicyApplicationOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyApplicationArgs) ToFirewallconsolidatedPolicyApplicationOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyApplicationOutput)
}

// FirewallconsolidatedPolicyApplicationArrayInput is an input type that accepts FirewallconsolidatedPolicyApplicationArray and FirewallconsolidatedPolicyApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyApplicationArrayInput` via:
//
//	FirewallconsolidatedPolicyApplicationArray{ FirewallconsolidatedPolicyApplicationArgs{...} }
type FirewallconsolidatedPolicyApplicationArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyApplicationArrayOutput() FirewallconsolidatedPolicyApplicationArrayOutput
	ToFirewallconsolidatedPolicyApplicationArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyApplicationArrayOutput
}

type FirewallconsolidatedPolicyApplicationArray []FirewallconsolidatedPolicyApplicationInput

func (FirewallconsolidatedPolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyApplication)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyApplicationArray) ToFirewallconsolidatedPolicyApplicationArrayOutput() FirewallconsolidatedPolicyApplicationArrayOutput {
	return i.ToFirewallconsolidatedPolicyApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyApplicationArray) ToFirewallconsolidatedPolicyApplicationArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyApplicationArrayOutput)
}

type FirewallconsolidatedPolicyApplicationOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyApplication)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyApplicationOutput) ToFirewallconsolidatedPolicyApplicationOutput() FirewallconsolidatedPolicyApplicationOutput {
	return o
}

func (o FirewallconsolidatedPolicyApplicationOutput) ToFirewallconsolidatedPolicyApplicationOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyApplicationOutput {
	return o
}

// Application IDs.
func (o FirewallconsolidatedPolicyApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallconsolidatedPolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyApplication)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyApplicationArrayOutput) ToFirewallconsolidatedPolicyApplicationArrayOutput() FirewallconsolidatedPolicyApplicationArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyApplicationArrayOutput) ToFirewallconsolidatedPolicyApplicationArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyApplicationArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyApplicationArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyApplication {
		return vs[0].([]FirewallconsolidatedPolicyApplication)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyApplicationOutput)
}

type FirewallconsolidatedPolicyDstaddr4 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyDstaddr4Input is an input type that accepts FirewallconsolidatedPolicyDstaddr4Args and FirewallconsolidatedPolicyDstaddr4Output values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyDstaddr4Input` via:
//
//	FirewallconsolidatedPolicyDstaddr4Args{...}
type FirewallconsolidatedPolicyDstaddr4Input interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyDstaddr4Output() FirewallconsolidatedPolicyDstaddr4Output
	ToFirewallconsolidatedPolicyDstaddr4OutputWithContext(context.Context) FirewallconsolidatedPolicyDstaddr4Output
}

type FirewallconsolidatedPolicyDstaddr4Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyDstaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyDstaddr4)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyDstaddr4Args) ToFirewallconsolidatedPolicyDstaddr4Output() FirewallconsolidatedPolicyDstaddr4Output {
	return i.ToFirewallconsolidatedPolicyDstaddr4OutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyDstaddr4Args) ToFirewallconsolidatedPolicyDstaddr4OutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyDstaddr4Output)
}

// FirewallconsolidatedPolicyDstaddr4ArrayInput is an input type that accepts FirewallconsolidatedPolicyDstaddr4Array and FirewallconsolidatedPolicyDstaddr4ArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyDstaddr4ArrayInput` via:
//
//	FirewallconsolidatedPolicyDstaddr4Array{ FirewallconsolidatedPolicyDstaddr4Args{...} }
type FirewallconsolidatedPolicyDstaddr4ArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyDstaddr4ArrayOutput() FirewallconsolidatedPolicyDstaddr4ArrayOutput
	ToFirewallconsolidatedPolicyDstaddr4ArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyDstaddr4ArrayOutput
}

type FirewallconsolidatedPolicyDstaddr4Array []FirewallconsolidatedPolicyDstaddr4Input

func (FirewallconsolidatedPolicyDstaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyDstaddr4)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyDstaddr4Array) ToFirewallconsolidatedPolicyDstaddr4ArrayOutput() FirewallconsolidatedPolicyDstaddr4ArrayOutput {
	return i.ToFirewallconsolidatedPolicyDstaddr4ArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyDstaddr4Array) ToFirewallconsolidatedPolicyDstaddr4ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyDstaddr4ArrayOutput)
}

type FirewallconsolidatedPolicyDstaddr4Output struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyDstaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyDstaddr4)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyDstaddr4Output) ToFirewallconsolidatedPolicyDstaddr4Output() FirewallconsolidatedPolicyDstaddr4Output {
	return o
}

func (o FirewallconsolidatedPolicyDstaddr4Output) ToFirewallconsolidatedPolicyDstaddr4OutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstaddr4Output {
	return o
}

// Policy name.
func (o FirewallconsolidatedPolicyDstaddr4Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyDstaddr4) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyDstaddr4ArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyDstaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyDstaddr4)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyDstaddr4ArrayOutput) ToFirewallconsolidatedPolicyDstaddr4ArrayOutput() FirewallconsolidatedPolicyDstaddr4ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyDstaddr4ArrayOutput) ToFirewallconsolidatedPolicyDstaddr4ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstaddr4ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyDstaddr4ArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyDstaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyDstaddr4 {
		return vs[0].([]FirewallconsolidatedPolicyDstaddr4)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyDstaddr4Output)
}

type FirewallconsolidatedPolicyDstaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyDstaddr6Input is an input type that accepts FirewallconsolidatedPolicyDstaddr6Args and FirewallconsolidatedPolicyDstaddr6Output values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyDstaddr6Input` via:
//
//	FirewallconsolidatedPolicyDstaddr6Args{...}
type FirewallconsolidatedPolicyDstaddr6Input interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyDstaddr6Output() FirewallconsolidatedPolicyDstaddr6Output
	ToFirewallconsolidatedPolicyDstaddr6OutputWithContext(context.Context) FirewallconsolidatedPolicyDstaddr6Output
}

type FirewallconsolidatedPolicyDstaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyDstaddr6)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyDstaddr6Args) ToFirewallconsolidatedPolicyDstaddr6Output() FirewallconsolidatedPolicyDstaddr6Output {
	return i.ToFirewallconsolidatedPolicyDstaddr6OutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyDstaddr6Args) ToFirewallconsolidatedPolicyDstaddr6OutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyDstaddr6Output)
}

// FirewallconsolidatedPolicyDstaddr6ArrayInput is an input type that accepts FirewallconsolidatedPolicyDstaddr6Array and FirewallconsolidatedPolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyDstaddr6ArrayInput` via:
//
//	FirewallconsolidatedPolicyDstaddr6Array{ FirewallconsolidatedPolicyDstaddr6Args{...} }
type FirewallconsolidatedPolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyDstaddr6ArrayOutput() FirewallconsolidatedPolicyDstaddr6ArrayOutput
	ToFirewallconsolidatedPolicyDstaddr6ArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyDstaddr6ArrayOutput
}

type FirewallconsolidatedPolicyDstaddr6Array []FirewallconsolidatedPolicyDstaddr6Input

func (FirewallconsolidatedPolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyDstaddr6)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyDstaddr6Array) ToFirewallconsolidatedPolicyDstaddr6ArrayOutput() FirewallconsolidatedPolicyDstaddr6ArrayOutput {
	return i.ToFirewallconsolidatedPolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyDstaddr6Array) ToFirewallconsolidatedPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyDstaddr6ArrayOutput)
}

type FirewallconsolidatedPolicyDstaddr6Output struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyDstaddr6)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyDstaddr6Output) ToFirewallconsolidatedPolicyDstaddr6Output() FirewallconsolidatedPolicyDstaddr6Output {
	return o
}

func (o FirewallconsolidatedPolicyDstaddr6Output) ToFirewallconsolidatedPolicyDstaddr6OutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstaddr6Output {
	return o
}

// Policy name.
func (o FirewallconsolidatedPolicyDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyDstaddr6)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyDstaddr6ArrayOutput) ToFirewallconsolidatedPolicyDstaddr6ArrayOutput() FirewallconsolidatedPolicyDstaddr6ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyDstaddr6ArrayOutput) ToFirewallconsolidatedPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstaddr6ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyDstaddr6 {
		return vs[0].([]FirewallconsolidatedPolicyDstaddr6)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyDstaddr6Output)
}

type FirewallconsolidatedPolicyDstintf struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyDstintfInput is an input type that accepts FirewallconsolidatedPolicyDstintfArgs and FirewallconsolidatedPolicyDstintfOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyDstintfInput` via:
//
//	FirewallconsolidatedPolicyDstintfArgs{...}
type FirewallconsolidatedPolicyDstintfInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyDstintfOutput() FirewallconsolidatedPolicyDstintfOutput
	ToFirewallconsolidatedPolicyDstintfOutputWithContext(context.Context) FirewallconsolidatedPolicyDstintfOutput
}

type FirewallconsolidatedPolicyDstintfArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyDstintf)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyDstintfArgs) ToFirewallconsolidatedPolicyDstintfOutput() FirewallconsolidatedPolicyDstintfOutput {
	return i.ToFirewallconsolidatedPolicyDstintfOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyDstintfArgs) ToFirewallconsolidatedPolicyDstintfOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyDstintfOutput)
}

// FirewallconsolidatedPolicyDstintfArrayInput is an input type that accepts FirewallconsolidatedPolicyDstintfArray and FirewallconsolidatedPolicyDstintfArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyDstintfArrayInput` via:
//
//	FirewallconsolidatedPolicyDstintfArray{ FirewallconsolidatedPolicyDstintfArgs{...} }
type FirewallconsolidatedPolicyDstintfArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyDstintfArrayOutput() FirewallconsolidatedPolicyDstintfArrayOutput
	ToFirewallconsolidatedPolicyDstintfArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyDstintfArrayOutput
}

type FirewallconsolidatedPolicyDstintfArray []FirewallconsolidatedPolicyDstintfInput

func (FirewallconsolidatedPolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyDstintf)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyDstintfArray) ToFirewallconsolidatedPolicyDstintfArrayOutput() FirewallconsolidatedPolicyDstintfArrayOutput {
	return i.ToFirewallconsolidatedPolicyDstintfArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyDstintfArray) ToFirewallconsolidatedPolicyDstintfArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyDstintfArrayOutput)
}

type FirewallconsolidatedPolicyDstintfOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyDstintf)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyDstintfOutput) ToFirewallconsolidatedPolicyDstintfOutput() FirewallconsolidatedPolicyDstintfOutput {
	return o
}

func (o FirewallconsolidatedPolicyDstintfOutput) ToFirewallconsolidatedPolicyDstintfOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstintfOutput {
	return o
}

// Address name.
func (o FirewallconsolidatedPolicyDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyDstintf)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyDstintfArrayOutput) ToFirewallconsolidatedPolicyDstintfArrayOutput() FirewallconsolidatedPolicyDstintfArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyDstintfArrayOutput) ToFirewallconsolidatedPolicyDstintfArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyDstintfArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyDstintfArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyDstintf {
		return vs[0].([]FirewallconsolidatedPolicyDstintf)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyDstintfOutput)
}

type FirewallconsolidatedPolicyFssoGroup struct {
	// Names of FSSO groups.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyFssoGroupInput is an input type that accepts FirewallconsolidatedPolicyFssoGroupArgs and FirewallconsolidatedPolicyFssoGroupOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyFssoGroupInput` via:
//
//	FirewallconsolidatedPolicyFssoGroupArgs{...}
type FirewallconsolidatedPolicyFssoGroupInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyFssoGroupOutput() FirewallconsolidatedPolicyFssoGroupOutput
	ToFirewallconsolidatedPolicyFssoGroupOutputWithContext(context.Context) FirewallconsolidatedPolicyFssoGroupOutput
}

type FirewallconsolidatedPolicyFssoGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyFssoGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyFssoGroupArgs) ToFirewallconsolidatedPolicyFssoGroupOutput() FirewallconsolidatedPolicyFssoGroupOutput {
	return i.ToFirewallconsolidatedPolicyFssoGroupOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyFssoGroupArgs) ToFirewallconsolidatedPolicyFssoGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyFssoGroupOutput)
}

// FirewallconsolidatedPolicyFssoGroupArrayInput is an input type that accepts FirewallconsolidatedPolicyFssoGroupArray and FirewallconsolidatedPolicyFssoGroupArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyFssoGroupArrayInput` via:
//
//	FirewallconsolidatedPolicyFssoGroupArray{ FirewallconsolidatedPolicyFssoGroupArgs{...} }
type FirewallconsolidatedPolicyFssoGroupArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyFssoGroupArrayOutput() FirewallconsolidatedPolicyFssoGroupArrayOutput
	ToFirewallconsolidatedPolicyFssoGroupArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyFssoGroupArrayOutput
}

type FirewallconsolidatedPolicyFssoGroupArray []FirewallconsolidatedPolicyFssoGroupInput

func (FirewallconsolidatedPolicyFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyFssoGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyFssoGroupArray) ToFirewallconsolidatedPolicyFssoGroupArrayOutput() FirewallconsolidatedPolicyFssoGroupArrayOutput {
	return i.ToFirewallconsolidatedPolicyFssoGroupArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyFssoGroupArray) ToFirewallconsolidatedPolicyFssoGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyFssoGroupArrayOutput)
}

type FirewallconsolidatedPolicyFssoGroupOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyFssoGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyFssoGroupOutput) ToFirewallconsolidatedPolicyFssoGroupOutput() FirewallconsolidatedPolicyFssoGroupOutput {
	return o
}

func (o FirewallconsolidatedPolicyFssoGroupOutput) ToFirewallconsolidatedPolicyFssoGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyFssoGroupOutput {
	return o
}

// Names of FSSO groups.
func (o FirewallconsolidatedPolicyFssoGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyFssoGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyFssoGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyFssoGroupArrayOutput) ToFirewallconsolidatedPolicyFssoGroupArrayOutput() FirewallconsolidatedPolicyFssoGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyFssoGroupArrayOutput) ToFirewallconsolidatedPolicyFssoGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyFssoGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyFssoGroupArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyFssoGroup {
		return vs[0].([]FirewallconsolidatedPolicyFssoGroup)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyFssoGroupOutput)
}

type FirewallconsolidatedPolicyGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyGroupInput is an input type that accepts FirewallconsolidatedPolicyGroupArgs and FirewallconsolidatedPolicyGroupOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyGroupInput` via:
//
//	FirewallconsolidatedPolicyGroupArgs{...}
type FirewallconsolidatedPolicyGroupInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyGroupOutput() FirewallconsolidatedPolicyGroupOutput
	ToFirewallconsolidatedPolicyGroupOutputWithContext(context.Context) FirewallconsolidatedPolicyGroupOutput
}

type FirewallconsolidatedPolicyGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyGroupArgs) ToFirewallconsolidatedPolicyGroupOutput() FirewallconsolidatedPolicyGroupOutput {
	return i.ToFirewallconsolidatedPolicyGroupOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyGroupArgs) ToFirewallconsolidatedPolicyGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyGroupOutput)
}

// FirewallconsolidatedPolicyGroupArrayInput is an input type that accepts FirewallconsolidatedPolicyGroupArray and FirewallconsolidatedPolicyGroupArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyGroupArrayInput` via:
//
//	FirewallconsolidatedPolicyGroupArray{ FirewallconsolidatedPolicyGroupArgs{...} }
type FirewallconsolidatedPolicyGroupArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyGroupArrayOutput() FirewallconsolidatedPolicyGroupArrayOutput
	ToFirewallconsolidatedPolicyGroupArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyGroupArrayOutput
}

type FirewallconsolidatedPolicyGroupArray []FirewallconsolidatedPolicyGroupInput

func (FirewallconsolidatedPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyGroupArray) ToFirewallconsolidatedPolicyGroupArrayOutput() FirewallconsolidatedPolicyGroupArrayOutput {
	return i.ToFirewallconsolidatedPolicyGroupArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyGroupArray) ToFirewallconsolidatedPolicyGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyGroupArrayOutput)
}

type FirewallconsolidatedPolicyGroupOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyGroupOutput) ToFirewallconsolidatedPolicyGroupOutput() FirewallconsolidatedPolicyGroupOutput {
	return o
}

func (o FirewallconsolidatedPolicyGroupOutput) ToFirewallconsolidatedPolicyGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyGroupOutput {
	return o
}

// Group name.
func (o FirewallconsolidatedPolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyGroupArrayOutput) ToFirewallconsolidatedPolicyGroupArrayOutput() FirewallconsolidatedPolicyGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyGroupArrayOutput) ToFirewallconsolidatedPolicyGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyGroupArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyGroup {
		return vs[0].([]FirewallconsolidatedPolicyGroup)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyGroupOutput)
}

type FirewallconsolidatedPolicyInternetServiceCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyInternetServiceCustomInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceCustomArgs and FirewallconsolidatedPolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceCustomInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceCustomArgs{...}
type FirewallconsolidatedPolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceCustomOutput() FirewallconsolidatedPolicyInternetServiceCustomOutput
	ToFirewallconsolidatedPolicyInternetServiceCustomOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceCustomOutput
}

type FirewallconsolidatedPolicyInternetServiceCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceCustom)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceCustomArgs) ToFirewallconsolidatedPolicyInternetServiceCustomOutput() FirewallconsolidatedPolicyInternetServiceCustomOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceCustomArgs) ToFirewallconsolidatedPolicyInternetServiceCustomOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceCustomOutput)
}

// FirewallconsolidatedPolicyInternetServiceCustomArrayInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceCustomArray and FirewallconsolidatedPolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceCustomArrayInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceCustomArray{ FirewallconsolidatedPolicyInternetServiceCustomArgs{...} }
type FirewallconsolidatedPolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceCustomArrayOutput() FirewallconsolidatedPolicyInternetServiceCustomArrayOutput
	ToFirewallconsolidatedPolicyInternetServiceCustomArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceCustomArrayOutput
}

type FirewallconsolidatedPolicyInternetServiceCustomArray []FirewallconsolidatedPolicyInternetServiceCustomInput

func (FirewallconsolidatedPolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceCustom)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceCustomArray) ToFirewallconsolidatedPolicyInternetServiceCustomArrayOutput() FirewallconsolidatedPolicyInternetServiceCustomArrayOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceCustomArray) ToFirewallconsolidatedPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceCustomArrayOutput)
}

type FirewallconsolidatedPolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceCustom)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceCustomOutput) ToFirewallconsolidatedPolicyInternetServiceCustomOutput() FirewallconsolidatedPolicyInternetServiceCustomOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceCustomOutput) ToFirewallconsolidatedPolicyInternetServiceCustomOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceCustomOutput {
	return o
}

// Custom Internet Service name.
func (o FirewallconsolidatedPolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceCustom)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceCustomArrayOutput) ToFirewallconsolidatedPolicyInternetServiceCustomArrayOutput() FirewallconsolidatedPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceCustomArrayOutput) ToFirewallconsolidatedPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyInternetServiceCustom {
		return vs[0].([]FirewallconsolidatedPolicyInternetServiceCustom)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyInternetServiceCustomOutput)
}

type FirewallconsolidatedPolicyInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyInternetServiceCustomGroupInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceCustomGroupArgs and FirewallconsolidatedPolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceCustomGroupInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceCustomGroupArgs{...}
type FirewallconsolidatedPolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceCustomGroupOutput() FirewallconsolidatedPolicyInternetServiceCustomGroupOutput
	ToFirewallconsolidatedPolicyInternetServiceCustomGroupOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceCustomGroupOutput
}

type FirewallconsolidatedPolicyInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceCustomGroupArgs) ToFirewallconsolidatedPolicyInternetServiceCustomGroupOutput() FirewallconsolidatedPolicyInternetServiceCustomGroupOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceCustomGroupArgs) ToFirewallconsolidatedPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceCustomGroupOutput)
}

// FirewallconsolidatedPolicyInternetServiceCustomGroupArrayInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceCustomGroupArray and FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceCustomGroupArrayInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceCustomGroupArray{ FirewallconsolidatedPolicyInternetServiceCustomGroupArgs{...} }
type FirewallconsolidatedPolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput
	ToFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput
}

type FirewallconsolidatedPolicyInternetServiceCustomGroupArray []FirewallconsolidatedPolicyInternetServiceCustomGroupInput

func (FirewallconsolidatedPolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceCustomGroupArray) ToFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceCustomGroupArray) ToFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput)
}

type FirewallconsolidatedPolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceCustomGroupOutput) ToFirewallconsolidatedPolicyInternetServiceCustomGroupOutput() FirewallconsolidatedPolicyInternetServiceCustomGroupOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceCustomGroupOutput) ToFirewallconsolidatedPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o FirewallconsolidatedPolicyInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput) ToFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput) ToFirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyInternetServiceCustomGroup {
		return vs[0].([]FirewallconsolidatedPolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyInternetServiceCustomGroupOutput)
}

type FirewallconsolidatedPolicyInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyInternetServiceGroupInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceGroupArgs and FirewallconsolidatedPolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceGroupInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceGroupArgs{...}
type FirewallconsolidatedPolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceGroupOutput() FirewallconsolidatedPolicyInternetServiceGroupOutput
	ToFirewallconsolidatedPolicyInternetServiceGroupOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceGroupOutput
}

type FirewallconsolidatedPolicyInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceGroupArgs) ToFirewallconsolidatedPolicyInternetServiceGroupOutput() FirewallconsolidatedPolicyInternetServiceGroupOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceGroupArgs) ToFirewallconsolidatedPolicyInternetServiceGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceGroupOutput)
}

// FirewallconsolidatedPolicyInternetServiceGroupArrayInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceGroupArray and FirewallconsolidatedPolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceGroupArrayInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceGroupArray{ FirewallconsolidatedPolicyInternetServiceGroupArgs{...} }
type FirewallconsolidatedPolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceGroupArrayOutput
	ToFirewallconsolidatedPolicyInternetServiceGroupArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceGroupArrayOutput
}

type FirewallconsolidatedPolicyInternetServiceGroupArray []FirewallconsolidatedPolicyInternetServiceGroupInput

func (FirewallconsolidatedPolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceGroupArray) ToFirewallconsolidatedPolicyInternetServiceGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceGroupArrayOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceGroupArray) ToFirewallconsolidatedPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceGroupArrayOutput)
}

type FirewallconsolidatedPolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceGroupOutput) ToFirewallconsolidatedPolicyInternetServiceGroupOutput() FirewallconsolidatedPolicyInternetServiceGroupOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceGroupOutput) ToFirewallconsolidatedPolicyInternetServiceGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o FirewallconsolidatedPolicyInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceGroupArrayOutput) ToFirewallconsolidatedPolicyInternetServiceGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceGroupArrayOutput) ToFirewallconsolidatedPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyInternetServiceGroup {
		return vs[0].([]FirewallconsolidatedPolicyInternetServiceGroup)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyInternetServiceGroupOutput)
}

type FirewallconsolidatedPolicyInternetServiceId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// FirewallconsolidatedPolicyInternetServiceIdInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceIdArgs and FirewallconsolidatedPolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceIdInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceIdArgs{...}
type FirewallconsolidatedPolicyInternetServiceIdInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceIdOutput() FirewallconsolidatedPolicyInternetServiceIdOutput
	ToFirewallconsolidatedPolicyInternetServiceIdOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceIdOutput
}

type FirewallconsolidatedPolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallconsolidatedPolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceId)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceIdArgs) ToFirewallconsolidatedPolicyInternetServiceIdOutput() FirewallconsolidatedPolicyInternetServiceIdOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceIdArgs) ToFirewallconsolidatedPolicyInternetServiceIdOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceIdOutput)
}

// FirewallconsolidatedPolicyInternetServiceIdArrayInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceIdArray and FirewallconsolidatedPolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceIdArrayInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceIdArray{ FirewallconsolidatedPolicyInternetServiceIdArgs{...} }
type FirewallconsolidatedPolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceIdArrayOutput() FirewallconsolidatedPolicyInternetServiceIdArrayOutput
	ToFirewallconsolidatedPolicyInternetServiceIdArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceIdArrayOutput
}

type FirewallconsolidatedPolicyInternetServiceIdArray []FirewallconsolidatedPolicyInternetServiceIdInput

func (FirewallconsolidatedPolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceId)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceIdArray) ToFirewallconsolidatedPolicyInternetServiceIdArrayOutput() FirewallconsolidatedPolicyInternetServiceIdArrayOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceIdArray) ToFirewallconsolidatedPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceIdArrayOutput)
}

type FirewallconsolidatedPolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceId)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceIdOutput) ToFirewallconsolidatedPolicyInternetServiceIdOutput() FirewallconsolidatedPolicyInternetServiceIdOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceIdOutput) ToFirewallconsolidatedPolicyInternetServiceIdOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o FirewallconsolidatedPolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallconsolidatedPolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceId)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceIdArrayOutput) ToFirewallconsolidatedPolicyInternetServiceIdArrayOutput() FirewallconsolidatedPolicyInternetServiceIdArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceIdArrayOutput) ToFirewallconsolidatedPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceIdArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyInternetServiceId {
		return vs[0].([]FirewallconsolidatedPolicyInternetServiceId)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyInternetServiceIdOutput)
}

type FirewallconsolidatedPolicyInternetServiceName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyInternetServiceNameInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceNameArgs and FirewallconsolidatedPolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceNameInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceNameArgs{...}
type FirewallconsolidatedPolicyInternetServiceNameInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceNameOutput() FirewallconsolidatedPolicyInternetServiceNameOutput
	ToFirewallconsolidatedPolicyInternetServiceNameOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceNameOutput
}

type FirewallconsolidatedPolicyInternetServiceNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceName)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceNameArgs) ToFirewallconsolidatedPolicyInternetServiceNameOutput() FirewallconsolidatedPolicyInternetServiceNameOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceNameArgs) ToFirewallconsolidatedPolicyInternetServiceNameOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceNameOutput)
}

// FirewallconsolidatedPolicyInternetServiceNameArrayInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceNameArray and FirewallconsolidatedPolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceNameArrayInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceNameArray{ FirewallconsolidatedPolicyInternetServiceNameArgs{...} }
type FirewallconsolidatedPolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceNameArrayOutput() FirewallconsolidatedPolicyInternetServiceNameArrayOutput
	ToFirewallconsolidatedPolicyInternetServiceNameArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceNameArrayOutput
}

type FirewallconsolidatedPolicyInternetServiceNameArray []FirewallconsolidatedPolicyInternetServiceNameInput

func (FirewallconsolidatedPolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceName)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceNameArray) ToFirewallconsolidatedPolicyInternetServiceNameArrayOutput() FirewallconsolidatedPolicyInternetServiceNameArrayOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceNameArray) ToFirewallconsolidatedPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceNameArrayOutput)
}

type FirewallconsolidatedPolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceName)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceNameOutput) ToFirewallconsolidatedPolicyInternetServiceNameOutput() FirewallconsolidatedPolicyInternetServiceNameOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceNameOutput) ToFirewallconsolidatedPolicyInternetServiceNameOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceNameOutput {
	return o
}

// Internet Service name.
func (o FirewallconsolidatedPolicyInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceName)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceNameArrayOutput) ToFirewallconsolidatedPolicyInternetServiceNameArrayOutput() FirewallconsolidatedPolicyInternetServiceNameArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceNameArrayOutput) ToFirewallconsolidatedPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceNameArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyInternetServiceName {
		return vs[0].([]FirewallconsolidatedPolicyInternetServiceName)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyInternetServiceNameOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyInternetServiceSrcCustomInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceSrcCustomArgs and FirewallconsolidatedPolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceSrcCustomInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceSrcCustomArgs{...}
type FirewallconsolidatedPolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceSrcCustomOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomOutput
	ToFirewallconsolidatedPolicyInternetServiceSrcCustomOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomOutput
}

type FirewallconsolidatedPolicyInternetServiceSrcCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceSrcCustomArgs) ToFirewallconsolidatedPolicyInternetServiceSrcCustomOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceSrcCustomArgs) ToFirewallconsolidatedPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceSrcCustomOutput)
}

// FirewallconsolidatedPolicyInternetServiceSrcCustomArrayInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceSrcCustomArray and FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceSrcCustomArrayInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceSrcCustomArray{ FirewallconsolidatedPolicyInternetServiceSrcCustomArgs{...} }
type FirewallconsolidatedPolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput
	ToFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput
}

type FirewallconsolidatedPolicyInternetServiceSrcCustomArray []FirewallconsolidatedPolicyInternetServiceSrcCustomInput

func (FirewallconsolidatedPolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceSrcCustomArray) ToFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceSrcCustomArray) ToFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceSrcCustomOutput) ToFirewallconsolidatedPolicyInternetServiceSrcCustomOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcCustomOutput) ToFirewallconsolidatedPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomOutput {
	return o
}

// Custom Internet Service name.
func (o FirewallconsolidatedPolicyInternetServiceSrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyInternetServiceSrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput) ToFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput) ToFirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyInternetServiceSrcCustom {
		return vs[0].([]FirewallconsolidatedPolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyInternetServiceSrcCustomOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyInternetServiceSrcCustomGroupInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs and FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceSrcCustomGroupInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs{...}
type FirewallconsolidatedPolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput
	ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput
}

type FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs) ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs) ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput)
}

// FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray and FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray{ FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs{...} }
type FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput
	ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput
}

type FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray []FirewallconsolidatedPolicyInternetServiceSrcCustomGroupInput

func (FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray) ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray) ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput) ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput) ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyInternetServiceSrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput) ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput) ToFirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyInternetServiceSrcCustomGroup {
		return vs[0].([]FirewallconsolidatedPolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyInternetServiceSrcGroupInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceSrcGroupArgs and FirewallconsolidatedPolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceSrcGroupInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceSrcGroupArgs{...}
type FirewallconsolidatedPolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceSrcGroupOutput() FirewallconsolidatedPolicyInternetServiceSrcGroupOutput
	ToFirewallconsolidatedPolicyInternetServiceSrcGroupOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceSrcGroupOutput
}

type FirewallconsolidatedPolicyInternetServiceSrcGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceSrcGroupArgs) ToFirewallconsolidatedPolicyInternetServiceSrcGroupOutput() FirewallconsolidatedPolicyInternetServiceSrcGroupOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceSrcGroupArgs) ToFirewallconsolidatedPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceSrcGroupOutput)
}

// FirewallconsolidatedPolicyInternetServiceSrcGroupArrayInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceSrcGroupArray and FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceSrcGroupArrayInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceSrcGroupArray{ FirewallconsolidatedPolicyInternetServiceSrcGroupArgs{...} }
type FirewallconsolidatedPolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput
	ToFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput
}

type FirewallconsolidatedPolicyInternetServiceSrcGroupArray []FirewallconsolidatedPolicyInternetServiceSrcGroupInput

func (FirewallconsolidatedPolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceSrcGroupArray) ToFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceSrcGroupArray) ToFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceSrcGroupOutput) ToFirewallconsolidatedPolicyInternetServiceSrcGroupOutput() FirewallconsolidatedPolicyInternetServiceSrcGroupOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcGroupOutput) ToFirewallconsolidatedPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcGroupOutput {
	return o
}

// Internet Service group name.
func (o FirewallconsolidatedPolicyInternetServiceSrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyInternetServiceSrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput) ToFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput) ToFirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyInternetServiceSrcGroup {
		return vs[0].([]FirewallconsolidatedPolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyInternetServiceSrcGroupOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// FirewallconsolidatedPolicyInternetServiceSrcIdInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceSrcIdArgs and FirewallconsolidatedPolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceSrcIdInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceSrcIdArgs{...}
type FirewallconsolidatedPolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceSrcIdOutput() FirewallconsolidatedPolicyInternetServiceSrcIdOutput
	ToFirewallconsolidatedPolicyInternetServiceSrcIdOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceSrcIdOutput
}

type FirewallconsolidatedPolicyInternetServiceSrcIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallconsolidatedPolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceSrcIdArgs) ToFirewallconsolidatedPolicyInternetServiceSrcIdOutput() FirewallconsolidatedPolicyInternetServiceSrcIdOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceSrcIdArgs) ToFirewallconsolidatedPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceSrcIdOutput)
}

// FirewallconsolidatedPolicyInternetServiceSrcIdArrayInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceSrcIdArray and FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceSrcIdArrayInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceSrcIdArray{ FirewallconsolidatedPolicyInternetServiceSrcIdArgs{...} }
type FirewallconsolidatedPolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput
	ToFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput
}

type FirewallconsolidatedPolicyInternetServiceSrcIdArray []FirewallconsolidatedPolicyInternetServiceSrcIdInput

func (FirewallconsolidatedPolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceSrcIdArray) ToFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceSrcIdArray) ToFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceSrcIdOutput) ToFirewallconsolidatedPolicyInternetServiceSrcIdOutput() FirewallconsolidatedPolicyInternetServiceSrcIdOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcIdOutput) ToFirewallconsolidatedPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcIdOutput {
	return o
}

// Internet Service ID.
func (o FirewallconsolidatedPolicyInternetServiceSrcIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyInternetServiceSrcId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput) ToFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput) ToFirewallconsolidatedPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyInternetServiceSrcId {
		return vs[0].([]FirewallconsolidatedPolicyInternetServiceSrcId)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyInternetServiceSrcIdOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyInternetServiceSrcNameInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceSrcNameArgs and FirewallconsolidatedPolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceSrcNameInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceSrcNameArgs{...}
type FirewallconsolidatedPolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceSrcNameOutput() FirewallconsolidatedPolicyInternetServiceSrcNameOutput
	ToFirewallconsolidatedPolicyInternetServiceSrcNameOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceSrcNameOutput
}

type FirewallconsolidatedPolicyInternetServiceSrcNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceSrcNameArgs) ToFirewallconsolidatedPolicyInternetServiceSrcNameOutput() FirewallconsolidatedPolicyInternetServiceSrcNameOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceSrcNameArgs) ToFirewallconsolidatedPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceSrcNameOutput)
}

// FirewallconsolidatedPolicyInternetServiceSrcNameArrayInput is an input type that accepts FirewallconsolidatedPolicyInternetServiceSrcNameArray and FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyInternetServiceSrcNameArrayInput` via:
//
//	FirewallconsolidatedPolicyInternetServiceSrcNameArray{ FirewallconsolidatedPolicyInternetServiceSrcNameArgs{...} }
type FirewallconsolidatedPolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput
	ToFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput
}

type FirewallconsolidatedPolicyInternetServiceSrcNameArray []FirewallconsolidatedPolicyInternetServiceSrcNameInput

func (FirewallconsolidatedPolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyInternetServiceSrcNameArray) ToFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput {
	return i.ToFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyInternetServiceSrcNameArray) ToFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceSrcNameOutput) ToFirewallconsolidatedPolicyInternetServiceSrcNameOutput() FirewallconsolidatedPolicyInternetServiceSrcNameOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcNameOutput) ToFirewallconsolidatedPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcNameOutput {
	return o
}

// Internet Service name.
func (o FirewallconsolidatedPolicyInternetServiceSrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyInternetServiceSrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput) ToFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput() FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput) ToFirewallconsolidatedPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyInternetServiceSrcName {
		return vs[0].([]FirewallconsolidatedPolicyInternetServiceSrcName)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyInternetServiceSrcNameOutput)
}

type FirewallconsolidatedPolicyPoolname4 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyPoolname4Input is an input type that accepts FirewallconsolidatedPolicyPoolname4Args and FirewallconsolidatedPolicyPoolname4Output values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyPoolname4Input` via:
//
//	FirewallconsolidatedPolicyPoolname4Args{...}
type FirewallconsolidatedPolicyPoolname4Input interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyPoolname4Output() FirewallconsolidatedPolicyPoolname4Output
	ToFirewallconsolidatedPolicyPoolname4OutputWithContext(context.Context) FirewallconsolidatedPolicyPoolname4Output
}

type FirewallconsolidatedPolicyPoolname4Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyPoolname4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyPoolname4)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyPoolname4Args) ToFirewallconsolidatedPolicyPoolname4Output() FirewallconsolidatedPolicyPoolname4Output {
	return i.ToFirewallconsolidatedPolicyPoolname4OutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyPoolname4Args) ToFirewallconsolidatedPolicyPoolname4OutputWithContext(ctx context.Context) FirewallconsolidatedPolicyPoolname4Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyPoolname4Output)
}

// FirewallconsolidatedPolicyPoolname4ArrayInput is an input type that accepts FirewallconsolidatedPolicyPoolname4Array and FirewallconsolidatedPolicyPoolname4ArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyPoolname4ArrayInput` via:
//
//	FirewallconsolidatedPolicyPoolname4Array{ FirewallconsolidatedPolicyPoolname4Args{...} }
type FirewallconsolidatedPolicyPoolname4ArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyPoolname4ArrayOutput() FirewallconsolidatedPolicyPoolname4ArrayOutput
	ToFirewallconsolidatedPolicyPoolname4ArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyPoolname4ArrayOutput
}

type FirewallconsolidatedPolicyPoolname4Array []FirewallconsolidatedPolicyPoolname4Input

func (FirewallconsolidatedPolicyPoolname4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyPoolname4)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyPoolname4Array) ToFirewallconsolidatedPolicyPoolname4ArrayOutput() FirewallconsolidatedPolicyPoolname4ArrayOutput {
	return i.ToFirewallconsolidatedPolicyPoolname4ArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyPoolname4Array) ToFirewallconsolidatedPolicyPoolname4ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyPoolname4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyPoolname4ArrayOutput)
}

type FirewallconsolidatedPolicyPoolname4Output struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyPoolname4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyPoolname4)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyPoolname4Output) ToFirewallconsolidatedPolicyPoolname4Output() FirewallconsolidatedPolicyPoolname4Output {
	return o
}

func (o FirewallconsolidatedPolicyPoolname4Output) ToFirewallconsolidatedPolicyPoolname4OutputWithContext(ctx context.Context) FirewallconsolidatedPolicyPoolname4Output {
	return o
}

// Policy name.
func (o FirewallconsolidatedPolicyPoolname4Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyPoolname4) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyPoolname4ArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyPoolname4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyPoolname4)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyPoolname4ArrayOutput) ToFirewallconsolidatedPolicyPoolname4ArrayOutput() FirewallconsolidatedPolicyPoolname4ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyPoolname4ArrayOutput) ToFirewallconsolidatedPolicyPoolname4ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyPoolname4ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyPoolname4ArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyPoolname4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyPoolname4 {
		return vs[0].([]FirewallconsolidatedPolicyPoolname4)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyPoolname4Output)
}

type FirewallconsolidatedPolicyPoolname6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyPoolname6Input is an input type that accepts FirewallconsolidatedPolicyPoolname6Args and FirewallconsolidatedPolicyPoolname6Output values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyPoolname6Input` via:
//
//	FirewallconsolidatedPolicyPoolname6Args{...}
type FirewallconsolidatedPolicyPoolname6Input interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyPoolname6Output() FirewallconsolidatedPolicyPoolname6Output
	ToFirewallconsolidatedPolicyPoolname6OutputWithContext(context.Context) FirewallconsolidatedPolicyPoolname6Output
}

type FirewallconsolidatedPolicyPoolname6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyPoolname6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyPoolname6)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyPoolname6Args) ToFirewallconsolidatedPolicyPoolname6Output() FirewallconsolidatedPolicyPoolname6Output {
	return i.ToFirewallconsolidatedPolicyPoolname6OutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyPoolname6Args) ToFirewallconsolidatedPolicyPoolname6OutputWithContext(ctx context.Context) FirewallconsolidatedPolicyPoolname6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyPoolname6Output)
}

// FirewallconsolidatedPolicyPoolname6ArrayInput is an input type that accepts FirewallconsolidatedPolicyPoolname6Array and FirewallconsolidatedPolicyPoolname6ArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyPoolname6ArrayInput` via:
//
//	FirewallconsolidatedPolicyPoolname6Array{ FirewallconsolidatedPolicyPoolname6Args{...} }
type FirewallconsolidatedPolicyPoolname6ArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyPoolname6ArrayOutput() FirewallconsolidatedPolicyPoolname6ArrayOutput
	ToFirewallconsolidatedPolicyPoolname6ArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyPoolname6ArrayOutput
}

type FirewallconsolidatedPolicyPoolname6Array []FirewallconsolidatedPolicyPoolname6Input

func (FirewallconsolidatedPolicyPoolname6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyPoolname6)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyPoolname6Array) ToFirewallconsolidatedPolicyPoolname6ArrayOutput() FirewallconsolidatedPolicyPoolname6ArrayOutput {
	return i.ToFirewallconsolidatedPolicyPoolname6ArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyPoolname6Array) ToFirewallconsolidatedPolicyPoolname6ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyPoolname6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyPoolname6ArrayOutput)
}

type FirewallconsolidatedPolicyPoolname6Output struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyPoolname6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyPoolname6)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyPoolname6Output) ToFirewallconsolidatedPolicyPoolname6Output() FirewallconsolidatedPolicyPoolname6Output {
	return o
}

func (o FirewallconsolidatedPolicyPoolname6Output) ToFirewallconsolidatedPolicyPoolname6OutputWithContext(ctx context.Context) FirewallconsolidatedPolicyPoolname6Output {
	return o
}

// Policy name.
func (o FirewallconsolidatedPolicyPoolname6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyPoolname6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyPoolname6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyPoolname6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyPoolname6)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyPoolname6ArrayOutput) ToFirewallconsolidatedPolicyPoolname6ArrayOutput() FirewallconsolidatedPolicyPoolname6ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyPoolname6ArrayOutput) ToFirewallconsolidatedPolicyPoolname6ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyPoolname6ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyPoolname6ArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyPoolname6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyPoolname6 {
		return vs[0].([]FirewallconsolidatedPolicyPoolname6)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyPoolname6Output)
}

type FirewallconsolidatedPolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyServiceInput is an input type that accepts FirewallconsolidatedPolicyServiceArgs and FirewallconsolidatedPolicyServiceOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyServiceInput` via:
//
//	FirewallconsolidatedPolicyServiceArgs{...}
type FirewallconsolidatedPolicyServiceInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyServiceOutput() FirewallconsolidatedPolicyServiceOutput
	ToFirewallconsolidatedPolicyServiceOutputWithContext(context.Context) FirewallconsolidatedPolicyServiceOutput
}

type FirewallconsolidatedPolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyService)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyServiceArgs) ToFirewallconsolidatedPolicyServiceOutput() FirewallconsolidatedPolicyServiceOutput {
	return i.ToFirewallconsolidatedPolicyServiceOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyServiceArgs) ToFirewallconsolidatedPolicyServiceOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyServiceOutput)
}

// FirewallconsolidatedPolicyServiceArrayInput is an input type that accepts FirewallconsolidatedPolicyServiceArray and FirewallconsolidatedPolicyServiceArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyServiceArrayInput` via:
//
//	FirewallconsolidatedPolicyServiceArray{ FirewallconsolidatedPolicyServiceArgs{...} }
type FirewallconsolidatedPolicyServiceArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyServiceArrayOutput() FirewallconsolidatedPolicyServiceArrayOutput
	ToFirewallconsolidatedPolicyServiceArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyServiceArrayOutput
}

type FirewallconsolidatedPolicyServiceArray []FirewallconsolidatedPolicyServiceInput

func (FirewallconsolidatedPolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyService)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyServiceArray) ToFirewallconsolidatedPolicyServiceArrayOutput() FirewallconsolidatedPolicyServiceArrayOutput {
	return i.ToFirewallconsolidatedPolicyServiceArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyServiceArray) ToFirewallconsolidatedPolicyServiceArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyServiceArrayOutput)
}

type FirewallconsolidatedPolicyServiceOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyService)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyServiceOutput) ToFirewallconsolidatedPolicyServiceOutput() FirewallconsolidatedPolicyServiceOutput {
	return o
}

func (o FirewallconsolidatedPolicyServiceOutput) ToFirewallconsolidatedPolicyServiceOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyServiceOutput {
	return o
}

// Service name.
func (o FirewallconsolidatedPolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyService)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyServiceArrayOutput) ToFirewallconsolidatedPolicyServiceArrayOutput() FirewallconsolidatedPolicyServiceArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyServiceArrayOutput) ToFirewallconsolidatedPolicyServiceArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyServiceArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyServiceArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyService {
		return vs[0].([]FirewallconsolidatedPolicyService)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyServiceOutput)
}

type FirewallconsolidatedPolicySrcaddr4 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicySrcaddr4Input is an input type that accepts FirewallconsolidatedPolicySrcaddr4Args and FirewallconsolidatedPolicySrcaddr4Output values.
// You can construct a concrete instance of `FirewallconsolidatedPolicySrcaddr4Input` via:
//
//	FirewallconsolidatedPolicySrcaddr4Args{...}
type FirewallconsolidatedPolicySrcaddr4Input interface {
	pulumi.Input

	ToFirewallconsolidatedPolicySrcaddr4Output() FirewallconsolidatedPolicySrcaddr4Output
	ToFirewallconsolidatedPolicySrcaddr4OutputWithContext(context.Context) FirewallconsolidatedPolicySrcaddr4Output
}

type FirewallconsolidatedPolicySrcaddr4Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicySrcaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicySrcaddr4)(nil)).Elem()
}

func (i FirewallconsolidatedPolicySrcaddr4Args) ToFirewallconsolidatedPolicySrcaddr4Output() FirewallconsolidatedPolicySrcaddr4Output {
	return i.ToFirewallconsolidatedPolicySrcaddr4OutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicySrcaddr4Args) ToFirewallconsolidatedPolicySrcaddr4OutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicySrcaddr4Output)
}

// FirewallconsolidatedPolicySrcaddr4ArrayInput is an input type that accepts FirewallconsolidatedPolicySrcaddr4Array and FirewallconsolidatedPolicySrcaddr4ArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicySrcaddr4ArrayInput` via:
//
//	FirewallconsolidatedPolicySrcaddr4Array{ FirewallconsolidatedPolicySrcaddr4Args{...} }
type FirewallconsolidatedPolicySrcaddr4ArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicySrcaddr4ArrayOutput() FirewallconsolidatedPolicySrcaddr4ArrayOutput
	ToFirewallconsolidatedPolicySrcaddr4ArrayOutputWithContext(context.Context) FirewallconsolidatedPolicySrcaddr4ArrayOutput
}

type FirewallconsolidatedPolicySrcaddr4Array []FirewallconsolidatedPolicySrcaddr4Input

func (FirewallconsolidatedPolicySrcaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicySrcaddr4)(nil)).Elem()
}

func (i FirewallconsolidatedPolicySrcaddr4Array) ToFirewallconsolidatedPolicySrcaddr4ArrayOutput() FirewallconsolidatedPolicySrcaddr4ArrayOutput {
	return i.ToFirewallconsolidatedPolicySrcaddr4ArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicySrcaddr4Array) ToFirewallconsolidatedPolicySrcaddr4ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicySrcaddr4ArrayOutput)
}

type FirewallconsolidatedPolicySrcaddr4Output struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicySrcaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicySrcaddr4)(nil)).Elem()
}

func (o FirewallconsolidatedPolicySrcaddr4Output) ToFirewallconsolidatedPolicySrcaddr4Output() FirewallconsolidatedPolicySrcaddr4Output {
	return o
}

func (o FirewallconsolidatedPolicySrcaddr4Output) ToFirewallconsolidatedPolicySrcaddr4OutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcaddr4Output {
	return o
}

// Policy name.
func (o FirewallconsolidatedPolicySrcaddr4Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicySrcaddr4) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicySrcaddr4ArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicySrcaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicySrcaddr4)(nil)).Elem()
}

func (o FirewallconsolidatedPolicySrcaddr4ArrayOutput) ToFirewallconsolidatedPolicySrcaddr4ArrayOutput() FirewallconsolidatedPolicySrcaddr4ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicySrcaddr4ArrayOutput) ToFirewallconsolidatedPolicySrcaddr4ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcaddr4ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicySrcaddr4ArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicySrcaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicySrcaddr4 {
		return vs[0].([]FirewallconsolidatedPolicySrcaddr4)[vs[1].(int)]
	}).(FirewallconsolidatedPolicySrcaddr4Output)
}

type FirewallconsolidatedPolicySrcaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicySrcaddr6Input is an input type that accepts FirewallconsolidatedPolicySrcaddr6Args and FirewallconsolidatedPolicySrcaddr6Output values.
// You can construct a concrete instance of `FirewallconsolidatedPolicySrcaddr6Input` via:
//
//	FirewallconsolidatedPolicySrcaddr6Args{...}
type FirewallconsolidatedPolicySrcaddr6Input interface {
	pulumi.Input

	ToFirewallconsolidatedPolicySrcaddr6Output() FirewallconsolidatedPolicySrcaddr6Output
	ToFirewallconsolidatedPolicySrcaddr6OutputWithContext(context.Context) FirewallconsolidatedPolicySrcaddr6Output
}

type FirewallconsolidatedPolicySrcaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicySrcaddr6)(nil)).Elem()
}

func (i FirewallconsolidatedPolicySrcaddr6Args) ToFirewallconsolidatedPolicySrcaddr6Output() FirewallconsolidatedPolicySrcaddr6Output {
	return i.ToFirewallconsolidatedPolicySrcaddr6OutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicySrcaddr6Args) ToFirewallconsolidatedPolicySrcaddr6OutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicySrcaddr6Output)
}

// FirewallconsolidatedPolicySrcaddr6ArrayInput is an input type that accepts FirewallconsolidatedPolicySrcaddr6Array and FirewallconsolidatedPolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicySrcaddr6ArrayInput` via:
//
//	FirewallconsolidatedPolicySrcaddr6Array{ FirewallconsolidatedPolicySrcaddr6Args{...} }
type FirewallconsolidatedPolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicySrcaddr6ArrayOutput() FirewallconsolidatedPolicySrcaddr6ArrayOutput
	ToFirewallconsolidatedPolicySrcaddr6ArrayOutputWithContext(context.Context) FirewallconsolidatedPolicySrcaddr6ArrayOutput
}

type FirewallconsolidatedPolicySrcaddr6Array []FirewallconsolidatedPolicySrcaddr6Input

func (FirewallconsolidatedPolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicySrcaddr6)(nil)).Elem()
}

func (i FirewallconsolidatedPolicySrcaddr6Array) ToFirewallconsolidatedPolicySrcaddr6ArrayOutput() FirewallconsolidatedPolicySrcaddr6ArrayOutput {
	return i.ToFirewallconsolidatedPolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicySrcaddr6Array) ToFirewallconsolidatedPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicySrcaddr6ArrayOutput)
}

type FirewallconsolidatedPolicySrcaddr6Output struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicySrcaddr6)(nil)).Elem()
}

func (o FirewallconsolidatedPolicySrcaddr6Output) ToFirewallconsolidatedPolicySrcaddr6Output() FirewallconsolidatedPolicySrcaddr6Output {
	return o
}

func (o FirewallconsolidatedPolicySrcaddr6Output) ToFirewallconsolidatedPolicySrcaddr6OutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcaddr6Output {
	return o
}

// Policy name.
func (o FirewallconsolidatedPolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicySrcaddr6)(nil)).Elem()
}

func (o FirewallconsolidatedPolicySrcaddr6ArrayOutput) ToFirewallconsolidatedPolicySrcaddr6ArrayOutput() FirewallconsolidatedPolicySrcaddr6ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicySrcaddr6ArrayOutput) ToFirewallconsolidatedPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcaddr6ArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicySrcaddr6 {
		return vs[0].([]FirewallconsolidatedPolicySrcaddr6)[vs[1].(int)]
	}).(FirewallconsolidatedPolicySrcaddr6Output)
}

type FirewallconsolidatedPolicySrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicySrcintfInput is an input type that accepts FirewallconsolidatedPolicySrcintfArgs and FirewallconsolidatedPolicySrcintfOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicySrcintfInput` via:
//
//	FirewallconsolidatedPolicySrcintfArgs{...}
type FirewallconsolidatedPolicySrcintfInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicySrcintfOutput() FirewallconsolidatedPolicySrcintfOutput
	ToFirewallconsolidatedPolicySrcintfOutputWithContext(context.Context) FirewallconsolidatedPolicySrcintfOutput
}

type FirewallconsolidatedPolicySrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicySrcintf)(nil)).Elem()
}

func (i FirewallconsolidatedPolicySrcintfArgs) ToFirewallconsolidatedPolicySrcintfOutput() FirewallconsolidatedPolicySrcintfOutput {
	return i.ToFirewallconsolidatedPolicySrcintfOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicySrcintfArgs) ToFirewallconsolidatedPolicySrcintfOutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicySrcintfOutput)
}

// FirewallconsolidatedPolicySrcintfArrayInput is an input type that accepts FirewallconsolidatedPolicySrcintfArray and FirewallconsolidatedPolicySrcintfArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicySrcintfArrayInput` via:
//
//	FirewallconsolidatedPolicySrcintfArray{ FirewallconsolidatedPolicySrcintfArgs{...} }
type FirewallconsolidatedPolicySrcintfArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicySrcintfArrayOutput() FirewallconsolidatedPolicySrcintfArrayOutput
	ToFirewallconsolidatedPolicySrcintfArrayOutputWithContext(context.Context) FirewallconsolidatedPolicySrcintfArrayOutput
}

type FirewallconsolidatedPolicySrcintfArray []FirewallconsolidatedPolicySrcintfInput

func (FirewallconsolidatedPolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicySrcintf)(nil)).Elem()
}

func (i FirewallconsolidatedPolicySrcintfArray) ToFirewallconsolidatedPolicySrcintfArrayOutput() FirewallconsolidatedPolicySrcintfArrayOutput {
	return i.ToFirewallconsolidatedPolicySrcintfArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicySrcintfArray) ToFirewallconsolidatedPolicySrcintfArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicySrcintfArrayOutput)
}

type FirewallconsolidatedPolicySrcintfOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicySrcintf)(nil)).Elem()
}

func (o FirewallconsolidatedPolicySrcintfOutput) ToFirewallconsolidatedPolicySrcintfOutput() FirewallconsolidatedPolicySrcintfOutput {
	return o
}

func (o FirewallconsolidatedPolicySrcintfOutput) ToFirewallconsolidatedPolicySrcintfOutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcintfOutput {
	return o
}

// Interface name.
func (o FirewallconsolidatedPolicySrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicySrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicySrcintf)(nil)).Elem()
}

func (o FirewallconsolidatedPolicySrcintfArrayOutput) ToFirewallconsolidatedPolicySrcintfArrayOutput() FirewallconsolidatedPolicySrcintfArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicySrcintfArrayOutput) ToFirewallconsolidatedPolicySrcintfArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicySrcintfArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicySrcintfArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicySrcintf {
		return vs[0].([]FirewallconsolidatedPolicySrcintf)[vs[1].(int)]
	}).(FirewallconsolidatedPolicySrcintfOutput)
}

type FirewallconsolidatedPolicyUrlCategory struct {
	// URL category ID.
	Id *int `pulumi:"id"`
}

// FirewallconsolidatedPolicyUrlCategoryInput is an input type that accepts FirewallconsolidatedPolicyUrlCategoryArgs and FirewallconsolidatedPolicyUrlCategoryOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyUrlCategoryInput` via:
//
//	FirewallconsolidatedPolicyUrlCategoryArgs{...}
type FirewallconsolidatedPolicyUrlCategoryInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyUrlCategoryOutput() FirewallconsolidatedPolicyUrlCategoryOutput
	ToFirewallconsolidatedPolicyUrlCategoryOutputWithContext(context.Context) FirewallconsolidatedPolicyUrlCategoryOutput
}

type FirewallconsolidatedPolicyUrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallconsolidatedPolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyUrlCategory)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyUrlCategoryArgs) ToFirewallconsolidatedPolicyUrlCategoryOutput() FirewallconsolidatedPolicyUrlCategoryOutput {
	return i.ToFirewallconsolidatedPolicyUrlCategoryOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyUrlCategoryArgs) ToFirewallconsolidatedPolicyUrlCategoryOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyUrlCategoryOutput)
}

// FirewallconsolidatedPolicyUrlCategoryArrayInput is an input type that accepts FirewallconsolidatedPolicyUrlCategoryArray and FirewallconsolidatedPolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyUrlCategoryArrayInput` via:
//
//	FirewallconsolidatedPolicyUrlCategoryArray{ FirewallconsolidatedPolicyUrlCategoryArgs{...} }
type FirewallconsolidatedPolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyUrlCategoryArrayOutput() FirewallconsolidatedPolicyUrlCategoryArrayOutput
	ToFirewallconsolidatedPolicyUrlCategoryArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyUrlCategoryArrayOutput
}

type FirewallconsolidatedPolicyUrlCategoryArray []FirewallconsolidatedPolicyUrlCategoryInput

func (FirewallconsolidatedPolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyUrlCategory)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyUrlCategoryArray) ToFirewallconsolidatedPolicyUrlCategoryArrayOutput() FirewallconsolidatedPolicyUrlCategoryArrayOutput {
	return i.ToFirewallconsolidatedPolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyUrlCategoryArray) ToFirewallconsolidatedPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyUrlCategoryArrayOutput)
}

type FirewallconsolidatedPolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyUrlCategory)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyUrlCategoryOutput) ToFirewallconsolidatedPolicyUrlCategoryOutput() FirewallconsolidatedPolicyUrlCategoryOutput {
	return o
}

func (o FirewallconsolidatedPolicyUrlCategoryOutput) ToFirewallconsolidatedPolicyUrlCategoryOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyUrlCategoryOutput {
	return o
}

// URL category ID.
func (o FirewallconsolidatedPolicyUrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyUrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallconsolidatedPolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyUrlCategory)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyUrlCategoryArrayOutput) ToFirewallconsolidatedPolicyUrlCategoryArrayOutput() FirewallconsolidatedPolicyUrlCategoryArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyUrlCategoryArrayOutput) ToFirewallconsolidatedPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyUrlCategoryArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyUrlCategory {
		return vs[0].([]FirewallconsolidatedPolicyUrlCategory)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyUrlCategoryOutput)
}

type FirewallconsolidatedPolicyUser struct {
	// IPv6 pool name.
	Name *string `pulumi:"name"`
}

// FirewallconsolidatedPolicyUserInput is an input type that accepts FirewallconsolidatedPolicyUserArgs and FirewallconsolidatedPolicyUserOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyUserInput` via:
//
//	FirewallconsolidatedPolicyUserArgs{...}
type FirewallconsolidatedPolicyUserInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyUserOutput() FirewallconsolidatedPolicyUserOutput
	ToFirewallconsolidatedPolicyUserOutputWithContext(context.Context) FirewallconsolidatedPolicyUserOutput
}

type FirewallconsolidatedPolicyUserArgs struct {
	// IPv6 pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallconsolidatedPolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyUser)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyUserArgs) ToFirewallconsolidatedPolicyUserOutput() FirewallconsolidatedPolicyUserOutput {
	return i.ToFirewallconsolidatedPolicyUserOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyUserArgs) ToFirewallconsolidatedPolicyUserOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyUserOutput)
}

// FirewallconsolidatedPolicyUserArrayInput is an input type that accepts FirewallconsolidatedPolicyUserArray and FirewallconsolidatedPolicyUserArrayOutput values.
// You can construct a concrete instance of `FirewallconsolidatedPolicyUserArrayInput` via:
//
//	FirewallconsolidatedPolicyUserArray{ FirewallconsolidatedPolicyUserArgs{...} }
type FirewallconsolidatedPolicyUserArrayInput interface {
	pulumi.Input

	ToFirewallconsolidatedPolicyUserArrayOutput() FirewallconsolidatedPolicyUserArrayOutput
	ToFirewallconsolidatedPolicyUserArrayOutputWithContext(context.Context) FirewallconsolidatedPolicyUserArrayOutput
}

type FirewallconsolidatedPolicyUserArray []FirewallconsolidatedPolicyUserInput

func (FirewallconsolidatedPolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyUser)(nil)).Elem()
}

func (i FirewallconsolidatedPolicyUserArray) ToFirewallconsolidatedPolicyUserArrayOutput() FirewallconsolidatedPolicyUserArrayOutput {
	return i.ToFirewallconsolidatedPolicyUserArrayOutputWithContext(context.Background())
}

func (i FirewallconsolidatedPolicyUserArray) ToFirewallconsolidatedPolicyUserArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallconsolidatedPolicyUserArrayOutput)
}

type FirewallconsolidatedPolicyUserOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallconsolidatedPolicyUser)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyUserOutput) ToFirewallconsolidatedPolicyUserOutput() FirewallconsolidatedPolicyUserOutput {
	return o
}

func (o FirewallconsolidatedPolicyUserOutput) ToFirewallconsolidatedPolicyUserOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyUserOutput {
	return o
}

// IPv6 pool name.
func (o FirewallconsolidatedPolicyUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallconsolidatedPolicyUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallconsolidatedPolicyUserArrayOutput struct{ *pulumi.OutputState }

func (FirewallconsolidatedPolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallconsolidatedPolicyUser)(nil)).Elem()
}

func (o FirewallconsolidatedPolicyUserArrayOutput) ToFirewallconsolidatedPolicyUserArrayOutput() FirewallconsolidatedPolicyUserArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyUserArrayOutput) ToFirewallconsolidatedPolicyUserArrayOutputWithContext(ctx context.Context) FirewallconsolidatedPolicyUserArrayOutput {
	return o
}

func (o FirewallconsolidatedPolicyUserArrayOutput) Index(i pulumi.IntInput) FirewallconsolidatedPolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallconsolidatedPolicyUser {
		return vs[0].([]FirewallconsolidatedPolicyUser)[vs[1].(int)]
	}).(FirewallconsolidatedPolicyUserOutput)
}

type FirewallscheduleGroupMember struct {
	// Schedule name.
	Name *string `pulumi:"name"`
}

// FirewallscheduleGroupMemberInput is an input type that accepts FirewallscheduleGroupMemberArgs and FirewallscheduleGroupMemberOutput values.
// You can construct a concrete instance of `FirewallscheduleGroupMemberInput` via:
//
//	FirewallscheduleGroupMemberArgs{...}
type FirewallscheduleGroupMemberInput interface {
	pulumi.Input

	ToFirewallscheduleGroupMemberOutput() FirewallscheduleGroupMemberOutput
	ToFirewallscheduleGroupMemberOutputWithContext(context.Context) FirewallscheduleGroupMemberOutput
}

type FirewallscheduleGroupMemberArgs struct {
	// Schedule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallscheduleGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallscheduleGroupMember)(nil)).Elem()
}

func (i FirewallscheduleGroupMemberArgs) ToFirewallscheduleGroupMemberOutput() FirewallscheduleGroupMemberOutput {
	return i.ToFirewallscheduleGroupMemberOutputWithContext(context.Background())
}

func (i FirewallscheduleGroupMemberArgs) ToFirewallscheduleGroupMemberOutputWithContext(ctx context.Context) FirewallscheduleGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallscheduleGroupMemberOutput)
}

// FirewallscheduleGroupMemberArrayInput is an input type that accepts FirewallscheduleGroupMemberArray and FirewallscheduleGroupMemberArrayOutput values.
// You can construct a concrete instance of `FirewallscheduleGroupMemberArrayInput` via:
//
//	FirewallscheduleGroupMemberArray{ FirewallscheduleGroupMemberArgs{...} }
type FirewallscheduleGroupMemberArrayInput interface {
	pulumi.Input

	ToFirewallscheduleGroupMemberArrayOutput() FirewallscheduleGroupMemberArrayOutput
	ToFirewallscheduleGroupMemberArrayOutputWithContext(context.Context) FirewallscheduleGroupMemberArrayOutput
}

type FirewallscheduleGroupMemberArray []FirewallscheduleGroupMemberInput

func (FirewallscheduleGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallscheduleGroupMember)(nil)).Elem()
}

func (i FirewallscheduleGroupMemberArray) ToFirewallscheduleGroupMemberArrayOutput() FirewallscheduleGroupMemberArrayOutput {
	return i.ToFirewallscheduleGroupMemberArrayOutputWithContext(context.Background())
}

func (i FirewallscheduleGroupMemberArray) ToFirewallscheduleGroupMemberArrayOutputWithContext(ctx context.Context) FirewallscheduleGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallscheduleGroupMemberArrayOutput)
}

type FirewallscheduleGroupMemberOutput struct{ *pulumi.OutputState }

func (FirewallscheduleGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallscheduleGroupMember)(nil)).Elem()
}

func (o FirewallscheduleGroupMemberOutput) ToFirewallscheduleGroupMemberOutput() FirewallscheduleGroupMemberOutput {
	return o
}

func (o FirewallscheduleGroupMemberOutput) ToFirewallscheduleGroupMemberOutputWithContext(ctx context.Context) FirewallscheduleGroupMemberOutput {
	return o
}

// Schedule name.
func (o FirewallscheduleGroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallscheduleGroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallscheduleGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallscheduleGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallscheduleGroupMember)(nil)).Elem()
}

func (o FirewallscheduleGroupMemberArrayOutput) ToFirewallscheduleGroupMemberArrayOutput() FirewallscheduleGroupMemberArrayOutput {
	return o
}

func (o FirewallscheduleGroupMemberArrayOutput) ToFirewallscheduleGroupMemberArrayOutputWithContext(ctx context.Context) FirewallscheduleGroupMemberArrayOutput {
	return o
}

func (o FirewallscheduleGroupMemberArrayOutput) Index(i pulumi.IntInput) FirewallscheduleGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallscheduleGroupMember {
		return vs[0].([]FirewallscheduleGroupMember)[vs[1].(int)]
	}).(FirewallscheduleGroupMemberOutput)
}

type FirewallserviceCustomAppCategory struct {
	// Application category id.
	Id *int `pulumi:"id"`
}

// FirewallserviceCustomAppCategoryInput is an input type that accepts FirewallserviceCustomAppCategoryArgs and FirewallserviceCustomAppCategoryOutput values.
// You can construct a concrete instance of `FirewallserviceCustomAppCategoryInput` via:
//
//	FirewallserviceCustomAppCategoryArgs{...}
type FirewallserviceCustomAppCategoryInput interface {
	pulumi.Input

	ToFirewallserviceCustomAppCategoryOutput() FirewallserviceCustomAppCategoryOutput
	ToFirewallserviceCustomAppCategoryOutputWithContext(context.Context) FirewallserviceCustomAppCategoryOutput
}

type FirewallserviceCustomAppCategoryArgs struct {
	// Application category id.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallserviceCustomAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallserviceCustomAppCategory)(nil)).Elem()
}

func (i FirewallserviceCustomAppCategoryArgs) ToFirewallserviceCustomAppCategoryOutput() FirewallserviceCustomAppCategoryOutput {
	return i.ToFirewallserviceCustomAppCategoryOutputWithContext(context.Background())
}

func (i FirewallserviceCustomAppCategoryArgs) ToFirewallserviceCustomAppCategoryOutputWithContext(ctx context.Context) FirewallserviceCustomAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallserviceCustomAppCategoryOutput)
}

// FirewallserviceCustomAppCategoryArrayInput is an input type that accepts FirewallserviceCustomAppCategoryArray and FirewallserviceCustomAppCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallserviceCustomAppCategoryArrayInput` via:
//
//	FirewallserviceCustomAppCategoryArray{ FirewallserviceCustomAppCategoryArgs{...} }
type FirewallserviceCustomAppCategoryArrayInput interface {
	pulumi.Input

	ToFirewallserviceCustomAppCategoryArrayOutput() FirewallserviceCustomAppCategoryArrayOutput
	ToFirewallserviceCustomAppCategoryArrayOutputWithContext(context.Context) FirewallserviceCustomAppCategoryArrayOutput
}

type FirewallserviceCustomAppCategoryArray []FirewallserviceCustomAppCategoryInput

func (FirewallserviceCustomAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallserviceCustomAppCategory)(nil)).Elem()
}

func (i FirewallserviceCustomAppCategoryArray) ToFirewallserviceCustomAppCategoryArrayOutput() FirewallserviceCustomAppCategoryArrayOutput {
	return i.ToFirewallserviceCustomAppCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallserviceCustomAppCategoryArray) ToFirewallserviceCustomAppCategoryArrayOutputWithContext(ctx context.Context) FirewallserviceCustomAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallserviceCustomAppCategoryArrayOutput)
}

type FirewallserviceCustomAppCategoryOutput struct{ *pulumi.OutputState }

func (FirewallserviceCustomAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallserviceCustomAppCategory)(nil)).Elem()
}

func (o FirewallserviceCustomAppCategoryOutput) ToFirewallserviceCustomAppCategoryOutput() FirewallserviceCustomAppCategoryOutput {
	return o
}

func (o FirewallserviceCustomAppCategoryOutput) ToFirewallserviceCustomAppCategoryOutputWithContext(ctx context.Context) FirewallserviceCustomAppCategoryOutput {
	return o
}

// Application category id.
func (o FirewallserviceCustomAppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallserviceCustomAppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallserviceCustomAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallserviceCustomAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallserviceCustomAppCategory)(nil)).Elem()
}

func (o FirewallserviceCustomAppCategoryArrayOutput) ToFirewallserviceCustomAppCategoryArrayOutput() FirewallserviceCustomAppCategoryArrayOutput {
	return o
}

func (o FirewallserviceCustomAppCategoryArrayOutput) ToFirewallserviceCustomAppCategoryArrayOutputWithContext(ctx context.Context) FirewallserviceCustomAppCategoryArrayOutput {
	return o
}

func (o FirewallserviceCustomAppCategoryArrayOutput) Index(i pulumi.IntInput) FirewallserviceCustomAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallserviceCustomAppCategory {
		return vs[0].([]FirewallserviceCustomAppCategory)[vs[1].(int)]
	}).(FirewallserviceCustomAppCategoryOutput)
}

type FirewallserviceCustomApplication struct {
	// Application id.
	Id *int `pulumi:"id"`
}

// FirewallserviceCustomApplicationInput is an input type that accepts FirewallserviceCustomApplicationArgs and FirewallserviceCustomApplicationOutput values.
// You can construct a concrete instance of `FirewallserviceCustomApplicationInput` via:
//
//	FirewallserviceCustomApplicationArgs{...}
type FirewallserviceCustomApplicationInput interface {
	pulumi.Input

	ToFirewallserviceCustomApplicationOutput() FirewallserviceCustomApplicationOutput
	ToFirewallserviceCustomApplicationOutputWithContext(context.Context) FirewallserviceCustomApplicationOutput
}

type FirewallserviceCustomApplicationArgs struct {
	// Application id.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (FirewallserviceCustomApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallserviceCustomApplication)(nil)).Elem()
}

func (i FirewallserviceCustomApplicationArgs) ToFirewallserviceCustomApplicationOutput() FirewallserviceCustomApplicationOutput {
	return i.ToFirewallserviceCustomApplicationOutputWithContext(context.Background())
}

func (i FirewallserviceCustomApplicationArgs) ToFirewallserviceCustomApplicationOutputWithContext(ctx context.Context) FirewallserviceCustomApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallserviceCustomApplicationOutput)
}

// FirewallserviceCustomApplicationArrayInput is an input type that accepts FirewallserviceCustomApplicationArray and FirewallserviceCustomApplicationArrayOutput values.
// You can construct a concrete instance of `FirewallserviceCustomApplicationArrayInput` via:
//
//	FirewallserviceCustomApplicationArray{ FirewallserviceCustomApplicationArgs{...} }
type FirewallserviceCustomApplicationArrayInput interface {
	pulumi.Input

	ToFirewallserviceCustomApplicationArrayOutput() FirewallserviceCustomApplicationArrayOutput
	ToFirewallserviceCustomApplicationArrayOutputWithContext(context.Context) FirewallserviceCustomApplicationArrayOutput
}

type FirewallserviceCustomApplicationArray []FirewallserviceCustomApplicationInput

func (FirewallserviceCustomApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallserviceCustomApplication)(nil)).Elem()
}

func (i FirewallserviceCustomApplicationArray) ToFirewallserviceCustomApplicationArrayOutput() FirewallserviceCustomApplicationArrayOutput {
	return i.ToFirewallserviceCustomApplicationArrayOutputWithContext(context.Background())
}

func (i FirewallserviceCustomApplicationArray) ToFirewallserviceCustomApplicationArrayOutputWithContext(ctx context.Context) FirewallserviceCustomApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallserviceCustomApplicationArrayOutput)
}

type FirewallserviceCustomApplicationOutput struct{ *pulumi.OutputState }

func (FirewallserviceCustomApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallserviceCustomApplication)(nil)).Elem()
}

func (o FirewallserviceCustomApplicationOutput) ToFirewallserviceCustomApplicationOutput() FirewallserviceCustomApplicationOutput {
	return o
}

func (o FirewallserviceCustomApplicationOutput) ToFirewallserviceCustomApplicationOutputWithContext(ctx context.Context) FirewallserviceCustomApplicationOutput {
	return o
}

// Application id.
func (o FirewallserviceCustomApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallserviceCustomApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type FirewallserviceCustomApplicationArrayOutput struct{ *pulumi.OutputState }

func (FirewallserviceCustomApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallserviceCustomApplication)(nil)).Elem()
}

func (o FirewallserviceCustomApplicationArrayOutput) ToFirewallserviceCustomApplicationArrayOutput() FirewallserviceCustomApplicationArrayOutput {
	return o
}

func (o FirewallserviceCustomApplicationArrayOutput) ToFirewallserviceCustomApplicationArrayOutputWithContext(ctx context.Context) FirewallserviceCustomApplicationArrayOutput {
	return o
}

func (o FirewallserviceCustomApplicationArrayOutput) Index(i pulumi.IntInput) FirewallserviceCustomApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallserviceCustomApplication {
		return vs[0].([]FirewallserviceCustomApplication)[vs[1].(int)]
	}).(FirewallserviceCustomApplicationOutput)
}

type FirewallserviceGroupMember struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallserviceGroupMemberInput is an input type that accepts FirewallserviceGroupMemberArgs and FirewallserviceGroupMemberOutput values.
// You can construct a concrete instance of `FirewallserviceGroupMemberInput` via:
//
//	FirewallserviceGroupMemberArgs{...}
type FirewallserviceGroupMemberInput interface {
	pulumi.Input

	ToFirewallserviceGroupMemberOutput() FirewallserviceGroupMemberOutput
	ToFirewallserviceGroupMemberOutputWithContext(context.Context) FirewallserviceGroupMemberOutput
}

type FirewallserviceGroupMemberArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallserviceGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallserviceGroupMember)(nil)).Elem()
}

func (i FirewallserviceGroupMemberArgs) ToFirewallserviceGroupMemberOutput() FirewallserviceGroupMemberOutput {
	return i.ToFirewallserviceGroupMemberOutputWithContext(context.Background())
}

func (i FirewallserviceGroupMemberArgs) ToFirewallserviceGroupMemberOutputWithContext(ctx context.Context) FirewallserviceGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallserviceGroupMemberOutput)
}

// FirewallserviceGroupMemberArrayInput is an input type that accepts FirewallserviceGroupMemberArray and FirewallserviceGroupMemberArrayOutput values.
// You can construct a concrete instance of `FirewallserviceGroupMemberArrayInput` via:
//
//	FirewallserviceGroupMemberArray{ FirewallserviceGroupMemberArgs{...} }
type FirewallserviceGroupMemberArrayInput interface {
	pulumi.Input

	ToFirewallserviceGroupMemberArrayOutput() FirewallserviceGroupMemberArrayOutput
	ToFirewallserviceGroupMemberArrayOutputWithContext(context.Context) FirewallserviceGroupMemberArrayOutput
}

type FirewallserviceGroupMemberArray []FirewallserviceGroupMemberInput

func (FirewallserviceGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallserviceGroupMember)(nil)).Elem()
}

func (i FirewallserviceGroupMemberArray) ToFirewallserviceGroupMemberArrayOutput() FirewallserviceGroupMemberArrayOutput {
	return i.ToFirewallserviceGroupMemberArrayOutputWithContext(context.Background())
}

func (i FirewallserviceGroupMemberArray) ToFirewallserviceGroupMemberArrayOutputWithContext(ctx context.Context) FirewallserviceGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallserviceGroupMemberArrayOutput)
}

type FirewallserviceGroupMemberOutput struct{ *pulumi.OutputState }

func (FirewallserviceGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallserviceGroupMember)(nil)).Elem()
}

func (o FirewallserviceGroupMemberOutput) ToFirewallserviceGroupMemberOutput() FirewallserviceGroupMemberOutput {
	return o
}

func (o FirewallserviceGroupMemberOutput) ToFirewallserviceGroupMemberOutputWithContext(ctx context.Context) FirewallserviceGroupMemberOutput {
	return o
}

// Address name.
func (o FirewallserviceGroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallserviceGroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallserviceGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallserviceGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallserviceGroupMember)(nil)).Elem()
}

func (o FirewallserviceGroupMemberArrayOutput) ToFirewallserviceGroupMemberArrayOutput() FirewallserviceGroupMemberArrayOutput {
	return o
}

func (o FirewallserviceGroupMemberArrayOutput) ToFirewallserviceGroupMemberArrayOutputWithContext(ctx context.Context) FirewallserviceGroupMemberArrayOutput {
	return o
}

func (o FirewallserviceGroupMemberArrayOutput) Index(i pulumi.IntInput) FirewallserviceGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallserviceGroupMember {
		return vs[0].([]FirewallserviceGroupMember)[vs[1].(int)]
	}).(FirewallserviceGroupMemberOutput)
}

type FirewallwildcardfqdnGroupMember struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// FirewallwildcardfqdnGroupMemberInput is an input type that accepts FirewallwildcardfqdnGroupMemberArgs and FirewallwildcardfqdnGroupMemberOutput values.
// You can construct a concrete instance of `FirewallwildcardfqdnGroupMemberInput` via:
//
//	FirewallwildcardfqdnGroupMemberArgs{...}
type FirewallwildcardfqdnGroupMemberInput interface {
	pulumi.Input

	ToFirewallwildcardfqdnGroupMemberOutput() FirewallwildcardfqdnGroupMemberOutput
	ToFirewallwildcardfqdnGroupMemberOutputWithContext(context.Context) FirewallwildcardfqdnGroupMemberOutput
}

type FirewallwildcardfqdnGroupMemberArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallwildcardfqdnGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallwildcardfqdnGroupMember)(nil)).Elem()
}

func (i FirewallwildcardfqdnGroupMemberArgs) ToFirewallwildcardfqdnGroupMemberOutput() FirewallwildcardfqdnGroupMemberOutput {
	return i.ToFirewallwildcardfqdnGroupMemberOutputWithContext(context.Background())
}

func (i FirewallwildcardfqdnGroupMemberArgs) ToFirewallwildcardfqdnGroupMemberOutputWithContext(ctx context.Context) FirewallwildcardfqdnGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallwildcardfqdnGroupMemberOutput)
}

// FirewallwildcardfqdnGroupMemberArrayInput is an input type that accepts FirewallwildcardfqdnGroupMemberArray and FirewallwildcardfqdnGroupMemberArrayOutput values.
// You can construct a concrete instance of `FirewallwildcardfqdnGroupMemberArrayInput` via:
//
//	FirewallwildcardfqdnGroupMemberArray{ FirewallwildcardfqdnGroupMemberArgs{...} }
type FirewallwildcardfqdnGroupMemberArrayInput interface {
	pulumi.Input

	ToFirewallwildcardfqdnGroupMemberArrayOutput() FirewallwildcardfqdnGroupMemberArrayOutput
	ToFirewallwildcardfqdnGroupMemberArrayOutputWithContext(context.Context) FirewallwildcardfqdnGroupMemberArrayOutput
}

type FirewallwildcardfqdnGroupMemberArray []FirewallwildcardfqdnGroupMemberInput

func (FirewallwildcardfqdnGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallwildcardfqdnGroupMember)(nil)).Elem()
}

func (i FirewallwildcardfqdnGroupMemberArray) ToFirewallwildcardfqdnGroupMemberArrayOutput() FirewallwildcardfqdnGroupMemberArrayOutput {
	return i.ToFirewallwildcardfqdnGroupMemberArrayOutputWithContext(context.Background())
}

func (i FirewallwildcardfqdnGroupMemberArray) ToFirewallwildcardfqdnGroupMemberArrayOutputWithContext(ctx context.Context) FirewallwildcardfqdnGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallwildcardfqdnGroupMemberArrayOutput)
}

type FirewallwildcardfqdnGroupMemberOutput struct{ *pulumi.OutputState }

func (FirewallwildcardfqdnGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallwildcardfqdnGroupMember)(nil)).Elem()
}

func (o FirewallwildcardfqdnGroupMemberOutput) ToFirewallwildcardfqdnGroupMemberOutput() FirewallwildcardfqdnGroupMemberOutput {
	return o
}

func (o FirewallwildcardfqdnGroupMemberOutput) ToFirewallwildcardfqdnGroupMemberOutputWithContext(ctx context.Context) FirewallwildcardfqdnGroupMemberOutput {
	return o
}

// Address name.
func (o FirewallwildcardfqdnGroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallwildcardfqdnGroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallwildcardfqdnGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (FirewallwildcardfqdnGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallwildcardfqdnGroupMember)(nil)).Elem()
}

func (o FirewallwildcardfqdnGroupMemberArrayOutput) ToFirewallwildcardfqdnGroupMemberArrayOutput() FirewallwildcardfqdnGroupMemberArrayOutput {
	return o
}

func (o FirewallwildcardfqdnGroupMemberArrayOutput) ToFirewallwildcardfqdnGroupMemberArrayOutputWithContext(ctx context.Context) FirewallwildcardfqdnGroupMemberArrayOutput {
	return o
}

func (o FirewallwildcardfqdnGroupMemberArrayOutput) Index(i pulumi.IntInput) FirewallwildcardfqdnGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallwildcardfqdnGroupMember {
		return vs[0].([]FirewallwildcardfqdnGroupMember)[vs[1].(int)]
	}).(FirewallwildcardfqdnGroupMemberOutput)
}

type IcapProfileIcapHeader struct {
	// Enable/disable use of base64 encoding of HTTP content. Valid values: `disable`, `enable`.
	Base64Encoding *string `pulumi:"base64Encoding"`
	// HTTP header content.
	Content *string `pulumi:"content"`
	// HTTP forwarded header ID.
	Id *int `pulumi:"id"`
	// HTTP forwarded header name.
	Name *string `pulumi:"name"`
}

// IcapProfileIcapHeaderInput is an input type that accepts IcapProfileIcapHeaderArgs and IcapProfileIcapHeaderOutput values.
// You can construct a concrete instance of `IcapProfileIcapHeaderInput` via:
//
//	IcapProfileIcapHeaderArgs{...}
type IcapProfileIcapHeaderInput interface {
	pulumi.Input

	ToIcapProfileIcapHeaderOutput() IcapProfileIcapHeaderOutput
	ToIcapProfileIcapHeaderOutputWithContext(context.Context) IcapProfileIcapHeaderOutput
}

type IcapProfileIcapHeaderArgs struct {
	// Enable/disable use of base64 encoding of HTTP content. Valid values: `disable`, `enable`.
	Base64Encoding pulumi.StringPtrInput `pulumi:"base64Encoding"`
	// HTTP header content.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// HTTP forwarded header ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// HTTP forwarded header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IcapProfileIcapHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapProfileIcapHeader)(nil)).Elem()
}

func (i IcapProfileIcapHeaderArgs) ToIcapProfileIcapHeaderOutput() IcapProfileIcapHeaderOutput {
	return i.ToIcapProfileIcapHeaderOutputWithContext(context.Background())
}

func (i IcapProfileIcapHeaderArgs) ToIcapProfileIcapHeaderOutputWithContext(ctx context.Context) IcapProfileIcapHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileIcapHeaderOutput)
}

// IcapProfileIcapHeaderArrayInput is an input type that accepts IcapProfileIcapHeaderArray and IcapProfileIcapHeaderArrayOutput values.
// You can construct a concrete instance of `IcapProfileIcapHeaderArrayInput` via:
//
//	IcapProfileIcapHeaderArray{ IcapProfileIcapHeaderArgs{...} }
type IcapProfileIcapHeaderArrayInput interface {
	pulumi.Input

	ToIcapProfileIcapHeaderArrayOutput() IcapProfileIcapHeaderArrayOutput
	ToIcapProfileIcapHeaderArrayOutputWithContext(context.Context) IcapProfileIcapHeaderArrayOutput
}

type IcapProfileIcapHeaderArray []IcapProfileIcapHeaderInput

func (IcapProfileIcapHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapProfileIcapHeader)(nil)).Elem()
}

func (i IcapProfileIcapHeaderArray) ToIcapProfileIcapHeaderArrayOutput() IcapProfileIcapHeaderArrayOutput {
	return i.ToIcapProfileIcapHeaderArrayOutputWithContext(context.Background())
}

func (i IcapProfileIcapHeaderArray) ToIcapProfileIcapHeaderArrayOutputWithContext(ctx context.Context) IcapProfileIcapHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileIcapHeaderArrayOutput)
}

type IcapProfileIcapHeaderOutput struct{ *pulumi.OutputState }

func (IcapProfileIcapHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapProfileIcapHeader)(nil)).Elem()
}

func (o IcapProfileIcapHeaderOutput) ToIcapProfileIcapHeaderOutput() IcapProfileIcapHeaderOutput {
	return o
}

func (o IcapProfileIcapHeaderOutput) ToIcapProfileIcapHeaderOutputWithContext(ctx context.Context) IcapProfileIcapHeaderOutput {
	return o
}

// Enable/disable use of base64 encoding of HTTP content. Valid values: `disable`, `enable`.
func (o IcapProfileIcapHeaderOutput) Base64Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IcapProfileIcapHeader) *string { return v.Base64Encoding }).(pulumi.StringPtrOutput)
}

// HTTP header content.
func (o IcapProfileIcapHeaderOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IcapProfileIcapHeader) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// HTTP forwarded header ID.
func (o IcapProfileIcapHeaderOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IcapProfileIcapHeader) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// HTTP forwarded header name.
func (o IcapProfileIcapHeaderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IcapProfileIcapHeader) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IcapProfileIcapHeaderArrayOutput struct{ *pulumi.OutputState }

func (IcapProfileIcapHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapProfileIcapHeader)(nil)).Elem()
}

func (o IcapProfileIcapHeaderArrayOutput) ToIcapProfileIcapHeaderArrayOutput() IcapProfileIcapHeaderArrayOutput {
	return o
}

func (o IcapProfileIcapHeaderArrayOutput) ToIcapProfileIcapHeaderArrayOutputWithContext(ctx context.Context) IcapProfileIcapHeaderArrayOutput {
	return o
}

func (o IcapProfileIcapHeaderArrayOutput) Index(i pulumi.IntInput) IcapProfileIcapHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IcapProfileIcapHeader {
		return vs[0].([]IcapProfileIcapHeader)[vs[1].(int)]
	}).(IcapProfileIcapHeaderOutput)
}

type IcapProfileRespmodForwardRule struct {
	// Action to be taken for ICAP server. Valid values: `forward`, `bypass`.
	Action *string `pulumi:"action"`
	// HTTP header group. The structure of `headerGroup` block is documented below.
	HeaderGroups []IcapProfileRespmodForwardRuleHeaderGroup `pulumi:"headerGroups"`
	// Address object for the host.
	Host *string `pulumi:"host"`
	// HTTP response status code. The structure of `httpRespStatusCode` block is documented below.
	HttpRespStatusCodes []IcapProfileRespmodForwardRuleHttpRespStatusCode `pulumi:"httpRespStatusCodes"`
	// Address name.
	Name *string `pulumi:"name"`
}

// IcapProfileRespmodForwardRuleInput is an input type that accepts IcapProfileRespmodForwardRuleArgs and IcapProfileRespmodForwardRuleOutput values.
// You can construct a concrete instance of `IcapProfileRespmodForwardRuleInput` via:
//
//	IcapProfileRespmodForwardRuleArgs{...}
type IcapProfileRespmodForwardRuleInput interface {
	pulumi.Input

	ToIcapProfileRespmodForwardRuleOutput() IcapProfileRespmodForwardRuleOutput
	ToIcapProfileRespmodForwardRuleOutputWithContext(context.Context) IcapProfileRespmodForwardRuleOutput
}

type IcapProfileRespmodForwardRuleArgs struct {
	// Action to be taken for ICAP server. Valid values: `forward`, `bypass`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// HTTP header group. The structure of `headerGroup` block is documented below.
	HeaderGroups IcapProfileRespmodForwardRuleHeaderGroupArrayInput `pulumi:"headerGroups"`
	// Address object for the host.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// HTTP response status code. The structure of `httpRespStatusCode` block is documented below.
	HttpRespStatusCodes IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayInput `pulumi:"httpRespStatusCodes"`
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IcapProfileRespmodForwardRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapProfileRespmodForwardRule)(nil)).Elem()
}

func (i IcapProfileRespmodForwardRuleArgs) ToIcapProfileRespmodForwardRuleOutput() IcapProfileRespmodForwardRuleOutput {
	return i.ToIcapProfileRespmodForwardRuleOutputWithContext(context.Background())
}

func (i IcapProfileRespmodForwardRuleArgs) ToIcapProfileRespmodForwardRuleOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileRespmodForwardRuleOutput)
}

// IcapProfileRespmodForwardRuleArrayInput is an input type that accepts IcapProfileRespmodForwardRuleArray and IcapProfileRespmodForwardRuleArrayOutput values.
// You can construct a concrete instance of `IcapProfileRespmodForwardRuleArrayInput` via:
//
//	IcapProfileRespmodForwardRuleArray{ IcapProfileRespmodForwardRuleArgs{...} }
type IcapProfileRespmodForwardRuleArrayInput interface {
	pulumi.Input

	ToIcapProfileRespmodForwardRuleArrayOutput() IcapProfileRespmodForwardRuleArrayOutput
	ToIcapProfileRespmodForwardRuleArrayOutputWithContext(context.Context) IcapProfileRespmodForwardRuleArrayOutput
}

type IcapProfileRespmodForwardRuleArray []IcapProfileRespmodForwardRuleInput

func (IcapProfileRespmodForwardRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapProfileRespmodForwardRule)(nil)).Elem()
}

func (i IcapProfileRespmodForwardRuleArray) ToIcapProfileRespmodForwardRuleArrayOutput() IcapProfileRespmodForwardRuleArrayOutput {
	return i.ToIcapProfileRespmodForwardRuleArrayOutputWithContext(context.Background())
}

func (i IcapProfileRespmodForwardRuleArray) ToIcapProfileRespmodForwardRuleArrayOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileRespmodForwardRuleArrayOutput)
}

type IcapProfileRespmodForwardRuleOutput struct{ *pulumi.OutputState }

func (IcapProfileRespmodForwardRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapProfileRespmodForwardRule)(nil)).Elem()
}

func (o IcapProfileRespmodForwardRuleOutput) ToIcapProfileRespmodForwardRuleOutput() IcapProfileRespmodForwardRuleOutput {
	return o
}

func (o IcapProfileRespmodForwardRuleOutput) ToIcapProfileRespmodForwardRuleOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleOutput {
	return o
}

// Action to be taken for ICAP server. Valid values: `forward`, `bypass`.
func (o IcapProfileRespmodForwardRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IcapProfileRespmodForwardRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// HTTP header group. The structure of `headerGroup` block is documented below.
func (o IcapProfileRespmodForwardRuleOutput) HeaderGroups() IcapProfileRespmodForwardRuleHeaderGroupArrayOutput {
	return o.ApplyT(func(v IcapProfileRespmodForwardRule) []IcapProfileRespmodForwardRuleHeaderGroup {
		return v.HeaderGroups
	}).(IcapProfileRespmodForwardRuleHeaderGroupArrayOutput)
}

// Address object for the host.
func (o IcapProfileRespmodForwardRuleOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IcapProfileRespmodForwardRule) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// HTTP response status code. The structure of `httpRespStatusCode` block is documented below.
func (o IcapProfileRespmodForwardRuleOutput) HttpRespStatusCodes() IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput {
	return o.ApplyT(func(v IcapProfileRespmodForwardRule) []IcapProfileRespmodForwardRuleHttpRespStatusCode {
		return v.HttpRespStatusCodes
	}).(IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput)
}

// Address name.
func (o IcapProfileRespmodForwardRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IcapProfileRespmodForwardRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IcapProfileRespmodForwardRuleArrayOutput struct{ *pulumi.OutputState }

func (IcapProfileRespmodForwardRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapProfileRespmodForwardRule)(nil)).Elem()
}

func (o IcapProfileRespmodForwardRuleArrayOutput) ToIcapProfileRespmodForwardRuleArrayOutput() IcapProfileRespmodForwardRuleArrayOutput {
	return o
}

func (o IcapProfileRespmodForwardRuleArrayOutput) ToIcapProfileRespmodForwardRuleArrayOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleArrayOutput {
	return o
}

func (o IcapProfileRespmodForwardRuleArrayOutput) Index(i pulumi.IntInput) IcapProfileRespmodForwardRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IcapProfileRespmodForwardRule {
		return vs[0].([]IcapProfileRespmodForwardRule)[vs[1].(int)]
	}).(IcapProfileRespmodForwardRuleOutput)
}

type IcapProfileRespmodForwardRuleHeaderGroup struct {
	// Enable/disable case sensitivity when matching header. Valid values: `disable`, `enable`.
	CaseSensitivity *string `pulumi:"caseSensitivity"`
	// HTTP header regular expression.
	Header *string `pulumi:"header"`
	// HTTP header.
	HeaderName *string `pulumi:"headerName"`
	// ID.
	Id *int `pulumi:"id"`
}

// IcapProfileRespmodForwardRuleHeaderGroupInput is an input type that accepts IcapProfileRespmodForwardRuleHeaderGroupArgs and IcapProfileRespmodForwardRuleHeaderGroupOutput values.
// You can construct a concrete instance of `IcapProfileRespmodForwardRuleHeaderGroupInput` via:
//
//	IcapProfileRespmodForwardRuleHeaderGroupArgs{...}
type IcapProfileRespmodForwardRuleHeaderGroupInput interface {
	pulumi.Input

	ToIcapProfileRespmodForwardRuleHeaderGroupOutput() IcapProfileRespmodForwardRuleHeaderGroupOutput
	ToIcapProfileRespmodForwardRuleHeaderGroupOutputWithContext(context.Context) IcapProfileRespmodForwardRuleHeaderGroupOutput
}

type IcapProfileRespmodForwardRuleHeaderGroupArgs struct {
	// Enable/disable case sensitivity when matching header. Valid values: `disable`, `enable`.
	CaseSensitivity pulumi.StringPtrInput `pulumi:"caseSensitivity"`
	// HTTP header regular expression.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// HTTP header.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (IcapProfileRespmodForwardRuleHeaderGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapProfileRespmodForwardRuleHeaderGroup)(nil)).Elem()
}

func (i IcapProfileRespmodForwardRuleHeaderGroupArgs) ToIcapProfileRespmodForwardRuleHeaderGroupOutput() IcapProfileRespmodForwardRuleHeaderGroupOutput {
	return i.ToIcapProfileRespmodForwardRuleHeaderGroupOutputWithContext(context.Background())
}

func (i IcapProfileRespmodForwardRuleHeaderGroupArgs) ToIcapProfileRespmodForwardRuleHeaderGroupOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleHeaderGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileRespmodForwardRuleHeaderGroupOutput)
}

// IcapProfileRespmodForwardRuleHeaderGroupArrayInput is an input type that accepts IcapProfileRespmodForwardRuleHeaderGroupArray and IcapProfileRespmodForwardRuleHeaderGroupArrayOutput values.
// You can construct a concrete instance of `IcapProfileRespmodForwardRuleHeaderGroupArrayInput` via:
//
//	IcapProfileRespmodForwardRuleHeaderGroupArray{ IcapProfileRespmodForwardRuleHeaderGroupArgs{...} }
type IcapProfileRespmodForwardRuleHeaderGroupArrayInput interface {
	pulumi.Input

	ToIcapProfileRespmodForwardRuleHeaderGroupArrayOutput() IcapProfileRespmodForwardRuleHeaderGroupArrayOutput
	ToIcapProfileRespmodForwardRuleHeaderGroupArrayOutputWithContext(context.Context) IcapProfileRespmodForwardRuleHeaderGroupArrayOutput
}

type IcapProfileRespmodForwardRuleHeaderGroupArray []IcapProfileRespmodForwardRuleHeaderGroupInput

func (IcapProfileRespmodForwardRuleHeaderGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapProfileRespmodForwardRuleHeaderGroup)(nil)).Elem()
}

func (i IcapProfileRespmodForwardRuleHeaderGroupArray) ToIcapProfileRespmodForwardRuleHeaderGroupArrayOutput() IcapProfileRespmodForwardRuleHeaderGroupArrayOutput {
	return i.ToIcapProfileRespmodForwardRuleHeaderGroupArrayOutputWithContext(context.Background())
}

func (i IcapProfileRespmodForwardRuleHeaderGroupArray) ToIcapProfileRespmodForwardRuleHeaderGroupArrayOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleHeaderGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileRespmodForwardRuleHeaderGroupArrayOutput)
}

type IcapProfileRespmodForwardRuleHeaderGroupOutput struct{ *pulumi.OutputState }

func (IcapProfileRespmodForwardRuleHeaderGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapProfileRespmodForwardRuleHeaderGroup)(nil)).Elem()
}

func (o IcapProfileRespmodForwardRuleHeaderGroupOutput) ToIcapProfileRespmodForwardRuleHeaderGroupOutput() IcapProfileRespmodForwardRuleHeaderGroupOutput {
	return o
}

func (o IcapProfileRespmodForwardRuleHeaderGroupOutput) ToIcapProfileRespmodForwardRuleHeaderGroupOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleHeaderGroupOutput {
	return o
}

// Enable/disable case sensitivity when matching header. Valid values: `disable`, `enable`.
func (o IcapProfileRespmodForwardRuleHeaderGroupOutput) CaseSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IcapProfileRespmodForwardRuleHeaderGroup) *string { return v.CaseSensitivity }).(pulumi.StringPtrOutput)
}

// HTTP header regular expression.
func (o IcapProfileRespmodForwardRuleHeaderGroupOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IcapProfileRespmodForwardRuleHeaderGroup) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// HTTP header.
func (o IcapProfileRespmodForwardRuleHeaderGroupOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IcapProfileRespmodForwardRuleHeaderGroup) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// ID.
func (o IcapProfileRespmodForwardRuleHeaderGroupOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IcapProfileRespmodForwardRuleHeaderGroup) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type IcapProfileRespmodForwardRuleHeaderGroupArrayOutput struct{ *pulumi.OutputState }

func (IcapProfileRespmodForwardRuleHeaderGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapProfileRespmodForwardRuleHeaderGroup)(nil)).Elem()
}

func (o IcapProfileRespmodForwardRuleHeaderGroupArrayOutput) ToIcapProfileRespmodForwardRuleHeaderGroupArrayOutput() IcapProfileRespmodForwardRuleHeaderGroupArrayOutput {
	return o
}

func (o IcapProfileRespmodForwardRuleHeaderGroupArrayOutput) ToIcapProfileRespmodForwardRuleHeaderGroupArrayOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleHeaderGroupArrayOutput {
	return o
}

func (o IcapProfileRespmodForwardRuleHeaderGroupArrayOutput) Index(i pulumi.IntInput) IcapProfileRespmodForwardRuleHeaderGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IcapProfileRespmodForwardRuleHeaderGroup {
		return vs[0].([]IcapProfileRespmodForwardRuleHeaderGroup)[vs[1].(int)]
	}).(IcapProfileRespmodForwardRuleHeaderGroupOutput)
}

type IcapProfileRespmodForwardRuleHttpRespStatusCode struct {
	// HTTP response status code.
	Code *int `pulumi:"code"`
}

// IcapProfileRespmodForwardRuleHttpRespStatusCodeInput is an input type that accepts IcapProfileRespmodForwardRuleHttpRespStatusCodeArgs and IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput values.
// You can construct a concrete instance of `IcapProfileRespmodForwardRuleHttpRespStatusCodeInput` via:
//
//	IcapProfileRespmodForwardRuleHttpRespStatusCodeArgs{...}
type IcapProfileRespmodForwardRuleHttpRespStatusCodeInput interface {
	pulumi.Input

	ToIcapProfileRespmodForwardRuleHttpRespStatusCodeOutput() IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput
	ToIcapProfileRespmodForwardRuleHttpRespStatusCodeOutputWithContext(context.Context) IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput
}

type IcapProfileRespmodForwardRuleHttpRespStatusCodeArgs struct {
	// HTTP response status code.
	Code pulumi.IntPtrInput `pulumi:"code"`
}

func (IcapProfileRespmodForwardRuleHttpRespStatusCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapProfileRespmodForwardRuleHttpRespStatusCode)(nil)).Elem()
}

func (i IcapProfileRespmodForwardRuleHttpRespStatusCodeArgs) ToIcapProfileRespmodForwardRuleHttpRespStatusCodeOutput() IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput {
	return i.ToIcapProfileRespmodForwardRuleHttpRespStatusCodeOutputWithContext(context.Background())
}

func (i IcapProfileRespmodForwardRuleHttpRespStatusCodeArgs) ToIcapProfileRespmodForwardRuleHttpRespStatusCodeOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput)
}

// IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayInput is an input type that accepts IcapProfileRespmodForwardRuleHttpRespStatusCodeArray and IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput values.
// You can construct a concrete instance of `IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayInput` via:
//
//	IcapProfileRespmodForwardRuleHttpRespStatusCodeArray{ IcapProfileRespmodForwardRuleHttpRespStatusCodeArgs{...} }
type IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayInput interface {
	pulumi.Input

	ToIcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput() IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput
	ToIcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutputWithContext(context.Context) IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput
}

type IcapProfileRespmodForwardRuleHttpRespStatusCodeArray []IcapProfileRespmodForwardRuleHttpRespStatusCodeInput

func (IcapProfileRespmodForwardRuleHttpRespStatusCodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapProfileRespmodForwardRuleHttpRespStatusCode)(nil)).Elem()
}

func (i IcapProfileRespmodForwardRuleHttpRespStatusCodeArray) ToIcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput() IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput {
	return i.ToIcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutputWithContext(context.Background())
}

func (i IcapProfileRespmodForwardRuleHttpRespStatusCodeArray) ToIcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput)
}

type IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput struct{ *pulumi.OutputState }

func (IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapProfileRespmodForwardRuleHttpRespStatusCode)(nil)).Elem()
}

func (o IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput) ToIcapProfileRespmodForwardRuleHttpRespStatusCodeOutput() IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput {
	return o
}

func (o IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput) ToIcapProfileRespmodForwardRuleHttpRespStatusCodeOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput {
	return o
}

// HTTP response status code.
func (o IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IcapProfileRespmodForwardRuleHttpRespStatusCode) *int { return v.Code }).(pulumi.IntPtrOutput)
}

type IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput struct{ *pulumi.OutputState }

func (IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapProfileRespmodForwardRuleHttpRespStatusCode)(nil)).Elem()
}

func (o IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput) ToIcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput() IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput {
	return o
}

func (o IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput) ToIcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutputWithContext(ctx context.Context) IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput {
	return o
}

func (o IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput) Index(i pulumi.IntInput) IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IcapProfileRespmodForwardRuleHttpRespStatusCode {
		return vs[0].([]IcapProfileRespmodForwardRuleHttpRespStatusCode)[vs[1].(int)]
	}).(IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput)
}

type IcapServergroupServerList struct {
	// ICAP server name.
	Name *string `pulumi:"name"`
	// Optionally assign a weight of the ICAP server for weighted load balancing (1 - 100, default = 10)
	Weight *int `pulumi:"weight"`
}

// IcapServergroupServerListInput is an input type that accepts IcapServergroupServerListArgs and IcapServergroupServerListOutput values.
// You can construct a concrete instance of `IcapServergroupServerListInput` via:
//
//	IcapServergroupServerListArgs{...}
type IcapServergroupServerListInput interface {
	pulumi.Input

	ToIcapServergroupServerListOutput() IcapServergroupServerListOutput
	ToIcapServergroupServerListOutputWithContext(context.Context) IcapServergroupServerListOutput
}

type IcapServergroupServerListArgs struct {
	// ICAP server name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optionally assign a weight of the ICAP server for weighted load balancing (1 - 100, default = 10)
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (IcapServergroupServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapServergroupServerList)(nil)).Elem()
}

func (i IcapServergroupServerListArgs) ToIcapServergroupServerListOutput() IcapServergroupServerListOutput {
	return i.ToIcapServergroupServerListOutputWithContext(context.Background())
}

func (i IcapServergroupServerListArgs) ToIcapServergroupServerListOutputWithContext(ctx context.Context) IcapServergroupServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapServergroupServerListOutput)
}

// IcapServergroupServerListArrayInput is an input type that accepts IcapServergroupServerListArray and IcapServergroupServerListArrayOutput values.
// You can construct a concrete instance of `IcapServergroupServerListArrayInput` via:
//
//	IcapServergroupServerListArray{ IcapServergroupServerListArgs{...} }
type IcapServergroupServerListArrayInput interface {
	pulumi.Input

	ToIcapServergroupServerListArrayOutput() IcapServergroupServerListArrayOutput
	ToIcapServergroupServerListArrayOutputWithContext(context.Context) IcapServergroupServerListArrayOutput
}

type IcapServergroupServerListArray []IcapServergroupServerListInput

func (IcapServergroupServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapServergroupServerList)(nil)).Elem()
}

func (i IcapServergroupServerListArray) ToIcapServergroupServerListArrayOutput() IcapServergroupServerListArrayOutput {
	return i.ToIcapServergroupServerListArrayOutputWithContext(context.Background())
}

func (i IcapServergroupServerListArray) ToIcapServergroupServerListArrayOutputWithContext(ctx context.Context) IcapServergroupServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapServergroupServerListArrayOutput)
}

type IcapServergroupServerListOutput struct{ *pulumi.OutputState }

func (IcapServergroupServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapServergroupServerList)(nil)).Elem()
}

func (o IcapServergroupServerListOutput) ToIcapServergroupServerListOutput() IcapServergroupServerListOutput {
	return o
}

func (o IcapServergroupServerListOutput) ToIcapServergroupServerListOutputWithContext(ctx context.Context) IcapServergroupServerListOutput {
	return o
}

// ICAP server name.
func (o IcapServergroupServerListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IcapServergroupServerList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optionally assign a weight of the ICAP server for weighted load balancing (1 - 100, default = 10)
func (o IcapServergroupServerListOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IcapServergroupServerList) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type IcapServergroupServerListArrayOutput struct{ *pulumi.OutputState }

func (IcapServergroupServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapServergroupServerList)(nil)).Elem()
}

func (o IcapServergroupServerListArrayOutput) ToIcapServergroupServerListArrayOutput() IcapServergroupServerListArrayOutput {
	return o
}

func (o IcapServergroupServerListArrayOutput) ToIcapServergroupServerListArrayOutputWithContext(ctx context.Context) IcapServergroupServerListArrayOutput {
	return o
}

func (o IcapServergroupServerListArrayOutput) Index(i pulumi.IntInput) IcapServergroupServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IcapServergroupServerList {
		return vs[0].([]IcapServergroupServerList)[vs[1].(int)]
	}).(IcapServergroupServerListOutput)
}

type IpsDecoderParameter struct {
	// Parameter name.
	Name *string `pulumi:"name"`
	// Parameter value.
	Value *string `pulumi:"value"`
}

// IpsDecoderParameterInput is an input type that accepts IpsDecoderParameterArgs and IpsDecoderParameterOutput values.
// You can construct a concrete instance of `IpsDecoderParameterInput` via:
//
//	IpsDecoderParameterArgs{...}
type IpsDecoderParameterInput interface {
	pulumi.Input

	ToIpsDecoderParameterOutput() IpsDecoderParameterOutput
	ToIpsDecoderParameterOutputWithContext(context.Context) IpsDecoderParameterOutput
}

type IpsDecoderParameterArgs struct {
	// Parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameter value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IpsDecoderParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsDecoderParameter)(nil)).Elem()
}

func (i IpsDecoderParameterArgs) ToIpsDecoderParameterOutput() IpsDecoderParameterOutput {
	return i.ToIpsDecoderParameterOutputWithContext(context.Background())
}

func (i IpsDecoderParameterArgs) ToIpsDecoderParameterOutputWithContext(ctx context.Context) IpsDecoderParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsDecoderParameterOutput)
}

// IpsDecoderParameterArrayInput is an input type that accepts IpsDecoderParameterArray and IpsDecoderParameterArrayOutput values.
// You can construct a concrete instance of `IpsDecoderParameterArrayInput` via:
//
//	IpsDecoderParameterArray{ IpsDecoderParameterArgs{...} }
type IpsDecoderParameterArrayInput interface {
	pulumi.Input

	ToIpsDecoderParameterArrayOutput() IpsDecoderParameterArrayOutput
	ToIpsDecoderParameterArrayOutputWithContext(context.Context) IpsDecoderParameterArrayOutput
}

type IpsDecoderParameterArray []IpsDecoderParameterInput

func (IpsDecoderParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsDecoderParameter)(nil)).Elem()
}

func (i IpsDecoderParameterArray) ToIpsDecoderParameterArrayOutput() IpsDecoderParameterArrayOutput {
	return i.ToIpsDecoderParameterArrayOutputWithContext(context.Background())
}

func (i IpsDecoderParameterArray) ToIpsDecoderParameterArrayOutputWithContext(ctx context.Context) IpsDecoderParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsDecoderParameterArrayOutput)
}

type IpsDecoderParameterOutput struct{ *pulumi.OutputState }

func (IpsDecoderParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsDecoderParameter)(nil)).Elem()
}

func (o IpsDecoderParameterOutput) ToIpsDecoderParameterOutput() IpsDecoderParameterOutput {
	return o
}

func (o IpsDecoderParameterOutput) ToIpsDecoderParameterOutputWithContext(ctx context.Context) IpsDecoderParameterOutput {
	return o
}

// Parameter name.
func (o IpsDecoderParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsDecoderParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameter value.
func (o IpsDecoderParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsDecoderParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IpsDecoderParameterArrayOutput struct{ *pulumi.OutputState }

func (IpsDecoderParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsDecoderParameter)(nil)).Elem()
}

func (o IpsDecoderParameterArrayOutput) ToIpsDecoderParameterArrayOutput() IpsDecoderParameterArrayOutput {
	return o
}

func (o IpsDecoderParameterArrayOutput) ToIpsDecoderParameterArrayOutputWithContext(ctx context.Context) IpsDecoderParameterArrayOutput {
	return o
}

func (o IpsDecoderParameterArrayOutput) Index(i pulumi.IntInput) IpsDecoderParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsDecoderParameter {
		return vs[0].([]IpsDecoderParameter)[vs[1].(int)]
	}).(IpsDecoderParameterOutput)
}

type IpsGlobalTlsActiveProbe struct {
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address used for TLS active probe.
	SourceIp *string `pulumi:"sourceIp"`
	// Source IPv6 address used for TLS active probe.
	SourceIp6 *string `pulumi:"sourceIp6"`
	// Virtual domain name for TLS active probe.
	Vdom *string `pulumi:"vdom"`
}

// IpsGlobalTlsActiveProbeInput is an input type that accepts IpsGlobalTlsActiveProbeArgs and IpsGlobalTlsActiveProbeOutput values.
// You can construct a concrete instance of `IpsGlobalTlsActiveProbeInput` via:
//
//	IpsGlobalTlsActiveProbeArgs{...}
type IpsGlobalTlsActiveProbeInput interface {
	pulumi.Input

	ToIpsGlobalTlsActiveProbeOutput() IpsGlobalTlsActiveProbeOutput
	ToIpsGlobalTlsActiveProbeOutputWithContext(context.Context) IpsGlobalTlsActiveProbeOutput
}

type IpsGlobalTlsActiveProbeArgs struct {
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput `pulumi:"interfaceSelectMethod"`
	// Source IP address used for TLS active probe.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
	// Source IPv6 address used for TLS active probe.
	SourceIp6 pulumi.StringPtrInput `pulumi:"sourceIp6"`
	// Virtual domain name for TLS active probe.
	Vdom pulumi.StringPtrInput `pulumi:"vdom"`
}

func (IpsGlobalTlsActiveProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsGlobalTlsActiveProbe)(nil)).Elem()
}

func (i IpsGlobalTlsActiveProbeArgs) ToIpsGlobalTlsActiveProbeOutput() IpsGlobalTlsActiveProbeOutput {
	return i.ToIpsGlobalTlsActiveProbeOutputWithContext(context.Background())
}

func (i IpsGlobalTlsActiveProbeArgs) ToIpsGlobalTlsActiveProbeOutputWithContext(ctx context.Context) IpsGlobalTlsActiveProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsGlobalTlsActiveProbeOutput)
}

func (i IpsGlobalTlsActiveProbeArgs) ToIpsGlobalTlsActiveProbePtrOutput() IpsGlobalTlsActiveProbePtrOutput {
	return i.ToIpsGlobalTlsActiveProbePtrOutputWithContext(context.Background())
}

func (i IpsGlobalTlsActiveProbeArgs) ToIpsGlobalTlsActiveProbePtrOutputWithContext(ctx context.Context) IpsGlobalTlsActiveProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsGlobalTlsActiveProbeOutput).ToIpsGlobalTlsActiveProbePtrOutputWithContext(ctx)
}

// IpsGlobalTlsActiveProbePtrInput is an input type that accepts IpsGlobalTlsActiveProbeArgs, IpsGlobalTlsActiveProbePtr and IpsGlobalTlsActiveProbePtrOutput values.
// You can construct a concrete instance of `IpsGlobalTlsActiveProbePtrInput` via:
//
//	        IpsGlobalTlsActiveProbeArgs{...}
//
//	or:
//
//	        nil
type IpsGlobalTlsActiveProbePtrInput interface {
	pulumi.Input

	ToIpsGlobalTlsActiveProbePtrOutput() IpsGlobalTlsActiveProbePtrOutput
	ToIpsGlobalTlsActiveProbePtrOutputWithContext(context.Context) IpsGlobalTlsActiveProbePtrOutput
}

type ipsGlobalTlsActiveProbePtrType IpsGlobalTlsActiveProbeArgs

func IpsGlobalTlsActiveProbePtr(v *IpsGlobalTlsActiveProbeArgs) IpsGlobalTlsActiveProbePtrInput {
	return (*ipsGlobalTlsActiveProbePtrType)(v)
}

func (*ipsGlobalTlsActiveProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IpsGlobalTlsActiveProbe)(nil)).Elem()
}

func (i *ipsGlobalTlsActiveProbePtrType) ToIpsGlobalTlsActiveProbePtrOutput() IpsGlobalTlsActiveProbePtrOutput {
	return i.ToIpsGlobalTlsActiveProbePtrOutputWithContext(context.Background())
}

func (i *ipsGlobalTlsActiveProbePtrType) ToIpsGlobalTlsActiveProbePtrOutputWithContext(ctx context.Context) IpsGlobalTlsActiveProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsGlobalTlsActiveProbePtrOutput)
}

type IpsGlobalTlsActiveProbeOutput struct{ *pulumi.OutputState }

func (IpsGlobalTlsActiveProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsGlobalTlsActiveProbe)(nil)).Elem()
}

func (o IpsGlobalTlsActiveProbeOutput) ToIpsGlobalTlsActiveProbeOutput() IpsGlobalTlsActiveProbeOutput {
	return o
}

func (o IpsGlobalTlsActiveProbeOutput) ToIpsGlobalTlsActiveProbeOutputWithContext(ctx context.Context) IpsGlobalTlsActiveProbeOutput {
	return o
}

func (o IpsGlobalTlsActiveProbeOutput) ToIpsGlobalTlsActiveProbePtrOutput() IpsGlobalTlsActiveProbePtrOutput {
	return o.ToIpsGlobalTlsActiveProbePtrOutputWithContext(context.Background())
}

func (o IpsGlobalTlsActiveProbeOutput) ToIpsGlobalTlsActiveProbePtrOutputWithContext(ctx context.Context) IpsGlobalTlsActiveProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpsGlobalTlsActiveProbe) *IpsGlobalTlsActiveProbe {
		return &v
	}).(IpsGlobalTlsActiveProbePtrOutput)
}

// Specify outgoing interface to reach server.
func (o IpsGlobalTlsActiveProbeOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsGlobalTlsActiveProbe) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o IpsGlobalTlsActiveProbeOutput) InterfaceSelectMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsGlobalTlsActiveProbe) *string { return v.InterfaceSelectMethod }).(pulumi.StringPtrOutput)
}

// Source IP address used for TLS active probe.
func (o IpsGlobalTlsActiveProbeOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsGlobalTlsActiveProbe) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

// Source IPv6 address used for TLS active probe.
func (o IpsGlobalTlsActiveProbeOutput) SourceIp6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsGlobalTlsActiveProbe) *string { return v.SourceIp6 }).(pulumi.StringPtrOutput)
}

// Virtual domain name for TLS active probe.
func (o IpsGlobalTlsActiveProbeOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsGlobalTlsActiveProbe) *string { return v.Vdom }).(pulumi.StringPtrOutput)
}

type IpsGlobalTlsActiveProbePtrOutput struct{ *pulumi.OutputState }

func (IpsGlobalTlsActiveProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpsGlobalTlsActiveProbe)(nil)).Elem()
}

func (o IpsGlobalTlsActiveProbePtrOutput) ToIpsGlobalTlsActiveProbePtrOutput() IpsGlobalTlsActiveProbePtrOutput {
	return o
}

func (o IpsGlobalTlsActiveProbePtrOutput) ToIpsGlobalTlsActiveProbePtrOutputWithContext(ctx context.Context) IpsGlobalTlsActiveProbePtrOutput {
	return o
}

func (o IpsGlobalTlsActiveProbePtrOutput) Elem() IpsGlobalTlsActiveProbeOutput {
	return o.ApplyT(func(v *IpsGlobalTlsActiveProbe) IpsGlobalTlsActiveProbe {
		if v != nil {
			return *v
		}
		var ret IpsGlobalTlsActiveProbe
		return ret
	}).(IpsGlobalTlsActiveProbeOutput)
}

// Specify outgoing interface to reach server.
func (o IpsGlobalTlsActiveProbePtrOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsGlobalTlsActiveProbe) *string {
		if v == nil {
			return nil
		}
		return v.Interface
	}).(pulumi.StringPtrOutput)
}

// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
func (o IpsGlobalTlsActiveProbePtrOutput) InterfaceSelectMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsGlobalTlsActiveProbe) *string {
		if v == nil {
			return nil
		}
		return v.InterfaceSelectMethod
	}).(pulumi.StringPtrOutput)
}

// Source IP address used for TLS active probe.
func (o IpsGlobalTlsActiveProbePtrOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsGlobalTlsActiveProbe) *string {
		if v == nil {
			return nil
		}
		return v.SourceIp
	}).(pulumi.StringPtrOutput)
}

// Source IPv6 address used for TLS active probe.
func (o IpsGlobalTlsActiveProbePtrOutput) SourceIp6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsGlobalTlsActiveProbe) *string {
		if v == nil {
			return nil
		}
		return v.SourceIp6
	}).(pulumi.StringPtrOutput)
}

// Virtual domain name for TLS active probe.
func (o IpsGlobalTlsActiveProbePtrOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsGlobalTlsActiveProbe) *string {
		if v == nil {
			return nil
		}
		return v.Vdom
	}).(pulumi.StringPtrOutput)
}

type IpsRuleMetadata struct {
	// ID.
	Id *int `pulumi:"id"`
	// Meta ID.
	Metaid *int `pulumi:"metaid"`
	// Value ID.
	Valueid *int `pulumi:"valueid"`
}

// IpsRuleMetadataInput is an input type that accepts IpsRuleMetadataArgs and IpsRuleMetadataOutput values.
// You can construct a concrete instance of `IpsRuleMetadataInput` via:
//
//	IpsRuleMetadataArgs{...}
type IpsRuleMetadataInput interface {
	pulumi.Input

	ToIpsRuleMetadataOutput() IpsRuleMetadataOutput
	ToIpsRuleMetadataOutputWithContext(context.Context) IpsRuleMetadataOutput
}

type IpsRuleMetadataArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Meta ID.
	Metaid pulumi.IntPtrInput `pulumi:"metaid"`
	// Value ID.
	Valueid pulumi.IntPtrInput `pulumi:"valueid"`
}

func (IpsRuleMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsRuleMetadata)(nil)).Elem()
}

func (i IpsRuleMetadataArgs) ToIpsRuleMetadataOutput() IpsRuleMetadataOutput {
	return i.ToIpsRuleMetadataOutputWithContext(context.Background())
}

func (i IpsRuleMetadataArgs) ToIpsRuleMetadataOutputWithContext(ctx context.Context) IpsRuleMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsRuleMetadataOutput)
}

// IpsRuleMetadataArrayInput is an input type that accepts IpsRuleMetadataArray and IpsRuleMetadataArrayOutput values.
// You can construct a concrete instance of `IpsRuleMetadataArrayInput` via:
//
//	IpsRuleMetadataArray{ IpsRuleMetadataArgs{...} }
type IpsRuleMetadataArrayInput interface {
	pulumi.Input

	ToIpsRuleMetadataArrayOutput() IpsRuleMetadataArrayOutput
	ToIpsRuleMetadataArrayOutputWithContext(context.Context) IpsRuleMetadataArrayOutput
}

type IpsRuleMetadataArray []IpsRuleMetadataInput

func (IpsRuleMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsRuleMetadata)(nil)).Elem()
}

func (i IpsRuleMetadataArray) ToIpsRuleMetadataArrayOutput() IpsRuleMetadataArrayOutput {
	return i.ToIpsRuleMetadataArrayOutputWithContext(context.Background())
}

func (i IpsRuleMetadataArray) ToIpsRuleMetadataArrayOutputWithContext(ctx context.Context) IpsRuleMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsRuleMetadataArrayOutput)
}

type IpsRuleMetadataOutput struct{ *pulumi.OutputState }

func (IpsRuleMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsRuleMetadata)(nil)).Elem()
}

func (o IpsRuleMetadataOutput) ToIpsRuleMetadataOutput() IpsRuleMetadataOutput {
	return o
}

func (o IpsRuleMetadataOutput) ToIpsRuleMetadataOutputWithContext(ctx context.Context) IpsRuleMetadataOutput {
	return o
}

// ID.
func (o IpsRuleMetadataOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsRuleMetadata) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Meta ID.
func (o IpsRuleMetadataOutput) Metaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsRuleMetadata) *int { return v.Metaid }).(pulumi.IntPtrOutput)
}

// Value ID.
func (o IpsRuleMetadataOutput) Valueid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsRuleMetadata) *int { return v.Valueid }).(pulumi.IntPtrOutput)
}

type IpsRuleMetadataArrayOutput struct{ *pulumi.OutputState }

func (IpsRuleMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsRuleMetadata)(nil)).Elem()
}

func (o IpsRuleMetadataArrayOutput) ToIpsRuleMetadataArrayOutput() IpsRuleMetadataArrayOutput {
	return o
}

func (o IpsRuleMetadataArrayOutput) ToIpsRuleMetadataArrayOutputWithContext(ctx context.Context) IpsRuleMetadataArrayOutput {
	return o
}

func (o IpsRuleMetadataArrayOutput) Index(i pulumi.IntInput) IpsRuleMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsRuleMetadata {
		return vs[0].([]IpsRuleMetadata)[vs[1].(int)]
	}).(IpsRuleMetadataOutput)
}

type IpsSensorEntry struct {
	// Action taken with traffic in which signatures are detected. Valid values: `pass`, `block`, `reset`, `default`.
	Action *string `pulumi:"action"`
	// Applications to be protected. set application ? lists available applications. all includes all applications. other includes all unlisted applications.
	Application *string `pulumi:"application"`
	// List of CVE IDs of the signatures to add to the sensor The structure of `cve` block is documented below.
	Cves []IpsSensorEntryCfe `pulumi:"cves"`
	// Signature default action filter. Valid values: `all`, `pass`, `block`.
	DefaultAction *string `pulumi:"defaultAction"`
	// Signature default status filter. Valid values: `all`, `enable`, `disable`.
	DefaultStatus *string `pulumi:"defaultStatus"`
	// Traffic from selected source or destination IP addresses is exempt from this signature. The structure of `exemptIp` block is documented below.
	ExemptIps []IpsSensorEntryExemptIp `pulumi:"exemptIps"`
	// Rule ID in IPS database (0 - 4294967295).
	Id *int `pulumi:"id"`
	// Filter by signature last modified date. Formats: before <date>, after <date>, between <start-date> <end-date>.
	LastModified *string `pulumi:"lastModified"`
	// Protect client or server traffic.
	Location *string `pulumi:"location"`
	// Enable/disable logging of signatures included in filter. Valid values: `disable`, `enable`.
	Log *string `pulumi:"log"`
	// Enable/disable logging of attack context: URL buffer, header buffer, body buffer, packet buffer. Valid values: `disable`, `enable`.
	LogAttackContext *string `pulumi:"logAttackContext"`
	// Enable/disable packet logging. Enable to save the packet that triggers the filter. You can download the packets in pcap format for diagnostic use. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Operating systems to be protected.  all includes all operating systems. other includes all unlisted operating systems.
	Os *string `pulumi:"os"`
	// Protocols to be examined. set protocol ? lists available protocols. all includes all protocols. other includes all unlisted protocols.
	Protocol *string `pulumi:"protocol"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine *string `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry *string `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog *string `pulumi:"quarantineLog"`
	// Count of the rate.
	RateCount *int `pulumi:"rateCount"`
	// Duration (sec) of the rate.
	RateDuration *int `pulumi:"rateDuration"`
	// Rate limit mode. Valid values: `periodical`, `continuous`.
	RateMode *string `pulumi:"rateMode"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`, `dhcp-client-mac`, `dns-domain`.
	RateTrack *string `pulumi:"rateTrack"`
	// Identifies the predefined or custom IPS signatures to add to the sensor. The structure of `rule` block is documented below.
	Rules []IpsSensorEntryRule `pulumi:"rules"`
	// Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity.
	Severity *string `pulumi:"severity"`
	// Status of the signatures included in filter. default enables the filter and only use filters with default status of enable. Filters with default status of disable will not be used. Valid values: `disable`, `enable`, `default`.
	Status *string `pulumi:"status"`
	// List of signature vulnerability types to filter by. The structure of `vulnType` block is documented below.
	VulnTypes []IpsSensorEntryVulnType `pulumi:"vulnTypes"`
}

// IpsSensorEntryInput is an input type that accepts IpsSensorEntryArgs and IpsSensorEntryOutput values.
// You can construct a concrete instance of `IpsSensorEntryInput` via:
//
//	IpsSensorEntryArgs{...}
type IpsSensorEntryInput interface {
	pulumi.Input

	ToIpsSensorEntryOutput() IpsSensorEntryOutput
	ToIpsSensorEntryOutputWithContext(context.Context) IpsSensorEntryOutput
}

type IpsSensorEntryArgs struct {
	// Action taken with traffic in which signatures are detected. Valid values: `pass`, `block`, `reset`, `default`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Applications to be protected. set application ? lists available applications. all includes all applications. other includes all unlisted applications.
	Application pulumi.StringPtrInput `pulumi:"application"`
	// List of CVE IDs of the signatures to add to the sensor The structure of `cve` block is documented below.
	Cves IpsSensorEntryCfeArrayInput `pulumi:"cves"`
	// Signature default action filter. Valid values: `all`, `pass`, `block`.
	DefaultAction pulumi.StringPtrInput `pulumi:"defaultAction"`
	// Signature default status filter. Valid values: `all`, `enable`, `disable`.
	DefaultStatus pulumi.StringPtrInput `pulumi:"defaultStatus"`
	// Traffic from selected source or destination IP addresses is exempt from this signature. The structure of `exemptIp` block is documented below.
	ExemptIps IpsSensorEntryExemptIpArrayInput `pulumi:"exemptIps"`
	// Rule ID in IPS database (0 - 4294967295).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Filter by signature last modified date. Formats: before <date>, after <date>, between <start-date> <end-date>.
	LastModified pulumi.StringPtrInput `pulumi:"lastModified"`
	// Protect client or server traffic.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Enable/disable logging of signatures included in filter. Valid values: `disable`, `enable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable logging of attack context: URL buffer, header buffer, body buffer, packet buffer. Valid values: `disable`, `enable`.
	LogAttackContext pulumi.StringPtrInput `pulumi:"logAttackContext"`
	// Enable/disable packet logging. Enable to save the packet that triggers the filter. You can download the packets in pcap format for diagnostic use. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput `pulumi:"logPacket"`
	// Operating systems to be protected.  all includes all operating systems. other includes all unlisted operating systems.
	Os pulumi.StringPtrInput `pulumi:"os"`
	// Protocols to be examined. set protocol ? lists available protocols. all includes all protocols. other includes all unlisted protocols.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Quarantine method. Valid values: `none`, `attacker`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
	QuarantineExpiry pulumi.StringPtrInput `pulumi:"quarantineExpiry"`
	// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
	QuarantineLog pulumi.StringPtrInput `pulumi:"quarantineLog"`
	// Count of the rate.
	RateCount pulumi.IntPtrInput `pulumi:"rateCount"`
	// Duration (sec) of the rate.
	RateDuration pulumi.IntPtrInput `pulumi:"rateDuration"`
	// Rate limit mode. Valid values: `periodical`, `continuous`.
	RateMode pulumi.StringPtrInput `pulumi:"rateMode"`
	// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`, `dhcp-client-mac`, `dns-domain`.
	RateTrack pulumi.StringPtrInput `pulumi:"rateTrack"`
	// Identifies the predefined or custom IPS signatures to add to the sensor. The structure of `rule` block is documented below.
	Rules IpsSensorEntryRuleArrayInput `pulumi:"rules"`
	// Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status of the signatures included in filter. default enables the filter and only use filters with default status of enable. Filters with default status of disable will not be used. Valid values: `disable`, `enable`, `default`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// List of signature vulnerability types to filter by. The structure of `vulnType` block is documented below.
	VulnTypes IpsSensorEntryVulnTypeArrayInput `pulumi:"vulnTypes"`
}

func (IpsSensorEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorEntry)(nil)).Elem()
}

func (i IpsSensorEntryArgs) ToIpsSensorEntryOutput() IpsSensorEntryOutput {
	return i.ToIpsSensorEntryOutputWithContext(context.Background())
}

func (i IpsSensorEntryArgs) ToIpsSensorEntryOutputWithContext(ctx context.Context) IpsSensorEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorEntryOutput)
}

// IpsSensorEntryArrayInput is an input type that accepts IpsSensorEntryArray and IpsSensorEntryArrayOutput values.
// You can construct a concrete instance of `IpsSensorEntryArrayInput` via:
//
//	IpsSensorEntryArray{ IpsSensorEntryArgs{...} }
type IpsSensorEntryArrayInput interface {
	pulumi.Input

	ToIpsSensorEntryArrayOutput() IpsSensorEntryArrayOutput
	ToIpsSensorEntryArrayOutputWithContext(context.Context) IpsSensorEntryArrayOutput
}

type IpsSensorEntryArray []IpsSensorEntryInput

func (IpsSensorEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorEntry)(nil)).Elem()
}

func (i IpsSensorEntryArray) ToIpsSensorEntryArrayOutput() IpsSensorEntryArrayOutput {
	return i.ToIpsSensorEntryArrayOutputWithContext(context.Background())
}

func (i IpsSensorEntryArray) ToIpsSensorEntryArrayOutputWithContext(ctx context.Context) IpsSensorEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorEntryArrayOutput)
}

type IpsSensorEntryOutput struct{ *pulumi.OutputState }

func (IpsSensorEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorEntry)(nil)).Elem()
}

func (o IpsSensorEntryOutput) ToIpsSensorEntryOutput() IpsSensorEntryOutput {
	return o
}

func (o IpsSensorEntryOutput) ToIpsSensorEntryOutputWithContext(ctx context.Context) IpsSensorEntryOutput {
	return o
}

// Action taken with traffic in which signatures are detected. Valid values: `pass`, `block`, `reset`, `default`.
func (o IpsSensorEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Applications to be protected. set application ? lists available applications. all includes all applications. other includes all unlisted applications.
func (o IpsSensorEntryOutput) Application() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.Application }).(pulumi.StringPtrOutput)
}

// List of CVE IDs of the signatures to add to the sensor The structure of `cve` block is documented below.
func (o IpsSensorEntryOutput) Cves() IpsSensorEntryCfeArrayOutput {
	return o.ApplyT(func(v IpsSensorEntry) []IpsSensorEntryCfe { return v.Cves }).(IpsSensorEntryCfeArrayOutput)
}

// Signature default action filter. Valid values: `all`, `pass`, `block`.
func (o IpsSensorEntryOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// Signature default status filter. Valid values: `all`, `enable`, `disable`.
func (o IpsSensorEntryOutput) DefaultStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.DefaultStatus }).(pulumi.StringPtrOutput)
}

// Traffic from selected source or destination IP addresses is exempt from this signature. The structure of `exemptIp` block is documented below.
func (o IpsSensorEntryOutput) ExemptIps() IpsSensorEntryExemptIpArrayOutput {
	return o.ApplyT(func(v IpsSensorEntry) []IpsSensorEntryExemptIp { return v.ExemptIps }).(IpsSensorEntryExemptIpArrayOutput)
}

// Rule ID in IPS database (0 - 4294967295).
func (o IpsSensorEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Filter by signature last modified date. Formats: before <date>, after <date>, between <start-date> <end-date>.
func (o IpsSensorEntryOutput) LastModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.LastModified }).(pulumi.StringPtrOutput)
}

// Protect client or server traffic.
func (o IpsSensorEntryOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of signatures included in filter. Valid values: `disable`, `enable`.
func (o IpsSensorEntryOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of attack context: URL buffer, header buffer, body buffer, packet buffer. Valid values: `disable`, `enable`.
func (o IpsSensorEntryOutput) LogAttackContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.LogAttackContext }).(pulumi.StringPtrOutput)
}

// Enable/disable packet logging. Enable to save the packet that triggers the filter. You can download the packets in pcap format for diagnostic use. Valid values: `disable`, `enable`.
func (o IpsSensorEntryOutput) LogPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.LogPacket }).(pulumi.StringPtrOutput)
}

// Operating systems to be protected.  all includes all operating systems. other includes all unlisted operating systems.
func (o IpsSensorEntryOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.Os }).(pulumi.StringPtrOutput)
}

// Protocols to be examined. set protocol ? lists available protocols. all includes all protocols. other includes all unlisted protocols.
func (o IpsSensorEntryOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Quarantine method. Valid values: `none`, `attacker`.
func (o IpsSensorEntryOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
func (o IpsSensorEntryOutput) QuarantineExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.QuarantineExpiry }).(pulumi.StringPtrOutput)
}

// Enable/disable quarantine logging. Valid values: `disable`, `enable`.
func (o IpsSensorEntryOutput) QuarantineLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.QuarantineLog }).(pulumi.StringPtrOutput)
}

// Count of the rate.
func (o IpsSensorEntryOutput) RateCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *int { return v.RateCount }).(pulumi.IntPtrOutput)
}

// Duration (sec) of the rate.
func (o IpsSensorEntryOutput) RateDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *int { return v.RateDuration }).(pulumi.IntPtrOutput)
}

// Rate limit mode. Valid values: `periodical`, `continuous`.
func (o IpsSensorEntryOutput) RateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.RateMode }).(pulumi.StringPtrOutput)
}

// Track the packet protocol field. Valid values: `none`, `src-ip`, `dest-ip`, `dhcp-client-mac`, `dns-domain`.
func (o IpsSensorEntryOutput) RateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.RateTrack }).(pulumi.StringPtrOutput)
}

// Identifies the predefined or custom IPS signatures to add to the sensor. The structure of `rule` block is documented below.
func (o IpsSensorEntryOutput) Rules() IpsSensorEntryRuleArrayOutput {
	return o.ApplyT(func(v IpsSensorEntry) []IpsSensorEntryRule { return v.Rules }).(IpsSensorEntryRuleArrayOutput)
}

// Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity.
func (o IpsSensorEntryOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status of the signatures included in filter. default enables the filter and only use filters with default status of enable. Filters with default status of disable will not be used. Valid values: `disable`, `enable`, `default`.
func (o IpsSensorEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// List of signature vulnerability types to filter by. The structure of `vulnType` block is documented below.
func (o IpsSensorEntryOutput) VulnTypes() IpsSensorEntryVulnTypeArrayOutput {
	return o.ApplyT(func(v IpsSensorEntry) []IpsSensorEntryVulnType { return v.VulnTypes }).(IpsSensorEntryVulnTypeArrayOutput)
}

type IpsSensorEntryArrayOutput struct{ *pulumi.OutputState }

func (IpsSensorEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorEntry)(nil)).Elem()
}

func (o IpsSensorEntryArrayOutput) ToIpsSensorEntryArrayOutput() IpsSensorEntryArrayOutput {
	return o
}

func (o IpsSensorEntryArrayOutput) ToIpsSensorEntryArrayOutputWithContext(ctx context.Context) IpsSensorEntryArrayOutput {
	return o
}

func (o IpsSensorEntryArrayOutput) Index(i pulumi.IntInput) IpsSensorEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsSensorEntry {
		return vs[0].([]IpsSensorEntry)[vs[1].(int)]
	}).(IpsSensorEntryOutput)
}

type IpsSensorEntryCfe struct {
	// CVE IDs or CVE wildcards.
	CveEntry *string `pulumi:"cveEntry"`
}

// IpsSensorEntryCfeInput is an input type that accepts IpsSensorEntryCfeArgs and IpsSensorEntryCfeOutput values.
// You can construct a concrete instance of `IpsSensorEntryCfeInput` via:
//
//	IpsSensorEntryCfeArgs{...}
type IpsSensorEntryCfeInput interface {
	pulumi.Input

	ToIpsSensorEntryCfeOutput() IpsSensorEntryCfeOutput
	ToIpsSensorEntryCfeOutputWithContext(context.Context) IpsSensorEntryCfeOutput
}

type IpsSensorEntryCfeArgs struct {
	// CVE IDs or CVE wildcards.
	CveEntry pulumi.StringPtrInput `pulumi:"cveEntry"`
}

func (IpsSensorEntryCfeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorEntryCfe)(nil)).Elem()
}

func (i IpsSensorEntryCfeArgs) ToIpsSensorEntryCfeOutput() IpsSensorEntryCfeOutput {
	return i.ToIpsSensorEntryCfeOutputWithContext(context.Background())
}

func (i IpsSensorEntryCfeArgs) ToIpsSensorEntryCfeOutputWithContext(ctx context.Context) IpsSensorEntryCfeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorEntryCfeOutput)
}

// IpsSensorEntryCfeArrayInput is an input type that accepts IpsSensorEntryCfeArray and IpsSensorEntryCfeArrayOutput values.
// You can construct a concrete instance of `IpsSensorEntryCfeArrayInput` via:
//
//	IpsSensorEntryCfeArray{ IpsSensorEntryCfeArgs{...} }
type IpsSensorEntryCfeArrayInput interface {
	pulumi.Input

	ToIpsSensorEntryCfeArrayOutput() IpsSensorEntryCfeArrayOutput
	ToIpsSensorEntryCfeArrayOutputWithContext(context.Context) IpsSensorEntryCfeArrayOutput
}

type IpsSensorEntryCfeArray []IpsSensorEntryCfeInput

func (IpsSensorEntryCfeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorEntryCfe)(nil)).Elem()
}

func (i IpsSensorEntryCfeArray) ToIpsSensorEntryCfeArrayOutput() IpsSensorEntryCfeArrayOutput {
	return i.ToIpsSensorEntryCfeArrayOutputWithContext(context.Background())
}

func (i IpsSensorEntryCfeArray) ToIpsSensorEntryCfeArrayOutputWithContext(ctx context.Context) IpsSensorEntryCfeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorEntryCfeArrayOutput)
}

type IpsSensorEntryCfeOutput struct{ *pulumi.OutputState }

func (IpsSensorEntryCfeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorEntryCfe)(nil)).Elem()
}

func (o IpsSensorEntryCfeOutput) ToIpsSensorEntryCfeOutput() IpsSensorEntryCfeOutput {
	return o
}

func (o IpsSensorEntryCfeOutput) ToIpsSensorEntryCfeOutputWithContext(ctx context.Context) IpsSensorEntryCfeOutput {
	return o
}

// CVE IDs or CVE wildcards.
func (o IpsSensorEntryCfeOutput) CveEntry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntryCfe) *string { return v.CveEntry }).(pulumi.StringPtrOutput)
}

type IpsSensorEntryCfeArrayOutput struct{ *pulumi.OutputState }

func (IpsSensorEntryCfeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorEntryCfe)(nil)).Elem()
}

func (o IpsSensorEntryCfeArrayOutput) ToIpsSensorEntryCfeArrayOutput() IpsSensorEntryCfeArrayOutput {
	return o
}

func (o IpsSensorEntryCfeArrayOutput) ToIpsSensorEntryCfeArrayOutputWithContext(ctx context.Context) IpsSensorEntryCfeArrayOutput {
	return o
}

func (o IpsSensorEntryCfeArrayOutput) Index(i pulumi.IntInput) IpsSensorEntryCfeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsSensorEntryCfe {
		return vs[0].([]IpsSensorEntryCfe)[vs[1].(int)]
	}).(IpsSensorEntryCfeOutput)
}

type IpsSensorEntryExemptIp struct {
	// Destination IP address and netmask.
	DstIp *string `pulumi:"dstIp"`
	// Exempt IP ID.
	Id *int `pulumi:"id"`
	// Source IP address and netmask.
	SrcIp *string `pulumi:"srcIp"`
}

// IpsSensorEntryExemptIpInput is an input type that accepts IpsSensorEntryExemptIpArgs and IpsSensorEntryExemptIpOutput values.
// You can construct a concrete instance of `IpsSensorEntryExemptIpInput` via:
//
//	IpsSensorEntryExemptIpArgs{...}
type IpsSensorEntryExemptIpInput interface {
	pulumi.Input

	ToIpsSensorEntryExemptIpOutput() IpsSensorEntryExemptIpOutput
	ToIpsSensorEntryExemptIpOutputWithContext(context.Context) IpsSensorEntryExemptIpOutput
}

type IpsSensorEntryExemptIpArgs struct {
	// Destination IP address and netmask.
	DstIp pulumi.StringPtrInput `pulumi:"dstIp"`
	// Exempt IP ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Source IP address and netmask.
	SrcIp pulumi.StringPtrInput `pulumi:"srcIp"`
}

func (IpsSensorEntryExemptIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorEntryExemptIp)(nil)).Elem()
}

func (i IpsSensorEntryExemptIpArgs) ToIpsSensorEntryExemptIpOutput() IpsSensorEntryExemptIpOutput {
	return i.ToIpsSensorEntryExemptIpOutputWithContext(context.Background())
}

func (i IpsSensorEntryExemptIpArgs) ToIpsSensorEntryExemptIpOutputWithContext(ctx context.Context) IpsSensorEntryExemptIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorEntryExemptIpOutput)
}

// IpsSensorEntryExemptIpArrayInput is an input type that accepts IpsSensorEntryExemptIpArray and IpsSensorEntryExemptIpArrayOutput values.
// You can construct a concrete instance of `IpsSensorEntryExemptIpArrayInput` via:
//
//	IpsSensorEntryExemptIpArray{ IpsSensorEntryExemptIpArgs{...} }
type IpsSensorEntryExemptIpArrayInput interface {
	pulumi.Input

	ToIpsSensorEntryExemptIpArrayOutput() IpsSensorEntryExemptIpArrayOutput
	ToIpsSensorEntryExemptIpArrayOutputWithContext(context.Context) IpsSensorEntryExemptIpArrayOutput
}

type IpsSensorEntryExemptIpArray []IpsSensorEntryExemptIpInput

func (IpsSensorEntryExemptIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorEntryExemptIp)(nil)).Elem()
}

func (i IpsSensorEntryExemptIpArray) ToIpsSensorEntryExemptIpArrayOutput() IpsSensorEntryExemptIpArrayOutput {
	return i.ToIpsSensorEntryExemptIpArrayOutputWithContext(context.Background())
}

func (i IpsSensorEntryExemptIpArray) ToIpsSensorEntryExemptIpArrayOutputWithContext(ctx context.Context) IpsSensorEntryExemptIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorEntryExemptIpArrayOutput)
}

type IpsSensorEntryExemptIpOutput struct{ *pulumi.OutputState }

func (IpsSensorEntryExemptIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorEntryExemptIp)(nil)).Elem()
}

func (o IpsSensorEntryExemptIpOutput) ToIpsSensorEntryExemptIpOutput() IpsSensorEntryExemptIpOutput {
	return o
}

func (o IpsSensorEntryExemptIpOutput) ToIpsSensorEntryExemptIpOutputWithContext(ctx context.Context) IpsSensorEntryExemptIpOutput {
	return o
}

// Destination IP address and netmask.
func (o IpsSensorEntryExemptIpOutput) DstIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntryExemptIp) *string { return v.DstIp }).(pulumi.StringPtrOutput)
}

// Exempt IP ID.
func (o IpsSensorEntryExemptIpOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsSensorEntryExemptIp) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Source IP address and netmask.
func (o IpsSensorEntryExemptIpOutput) SrcIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorEntryExemptIp) *string { return v.SrcIp }).(pulumi.StringPtrOutput)
}

type IpsSensorEntryExemptIpArrayOutput struct{ *pulumi.OutputState }

func (IpsSensorEntryExemptIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorEntryExemptIp)(nil)).Elem()
}

func (o IpsSensorEntryExemptIpArrayOutput) ToIpsSensorEntryExemptIpArrayOutput() IpsSensorEntryExemptIpArrayOutput {
	return o
}

func (o IpsSensorEntryExemptIpArrayOutput) ToIpsSensorEntryExemptIpArrayOutputWithContext(ctx context.Context) IpsSensorEntryExemptIpArrayOutput {
	return o
}

func (o IpsSensorEntryExemptIpArrayOutput) Index(i pulumi.IntInput) IpsSensorEntryExemptIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsSensorEntryExemptIp {
		return vs[0].([]IpsSensorEntryExemptIp)[vs[1].(int)]
	}).(IpsSensorEntryExemptIpOutput)
}

type IpsSensorEntryRule struct {
	// Rule IPS.
	Id *int `pulumi:"id"`
}

// IpsSensorEntryRuleInput is an input type that accepts IpsSensorEntryRuleArgs and IpsSensorEntryRuleOutput values.
// You can construct a concrete instance of `IpsSensorEntryRuleInput` via:
//
//	IpsSensorEntryRuleArgs{...}
type IpsSensorEntryRuleInput interface {
	pulumi.Input

	ToIpsSensorEntryRuleOutput() IpsSensorEntryRuleOutput
	ToIpsSensorEntryRuleOutputWithContext(context.Context) IpsSensorEntryRuleOutput
}

type IpsSensorEntryRuleArgs struct {
	// Rule IPS.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (IpsSensorEntryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorEntryRule)(nil)).Elem()
}

func (i IpsSensorEntryRuleArgs) ToIpsSensorEntryRuleOutput() IpsSensorEntryRuleOutput {
	return i.ToIpsSensorEntryRuleOutputWithContext(context.Background())
}

func (i IpsSensorEntryRuleArgs) ToIpsSensorEntryRuleOutputWithContext(ctx context.Context) IpsSensorEntryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorEntryRuleOutput)
}

// IpsSensorEntryRuleArrayInput is an input type that accepts IpsSensorEntryRuleArray and IpsSensorEntryRuleArrayOutput values.
// You can construct a concrete instance of `IpsSensorEntryRuleArrayInput` via:
//
//	IpsSensorEntryRuleArray{ IpsSensorEntryRuleArgs{...} }
type IpsSensorEntryRuleArrayInput interface {
	pulumi.Input

	ToIpsSensorEntryRuleArrayOutput() IpsSensorEntryRuleArrayOutput
	ToIpsSensorEntryRuleArrayOutputWithContext(context.Context) IpsSensorEntryRuleArrayOutput
}

type IpsSensorEntryRuleArray []IpsSensorEntryRuleInput

func (IpsSensorEntryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorEntryRule)(nil)).Elem()
}

func (i IpsSensorEntryRuleArray) ToIpsSensorEntryRuleArrayOutput() IpsSensorEntryRuleArrayOutput {
	return i.ToIpsSensorEntryRuleArrayOutputWithContext(context.Background())
}

func (i IpsSensorEntryRuleArray) ToIpsSensorEntryRuleArrayOutputWithContext(ctx context.Context) IpsSensorEntryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorEntryRuleArrayOutput)
}

type IpsSensorEntryRuleOutput struct{ *pulumi.OutputState }

func (IpsSensorEntryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorEntryRule)(nil)).Elem()
}

func (o IpsSensorEntryRuleOutput) ToIpsSensorEntryRuleOutput() IpsSensorEntryRuleOutput {
	return o
}

func (o IpsSensorEntryRuleOutput) ToIpsSensorEntryRuleOutputWithContext(ctx context.Context) IpsSensorEntryRuleOutput {
	return o
}

// Rule IPS.
func (o IpsSensorEntryRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsSensorEntryRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type IpsSensorEntryRuleArrayOutput struct{ *pulumi.OutputState }

func (IpsSensorEntryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorEntryRule)(nil)).Elem()
}

func (o IpsSensorEntryRuleArrayOutput) ToIpsSensorEntryRuleArrayOutput() IpsSensorEntryRuleArrayOutput {
	return o
}

func (o IpsSensorEntryRuleArrayOutput) ToIpsSensorEntryRuleArrayOutputWithContext(ctx context.Context) IpsSensorEntryRuleArrayOutput {
	return o
}

func (o IpsSensorEntryRuleArrayOutput) Index(i pulumi.IntInput) IpsSensorEntryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsSensorEntryRule {
		return vs[0].([]IpsSensorEntryRule)[vs[1].(int)]
	}).(IpsSensorEntryRuleOutput)
}

type IpsSensorEntryVulnType struct {
	// Vulnerability type ID.
	Id *int `pulumi:"id"`
}

// IpsSensorEntryVulnTypeInput is an input type that accepts IpsSensorEntryVulnTypeArgs and IpsSensorEntryVulnTypeOutput values.
// You can construct a concrete instance of `IpsSensorEntryVulnTypeInput` via:
//
//	IpsSensorEntryVulnTypeArgs{...}
type IpsSensorEntryVulnTypeInput interface {
	pulumi.Input

	ToIpsSensorEntryVulnTypeOutput() IpsSensorEntryVulnTypeOutput
	ToIpsSensorEntryVulnTypeOutputWithContext(context.Context) IpsSensorEntryVulnTypeOutput
}

type IpsSensorEntryVulnTypeArgs struct {
	// Vulnerability type ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (IpsSensorEntryVulnTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorEntryVulnType)(nil)).Elem()
}

func (i IpsSensorEntryVulnTypeArgs) ToIpsSensorEntryVulnTypeOutput() IpsSensorEntryVulnTypeOutput {
	return i.ToIpsSensorEntryVulnTypeOutputWithContext(context.Background())
}

func (i IpsSensorEntryVulnTypeArgs) ToIpsSensorEntryVulnTypeOutputWithContext(ctx context.Context) IpsSensorEntryVulnTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorEntryVulnTypeOutput)
}

// IpsSensorEntryVulnTypeArrayInput is an input type that accepts IpsSensorEntryVulnTypeArray and IpsSensorEntryVulnTypeArrayOutput values.
// You can construct a concrete instance of `IpsSensorEntryVulnTypeArrayInput` via:
//
//	IpsSensorEntryVulnTypeArray{ IpsSensorEntryVulnTypeArgs{...} }
type IpsSensorEntryVulnTypeArrayInput interface {
	pulumi.Input

	ToIpsSensorEntryVulnTypeArrayOutput() IpsSensorEntryVulnTypeArrayOutput
	ToIpsSensorEntryVulnTypeArrayOutputWithContext(context.Context) IpsSensorEntryVulnTypeArrayOutput
}

type IpsSensorEntryVulnTypeArray []IpsSensorEntryVulnTypeInput

func (IpsSensorEntryVulnTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorEntryVulnType)(nil)).Elem()
}

func (i IpsSensorEntryVulnTypeArray) ToIpsSensorEntryVulnTypeArrayOutput() IpsSensorEntryVulnTypeArrayOutput {
	return i.ToIpsSensorEntryVulnTypeArrayOutputWithContext(context.Background())
}

func (i IpsSensorEntryVulnTypeArray) ToIpsSensorEntryVulnTypeArrayOutputWithContext(ctx context.Context) IpsSensorEntryVulnTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorEntryVulnTypeArrayOutput)
}

type IpsSensorEntryVulnTypeOutput struct{ *pulumi.OutputState }

func (IpsSensorEntryVulnTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorEntryVulnType)(nil)).Elem()
}

func (o IpsSensorEntryVulnTypeOutput) ToIpsSensorEntryVulnTypeOutput() IpsSensorEntryVulnTypeOutput {
	return o
}

func (o IpsSensorEntryVulnTypeOutput) ToIpsSensorEntryVulnTypeOutputWithContext(ctx context.Context) IpsSensorEntryVulnTypeOutput {
	return o
}

// Vulnerability type ID.
func (o IpsSensorEntryVulnTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsSensorEntryVulnType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type IpsSensorEntryVulnTypeArrayOutput struct{ *pulumi.OutputState }

func (IpsSensorEntryVulnTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorEntryVulnType)(nil)).Elem()
}

func (o IpsSensorEntryVulnTypeArrayOutput) ToIpsSensorEntryVulnTypeArrayOutput() IpsSensorEntryVulnTypeArrayOutput {
	return o
}

func (o IpsSensorEntryVulnTypeArrayOutput) ToIpsSensorEntryVulnTypeArrayOutputWithContext(ctx context.Context) IpsSensorEntryVulnTypeArrayOutput {
	return o
}

func (o IpsSensorEntryVulnTypeArrayOutput) Index(i pulumi.IntInput) IpsSensorEntryVulnTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsSensorEntryVulnType {
		return vs[0].([]IpsSensorEntryVulnType)[vs[1].(int)]
	}).(IpsSensorEntryVulnTypeOutput)
}

type IpsSensorFilter struct {
	// Action of selected rules. Valid values: `pass`, `block`, `reset`, `default`.
	Action *string `pulumi:"action"`
	// Vulnerable application filter.
	Application *string `pulumi:"application"`
	// Vulnerability location filter.
	Location *string `pulumi:"location"`
	// Enable/disable logging of selected rules. Valid values: `disable`, `enable`.
	Log *string `pulumi:"log"`
	// Enable/disable packet logging of selected rules. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Filter name.
	Name *string `pulumi:"name"`
	// Vulnerable OS filter.
	Os *string `pulumi:"os"`
	// Vulnerable protocol filter.
	Protocol *string `pulumi:"protocol"`
	// Quarantine IP or interface. Valid values: `none`, `attacker`.
	Quarantine *string `pulumi:"quarantine"`
	// Duration of quarantine in minute.
	QuarantineExpiry *int `pulumi:"quarantineExpiry"`
	// Enable/disable logging of selected quarantine. Valid values: `disable`, `enable`.
	QuarantineLog *string `pulumi:"quarantineLog"`
	// Vulnerability severity filter.
	Severity *string `pulumi:"severity"`
	// Selected rules status. Valid values: `disable`, `enable`, `default`.
	Status *string `pulumi:"status"`
}

// IpsSensorFilterInput is an input type that accepts IpsSensorFilterArgs and IpsSensorFilterOutput values.
// You can construct a concrete instance of `IpsSensorFilterInput` via:
//
//	IpsSensorFilterArgs{...}
type IpsSensorFilterInput interface {
	pulumi.Input

	ToIpsSensorFilterOutput() IpsSensorFilterOutput
	ToIpsSensorFilterOutputWithContext(context.Context) IpsSensorFilterOutput
}

type IpsSensorFilterArgs struct {
	// Action of selected rules. Valid values: `pass`, `block`, `reset`, `default`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Vulnerable application filter.
	Application pulumi.StringPtrInput `pulumi:"application"`
	// Vulnerability location filter.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Enable/disable logging of selected rules. Valid values: `disable`, `enable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable packet logging of selected rules. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput `pulumi:"logPacket"`
	// Filter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Vulnerable OS filter.
	Os pulumi.StringPtrInput `pulumi:"os"`
	// Vulnerable protocol filter.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Quarantine IP or interface. Valid values: `none`, `attacker`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Duration of quarantine in minute.
	QuarantineExpiry pulumi.IntPtrInput `pulumi:"quarantineExpiry"`
	// Enable/disable logging of selected quarantine. Valid values: `disable`, `enable`.
	QuarantineLog pulumi.StringPtrInput `pulumi:"quarantineLog"`
	// Vulnerability severity filter.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Selected rules status. Valid values: `disable`, `enable`, `default`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (IpsSensorFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorFilter)(nil)).Elem()
}

func (i IpsSensorFilterArgs) ToIpsSensorFilterOutput() IpsSensorFilterOutput {
	return i.ToIpsSensorFilterOutputWithContext(context.Background())
}

func (i IpsSensorFilterArgs) ToIpsSensorFilterOutputWithContext(ctx context.Context) IpsSensorFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorFilterOutput)
}

// IpsSensorFilterArrayInput is an input type that accepts IpsSensorFilterArray and IpsSensorFilterArrayOutput values.
// You can construct a concrete instance of `IpsSensorFilterArrayInput` via:
//
//	IpsSensorFilterArray{ IpsSensorFilterArgs{...} }
type IpsSensorFilterArrayInput interface {
	pulumi.Input

	ToIpsSensorFilterArrayOutput() IpsSensorFilterArrayOutput
	ToIpsSensorFilterArrayOutputWithContext(context.Context) IpsSensorFilterArrayOutput
}

type IpsSensorFilterArray []IpsSensorFilterInput

func (IpsSensorFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorFilter)(nil)).Elem()
}

func (i IpsSensorFilterArray) ToIpsSensorFilterArrayOutput() IpsSensorFilterArrayOutput {
	return i.ToIpsSensorFilterArrayOutputWithContext(context.Background())
}

func (i IpsSensorFilterArray) ToIpsSensorFilterArrayOutputWithContext(ctx context.Context) IpsSensorFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorFilterArrayOutput)
}

type IpsSensorFilterOutput struct{ *pulumi.OutputState }

func (IpsSensorFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorFilter)(nil)).Elem()
}

func (o IpsSensorFilterOutput) ToIpsSensorFilterOutput() IpsSensorFilterOutput {
	return o
}

func (o IpsSensorFilterOutput) ToIpsSensorFilterOutputWithContext(ctx context.Context) IpsSensorFilterOutput {
	return o
}

// Action of selected rules. Valid values: `pass`, `block`, `reset`, `default`.
func (o IpsSensorFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Vulnerable application filter.
func (o IpsSensorFilterOutput) Application() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.Application }).(pulumi.StringPtrOutput)
}

// Vulnerability location filter.
func (o IpsSensorFilterOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Enable/disable logging of selected rules. Valid values: `disable`, `enable`.
func (o IpsSensorFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable packet logging of selected rules. Valid values: `disable`, `enable`.
func (o IpsSensorFilterOutput) LogPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.LogPacket }).(pulumi.StringPtrOutput)
}

// Filter name.
func (o IpsSensorFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Vulnerable OS filter.
func (o IpsSensorFilterOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.Os }).(pulumi.StringPtrOutput)
}

// Vulnerable protocol filter.
func (o IpsSensorFilterOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Quarantine IP or interface. Valid values: `none`, `attacker`.
func (o IpsSensorFilterOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Duration of quarantine in minute.
func (o IpsSensorFilterOutput) QuarantineExpiry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *int { return v.QuarantineExpiry }).(pulumi.IntPtrOutput)
}

// Enable/disable logging of selected quarantine. Valid values: `disable`, `enable`.
func (o IpsSensorFilterOutput) QuarantineLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.QuarantineLog }).(pulumi.StringPtrOutput)
}

// Vulnerability severity filter.
func (o IpsSensorFilterOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Selected rules status. Valid values: `disable`, `enable`, `default`.
func (o IpsSensorFilterOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorFilter) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type IpsSensorFilterArrayOutput struct{ *pulumi.OutputState }

func (IpsSensorFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorFilter)(nil)).Elem()
}

func (o IpsSensorFilterArrayOutput) ToIpsSensorFilterArrayOutput() IpsSensorFilterArrayOutput {
	return o
}

func (o IpsSensorFilterArrayOutput) ToIpsSensorFilterArrayOutputWithContext(ctx context.Context) IpsSensorFilterArrayOutput {
	return o
}

func (o IpsSensorFilterArrayOutput) Index(i pulumi.IntInput) IpsSensorFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsSensorFilter {
		return vs[0].([]IpsSensorFilter)[vs[1].(int)]
	}).(IpsSensorFilterOutput)
}

type IpsSensorOverride struct {
	// Action of override rule. Valid values: `pass`, `block`, `reset`.
	Action *string `pulumi:"action"`
	// Exempted IP. The structure of `exemptIp` block is documented below.
	ExemptIps []IpsSensorOverrideExemptIp `pulumi:"exemptIps"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log *string `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket *string `pulumi:"logPacket"`
	// Quarantine IP or interface. Valid values: `none`, `attacker`.
	Quarantine *string `pulumi:"quarantine"`
	// Duration of quarantine in minute.
	QuarantineExpiry *int `pulumi:"quarantineExpiry"`
	// Enable/disable logging of selected quarantine. Valid values: `disable`, `enable`.
	QuarantineLog *string `pulumi:"quarantineLog"`
	// Override rule ID.
	RuleId *int `pulumi:"ruleId"`
	// Enable/disable status of override rule. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
}

// IpsSensorOverrideInput is an input type that accepts IpsSensorOverrideArgs and IpsSensorOverrideOutput values.
// You can construct a concrete instance of `IpsSensorOverrideInput` via:
//
//	IpsSensorOverrideArgs{...}
type IpsSensorOverrideInput interface {
	pulumi.Input

	ToIpsSensorOverrideOutput() IpsSensorOverrideOutput
	ToIpsSensorOverrideOutputWithContext(context.Context) IpsSensorOverrideOutput
}

type IpsSensorOverrideArgs struct {
	// Action of override rule. Valid values: `pass`, `block`, `reset`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Exempted IP. The structure of `exemptIp` block is documented below.
	ExemptIps IpsSensorOverrideExemptIpArrayInput `pulumi:"exemptIps"`
	// Enable/disable logging. Valid values: `disable`, `enable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable packet logging. Valid values: `disable`, `enable`.
	LogPacket pulumi.StringPtrInput `pulumi:"logPacket"`
	// Quarantine IP or interface. Valid values: `none`, `attacker`.
	Quarantine pulumi.StringPtrInput `pulumi:"quarantine"`
	// Duration of quarantine in minute.
	QuarantineExpiry pulumi.IntPtrInput `pulumi:"quarantineExpiry"`
	// Enable/disable logging of selected quarantine. Valid values: `disable`, `enable`.
	QuarantineLog pulumi.StringPtrInput `pulumi:"quarantineLog"`
	// Override rule ID.
	RuleId pulumi.IntPtrInput `pulumi:"ruleId"`
	// Enable/disable status of override rule. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (IpsSensorOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorOverride)(nil)).Elem()
}

func (i IpsSensorOverrideArgs) ToIpsSensorOverrideOutput() IpsSensorOverrideOutput {
	return i.ToIpsSensorOverrideOutputWithContext(context.Background())
}

func (i IpsSensorOverrideArgs) ToIpsSensorOverrideOutputWithContext(ctx context.Context) IpsSensorOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorOverrideOutput)
}

// IpsSensorOverrideArrayInput is an input type that accepts IpsSensorOverrideArray and IpsSensorOverrideArrayOutput values.
// You can construct a concrete instance of `IpsSensorOverrideArrayInput` via:
//
//	IpsSensorOverrideArray{ IpsSensorOverrideArgs{...} }
type IpsSensorOverrideArrayInput interface {
	pulumi.Input

	ToIpsSensorOverrideArrayOutput() IpsSensorOverrideArrayOutput
	ToIpsSensorOverrideArrayOutputWithContext(context.Context) IpsSensorOverrideArrayOutput
}

type IpsSensorOverrideArray []IpsSensorOverrideInput

func (IpsSensorOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorOverride)(nil)).Elem()
}

func (i IpsSensorOverrideArray) ToIpsSensorOverrideArrayOutput() IpsSensorOverrideArrayOutput {
	return i.ToIpsSensorOverrideArrayOutputWithContext(context.Background())
}

func (i IpsSensorOverrideArray) ToIpsSensorOverrideArrayOutputWithContext(ctx context.Context) IpsSensorOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorOverrideArrayOutput)
}

type IpsSensorOverrideOutput struct{ *pulumi.OutputState }

func (IpsSensorOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorOverride)(nil)).Elem()
}

func (o IpsSensorOverrideOutput) ToIpsSensorOverrideOutput() IpsSensorOverrideOutput {
	return o
}

func (o IpsSensorOverrideOutput) ToIpsSensorOverrideOutputWithContext(ctx context.Context) IpsSensorOverrideOutput {
	return o
}

// Action of override rule. Valid values: `pass`, `block`, `reset`.
func (o IpsSensorOverrideOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorOverride) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Exempted IP. The structure of `exemptIp` block is documented below.
func (o IpsSensorOverrideOutput) ExemptIps() IpsSensorOverrideExemptIpArrayOutput {
	return o.ApplyT(func(v IpsSensorOverride) []IpsSensorOverrideExemptIp { return v.ExemptIps }).(IpsSensorOverrideExemptIpArrayOutput)
}

// Enable/disable logging. Valid values: `disable`, `enable`.
func (o IpsSensorOverrideOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorOverride) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable packet logging. Valid values: `disable`, `enable`.
func (o IpsSensorOverrideOutput) LogPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorOverride) *string { return v.LogPacket }).(pulumi.StringPtrOutput)
}

// Quarantine IP or interface. Valid values: `none`, `attacker`.
func (o IpsSensorOverrideOutput) Quarantine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorOverride) *string { return v.Quarantine }).(pulumi.StringPtrOutput)
}

// Duration of quarantine in minute.
func (o IpsSensorOverrideOutput) QuarantineExpiry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsSensorOverride) *int { return v.QuarantineExpiry }).(pulumi.IntPtrOutput)
}

// Enable/disable logging of selected quarantine. Valid values: `disable`, `enable`.
func (o IpsSensorOverrideOutput) QuarantineLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorOverride) *string { return v.QuarantineLog }).(pulumi.StringPtrOutput)
}

// Override rule ID.
func (o IpsSensorOverrideOutput) RuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsSensorOverride) *int { return v.RuleId }).(pulumi.IntPtrOutput)
}

// Enable/disable status of override rule. Valid values: `disable`, `enable`.
func (o IpsSensorOverrideOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorOverride) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type IpsSensorOverrideArrayOutput struct{ *pulumi.OutputState }

func (IpsSensorOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorOverride)(nil)).Elem()
}

func (o IpsSensorOverrideArrayOutput) ToIpsSensorOverrideArrayOutput() IpsSensorOverrideArrayOutput {
	return o
}

func (o IpsSensorOverrideArrayOutput) ToIpsSensorOverrideArrayOutputWithContext(ctx context.Context) IpsSensorOverrideArrayOutput {
	return o
}

func (o IpsSensorOverrideArrayOutput) Index(i pulumi.IntInput) IpsSensorOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsSensorOverride {
		return vs[0].([]IpsSensorOverride)[vs[1].(int)]
	}).(IpsSensorOverrideOutput)
}

type IpsSensorOverrideExemptIp struct {
	// Destination IP address and netmask.
	DstIp *string `pulumi:"dstIp"`
	// Exempt IP ID.
	Id *int `pulumi:"id"`
	// Source IP address and netmask.
	SrcIp *string `pulumi:"srcIp"`
}

// IpsSensorOverrideExemptIpInput is an input type that accepts IpsSensorOverrideExemptIpArgs and IpsSensorOverrideExemptIpOutput values.
// You can construct a concrete instance of `IpsSensorOverrideExemptIpInput` via:
//
//	IpsSensorOverrideExemptIpArgs{...}
type IpsSensorOverrideExemptIpInput interface {
	pulumi.Input

	ToIpsSensorOverrideExemptIpOutput() IpsSensorOverrideExemptIpOutput
	ToIpsSensorOverrideExemptIpOutputWithContext(context.Context) IpsSensorOverrideExemptIpOutput
}

type IpsSensorOverrideExemptIpArgs struct {
	// Destination IP address and netmask.
	DstIp pulumi.StringPtrInput `pulumi:"dstIp"`
	// Exempt IP ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Source IP address and netmask.
	SrcIp pulumi.StringPtrInput `pulumi:"srcIp"`
}

func (IpsSensorOverrideExemptIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorOverrideExemptIp)(nil)).Elem()
}

func (i IpsSensorOverrideExemptIpArgs) ToIpsSensorOverrideExemptIpOutput() IpsSensorOverrideExemptIpOutput {
	return i.ToIpsSensorOverrideExemptIpOutputWithContext(context.Background())
}

func (i IpsSensorOverrideExemptIpArgs) ToIpsSensorOverrideExemptIpOutputWithContext(ctx context.Context) IpsSensorOverrideExemptIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorOverrideExemptIpOutput)
}

// IpsSensorOverrideExemptIpArrayInput is an input type that accepts IpsSensorOverrideExemptIpArray and IpsSensorOverrideExemptIpArrayOutput values.
// You can construct a concrete instance of `IpsSensorOverrideExemptIpArrayInput` via:
//
//	IpsSensorOverrideExemptIpArray{ IpsSensorOverrideExemptIpArgs{...} }
type IpsSensorOverrideExemptIpArrayInput interface {
	pulumi.Input

	ToIpsSensorOverrideExemptIpArrayOutput() IpsSensorOverrideExemptIpArrayOutput
	ToIpsSensorOverrideExemptIpArrayOutputWithContext(context.Context) IpsSensorOverrideExemptIpArrayOutput
}

type IpsSensorOverrideExemptIpArray []IpsSensorOverrideExemptIpInput

func (IpsSensorOverrideExemptIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorOverrideExemptIp)(nil)).Elem()
}

func (i IpsSensorOverrideExemptIpArray) ToIpsSensorOverrideExemptIpArrayOutput() IpsSensorOverrideExemptIpArrayOutput {
	return i.ToIpsSensorOverrideExemptIpArrayOutputWithContext(context.Background())
}

func (i IpsSensorOverrideExemptIpArray) ToIpsSensorOverrideExemptIpArrayOutputWithContext(ctx context.Context) IpsSensorOverrideExemptIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSensorOverrideExemptIpArrayOutput)
}

type IpsSensorOverrideExemptIpOutput struct{ *pulumi.OutputState }

func (IpsSensorOverrideExemptIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsSensorOverrideExemptIp)(nil)).Elem()
}

func (o IpsSensorOverrideExemptIpOutput) ToIpsSensorOverrideExemptIpOutput() IpsSensorOverrideExemptIpOutput {
	return o
}

func (o IpsSensorOverrideExemptIpOutput) ToIpsSensorOverrideExemptIpOutputWithContext(ctx context.Context) IpsSensorOverrideExemptIpOutput {
	return o
}

// Destination IP address and netmask.
func (o IpsSensorOverrideExemptIpOutput) DstIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorOverrideExemptIp) *string { return v.DstIp }).(pulumi.StringPtrOutput)
}

// Exempt IP ID.
func (o IpsSensorOverrideExemptIpOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsSensorOverrideExemptIp) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Source IP address and netmask.
func (o IpsSensorOverrideExemptIpOutput) SrcIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsSensorOverrideExemptIp) *string { return v.SrcIp }).(pulumi.StringPtrOutput)
}

type IpsSensorOverrideExemptIpArrayOutput struct{ *pulumi.OutputState }

func (IpsSensorOverrideExemptIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsSensorOverrideExemptIp)(nil)).Elem()
}

func (o IpsSensorOverrideExemptIpArrayOutput) ToIpsSensorOverrideExemptIpArrayOutput() IpsSensorOverrideExemptIpArrayOutput {
	return o
}

func (o IpsSensorOverrideExemptIpArrayOutput) ToIpsSensorOverrideExemptIpArrayOutputWithContext(ctx context.Context) IpsSensorOverrideExemptIpArrayOutput {
	return o
}

func (o IpsSensorOverrideExemptIpArrayOutput) Index(i pulumi.IntInput) IpsSensorOverrideExemptIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsSensorOverrideExemptIp {
		return vs[0].([]IpsSensorOverrideExemptIp)[vs[1].(int)]
	}).(IpsSensorOverrideExemptIpOutput)
}

type LogSettingCustomLogField struct {
	// Custom log field.
	FieldId *string `pulumi:"fieldId"`
}

// LogSettingCustomLogFieldInput is an input type that accepts LogSettingCustomLogFieldArgs and LogSettingCustomLogFieldOutput values.
// You can construct a concrete instance of `LogSettingCustomLogFieldInput` via:
//
//	LogSettingCustomLogFieldArgs{...}
type LogSettingCustomLogFieldInput interface {
	pulumi.Input

	ToLogSettingCustomLogFieldOutput() LogSettingCustomLogFieldOutput
	ToLogSettingCustomLogFieldOutputWithContext(context.Context) LogSettingCustomLogFieldOutput
}

type LogSettingCustomLogFieldArgs struct {
	// Custom log field.
	FieldId pulumi.StringPtrInput `pulumi:"fieldId"`
}

func (LogSettingCustomLogFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSettingCustomLogField)(nil)).Elem()
}

func (i LogSettingCustomLogFieldArgs) ToLogSettingCustomLogFieldOutput() LogSettingCustomLogFieldOutput {
	return i.ToLogSettingCustomLogFieldOutputWithContext(context.Background())
}

func (i LogSettingCustomLogFieldArgs) ToLogSettingCustomLogFieldOutputWithContext(ctx context.Context) LogSettingCustomLogFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSettingCustomLogFieldOutput)
}

// LogSettingCustomLogFieldArrayInput is an input type that accepts LogSettingCustomLogFieldArray and LogSettingCustomLogFieldArrayOutput values.
// You can construct a concrete instance of `LogSettingCustomLogFieldArrayInput` via:
//
//	LogSettingCustomLogFieldArray{ LogSettingCustomLogFieldArgs{...} }
type LogSettingCustomLogFieldArrayInput interface {
	pulumi.Input

	ToLogSettingCustomLogFieldArrayOutput() LogSettingCustomLogFieldArrayOutput
	ToLogSettingCustomLogFieldArrayOutputWithContext(context.Context) LogSettingCustomLogFieldArrayOutput
}

type LogSettingCustomLogFieldArray []LogSettingCustomLogFieldInput

func (LogSettingCustomLogFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSettingCustomLogField)(nil)).Elem()
}

func (i LogSettingCustomLogFieldArray) ToLogSettingCustomLogFieldArrayOutput() LogSettingCustomLogFieldArrayOutput {
	return i.ToLogSettingCustomLogFieldArrayOutputWithContext(context.Background())
}

func (i LogSettingCustomLogFieldArray) ToLogSettingCustomLogFieldArrayOutputWithContext(ctx context.Context) LogSettingCustomLogFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSettingCustomLogFieldArrayOutput)
}

type LogSettingCustomLogFieldOutput struct{ *pulumi.OutputState }

func (LogSettingCustomLogFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSettingCustomLogField)(nil)).Elem()
}

func (o LogSettingCustomLogFieldOutput) ToLogSettingCustomLogFieldOutput() LogSettingCustomLogFieldOutput {
	return o
}

func (o LogSettingCustomLogFieldOutput) ToLogSettingCustomLogFieldOutputWithContext(ctx context.Context) LogSettingCustomLogFieldOutput {
	return o
}

// Custom log field.
func (o LogSettingCustomLogFieldOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSettingCustomLogField) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

type LogSettingCustomLogFieldArrayOutput struct{ *pulumi.OutputState }

func (LogSettingCustomLogFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSettingCustomLogField)(nil)).Elem()
}

func (o LogSettingCustomLogFieldArrayOutput) ToLogSettingCustomLogFieldArrayOutput() LogSettingCustomLogFieldArrayOutput {
	return o
}

func (o LogSettingCustomLogFieldArrayOutput) ToLogSettingCustomLogFieldArrayOutputWithContext(ctx context.Context) LogSettingCustomLogFieldArrayOutput {
	return o
}

func (o LogSettingCustomLogFieldArrayOutput) Index(i pulumi.IntInput) LogSettingCustomLogFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSettingCustomLogField {
		return vs[0].([]LogSettingCustomLogField)[vs[1].(int)]
	}).(LogSettingCustomLogFieldOutput)
}

type LogThreatweightApplication struct {
	// Application category.
	Category *int `pulumi:"category"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Threat weight score for Application events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Level *string `pulumi:"level"`
}

// LogThreatweightApplicationInput is an input type that accepts LogThreatweightApplicationArgs and LogThreatweightApplicationOutput values.
// You can construct a concrete instance of `LogThreatweightApplicationInput` via:
//
//	LogThreatweightApplicationArgs{...}
type LogThreatweightApplicationInput interface {
	pulumi.Input

	ToLogThreatweightApplicationOutput() LogThreatweightApplicationOutput
	ToLogThreatweightApplicationOutputWithContext(context.Context) LogThreatweightApplicationOutput
}

type LogThreatweightApplicationArgs struct {
	// Application category.
	Category pulumi.IntPtrInput `pulumi:"category"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Threat weight score for Application events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Level pulumi.StringPtrInput `pulumi:"level"`
}

func (LogThreatweightApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightApplication)(nil)).Elem()
}

func (i LogThreatweightApplicationArgs) ToLogThreatweightApplicationOutput() LogThreatweightApplicationOutput {
	return i.ToLogThreatweightApplicationOutputWithContext(context.Background())
}

func (i LogThreatweightApplicationArgs) ToLogThreatweightApplicationOutputWithContext(ctx context.Context) LogThreatweightApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightApplicationOutput)
}

// LogThreatweightApplicationArrayInput is an input type that accepts LogThreatweightApplicationArray and LogThreatweightApplicationArrayOutput values.
// You can construct a concrete instance of `LogThreatweightApplicationArrayInput` via:
//
//	LogThreatweightApplicationArray{ LogThreatweightApplicationArgs{...} }
type LogThreatweightApplicationArrayInput interface {
	pulumi.Input

	ToLogThreatweightApplicationArrayOutput() LogThreatweightApplicationArrayOutput
	ToLogThreatweightApplicationArrayOutputWithContext(context.Context) LogThreatweightApplicationArrayOutput
}

type LogThreatweightApplicationArray []LogThreatweightApplicationInput

func (LogThreatweightApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatweightApplication)(nil)).Elem()
}

func (i LogThreatweightApplicationArray) ToLogThreatweightApplicationArrayOutput() LogThreatweightApplicationArrayOutput {
	return i.ToLogThreatweightApplicationArrayOutputWithContext(context.Background())
}

func (i LogThreatweightApplicationArray) ToLogThreatweightApplicationArrayOutputWithContext(ctx context.Context) LogThreatweightApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightApplicationArrayOutput)
}

type LogThreatweightApplicationOutput struct{ *pulumi.OutputState }

func (LogThreatweightApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightApplication)(nil)).Elem()
}

func (o LogThreatweightApplicationOutput) ToLogThreatweightApplicationOutput() LogThreatweightApplicationOutput {
	return o
}

func (o LogThreatweightApplicationOutput) ToLogThreatweightApplicationOutputWithContext(ctx context.Context) LogThreatweightApplicationOutput {
	return o
}

// Application category.
func (o LogThreatweightApplicationOutput) Category() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatweightApplication) *int { return v.Category }).(pulumi.IntPtrOutput)
}

// Entry ID.
func (o LogThreatweightApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatweightApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Threat weight score for Application events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightApplicationOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightApplication) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type LogThreatweightApplicationArrayOutput struct{ *pulumi.OutputState }

func (LogThreatweightApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatweightApplication)(nil)).Elem()
}

func (o LogThreatweightApplicationArrayOutput) ToLogThreatweightApplicationArrayOutput() LogThreatweightApplicationArrayOutput {
	return o
}

func (o LogThreatweightApplicationArrayOutput) ToLogThreatweightApplicationArrayOutputWithContext(ctx context.Context) LogThreatweightApplicationArrayOutput {
	return o
}

func (o LogThreatweightApplicationArrayOutput) Index(i pulumi.IntInput) LogThreatweightApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogThreatweightApplication {
		return vs[0].([]LogThreatweightApplication)[vs[1].(int)]
	}).(LogThreatweightApplicationOutput)
}

type LogThreatweightGeolocation struct {
	// Country code.
	Country *string `pulumi:"country"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Threat weight score for Geolocation-based events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Level *string `pulumi:"level"`
}

// LogThreatweightGeolocationInput is an input type that accepts LogThreatweightGeolocationArgs and LogThreatweightGeolocationOutput values.
// You can construct a concrete instance of `LogThreatweightGeolocationInput` via:
//
//	LogThreatweightGeolocationArgs{...}
type LogThreatweightGeolocationInput interface {
	pulumi.Input

	ToLogThreatweightGeolocationOutput() LogThreatweightGeolocationOutput
	ToLogThreatweightGeolocationOutputWithContext(context.Context) LogThreatweightGeolocationOutput
}

type LogThreatweightGeolocationArgs struct {
	// Country code.
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Threat weight score for Geolocation-based events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Level pulumi.StringPtrInput `pulumi:"level"`
}

func (LogThreatweightGeolocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightGeolocation)(nil)).Elem()
}

func (i LogThreatweightGeolocationArgs) ToLogThreatweightGeolocationOutput() LogThreatweightGeolocationOutput {
	return i.ToLogThreatweightGeolocationOutputWithContext(context.Background())
}

func (i LogThreatweightGeolocationArgs) ToLogThreatweightGeolocationOutputWithContext(ctx context.Context) LogThreatweightGeolocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightGeolocationOutput)
}

// LogThreatweightGeolocationArrayInput is an input type that accepts LogThreatweightGeolocationArray and LogThreatweightGeolocationArrayOutput values.
// You can construct a concrete instance of `LogThreatweightGeolocationArrayInput` via:
//
//	LogThreatweightGeolocationArray{ LogThreatweightGeolocationArgs{...} }
type LogThreatweightGeolocationArrayInput interface {
	pulumi.Input

	ToLogThreatweightGeolocationArrayOutput() LogThreatweightGeolocationArrayOutput
	ToLogThreatweightGeolocationArrayOutputWithContext(context.Context) LogThreatweightGeolocationArrayOutput
}

type LogThreatweightGeolocationArray []LogThreatweightGeolocationInput

func (LogThreatweightGeolocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatweightGeolocation)(nil)).Elem()
}

func (i LogThreatweightGeolocationArray) ToLogThreatweightGeolocationArrayOutput() LogThreatweightGeolocationArrayOutput {
	return i.ToLogThreatweightGeolocationArrayOutputWithContext(context.Background())
}

func (i LogThreatweightGeolocationArray) ToLogThreatweightGeolocationArrayOutputWithContext(ctx context.Context) LogThreatweightGeolocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightGeolocationArrayOutput)
}

type LogThreatweightGeolocationOutput struct{ *pulumi.OutputState }

func (LogThreatweightGeolocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightGeolocation)(nil)).Elem()
}

func (o LogThreatweightGeolocationOutput) ToLogThreatweightGeolocationOutput() LogThreatweightGeolocationOutput {
	return o
}

func (o LogThreatweightGeolocationOutput) ToLogThreatweightGeolocationOutputWithContext(ctx context.Context) LogThreatweightGeolocationOutput {
	return o
}

// Country code.
func (o LogThreatweightGeolocationOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightGeolocation) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogThreatweightGeolocationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatweightGeolocation) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Threat weight score for Geolocation-based events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightGeolocationOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightGeolocation) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type LogThreatweightGeolocationArrayOutput struct{ *pulumi.OutputState }

func (LogThreatweightGeolocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatweightGeolocation)(nil)).Elem()
}

func (o LogThreatweightGeolocationArrayOutput) ToLogThreatweightGeolocationArrayOutput() LogThreatweightGeolocationArrayOutput {
	return o
}

func (o LogThreatweightGeolocationArrayOutput) ToLogThreatweightGeolocationArrayOutputWithContext(ctx context.Context) LogThreatweightGeolocationArrayOutput {
	return o
}

func (o LogThreatweightGeolocationArrayOutput) Index(i pulumi.IntInput) LogThreatweightGeolocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogThreatweightGeolocation {
		return vs[0].([]LogThreatweightGeolocation)[vs[1].(int)]
	}).(LogThreatweightGeolocationOutput)
}

type LogThreatweightIps struct {
	// Threat weight score for IPS critical severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	CriticalSeverity *string `pulumi:"criticalSeverity"`
	// Threat weight score for IPS high severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	HighSeverity *string `pulumi:"highSeverity"`
	// Threat weight score for IPS info severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	InfoSeverity *string `pulumi:"infoSeverity"`
	// Threat weight score for IPS low severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	LowSeverity *string `pulumi:"lowSeverity"`
	// Threat weight score for IPS medium severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	MediumSeverity *string `pulumi:"mediumSeverity"`
}

// LogThreatweightIpsInput is an input type that accepts LogThreatweightIpsArgs and LogThreatweightIpsOutput values.
// You can construct a concrete instance of `LogThreatweightIpsInput` via:
//
//	LogThreatweightIpsArgs{...}
type LogThreatweightIpsInput interface {
	pulumi.Input

	ToLogThreatweightIpsOutput() LogThreatweightIpsOutput
	ToLogThreatweightIpsOutputWithContext(context.Context) LogThreatweightIpsOutput
}

type LogThreatweightIpsArgs struct {
	// Threat weight score for IPS critical severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	CriticalSeverity pulumi.StringPtrInput `pulumi:"criticalSeverity"`
	// Threat weight score for IPS high severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	HighSeverity pulumi.StringPtrInput `pulumi:"highSeverity"`
	// Threat weight score for IPS info severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	InfoSeverity pulumi.StringPtrInput `pulumi:"infoSeverity"`
	// Threat weight score for IPS low severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	LowSeverity pulumi.StringPtrInput `pulumi:"lowSeverity"`
	// Threat weight score for IPS medium severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	MediumSeverity pulumi.StringPtrInput `pulumi:"mediumSeverity"`
}

func (LogThreatweightIpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightIps)(nil)).Elem()
}

func (i LogThreatweightIpsArgs) ToLogThreatweightIpsOutput() LogThreatweightIpsOutput {
	return i.ToLogThreatweightIpsOutputWithContext(context.Background())
}

func (i LogThreatweightIpsArgs) ToLogThreatweightIpsOutputWithContext(ctx context.Context) LogThreatweightIpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightIpsOutput)
}

func (i LogThreatweightIpsArgs) ToLogThreatweightIpsPtrOutput() LogThreatweightIpsPtrOutput {
	return i.ToLogThreatweightIpsPtrOutputWithContext(context.Background())
}

func (i LogThreatweightIpsArgs) ToLogThreatweightIpsPtrOutputWithContext(ctx context.Context) LogThreatweightIpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightIpsOutput).ToLogThreatweightIpsPtrOutputWithContext(ctx)
}

// LogThreatweightIpsPtrInput is an input type that accepts LogThreatweightIpsArgs, LogThreatweightIpsPtr and LogThreatweightIpsPtrOutput values.
// You can construct a concrete instance of `LogThreatweightIpsPtrInput` via:
//
//	        LogThreatweightIpsArgs{...}
//
//	or:
//
//	        nil
type LogThreatweightIpsPtrInput interface {
	pulumi.Input

	ToLogThreatweightIpsPtrOutput() LogThreatweightIpsPtrOutput
	ToLogThreatweightIpsPtrOutputWithContext(context.Context) LogThreatweightIpsPtrOutput
}

type logThreatweightIpsPtrType LogThreatweightIpsArgs

func LogThreatweightIpsPtr(v *LogThreatweightIpsArgs) LogThreatweightIpsPtrInput {
	return (*logThreatweightIpsPtrType)(v)
}

func (*logThreatweightIpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatweightIps)(nil)).Elem()
}

func (i *logThreatweightIpsPtrType) ToLogThreatweightIpsPtrOutput() LogThreatweightIpsPtrOutput {
	return i.ToLogThreatweightIpsPtrOutputWithContext(context.Background())
}

func (i *logThreatweightIpsPtrType) ToLogThreatweightIpsPtrOutputWithContext(ctx context.Context) LogThreatweightIpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightIpsPtrOutput)
}

type LogThreatweightIpsOutput struct{ *pulumi.OutputState }

func (LogThreatweightIpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightIps)(nil)).Elem()
}

func (o LogThreatweightIpsOutput) ToLogThreatweightIpsOutput() LogThreatweightIpsOutput {
	return o
}

func (o LogThreatweightIpsOutput) ToLogThreatweightIpsOutputWithContext(ctx context.Context) LogThreatweightIpsOutput {
	return o
}

func (o LogThreatweightIpsOutput) ToLogThreatweightIpsPtrOutput() LogThreatweightIpsPtrOutput {
	return o.ToLogThreatweightIpsPtrOutputWithContext(context.Background())
}

func (o LogThreatweightIpsOutput) ToLogThreatweightIpsPtrOutputWithContext(ctx context.Context) LogThreatweightIpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogThreatweightIps) *LogThreatweightIps {
		return &v
	}).(LogThreatweightIpsPtrOutput)
}

// Threat weight score for IPS critical severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightIpsOutput) CriticalSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightIps) *string { return v.CriticalSeverity }).(pulumi.StringPtrOutput)
}

// Threat weight score for IPS high severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightIpsOutput) HighSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightIps) *string { return v.HighSeverity }).(pulumi.StringPtrOutput)
}

// Threat weight score for IPS info severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightIpsOutput) InfoSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightIps) *string { return v.InfoSeverity }).(pulumi.StringPtrOutput)
}

// Threat weight score for IPS low severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightIpsOutput) LowSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightIps) *string { return v.LowSeverity }).(pulumi.StringPtrOutput)
}

// Threat weight score for IPS medium severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightIpsOutput) MediumSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightIps) *string { return v.MediumSeverity }).(pulumi.StringPtrOutput)
}

type LogThreatweightIpsPtrOutput struct{ *pulumi.OutputState }

func (LogThreatweightIpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatweightIps)(nil)).Elem()
}

func (o LogThreatweightIpsPtrOutput) ToLogThreatweightIpsPtrOutput() LogThreatweightIpsPtrOutput {
	return o
}

func (o LogThreatweightIpsPtrOutput) ToLogThreatweightIpsPtrOutputWithContext(ctx context.Context) LogThreatweightIpsPtrOutput {
	return o
}

func (o LogThreatweightIpsPtrOutput) Elem() LogThreatweightIpsOutput {
	return o.ApplyT(func(v *LogThreatweightIps) LogThreatweightIps {
		if v != nil {
			return *v
		}
		var ret LogThreatweightIps
		return ret
	}).(LogThreatweightIpsOutput)
}

// Threat weight score for IPS critical severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightIpsPtrOutput) CriticalSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightIps) *string {
		if v == nil {
			return nil
		}
		return v.CriticalSeverity
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for IPS high severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightIpsPtrOutput) HighSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightIps) *string {
		if v == nil {
			return nil
		}
		return v.HighSeverity
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for IPS info severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightIpsPtrOutput) InfoSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightIps) *string {
		if v == nil {
			return nil
		}
		return v.InfoSeverity
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for IPS low severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightIpsPtrOutput) LowSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightIps) *string {
		if v == nil {
			return nil
		}
		return v.LowSeverity
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for IPS medium severity events. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightIpsPtrOutput) MediumSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightIps) *string {
		if v == nil {
			return nil
		}
		return v.MediumSeverity
	}).(pulumi.StringPtrOutput)
}

type LogThreatweightLevel struct {
	// Critical level score value (1 - 100).
	Critical *int `pulumi:"critical"`
	// High level score value (1 - 100).
	High *int `pulumi:"high"`
	// Low level score value (1 - 100).
	Low *int `pulumi:"low"`
	// Medium level score value (1 - 100).
	Medium *int `pulumi:"medium"`
}

// LogThreatweightLevelInput is an input type that accepts LogThreatweightLevelArgs and LogThreatweightLevelOutput values.
// You can construct a concrete instance of `LogThreatweightLevelInput` via:
//
//	LogThreatweightLevelArgs{...}
type LogThreatweightLevelInput interface {
	pulumi.Input

	ToLogThreatweightLevelOutput() LogThreatweightLevelOutput
	ToLogThreatweightLevelOutputWithContext(context.Context) LogThreatweightLevelOutput
}

type LogThreatweightLevelArgs struct {
	// Critical level score value (1 - 100).
	Critical pulumi.IntPtrInput `pulumi:"critical"`
	// High level score value (1 - 100).
	High pulumi.IntPtrInput `pulumi:"high"`
	// Low level score value (1 - 100).
	Low pulumi.IntPtrInput `pulumi:"low"`
	// Medium level score value (1 - 100).
	Medium pulumi.IntPtrInput `pulumi:"medium"`
}

func (LogThreatweightLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightLevel)(nil)).Elem()
}

func (i LogThreatweightLevelArgs) ToLogThreatweightLevelOutput() LogThreatweightLevelOutput {
	return i.ToLogThreatweightLevelOutputWithContext(context.Background())
}

func (i LogThreatweightLevelArgs) ToLogThreatweightLevelOutputWithContext(ctx context.Context) LogThreatweightLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightLevelOutput)
}

func (i LogThreatweightLevelArgs) ToLogThreatweightLevelPtrOutput() LogThreatweightLevelPtrOutput {
	return i.ToLogThreatweightLevelPtrOutputWithContext(context.Background())
}

func (i LogThreatweightLevelArgs) ToLogThreatweightLevelPtrOutputWithContext(ctx context.Context) LogThreatweightLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightLevelOutput).ToLogThreatweightLevelPtrOutputWithContext(ctx)
}

// LogThreatweightLevelPtrInput is an input type that accepts LogThreatweightLevelArgs, LogThreatweightLevelPtr and LogThreatweightLevelPtrOutput values.
// You can construct a concrete instance of `LogThreatweightLevelPtrInput` via:
//
//	        LogThreatweightLevelArgs{...}
//
//	or:
//
//	        nil
type LogThreatweightLevelPtrInput interface {
	pulumi.Input

	ToLogThreatweightLevelPtrOutput() LogThreatweightLevelPtrOutput
	ToLogThreatweightLevelPtrOutputWithContext(context.Context) LogThreatweightLevelPtrOutput
}

type logThreatweightLevelPtrType LogThreatweightLevelArgs

func LogThreatweightLevelPtr(v *LogThreatweightLevelArgs) LogThreatweightLevelPtrInput {
	return (*logThreatweightLevelPtrType)(v)
}

func (*logThreatweightLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatweightLevel)(nil)).Elem()
}

func (i *logThreatweightLevelPtrType) ToLogThreatweightLevelPtrOutput() LogThreatweightLevelPtrOutput {
	return i.ToLogThreatweightLevelPtrOutputWithContext(context.Background())
}

func (i *logThreatweightLevelPtrType) ToLogThreatweightLevelPtrOutputWithContext(ctx context.Context) LogThreatweightLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightLevelPtrOutput)
}

type LogThreatweightLevelOutput struct{ *pulumi.OutputState }

func (LogThreatweightLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightLevel)(nil)).Elem()
}

func (o LogThreatweightLevelOutput) ToLogThreatweightLevelOutput() LogThreatweightLevelOutput {
	return o
}

func (o LogThreatweightLevelOutput) ToLogThreatweightLevelOutputWithContext(ctx context.Context) LogThreatweightLevelOutput {
	return o
}

func (o LogThreatweightLevelOutput) ToLogThreatweightLevelPtrOutput() LogThreatweightLevelPtrOutput {
	return o.ToLogThreatweightLevelPtrOutputWithContext(context.Background())
}

func (o LogThreatweightLevelOutput) ToLogThreatweightLevelPtrOutputWithContext(ctx context.Context) LogThreatweightLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogThreatweightLevel) *LogThreatweightLevel {
		return &v
	}).(LogThreatweightLevelPtrOutput)
}

// Critical level score value (1 - 100).
func (o LogThreatweightLevelOutput) Critical() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatweightLevel) *int { return v.Critical }).(pulumi.IntPtrOutput)
}

// High level score value (1 - 100).
func (o LogThreatweightLevelOutput) High() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatweightLevel) *int { return v.High }).(pulumi.IntPtrOutput)
}

// Low level score value (1 - 100).
func (o LogThreatweightLevelOutput) Low() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatweightLevel) *int { return v.Low }).(pulumi.IntPtrOutput)
}

// Medium level score value (1 - 100).
func (o LogThreatweightLevelOutput) Medium() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatweightLevel) *int { return v.Medium }).(pulumi.IntPtrOutput)
}

type LogThreatweightLevelPtrOutput struct{ *pulumi.OutputState }

func (LogThreatweightLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatweightLevel)(nil)).Elem()
}

func (o LogThreatweightLevelPtrOutput) ToLogThreatweightLevelPtrOutput() LogThreatweightLevelPtrOutput {
	return o
}

func (o LogThreatweightLevelPtrOutput) ToLogThreatweightLevelPtrOutputWithContext(ctx context.Context) LogThreatweightLevelPtrOutput {
	return o
}

func (o LogThreatweightLevelPtrOutput) Elem() LogThreatweightLevelOutput {
	return o.ApplyT(func(v *LogThreatweightLevel) LogThreatweightLevel {
		if v != nil {
			return *v
		}
		var ret LogThreatweightLevel
		return ret
	}).(LogThreatweightLevelOutput)
}

// Critical level score value (1 - 100).
func (o LogThreatweightLevelPtrOutput) Critical() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogThreatweightLevel) *int {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(pulumi.IntPtrOutput)
}

// High level score value (1 - 100).
func (o LogThreatweightLevelPtrOutput) High() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogThreatweightLevel) *int {
		if v == nil {
			return nil
		}
		return v.High
	}).(pulumi.IntPtrOutput)
}

// Low level score value (1 - 100).
func (o LogThreatweightLevelPtrOutput) Low() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogThreatweightLevel) *int {
		if v == nil {
			return nil
		}
		return v.Low
	}).(pulumi.IntPtrOutput)
}

// Medium level score value (1 - 100).
func (o LogThreatweightLevelPtrOutput) Medium() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogThreatweightLevel) *int {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.IntPtrOutput)
}

type LogThreatweightMalware struct {
	// Threat weight score for detected botnet connections. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	BotnetConnection *string `pulumi:"botnetConnection"`
	// Threat weight score for blocked command detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	CommandBlocked *string `pulumi:"commandBlocked"`
	// Threat weight score for virus (content disarm) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	ContentDisarm *string `pulumi:"contentDisarm"`
	// Threat weight score for virus (EMS threat feed) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	EmsThreatFeed *string `pulumi:"emsThreatFeed"`
	// Threat weight score for blocked file detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	FileBlocked *string `pulumi:"fileBlocked"`
	// Threat weight score for FortiAI-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Fortiai *string `pulumi:"fortiai"`
	// Threat weight score for FortiNDR-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Fortindr *string `pulumi:"fortindr"`
	// Threat weight score for FortiSandbox-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Fortisandbox *string `pulumi:"fortisandbox"`
	// Threat weight score for FortiSandbox high risk malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	FsaHighRisk *string `pulumi:"fsaHighRisk"`
	// Threat weight score for FortiSandbox malicious malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	FsaMalicious *string `pulumi:"fsaMalicious"`
	// Threat weight score for FortiSandbox medium risk malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	FsaMediumRisk *string `pulumi:"fsaMediumRisk"`
	// Threat weight score for virus (malware list) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	MalwareList *string `pulumi:"malwareList"`
	// Threat weight score for mimefragmented detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Mimefragmented *string `pulumi:"mimefragmented"`
	// Threat weight score for oversized file detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Oversized *string `pulumi:"oversized"`
	// Threat weight score for switch proto detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	SwitchProto *string `pulumi:"switchProto"`
	// Threat weight score for virus (filetype executable) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	VirusFileTypeExecutable *string `pulumi:"virusFileTypeExecutable"`
	// Threat weight score for virus (infected) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	VirusInfected *string `pulumi:"virusInfected"`
	// Threat weight score for virus (outbreak prevention) event. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	VirusOutbreakPrevention *string `pulumi:"virusOutbreakPrevention"`
	// Threat weight score for virus (scan error) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	VirusScanError *string `pulumi:"virusScanError"`
}

// LogThreatweightMalwareInput is an input type that accepts LogThreatweightMalwareArgs and LogThreatweightMalwareOutput values.
// You can construct a concrete instance of `LogThreatweightMalwareInput` via:
//
//	LogThreatweightMalwareArgs{...}
type LogThreatweightMalwareInput interface {
	pulumi.Input

	ToLogThreatweightMalwareOutput() LogThreatweightMalwareOutput
	ToLogThreatweightMalwareOutputWithContext(context.Context) LogThreatweightMalwareOutput
}

type LogThreatweightMalwareArgs struct {
	// Threat weight score for detected botnet connections. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	BotnetConnection pulumi.StringPtrInput `pulumi:"botnetConnection"`
	// Threat weight score for blocked command detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	CommandBlocked pulumi.StringPtrInput `pulumi:"commandBlocked"`
	// Threat weight score for virus (content disarm) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	ContentDisarm pulumi.StringPtrInput `pulumi:"contentDisarm"`
	// Threat weight score for virus (EMS threat feed) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	EmsThreatFeed pulumi.StringPtrInput `pulumi:"emsThreatFeed"`
	// Threat weight score for blocked file detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	FileBlocked pulumi.StringPtrInput `pulumi:"fileBlocked"`
	// Threat weight score for FortiAI-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Fortiai pulumi.StringPtrInput `pulumi:"fortiai"`
	// Threat weight score for FortiNDR-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Fortindr pulumi.StringPtrInput `pulumi:"fortindr"`
	// Threat weight score for FortiSandbox-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Fortisandbox pulumi.StringPtrInput `pulumi:"fortisandbox"`
	// Threat weight score for FortiSandbox high risk malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	FsaHighRisk pulumi.StringPtrInput `pulumi:"fsaHighRisk"`
	// Threat weight score for FortiSandbox malicious malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	FsaMalicious pulumi.StringPtrInput `pulumi:"fsaMalicious"`
	// Threat weight score for FortiSandbox medium risk malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	FsaMediumRisk pulumi.StringPtrInput `pulumi:"fsaMediumRisk"`
	// Threat weight score for virus (malware list) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	MalwareList pulumi.StringPtrInput `pulumi:"malwareList"`
	// Threat weight score for mimefragmented detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Mimefragmented pulumi.StringPtrInput `pulumi:"mimefragmented"`
	// Threat weight score for oversized file detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Oversized pulumi.StringPtrInput `pulumi:"oversized"`
	// Threat weight score for switch proto detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	SwitchProto pulumi.StringPtrInput `pulumi:"switchProto"`
	// Threat weight score for virus (filetype executable) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	VirusFileTypeExecutable pulumi.StringPtrInput `pulumi:"virusFileTypeExecutable"`
	// Threat weight score for virus (infected) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	VirusInfected pulumi.StringPtrInput `pulumi:"virusInfected"`
	// Threat weight score for virus (outbreak prevention) event. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	VirusOutbreakPrevention pulumi.StringPtrInput `pulumi:"virusOutbreakPrevention"`
	// Threat weight score for virus (scan error) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	VirusScanError pulumi.StringPtrInput `pulumi:"virusScanError"`
}

func (LogThreatweightMalwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightMalware)(nil)).Elem()
}

func (i LogThreatweightMalwareArgs) ToLogThreatweightMalwareOutput() LogThreatweightMalwareOutput {
	return i.ToLogThreatweightMalwareOutputWithContext(context.Background())
}

func (i LogThreatweightMalwareArgs) ToLogThreatweightMalwareOutputWithContext(ctx context.Context) LogThreatweightMalwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightMalwareOutput)
}

func (i LogThreatweightMalwareArgs) ToLogThreatweightMalwarePtrOutput() LogThreatweightMalwarePtrOutput {
	return i.ToLogThreatweightMalwarePtrOutputWithContext(context.Background())
}

func (i LogThreatweightMalwareArgs) ToLogThreatweightMalwarePtrOutputWithContext(ctx context.Context) LogThreatweightMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightMalwareOutput).ToLogThreatweightMalwarePtrOutputWithContext(ctx)
}

// LogThreatweightMalwarePtrInput is an input type that accepts LogThreatweightMalwareArgs, LogThreatweightMalwarePtr and LogThreatweightMalwarePtrOutput values.
// You can construct a concrete instance of `LogThreatweightMalwarePtrInput` via:
//
//	        LogThreatweightMalwareArgs{...}
//
//	or:
//
//	        nil
type LogThreatweightMalwarePtrInput interface {
	pulumi.Input

	ToLogThreatweightMalwarePtrOutput() LogThreatweightMalwarePtrOutput
	ToLogThreatweightMalwarePtrOutputWithContext(context.Context) LogThreatweightMalwarePtrOutput
}

type logThreatweightMalwarePtrType LogThreatweightMalwareArgs

func LogThreatweightMalwarePtr(v *LogThreatweightMalwareArgs) LogThreatweightMalwarePtrInput {
	return (*logThreatweightMalwarePtrType)(v)
}

func (*logThreatweightMalwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatweightMalware)(nil)).Elem()
}

func (i *logThreatweightMalwarePtrType) ToLogThreatweightMalwarePtrOutput() LogThreatweightMalwarePtrOutput {
	return i.ToLogThreatweightMalwarePtrOutputWithContext(context.Background())
}

func (i *logThreatweightMalwarePtrType) ToLogThreatweightMalwarePtrOutputWithContext(ctx context.Context) LogThreatweightMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightMalwarePtrOutput)
}

type LogThreatweightMalwareOutput struct{ *pulumi.OutputState }

func (LogThreatweightMalwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightMalware)(nil)).Elem()
}

func (o LogThreatweightMalwareOutput) ToLogThreatweightMalwareOutput() LogThreatweightMalwareOutput {
	return o
}

func (o LogThreatweightMalwareOutput) ToLogThreatweightMalwareOutputWithContext(ctx context.Context) LogThreatweightMalwareOutput {
	return o
}

func (o LogThreatweightMalwareOutput) ToLogThreatweightMalwarePtrOutput() LogThreatweightMalwarePtrOutput {
	return o.ToLogThreatweightMalwarePtrOutputWithContext(context.Background())
}

func (o LogThreatweightMalwareOutput) ToLogThreatweightMalwarePtrOutputWithContext(ctx context.Context) LogThreatweightMalwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogThreatweightMalware) *LogThreatweightMalware {
		return &v
	}).(LogThreatweightMalwarePtrOutput)
}

// Threat weight score for detected botnet connections. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) BotnetConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.BotnetConnection }).(pulumi.StringPtrOutput)
}

// Threat weight score for blocked command detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) CommandBlocked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.CommandBlocked }).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (content disarm) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.ContentDisarm }).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (EMS threat feed) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) EmsThreatFeed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.EmsThreatFeed }).(pulumi.StringPtrOutput)
}

// Threat weight score for blocked file detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) FileBlocked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.FileBlocked }).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiAI-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiNDR-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiSandbox-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiSandbox high risk malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) FsaHighRisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.FsaHighRisk }).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiSandbox malicious malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) FsaMalicious() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.FsaMalicious }).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiSandbox medium risk malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) FsaMediumRisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.FsaMediumRisk }).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (malware list) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) MalwareList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.MalwareList }).(pulumi.StringPtrOutput)
}

// Threat weight score for mimefragmented detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) Mimefragmented() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.Mimefragmented }).(pulumi.StringPtrOutput)
}

// Threat weight score for oversized file detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) Oversized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.Oversized }).(pulumi.StringPtrOutput)
}

// Threat weight score for switch proto detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) SwitchProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.SwitchProto }).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (filetype executable) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) VirusFileTypeExecutable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.VirusFileTypeExecutable }).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (infected) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) VirusInfected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.VirusInfected }).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (outbreak prevention) event. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) VirusOutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.VirusOutbreakPrevention }).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (scan error) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwareOutput) VirusScanError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightMalware) *string { return v.VirusScanError }).(pulumi.StringPtrOutput)
}

type LogThreatweightMalwarePtrOutput struct{ *pulumi.OutputState }

func (LogThreatweightMalwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatweightMalware)(nil)).Elem()
}

func (o LogThreatweightMalwarePtrOutput) ToLogThreatweightMalwarePtrOutput() LogThreatweightMalwarePtrOutput {
	return o
}

func (o LogThreatweightMalwarePtrOutput) ToLogThreatweightMalwarePtrOutputWithContext(ctx context.Context) LogThreatweightMalwarePtrOutput {
	return o
}

func (o LogThreatweightMalwarePtrOutput) Elem() LogThreatweightMalwareOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) LogThreatweightMalware {
		if v != nil {
			return *v
		}
		var ret LogThreatweightMalware
		return ret
	}).(LogThreatweightMalwareOutput)
}

// Threat weight score for detected botnet connections. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) BotnetConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.BotnetConnection
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for blocked command detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) CommandBlocked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.CommandBlocked
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (content disarm) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.ContentDisarm
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (EMS threat feed) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) EmsThreatFeed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.EmsThreatFeed
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for blocked file detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) FileBlocked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.FileBlocked
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiAI-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiNDR-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiSandbox-detected virus. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiSandbox high risk malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) FsaHighRisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.FsaHighRisk
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiSandbox malicious malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) FsaMalicious() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.FsaMalicious
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for FortiSandbox medium risk malware detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) FsaMediumRisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.FsaMediumRisk
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (malware list) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) MalwareList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.MalwareList
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for mimefragmented detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) Mimefragmented() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.Mimefragmented
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for oversized file detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) Oversized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.Oversized
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for switch proto detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) SwitchProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.SwitchProto
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (filetype executable) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) VirusFileTypeExecutable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.VirusFileTypeExecutable
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (infected) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) VirusInfected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.VirusInfected
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (outbreak prevention) event. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) VirusOutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.VirusOutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

// Threat weight score for virus (scan error) detected. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightMalwarePtrOutput) VirusScanError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatweightMalware) *string {
		if v == nil {
			return nil
		}
		return v.VirusScanError
	}).(pulumi.StringPtrOutput)
}

type LogThreatweightWeb struct {
	// Threat weight score for web category filtering matches.
	Category *int `pulumi:"category"`
	// Entry ID.
	Id *int `pulumi:"id"`
	// Threat weight score for web category filtering matches. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Level *string `pulumi:"level"`
}

// LogThreatweightWebInput is an input type that accepts LogThreatweightWebArgs and LogThreatweightWebOutput values.
// You can construct a concrete instance of `LogThreatweightWebInput` via:
//
//	LogThreatweightWebArgs{...}
type LogThreatweightWebInput interface {
	pulumi.Input

	ToLogThreatweightWebOutput() LogThreatweightWebOutput
	ToLogThreatweightWebOutputWithContext(context.Context) LogThreatweightWebOutput
}

type LogThreatweightWebArgs struct {
	// Threat weight score for web category filtering matches.
	Category pulumi.IntPtrInput `pulumi:"category"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Threat weight score for web category filtering matches. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
	Level pulumi.StringPtrInput `pulumi:"level"`
}

func (LogThreatweightWebArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightWeb)(nil)).Elem()
}

func (i LogThreatweightWebArgs) ToLogThreatweightWebOutput() LogThreatweightWebOutput {
	return i.ToLogThreatweightWebOutputWithContext(context.Background())
}

func (i LogThreatweightWebArgs) ToLogThreatweightWebOutputWithContext(ctx context.Context) LogThreatweightWebOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightWebOutput)
}

// LogThreatweightWebArrayInput is an input type that accepts LogThreatweightWebArray and LogThreatweightWebArrayOutput values.
// You can construct a concrete instance of `LogThreatweightWebArrayInput` via:
//
//	LogThreatweightWebArray{ LogThreatweightWebArgs{...} }
type LogThreatweightWebArrayInput interface {
	pulumi.Input

	ToLogThreatweightWebArrayOutput() LogThreatweightWebArrayOutput
	ToLogThreatweightWebArrayOutputWithContext(context.Context) LogThreatweightWebArrayOutput
}

type LogThreatweightWebArray []LogThreatweightWebInput

func (LogThreatweightWebArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatweightWeb)(nil)).Elem()
}

func (i LogThreatweightWebArray) ToLogThreatweightWebArrayOutput() LogThreatweightWebArrayOutput {
	return i.ToLogThreatweightWebArrayOutputWithContext(context.Background())
}

func (i LogThreatweightWebArray) ToLogThreatweightWebArrayOutputWithContext(ctx context.Context) LogThreatweightWebArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatweightWebArrayOutput)
}

type LogThreatweightWebOutput struct{ *pulumi.OutputState }

func (LogThreatweightWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatweightWeb)(nil)).Elem()
}

func (o LogThreatweightWebOutput) ToLogThreatweightWebOutput() LogThreatweightWebOutput {
	return o
}

func (o LogThreatweightWebOutput) ToLogThreatweightWebOutputWithContext(ctx context.Context) LogThreatweightWebOutput {
	return o
}

// Threat weight score for web category filtering matches.
func (o LogThreatweightWebOutput) Category() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatweightWeb) *int { return v.Category }).(pulumi.IntPtrOutput)
}

// Entry ID.
func (o LogThreatweightWebOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatweightWeb) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Threat weight score for web category filtering matches. Valid values: `disable`, `low`, `medium`, `high`, `critical`.
func (o LogThreatweightWebOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatweightWeb) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type LogThreatweightWebArrayOutput struct{ *pulumi.OutputState }

func (LogThreatweightWebArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatweightWeb)(nil)).Elem()
}

func (o LogThreatweightWebArrayOutput) ToLogThreatweightWebArrayOutput() LogThreatweightWebArrayOutput {
	return o
}

func (o LogThreatweightWebArrayOutput) ToLogThreatweightWebArrayOutputWithContext(ctx context.Context) LogThreatweightWebArrayOutput {
	return o
}

func (o LogThreatweightWebArrayOutput) Index(i pulumi.IntInput) LogThreatweightWebOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogThreatweightWeb {
		return vs[0].([]LogThreatweightWeb)[vs[1].(int)]
	}).(LogThreatweightWebOutput)
}

type LogdiskFilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogdiskFilterFreeStyleInput is an input type that accepts LogdiskFilterFreeStyleArgs and LogdiskFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogdiskFilterFreeStyleInput` via:
//
//	LogdiskFilterFreeStyleArgs{...}
type LogdiskFilterFreeStyleInput interface {
	pulumi.Input

	ToLogdiskFilterFreeStyleOutput() LogdiskFilterFreeStyleOutput
	ToLogdiskFilterFreeStyleOutputWithContext(context.Context) LogdiskFilterFreeStyleOutput
}

type LogdiskFilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogdiskFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogdiskFilterFreeStyle)(nil)).Elem()
}

func (i LogdiskFilterFreeStyleArgs) ToLogdiskFilterFreeStyleOutput() LogdiskFilterFreeStyleOutput {
	return i.ToLogdiskFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogdiskFilterFreeStyleArgs) ToLogdiskFilterFreeStyleOutputWithContext(ctx context.Context) LogdiskFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogdiskFilterFreeStyleOutput)
}

// LogdiskFilterFreeStyleArrayInput is an input type that accepts LogdiskFilterFreeStyleArray and LogdiskFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogdiskFilterFreeStyleArrayInput` via:
//
//	LogdiskFilterFreeStyleArray{ LogdiskFilterFreeStyleArgs{...} }
type LogdiskFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogdiskFilterFreeStyleArrayOutput() LogdiskFilterFreeStyleArrayOutput
	ToLogdiskFilterFreeStyleArrayOutputWithContext(context.Context) LogdiskFilterFreeStyleArrayOutput
}

type LogdiskFilterFreeStyleArray []LogdiskFilterFreeStyleInput

func (LogdiskFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogdiskFilterFreeStyle)(nil)).Elem()
}

func (i LogdiskFilterFreeStyleArray) ToLogdiskFilterFreeStyleArrayOutput() LogdiskFilterFreeStyleArrayOutput {
	return i.ToLogdiskFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogdiskFilterFreeStyleArray) ToLogdiskFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogdiskFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogdiskFilterFreeStyleArrayOutput)
}

type LogdiskFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogdiskFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogdiskFilterFreeStyle)(nil)).Elem()
}

func (o LogdiskFilterFreeStyleOutput) ToLogdiskFilterFreeStyleOutput() LogdiskFilterFreeStyleOutput {
	return o
}

func (o LogdiskFilterFreeStyleOutput) ToLogdiskFilterFreeStyleOutputWithContext(ctx context.Context) LogdiskFilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogdiskFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogdiskFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogdiskFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogdiskFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogdiskFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogdiskFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogdiskFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogdiskFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogdiskFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogdiskFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogdiskFilterFreeStyle)(nil)).Elem()
}

func (o LogdiskFilterFreeStyleArrayOutput) ToLogdiskFilterFreeStyleArrayOutput() LogdiskFilterFreeStyleArrayOutput {
	return o
}

func (o LogdiskFilterFreeStyleArrayOutput) ToLogdiskFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogdiskFilterFreeStyleArrayOutput {
	return o
}

func (o LogdiskFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogdiskFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogdiskFilterFreeStyle {
		return vs[0].([]LogdiskFilterFreeStyle)[vs[1].(int)]
	}).(LogdiskFilterFreeStyleOutput)
}

type Logfortianalyzer2FilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// Logfortianalyzer2FilterFreeStyleInput is an input type that accepts Logfortianalyzer2FilterFreeStyleArgs and Logfortianalyzer2FilterFreeStyleOutput values.
// You can construct a concrete instance of `Logfortianalyzer2FilterFreeStyleInput` via:
//
//	Logfortianalyzer2FilterFreeStyleArgs{...}
type Logfortianalyzer2FilterFreeStyleInput interface {
	pulumi.Input

	ToLogfortianalyzer2FilterFreeStyleOutput() Logfortianalyzer2FilterFreeStyleOutput
	ToLogfortianalyzer2FilterFreeStyleOutputWithContext(context.Context) Logfortianalyzer2FilterFreeStyleOutput
}

type Logfortianalyzer2FilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Logfortianalyzer2FilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer2FilterFreeStyle)(nil)).Elem()
}

func (i Logfortianalyzer2FilterFreeStyleArgs) ToLogfortianalyzer2FilterFreeStyleOutput() Logfortianalyzer2FilterFreeStyleOutput {
	return i.ToLogfortianalyzer2FilterFreeStyleOutputWithContext(context.Background())
}

func (i Logfortianalyzer2FilterFreeStyleArgs) ToLogfortianalyzer2FilterFreeStyleOutputWithContext(ctx context.Context) Logfortianalyzer2FilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer2FilterFreeStyleOutput)
}

// Logfortianalyzer2FilterFreeStyleArrayInput is an input type that accepts Logfortianalyzer2FilterFreeStyleArray and Logfortianalyzer2FilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `Logfortianalyzer2FilterFreeStyleArrayInput` via:
//
//	Logfortianalyzer2FilterFreeStyleArray{ Logfortianalyzer2FilterFreeStyleArgs{...} }
type Logfortianalyzer2FilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogfortianalyzer2FilterFreeStyleArrayOutput() Logfortianalyzer2FilterFreeStyleArrayOutput
	ToLogfortianalyzer2FilterFreeStyleArrayOutputWithContext(context.Context) Logfortianalyzer2FilterFreeStyleArrayOutput
}

type Logfortianalyzer2FilterFreeStyleArray []Logfortianalyzer2FilterFreeStyleInput

func (Logfortianalyzer2FilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer2FilterFreeStyle)(nil)).Elem()
}

func (i Logfortianalyzer2FilterFreeStyleArray) ToLogfortianalyzer2FilterFreeStyleArrayOutput() Logfortianalyzer2FilterFreeStyleArrayOutput {
	return i.ToLogfortianalyzer2FilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i Logfortianalyzer2FilterFreeStyleArray) ToLogfortianalyzer2FilterFreeStyleArrayOutputWithContext(ctx context.Context) Logfortianalyzer2FilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer2FilterFreeStyleArrayOutput)
}

type Logfortianalyzer2FilterFreeStyleOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer2FilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer2FilterFreeStyle)(nil)).Elem()
}

func (o Logfortianalyzer2FilterFreeStyleOutput) ToLogfortianalyzer2FilterFreeStyleOutput() Logfortianalyzer2FilterFreeStyleOutput {
	return o
}

func (o Logfortianalyzer2FilterFreeStyleOutput) ToLogfortianalyzer2FilterFreeStyleOutputWithContext(ctx context.Context) Logfortianalyzer2FilterFreeStyleOutput {
	return o
}

// Log category.
func (o Logfortianalyzer2FilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer2FilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o Logfortianalyzer2FilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer2FilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o Logfortianalyzer2FilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer2FilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logfortianalyzer2FilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer2FilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Logfortianalyzer2FilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer2FilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer2FilterFreeStyle)(nil)).Elem()
}

func (o Logfortianalyzer2FilterFreeStyleArrayOutput) ToLogfortianalyzer2FilterFreeStyleArrayOutput() Logfortianalyzer2FilterFreeStyleArrayOutput {
	return o
}

func (o Logfortianalyzer2FilterFreeStyleArrayOutput) ToLogfortianalyzer2FilterFreeStyleArrayOutputWithContext(ctx context.Context) Logfortianalyzer2FilterFreeStyleArrayOutput {
	return o
}

func (o Logfortianalyzer2FilterFreeStyleArrayOutput) Index(i pulumi.IntInput) Logfortianalyzer2FilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logfortianalyzer2FilterFreeStyle {
		return vs[0].([]Logfortianalyzer2FilterFreeStyle)[vs[1].(int)]
	}).(Logfortianalyzer2FilterFreeStyleOutput)
}

type Logfortianalyzer2OverridefilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// Logfortianalyzer2OverridefilterFreeStyleInput is an input type that accepts Logfortianalyzer2OverridefilterFreeStyleArgs and Logfortianalyzer2OverridefilterFreeStyleOutput values.
// You can construct a concrete instance of `Logfortianalyzer2OverridefilterFreeStyleInput` via:
//
//	Logfortianalyzer2OverridefilterFreeStyleArgs{...}
type Logfortianalyzer2OverridefilterFreeStyleInput interface {
	pulumi.Input

	ToLogfortianalyzer2OverridefilterFreeStyleOutput() Logfortianalyzer2OverridefilterFreeStyleOutput
	ToLogfortianalyzer2OverridefilterFreeStyleOutputWithContext(context.Context) Logfortianalyzer2OverridefilterFreeStyleOutput
}

type Logfortianalyzer2OverridefilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Logfortianalyzer2OverridefilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer2OverridefilterFreeStyle)(nil)).Elem()
}

func (i Logfortianalyzer2OverridefilterFreeStyleArgs) ToLogfortianalyzer2OverridefilterFreeStyleOutput() Logfortianalyzer2OverridefilterFreeStyleOutput {
	return i.ToLogfortianalyzer2OverridefilterFreeStyleOutputWithContext(context.Background())
}

func (i Logfortianalyzer2OverridefilterFreeStyleArgs) ToLogfortianalyzer2OverridefilterFreeStyleOutputWithContext(ctx context.Context) Logfortianalyzer2OverridefilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer2OverridefilterFreeStyleOutput)
}

// Logfortianalyzer2OverridefilterFreeStyleArrayInput is an input type that accepts Logfortianalyzer2OverridefilterFreeStyleArray and Logfortianalyzer2OverridefilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `Logfortianalyzer2OverridefilterFreeStyleArrayInput` via:
//
//	Logfortianalyzer2OverridefilterFreeStyleArray{ Logfortianalyzer2OverridefilterFreeStyleArgs{...} }
type Logfortianalyzer2OverridefilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogfortianalyzer2OverridefilterFreeStyleArrayOutput() Logfortianalyzer2OverridefilterFreeStyleArrayOutput
	ToLogfortianalyzer2OverridefilterFreeStyleArrayOutputWithContext(context.Context) Logfortianalyzer2OverridefilterFreeStyleArrayOutput
}

type Logfortianalyzer2OverridefilterFreeStyleArray []Logfortianalyzer2OverridefilterFreeStyleInput

func (Logfortianalyzer2OverridefilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer2OverridefilterFreeStyle)(nil)).Elem()
}

func (i Logfortianalyzer2OverridefilterFreeStyleArray) ToLogfortianalyzer2OverridefilterFreeStyleArrayOutput() Logfortianalyzer2OverridefilterFreeStyleArrayOutput {
	return i.ToLogfortianalyzer2OverridefilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i Logfortianalyzer2OverridefilterFreeStyleArray) ToLogfortianalyzer2OverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) Logfortianalyzer2OverridefilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer2OverridefilterFreeStyleArrayOutput)
}

type Logfortianalyzer2OverridefilterFreeStyleOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer2OverridefilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer2OverridefilterFreeStyle)(nil)).Elem()
}

func (o Logfortianalyzer2OverridefilterFreeStyleOutput) ToLogfortianalyzer2OverridefilterFreeStyleOutput() Logfortianalyzer2OverridefilterFreeStyleOutput {
	return o
}

func (o Logfortianalyzer2OverridefilterFreeStyleOutput) ToLogfortianalyzer2OverridefilterFreeStyleOutputWithContext(ctx context.Context) Logfortianalyzer2OverridefilterFreeStyleOutput {
	return o
}

// Log category.
func (o Logfortianalyzer2OverridefilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer2OverridefilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o Logfortianalyzer2OverridefilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer2OverridefilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o Logfortianalyzer2OverridefilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer2OverridefilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logfortianalyzer2OverridefilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer2OverridefilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Logfortianalyzer2OverridefilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer2OverridefilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer2OverridefilterFreeStyle)(nil)).Elem()
}

func (o Logfortianalyzer2OverridefilterFreeStyleArrayOutput) ToLogfortianalyzer2OverridefilterFreeStyleArrayOutput() Logfortianalyzer2OverridefilterFreeStyleArrayOutput {
	return o
}

func (o Logfortianalyzer2OverridefilterFreeStyleArrayOutput) ToLogfortianalyzer2OverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) Logfortianalyzer2OverridefilterFreeStyleArrayOutput {
	return o
}

func (o Logfortianalyzer2OverridefilterFreeStyleArrayOutput) Index(i pulumi.IntInput) Logfortianalyzer2OverridefilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logfortianalyzer2OverridefilterFreeStyle {
		return vs[0].([]Logfortianalyzer2OverridefilterFreeStyle)[vs[1].(int)]
	}).(Logfortianalyzer2OverridefilterFreeStyleOutput)
}

type Logfortianalyzer2OverridesettingSerial struct {
	// Serial Number.
	Name *string `pulumi:"name"`
}

// Logfortianalyzer2OverridesettingSerialInput is an input type that accepts Logfortianalyzer2OverridesettingSerialArgs and Logfortianalyzer2OverridesettingSerialOutput values.
// You can construct a concrete instance of `Logfortianalyzer2OverridesettingSerialInput` via:
//
//	Logfortianalyzer2OverridesettingSerialArgs{...}
type Logfortianalyzer2OverridesettingSerialInput interface {
	pulumi.Input

	ToLogfortianalyzer2OverridesettingSerialOutput() Logfortianalyzer2OverridesettingSerialOutput
	ToLogfortianalyzer2OverridesettingSerialOutputWithContext(context.Context) Logfortianalyzer2OverridesettingSerialOutput
}

type Logfortianalyzer2OverridesettingSerialArgs struct {
	// Serial Number.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Logfortianalyzer2OverridesettingSerialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer2OverridesettingSerial)(nil)).Elem()
}

func (i Logfortianalyzer2OverridesettingSerialArgs) ToLogfortianalyzer2OverridesettingSerialOutput() Logfortianalyzer2OverridesettingSerialOutput {
	return i.ToLogfortianalyzer2OverridesettingSerialOutputWithContext(context.Background())
}

func (i Logfortianalyzer2OverridesettingSerialArgs) ToLogfortianalyzer2OverridesettingSerialOutputWithContext(ctx context.Context) Logfortianalyzer2OverridesettingSerialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer2OverridesettingSerialOutput)
}

// Logfortianalyzer2OverridesettingSerialArrayInput is an input type that accepts Logfortianalyzer2OverridesettingSerialArray and Logfortianalyzer2OverridesettingSerialArrayOutput values.
// You can construct a concrete instance of `Logfortianalyzer2OverridesettingSerialArrayInput` via:
//
//	Logfortianalyzer2OverridesettingSerialArray{ Logfortianalyzer2OverridesettingSerialArgs{...} }
type Logfortianalyzer2OverridesettingSerialArrayInput interface {
	pulumi.Input

	ToLogfortianalyzer2OverridesettingSerialArrayOutput() Logfortianalyzer2OverridesettingSerialArrayOutput
	ToLogfortianalyzer2OverridesettingSerialArrayOutputWithContext(context.Context) Logfortianalyzer2OverridesettingSerialArrayOutput
}

type Logfortianalyzer2OverridesettingSerialArray []Logfortianalyzer2OverridesettingSerialInput

func (Logfortianalyzer2OverridesettingSerialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer2OverridesettingSerial)(nil)).Elem()
}

func (i Logfortianalyzer2OverridesettingSerialArray) ToLogfortianalyzer2OverridesettingSerialArrayOutput() Logfortianalyzer2OverridesettingSerialArrayOutput {
	return i.ToLogfortianalyzer2OverridesettingSerialArrayOutputWithContext(context.Background())
}

func (i Logfortianalyzer2OverridesettingSerialArray) ToLogfortianalyzer2OverridesettingSerialArrayOutputWithContext(ctx context.Context) Logfortianalyzer2OverridesettingSerialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer2OverridesettingSerialArrayOutput)
}

type Logfortianalyzer2OverridesettingSerialOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer2OverridesettingSerialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer2OverridesettingSerial)(nil)).Elem()
}

func (o Logfortianalyzer2OverridesettingSerialOutput) ToLogfortianalyzer2OverridesettingSerialOutput() Logfortianalyzer2OverridesettingSerialOutput {
	return o
}

func (o Logfortianalyzer2OverridesettingSerialOutput) ToLogfortianalyzer2OverridesettingSerialOutputWithContext(ctx context.Context) Logfortianalyzer2OverridesettingSerialOutput {
	return o
}

// Serial Number.
func (o Logfortianalyzer2OverridesettingSerialOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer2OverridesettingSerial) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Logfortianalyzer2OverridesettingSerialArrayOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer2OverridesettingSerialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer2OverridesettingSerial)(nil)).Elem()
}

func (o Logfortianalyzer2OverridesettingSerialArrayOutput) ToLogfortianalyzer2OverridesettingSerialArrayOutput() Logfortianalyzer2OverridesettingSerialArrayOutput {
	return o
}

func (o Logfortianalyzer2OverridesettingSerialArrayOutput) ToLogfortianalyzer2OverridesettingSerialArrayOutputWithContext(ctx context.Context) Logfortianalyzer2OverridesettingSerialArrayOutput {
	return o
}

func (o Logfortianalyzer2OverridesettingSerialArrayOutput) Index(i pulumi.IntInput) Logfortianalyzer2OverridesettingSerialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logfortianalyzer2OverridesettingSerial {
		return vs[0].([]Logfortianalyzer2OverridesettingSerial)[vs[1].(int)]
	}).(Logfortianalyzer2OverridesettingSerialOutput)
}

type Logfortianalyzer2SettingSerial struct {
	// Serial Number.
	Name *string `pulumi:"name"`
}

// Logfortianalyzer2SettingSerialInput is an input type that accepts Logfortianalyzer2SettingSerialArgs and Logfortianalyzer2SettingSerialOutput values.
// You can construct a concrete instance of `Logfortianalyzer2SettingSerialInput` via:
//
//	Logfortianalyzer2SettingSerialArgs{...}
type Logfortianalyzer2SettingSerialInput interface {
	pulumi.Input

	ToLogfortianalyzer2SettingSerialOutput() Logfortianalyzer2SettingSerialOutput
	ToLogfortianalyzer2SettingSerialOutputWithContext(context.Context) Logfortianalyzer2SettingSerialOutput
}

type Logfortianalyzer2SettingSerialArgs struct {
	// Serial Number.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Logfortianalyzer2SettingSerialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer2SettingSerial)(nil)).Elem()
}

func (i Logfortianalyzer2SettingSerialArgs) ToLogfortianalyzer2SettingSerialOutput() Logfortianalyzer2SettingSerialOutput {
	return i.ToLogfortianalyzer2SettingSerialOutputWithContext(context.Background())
}

func (i Logfortianalyzer2SettingSerialArgs) ToLogfortianalyzer2SettingSerialOutputWithContext(ctx context.Context) Logfortianalyzer2SettingSerialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer2SettingSerialOutput)
}

// Logfortianalyzer2SettingSerialArrayInput is an input type that accepts Logfortianalyzer2SettingSerialArray and Logfortianalyzer2SettingSerialArrayOutput values.
// You can construct a concrete instance of `Logfortianalyzer2SettingSerialArrayInput` via:
//
//	Logfortianalyzer2SettingSerialArray{ Logfortianalyzer2SettingSerialArgs{...} }
type Logfortianalyzer2SettingSerialArrayInput interface {
	pulumi.Input

	ToLogfortianalyzer2SettingSerialArrayOutput() Logfortianalyzer2SettingSerialArrayOutput
	ToLogfortianalyzer2SettingSerialArrayOutputWithContext(context.Context) Logfortianalyzer2SettingSerialArrayOutput
}

type Logfortianalyzer2SettingSerialArray []Logfortianalyzer2SettingSerialInput

func (Logfortianalyzer2SettingSerialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer2SettingSerial)(nil)).Elem()
}

func (i Logfortianalyzer2SettingSerialArray) ToLogfortianalyzer2SettingSerialArrayOutput() Logfortianalyzer2SettingSerialArrayOutput {
	return i.ToLogfortianalyzer2SettingSerialArrayOutputWithContext(context.Background())
}

func (i Logfortianalyzer2SettingSerialArray) ToLogfortianalyzer2SettingSerialArrayOutputWithContext(ctx context.Context) Logfortianalyzer2SettingSerialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer2SettingSerialArrayOutput)
}

type Logfortianalyzer2SettingSerialOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer2SettingSerialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer2SettingSerial)(nil)).Elem()
}

func (o Logfortianalyzer2SettingSerialOutput) ToLogfortianalyzer2SettingSerialOutput() Logfortianalyzer2SettingSerialOutput {
	return o
}

func (o Logfortianalyzer2SettingSerialOutput) ToLogfortianalyzer2SettingSerialOutputWithContext(ctx context.Context) Logfortianalyzer2SettingSerialOutput {
	return o
}

// Serial Number.
func (o Logfortianalyzer2SettingSerialOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer2SettingSerial) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Logfortianalyzer2SettingSerialArrayOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer2SettingSerialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer2SettingSerial)(nil)).Elem()
}

func (o Logfortianalyzer2SettingSerialArrayOutput) ToLogfortianalyzer2SettingSerialArrayOutput() Logfortianalyzer2SettingSerialArrayOutput {
	return o
}

func (o Logfortianalyzer2SettingSerialArrayOutput) ToLogfortianalyzer2SettingSerialArrayOutputWithContext(ctx context.Context) Logfortianalyzer2SettingSerialArrayOutput {
	return o
}

func (o Logfortianalyzer2SettingSerialArrayOutput) Index(i pulumi.IntInput) Logfortianalyzer2SettingSerialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logfortianalyzer2SettingSerial {
		return vs[0].([]Logfortianalyzer2SettingSerial)[vs[1].(int)]
	}).(Logfortianalyzer2SettingSerialOutput)
}

type Logfortianalyzer3FilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// Logfortianalyzer3FilterFreeStyleInput is an input type that accepts Logfortianalyzer3FilterFreeStyleArgs and Logfortianalyzer3FilterFreeStyleOutput values.
// You can construct a concrete instance of `Logfortianalyzer3FilterFreeStyleInput` via:
//
//	Logfortianalyzer3FilterFreeStyleArgs{...}
type Logfortianalyzer3FilterFreeStyleInput interface {
	pulumi.Input

	ToLogfortianalyzer3FilterFreeStyleOutput() Logfortianalyzer3FilterFreeStyleOutput
	ToLogfortianalyzer3FilterFreeStyleOutputWithContext(context.Context) Logfortianalyzer3FilterFreeStyleOutput
}

type Logfortianalyzer3FilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Logfortianalyzer3FilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer3FilterFreeStyle)(nil)).Elem()
}

func (i Logfortianalyzer3FilterFreeStyleArgs) ToLogfortianalyzer3FilterFreeStyleOutput() Logfortianalyzer3FilterFreeStyleOutput {
	return i.ToLogfortianalyzer3FilterFreeStyleOutputWithContext(context.Background())
}

func (i Logfortianalyzer3FilterFreeStyleArgs) ToLogfortianalyzer3FilterFreeStyleOutputWithContext(ctx context.Context) Logfortianalyzer3FilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3FilterFreeStyleOutput)
}

// Logfortianalyzer3FilterFreeStyleArrayInput is an input type that accepts Logfortianalyzer3FilterFreeStyleArray and Logfortianalyzer3FilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `Logfortianalyzer3FilterFreeStyleArrayInput` via:
//
//	Logfortianalyzer3FilterFreeStyleArray{ Logfortianalyzer3FilterFreeStyleArgs{...} }
type Logfortianalyzer3FilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogfortianalyzer3FilterFreeStyleArrayOutput() Logfortianalyzer3FilterFreeStyleArrayOutput
	ToLogfortianalyzer3FilterFreeStyleArrayOutputWithContext(context.Context) Logfortianalyzer3FilterFreeStyleArrayOutput
}

type Logfortianalyzer3FilterFreeStyleArray []Logfortianalyzer3FilterFreeStyleInput

func (Logfortianalyzer3FilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer3FilterFreeStyle)(nil)).Elem()
}

func (i Logfortianalyzer3FilterFreeStyleArray) ToLogfortianalyzer3FilterFreeStyleArrayOutput() Logfortianalyzer3FilterFreeStyleArrayOutput {
	return i.ToLogfortianalyzer3FilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i Logfortianalyzer3FilterFreeStyleArray) ToLogfortianalyzer3FilterFreeStyleArrayOutputWithContext(ctx context.Context) Logfortianalyzer3FilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3FilterFreeStyleArrayOutput)
}

type Logfortianalyzer3FilterFreeStyleOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3FilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer3FilterFreeStyle)(nil)).Elem()
}

func (o Logfortianalyzer3FilterFreeStyleOutput) ToLogfortianalyzer3FilterFreeStyleOutput() Logfortianalyzer3FilterFreeStyleOutput {
	return o
}

func (o Logfortianalyzer3FilterFreeStyleOutput) ToLogfortianalyzer3FilterFreeStyleOutputWithContext(ctx context.Context) Logfortianalyzer3FilterFreeStyleOutput {
	return o
}

// Log category.
func (o Logfortianalyzer3FilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer3FilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o Logfortianalyzer3FilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer3FilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o Logfortianalyzer3FilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer3FilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logfortianalyzer3FilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer3FilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Logfortianalyzer3FilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3FilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer3FilterFreeStyle)(nil)).Elem()
}

func (o Logfortianalyzer3FilterFreeStyleArrayOutput) ToLogfortianalyzer3FilterFreeStyleArrayOutput() Logfortianalyzer3FilterFreeStyleArrayOutput {
	return o
}

func (o Logfortianalyzer3FilterFreeStyleArrayOutput) ToLogfortianalyzer3FilterFreeStyleArrayOutputWithContext(ctx context.Context) Logfortianalyzer3FilterFreeStyleArrayOutput {
	return o
}

func (o Logfortianalyzer3FilterFreeStyleArrayOutput) Index(i pulumi.IntInput) Logfortianalyzer3FilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logfortianalyzer3FilterFreeStyle {
		return vs[0].([]Logfortianalyzer3FilterFreeStyle)[vs[1].(int)]
	}).(Logfortianalyzer3FilterFreeStyleOutput)
}

type Logfortianalyzer3OverridefilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// Logfortianalyzer3OverridefilterFreeStyleInput is an input type that accepts Logfortianalyzer3OverridefilterFreeStyleArgs and Logfortianalyzer3OverridefilterFreeStyleOutput values.
// You can construct a concrete instance of `Logfortianalyzer3OverridefilterFreeStyleInput` via:
//
//	Logfortianalyzer3OverridefilterFreeStyleArgs{...}
type Logfortianalyzer3OverridefilterFreeStyleInput interface {
	pulumi.Input

	ToLogfortianalyzer3OverridefilterFreeStyleOutput() Logfortianalyzer3OverridefilterFreeStyleOutput
	ToLogfortianalyzer3OverridefilterFreeStyleOutputWithContext(context.Context) Logfortianalyzer3OverridefilterFreeStyleOutput
}

type Logfortianalyzer3OverridefilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (Logfortianalyzer3OverridefilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer3OverridefilterFreeStyle)(nil)).Elem()
}

func (i Logfortianalyzer3OverridefilterFreeStyleArgs) ToLogfortianalyzer3OverridefilterFreeStyleOutput() Logfortianalyzer3OverridefilterFreeStyleOutput {
	return i.ToLogfortianalyzer3OverridefilterFreeStyleOutputWithContext(context.Background())
}

func (i Logfortianalyzer3OverridefilterFreeStyleArgs) ToLogfortianalyzer3OverridefilterFreeStyleOutputWithContext(ctx context.Context) Logfortianalyzer3OverridefilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3OverridefilterFreeStyleOutput)
}

// Logfortianalyzer3OverridefilterFreeStyleArrayInput is an input type that accepts Logfortianalyzer3OverridefilterFreeStyleArray and Logfortianalyzer3OverridefilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `Logfortianalyzer3OverridefilterFreeStyleArrayInput` via:
//
//	Logfortianalyzer3OverridefilterFreeStyleArray{ Logfortianalyzer3OverridefilterFreeStyleArgs{...} }
type Logfortianalyzer3OverridefilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogfortianalyzer3OverridefilterFreeStyleArrayOutput() Logfortianalyzer3OverridefilterFreeStyleArrayOutput
	ToLogfortianalyzer3OverridefilterFreeStyleArrayOutputWithContext(context.Context) Logfortianalyzer3OverridefilterFreeStyleArrayOutput
}

type Logfortianalyzer3OverridefilterFreeStyleArray []Logfortianalyzer3OverridefilterFreeStyleInput

func (Logfortianalyzer3OverridefilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer3OverridefilterFreeStyle)(nil)).Elem()
}

func (i Logfortianalyzer3OverridefilterFreeStyleArray) ToLogfortianalyzer3OverridefilterFreeStyleArrayOutput() Logfortianalyzer3OverridefilterFreeStyleArrayOutput {
	return i.ToLogfortianalyzer3OverridefilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i Logfortianalyzer3OverridefilterFreeStyleArray) ToLogfortianalyzer3OverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) Logfortianalyzer3OverridefilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3OverridefilterFreeStyleArrayOutput)
}

type Logfortianalyzer3OverridefilterFreeStyleOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3OverridefilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer3OverridefilterFreeStyle)(nil)).Elem()
}

func (o Logfortianalyzer3OverridefilterFreeStyleOutput) ToLogfortianalyzer3OverridefilterFreeStyleOutput() Logfortianalyzer3OverridefilterFreeStyleOutput {
	return o
}

func (o Logfortianalyzer3OverridefilterFreeStyleOutput) ToLogfortianalyzer3OverridefilterFreeStyleOutputWithContext(ctx context.Context) Logfortianalyzer3OverridefilterFreeStyleOutput {
	return o
}

// Log category.
func (o Logfortianalyzer3OverridefilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer3OverridefilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o Logfortianalyzer3OverridefilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer3OverridefilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o Logfortianalyzer3OverridefilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer3OverridefilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o Logfortianalyzer3OverridefilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer3OverridefilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type Logfortianalyzer3OverridefilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3OverridefilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer3OverridefilterFreeStyle)(nil)).Elem()
}

func (o Logfortianalyzer3OverridefilterFreeStyleArrayOutput) ToLogfortianalyzer3OverridefilterFreeStyleArrayOutput() Logfortianalyzer3OverridefilterFreeStyleArrayOutput {
	return o
}

func (o Logfortianalyzer3OverridefilterFreeStyleArrayOutput) ToLogfortianalyzer3OverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) Logfortianalyzer3OverridefilterFreeStyleArrayOutput {
	return o
}

func (o Logfortianalyzer3OverridefilterFreeStyleArrayOutput) Index(i pulumi.IntInput) Logfortianalyzer3OverridefilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logfortianalyzer3OverridefilterFreeStyle {
		return vs[0].([]Logfortianalyzer3OverridefilterFreeStyle)[vs[1].(int)]
	}).(Logfortianalyzer3OverridefilterFreeStyleOutput)
}

type Logfortianalyzer3OverridesettingSerial struct {
	// Serial Number.
	Name *string `pulumi:"name"`
}

// Logfortianalyzer3OverridesettingSerialInput is an input type that accepts Logfortianalyzer3OverridesettingSerialArgs and Logfortianalyzer3OverridesettingSerialOutput values.
// You can construct a concrete instance of `Logfortianalyzer3OverridesettingSerialInput` via:
//
//	Logfortianalyzer3OverridesettingSerialArgs{...}
type Logfortianalyzer3OverridesettingSerialInput interface {
	pulumi.Input

	ToLogfortianalyzer3OverridesettingSerialOutput() Logfortianalyzer3OverridesettingSerialOutput
	ToLogfortianalyzer3OverridesettingSerialOutputWithContext(context.Context) Logfortianalyzer3OverridesettingSerialOutput
}

type Logfortianalyzer3OverridesettingSerialArgs struct {
	// Serial Number.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Logfortianalyzer3OverridesettingSerialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer3OverridesettingSerial)(nil)).Elem()
}

func (i Logfortianalyzer3OverridesettingSerialArgs) ToLogfortianalyzer3OverridesettingSerialOutput() Logfortianalyzer3OverridesettingSerialOutput {
	return i.ToLogfortianalyzer3OverridesettingSerialOutputWithContext(context.Background())
}

func (i Logfortianalyzer3OverridesettingSerialArgs) ToLogfortianalyzer3OverridesettingSerialOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingSerialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3OverridesettingSerialOutput)
}

// Logfortianalyzer3OverridesettingSerialArrayInput is an input type that accepts Logfortianalyzer3OverridesettingSerialArray and Logfortianalyzer3OverridesettingSerialArrayOutput values.
// You can construct a concrete instance of `Logfortianalyzer3OverridesettingSerialArrayInput` via:
//
//	Logfortianalyzer3OverridesettingSerialArray{ Logfortianalyzer3OverridesettingSerialArgs{...} }
type Logfortianalyzer3OverridesettingSerialArrayInput interface {
	pulumi.Input

	ToLogfortianalyzer3OverridesettingSerialArrayOutput() Logfortianalyzer3OverridesettingSerialArrayOutput
	ToLogfortianalyzer3OverridesettingSerialArrayOutputWithContext(context.Context) Logfortianalyzer3OverridesettingSerialArrayOutput
}

type Logfortianalyzer3OverridesettingSerialArray []Logfortianalyzer3OverridesettingSerialInput

func (Logfortianalyzer3OverridesettingSerialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer3OverridesettingSerial)(nil)).Elem()
}

func (i Logfortianalyzer3OverridesettingSerialArray) ToLogfortianalyzer3OverridesettingSerialArrayOutput() Logfortianalyzer3OverridesettingSerialArrayOutput {
	return i.ToLogfortianalyzer3OverridesettingSerialArrayOutputWithContext(context.Background())
}

func (i Logfortianalyzer3OverridesettingSerialArray) ToLogfortianalyzer3OverridesettingSerialArrayOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingSerialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3OverridesettingSerialArrayOutput)
}

type Logfortianalyzer3OverridesettingSerialOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3OverridesettingSerialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer3OverridesettingSerial)(nil)).Elem()
}

func (o Logfortianalyzer3OverridesettingSerialOutput) ToLogfortianalyzer3OverridesettingSerialOutput() Logfortianalyzer3OverridesettingSerialOutput {
	return o
}

func (o Logfortianalyzer3OverridesettingSerialOutput) ToLogfortianalyzer3OverridesettingSerialOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingSerialOutput {
	return o
}

// Serial Number.
func (o Logfortianalyzer3OverridesettingSerialOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer3OverridesettingSerial) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Logfortianalyzer3OverridesettingSerialArrayOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3OverridesettingSerialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer3OverridesettingSerial)(nil)).Elem()
}

func (o Logfortianalyzer3OverridesettingSerialArrayOutput) ToLogfortianalyzer3OverridesettingSerialArrayOutput() Logfortianalyzer3OverridesettingSerialArrayOutput {
	return o
}

func (o Logfortianalyzer3OverridesettingSerialArrayOutput) ToLogfortianalyzer3OverridesettingSerialArrayOutputWithContext(ctx context.Context) Logfortianalyzer3OverridesettingSerialArrayOutput {
	return o
}

func (o Logfortianalyzer3OverridesettingSerialArrayOutput) Index(i pulumi.IntInput) Logfortianalyzer3OverridesettingSerialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logfortianalyzer3OverridesettingSerial {
		return vs[0].([]Logfortianalyzer3OverridesettingSerial)[vs[1].(int)]
	}).(Logfortianalyzer3OverridesettingSerialOutput)
}

type Logfortianalyzer3SettingSerial struct {
	// Serial Number.
	Name *string `pulumi:"name"`
}

// Logfortianalyzer3SettingSerialInput is an input type that accepts Logfortianalyzer3SettingSerialArgs and Logfortianalyzer3SettingSerialOutput values.
// You can construct a concrete instance of `Logfortianalyzer3SettingSerialInput` via:
//
//	Logfortianalyzer3SettingSerialArgs{...}
type Logfortianalyzer3SettingSerialInput interface {
	pulumi.Input

	ToLogfortianalyzer3SettingSerialOutput() Logfortianalyzer3SettingSerialOutput
	ToLogfortianalyzer3SettingSerialOutputWithContext(context.Context) Logfortianalyzer3SettingSerialOutput
}

type Logfortianalyzer3SettingSerialArgs struct {
	// Serial Number.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (Logfortianalyzer3SettingSerialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer3SettingSerial)(nil)).Elem()
}

func (i Logfortianalyzer3SettingSerialArgs) ToLogfortianalyzer3SettingSerialOutput() Logfortianalyzer3SettingSerialOutput {
	return i.ToLogfortianalyzer3SettingSerialOutputWithContext(context.Background())
}

func (i Logfortianalyzer3SettingSerialArgs) ToLogfortianalyzer3SettingSerialOutputWithContext(ctx context.Context) Logfortianalyzer3SettingSerialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3SettingSerialOutput)
}

// Logfortianalyzer3SettingSerialArrayInput is an input type that accepts Logfortianalyzer3SettingSerialArray and Logfortianalyzer3SettingSerialArrayOutput values.
// You can construct a concrete instance of `Logfortianalyzer3SettingSerialArrayInput` via:
//
//	Logfortianalyzer3SettingSerialArray{ Logfortianalyzer3SettingSerialArgs{...} }
type Logfortianalyzer3SettingSerialArrayInput interface {
	pulumi.Input

	ToLogfortianalyzer3SettingSerialArrayOutput() Logfortianalyzer3SettingSerialArrayOutput
	ToLogfortianalyzer3SettingSerialArrayOutputWithContext(context.Context) Logfortianalyzer3SettingSerialArrayOutput
}

type Logfortianalyzer3SettingSerialArray []Logfortianalyzer3SettingSerialInput

func (Logfortianalyzer3SettingSerialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer3SettingSerial)(nil)).Elem()
}

func (i Logfortianalyzer3SettingSerialArray) ToLogfortianalyzer3SettingSerialArrayOutput() Logfortianalyzer3SettingSerialArrayOutput {
	return i.ToLogfortianalyzer3SettingSerialArrayOutputWithContext(context.Background())
}

func (i Logfortianalyzer3SettingSerialArray) ToLogfortianalyzer3SettingSerialArrayOutputWithContext(ctx context.Context) Logfortianalyzer3SettingSerialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Logfortianalyzer3SettingSerialArrayOutput)
}

type Logfortianalyzer3SettingSerialOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3SettingSerialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Logfortianalyzer3SettingSerial)(nil)).Elem()
}

func (o Logfortianalyzer3SettingSerialOutput) ToLogfortianalyzer3SettingSerialOutput() Logfortianalyzer3SettingSerialOutput {
	return o
}

func (o Logfortianalyzer3SettingSerialOutput) ToLogfortianalyzer3SettingSerialOutputWithContext(ctx context.Context) Logfortianalyzer3SettingSerialOutput {
	return o
}

// Serial Number.
func (o Logfortianalyzer3SettingSerialOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Logfortianalyzer3SettingSerial) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type Logfortianalyzer3SettingSerialArrayOutput struct{ *pulumi.OutputState }

func (Logfortianalyzer3SettingSerialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Logfortianalyzer3SettingSerial)(nil)).Elem()
}

func (o Logfortianalyzer3SettingSerialArrayOutput) ToLogfortianalyzer3SettingSerialArrayOutput() Logfortianalyzer3SettingSerialArrayOutput {
	return o
}

func (o Logfortianalyzer3SettingSerialArrayOutput) ToLogfortianalyzer3SettingSerialArrayOutputWithContext(ctx context.Context) Logfortianalyzer3SettingSerialArrayOutput {
	return o
}

func (o Logfortianalyzer3SettingSerialArrayOutput) Index(i pulumi.IntInput) Logfortianalyzer3SettingSerialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Logfortianalyzer3SettingSerial {
		return vs[0].([]Logfortianalyzer3SettingSerial)[vs[1].(int)]
	}).(Logfortianalyzer3SettingSerialOutput)
}

type LogfortianalyzerFilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogfortianalyzerFilterFreeStyleInput is an input type that accepts LogfortianalyzerFilterFreeStyleArgs and LogfortianalyzerFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogfortianalyzerFilterFreeStyleInput` via:
//
//	LogfortianalyzerFilterFreeStyleArgs{...}
type LogfortianalyzerFilterFreeStyleInput interface {
	pulumi.Input

	ToLogfortianalyzerFilterFreeStyleOutput() LogfortianalyzerFilterFreeStyleOutput
	ToLogfortianalyzerFilterFreeStyleOutputWithContext(context.Context) LogfortianalyzerFilterFreeStyleOutput
}

type LogfortianalyzerFilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogfortianalyzerFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzerFilterFreeStyle)(nil)).Elem()
}

func (i LogfortianalyzerFilterFreeStyleArgs) ToLogfortianalyzerFilterFreeStyleOutput() LogfortianalyzerFilterFreeStyleOutput {
	return i.ToLogfortianalyzerFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogfortianalyzerFilterFreeStyleArgs) ToLogfortianalyzerFilterFreeStyleOutputWithContext(ctx context.Context) LogfortianalyzerFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzerFilterFreeStyleOutput)
}

// LogfortianalyzerFilterFreeStyleArrayInput is an input type that accepts LogfortianalyzerFilterFreeStyleArray and LogfortianalyzerFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogfortianalyzerFilterFreeStyleArrayInput` via:
//
//	LogfortianalyzerFilterFreeStyleArray{ LogfortianalyzerFilterFreeStyleArgs{...} }
type LogfortianalyzerFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogfortianalyzerFilterFreeStyleArrayOutput() LogfortianalyzerFilterFreeStyleArrayOutput
	ToLogfortianalyzerFilterFreeStyleArrayOutputWithContext(context.Context) LogfortianalyzerFilterFreeStyleArrayOutput
}

type LogfortianalyzerFilterFreeStyleArray []LogfortianalyzerFilterFreeStyleInput

func (LogfortianalyzerFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzerFilterFreeStyle)(nil)).Elem()
}

func (i LogfortianalyzerFilterFreeStyleArray) ToLogfortianalyzerFilterFreeStyleArrayOutput() LogfortianalyzerFilterFreeStyleArrayOutput {
	return i.ToLogfortianalyzerFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogfortianalyzerFilterFreeStyleArray) ToLogfortianalyzerFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortianalyzerFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzerFilterFreeStyleArrayOutput)
}

type LogfortianalyzerFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogfortianalyzerFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzerFilterFreeStyle)(nil)).Elem()
}

func (o LogfortianalyzerFilterFreeStyleOutput) ToLogfortianalyzerFilterFreeStyleOutput() LogfortianalyzerFilterFreeStyleOutput {
	return o
}

func (o LogfortianalyzerFilterFreeStyleOutput) ToLogfortianalyzerFilterFreeStyleOutputWithContext(ctx context.Context) LogfortianalyzerFilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogfortianalyzerFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzerFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogfortianalyzerFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzerFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogfortianalyzerFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzerFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogfortianalyzerFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogfortianalyzerFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogfortianalyzerFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogfortianalyzerFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzerFilterFreeStyle)(nil)).Elem()
}

func (o LogfortianalyzerFilterFreeStyleArrayOutput) ToLogfortianalyzerFilterFreeStyleArrayOutput() LogfortianalyzerFilterFreeStyleArrayOutput {
	return o
}

func (o LogfortianalyzerFilterFreeStyleArrayOutput) ToLogfortianalyzerFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortianalyzerFilterFreeStyleArrayOutput {
	return o
}

func (o LogfortianalyzerFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogfortianalyzerFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogfortianalyzerFilterFreeStyle {
		return vs[0].([]LogfortianalyzerFilterFreeStyle)[vs[1].(int)]
	}).(LogfortianalyzerFilterFreeStyleOutput)
}

type LogfortianalyzerOverridefilterFreeStyle struct {
	// Log category.
	Category *string `pulumi:"category"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Entry ID.
	Id *int `pulumi:"id"`
}

// LogfortianalyzerOverridefilterFreeStyleInput is an input type that accepts LogfortianalyzerOverridefilterFreeStyleArgs and LogfortianalyzerOverridefilterFreeStyleOutput values.
// You can construct a concrete instance of `LogfortianalyzerOverridefilterFreeStyleInput` via:
//
//	LogfortianalyzerOverridefilterFreeStyleArgs{...}
type LogfortianalyzerOverridefilterFreeStyleInput interface {
	pulumi.Input

	ToLogfortianalyzerOverridefilterFreeStyleOutput() LogfortianalyzerOverridefilterFreeStyleOutput
	ToLogfortianalyzerOverridefilterFreeStyleOutputWithContext(context.Context) LogfortianalyzerOverridefilterFreeStyleOutput
}

type LogfortianalyzerOverridefilterFreeStyleArgs struct {
	// Log category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Free style filter string.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	// Entry ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (LogfortianalyzerOverridefilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzerOverridefilterFreeStyle)(nil)).Elem()
}

func (i LogfortianalyzerOverridefilterFreeStyleArgs) ToLogfortianalyzerOverridefilterFreeStyleOutput() LogfortianalyzerOverridefilterFreeStyleOutput {
	return i.ToLogfortianalyzerOverridefilterFreeStyleOutputWithContext(context.Background())
}

func (i LogfortianalyzerOverridefilterFreeStyleArgs) ToLogfortianalyzerOverridefilterFreeStyleOutputWithContext(ctx context.Context) LogfortianalyzerOverridefilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzerOverridefilterFreeStyleOutput)
}

// LogfortianalyzerOverridefilterFreeStyleArrayInput is an input type that accepts LogfortianalyzerOverridefilterFreeStyleArray and LogfortianalyzerOverridefilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogfortianalyzerOverridefilterFreeStyleArrayInput` via:
//
//	LogfortianalyzerOverridefilterFreeStyleArray{ LogfortianalyzerOverridefilterFreeStyleArgs{...} }
type LogfortianalyzerOverridefilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogfortianalyzerOverridefilterFreeStyleArrayOutput() LogfortianalyzerOverridefilterFreeStyleArrayOutput
	ToLogfortianalyzerOverridefilterFreeStyleArrayOutputWithContext(context.Context) LogfortianalyzerOverridefilterFreeStyleArrayOutput
}

type LogfortianalyzerOverridefilterFreeStyleArray []LogfortianalyzerOverridefilterFreeStyleInput

func (LogfortianalyzerOverridefilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzerOverridefilterFreeStyle)(nil)).Elem()
}

func (i LogfortianalyzerOverridefilterFreeStyleArray) ToLogfortianalyzerOverridefilterFreeStyleArrayOutput() LogfortianalyzerOverridefilterFreeStyleArrayOutput {
	return i.ToLogfortianalyzerOverridefilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogfortianalyzerOverridefilterFreeStyleArray) ToLogfortianalyzerOverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortianalyzerOverridefilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzerOverridefilterFreeStyleArrayOutput)
}

type LogfortianalyzerOverridefilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogfortianalyzerOverridefilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzerOverridefilterFreeStyle)(nil)).Elem()
}

func (o LogfortianalyzerOverridefilterFreeStyleOutput) ToLogfortianalyzerOverridefilterFreeStyleOutput() LogfortianalyzerOverridefilterFreeStyleOutput {
	return o
}

func (o LogfortianalyzerOverridefilterFreeStyleOutput) ToLogfortianalyzerOverridefilterFreeStyleOutputWithContext(ctx context.Context) LogfortianalyzerOverridefilterFreeStyleOutput {
	return o
}

// Log category.
func (o LogfortianalyzerOverridefilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzerOverridefilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Free style filter string.
func (o LogfortianalyzerOverridefilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzerOverridefilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogfortianalyzerOverridefilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzerOverridefilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

// Entry ID.
func (o LogfortianalyzerOverridefilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogfortianalyzerOverridefilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogfortianalyzerOverridefilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogfortianalyzerOverridefilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzerOverridefilterFreeStyle)(nil)).Elem()
}

func (o LogfortianalyzerOverridefilterFreeStyleArrayOutput) ToLogfortianalyzerOverridefilterFreeStyleArrayOutput() LogfortianalyzerOverridefilterFreeStyleArrayOutput {
	return o
}

func (o LogfortianalyzerOverridefilterFreeStyleArrayOutput) ToLogfortianalyzerOverridefilterFreeStyleArrayOutputWithContext(ctx context.Context) LogfortianalyzerOverridefilterFreeStyleArrayOutput {
	return o
}

func (o LogfortianalyzerOverridefilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogfortianalyzerOverridefilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogfortianalyzerOverridefilterFreeStyle {
		return vs[0].([]LogfortianalyzerOverridefilterFreeStyle)[vs[1].(int)]
	}).(LogfortianalyzerOverridefilterFreeStyleOutput)
}

type LogfortianalyzerOverridesettingSerial struct {
	// Serial Number.
	Name *string `pulumi:"name"`
}

// LogfortianalyzerOverridesettingSerialInput is an input type that accepts LogfortianalyzerOverridesettingSerialArgs and LogfortianalyzerOverridesettingSerialOutput values.
// You can construct a concrete instance of `LogfortianalyzerOverridesettingSerialInput` via:
//
//	LogfortianalyzerOverridesettingSerialArgs{...}
type LogfortianalyzerOverridesettingSerialInput interface {
	pulumi.Input

	ToLogfortianalyzerOverridesettingSerialOutput() LogfortianalyzerOverridesettingSerialOutput
	ToLogfortianalyzerOverridesettingSerialOutputWithContext(context.Context) LogfortianalyzerOverridesettingSerialOutput
}

type LogfortianalyzerOverridesettingSerialArgs struct {
	// Serial Number.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LogfortianalyzerOverridesettingSerialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzerOverridesettingSerial)(nil)).Elem()
}

func (i LogfortianalyzerOverridesettingSerialArgs) ToLogfortianalyzerOverridesettingSerialOutput() LogfortianalyzerOverridesettingSerialOutput {
	return i.ToLogfortianalyzerOverridesettingSerialOutputWithContext(context.Background())
}

func (i LogfortianalyzerOverridesettingSerialArgs) ToLogfortianalyzerOverridesettingSerialOutputWithContext(ctx context.Context) LogfortianalyzerOverridesettingSerialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzerOverridesettingSerialOutput)
}

// LogfortianalyzerOverridesettingSerialArrayInput is an input type that accepts LogfortianalyzerOverridesettingSerialArray and LogfortianalyzerOverridesettingSerialArrayOutput values.
// You can construct a concrete instance of `LogfortianalyzerOverridesettingSerialArrayInput` via:
//
//	LogfortianalyzerOverridesettingSerialArray{ LogfortianalyzerOverridesettingSerialArgs{...} }
type LogfortianalyzerOverridesettingSerialArrayInput interface {
	pulumi.Input

	ToLogfortianalyzerOverridesettingSerialArrayOutput() LogfortianalyzerOverridesettingSerialArrayOutput
	ToLogfortianalyzerOverridesettingSerialArrayOutputWithContext(context.Context) LogfortianalyzerOverridesettingSerialArrayOutput
}

type LogfortianalyzerOverridesettingSerialArray []LogfortianalyzerOverridesettingSerialInput

func (LogfortianalyzerOverridesettingSerialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzerOverridesettingSerial)(nil)).Elem()
}

func (i LogfortianalyzerOverridesettingSerialArray) ToLogfortianalyzerOverridesettingSerialArrayOutput() LogfortianalyzerOverridesettingSerialArrayOutput {
	return i.ToLogfortianalyzerOverridesettingSerialArrayOutputWithContext(context.Background())
}

func (i LogfortianalyzerOverridesettingSerialArray) ToLogfortianalyzerOverridesettingSerialArrayOutputWithContext(ctx context.Context) LogfortianalyzerOverridesettingSerialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzerOverridesettingSerialArrayOutput)
}

type LogfortianalyzerOverridesettingSerialOutput struct{ *pulumi.OutputState }

func (LogfortianalyzerOverridesettingSerialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzerOverridesettingSerial)(nil)).Elem()
}

func (o LogfortianalyzerOverridesettingSerialOutput) ToLogfortianalyzerOverridesettingSerialOutput() LogfortianalyzerOverridesettingSerialOutput {
	return o
}

func (o LogfortianalyzerOverridesettingSerialOutput) ToLogfortianalyzerOverridesettingSerialOutputWithContext(ctx context.Context) LogfortianalyzerOverridesettingSerialOutput {
	return o
}

// Serial Number.
func (o LogfortianalyzerOverridesettingSerialOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzerOverridesettingSerial) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogfortianalyzerOverridesettingSerialArrayOutput struct{ *pulumi.OutputState }

func (LogfortianalyzerOverridesettingSerialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzerOverridesettingSerial)(nil)).Elem()
}

func (o LogfortianalyzerOverridesettingSerialArrayOutput) ToLogfortianalyzerOverridesettingSerialArrayOutput() LogfortianalyzerOverridesettingSerialArrayOutput {
	return o
}

func (o LogfortianalyzerOverridesettingSerialArrayOutput) ToLogfortianalyzerOverridesettingSerialArrayOutputWithContext(ctx context.Context) LogfortianalyzerOverridesettingSerialArrayOutput {
	return o
}

func (o LogfortianalyzerOverridesettingSerialArrayOutput) Index(i pulumi.IntInput) LogfortianalyzerOverridesettingSerialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogfortianalyzerOverridesettingSerial {
		return vs[0].([]LogfortianalyzerOverridesettingSerial)[vs[1].(int)]
	}).(LogfortianalyzerOverridesettingSerialOutput)
}

type LogfortianalyzerSettingSerial struct {
	// Serial Number.
	Name *string `pulumi:"name"`
}

// LogfortianalyzerSettingSerialInput is an input type that accepts LogfortianalyzerSettingSerialArgs and LogfortianalyzerSettingSerialOutput values.
// You can construct a concrete instance of `LogfortianalyzerSettingSerialInput` via:
//
//	LogfortianalyzerSettingSerialArgs{...}
type LogfortianalyzerSettingSerialInput interface {
	pulumi.Input

	ToLogfortianalyzerSettingSerialOutput() LogfortianalyzerSettingSerialOutput
	ToLogfortianalyzerSettingSerialOutputWithContext(context.Context) LogfortianalyzerSettingSerialOutput
}

type LogfortianalyzerSettingSerialArgs struct {
	// Serial Number.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LogfortianalyzerSettingSerialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzerSettingSerial)(nil)).Elem()
}

func (i LogfortianalyzerSettingSerialArgs) ToLogfortianalyzerSettingSerialOutput() LogfortianalyzerSettingSerialOutput {
	return i.ToLogfortianalyzerSettingSerialOutputWithContext(context.Background())
}

func (i LogfortianalyzerSettingSerialArgs) ToLogfortianalyzerSettingSerialOutputWithContext(ctx context.Context) LogfortianalyzerSettingSerialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzerSettingSerialOutput)
}

// LogfortianalyzerSettingSerialArrayInput is an input type that accepts LogfortianalyzerSettingSerialArray and LogfortianalyzerSettingSerialArrayOutput values.
// You can construct a concrete instance of `LogfortianalyzerSettingSerialArrayInput` via:
//
//	LogfortianalyzerSettingSerialArray{ LogfortianalyzerSettingSerialArgs{...} }
type LogfortianalyzerSettingSerialArrayInput interface {
	pulumi.Input

	ToLogfortianalyzerSettingSerialArrayOutput() LogfortianalyzerSettingSerialArrayOutput
	ToLogfortianalyzerSettingSerialArrayOutputWithContext(context.Context) LogfortianalyzerSettingSerialArrayOutput
}

type LogfortianalyzerSettingSerialArray []LogfortianalyzerSettingSerialInput

func (LogfortianalyzerSettingSerialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzerSettingSerial)(nil)).Elem()
}

func (i LogfortianalyzerSettingSerialArray) ToLogfortianalyzerSettingSerialArrayOutput() LogfortianalyzerSettingSerialArrayOutput {
	return i.ToLogfortianalyzerSettingSerialArrayOutputWithContext(context.Background())
}

func (i LogfortianalyzerSettingSerialArray) ToLogfortianalyzerSettingSerialArrayOutputWithContext(ctx context.Context) LogfortianalyzerSettingSerialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogfortianalyzerSettingSerialArrayOutput)
}

type LogfortianalyzerSettingSerialOutput struct{ *pulumi.OutputState }

func (LogfortianalyzerSettingSerialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogfortianalyzerSettingSerial)(nil)).Elem()
}

func (o LogfortianalyzerSettingSerialOutput) ToLogfortianalyzerSettingSerialOutput() LogfortianalyzerSettingSerialOutput {
	return o
}

func (o LogfortianalyzerSettingSerialOutput) ToLogfortianalyzerSettingSerialOutputWithContext(ctx context.Context) LogfortianalyzerSettingSerialOutput {
	return o
}

// Serial Number.
func (o LogfortianalyzerSettingSerialOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogfortianalyzerSettingSerial) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogfortianalyzerSettingSerialArrayOutput struct{ *pulumi.OutputState }

func (LogfortianalyzerSettingSerialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogfortianalyzerSettingSerial)(nil)).Elem()
}

func (o LogfortianalyzerSettingSerialArrayOutput) ToLogfortianalyzerSettingSerialArrayOutput() LogfortianalyzerSettingSerialArrayOutput {
	return o
}

func (o LogfortianalyzerSettingSerialArrayOutput) ToLogfortianalyzerSettingSerialArrayOutputWithContext(ctx context.Context) LogfortianalyzerSettingSerialArrayOutput {
	return o
}

func (o LogfortianalyzerSettingSerialArrayOutput) Index(i pulumi.IntInput) LogfortianalyzerSettingSerialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogfortianalyzerSettingSerial {
		return vs[0].([]LogfortianalyzerSettingSerial)[vs[1].(int)]
	}).(LogfortianalyzerSettingSerialOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileCifsInput)(nil)).Elem(), AntivirusProfileCifsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileCifsPtrInput)(nil)).Elem(), AntivirusProfileCifsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileContentDisarmInput)(nil)).Elem(), AntivirusProfileContentDisarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileContentDisarmPtrInput)(nil)).Elem(), AntivirusProfileContentDisarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileExternalBlocklistInput)(nil)).Elem(), AntivirusProfileExternalBlocklistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileExternalBlocklistArrayInput)(nil)).Elem(), AntivirusProfileExternalBlocklistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileFtpInput)(nil)).Elem(), AntivirusProfileFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileFtpPtrInput)(nil)).Elem(), AntivirusProfileFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileHttpInput)(nil)).Elem(), AntivirusProfileHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileHttpPtrInput)(nil)).Elem(), AntivirusProfileHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileImapInput)(nil)).Elem(), AntivirusProfileImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileImapPtrInput)(nil)).Elem(), AntivirusProfileImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileMapiInput)(nil)).Elem(), AntivirusProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileMapiPtrInput)(nil)).Elem(), AntivirusProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileNacQuarInput)(nil)).Elem(), AntivirusProfileNacQuarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileNacQuarPtrInput)(nil)).Elem(), AntivirusProfileNacQuarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileNntpInput)(nil)).Elem(), AntivirusProfileNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileNntpPtrInput)(nil)).Elem(), AntivirusProfileNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileOutbreakPreventionInput)(nil)).Elem(), AntivirusProfileOutbreakPreventionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileOutbreakPreventionPtrInput)(nil)).Elem(), AntivirusProfileOutbreakPreventionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfilePop3Input)(nil)).Elem(), AntivirusProfilePop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfilePop3PtrInput)(nil)).Elem(), AntivirusProfilePop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileSmbInput)(nil)).Elem(), AntivirusProfileSmbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileSmbPtrInput)(nil)).Elem(), AntivirusProfileSmbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileSmtpInput)(nil)).Elem(), AntivirusProfileSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileSmtpPtrInput)(nil)).Elem(), AntivirusProfileSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileSshInput)(nil)).Elem(), AntivirusProfileSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusProfileSshPtrInput)(nil)).Elem(), AntivirusProfileSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGroupApplicationInput)(nil)).Elem(), ApplicationGroupApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGroupApplicationArrayInput)(nil)).Elem(), ApplicationGroupApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGroupCategoryInput)(nil)).Elem(), ApplicationGroupCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGroupCategoryArrayInput)(nil)).Elem(), ApplicationGroupCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGroupRiskInput)(nil)).Elem(), ApplicationGroupRiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGroupRiskArrayInput)(nil)).Elem(), ApplicationGroupRiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListDefaultNetworkServiceInput)(nil)).Elem(), ApplicationListDefaultNetworkServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListDefaultNetworkServiceArrayInput)(nil)).Elem(), ApplicationListDefaultNetworkServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryInput)(nil)).Elem(), ApplicationListEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryArrayInput)(nil)).Elem(), ApplicationListEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryApplicationInput)(nil)).Elem(), ApplicationListEntryApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryApplicationArrayInput)(nil)).Elem(), ApplicationListEntryApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryCategoryInput)(nil)).Elem(), ApplicationListEntryCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryCategoryArrayInput)(nil)).Elem(), ApplicationListEntryCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryExclusionInput)(nil)).Elem(), ApplicationListEntryExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryExclusionArrayInput)(nil)).Elem(), ApplicationListEntryExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryParameterInput)(nil)).Elem(), ApplicationListEntryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryParameterArrayInput)(nil)).Elem(), ApplicationListEntryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryParameterMemberInput)(nil)).Elem(), ApplicationListEntryParameterMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryParameterMemberArrayInput)(nil)).Elem(), ApplicationListEntryParameterMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryRiskInput)(nil)).Elem(), ApplicationListEntryRiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntryRiskArrayInput)(nil)).Elem(), ApplicationListEntryRiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntrySubCategoryInput)(nil)).Elem(), ApplicationListEntrySubCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListEntrySubCategoryArrayInput)(nil)).Elem(), ApplicationListEntrySubCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationNameMetadataInput)(nil)).Elem(), ApplicationNameMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationNameMetadataArrayInput)(nil)).Elem(), ApplicationNameMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationNameParameterInput)(nil)).Elem(), ApplicationNameParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationNameParameterArrayInput)(nil)).Elem(), ApplicationNameParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationRuleDstaddr6Input)(nil)).Elem(), AuthenticationRuleDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationRuleDstaddr6ArrayInput)(nil)).Elem(), AuthenticationRuleDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationRuleDstaddrInput)(nil)).Elem(), AuthenticationRuleDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationRuleDstaddrArrayInput)(nil)).Elem(), AuthenticationRuleDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationRuleSrcaddr6Input)(nil)).Elem(), AuthenticationRuleSrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationRuleSrcaddr6ArrayInput)(nil)).Elem(), AuthenticationRuleSrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationRuleSrcaddrInput)(nil)).Elem(), AuthenticationRuleSrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationRuleSrcaddrArrayInput)(nil)).Elem(), AuthenticationRuleSrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationRuleSrcintfInput)(nil)).Elem(), AuthenticationRuleSrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationRuleSrcintfArrayInput)(nil)).Elem(), AuthenticationRuleSrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSchemeUserDatabaseInput)(nil)).Elem(), AuthenticationSchemeUserDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSchemeUserDatabaseArrayInput)(nil)).Elem(), AuthenticationSchemeUserDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSettingDevRangeInput)(nil)).Elem(), AuthenticationSettingDevRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSettingDevRangeArrayInput)(nil)).Elem(), AuthenticationSettingDevRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSettingUserCertCaInput)(nil)).Elem(), AuthenticationSettingUserCertCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSettingUserCertCaArrayInput)(nil)).Elem(), AuthenticationSettingUserCertCaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CifsProfileFileFilterInput)(nil)).Elem(), CifsProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CifsProfileFileFilterPtrInput)(nil)).Elem(), CifsProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CifsProfileFileFilterEntryInput)(nil)).Elem(), CifsProfileFileFilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CifsProfileFileFilterEntryArrayInput)(nil)).Elem(), CifsProfileFileFilterEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CifsProfileFileFilterEntryFileTypeInput)(nil)).Elem(), CifsProfileFileFilterEntryFileTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CifsProfileFileFilterEntryFileTypeArrayInput)(nil)).Elem(), CifsProfileFileFilterEntryFileTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CifsProfileServerKeytabInput)(nil)).Elem(), CifsProfileServerKeytabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CifsProfileServerKeytabArrayInput)(nil)).Elem(), CifsProfileServerKeytabArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpDictionaryEntryInput)(nil)).Elem(), DlpDictionaryEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpDictionaryEntryArrayInput)(nil)).Elem(), DlpDictionaryEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpFilepatternEntryInput)(nil)).Elem(), DlpFilepatternEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpFilepatternEntryArrayInput)(nil)).Elem(), DlpFilepatternEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpProfileRuleInput)(nil)).Elem(), DlpProfileRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpProfileRuleArrayInput)(nil)).Elem(), DlpProfileRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpProfileRuleSensitivityInput)(nil)).Elem(), DlpProfileRuleSensitivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpProfileRuleSensitivityArrayInput)(nil)).Elem(), DlpProfileRuleSensitivityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpProfileRuleSensorInput)(nil)).Elem(), DlpProfileRuleSensorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpProfileRuleSensorArrayInput)(nil)).Elem(), DlpProfileRuleSensorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpSensorEntryInput)(nil)).Elem(), DlpSensorEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpSensorEntryArrayInput)(nil)).Elem(), DlpSensorEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpSensorFilterInput)(nil)).Elem(), DlpSensorFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpSensorFilterArrayInput)(nil)).Elem(), DlpSensorFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpSensorFilterFpSensitivityInput)(nil)).Elem(), DlpSensorFilterFpSensitivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpSensorFilterFpSensitivityArrayInput)(nil)).Elem(), DlpSensorFilterFpSensitivityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpSensorFilterSensitivityInput)(nil)).Elem(), DlpSensorFilterSensitivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DlpSensorFilterSensitivityArrayInput)(nil)).Elem(), DlpSensorFilterSensitivityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterDomainfilterEntryInput)(nil)).Elem(), DnsfilterDomainfilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterDomainfilterEntryArrayInput)(nil)).Elem(), DnsfilterDomainfilterEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterProfileDnsTranslationInput)(nil)).Elem(), DnsfilterProfileDnsTranslationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterProfileDnsTranslationArrayInput)(nil)).Elem(), DnsfilterProfileDnsTranslationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterProfileDomainFilterInput)(nil)).Elem(), DnsfilterProfileDomainFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterProfileDomainFilterPtrInput)(nil)).Elem(), DnsfilterProfileDomainFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterProfileExternalIpBlocklistInput)(nil)).Elem(), DnsfilterProfileExternalIpBlocklistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterProfileExternalIpBlocklistArrayInput)(nil)).Elem(), DnsfilterProfileExternalIpBlocklistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterProfileFtgdDnsInput)(nil)).Elem(), DnsfilterProfileFtgdDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterProfileFtgdDnsPtrInput)(nil)).Elem(), DnsfilterProfileFtgdDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterProfileFtgdDnsFilterInput)(nil)).Elem(), DnsfilterProfileFtgdDnsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsfilterProfileFtgdDnsFilterArrayInput)(nil)).Elem(), DnsfilterProfileFtgdDnsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DpdkGlobalInterfaceInput)(nil)).Elem(), DpdkGlobalInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DpdkGlobalInterfaceArrayInput)(nil)).Elem(), DpdkGlobalInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterBlockallowlistEntryInput)(nil)).Elem(), EmailfilterBlockallowlistEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterBlockallowlistEntryArrayInput)(nil)).Elem(), EmailfilterBlockallowlistEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterBwlEntryInput)(nil)).Elem(), EmailfilterBwlEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterBwlEntryArrayInput)(nil)).Elem(), EmailfilterBwlEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterBwordEntryInput)(nil)).Elem(), EmailfilterBwordEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterBwordEntryArrayInput)(nil)).Elem(), EmailfilterBwordEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterDnsblEntryInput)(nil)).Elem(), EmailfilterDnsblEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterDnsblEntryArrayInput)(nil)).Elem(), EmailfilterDnsblEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterIptrustEntryInput)(nil)).Elem(), EmailfilterIptrustEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterIptrustEntryArrayInput)(nil)).Elem(), EmailfilterIptrustEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterMheaderEntryInput)(nil)).Elem(), EmailfilterMheaderEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterMheaderEntryArrayInput)(nil)).Elem(), EmailfilterMheaderEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileFileFilterInput)(nil)).Elem(), EmailfilterProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileFileFilterPtrInput)(nil)).Elem(), EmailfilterProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileFileFilterEntryInput)(nil)).Elem(), EmailfilterProfileFileFilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileFileFilterEntryArrayInput)(nil)).Elem(), EmailfilterProfileFileFilterEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileFileFilterEntryFileTypeInput)(nil)).Elem(), EmailfilterProfileFileFilterEntryFileTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileFileFilterEntryFileTypeArrayInput)(nil)).Elem(), EmailfilterProfileFileFilterEntryFileTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileGmailInput)(nil)).Elem(), EmailfilterProfileGmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileGmailPtrInput)(nil)).Elem(), EmailfilterProfileGmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileImapInput)(nil)).Elem(), EmailfilterProfileImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileImapPtrInput)(nil)).Elem(), EmailfilterProfileImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileMapiInput)(nil)).Elem(), EmailfilterProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileMapiPtrInput)(nil)).Elem(), EmailfilterProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileMsnHotmailInput)(nil)).Elem(), EmailfilterProfileMsnHotmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileMsnHotmailPtrInput)(nil)).Elem(), EmailfilterProfileMsnHotmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileOtherWebmailsInput)(nil)).Elem(), EmailfilterProfileOtherWebmailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileOtherWebmailsPtrInput)(nil)).Elem(), EmailfilterProfileOtherWebmailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfilePop3Input)(nil)).Elem(), EmailfilterProfilePop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfilePop3PtrInput)(nil)).Elem(), EmailfilterProfilePop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileSmtpInput)(nil)).Elem(), EmailfilterProfileSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileSmtpPtrInput)(nil)).Elem(), EmailfilterProfileSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileYahooMailInput)(nil)).Elem(), EmailfilterProfileYahooMailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterProfileYahooMailPtrInput)(nil)).Elem(), EmailfilterProfileYahooMailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileDeviceGroupInput)(nil)).Elem(), EndpointcontrolProfileDeviceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileDeviceGroupArrayInput)(nil)).Elem(), EndpointcontrolProfileDeviceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientAndroidSettingsInput)(nil)).Elem(), EndpointcontrolProfileForticlientAndroidSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientAndroidSettingsPtrInput)(nil)).Elem(), EndpointcontrolProfileForticlientAndroidSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingInput)(nil)).Elem(), EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayInput)(nil)).Elem(), EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientIosSettingsInput)(nil)).Elem(), EndpointcontrolProfileForticlientIosSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientIosSettingsPtrInput)(nil)).Elem(), EndpointcontrolProfileForticlientIosSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientIosSettingsClientVpnSettingInput)(nil)).Elem(), EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayInput)(nil)).Elem(), EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsPtrInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayInput)(nil)).Elem(), EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileOnNetAddrInput)(nil)).Elem(), EndpointcontrolProfileOnNetAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileOnNetAddrArrayInput)(nil)).Elem(), EndpointcontrolProfileOnNetAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileSrcAddrInput)(nil)).Elem(), EndpointcontrolProfileSrcAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileSrcAddrArrayInput)(nil)).Elem(), EndpointcontrolProfileSrcAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileUserInput)(nil)).Elem(), EndpointcontrolProfileUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileUserArrayInput)(nil)).Elem(), EndpointcontrolProfileUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileUserGroupInput)(nil)).Elem(), EndpointcontrolProfileUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointcontrolProfileUserGroupArrayInput)(nil)).Elem(), EndpointcontrolProfileUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtender1ControllerReportInput)(nil)).Elem(), ExtendercontrollerExtender1ControllerReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtender1ControllerReportPtrInput)(nil)).Elem(), ExtendercontrollerExtender1ControllerReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtender1Modem1Input)(nil)).Elem(), ExtendercontrollerExtender1Modem1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtender1Modem1PtrInput)(nil)).Elem(), ExtendercontrollerExtender1Modem1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtender1Modem1AutoSwitchInput)(nil)).Elem(), ExtendercontrollerExtender1Modem1AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtender1Modem1AutoSwitchPtrInput)(nil)).Elem(), ExtendercontrollerExtender1Modem1AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtender1Modem2Input)(nil)).Elem(), ExtendercontrollerExtender1Modem2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtender1Modem2PtrInput)(nil)).Elem(), ExtendercontrollerExtender1Modem2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtender1Modem2AutoSwitchInput)(nil)).Elem(), ExtendercontrollerExtender1Modem2AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtender1Modem2AutoSwitchPtrInput)(nil)).Elem(), ExtendercontrollerExtender1Modem2AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderControllerReportInput)(nil)).Elem(), ExtendercontrollerExtenderControllerReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderControllerReportPtrInput)(nil)).Elem(), ExtendercontrollerExtenderControllerReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderModem1Input)(nil)).Elem(), ExtendercontrollerExtenderModem1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderModem1PtrInput)(nil)).Elem(), ExtendercontrollerExtenderModem1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderModem1AutoSwitchInput)(nil)).Elem(), ExtendercontrollerExtenderModem1AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderModem1AutoSwitchPtrInput)(nil)).Elem(), ExtendercontrollerExtenderModem1AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderModem2Input)(nil)).Elem(), ExtendercontrollerExtenderModem2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderModem2PtrInput)(nil)).Elem(), ExtendercontrollerExtenderModem2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderModem2AutoSwitchInput)(nil)).Elem(), ExtendercontrollerExtenderModem2AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderModem2AutoSwitchPtrInput)(nil)).Elem(), ExtendercontrollerExtenderModem2AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderWanExtensionInput)(nil)).Elem(), ExtendercontrollerExtenderWanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderWanExtensionPtrInput)(nil)).Elem(), ExtendercontrollerExtenderWanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularPtrInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularControllerReportInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularControllerReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularControllerReportPtrInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularControllerReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularDataplanInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularDataplanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularDataplanArrayInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularDataplanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem1Input)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularModem1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem1PtrInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularModem1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem1AutoSwitchInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularModem1AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem2Input)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularModem2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem2PtrInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularModem2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem2AutoSwitchInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularModem2AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotificationInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularSmsNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotificationPtrInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularSmsNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotificationAlertInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularSmsNotificationAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayInput)(nil)).Elem(), ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileLanExtensionInput)(nil)).Elem(), ExtendercontrollerExtenderprofileLanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileLanExtensionPtrInput)(nil)).Elem(), ExtendercontrollerExtenderprofileLanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileLanExtensionBackhaulInput)(nil)).Elem(), ExtendercontrollerExtenderprofileLanExtensionBackhaulArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayInput)(nil)).Elem(), ExtendercontrollerExtenderprofileLanExtensionBackhaulArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderWanExtensionInput)(nil)).Elem(), ExtensioncontrollerExtenderWanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderWanExtensionPtrInput)(nil)).Elem(), ExtensioncontrollerExtenderWanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularPtrInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularControllerReportInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularControllerReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularControllerReportPtrInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularControllerReportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularDataplanInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularDataplanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularDataplanArrayInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularDataplanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem1Input)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularModem1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem1PtrInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularModem1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem2Input)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularModem2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem2PtrInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularModem2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotificationInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularSmsNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileLanExtensionInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileLanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileLanExtensionPtrInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileLanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileLanExtensionBackhaulInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileLanExtensionBackhaulArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayInput)(nil)).Elem(), ExtensioncontrollerExtenderprofileLanExtensionBackhaulArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerFortigateprofileLanExtensionInput)(nil)).Elem(), ExtensioncontrollerFortigateprofileLanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensioncontrollerFortigateprofileLanExtensionPtrInput)(nil)).Elem(), ExtensioncontrollerFortigateprofileLanExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilefilterProfileRuleInput)(nil)).Elem(), FilefilterProfileRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilefilterProfileRuleArrayInput)(nil)).Elem(), FilefilterProfileRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilefilterProfileRuleFileTypeInput)(nil)).Elem(), FilefilterProfileRuleFileTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilefilterProfileRuleFileTypeArrayInput)(nil)).Elem(), FilefilterProfileRuleFileTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGateway6Input)(nil)).Elem(), FirewallAccessproxy6ApiGateway6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGateway6ArrayInput)(nil)).Elem(), FirewallAccessproxy6ApiGateway6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGateway6ApplicationInput)(nil)).Elem(), FirewallAccessproxy6ApiGateway6ApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGateway6ApplicationArrayInput)(nil)).Elem(), FirewallAccessproxy6ApiGateway6ApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGateway6RealserverInput)(nil)).Elem(), FirewallAccessproxy6ApiGateway6RealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGateway6RealserverArrayInput)(nil)).Elem(), FirewallAccessproxy6ApiGateway6RealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGateway6RealserverSshHostKeyInput)(nil)).Elem(), FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayInput)(nil)).Elem(), FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGateway6SslCipherSuiteInput)(nil)).Elem(), FirewallAccessproxy6ApiGateway6SslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayInput)(nil)).Elem(), FirewallAccessproxy6ApiGateway6SslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGatewayInput)(nil)).Elem(), FirewallAccessproxy6ApiGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGatewayArrayInput)(nil)).Elem(), FirewallAccessproxy6ApiGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGatewayApplicationInput)(nil)).Elem(), FirewallAccessproxy6ApiGatewayApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGatewayApplicationArrayInput)(nil)).Elem(), FirewallAccessproxy6ApiGatewayApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGatewayRealserverInput)(nil)).Elem(), FirewallAccessproxy6ApiGatewayRealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGatewayRealserverArrayInput)(nil)).Elem(), FirewallAccessproxy6ApiGatewayRealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGatewayRealserverSshHostKeyInput)(nil)).Elem(), FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayInput)(nil)).Elem(), FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGatewaySslCipherSuiteInput)(nil)).Elem(), FirewallAccessproxy6ApiGatewaySslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayInput)(nil)).Elem(), FirewallAccessproxy6ApiGatewaySslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGateway6Input)(nil)).Elem(), FirewallAccessproxyApiGateway6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGateway6ArrayInput)(nil)).Elem(), FirewallAccessproxyApiGateway6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGateway6ApplicationInput)(nil)).Elem(), FirewallAccessproxyApiGateway6ApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGateway6ApplicationArrayInput)(nil)).Elem(), FirewallAccessproxyApiGateway6ApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGateway6RealserverInput)(nil)).Elem(), FirewallAccessproxyApiGateway6RealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGateway6RealserverArrayInput)(nil)).Elem(), FirewallAccessproxyApiGateway6RealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGateway6RealserverSshHostKeyInput)(nil)).Elem(), FirewallAccessproxyApiGateway6RealserverSshHostKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayInput)(nil)).Elem(), FirewallAccessproxyApiGateway6RealserverSshHostKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGateway6SslCipherSuiteInput)(nil)).Elem(), FirewallAccessproxyApiGateway6SslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGateway6SslCipherSuiteArrayInput)(nil)).Elem(), FirewallAccessproxyApiGateway6SslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGatewayInput)(nil)).Elem(), FirewallAccessproxyApiGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGatewayArrayInput)(nil)).Elem(), FirewallAccessproxyApiGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGatewayApplicationInput)(nil)).Elem(), FirewallAccessproxyApiGatewayApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGatewayApplicationArrayInput)(nil)).Elem(), FirewallAccessproxyApiGatewayApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGatewayRealserverInput)(nil)).Elem(), FirewallAccessproxyApiGatewayRealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGatewayRealserverArrayInput)(nil)).Elem(), FirewallAccessproxyApiGatewayRealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGatewayRealserverSshHostKeyInput)(nil)).Elem(), FirewallAccessproxyApiGatewayRealserverSshHostKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayInput)(nil)).Elem(), FirewallAccessproxyApiGatewayRealserverSshHostKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGatewaySslCipherSuiteInput)(nil)).Elem(), FirewallAccessproxyApiGatewaySslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyApiGatewaySslCipherSuiteArrayInput)(nil)).Elem(), FirewallAccessproxyApiGatewaySslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxysshclientcertCertExtensionInput)(nil)).Elem(), FirewallAccessproxysshclientcertCertExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxysshclientcertCertExtensionArrayInput)(nil)).Elem(), FirewallAccessproxysshclientcertCertExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6ListInput)(nil)).Elem(), FirewallAddress6ListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6ListArrayInput)(nil)).Elem(), FirewallAddress6ListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6MacaddrInput)(nil)).Elem(), FirewallAddress6MacaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6MacaddrArrayInput)(nil)).Elem(), FirewallAddress6MacaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6SubnetSegmentInput)(nil)).Elem(), FirewallAddress6SubnetSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6SubnetSegmentArrayInput)(nil)).Elem(), FirewallAddress6SubnetSegmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6TaggingInput)(nil)).Elem(), FirewallAddress6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6TaggingArrayInput)(nil)).Elem(), FirewallAddress6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6TaggingTagInput)(nil)).Elem(), FirewallAddress6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6TaggingTagArrayInput)(nil)).Elem(), FirewallAddress6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6templateSubnetSegmentInput)(nil)).Elem(), FirewallAddress6templateSubnetSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6templateSubnetSegmentArrayInput)(nil)).Elem(), FirewallAddress6templateSubnetSegmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6templateSubnetSegmentValueInput)(nil)).Elem(), FirewallAddress6templateSubnetSegmentValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddress6templateSubnetSegmentValueArrayInput)(nil)).Elem(), FirewallAddress6templateSubnetSegmentValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddressFssoGroupInput)(nil)).Elem(), FirewallAddressFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddressFssoGroupArrayInput)(nil)).Elem(), FirewallAddressFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddressListInput)(nil)).Elem(), FirewallAddressListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddressListArrayInput)(nil)).Elem(), FirewallAddressListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddressMacaddrInput)(nil)).Elem(), FirewallAddressMacaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddressMacaddrArrayInput)(nil)).Elem(), FirewallAddressMacaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddressTaggingInput)(nil)).Elem(), FirewallAddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddressTaggingArrayInput)(nil)).Elem(), FirewallAddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddressTaggingTagInput)(nil)).Elem(), FirewallAddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddressTaggingTagArrayInput)(nil)).Elem(), FirewallAddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrp6MemberInput)(nil)).Elem(), FirewallAddrgrp6MemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrp6MemberArrayInput)(nil)).Elem(), FirewallAddrgrp6MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrp6TaggingInput)(nil)).Elem(), FirewallAddrgrp6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrp6TaggingArrayInput)(nil)).Elem(), FirewallAddrgrp6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrp6TaggingTagInput)(nil)).Elem(), FirewallAddrgrp6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrp6TaggingTagArrayInput)(nil)).Elem(), FirewallAddrgrp6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrpExcludeMemberInput)(nil)).Elem(), FirewallAddrgrpExcludeMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrpExcludeMemberArrayInput)(nil)).Elem(), FirewallAddrgrpExcludeMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrpMemberInput)(nil)).Elem(), FirewallAddrgrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrpMemberArrayInput)(nil)).Elem(), FirewallAddrgrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrpTaggingInput)(nil)).Elem(), FirewallAddrgrpTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrpTaggingArrayInput)(nil)).Elem(), FirewallAddrgrpTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrpTaggingTagInput)(nil)).Elem(), FirewallAddrgrpTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAddrgrpTaggingTagArrayInput)(nil)).Elem(), FirewallAddrgrpTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAuthportalGroupInput)(nil)).Elem(), FirewallAuthportalGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAuthportalGroupArrayInput)(nil)).Elem(), FirewallAuthportalGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapDstAddr6Input)(nil)).Elem(), FirewallCentralsnatmapDstAddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapDstAddr6ArrayInput)(nil)).Elem(), FirewallCentralsnatmapDstAddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapDstAddrInput)(nil)).Elem(), FirewallCentralsnatmapDstAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapDstAddrArrayInput)(nil)).Elem(), FirewallCentralsnatmapDstAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapDstintfInput)(nil)).Elem(), FirewallCentralsnatmapDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapDstintfArrayInput)(nil)).Elem(), FirewallCentralsnatmapDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapNatIppool6Input)(nil)).Elem(), FirewallCentralsnatmapNatIppool6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapNatIppool6ArrayInput)(nil)).Elem(), FirewallCentralsnatmapNatIppool6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapNatIppoolInput)(nil)).Elem(), FirewallCentralsnatmapNatIppoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapNatIppoolArrayInput)(nil)).Elem(), FirewallCentralsnatmapNatIppoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapOrigAddr6Input)(nil)).Elem(), FirewallCentralsnatmapOrigAddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapOrigAddr6ArrayInput)(nil)).Elem(), FirewallCentralsnatmapOrigAddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapOrigAddrInput)(nil)).Elem(), FirewallCentralsnatmapOrigAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapOrigAddrArrayInput)(nil)).Elem(), FirewallCentralsnatmapOrigAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapSrcintfInput)(nil)).Elem(), FirewallCentralsnatmapSrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapSrcintfArrayInput)(nil)).Elem(), FirewallCentralsnatmapSrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCountryRegionInput)(nil)).Elem(), FirewallCountryRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCountryRegionArrayInput)(nil)).Elem(), FirewallCountryRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDecryptedtrafficmirrorInterfaceInput)(nil)).Elem(), FirewallDecryptedtrafficmirrorInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDecryptedtrafficmirrorInterfaceArrayInput)(nil)).Elem(), FirewallDecryptedtrafficmirrorInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6AnomalyInput)(nil)).Elem(), FirewallDoSpolicy6AnomalyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6AnomalyArrayInput)(nil)).Elem(), FirewallDoSpolicy6AnomalyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6DstaddrInput)(nil)).Elem(), FirewallDoSpolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6DstaddrArrayInput)(nil)).Elem(), FirewallDoSpolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6ServiceInput)(nil)).Elem(), FirewallDoSpolicy6ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6ServiceArrayInput)(nil)).Elem(), FirewallDoSpolicy6ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6SrcaddrInput)(nil)).Elem(), FirewallDoSpolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicy6SrcaddrArrayInput)(nil)).Elem(), FirewallDoSpolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicyAnomalyInput)(nil)).Elem(), FirewallDoSpolicyAnomalyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicyAnomalyArrayInput)(nil)).Elem(), FirewallDoSpolicyAnomalyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicyDstaddrInput)(nil)).Elem(), FirewallDoSpolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicyDstaddrArrayInput)(nil)).Elem(), FirewallDoSpolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicyServiceInput)(nil)).Elem(), FirewallDoSpolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicyServiceArrayInput)(nil)).Elem(), FirewallDoSpolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicySrcaddrInput)(nil)).Elem(), FirewallDoSpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDoSpolicySrcaddrArrayInput)(nil)).Elem(), FirewallDoSpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIdentitybasedrouteRuleInput)(nil)).Elem(), FirewallIdentitybasedrouteRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIdentitybasedrouteRuleArrayInput)(nil)).Elem(), FirewallIdentitybasedrouteRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIdentitybasedrouteRuleGroupInput)(nil)).Elem(), FirewallIdentitybasedrouteRuleGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIdentitybasedrouteRuleGroupArrayInput)(nil)).Elem(), FirewallIdentitybasedrouteRuleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicy6Dstaddr6Input)(nil)).Elem(), FirewallInterfacepolicy6Dstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicy6Dstaddr6ArrayInput)(nil)).Elem(), FirewallInterfacepolicy6Dstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicy6Service6Input)(nil)).Elem(), FirewallInterfacepolicy6Service6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicy6Service6ArrayInput)(nil)).Elem(), FirewallInterfacepolicy6Service6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicy6Srcaddr6Input)(nil)).Elem(), FirewallInterfacepolicy6Srcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicy6Srcaddr6ArrayInput)(nil)).Elem(), FirewallInterfacepolicy6Srcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicyDstaddrInput)(nil)).Elem(), FirewallInterfacepolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicyDstaddrArrayInput)(nil)).Elem(), FirewallInterfacepolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicyServiceInput)(nil)).Elem(), FirewallInterfacepolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicyServiceArrayInput)(nil)).Elem(), FirewallInterfacepolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicySrcaddrInput)(nil)).Elem(), FirewallInterfacepolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInterfacepolicySrcaddrArrayInput)(nil)).Elem(), FirewallInterfacepolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceadditionEntryInput)(nil)).Elem(), FirewallInternetserviceadditionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceadditionEntryArrayInput)(nil)).Elem(), FirewallInternetserviceadditionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceadditionEntryPortRangeInput)(nil)).Elem(), FirewallInternetserviceadditionEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceadditionEntryPortRangeArrayInput)(nil)).Elem(), FirewallInternetserviceadditionEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicecustomEntryInput)(nil)).Elem(), FirewallInternetservicecustomEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicecustomEntryArrayInput)(nil)).Elem(), FirewallInternetservicecustomEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicecustomEntryDst6Input)(nil)).Elem(), FirewallInternetservicecustomEntryDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicecustomEntryDst6ArrayInput)(nil)).Elem(), FirewallInternetservicecustomEntryDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicecustomEntryDstInput)(nil)).Elem(), FirewallInternetservicecustomEntryDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicecustomEntryDstArrayInput)(nil)).Elem(), FirewallInternetservicecustomEntryDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicecustomEntryPortRangeInput)(nil)).Elem(), FirewallInternetservicecustomEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicecustomEntryPortRangeArrayInput)(nil)).Elem(), FirewallInternetservicecustomEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicecustomgroupMemberInput)(nil)).Elem(), FirewallInternetservicecustomgroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicecustomgroupMemberArrayInput)(nil)).Elem(), FirewallInternetservicecustomgroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicedefinitionEntryInput)(nil)).Elem(), FirewallInternetservicedefinitionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicedefinitionEntryArrayInput)(nil)).Elem(), FirewallInternetservicedefinitionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicedefinitionEntryPortRangeInput)(nil)).Elem(), FirewallInternetservicedefinitionEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicedefinitionEntryPortRangeArrayInput)(nil)).Elem(), FirewallInternetservicedefinitionEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryInput)(nil)).Elem(), FirewallInternetserviceextensionDisableEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryArrayInput)(nil)).Elem(), FirewallInternetserviceextensionDisableEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryIp6RangeInput)(nil)).Elem(), FirewallInternetserviceextensionDisableEntryIp6RangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryIp6RangeArrayInput)(nil)).Elem(), FirewallInternetserviceextensionDisableEntryIp6RangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryIpRangeInput)(nil)).Elem(), FirewallInternetserviceextensionDisableEntryIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryIpRangeArrayInput)(nil)).Elem(), FirewallInternetserviceextensionDisableEntryIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryPortRangeInput)(nil)).Elem(), FirewallInternetserviceextensionDisableEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionDisableEntryPortRangeArrayInput)(nil)).Elem(), FirewallInternetserviceextensionDisableEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionEntryInput)(nil)).Elem(), FirewallInternetserviceextensionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionEntryArrayInput)(nil)).Elem(), FirewallInternetserviceextensionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionEntryDst6Input)(nil)).Elem(), FirewallInternetserviceextensionEntryDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionEntryDst6ArrayInput)(nil)).Elem(), FirewallInternetserviceextensionEntryDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionEntryDstInput)(nil)).Elem(), FirewallInternetserviceextensionEntryDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionEntryDstArrayInput)(nil)).Elem(), FirewallInternetserviceextensionEntryDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionEntryPortRangeInput)(nil)).Elem(), FirewallInternetserviceextensionEntryPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetserviceextensionEntryPortRangeArrayInput)(nil)).Elem(), FirewallInternetserviceextensionEntryPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicegroupMemberInput)(nil)).Elem(), FirewallInternetservicegroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetservicegroupMemberArrayInput)(nil)).Elem(), FirewallInternetservicegroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicy6DstaddrInput)(nil)).Elem(), FirewallLocalinpolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicy6DstaddrArrayInput)(nil)).Elem(), FirewallLocalinpolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicy6ServiceInput)(nil)).Elem(), FirewallLocalinpolicy6ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicy6ServiceArrayInput)(nil)).Elem(), FirewallLocalinpolicy6ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicy6SrcaddrInput)(nil)).Elem(), FirewallLocalinpolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicy6SrcaddrArrayInput)(nil)).Elem(), FirewallLocalinpolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicyDstaddrInput)(nil)).Elem(), FirewallLocalinpolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicyDstaddrArrayInput)(nil)).Elem(), FirewallLocalinpolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicyServiceInput)(nil)).Elem(), FirewallLocalinpolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicyServiceArrayInput)(nil)).Elem(), FirewallLocalinpolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicySrcaddrInput)(nil)).Elem(), FirewallLocalinpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLocalinpolicySrcaddrArrayInput)(nil)).Elem(), FirewallLocalinpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddress6TaggingInput)(nil)).Elem(), FirewallMulticastaddress6TaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddress6TaggingArrayInput)(nil)).Elem(), FirewallMulticastaddress6TaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddress6TaggingTagInput)(nil)).Elem(), FirewallMulticastaddress6TaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddress6TaggingTagArrayInput)(nil)).Elem(), FirewallMulticastaddress6TaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddressTaggingInput)(nil)).Elem(), FirewallMulticastaddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddressTaggingArrayInput)(nil)).Elem(), FirewallMulticastaddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddressTaggingTagInput)(nil)).Elem(), FirewallMulticastaddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastaddressTaggingTagArrayInput)(nil)).Elem(), FirewallMulticastaddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastpolicy6DstaddrInput)(nil)).Elem(), FirewallMulticastpolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastpolicy6DstaddrArrayInput)(nil)).Elem(), FirewallMulticastpolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastpolicy6SrcaddrInput)(nil)).Elem(), FirewallMulticastpolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastpolicy6SrcaddrArrayInput)(nil)).Elem(), FirewallMulticastpolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastpolicyDstaddrInput)(nil)).Elem(), FirewallMulticastpolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastpolicyDstaddrArrayInput)(nil)).Elem(), FirewallMulticastpolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastpolicySrcaddrInput)(nil)).Elem(), FirewallMulticastpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastpolicySrcaddrArrayInput)(nil)).Elem(), FirewallMulticastpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy46DstaddrInput)(nil)).Elem(), FirewallPolicy46DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy46DstaddrArrayInput)(nil)).Elem(), FirewallPolicy46DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy46PoolnameInput)(nil)).Elem(), FirewallPolicy46PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy46PoolnameArrayInput)(nil)).Elem(), FirewallPolicy46PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy46ServiceInput)(nil)).Elem(), FirewallPolicy46ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy46ServiceArrayInput)(nil)).Elem(), FirewallPolicy46ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy46SrcaddrInput)(nil)).Elem(), FirewallPolicy46SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy46SrcaddrArrayInput)(nil)).Elem(), FirewallPolicy46SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64DstaddrInput)(nil)).Elem(), FirewallPolicy64DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64DstaddrArrayInput)(nil)).Elem(), FirewallPolicy64DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64PoolnameInput)(nil)).Elem(), FirewallPolicy64PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64PoolnameArrayInput)(nil)).Elem(), FirewallPolicy64PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64ServiceInput)(nil)).Elem(), FirewallPolicy64ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64ServiceArrayInput)(nil)).Elem(), FirewallPolicy64ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64SrcaddrInput)(nil)).Elem(), FirewallPolicy64SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64SrcaddrArrayInput)(nil)).Elem(), FirewallPolicy64SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6AppCategoryInput)(nil)).Elem(), FirewallPolicy6AppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6AppCategoryArrayInput)(nil)).Elem(), FirewallPolicy6AppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6AppGroupInput)(nil)).Elem(), FirewallPolicy6AppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6AppGroupArrayInput)(nil)).Elem(), FirewallPolicy6AppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6ApplicationInput)(nil)).Elem(), FirewallPolicy6ApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6ApplicationArrayInput)(nil)).Elem(), FirewallPolicy6ApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6CustomLogFieldInput)(nil)).Elem(), FirewallPolicy6CustomLogFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6CustomLogFieldArrayInput)(nil)).Elem(), FirewallPolicy6CustomLogFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6DeviceInput)(nil)).Elem(), FirewallPolicy6DeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6DeviceArrayInput)(nil)).Elem(), FirewallPolicy6DeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6DstaddrInput)(nil)).Elem(), FirewallPolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6DstaddrArrayInput)(nil)).Elem(), FirewallPolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6DstintfInput)(nil)).Elem(), FirewallPolicy6DstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6DstintfArrayInput)(nil)).Elem(), FirewallPolicy6DstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6FssoGroupInput)(nil)).Elem(), FirewallPolicy6FssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6FssoGroupArrayInput)(nil)).Elem(), FirewallPolicy6FssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6GroupInput)(nil)).Elem(), FirewallPolicy6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6GroupArrayInput)(nil)).Elem(), FirewallPolicy6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6PoolnameInput)(nil)).Elem(), FirewallPolicy6PoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6PoolnameArrayInput)(nil)).Elem(), FirewallPolicy6PoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6ServiceInput)(nil)).Elem(), FirewallPolicy6ServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6ServiceArrayInput)(nil)).Elem(), FirewallPolicy6ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6SrcaddrInput)(nil)).Elem(), FirewallPolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6SrcaddrArrayInput)(nil)).Elem(), FirewallPolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6SrcintfInput)(nil)).Elem(), FirewallPolicy6SrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6SrcintfArrayInput)(nil)).Elem(), FirewallPolicy6SrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6SslMirrorIntfInput)(nil)).Elem(), FirewallPolicy6SslMirrorIntfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6SslMirrorIntfArrayInput)(nil)).Elem(), FirewallPolicy6SslMirrorIntfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6UrlCategoryInput)(nil)).Elem(), FirewallPolicy6UrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6UrlCategoryArrayInput)(nil)).Elem(), FirewallPolicy6UrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6UserInput)(nil)).Elem(), FirewallPolicy6UserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6UserArrayInput)(nil)).Elem(), FirewallPolicy6UserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyAppCategoryInput)(nil)).Elem(), FirewallPolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyAppCategoryArrayInput)(nil)).Elem(), FirewallPolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyAppGroupInput)(nil)).Elem(), FirewallPolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyAppGroupArrayInput)(nil)).Elem(), FirewallPolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyApplicationInput)(nil)).Elem(), FirewallPolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyApplicationArrayInput)(nil)).Elem(), FirewallPolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyCustomLogFieldInput)(nil)).Elem(), FirewallPolicyCustomLogFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyCustomLogFieldArrayInput)(nil)).Elem(), FirewallPolicyCustomLogFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyDeviceInput)(nil)).Elem(), FirewallPolicyDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyDeviceArrayInput)(nil)).Elem(), FirewallPolicyDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyDstaddr6Input)(nil)).Elem(), FirewallPolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyDstaddr6ArrayInput)(nil)).Elem(), FirewallPolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyDstaddrInput)(nil)).Elem(), FirewallPolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyDstaddrArrayInput)(nil)).Elem(), FirewallPolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyDstintfInput)(nil)).Elem(), FirewallPolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyDstintfArrayInput)(nil)).Elem(), FirewallPolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyFssoGroupInput)(nil)).Elem(), FirewallPolicyFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyFssoGroupArrayInput)(nil)).Elem(), FirewallPolicyFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyGroupInput)(nil)).Elem(), FirewallPolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyGroupArrayInput)(nil)).Elem(), FirewallPolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6CustomInput)(nil)).Elem(), FirewallPolicyInternetService6CustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6CustomArrayInput)(nil)).Elem(), FirewallPolicyInternetService6CustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6CustomGroupInput)(nil)).Elem(), FirewallPolicyInternetService6CustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6CustomGroupArrayInput)(nil)).Elem(), FirewallPolicyInternetService6CustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6GroupInput)(nil)).Elem(), FirewallPolicyInternetService6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6GroupArrayInput)(nil)).Elem(), FirewallPolicyInternetService6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6NameInput)(nil)).Elem(), FirewallPolicyInternetService6NameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6NameArrayInput)(nil)).Elem(), FirewallPolicyInternetService6NameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6SrcCustomInput)(nil)).Elem(), FirewallPolicyInternetService6SrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6SrcCustomArrayInput)(nil)).Elem(), FirewallPolicyInternetService6SrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6SrcCustomGroupInput)(nil)).Elem(), FirewallPolicyInternetService6SrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6SrcCustomGroupArrayInput)(nil)).Elem(), FirewallPolicyInternetService6SrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6SrcGroupInput)(nil)).Elem(), FirewallPolicyInternetService6SrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6SrcGroupArrayInput)(nil)).Elem(), FirewallPolicyInternetService6SrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6SrcNameInput)(nil)).Elem(), FirewallPolicyInternetService6SrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetService6SrcNameArrayInput)(nil)).Elem(), FirewallPolicyInternetService6SrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceCustomInput)(nil)).Elem(), FirewallPolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceCustomArrayInput)(nil)).Elem(), FirewallPolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceCustomGroupInput)(nil)).Elem(), FirewallPolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), FirewallPolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceGroupInput)(nil)).Elem(), FirewallPolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceGroupArrayInput)(nil)).Elem(), FirewallPolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceIdInput)(nil)).Elem(), FirewallPolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceIdArrayInput)(nil)).Elem(), FirewallPolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceNameInput)(nil)).Elem(), FirewallPolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceNameArrayInput)(nil)).Elem(), FirewallPolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceSrcCustomInput)(nil)).Elem(), FirewallPolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), FirewallPolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), FirewallPolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), FirewallPolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceSrcGroupInput)(nil)).Elem(), FirewallPolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), FirewallPolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceSrcIdInput)(nil)).Elem(), FirewallPolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), FirewallPolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceSrcNameInput)(nil)).Elem(), FirewallPolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), FirewallPolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyNetworkServiceDynamicInput)(nil)).Elem(), FirewallPolicyNetworkServiceDynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyNetworkServiceDynamicArrayInput)(nil)).Elem(), FirewallPolicyNetworkServiceDynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyNetworkServiceSrcDynamicInput)(nil)).Elem(), FirewallPolicyNetworkServiceSrcDynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyNetworkServiceSrcDynamicArrayInput)(nil)).Elem(), FirewallPolicyNetworkServiceSrcDynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyNtlmEnabledBrowserInput)(nil)).Elem(), FirewallPolicyNtlmEnabledBrowserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyNtlmEnabledBrowserArrayInput)(nil)).Elem(), FirewallPolicyNtlmEnabledBrowserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyPoolname6Input)(nil)).Elem(), FirewallPolicyPoolname6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyPoolname6ArrayInput)(nil)).Elem(), FirewallPolicyPoolname6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyPoolnameInput)(nil)).Elem(), FirewallPolicyPoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyPoolnameArrayInput)(nil)).Elem(), FirewallPolicyPoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRtpAddrInput)(nil)).Elem(), FirewallPolicyRtpAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRtpAddrArrayInput)(nil)).Elem(), FirewallPolicyRtpAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyServiceInput)(nil)).Elem(), FirewallPolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyServiceArrayInput)(nil)).Elem(), FirewallPolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySgtInput)(nil)).Elem(), FirewallPolicySgtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySgtArrayInput)(nil)).Elem(), FirewallPolicySgtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySrcVendorMacInput)(nil)).Elem(), FirewallPolicySrcVendorMacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySrcVendorMacArrayInput)(nil)).Elem(), FirewallPolicySrcVendorMacArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySrcaddr6Input)(nil)).Elem(), FirewallPolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySrcaddr6ArrayInput)(nil)).Elem(), FirewallPolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySrcaddrInput)(nil)).Elem(), FirewallPolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySrcaddrArrayInput)(nil)).Elem(), FirewallPolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySrcintfInput)(nil)).Elem(), FirewallPolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySrcintfArrayInput)(nil)).Elem(), FirewallPolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySslMirrorIntfInput)(nil)).Elem(), FirewallPolicySslMirrorIntfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicySslMirrorIntfArrayInput)(nil)).Elem(), FirewallPolicySslMirrorIntfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyUrlCategoryInput)(nil)).Elem(), FirewallPolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyUrlCategoryArrayInput)(nil)).Elem(), FirewallPolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyUserInput)(nil)).Elem(), FirewallPolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyUserArrayInput)(nil)).Elem(), FirewallPolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyZtnaEmsTagInput)(nil)).Elem(), FirewallPolicyZtnaEmsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyZtnaEmsTagArrayInput)(nil)).Elem(), FirewallPolicyZtnaEmsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyZtnaGeoTagInput)(nil)).Elem(), FirewallPolicyZtnaGeoTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyZtnaGeoTagArrayInput)(nil)).Elem(), FirewallPolicyZtnaGeoTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsCifsInput)(nil)).Elem(), FirewallProfileprotocoloptionsCifsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsCifsPtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsCifsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsCifsServerKeytabInput)(nil)).Elem(), FirewallProfileprotocoloptionsCifsServerKeytabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsCifsServerKeytabArrayInput)(nil)).Elem(), FirewallProfileprotocoloptionsCifsServerKeytabArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsDnsInput)(nil)).Elem(), FirewallProfileprotocoloptionsDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsDnsPtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsFtpInput)(nil)).Elem(), FirewallProfileprotocoloptionsFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsFtpPtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsHttpInput)(nil)).Elem(), FirewallProfileprotocoloptionsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsHttpPtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsImapInput)(nil)).Elem(), FirewallProfileprotocoloptionsImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsImapPtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsMailSignatureInput)(nil)).Elem(), FirewallProfileprotocoloptionsMailSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsMailSignaturePtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsMailSignatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsMapiInput)(nil)).Elem(), FirewallProfileprotocoloptionsMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsMapiPtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsNntpInput)(nil)).Elem(), FirewallProfileprotocoloptionsNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsNntpPtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsPop3Input)(nil)).Elem(), FirewallProfileprotocoloptionsPop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsPop3PtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsPop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsSmtpInput)(nil)).Elem(), FirewallProfileprotocoloptionsSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsSmtpPtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsSshInput)(nil)).Elem(), FirewallProfileprotocoloptionsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileprotocoloptionsSshPtrInput)(nil)).Elem(), FirewallProfileprotocoloptionsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddressApplicationInput)(nil)).Elem(), FirewallProxyaddressApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddressApplicationArrayInput)(nil)).Elem(), FirewallProxyaddressApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddressCategoryInput)(nil)).Elem(), FirewallProxyaddressCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddressCategoryArrayInput)(nil)).Elem(), FirewallProxyaddressCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddressHeaderGroupInput)(nil)).Elem(), FirewallProxyaddressHeaderGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddressHeaderGroupArrayInput)(nil)).Elem(), FirewallProxyaddressHeaderGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddressTaggingInput)(nil)).Elem(), FirewallProxyaddressTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddressTaggingArrayInput)(nil)).Elem(), FirewallProxyaddressTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddressTaggingTagInput)(nil)).Elem(), FirewallProxyaddressTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddressTaggingTagArrayInput)(nil)).Elem(), FirewallProxyaddressTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddrgrpMemberInput)(nil)).Elem(), FirewallProxyaddrgrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddrgrpMemberArrayInput)(nil)).Elem(), FirewallProxyaddrgrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddrgrpTaggingInput)(nil)).Elem(), FirewallProxyaddrgrpTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddrgrpTaggingArrayInput)(nil)).Elem(), FirewallProxyaddrgrpTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddrgrpTaggingTagInput)(nil)).Elem(), FirewallProxyaddrgrpTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyaddrgrpTaggingTagArrayInput)(nil)).Elem(), FirewallProxyaddrgrpTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyAccessProxy6Input)(nil)).Elem(), FirewallProxypolicyAccessProxy6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyAccessProxy6ArrayInput)(nil)).Elem(), FirewallProxypolicyAccessProxy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyAccessProxyInput)(nil)).Elem(), FirewallProxypolicyAccessProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyAccessProxyArrayInput)(nil)).Elem(), FirewallProxypolicyAccessProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyDstaddr6Input)(nil)).Elem(), FirewallProxypolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyDstaddr6ArrayInput)(nil)).Elem(), FirewallProxypolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyDstaddrInput)(nil)).Elem(), FirewallProxypolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyDstaddrArrayInput)(nil)).Elem(), FirewallProxypolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyDstintfInput)(nil)).Elem(), FirewallProxypolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyDstintfArrayInput)(nil)).Elem(), FirewallProxypolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyGroupInput)(nil)).Elem(), FirewallProxypolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyGroupArrayInput)(nil)).Elem(), FirewallProxypolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyInternetServiceCustomInput)(nil)).Elem(), FirewallProxypolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyInternetServiceCustomArrayInput)(nil)).Elem(), FirewallProxypolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyInternetServiceCustomGroupInput)(nil)).Elem(), FirewallProxypolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), FirewallProxypolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyInternetServiceGroupInput)(nil)).Elem(), FirewallProxypolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyInternetServiceGroupArrayInput)(nil)).Elem(), FirewallProxypolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyInternetServiceIdInput)(nil)).Elem(), FirewallProxypolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyInternetServiceIdArrayInput)(nil)).Elem(), FirewallProxypolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyInternetServiceNameInput)(nil)).Elem(), FirewallProxypolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyInternetServiceNameArrayInput)(nil)).Elem(), FirewallProxypolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyPoolnameInput)(nil)).Elem(), FirewallProxypolicyPoolnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyPoolnameArrayInput)(nil)).Elem(), FirewallProxypolicyPoolnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyServiceInput)(nil)).Elem(), FirewallProxypolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyServiceArrayInput)(nil)).Elem(), FirewallProxypolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicySrcaddr6Input)(nil)).Elem(), FirewallProxypolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicySrcaddr6ArrayInput)(nil)).Elem(), FirewallProxypolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicySrcaddrInput)(nil)).Elem(), FirewallProxypolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicySrcaddrArrayInput)(nil)).Elem(), FirewallProxypolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicySrcintfInput)(nil)).Elem(), FirewallProxypolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicySrcintfArrayInput)(nil)).Elem(), FirewallProxypolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyUserInput)(nil)).Elem(), FirewallProxypolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyUserArrayInput)(nil)).Elem(), FirewallProxypolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyZtnaEmsTagInput)(nil)).Elem(), FirewallProxypolicyZtnaEmsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxypolicyZtnaEmsTagArrayInput)(nil)).Elem(), FirewallProxypolicyZtnaEmsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallRegionCityInput)(nil)).Elem(), FirewallRegionCityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallRegionCityArrayInput)(nil)).Elem(), FirewallRegionCityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecurityPolicyseqStatePolicyListInput)(nil)).Elem(), FirewallSecurityPolicyseqStatePolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecurityPolicyseqStatePolicyListArrayInput)(nil)).Elem(), FirewallSecurityPolicyseqStatePolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecurityPolicysortStatePolicyListInput)(nil)).Elem(), FirewallSecurityPolicysortStatePolicyListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecurityPolicysortStatePolicyListArrayInput)(nil)).Elem(), FirewallSecurityPolicysortStatePolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyAppCategoryInput)(nil)).Elem(), FirewallSecuritypolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyAppCategoryArrayInput)(nil)).Elem(), FirewallSecuritypolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyAppGroupInput)(nil)).Elem(), FirewallSecuritypolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyAppGroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyApplicationInput)(nil)).Elem(), FirewallSecuritypolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyApplicationArrayInput)(nil)).Elem(), FirewallSecuritypolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyDstaddr4Input)(nil)).Elem(), FirewallSecuritypolicyDstaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyDstaddr4ArrayInput)(nil)).Elem(), FirewallSecuritypolicyDstaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyDstaddr6Input)(nil)).Elem(), FirewallSecuritypolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyDstaddr6ArrayInput)(nil)).Elem(), FirewallSecuritypolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyDstaddrInput)(nil)).Elem(), FirewallSecuritypolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyDstaddrArrayInput)(nil)).Elem(), FirewallSecuritypolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyDstintfInput)(nil)).Elem(), FirewallSecuritypolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyDstintfArrayInput)(nil)).Elem(), FirewallSecuritypolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyFssoGroupInput)(nil)).Elem(), FirewallSecuritypolicyFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyFssoGroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyGroupInput)(nil)).Elem(), FirewallSecuritypolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyGroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6CustomInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6CustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6CustomArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6CustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6CustomGroupInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6CustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6CustomGroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6CustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6GroupInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6GroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6GroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6NameInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6NameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6NameArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6NameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcCustomInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6SrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcCustomArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6SrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcCustomGroupInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6SrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcCustomGroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6SrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcGroupInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6SrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcGroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6SrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcNameInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6SrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetService6SrcNameArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetService6SrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceCustomInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceCustomArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceCustomGroupInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceGroupInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceGroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceIdInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceIdArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceNameInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceNameArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcCustomInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcGroupInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcIdInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcNameInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), FirewallSecuritypolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyServiceInput)(nil)).Elem(), FirewallSecuritypolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyServiceArrayInput)(nil)).Elem(), FirewallSecuritypolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicySrcaddr4Input)(nil)).Elem(), FirewallSecuritypolicySrcaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicySrcaddr4ArrayInput)(nil)).Elem(), FirewallSecuritypolicySrcaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicySrcaddr6Input)(nil)).Elem(), FirewallSecuritypolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicySrcaddr6ArrayInput)(nil)).Elem(), FirewallSecuritypolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicySrcaddrInput)(nil)).Elem(), FirewallSecuritypolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicySrcaddrArrayInput)(nil)).Elem(), FirewallSecuritypolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicySrcintfInput)(nil)).Elem(), FirewallSecuritypolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicySrcintfArrayInput)(nil)).Elem(), FirewallSecuritypolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyUrlCategoryInput)(nil)).Elem(), FirewallSecuritypolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyUrlCategoryArrayInput)(nil)).Elem(), FirewallSecuritypolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyUserInput)(nil)).Elem(), FirewallSecuritypolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSecuritypolicyUserArrayInput)(nil)).Elem(), FirewallSecuritypolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyAppCategoryInput)(nil)).Elem(), FirewallShapingpolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyAppCategoryArrayInput)(nil)).Elem(), FirewallShapingpolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyAppGroupInput)(nil)).Elem(), FirewallShapingpolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyAppGroupArrayInput)(nil)).Elem(), FirewallShapingpolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyApplicationInput)(nil)).Elem(), FirewallShapingpolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyApplicationArrayInput)(nil)).Elem(), FirewallShapingpolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyDstaddr6Input)(nil)).Elem(), FirewallShapingpolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyDstaddr6ArrayInput)(nil)).Elem(), FirewallShapingpolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyDstaddrInput)(nil)).Elem(), FirewallShapingpolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyDstaddrArrayInput)(nil)).Elem(), FirewallShapingpolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyDstintfInput)(nil)).Elem(), FirewallShapingpolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyDstintfArrayInput)(nil)).Elem(), FirewallShapingpolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyGroupInput)(nil)).Elem(), FirewallShapingpolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyGroupArrayInput)(nil)).Elem(), FirewallShapingpolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceCustomInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceCustomArrayInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceCustomGroupInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceGroupInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceGroupArrayInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceIdInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceIdArrayInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceNameInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceNameArrayInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcCustomInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcGroupInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcIdInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcNameInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), FirewallShapingpolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyServiceInput)(nil)).Elem(), FirewallShapingpolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyServiceArrayInput)(nil)).Elem(), FirewallShapingpolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicySrcaddr6Input)(nil)).Elem(), FirewallShapingpolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicySrcaddr6ArrayInput)(nil)).Elem(), FirewallShapingpolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicySrcaddrInput)(nil)).Elem(), FirewallShapingpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicySrcaddrArrayInput)(nil)).Elem(), FirewallShapingpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicySrcintfInput)(nil)).Elem(), FirewallShapingpolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicySrcintfArrayInput)(nil)).Elem(), FirewallShapingpolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyUrlCategoryInput)(nil)).Elem(), FirewallShapingpolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyUrlCategoryArrayInput)(nil)).Elem(), FirewallShapingpolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyUserInput)(nil)).Elem(), FirewallShapingpolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingpolicyUserArrayInput)(nil)).Elem(), FirewallShapingpolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingprofileShapingEntryInput)(nil)).Elem(), FirewallShapingprofileShapingEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShapingprofileShapingEntryArrayInput)(nil)).Elem(), FirewallShapingprofileShapingEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSnifferAnomalyInput)(nil)).Elem(), FirewallSnifferAnomalyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSnifferAnomalyArrayInput)(nil)).Elem(), FirewallSnifferAnomalyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSnifferIpThreatfeedInput)(nil)).Elem(), FirewallSnifferIpThreatfeedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSnifferIpThreatfeedArrayInput)(nil)).Elem(), FirewallSnifferIpThreatfeedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileDotInput)(nil)).Elem(), FirewallSslsshprofileDotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileDotPtrInput)(nil)).Elem(), FirewallSslsshprofileDotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileFtpsInput)(nil)).Elem(), FirewallSslsshprofileFtpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileFtpsPtrInput)(nil)).Elem(), FirewallSslsshprofileFtpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileHttpsInput)(nil)).Elem(), FirewallSslsshprofileHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileHttpsPtrInput)(nil)).Elem(), FirewallSslsshprofileHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileImapsInput)(nil)).Elem(), FirewallSslsshprofileImapsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileImapsPtrInput)(nil)).Elem(), FirewallSslsshprofileImapsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofilePop3sInput)(nil)).Elem(), FirewallSslsshprofilePop3sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofilePop3sPtrInput)(nil)).Elem(), FirewallSslsshprofilePop3sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileSmtpsInput)(nil)).Elem(), FirewallSslsshprofileSmtpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileSmtpsPtrInput)(nil)).Elem(), FirewallSslsshprofileSmtpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileSshInput)(nil)).Elem(), FirewallSslsshprofileSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileSshPtrInput)(nil)).Elem(), FirewallSslsshprofileSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileSslInput)(nil)).Elem(), FirewallSslsshprofileSslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileSslPtrInput)(nil)).Elem(), FirewallSslsshprofileSslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileSslExemptInput)(nil)).Elem(), FirewallSslsshprofileSslExemptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileSslExemptArrayInput)(nil)).Elem(), FirewallSslsshprofileSslExemptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileSslServerInput)(nil)).Elem(), FirewallSslsshprofileSslServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallSslsshprofileSslServerArrayInput)(nil)).Elem(), FirewallSslsshprofileSslServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallTtlpolicyServiceInput)(nil)).Elem(), FirewallTtlpolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallTtlpolicyServiceArrayInput)(nil)).Elem(), FirewallTtlpolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallTtlpolicySrcaddrInput)(nil)).Elem(), FirewallTtlpolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallTtlpolicySrcaddrArrayInput)(nil)).Elem(), FirewallTtlpolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip46MonitorInput)(nil)).Elem(), FirewallVip46MonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip46MonitorArrayInput)(nil)).Elem(), FirewallVip46MonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip46RealserverInput)(nil)).Elem(), FirewallVip46RealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip46RealserverArrayInput)(nil)).Elem(), FirewallVip46RealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip46SrcFilterInput)(nil)).Elem(), FirewallVip46SrcFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip46SrcFilterArrayInput)(nil)).Elem(), FirewallVip46SrcFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip46SrcintfFilterInput)(nil)).Elem(), FirewallVip46SrcintfFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip46SrcintfFilterArrayInput)(nil)).Elem(), FirewallVip46SrcintfFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip64MonitorInput)(nil)).Elem(), FirewallVip64MonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip64MonitorArrayInput)(nil)).Elem(), FirewallVip64MonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip64RealserverInput)(nil)).Elem(), FirewallVip64RealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip64RealserverArrayInput)(nil)).Elem(), FirewallVip64RealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip64SrcFilterInput)(nil)).Elem(), FirewallVip64SrcFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip64SrcFilterArrayInput)(nil)).Elem(), FirewallVip64SrcFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip6MonitorInput)(nil)).Elem(), FirewallVip6MonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip6MonitorArrayInput)(nil)).Elem(), FirewallVip6MonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip6RealserverInput)(nil)).Elem(), FirewallVip6RealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip6RealserverArrayInput)(nil)).Elem(), FirewallVip6RealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip6SrcFilterInput)(nil)).Elem(), FirewallVip6SrcFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip6SrcFilterArrayInput)(nil)).Elem(), FirewallVip6SrcFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip6SslCipherSuiteInput)(nil)).Elem(), FirewallVip6SslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip6SslCipherSuiteArrayInput)(nil)).Elem(), FirewallVip6SslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip6SslServerCipherSuiteInput)(nil)).Elem(), FirewallVip6SslServerCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVip6SslServerCipherSuiteArrayInput)(nil)).Elem(), FirewallVip6SslServerCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipExtaddrInput)(nil)).Elem(), FirewallVipExtaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipExtaddrArrayInput)(nil)).Elem(), FirewallVipExtaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipMappedipInput)(nil)).Elem(), FirewallVipMappedipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipMappedipArrayInput)(nil)).Elem(), FirewallVipMappedipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipMonitorInput)(nil)).Elem(), FirewallVipMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipMonitorArrayInput)(nil)).Elem(), FirewallVipMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipRealserverInput)(nil)).Elem(), FirewallVipRealserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipRealserverArrayInput)(nil)).Elem(), FirewallVipRealserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipServiceInput)(nil)).Elem(), FirewallVipServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipServiceArrayInput)(nil)).Elem(), FirewallVipServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipSrcFilterInput)(nil)).Elem(), FirewallVipSrcFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipSrcFilterArrayInput)(nil)).Elem(), FirewallVipSrcFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipSrcintfFilterInput)(nil)).Elem(), FirewallVipSrcintfFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipSrcintfFilterArrayInput)(nil)).Elem(), FirewallVipSrcintfFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipSslCipherSuiteInput)(nil)).Elem(), FirewallVipSslCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipSslCipherSuiteArrayInput)(nil)).Elem(), FirewallVipSslCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipSslServerCipherSuiteInput)(nil)).Elem(), FirewallVipSslServerCipherSuiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipSslServerCipherSuiteArrayInput)(nil)).Elem(), FirewallVipSslServerCipherSuiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp46MemberInput)(nil)).Elem(), FirewallVipgrp46MemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp46MemberArrayInput)(nil)).Elem(), FirewallVipgrp46MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp64MemberInput)(nil)).Elem(), FirewallVipgrp64MemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp64MemberArrayInput)(nil)).Elem(), FirewallVipgrp64MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp6MemberInput)(nil)).Elem(), FirewallVipgrp6MemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp6MemberArrayInput)(nil)).Elem(), FirewallVipgrp6MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrpMemberInput)(nil)).Elem(), FirewallVipgrpMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrpMemberArrayInput)(nil)).Elem(), FirewallVipgrpMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyAppCategoryInput)(nil)).Elem(), FirewallconsolidatedPolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyAppCategoryArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyAppGroupInput)(nil)).Elem(), FirewallconsolidatedPolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyAppGroupArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyApplicationInput)(nil)).Elem(), FirewallconsolidatedPolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyApplicationArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyDstaddr4Input)(nil)).Elem(), FirewallconsolidatedPolicyDstaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyDstaddr4ArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyDstaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyDstaddr6Input)(nil)).Elem(), FirewallconsolidatedPolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyDstaddr6ArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyDstintfInput)(nil)).Elem(), FirewallconsolidatedPolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyDstintfArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyFssoGroupInput)(nil)).Elem(), FirewallconsolidatedPolicyFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyFssoGroupArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyGroupInput)(nil)).Elem(), FirewallconsolidatedPolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyGroupArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceCustomInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceCustomArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceCustomGroupInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceGroupInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceGroupArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceIdInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceIdArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceNameInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceNameArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcCustomInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcGroupInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcIdInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcNameInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyPoolname4Input)(nil)).Elem(), FirewallconsolidatedPolicyPoolname4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyPoolname4ArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyPoolname4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyPoolname6Input)(nil)).Elem(), FirewallconsolidatedPolicyPoolname6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyPoolname6ArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyPoolname6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyServiceInput)(nil)).Elem(), FirewallconsolidatedPolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyServiceArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicySrcaddr4Input)(nil)).Elem(), FirewallconsolidatedPolicySrcaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicySrcaddr4ArrayInput)(nil)).Elem(), FirewallconsolidatedPolicySrcaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicySrcaddr6Input)(nil)).Elem(), FirewallconsolidatedPolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicySrcaddr6ArrayInput)(nil)).Elem(), FirewallconsolidatedPolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicySrcintfInput)(nil)).Elem(), FirewallconsolidatedPolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicySrcintfArrayInput)(nil)).Elem(), FirewallconsolidatedPolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyUrlCategoryInput)(nil)).Elem(), FirewallconsolidatedPolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyUrlCategoryArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyUserInput)(nil)).Elem(), FirewallconsolidatedPolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallconsolidatedPolicyUserArrayInput)(nil)).Elem(), FirewallconsolidatedPolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallscheduleGroupMemberInput)(nil)).Elem(), FirewallscheduleGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallscheduleGroupMemberArrayInput)(nil)).Elem(), FirewallscheduleGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallserviceCustomAppCategoryInput)(nil)).Elem(), FirewallserviceCustomAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallserviceCustomAppCategoryArrayInput)(nil)).Elem(), FirewallserviceCustomAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallserviceCustomApplicationInput)(nil)).Elem(), FirewallserviceCustomApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallserviceCustomApplicationArrayInput)(nil)).Elem(), FirewallserviceCustomApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallserviceGroupMemberInput)(nil)).Elem(), FirewallserviceGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallserviceGroupMemberArrayInput)(nil)).Elem(), FirewallserviceGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallwildcardfqdnGroupMemberInput)(nil)).Elem(), FirewallwildcardfqdnGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallwildcardfqdnGroupMemberArrayInput)(nil)).Elem(), FirewallwildcardfqdnGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileIcapHeaderInput)(nil)).Elem(), IcapProfileIcapHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileIcapHeaderArrayInput)(nil)).Elem(), IcapProfileIcapHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileRespmodForwardRuleInput)(nil)).Elem(), IcapProfileRespmodForwardRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileRespmodForwardRuleArrayInput)(nil)).Elem(), IcapProfileRespmodForwardRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileRespmodForwardRuleHeaderGroupInput)(nil)).Elem(), IcapProfileRespmodForwardRuleHeaderGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileRespmodForwardRuleHeaderGroupArrayInput)(nil)).Elem(), IcapProfileRespmodForwardRuleHeaderGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileRespmodForwardRuleHttpRespStatusCodeInput)(nil)).Elem(), IcapProfileRespmodForwardRuleHttpRespStatusCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayInput)(nil)).Elem(), IcapProfileRespmodForwardRuleHttpRespStatusCodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapServergroupServerListInput)(nil)).Elem(), IcapServergroupServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IcapServergroupServerListArrayInput)(nil)).Elem(), IcapServergroupServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsDecoderParameterInput)(nil)).Elem(), IpsDecoderParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsDecoderParameterArrayInput)(nil)).Elem(), IpsDecoderParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsGlobalTlsActiveProbeInput)(nil)).Elem(), IpsGlobalTlsActiveProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsGlobalTlsActiveProbePtrInput)(nil)).Elem(), IpsGlobalTlsActiveProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsRuleMetadataInput)(nil)).Elem(), IpsRuleMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsRuleMetadataArrayInput)(nil)).Elem(), IpsRuleMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorEntryInput)(nil)).Elem(), IpsSensorEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorEntryArrayInput)(nil)).Elem(), IpsSensorEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorEntryCfeInput)(nil)).Elem(), IpsSensorEntryCfeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorEntryCfeArrayInput)(nil)).Elem(), IpsSensorEntryCfeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorEntryExemptIpInput)(nil)).Elem(), IpsSensorEntryExemptIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorEntryExemptIpArrayInput)(nil)).Elem(), IpsSensorEntryExemptIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorEntryRuleInput)(nil)).Elem(), IpsSensorEntryRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorEntryRuleArrayInput)(nil)).Elem(), IpsSensorEntryRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorEntryVulnTypeInput)(nil)).Elem(), IpsSensorEntryVulnTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorEntryVulnTypeArrayInput)(nil)).Elem(), IpsSensorEntryVulnTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorFilterInput)(nil)).Elem(), IpsSensorFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorFilterArrayInput)(nil)).Elem(), IpsSensorFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorOverrideInput)(nil)).Elem(), IpsSensorOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorOverrideArrayInput)(nil)).Elem(), IpsSensorOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorOverrideExemptIpInput)(nil)).Elem(), IpsSensorOverrideExemptIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSensorOverrideExemptIpArrayInput)(nil)).Elem(), IpsSensorOverrideExemptIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSettingCustomLogFieldInput)(nil)).Elem(), LogSettingCustomLogFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSettingCustomLogFieldArrayInput)(nil)).Elem(), LogSettingCustomLogFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightApplicationInput)(nil)).Elem(), LogThreatweightApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightApplicationArrayInput)(nil)).Elem(), LogThreatweightApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightGeolocationInput)(nil)).Elem(), LogThreatweightGeolocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightGeolocationArrayInput)(nil)).Elem(), LogThreatweightGeolocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightIpsInput)(nil)).Elem(), LogThreatweightIpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightIpsPtrInput)(nil)).Elem(), LogThreatweightIpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightLevelInput)(nil)).Elem(), LogThreatweightLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightLevelPtrInput)(nil)).Elem(), LogThreatweightLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightMalwareInput)(nil)).Elem(), LogThreatweightMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightMalwarePtrInput)(nil)).Elem(), LogThreatweightMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightWebInput)(nil)).Elem(), LogThreatweightWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatweightWebArrayInput)(nil)).Elem(), LogThreatweightWebArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogdiskFilterFreeStyleInput)(nil)).Elem(), LogdiskFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogdiskFilterFreeStyleArrayInput)(nil)).Elem(), LogdiskFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer2FilterFreeStyleInput)(nil)).Elem(), Logfortianalyzer2FilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer2FilterFreeStyleArrayInput)(nil)).Elem(), Logfortianalyzer2FilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer2OverridefilterFreeStyleInput)(nil)).Elem(), Logfortianalyzer2OverridefilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer2OverridefilterFreeStyleArrayInput)(nil)).Elem(), Logfortianalyzer2OverridefilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer2OverridesettingSerialInput)(nil)).Elem(), Logfortianalyzer2OverridesettingSerialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer2OverridesettingSerialArrayInput)(nil)).Elem(), Logfortianalyzer2OverridesettingSerialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer2SettingSerialInput)(nil)).Elem(), Logfortianalyzer2SettingSerialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer2SettingSerialArrayInput)(nil)).Elem(), Logfortianalyzer2SettingSerialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3FilterFreeStyleInput)(nil)).Elem(), Logfortianalyzer3FilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3FilterFreeStyleArrayInput)(nil)).Elem(), Logfortianalyzer3FilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3OverridefilterFreeStyleInput)(nil)).Elem(), Logfortianalyzer3OverridefilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3OverridefilterFreeStyleArrayInput)(nil)).Elem(), Logfortianalyzer3OverridefilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3OverridesettingSerialInput)(nil)).Elem(), Logfortianalyzer3OverridesettingSerialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3OverridesettingSerialArrayInput)(nil)).Elem(), Logfortianalyzer3OverridesettingSerialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3SettingSerialInput)(nil)).Elem(), Logfortianalyzer3SettingSerialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Logfortianalyzer3SettingSerialArrayInput)(nil)).Elem(), Logfortianalyzer3SettingSerialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzerFilterFreeStyleInput)(nil)).Elem(), LogfortianalyzerFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzerFilterFreeStyleArrayInput)(nil)).Elem(), LogfortianalyzerFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzerOverridefilterFreeStyleInput)(nil)).Elem(), LogfortianalyzerOverridefilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzerOverridefilterFreeStyleArrayInput)(nil)).Elem(), LogfortianalyzerOverridefilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzerOverridesettingSerialInput)(nil)).Elem(), LogfortianalyzerOverridesettingSerialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzerOverridesettingSerialArrayInput)(nil)).Elem(), LogfortianalyzerOverridesettingSerialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzerSettingSerialInput)(nil)).Elem(), LogfortianalyzerSettingSerialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogfortianalyzerSettingSerialArrayInput)(nil)).Elem(), LogfortianalyzerSettingSerialArray{})
	pulumi.RegisterOutputType(AntivirusProfileCifsOutput{})
	pulumi.RegisterOutputType(AntivirusProfileCifsPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileContentDisarmOutput{})
	pulumi.RegisterOutputType(AntivirusProfileContentDisarmPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileExternalBlocklistOutput{})
	pulumi.RegisterOutputType(AntivirusProfileExternalBlocklistArrayOutput{})
	pulumi.RegisterOutputType(AntivirusProfileFtpOutput{})
	pulumi.RegisterOutputType(AntivirusProfileFtpPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileHttpOutput{})
	pulumi.RegisterOutputType(AntivirusProfileHttpPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileImapOutput{})
	pulumi.RegisterOutputType(AntivirusProfileImapPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileMapiOutput{})
	pulumi.RegisterOutputType(AntivirusProfileMapiPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileNacQuarOutput{})
	pulumi.RegisterOutputType(AntivirusProfileNacQuarPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileNntpOutput{})
	pulumi.RegisterOutputType(AntivirusProfileNntpPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileOutbreakPreventionOutput{})
	pulumi.RegisterOutputType(AntivirusProfileOutbreakPreventionPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfilePop3Output{})
	pulumi.RegisterOutputType(AntivirusProfilePop3PtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileSmbOutput{})
	pulumi.RegisterOutputType(AntivirusProfileSmbPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileSmtpOutput{})
	pulumi.RegisterOutputType(AntivirusProfileSmtpPtrOutput{})
	pulumi.RegisterOutputType(AntivirusProfileSshOutput{})
	pulumi.RegisterOutputType(AntivirusProfileSshPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGroupApplicationOutput{})
	pulumi.RegisterOutputType(ApplicationGroupApplicationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGroupCategoryOutput{})
	pulumi.RegisterOutputType(ApplicationGroupCategoryArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGroupRiskOutput{})
	pulumi.RegisterOutputType(ApplicationGroupRiskArrayOutput{})
	pulumi.RegisterOutputType(ApplicationListDefaultNetworkServiceOutput{})
	pulumi.RegisterOutputType(ApplicationListDefaultNetworkServiceArrayOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryArrayOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryApplicationOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryApplicationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryCategoryOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryCategoryArrayOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryExclusionOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryExclusionArrayOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryParameterOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryParameterArrayOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryParameterMemberOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryParameterMemberArrayOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryRiskOutput{})
	pulumi.RegisterOutputType(ApplicationListEntryRiskArrayOutput{})
	pulumi.RegisterOutputType(ApplicationListEntrySubCategoryOutput{})
	pulumi.RegisterOutputType(ApplicationListEntrySubCategoryArrayOutput{})
	pulumi.RegisterOutputType(ApplicationNameMetadataOutput{})
	pulumi.RegisterOutputType(ApplicationNameMetadataArrayOutput{})
	pulumi.RegisterOutputType(ApplicationNameParameterOutput{})
	pulumi.RegisterOutputType(ApplicationNameParameterArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationRuleDstaddr6Output{})
	pulumi.RegisterOutputType(AuthenticationRuleDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationRuleDstaddrOutput{})
	pulumi.RegisterOutputType(AuthenticationRuleDstaddrArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationRuleSrcaddr6Output{})
	pulumi.RegisterOutputType(AuthenticationRuleSrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationRuleSrcaddrOutput{})
	pulumi.RegisterOutputType(AuthenticationRuleSrcaddrArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationRuleSrcintfOutput{})
	pulumi.RegisterOutputType(AuthenticationRuleSrcintfArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationSchemeUserDatabaseOutput{})
	pulumi.RegisterOutputType(AuthenticationSchemeUserDatabaseArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingDevRangeOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingDevRangeArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingUserCertCaOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingUserCertCaArrayOutput{})
	pulumi.RegisterOutputType(CifsProfileFileFilterOutput{})
	pulumi.RegisterOutputType(CifsProfileFileFilterPtrOutput{})
	pulumi.RegisterOutputType(CifsProfileFileFilterEntryOutput{})
	pulumi.RegisterOutputType(CifsProfileFileFilterEntryArrayOutput{})
	pulumi.RegisterOutputType(CifsProfileFileFilterEntryFileTypeOutput{})
	pulumi.RegisterOutputType(CifsProfileFileFilterEntryFileTypeArrayOutput{})
	pulumi.RegisterOutputType(CifsProfileServerKeytabOutput{})
	pulumi.RegisterOutputType(CifsProfileServerKeytabArrayOutput{})
	pulumi.RegisterOutputType(DlpDictionaryEntryOutput{})
	pulumi.RegisterOutputType(DlpDictionaryEntryArrayOutput{})
	pulumi.RegisterOutputType(DlpFilepatternEntryOutput{})
	pulumi.RegisterOutputType(DlpFilepatternEntryArrayOutput{})
	pulumi.RegisterOutputType(DlpProfileRuleOutput{})
	pulumi.RegisterOutputType(DlpProfileRuleArrayOutput{})
	pulumi.RegisterOutputType(DlpProfileRuleSensitivityOutput{})
	pulumi.RegisterOutputType(DlpProfileRuleSensitivityArrayOutput{})
	pulumi.RegisterOutputType(DlpProfileRuleSensorOutput{})
	pulumi.RegisterOutputType(DlpProfileRuleSensorArrayOutput{})
	pulumi.RegisterOutputType(DlpSensorEntryOutput{})
	pulumi.RegisterOutputType(DlpSensorEntryArrayOutput{})
	pulumi.RegisterOutputType(DlpSensorFilterOutput{})
	pulumi.RegisterOutputType(DlpSensorFilterArrayOutput{})
	pulumi.RegisterOutputType(DlpSensorFilterFpSensitivityOutput{})
	pulumi.RegisterOutputType(DlpSensorFilterFpSensitivityArrayOutput{})
	pulumi.RegisterOutputType(DlpSensorFilterSensitivityOutput{})
	pulumi.RegisterOutputType(DlpSensorFilterSensitivityArrayOutput{})
	pulumi.RegisterOutputType(DnsfilterDomainfilterEntryOutput{})
	pulumi.RegisterOutputType(DnsfilterDomainfilterEntryArrayOutput{})
	pulumi.RegisterOutputType(DnsfilterProfileDnsTranslationOutput{})
	pulumi.RegisterOutputType(DnsfilterProfileDnsTranslationArrayOutput{})
	pulumi.RegisterOutputType(DnsfilterProfileDomainFilterOutput{})
	pulumi.RegisterOutputType(DnsfilterProfileDomainFilterPtrOutput{})
	pulumi.RegisterOutputType(DnsfilterProfileExternalIpBlocklistOutput{})
	pulumi.RegisterOutputType(DnsfilterProfileExternalIpBlocklistArrayOutput{})
	pulumi.RegisterOutputType(DnsfilterProfileFtgdDnsOutput{})
	pulumi.RegisterOutputType(DnsfilterProfileFtgdDnsPtrOutput{})
	pulumi.RegisterOutputType(DnsfilterProfileFtgdDnsFilterOutput{})
	pulumi.RegisterOutputType(DnsfilterProfileFtgdDnsFilterArrayOutput{})
	pulumi.RegisterOutputType(DpdkGlobalInterfaceOutput{})
	pulumi.RegisterOutputType(DpdkGlobalInterfaceArrayOutput{})
	pulumi.RegisterOutputType(EmailfilterBlockallowlistEntryOutput{})
	pulumi.RegisterOutputType(EmailfilterBlockallowlistEntryArrayOutput{})
	pulumi.RegisterOutputType(EmailfilterBwlEntryOutput{})
	pulumi.RegisterOutputType(EmailfilterBwlEntryArrayOutput{})
	pulumi.RegisterOutputType(EmailfilterBwordEntryOutput{})
	pulumi.RegisterOutputType(EmailfilterBwordEntryArrayOutput{})
	pulumi.RegisterOutputType(EmailfilterDnsblEntryOutput{})
	pulumi.RegisterOutputType(EmailfilterDnsblEntryArrayOutput{})
	pulumi.RegisterOutputType(EmailfilterIptrustEntryOutput{})
	pulumi.RegisterOutputType(EmailfilterIptrustEntryArrayOutput{})
	pulumi.RegisterOutputType(EmailfilterMheaderEntryOutput{})
	pulumi.RegisterOutputType(EmailfilterMheaderEntryArrayOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileFileFilterOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileFileFilterPtrOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileFileFilterEntryOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileFileFilterEntryArrayOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileFileFilterEntryFileTypeOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileFileFilterEntryFileTypeArrayOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileGmailOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileGmailPtrOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileImapOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileImapPtrOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileMapiOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileMapiPtrOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileMsnHotmailOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileMsnHotmailPtrOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileOtherWebmailsOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileOtherWebmailsPtrOutput{})
	pulumi.RegisterOutputType(EmailfilterProfilePop3Output{})
	pulumi.RegisterOutputType(EmailfilterProfilePop3PtrOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileSmtpOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileSmtpPtrOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileYahooMailOutput{})
	pulumi.RegisterOutputType(EmailfilterProfileYahooMailPtrOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileDeviceGroupOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileDeviceGroupArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientAndroidSettingsOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientAndroidSettingsPtrOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientAndroidSettingsForticlientVpnSettingArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientIosSettingsOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientIosSettingsPtrOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientIosSettingsClientVpnSettingOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientIosSettingsClientVpnSettingArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsPtrOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsForticlientEmsEntryArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsForticlientOperatingSystemArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsForticlientOwnFileArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsForticlientRegistryEntryArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileForticlientWinmacSettingsForticlientRunningAppArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileOnNetAddrOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileOnNetAddrArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileSrcAddrOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileSrcAddrArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileUserOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileUserArrayOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileUserGroupOutput{})
	pulumi.RegisterOutputType(EndpointcontrolProfileUserGroupArrayOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtender1ControllerReportOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtender1ControllerReportPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtender1Modem1Output{})
	pulumi.RegisterOutputType(ExtendercontrollerExtender1Modem1PtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtender1Modem1AutoSwitchOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtender1Modem1AutoSwitchPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtender1Modem2Output{})
	pulumi.RegisterOutputType(ExtendercontrollerExtender1Modem2PtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtender1Modem2AutoSwitchOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtender1Modem2AutoSwitchPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderControllerReportOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderControllerReportPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderModem1Output{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderModem1PtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderModem1AutoSwitchOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderModem1AutoSwitchPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderModem2Output{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderModem2PtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderModem2AutoSwitchOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderModem2AutoSwitchPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderWanExtensionOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderWanExtensionPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularControllerReportOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularControllerReportPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularDataplanOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularDataplanArrayOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularModem1Output{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularModem1PtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularModem1AutoSwitchOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularModem2Output{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularModem2PtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularModem2AutoSwitchOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularSmsNotificationOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularSmsNotificationPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularSmsNotificationAlertOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileLanExtensionOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileLanExtensionPtrOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileLanExtensionBackhaulOutput{})
	pulumi.RegisterOutputType(ExtendercontrollerExtenderprofileLanExtensionBackhaulArrayOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderWanExtensionOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderWanExtensionPtrOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularPtrOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularControllerReportOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularControllerReportPtrOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularDataplanOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularDataplanArrayOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularModem1Output{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularModem1PtrOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularModem1AutoSwitchPtrOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularModem2Output{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularModem2PtrOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularModem2AutoSwitchPtrOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularSmsNotificationOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularSmsNotificationPtrOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularSmsNotificationAlertPtrOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileCellularSmsNotificationReceiverArrayOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileLanExtensionOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileLanExtensionPtrOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileLanExtensionBackhaulOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerExtenderprofileLanExtensionBackhaulArrayOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerFortigateprofileLanExtensionOutput{})
	pulumi.RegisterOutputType(ExtensioncontrollerFortigateprofileLanExtensionPtrOutput{})
	pulumi.RegisterOutputType(FilefilterProfileRuleOutput{})
	pulumi.RegisterOutputType(FilefilterProfileRuleArrayOutput{})
	pulumi.RegisterOutputType(FilefilterProfileRuleFileTypeOutput{})
	pulumi.RegisterOutputType(FilefilterProfileRuleFileTypeArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGateway6Output{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGateway6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGateway6ApplicationOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGateway6ApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGateway6RealserverOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGateway6RealserverArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGateway6RealserverSshHostKeyOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGateway6RealserverSshHostKeyArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGateway6SslCipherSuiteOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGateway6SslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGatewayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGatewayArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGatewayApplicationOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGatewayApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGatewayRealserverOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGatewayRealserverArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGatewayRealserverSshHostKeyOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGatewayRealserverSshHostKeyArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGatewaySslCipherSuiteOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxy6ApiGatewaySslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGateway6Output{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGateway6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGateway6ApplicationOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGateway6ApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGateway6RealserverOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGateway6RealserverArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGateway6RealserverSshHostKeyOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGateway6RealserverSshHostKeyArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGateway6SslCipherSuiteOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGateway6SslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGatewayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGatewayArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGatewayApplicationOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGatewayApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGatewayRealserverOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGatewayRealserverArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGatewayRealserverSshHostKeyOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGatewayRealserverSshHostKeyArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGatewaySslCipherSuiteOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyApiGatewaySslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxysshclientcertCertExtensionOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxysshclientcertCertExtensionArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddress6ListOutput{})
	pulumi.RegisterOutputType(FirewallAddress6ListArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddress6MacaddrOutput{})
	pulumi.RegisterOutputType(FirewallAddress6MacaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddress6SubnetSegmentOutput{})
	pulumi.RegisterOutputType(FirewallAddress6SubnetSegmentArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddress6TaggingOutput{})
	pulumi.RegisterOutputType(FirewallAddress6TaggingArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddress6TaggingTagOutput{})
	pulumi.RegisterOutputType(FirewallAddress6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddress6templateSubnetSegmentOutput{})
	pulumi.RegisterOutputType(FirewallAddress6templateSubnetSegmentArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddress6templateSubnetSegmentValueOutput{})
	pulumi.RegisterOutputType(FirewallAddress6templateSubnetSegmentValueArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddressFssoGroupOutput{})
	pulumi.RegisterOutputType(FirewallAddressFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddressListOutput{})
	pulumi.RegisterOutputType(FirewallAddressListArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddressMacaddrOutput{})
	pulumi.RegisterOutputType(FirewallAddressMacaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddressTaggingOutput{})
	pulumi.RegisterOutputType(FirewallAddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddressTaggingTagOutput{})
	pulumi.RegisterOutputType(FirewallAddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrp6MemberOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrp6MemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrp6TaggingOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrp6TaggingArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrp6TaggingTagOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrp6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrpExcludeMemberOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrpExcludeMemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrpMemberOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrpMemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrpTaggingOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrpTaggingArrayOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrpTaggingTagOutput{})
	pulumi.RegisterOutputType(FirewallAddrgrpTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallAuthportalGroupOutput{})
	pulumi.RegisterOutputType(FirewallAuthportalGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapDstAddr6Output{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapDstAddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapDstAddrOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapDstAddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapDstintfOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapDstintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapNatIppool6Output{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapNatIppool6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapNatIppoolOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapNatIppoolArrayOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapOrigAddr6Output{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapOrigAddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapOrigAddrOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapOrigAddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapSrcintfOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapSrcintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallCountryRegionOutput{})
	pulumi.RegisterOutputType(FirewallCountryRegionArrayOutput{})
	pulumi.RegisterOutputType(FirewallDecryptedtrafficmirrorInterfaceOutput{})
	pulumi.RegisterOutputType(FirewallDecryptedtrafficmirrorInterfaceArrayOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6AnomalyOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6AnomalyArrayOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6ServiceOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6ServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicyAnomalyOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicyAnomalyArrayOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicyDstaddrOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicyServiceOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallDoSpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallIdentitybasedrouteRuleOutput{})
	pulumi.RegisterOutputType(FirewallIdentitybasedrouteRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallIdentitybasedrouteRuleGroupOutput{})
	pulumi.RegisterOutputType(FirewallIdentitybasedrouteRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallInterfacepolicy6Dstaddr6Output{})
	pulumi.RegisterOutputType(FirewallInterfacepolicy6Dstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallInterfacepolicy6Service6Output{})
	pulumi.RegisterOutputType(FirewallInterfacepolicy6Service6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallInterfacepolicy6Srcaddr6Output{})
	pulumi.RegisterOutputType(FirewallInterfacepolicy6Srcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallInterfacepolicyDstaddrOutput{})
	pulumi.RegisterOutputType(FirewallInterfacepolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallInterfacepolicyServiceOutput{})
	pulumi.RegisterOutputType(FirewallInterfacepolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallInterfacepolicySrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallInterfacepolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceadditionEntryOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceadditionEntryArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceadditionEntryPortRangeOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceadditionEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicecustomEntryOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicecustomEntryArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicecustomEntryDst6Output{})
	pulumi.RegisterOutputType(FirewallInternetservicecustomEntryDst6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicecustomEntryDstOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicecustomEntryDstArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicecustomEntryPortRangeOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicecustomEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicecustomgroupMemberOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicecustomgroupMemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicedefinitionEntryOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicedefinitionEntryArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicedefinitionEntryPortRangeOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicedefinitionEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionDisableEntryOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionDisableEntryArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionDisableEntryIp6RangeOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionDisableEntryIp6RangeArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionDisableEntryIpRangeOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionDisableEntryIpRangeArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionDisableEntryPortRangeOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionDisableEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionEntryOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionEntryArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionEntryDst6Output{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionEntryDst6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionEntryDstOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionEntryDstArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionEntryPortRangeOutput{})
	pulumi.RegisterOutputType(FirewallInternetserviceextensionEntryPortRangeArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicegroupMemberOutput{})
	pulumi.RegisterOutputType(FirewallInternetservicegroupMemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicy6ServiceOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicy6ServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicyDstaddrOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicyServiceOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallLocalinpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastaddress6TaggingOutput{})
	pulumi.RegisterOutputType(FirewallMulticastaddress6TaggingArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastaddress6TaggingTagOutput{})
	pulumi.RegisterOutputType(FirewallMulticastaddress6TaggingTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastaddressTaggingOutput{})
	pulumi.RegisterOutputType(FirewallMulticastaddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastaddressTaggingTagOutput{})
	pulumi.RegisterOutputType(FirewallMulticastaddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastpolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(FirewallMulticastpolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastpolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallMulticastpolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastpolicyDstaddrOutput{})
	pulumi.RegisterOutputType(FirewallMulticastpolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallMulticastpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy46DstaddrOutput{})
	pulumi.RegisterOutputType(FirewallPolicy46DstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy46PoolnameOutput{})
	pulumi.RegisterOutputType(FirewallPolicy46PoolnameArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy46ServiceOutput{})
	pulumi.RegisterOutputType(FirewallPolicy46ServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy46SrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallPolicy46SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy64DstaddrOutput{})
	pulumi.RegisterOutputType(FirewallPolicy64DstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy64PoolnameOutput{})
	pulumi.RegisterOutputType(FirewallPolicy64PoolnameArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy64ServiceOutput{})
	pulumi.RegisterOutputType(FirewallPolicy64ServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy64SrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallPolicy64SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6AppCategoryOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6AppCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6AppGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6AppGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6ApplicationOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6ApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6CustomLogFieldOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6CustomLogFieldArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6DeviceOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6DeviceArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6DstintfOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6DstintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6FssoGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6FssoGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6GroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6GroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6PoolnameOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6PoolnameArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6ServiceOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6ServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6SrcintfOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6SrcintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6SslMirrorIntfOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6SslMirrorIntfArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6UrlCategoryOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6UrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6UserOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6UserArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(FirewallPolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyAppGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyApplicationOutput{})
	pulumi.RegisterOutputType(FirewallPolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCustomLogFieldOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCustomLogFieldArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDeviceOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDeviceArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDstaddr6Output{})
	pulumi.RegisterOutputType(FirewallPolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDstaddrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDstintfOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFssoGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6CustomOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6CustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6CustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6CustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6GroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6GroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6NameOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6NameArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6SrcCustomOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6SrcCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6SrcCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6SrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6SrcGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6SrcGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6SrcNameOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetService6SrcNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNetworkServiceDynamicOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNetworkServiceDynamicArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNetworkServiceSrcDynamicOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNetworkServiceSrcDynamicArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNtlmEnabledBrowserOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNtlmEnabledBrowserArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyPoolname6Output{})
	pulumi.RegisterOutputType(FirewallPolicyPoolname6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyPoolnameOutput{})
	pulumi.RegisterOutputType(FirewallPolicyPoolnameArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRtpAddrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRtpAddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyServiceOutput{})
	pulumi.RegisterOutputType(FirewallPolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicySgtOutput{})
	pulumi.RegisterOutputType(FirewallPolicySgtArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicySrcVendorMacOutput{})
	pulumi.RegisterOutputType(FirewallPolicySrcVendorMacArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicySrcaddr6Output{})
	pulumi.RegisterOutputType(FirewallPolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicySrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallPolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicySrcintfOutput{})
	pulumi.RegisterOutputType(FirewallPolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicySslMirrorIntfOutput{})
	pulumi.RegisterOutputType(FirewallPolicySslMirrorIntfArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(FirewallPolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyUserOutput{})
	pulumi.RegisterOutputType(FirewallPolicyUserArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyZtnaEmsTagOutput{})
	pulumi.RegisterOutputType(FirewallPolicyZtnaEmsTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyZtnaGeoTagOutput{})
	pulumi.RegisterOutputType(FirewallPolicyZtnaGeoTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsCifsOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsCifsPtrOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsCifsServerKeytabOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsCifsServerKeytabArrayOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsDnsOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsDnsPtrOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsFtpOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsFtpPtrOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsHttpOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsHttpPtrOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsImapOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsImapPtrOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsMailSignatureOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsMailSignaturePtrOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsMapiOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsMapiPtrOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsNntpOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsNntpPtrOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsPop3Output{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsPop3PtrOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsSmtpOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsSmtpPtrOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsSshOutput{})
	pulumi.RegisterOutputType(FirewallProfileprotocoloptionsSshPtrOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddressApplicationOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddressApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddressCategoryOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddressCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddressHeaderGroupOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddressHeaderGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddressTaggingOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddressTaggingArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddressTaggingTagOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddressTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddrgrpMemberOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddrgrpMemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddrgrpTaggingOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddrgrpTaggingArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddrgrpTaggingTagOutput{})
	pulumi.RegisterOutputType(FirewallProxyaddrgrpTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyAccessProxy6Output{})
	pulumi.RegisterOutputType(FirewallProxypolicyAccessProxy6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyAccessProxyOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyAccessProxyArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyDstaddr6Output{})
	pulumi.RegisterOutputType(FirewallProxypolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyDstaddrOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyDstintfOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyGroupOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyPoolnameOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyPoolnameArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyServiceOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicySrcaddr6Output{})
	pulumi.RegisterOutputType(FirewallProxypolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicySrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicySrcintfOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyUserOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyUserArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyZtnaEmsTagOutput{})
	pulumi.RegisterOutputType(FirewallProxypolicyZtnaEmsTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallRegionCityOutput{})
	pulumi.RegisterOutputType(FirewallRegionCityArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecurityPolicyseqStatePolicyListOutput{})
	pulumi.RegisterOutputType(FirewallSecurityPolicyseqStatePolicyListArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecurityPolicysortStatePolicyListOutput{})
	pulumi.RegisterOutputType(FirewallSecurityPolicysortStatePolicyListArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyAppGroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyApplicationOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyDstaddr4Output{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyDstaddr4ArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyDstaddr6Output{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyDstaddrOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyDstintfOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyFssoGroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyGroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6CustomOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6CustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6CustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6CustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6GroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6GroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6NameOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6NameArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6SrcCustomOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6SrcCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6SrcCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6SrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6SrcGroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6SrcGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6SrcNameOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetService6SrcNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyServiceOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicySrcaddr4Output{})
	pulumi.RegisterOutputType(FirewallSecuritypolicySrcaddr4ArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicySrcaddr6Output{})
	pulumi.RegisterOutputType(FirewallSecuritypolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicySrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicySrcintfOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyUserOutput{})
	pulumi.RegisterOutputType(FirewallSecuritypolicyUserArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyAppGroupOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyApplicationOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyDstaddr6Output{})
	pulumi.RegisterOutputType(FirewallShapingpolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyDstaddrOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyDstintfOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyGroupOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyServiceOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicySrcaddr6Output{})
	pulumi.RegisterOutputType(FirewallShapingpolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicySrcintfOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyUserOutput{})
	pulumi.RegisterOutputType(FirewallShapingpolicyUserArrayOutput{})
	pulumi.RegisterOutputType(FirewallShapingprofileShapingEntryOutput{})
	pulumi.RegisterOutputType(FirewallShapingprofileShapingEntryArrayOutput{})
	pulumi.RegisterOutputType(FirewallSnifferAnomalyOutput{})
	pulumi.RegisterOutputType(FirewallSnifferAnomalyArrayOutput{})
	pulumi.RegisterOutputType(FirewallSnifferIpThreatfeedOutput{})
	pulumi.RegisterOutputType(FirewallSnifferIpThreatfeedArrayOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileDotOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileDotPtrOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileFtpsOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileFtpsPtrOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileHttpsOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileHttpsPtrOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileImapsOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileImapsPtrOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofilePop3sOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofilePop3sPtrOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileSmtpsOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileSmtpsPtrOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileSshOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileSshPtrOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileSslOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileSslPtrOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileSslExemptOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileSslExemptArrayOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileSslServerOutput{})
	pulumi.RegisterOutputType(FirewallSslsshprofileSslServerArrayOutput{})
	pulumi.RegisterOutputType(FirewallTtlpolicyServiceOutput{})
	pulumi.RegisterOutputType(FirewallTtlpolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallTtlpolicySrcaddrOutput{})
	pulumi.RegisterOutputType(FirewallTtlpolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip46MonitorOutput{})
	pulumi.RegisterOutputType(FirewallVip46MonitorArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip46RealserverOutput{})
	pulumi.RegisterOutputType(FirewallVip46RealserverArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip46SrcFilterOutput{})
	pulumi.RegisterOutputType(FirewallVip46SrcFilterArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip46SrcintfFilterOutput{})
	pulumi.RegisterOutputType(FirewallVip46SrcintfFilterArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip64MonitorOutput{})
	pulumi.RegisterOutputType(FirewallVip64MonitorArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip64RealserverOutput{})
	pulumi.RegisterOutputType(FirewallVip64RealserverArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip64SrcFilterOutput{})
	pulumi.RegisterOutputType(FirewallVip64SrcFilterArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip6MonitorOutput{})
	pulumi.RegisterOutputType(FirewallVip6MonitorArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip6RealserverOutput{})
	pulumi.RegisterOutputType(FirewallVip6RealserverArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip6SrcFilterOutput{})
	pulumi.RegisterOutputType(FirewallVip6SrcFilterArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip6SslCipherSuiteOutput{})
	pulumi.RegisterOutputType(FirewallVip6SslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(FirewallVip6SslServerCipherSuiteOutput{})
	pulumi.RegisterOutputType(FirewallVip6SslServerCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipExtaddrOutput{})
	pulumi.RegisterOutputType(FirewallVipExtaddrArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipMappedipOutput{})
	pulumi.RegisterOutputType(FirewallVipMappedipArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipMonitorOutput{})
	pulumi.RegisterOutputType(FirewallVipMonitorArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipRealserverOutput{})
	pulumi.RegisterOutputType(FirewallVipRealserverArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipServiceOutput{})
	pulumi.RegisterOutputType(FirewallVipServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipSrcFilterOutput{})
	pulumi.RegisterOutputType(FirewallVipSrcFilterArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipSrcintfFilterOutput{})
	pulumi.RegisterOutputType(FirewallVipSrcintfFilterArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipSslCipherSuiteOutput{})
	pulumi.RegisterOutputType(FirewallVipSslCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipSslServerCipherSuiteOutput{})
	pulumi.RegisterOutputType(FirewallVipSslServerCipherSuiteArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipgrp46MemberOutput{})
	pulumi.RegisterOutputType(FirewallVipgrp46MemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipgrp64MemberOutput{})
	pulumi.RegisterOutputType(FirewallVipgrp64MemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipgrp6MemberOutput{})
	pulumi.RegisterOutputType(FirewallVipgrp6MemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipgrpMemberOutput{})
	pulumi.RegisterOutputType(FirewallVipgrpMemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyAppGroupOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyApplicationOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyDstaddr4Output{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyDstaddr4ArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyDstaddr6Output{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyDstintfOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyFssoGroupOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyGroupOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyPoolname4Output{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyPoolname4ArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyPoolname6Output{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyPoolname6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyServiceOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicySrcaddr4Output{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicySrcaddr4ArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicySrcaddr6Output{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicySrcintfOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyUserOutput{})
	pulumi.RegisterOutputType(FirewallconsolidatedPolicyUserArrayOutput{})
	pulumi.RegisterOutputType(FirewallscheduleGroupMemberOutput{})
	pulumi.RegisterOutputType(FirewallscheduleGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallserviceCustomAppCategoryOutput{})
	pulumi.RegisterOutputType(FirewallserviceCustomAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallserviceCustomApplicationOutput{})
	pulumi.RegisterOutputType(FirewallserviceCustomApplicationArrayOutput{})
	pulumi.RegisterOutputType(FirewallserviceGroupMemberOutput{})
	pulumi.RegisterOutputType(FirewallserviceGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(FirewallwildcardfqdnGroupMemberOutput{})
	pulumi.RegisterOutputType(FirewallwildcardfqdnGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(IcapProfileIcapHeaderOutput{})
	pulumi.RegisterOutputType(IcapProfileIcapHeaderArrayOutput{})
	pulumi.RegisterOutputType(IcapProfileRespmodForwardRuleOutput{})
	pulumi.RegisterOutputType(IcapProfileRespmodForwardRuleArrayOutput{})
	pulumi.RegisterOutputType(IcapProfileRespmodForwardRuleHeaderGroupOutput{})
	pulumi.RegisterOutputType(IcapProfileRespmodForwardRuleHeaderGroupArrayOutput{})
	pulumi.RegisterOutputType(IcapProfileRespmodForwardRuleHttpRespStatusCodeOutput{})
	pulumi.RegisterOutputType(IcapProfileRespmodForwardRuleHttpRespStatusCodeArrayOutput{})
	pulumi.RegisterOutputType(IcapServergroupServerListOutput{})
	pulumi.RegisterOutputType(IcapServergroupServerListArrayOutput{})
	pulumi.RegisterOutputType(IpsDecoderParameterOutput{})
	pulumi.RegisterOutputType(IpsDecoderParameterArrayOutput{})
	pulumi.RegisterOutputType(IpsGlobalTlsActiveProbeOutput{})
	pulumi.RegisterOutputType(IpsGlobalTlsActiveProbePtrOutput{})
	pulumi.RegisterOutputType(IpsRuleMetadataOutput{})
	pulumi.RegisterOutputType(IpsRuleMetadataArrayOutput{})
	pulumi.RegisterOutputType(IpsSensorEntryOutput{})
	pulumi.RegisterOutputType(IpsSensorEntryArrayOutput{})
	pulumi.RegisterOutputType(IpsSensorEntryCfeOutput{})
	pulumi.RegisterOutputType(IpsSensorEntryCfeArrayOutput{})
	pulumi.RegisterOutputType(IpsSensorEntryExemptIpOutput{})
	pulumi.RegisterOutputType(IpsSensorEntryExemptIpArrayOutput{})
	pulumi.RegisterOutputType(IpsSensorEntryRuleOutput{})
	pulumi.RegisterOutputType(IpsSensorEntryRuleArrayOutput{})
	pulumi.RegisterOutputType(IpsSensorEntryVulnTypeOutput{})
	pulumi.RegisterOutputType(IpsSensorEntryVulnTypeArrayOutput{})
	pulumi.RegisterOutputType(IpsSensorFilterOutput{})
	pulumi.RegisterOutputType(IpsSensorFilterArrayOutput{})
	pulumi.RegisterOutputType(IpsSensorOverrideOutput{})
	pulumi.RegisterOutputType(IpsSensorOverrideArrayOutput{})
	pulumi.RegisterOutputType(IpsSensorOverrideExemptIpOutput{})
	pulumi.RegisterOutputType(IpsSensorOverrideExemptIpArrayOutput{})
	pulumi.RegisterOutputType(LogSettingCustomLogFieldOutput{})
	pulumi.RegisterOutputType(LogSettingCustomLogFieldArrayOutput{})
	pulumi.RegisterOutputType(LogThreatweightApplicationOutput{})
	pulumi.RegisterOutputType(LogThreatweightApplicationArrayOutput{})
	pulumi.RegisterOutputType(LogThreatweightGeolocationOutput{})
	pulumi.RegisterOutputType(LogThreatweightGeolocationArrayOutput{})
	pulumi.RegisterOutputType(LogThreatweightIpsOutput{})
	pulumi.RegisterOutputType(LogThreatweightIpsPtrOutput{})
	pulumi.RegisterOutputType(LogThreatweightLevelOutput{})
	pulumi.RegisterOutputType(LogThreatweightLevelPtrOutput{})
	pulumi.RegisterOutputType(LogThreatweightMalwareOutput{})
	pulumi.RegisterOutputType(LogThreatweightMalwarePtrOutput{})
	pulumi.RegisterOutputType(LogThreatweightWebOutput{})
	pulumi.RegisterOutputType(LogThreatweightWebArrayOutput{})
	pulumi.RegisterOutputType(LogdiskFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogdiskFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer2FilterFreeStyleOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer2FilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer2OverridefilterFreeStyleOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer2OverridefilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer2OverridesettingSerialOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer2OverridesettingSerialArrayOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer2SettingSerialOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer2SettingSerialArrayOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer3FilterFreeStyleOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer3FilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer3OverridefilterFreeStyleOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer3OverridefilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer3OverridesettingSerialOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer3OverridesettingSerialArrayOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer3SettingSerialOutput{})
	pulumi.RegisterOutputType(Logfortianalyzer3SettingSerialArrayOutput{})
	pulumi.RegisterOutputType(LogfortianalyzerFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogfortianalyzerFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogfortianalyzerOverridefilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogfortianalyzerOverridefilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogfortianalyzerOverridesettingSerialOutput{})
	pulumi.RegisterOutputType(LogfortianalyzerOverridesettingSerialArrayOutput{})
	pulumi.RegisterOutputType(LogfortianalyzerSettingSerialOutput{})
	pulumi.RegisterOutputType(LogfortianalyzerSettingSerialArrayOutput{})
}
