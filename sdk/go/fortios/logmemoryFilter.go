// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Filters for memory buffer.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewLogmemoryFilter(ctx, "trname", &fortios.LogmemoryFilterArgs{
//				Anomaly:          pulumi.String("enable"),
//				Dns:              pulumi.String("enable"),
//				FilterType:       pulumi.String("include"),
//				ForwardTraffic:   pulumi.String("enable"),
//				Gtp:              pulumi.String("enable"),
//				LocalTraffic:     pulumi.String("enable"),
//				MulticastTraffic: pulumi.String("enable"),
//				Severity:         pulumi.String("information"),
//				SnifferTraffic:   pulumi.String("enable"),
//				Ssh:              pulumi.String("enable"),
//				Voip:             pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # LogMemory Filter can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/logmemoryFilter:LogmemoryFilter labelname LogMemoryFilter
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/logmemoryFilter:LogmemoryFilter labelname LogMemoryFilter
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type LogmemoryFilter struct {
	pulumi.CustomResourceState

	// Enable/disable admin login/logout logging. Valid values: `enable`, `disable`.
	Admin pulumi.StringOutput `pulumi:"admin"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringOutput `pulumi:"anomaly"`
	// Enable/disable firewall authentication logging. Valid values: `enable`, `disable`.
	Auth pulumi.StringOutput `pulumi:"auth"`
	// Enable/disable CPU & memory usage logging every 5 minutes. Valid values: `enable`, `disable`.
	CpuMemoryUsage pulumi.StringOutput `pulumi:"cpuMemoryUsage"`
	// Enable/disable DHCP service messages logging. Valid values: `enable`, `disable`.
	Dhcp pulumi.StringOutput `pulumi:"dhcp"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringOutput `pulumi:"dns"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable event logging. Valid values: `enable`, `disable`.
	Event pulumi.StringOutput `pulumi:"event"`
	// Memory log filter.
	Filter pulumi.StringOutput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringOutput `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringOutput `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogmemoryFilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringOutput `pulumi:"gtp"`
	// Enable/disable HA logging. Valid values: `enable`, `disable`.
	Ha pulumi.StringOutput `pulumi:"ha"`
	// Enable/disable IPsec negotiation messages logging. Valid values: `enable`, `disable`.
	Ipsec pulumi.StringOutput `pulumi:"ipsec"`
	// Enable/disable VIP real server health monitoring logging. Valid values: `enable`, `disable`.
	LdbMonitor pulumi.StringOutput `pulumi:"ldbMonitor"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringOutput `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringOutput `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringOutput `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringOutput `pulumi:"netscanVulnerability"`
	// Enable/disable pattern update logging. Valid values: `enable`, `disable`.
	Pattern pulumi.StringOutput `pulumi:"pattern"`
	// Enable/disable L2TP/PPTP/PPPoE logging. Valid values: `enable`, `disable`.
	Ppp pulumi.StringOutput `pulumi:"ppp"`
	// Enable/disable RADIUS messages logging. Valid values: `enable`, `disable`.
	Radius pulumi.StringOutput `pulumi:"radius"`
	// Log every message above and including this severity level. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringOutput `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringOutput `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringOutput `pulumi:"ssh"`
	// Enable/disable SSL administrator login logging. Valid values: `enable`, `disable`.
	SslvpnLogAdm pulumi.StringOutput `pulumi:"sslvpnLogAdm"`
	// Enable/disable SSL user authentication logging. Valid values: `enable`, `disable`.
	SslvpnLogAuth pulumi.StringOutput `pulumi:"sslvpnLogAuth"`
	// Enable/disable SSL session logging. Valid values: `enable`, `disable`.
	SslvpnLogSession pulumi.StringOutput `pulumi:"sslvpnLogSession"`
	// Enable/disable system activity logging. Valid values: `enable`, `disable`.
	System pulumi.StringOutput `pulumi:"system"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable VIP SSL logging. Valid values: `enable`, `disable`.
	VipSsl pulumi.StringOutput `pulumi:"vipSsl"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringOutput `pulumi:"voip"`
	// Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
	WanOpt pulumi.StringOutput `pulumi:"wanOpt"`
	// Enable/disable wireless activity event logging. Valid values: `enable`, `disable`.
	WirelessActivity pulumi.StringOutput `pulumi:"wirelessActivity"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringOutput `pulumi:"ztnaTraffic"`
}

// NewLogmemoryFilter registers a new resource with the given unique name, arguments, and options.
func NewLogmemoryFilter(ctx *pulumi.Context,
	name string, args *LogmemoryFilterArgs, opts ...pulumi.ResourceOption) (*LogmemoryFilter, error) {
	if args == nil {
		args = &LogmemoryFilterArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LogmemoryFilter
	err := ctx.RegisterResource("fortios:index/logmemoryFilter:LogmemoryFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogmemoryFilter gets an existing LogmemoryFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogmemoryFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogmemoryFilterState, opts ...pulumi.ResourceOption) (*LogmemoryFilter, error) {
	var resource LogmemoryFilter
	err := ctx.ReadResource("fortios:index/logmemoryFilter:LogmemoryFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogmemoryFilter resources.
type logmemoryFilterState struct {
	// Enable/disable admin login/logout logging. Valid values: `enable`, `disable`.
	Admin *string `pulumi:"admin"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly *string `pulumi:"anomaly"`
	// Enable/disable firewall authentication logging. Valid values: `enable`, `disable`.
	Auth *string `pulumi:"auth"`
	// Enable/disable CPU & memory usage logging every 5 minutes. Valid values: `enable`, `disable`.
	CpuMemoryUsage *string `pulumi:"cpuMemoryUsage"`
	// Enable/disable DHCP service messages logging. Valid values: `enable`, `disable`.
	Dhcp *string `pulumi:"dhcp"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns *string `pulumi:"dns"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable event logging. Valid values: `enable`, `disable`.
	Event *string `pulumi:"event"`
	// Memory log filter.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic *string `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles []LogmemoryFilterFreeStyle `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp *string `pulumi:"gtp"`
	// Enable/disable HA logging. Valid values: `enable`, `disable`.
	Ha *string `pulumi:"ha"`
	// Enable/disable IPsec negotiation messages logging. Valid values: `enable`, `disable`.
	Ipsec *string `pulumi:"ipsec"`
	// Enable/disable VIP real server health monitoring logging. Valid values: `enable`, `disable`.
	LdbMonitor *string `pulumi:"ldbMonitor"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic *string `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic *string `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery *string `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability *string `pulumi:"netscanVulnerability"`
	// Enable/disable pattern update logging. Valid values: `enable`, `disable`.
	Pattern *string `pulumi:"pattern"`
	// Enable/disable L2TP/PPTP/PPPoE logging. Valid values: `enable`, `disable`.
	Ppp *string `pulumi:"ppp"`
	// Enable/disable RADIUS messages logging. Valid values: `enable`, `disable`.
	Radius *string `pulumi:"radius"`
	// Log every message above and including this severity level. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic *string `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh *string `pulumi:"ssh"`
	// Enable/disable SSL administrator login logging. Valid values: `enable`, `disable`.
	SslvpnLogAdm *string `pulumi:"sslvpnLogAdm"`
	// Enable/disable SSL user authentication logging. Valid values: `enable`, `disable`.
	SslvpnLogAuth *string `pulumi:"sslvpnLogAuth"`
	// Enable/disable SSL session logging. Valid values: `enable`, `disable`.
	SslvpnLogSession *string `pulumi:"sslvpnLogSession"`
	// Enable/disable system activity logging. Valid values: `enable`, `disable`.
	System *string `pulumi:"system"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable VIP SSL logging. Valid values: `enable`, `disable`.
	VipSsl *string `pulumi:"vipSsl"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip *string `pulumi:"voip"`
	// Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
	WanOpt *string `pulumi:"wanOpt"`
	// Enable/disable wireless activity event logging. Valid values: `enable`, `disable`.
	WirelessActivity *string `pulumi:"wirelessActivity"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic *string `pulumi:"ztnaTraffic"`
}

type LogmemoryFilterState struct {
	// Enable/disable admin login/logout logging. Valid values: `enable`, `disable`.
	Admin pulumi.StringPtrInput
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringPtrInput
	// Enable/disable firewall authentication logging. Valid values: `enable`, `disable`.
	Auth pulumi.StringPtrInput
	// Enable/disable CPU & memory usage logging every 5 minutes. Valid values: `enable`, `disable`.
	CpuMemoryUsage pulumi.StringPtrInput
	// Enable/disable DHCP service messages logging. Valid values: `enable`, `disable`.
	Dhcp pulumi.StringPtrInput
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable event logging. Valid values: `enable`, `disable`.
	Event pulumi.StringPtrInput
	// Memory log filter.
	Filter pulumi.StringPtrInput
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringPtrInput
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogmemoryFilterFreeStyleArrayInput
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringPtrInput
	// Enable/disable HA logging. Valid values: `enable`, `disable`.
	Ha pulumi.StringPtrInput
	// Enable/disable IPsec negotiation messages logging. Valid values: `enable`, `disable`.
	Ipsec pulumi.StringPtrInput
	// Enable/disable VIP real server health monitoring logging. Valid values: `enable`, `disable`.
	LdbMonitor pulumi.StringPtrInput
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringPtrInput
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringPtrInput
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringPtrInput
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringPtrInput
	// Enable/disable pattern update logging. Valid values: `enable`, `disable`.
	Pattern pulumi.StringPtrInput
	// Enable/disable L2TP/PPTP/PPPoE logging. Valid values: `enable`, `disable`.
	Ppp pulumi.StringPtrInput
	// Enable/disable RADIUS messages logging. Valid values: `enable`, `disable`.
	Radius pulumi.StringPtrInput
	// Log every message above and including this severity level. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringPtrInput
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringPtrInput
	// Enable/disable SSL administrator login logging. Valid values: `enable`, `disable`.
	SslvpnLogAdm pulumi.StringPtrInput
	// Enable/disable SSL user authentication logging. Valid values: `enable`, `disable`.
	SslvpnLogAuth pulumi.StringPtrInput
	// Enable/disable SSL session logging. Valid values: `enable`, `disable`.
	SslvpnLogSession pulumi.StringPtrInput
	// Enable/disable system activity logging. Valid values: `enable`, `disable`.
	System pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable VIP SSL logging. Valid values: `enable`, `disable`.
	VipSsl pulumi.StringPtrInput
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringPtrInput
	// Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
	WanOpt pulumi.StringPtrInput
	// Enable/disable wireless activity event logging. Valid values: `enable`, `disable`.
	WirelessActivity pulumi.StringPtrInput
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringPtrInput
}

func (LogmemoryFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logmemoryFilterState)(nil)).Elem()
}

type logmemoryFilterArgs struct {
	// Enable/disable admin login/logout logging. Valid values: `enable`, `disable`.
	Admin *string `pulumi:"admin"`
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly *string `pulumi:"anomaly"`
	// Enable/disable firewall authentication logging. Valid values: `enable`, `disable`.
	Auth *string `pulumi:"auth"`
	// Enable/disable CPU & memory usage logging every 5 minutes. Valid values: `enable`, `disable`.
	CpuMemoryUsage *string `pulumi:"cpuMemoryUsage"`
	// Enable/disable DHCP service messages logging. Valid values: `enable`, `disable`.
	Dhcp *string `pulumi:"dhcp"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns *string `pulumi:"dns"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable event logging. Valid values: `enable`, `disable`.
	Event *string `pulumi:"event"`
	// Memory log filter.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic *string `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles []LogmemoryFilterFreeStyle `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp *string `pulumi:"gtp"`
	// Enable/disable HA logging. Valid values: `enable`, `disable`.
	Ha *string `pulumi:"ha"`
	// Enable/disable IPsec negotiation messages logging. Valid values: `enable`, `disable`.
	Ipsec *string `pulumi:"ipsec"`
	// Enable/disable VIP real server health monitoring logging. Valid values: `enable`, `disable`.
	LdbMonitor *string `pulumi:"ldbMonitor"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic *string `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic *string `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery *string `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability *string `pulumi:"netscanVulnerability"`
	// Enable/disable pattern update logging. Valid values: `enable`, `disable`.
	Pattern *string `pulumi:"pattern"`
	// Enable/disable L2TP/PPTP/PPPoE logging. Valid values: `enable`, `disable`.
	Ppp *string `pulumi:"ppp"`
	// Enable/disable RADIUS messages logging. Valid values: `enable`, `disable`.
	Radius *string `pulumi:"radius"`
	// Log every message above and including this severity level. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic *string `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh *string `pulumi:"ssh"`
	// Enable/disable SSL administrator login logging. Valid values: `enable`, `disable`.
	SslvpnLogAdm *string `pulumi:"sslvpnLogAdm"`
	// Enable/disable SSL user authentication logging. Valid values: `enable`, `disable`.
	SslvpnLogAuth *string `pulumi:"sslvpnLogAuth"`
	// Enable/disable SSL session logging. Valid values: `enable`, `disable`.
	SslvpnLogSession *string `pulumi:"sslvpnLogSession"`
	// Enable/disable system activity logging. Valid values: `enable`, `disable`.
	System *string `pulumi:"system"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable VIP SSL logging. Valid values: `enable`, `disable`.
	VipSsl *string `pulumi:"vipSsl"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip *string `pulumi:"voip"`
	// Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
	WanOpt *string `pulumi:"wanOpt"`
	// Enable/disable wireless activity event logging. Valid values: `enable`, `disable`.
	WirelessActivity *string `pulumi:"wirelessActivity"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic *string `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogmemoryFilter resource.
type LogmemoryFilterArgs struct {
	// Enable/disable admin login/logout logging. Valid values: `enable`, `disable`.
	Admin pulumi.StringPtrInput
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringPtrInput
	// Enable/disable firewall authentication logging. Valid values: `enable`, `disable`.
	Auth pulumi.StringPtrInput
	// Enable/disable CPU & memory usage logging every 5 minutes. Valid values: `enable`, `disable`.
	CpuMemoryUsage pulumi.StringPtrInput
	// Enable/disable DHCP service messages logging. Valid values: `enable`, `disable`.
	Dhcp pulumi.StringPtrInput
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable event logging. Valid values: `enable`, `disable`.
	Event pulumi.StringPtrInput
	// Memory log filter.
	Filter pulumi.StringPtrInput
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringPtrInput
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogmemoryFilterFreeStyleArrayInput
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringPtrInput
	// Enable/disable HA logging. Valid values: `enable`, `disable`.
	Ha pulumi.StringPtrInput
	// Enable/disable IPsec negotiation messages logging. Valid values: `enable`, `disable`.
	Ipsec pulumi.StringPtrInput
	// Enable/disable VIP real server health monitoring logging. Valid values: `enable`, `disable`.
	LdbMonitor pulumi.StringPtrInput
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringPtrInput
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringPtrInput
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringPtrInput
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringPtrInput
	// Enable/disable pattern update logging. Valid values: `enable`, `disable`.
	Pattern pulumi.StringPtrInput
	// Enable/disable L2TP/PPTP/PPPoE logging. Valid values: `enable`, `disable`.
	Ppp pulumi.StringPtrInput
	// Enable/disable RADIUS messages logging. Valid values: `enable`, `disable`.
	Radius pulumi.StringPtrInput
	// Log every message above and including this severity level. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringPtrInput
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringPtrInput
	// Enable/disable SSL administrator login logging. Valid values: `enable`, `disable`.
	SslvpnLogAdm pulumi.StringPtrInput
	// Enable/disable SSL user authentication logging. Valid values: `enable`, `disable`.
	SslvpnLogAuth pulumi.StringPtrInput
	// Enable/disable SSL session logging. Valid values: `enable`, `disable`.
	SslvpnLogSession pulumi.StringPtrInput
	// Enable/disable system activity logging. Valid values: `enable`, `disable`.
	System pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable VIP SSL logging. Valid values: `enable`, `disable`.
	VipSsl pulumi.StringPtrInput
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringPtrInput
	// Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
	WanOpt pulumi.StringPtrInput
	// Enable/disable wireless activity event logging. Valid values: `enable`, `disable`.
	WirelessActivity pulumi.StringPtrInput
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringPtrInput
}

func (LogmemoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logmemoryFilterArgs)(nil)).Elem()
}

type LogmemoryFilterInput interface {
	pulumi.Input

	ToLogmemoryFilterOutput() LogmemoryFilterOutput
	ToLogmemoryFilterOutputWithContext(ctx context.Context) LogmemoryFilterOutput
}

func (*LogmemoryFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogmemoryFilter)(nil)).Elem()
}

func (i *LogmemoryFilter) ToLogmemoryFilterOutput() LogmemoryFilterOutput {
	return i.ToLogmemoryFilterOutputWithContext(context.Background())
}

func (i *LogmemoryFilter) ToLogmemoryFilterOutputWithContext(ctx context.Context) LogmemoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogmemoryFilterOutput)
}

// LogmemoryFilterArrayInput is an input type that accepts LogmemoryFilterArray and LogmemoryFilterArrayOutput values.
// You can construct a concrete instance of `LogmemoryFilterArrayInput` via:
//
//	LogmemoryFilterArray{ LogmemoryFilterArgs{...} }
type LogmemoryFilterArrayInput interface {
	pulumi.Input

	ToLogmemoryFilterArrayOutput() LogmemoryFilterArrayOutput
	ToLogmemoryFilterArrayOutputWithContext(context.Context) LogmemoryFilterArrayOutput
}

type LogmemoryFilterArray []LogmemoryFilterInput

func (LogmemoryFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogmemoryFilter)(nil)).Elem()
}

func (i LogmemoryFilterArray) ToLogmemoryFilterArrayOutput() LogmemoryFilterArrayOutput {
	return i.ToLogmemoryFilterArrayOutputWithContext(context.Background())
}

func (i LogmemoryFilterArray) ToLogmemoryFilterArrayOutputWithContext(ctx context.Context) LogmemoryFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogmemoryFilterArrayOutput)
}

// LogmemoryFilterMapInput is an input type that accepts LogmemoryFilterMap and LogmemoryFilterMapOutput values.
// You can construct a concrete instance of `LogmemoryFilterMapInput` via:
//
//	LogmemoryFilterMap{ "key": LogmemoryFilterArgs{...} }
type LogmemoryFilterMapInput interface {
	pulumi.Input

	ToLogmemoryFilterMapOutput() LogmemoryFilterMapOutput
	ToLogmemoryFilterMapOutputWithContext(context.Context) LogmemoryFilterMapOutput
}

type LogmemoryFilterMap map[string]LogmemoryFilterInput

func (LogmemoryFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogmemoryFilter)(nil)).Elem()
}

func (i LogmemoryFilterMap) ToLogmemoryFilterMapOutput() LogmemoryFilterMapOutput {
	return i.ToLogmemoryFilterMapOutputWithContext(context.Background())
}

func (i LogmemoryFilterMap) ToLogmemoryFilterMapOutputWithContext(ctx context.Context) LogmemoryFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogmemoryFilterMapOutput)
}

type LogmemoryFilterOutput struct{ *pulumi.OutputState }

func (LogmemoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogmemoryFilter)(nil)).Elem()
}

func (o LogmemoryFilterOutput) ToLogmemoryFilterOutput() LogmemoryFilterOutput {
	return o
}

func (o LogmemoryFilterOutput) ToLogmemoryFilterOutputWithContext(ctx context.Context) LogmemoryFilterOutput {
	return o
}

// Enable/disable admin login/logout logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Admin() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Admin }).(pulumi.StringOutput)
}

// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Anomaly() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Anomaly }).(pulumi.StringOutput)
}

// Enable/disable firewall authentication logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Auth() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Auth }).(pulumi.StringOutput)
}

// Enable/disable CPU & memory usage logging every 5 minutes. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) CpuMemoryUsage() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.CpuMemoryUsage }).(pulumi.StringOutput)
}

// Enable/disable DHCP service messages logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Dhcp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Dhcp }).(pulumi.StringOutput)
}

// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o LogmemoryFilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Enable/disable event logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Event }).(pulumi.StringOutput)
}

// Memory log filter.
func (o LogmemoryFilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
func (o LogmemoryFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) ForwardTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.ForwardTraffic }).(pulumi.StringOutput)
}

// Free Style Filters The structure of `freeStyle` block is documented below.
func (o LogmemoryFilterOutput) FreeStyles() LogmemoryFilterFreeStyleArrayOutput {
	return o.ApplyT(func(v *LogmemoryFilter) LogmemoryFilterFreeStyleArrayOutput { return v.FreeStyles }).(LogmemoryFilterFreeStyleArrayOutput)
}

// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Gtp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Gtp }).(pulumi.StringOutput)
}

// Enable/disable HA logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Ha() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Ha }).(pulumi.StringOutput)
}

// Enable/disable IPsec negotiation messages logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Ipsec() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Ipsec }).(pulumi.StringOutput)
}

// Enable/disable VIP real server health monitoring logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) LdbMonitor() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.LdbMonitor }).(pulumi.StringOutput)
}

// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) LocalTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.LocalTraffic }).(pulumi.StringOutput)
}

// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) MulticastTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.MulticastTraffic }).(pulumi.StringOutput)
}

// Enable/disable netscan discovery event logging.
func (o LogmemoryFilterOutput) NetscanDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.NetscanDiscovery }).(pulumi.StringOutput)
}

// Enable/disable netscan vulnerability event logging.
func (o LogmemoryFilterOutput) NetscanVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.NetscanVulnerability }).(pulumi.StringOutput)
}

// Enable/disable pattern update logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Pattern }).(pulumi.StringOutput)
}

// Enable/disable L2TP/PPTP/PPPoE logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Ppp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Ppp }).(pulumi.StringOutput)
}

// Enable/disable RADIUS messages logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Radius() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Radius }).(pulumi.StringOutput)
}

// Log every message above and including this severity level. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
func (o LogmemoryFilterOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) SnifferTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.SnifferTraffic }).(pulumi.StringOutput)
}

// Enable/disable SSH logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Ssh() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Ssh }).(pulumi.StringOutput)
}

// Enable/disable SSL administrator login logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) SslvpnLogAdm() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.SslvpnLogAdm }).(pulumi.StringOutput)
}

// Enable/disable SSL user authentication logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) SslvpnLogAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.SslvpnLogAuth }).(pulumi.StringOutput)
}

// Enable/disable SSL session logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) SslvpnLogSession() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.SslvpnLogSession }).(pulumi.StringOutput)
}

// Enable/disable system activity logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) System() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.System }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o LogmemoryFilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable VIP SSL logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) VipSsl() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.VipSsl }).(pulumi.StringOutput)
}

// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.Voip }).(pulumi.StringOutput)
}

// Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) WanOpt() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.WanOpt }).(pulumi.StringOutput)
}

// Enable/disable wireless activity event logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) WirelessActivity() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.WirelessActivity }).(pulumi.StringOutput)
}

// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
func (o LogmemoryFilterOutput) ZtnaTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogmemoryFilter) pulumi.StringOutput { return v.ZtnaTraffic }).(pulumi.StringOutput)
}

type LogmemoryFilterArrayOutput struct{ *pulumi.OutputState }

func (LogmemoryFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogmemoryFilter)(nil)).Elem()
}

func (o LogmemoryFilterArrayOutput) ToLogmemoryFilterArrayOutput() LogmemoryFilterArrayOutput {
	return o
}

func (o LogmemoryFilterArrayOutput) ToLogmemoryFilterArrayOutputWithContext(ctx context.Context) LogmemoryFilterArrayOutput {
	return o
}

func (o LogmemoryFilterArrayOutput) Index(i pulumi.IntInput) LogmemoryFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogmemoryFilter {
		return vs[0].([]*LogmemoryFilter)[vs[1].(int)]
	}).(LogmemoryFilterOutput)
}

type LogmemoryFilterMapOutput struct{ *pulumi.OutputState }

func (LogmemoryFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogmemoryFilter)(nil)).Elem()
}

func (o LogmemoryFilterMapOutput) ToLogmemoryFilterMapOutput() LogmemoryFilterMapOutput {
	return o
}

func (o LogmemoryFilterMapOutput) ToLogmemoryFilterMapOutputWithContext(ctx context.Context) LogmemoryFilterMapOutput {
	return o
}

func (o LogmemoryFilterMapOutput) MapIndex(k pulumi.StringInput) LogmemoryFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogmemoryFilter {
		return vs[0].(map[string]*LogmemoryFilter)[vs[1].(string)]
	}).(LogmemoryFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogmemoryFilterInput)(nil)).Elem(), &LogmemoryFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogmemoryFilterArrayInput)(nil)).Elem(), LogmemoryFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogmemoryFilterMapInput)(nil)).Elem(), LogmemoryFilterMap{})
	pulumi.RegisterOutputType(LogmemoryFilterOutput{})
	pulumi.RegisterOutputType(LogmemoryFilterArrayOutput{})
	pulumi.RegisterOutputType(LogmemoryFilterMapOutput{})
}
