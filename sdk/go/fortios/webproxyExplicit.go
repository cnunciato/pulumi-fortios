// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure explicit Web proxy settings.
//
// ## Import
//
// # WebProxy Explicit can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/webproxyExplicit:WebproxyExplicit labelname WebProxyExplicit
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/webproxyExplicit:WebproxyExplicit labelname WebProxyExplicit
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type WebproxyExplicit struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
	FtpIncomingPort pulumi.StringOutput `pulumi:"ftpIncomingPort"`
	// Enable to proxy FTP-over-HTTP sessions sent from a web browser. Valid values: `enable`, `disable`.
	FtpOverHttp pulumi.StringOutput `pulumi:"ftpOverHttp"`
	// Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080).
	HttpIncomingPort pulumi.StringOutput `pulumi:"httpIncomingPort"`
	// Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP).
	HttpsIncomingPort pulumi.StringOutput `pulumi:"httpsIncomingPort"`
	// Enable/disable sending the client a replacement message for HTTPS requests. Valid values: `enable`, `disable`.
	HttpsReplacementMessage pulumi.StringOutput `pulumi:"httpsReplacementMessage"`
	// Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address.
	IncomingIp pulumi.StringOutput `pulumi:"incomingIp"`
	// Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address.
	IncomingIp6 pulumi.StringOutput `pulumi:"incomingIp6"`
	// Enable/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command. Valid values: `enable`, `disable`.
	Ipv6Status pulumi.StringOutput `pulumi:"ipv6Status"`
	// Enable/disable displaying a replacement message when a server error is detected. Valid values: `enable`, `disable`.
	MessageUponServerError pulumi.StringOutput `pulumi:"messageUponServerError"`
	// Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address.
	OutgoingIp pulumi.StringOutput `pulumi:"outgoingIp"`
	// Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses.
	OutgoingIp6 pulumi.StringOutput `pulumi:"outgoingIp6"`
	// PAC file contents enclosed in quotes (maximum of 256K bytes).
	PacFileData pulumi.StringOutput `pulumi:"pacFileData"`
	// Pac file name.
	PacFileName pulumi.StringOutput `pulumi:"pacFileName"`
	// Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP).
	PacFileServerPort pulumi.StringOutput `pulumi:"pacFileServerPort"`
	// Enable/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile. Valid values: `enable`, `disable`.
	PacFileServerStatus pulumi.StringOutput `pulumi:"pacFileServerStatus"`
	// Enable/disable to get Proxy Auto-Configuration (PAC) through HTTPS. Valid values: `enable`, `disable`.
	PacFileThroughHttps pulumi.StringOutput `pulumi:"pacFileThroughHttps"`
	// PAC file access URL.
	PacFileUrl pulumi.StringOutput `pulumi:"pacFileUrl"`
	// PAC policies. The structure of `pacPolicy` block is documented below.
	PacPolicies WebproxyExplicitPacPolicyArrayOutput `pulumi:"pacPolicies"`
	// Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4). Valid values: `ipv4`, `ipv6`.
	PrefDnsResult pulumi.StringOutput `pulumi:"prefDnsResult"`
	// Authentication realm used to identify the explicit web proxy (maximum of 63 characters).
	Realm pulumi.StringOutput `pulumi:"realm"`
	// Accept or deny explicit web proxy sessions when no web proxy firewall policy exists. Valid values: `accept`, `deny`.
	SecDefaultAction pulumi.StringOutput `pulumi:"secDefaultAction"`
	// Enable/disable the SOCKS proxy. Valid values: `enable`, `disable`.
	Socks pulumi.StringOutput `pulumi:"socks"`
	// Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
	SocksIncomingPort pulumi.StringOutput `pulumi:"socksIncomingPort"`
	// Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringOutput `pulumi:"sslAlgorithm"`
	// Enable/disable the explicit Web proxy for HTTP and HTTPS session. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Enable/disable strict guest user checking by the explicit web proxy. Valid values: `enable`, `disable`.
	StrictGuest pulumi.StringOutput `pulumi:"strictGuest"`
	// Enable/disable logging timed-out authentication requests. Valid values: `enable`, `disable`.
	TraceAuthNoRsp pulumi.StringOutput `pulumi:"traceAuthNoRsp"`
	// Either reject unknown HTTP traffic as malformed or handle unknown HTTP traffic as best as the proxy server can.
	UnknownHttpVersion pulumi.StringOutput `pulumi:"unknownHttpVersion"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWebproxyExplicit registers a new resource with the given unique name, arguments, and options.
func NewWebproxyExplicit(ctx *pulumi.Context,
	name string, args *WebproxyExplicitArgs, opts ...pulumi.ResourceOption) (*WebproxyExplicit, error) {
	if args == nil {
		args = &WebproxyExplicitArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WebproxyExplicit
	err := ctx.RegisterResource("fortios:index/webproxyExplicit:WebproxyExplicit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebproxyExplicit gets an existing WebproxyExplicit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebproxyExplicit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebproxyExplicitState, opts ...pulumi.ResourceOption) (*WebproxyExplicit, error) {
	var resource WebproxyExplicit
	err := ctx.ReadResource("fortios:index/webproxyExplicit:WebproxyExplicit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebproxyExplicit resources.
type webproxyExplicitState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
	FtpIncomingPort *string `pulumi:"ftpIncomingPort"`
	// Enable to proxy FTP-over-HTTP sessions sent from a web browser. Valid values: `enable`, `disable`.
	FtpOverHttp *string `pulumi:"ftpOverHttp"`
	// Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080).
	HttpIncomingPort *string `pulumi:"httpIncomingPort"`
	// Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP).
	HttpsIncomingPort *string `pulumi:"httpsIncomingPort"`
	// Enable/disable sending the client a replacement message for HTTPS requests. Valid values: `enable`, `disable`.
	HttpsReplacementMessage *string `pulumi:"httpsReplacementMessage"`
	// Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address.
	IncomingIp *string `pulumi:"incomingIp"`
	// Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address.
	IncomingIp6 *string `pulumi:"incomingIp6"`
	// Enable/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command. Valid values: `enable`, `disable`.
	Ipv6Status *string `pulumi:"ipv6Status"`
	// Enable/disable displaying a replacement message when a server error is detected. Valid values: `enable`, `disable`.
	MessageUponServerError *string `pulumi:"messageUponServerError"`
	// Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address.
	OutgoingIp *string `pulumi:"outgoingIp"`
	// Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses.
	OutgoingIp6 *string `pulumi:"outgoingIp6"`
	// PAC file contents enclosed in quotes (maximum of 256K bytes).
	PacFileData *string `pulumi:"pacFileData"`
	// Pac file name.
	PacFileName *string `pulumi:"pacFileName"`
	// Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP).
	PacFileServerPort *string `pulumi:"pacFileServerPort"`
	// Enable/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile. Valid values: `enable`, `disable`.
	PacFileServerStatus *string `pulumi:"pacFileServerStatus"`
	// Enable/disable to get Proxy Auto-Configuration (PAC) through HTTPS. Valid values: `enable`, `disable`.
	PacFileThroughHttps *string `pulumi:"pacFileThroughHttps"`
	// PAC file access URL.
	PacFileUrl *string `pulumi:"pacFileUrl"`
	// PAC policies. The structure of `pacPolicy` block is documented below.
	PacPolicies []WebproxyExplicitPacPolicy `pulumi:"pacPolicies"`
	// Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4). Valid values: `ipv4`, `ipv6`.
	PrefDnsResult *string `pulumi:"prefDnsResult"`
	// Authentication realm used to identify the explicit web proxy (maximum of 63 characters).
	Realm *string `pulumi:"realm"`
	// Accept or deny explicit web proxy sessions when no web proxy firewall policy exists. Valid values: `accept`, `deny`.
	SecDefaultAction *string `pulumi:"secDefaultAction"`
	// Enable/disable the SOCKS proxy. Valid values: `enable`, `disable`.
	Socks *string `pulumi:"socks"`
	// Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
	SocksIncomingPort *string `pulumi:"socksIncomingPort"`
	// Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// Enable/disable the explicit Web proxy for HTTP and HTTPS session. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable strict guest user checking by the explicit web proxy. Valid values: `enable`, `disable`.
	StrictGuest *string `pulumi:"strictGuest"`
	// Enable/disable logging timed-out authentication requests. Valid values: `enable`, `disable`.
	TraceAuthNoRsp *string `pulumi:"traceAuthNoRsp"`
	// Either reject unknown HTTP traffic as malformed or handle unknown HTTP traffic as best as the proxy server can.
	UnknownHttpVersion *string `pulumi:"unknownHttpVersion"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WebproxyExplicitState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
	FtpIncomingPort pulumi.StringPtrInput
	// Enable to proxy FTP-over-HTTP sessions sent from a web browser. Valid values: `enable`, `disable`.
	FtpOverHttp pulumi.StringPtrInput
	// Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080).
	HttpIncomingPort pulumi.StringPtrInput
	// Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP).
	HttpsIncomingPort pulumi.StringPtrInput
	// Enable/disable sending the client a replacement message for HTTPS requests. Valid values: `enable`, `disable`.
	HttpsReplacementMessage pulumi.StringPtrInput
	// Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address.
	IncomingIp pulumi.StringPtrInput
	// Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address.
	IncomingIp6 pulumi.StringPtrInput
	// Enable/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command. Valid values: `enable`, `disable`.
	Ipv6Status pulumi.StringPtrInput
	// Enable/disable displaying a replacement message when a server error is detected. Valid values: `enable`, `disable`.
	MessageUponServerError pulumi.StringPtrInput
	// Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address.
	OutgoingIp pulumi.StringPtrInput
	// Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses.
	OutgoingIp6 pulumi.StringPtrInput
	// PAC file contents enclosed in quotes (maximum of 256K bytes).
	PacFileData pulumi.StringPtrInput
	// Pac file name.
	PacFileName pulumi.StringPtrInput
	// Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP).
	PacFileServerPort pulumi.StringPtrInput
	// Enable/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile. Valid values: `enable`, `disable`.
	PacFileServerStatus pulumi.StringPtrInput
	// Enable/disable to get Proxy Auto-Configuration (PAC) through HTTPS. Valid values: `enable`, `disable`.
	PacFileThroughHttps pulumi.StringPtrInput
	// PAC file access URL.
	PacFileUrl pulumi.StringPtrInput
	// PAC policies. The structure of `pacPolicy` block is documented below.
	PacPolicies WebproxyExplicitPacPolicyArrayInput
	// Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4). Valid values: `ipv4`, `ipv6`.
	PrefDnsResult pulumi.StringPtrInput
	// Authentication realm used to identify the explicit web proxy (maximum of 63 characters).
	Realm pulumi.StringPtrInput
	// Accept or deny explicit web proxy sessions when no web proxy firewall policy exists. Valid values: `accept`, `deny`.
	SecDefaultAction pulumi.StringPtrInput
	// Enable/disable the SOCKS proxy. Valid values: `enable`, `disable`.
	Socks pulumi.StringPtrInput
	// Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
	SocksIncomingPort pulumi.StringPtrInput
	// Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput
	// Enable/disable the explicit Web proxy for HTTP and HTTPS session. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Enable/disable strict guest user checking by the explicit web proxy. Valid values: `enable`, `disable`.
	StrictGuest pulumi.StringPtrInput
	// Enable/disable logging timed-out authentication requests. Valid values: `enable`, `disable`.
	TraceAuthNoRsp pulumi.StringPtrInput
	// Either reject unknown HTTP traffic as malformed or handle unknown HTTP traffic as best as the proxy server can.
	UnknownHttpVersion pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WebproxyExplicitState) ElementType() reflect.Type {
	return reflect.TypeOf((*webproxyExplicitState)(nil)).Elem()
}

type webproxyExplicitArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
	FtpIncomingPort *string `pulumi:"ftpIncomingPort"`
	// Enable to proxy FTP-over-HTTP sessions sent from a web browser. Valid values: `enable`, `disable`.
	FtpOverHttp *string `pulumi:"ftpOverHttp"`
	// Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080).
	HttpIncomingPort *string `pulumi:"httpIncomingPort"`
	// Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP).
	HttpsIncomingPort *string `pulumi:"httpsIncomingPort"`
	// Enable/disable sending the client a replacement message for HTTPS requests. Valid values: `enable`, `disable`.
	HttpsReplacementMessage *string `pulumi:"httpsReplacementMessage"`
	// Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address.
	IncomingIp *string `pulumi:"incomingIp"`
	// Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address.
	IncomingIp6 *string `pulumi:"incomingIp6"`
	// Enable/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command. Valid values: `enable`, `disable`.
	Ipv6Status *string `pulumi:"ipv6Status"`
	// Enable/disable displaying a replacement message when a server error is detected. Valid values: `enable`, `disable`.
	MessageUponServerError *string `pulumi:"messageUponServerError"`
	// Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address.
	OutgoingIp *string `pulumi:"outgoingIp"`
	// Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses.
	OutgoingIp6 *string `pulumi:"outgoingIp6"`
	// PAC file contents enclosed in quotes (maximum of 256K bytes).
	PacFileData *string `pulumi:"pacFileData"`
	// Pac file name.
	PacFileName *string `pulumi:"pacFileName"`
	// Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP).
	PacFileServerPort *string `pulumi:"pacFileServerPort"`
	// Enable/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile. Valid values: `enable`, `disable`.
	PacFileServerStatus *string `pulumi:"pacFileServerStatus"`
	// Enable/disable to get Proxy Auto-Configuration (PAC) through HTTPS. Valid values: `enable`, `disable`.
	PacFileThroughHttps *string `pulumi:"pacFileThroughHttps"`
	// PAC file access URL.
	PacFileUrl *string `pulumi:"pacFileUrl"`
	// PAC policies. The structure of `pacPolicy` block is documented below.
	PacPolicies []WebproxyExplicitPacPolicy `pulumi:"pacPolicies"`
	// Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4). Valid values: `ipv4`, `ipv6`.
	PrefDnsResult *string `pulumi:"prefDnsResult"`
	// Authentication realm used to identify the explicit web proxy (maximum of 63 characters).
	Realm *string `pulumi:"realm"`
	// Accept or deny explicit web proxy sessions when no web proxy firewall policy exists. Valid values: `accept`, `deny`.
	SecDefaultAction *string `pulumi:"secDefaultAction"`
	// Enable/disable the SOCKS proxy. Valid values: `enable`, `disable`.
	Socks *string `pulumi:"socks"`
	// Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
	SocksIncomingPort *string `pulumi:"socksIncomingPort"`
	// Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low. Valid values: `high`, `medium`, `low`.
	SslAlgorithm *string `pulumi:"sslAlgorithm"`
	// Enable/disable the explicit Web proxy for HTTP and HTTPS session. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable strict guest user checking by the explicit web proxy. Valid values: `enable`, `disable`.
	StrictGuest *string `pulumi:"strictGuest"`
	// Enable/disable logging timed-out authentication requests. Valid values: `enable`, `disable`.
	TraceAuthNoRsp *string `pulumi:"traceAuthNoRsp"`
	// Either reject unknown HTTP traffic as malformed or handle unknown HTTP traffic as best as the proxy server can.
	UnknownHttpVersion *string `pulumi:"unknownHttpVersion"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WebproxyExplicit resource.
type WebproxyExplicitArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
	FtpIncomingPort pulumi.StringPtrInput
	// Enable to proxy FTP-over-HTTP sessions sent from a web browser. Valid values: `enable`, `disable`.
	FtpOverHttp pulumi.StringPtrInput
	// Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080).
	HttpIncomingPort pulumi.StringPtrInput
	// Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP).
	HttpsIncomingPort pulumi.StringPtrInput
	// Enable/disable sending the client a replacement message for HTTPS requests. Valid values: `enable`, `disable`.
	HttpsReplacementMessage pulumi.StringPtrInput
	// Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address.
	IncomingIp pulumi.StringPtrInput
	// Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address.
	IncomingIp6 pulumi.StringPtrInput
	// Enable/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command. Valid values: `enable`, `disable`.
	Ipv6Status pulumi.StringPtrInput
	// Enable/disable displaying a replacement message when a server error is detected. Valid values: `enable`, `disable`.
	MessageUponServerError pulumi.StringPtrInput
	// Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address.
	OutgoingIp pulumi.StringPtrInput
	// Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses.
	OutgoingIp6 pulumi.StringPtrInput
	// PAC file contents enclosed in quotes (maximum of 256K bytes).
	PacFileData pulumi.StringPtrInput
	// Pac file name.
	PacFileName pulumi.StringPtrInput
	// Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP).
	PacFileServerPort pulumi.StringPtrInput
	// Enable/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile. Valid values: `enable`, `disable`.
	PacFileServerStatus pulumi.StringPtrInput
	// Enable/disable to get Proxy Auto-Configuration (PAC) through HTTPS. Valid values: `enable`, `disable`.
	PacFileThroughHttps pulumi.StringPtrInput
	// PAC file access URL.
	PacFileUrl pulumi.StringPtrInput
	// PAC policies. The structure of `pacPolicy` block is documented below.
	PacPolicies WebproxyExplicitPacPolicyArrayInput
	// Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4). Valid values: `ipv4`, `ipv6`.
	PrefDnsResult pulumi.StringPtrInput
	// Authentication realm used to identify the explicit web proxy (maximum of 63 characters).
	Realm pulumi.StringPtrInput
	// Accept or deny explicit web proxy sessions when no web proxy firewall policy exists. Valid values: `accept`, `deny`.
	SecDefaultAction pulumi.StringPtrInput
	// Enable/disable the SOCKS proxy. Valid values: `enable`, `disable`.
	Socks pulumi.StringPtrInput
	// Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
	SocksIncomingPort pulumi.StringPtrInput
	// Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low. Valid values: `high`, `medium`, `low`.
	SslAlgorithm pulumi.StringPtrInput
	// Enable/disable the explicit Web proxy for HTTP and HTTPS session. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Enable/disable strict guest user checking by the explicit web proxy. Valid values: `enable`, `disable`.
	StrictGuest pulumi.StringPtrInput
	// Enable/disable logging timed-out authentication requests. Valid values: `enable`, `disable`.
	TraceAuthNoRsp pulumi.StringPtrInput
	// Either reject unknown HTTP traffic as malformed or handle unknown HTTP traffic as best as the proxy server can.
	UnknownHttpVersion pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WebproxyExplicitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webproxyExplicitArgs)(nil)).Elem()
}

type WebproxyExplicitInput interface {
	pulumi.Input

	ToWebproxyExplicitOutput() WebproxyExplicitOutput
	ToWebproxyExplicitOutputWithContext(ctx context.Context) WebproxyExplicitOutput
}

func (*WebproxyExplicit) ElementType() reflect.Type {
	return reflect.TypeOf((**WebproxyExplicit)(nil)).Elem()
}

func (i *WebproxyExplicit) ToWebproxyExplicitOutput() WebproxyExplicitOutput {
	return i.ToWebproxyExplicitOutputWithContext(context.Background())
}

func (i *WebproxyExplicit) ToWebproxyExplicitOutputWithContext(ctx context.Context) WebproxyExplicitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitOutput)
}

// WebproxyExplicitArrayInput is an input type that accepts WebproxyExplicitArray and WebproxyExplicitArrayOutput values.
// You can construct a concrete instance of `WebproxyExplicitArrayInput` via:
//
//	WebproxyExplicitArray{ WebproxyExplicitArgs{...} }
type WebproxyExplicitArrayInput interface {
	pulumi.Input

	ToWebproxyExplicitArrayOutput() WebproxyExplicitArrayOutput
	ToWebproxyExplicitArrayOutputWithContext(context.Context) WebproxyExplicitArrayOutput
}

type WebproxyExplicitArray []WebproxyExplicitInput

func (WebproxyExplicitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebproxyExplicit)(nil)).Elem()
}

func (i WebproxyExplicitArray) ToWebproxyExplicitArrayOutput() WebproxyExplicitArrayOutput {
	return i.ToWebproxyExplicitArrayOutputWithContext(context.Background())
}

func (i WebproxyExplicitArray) ToWebproxyExplicitArrayOutputWithContext(ctx context.Context) WebproxyExplicitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitArrayOutput)
}

// WebproxyExplicitMapInput is an input type that accepts WebproxyExplicitMap and WebproxyExplicitMapOutput values.
// You can construct a concrete instance of `WebproxyExplicitMapInput` via:
//
//	WebproxyExplicitMap{ "key": WebproxyExplicitArgs{...} }
type WebproxyExplicitMapInput interface {
	pulumi.Input

	ToWebproxyExplicitMapOutput() WebproxyExplicitMapOutput
	ToWebproxyExplicitMapOutputWithContext(context.Context) WebproxyExplicitMapOutput
}

type WebproxyExplicitMap map[string]WebproxyExplicitInput

func (WebproxyExplicitMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebproxyExplicit)(nil)).Elem()
}

func (i WebproxyExplicitMap) ToWebproxyExplicitMapOutput() WebproxyExplicitMapOutput {
	return i.ToWebproxyExplicitMapOutputWithContext(context.Background())
}

func (i WebproxyExplicitMap) ToWebproxyExplicitMapOutputWithContext(ctx context.Context) WebproxyExplicitMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebproxyExplicitMapOutput)
}

type WebproxyExplicitOutput struct{ *pulumi.OutputState }

func (WebproxyExplicitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebproxyExplicit)(nil)).Elem()
}

func (o WebproxyExplicitOutput) ToWebproxyExplicitOutput() WebproxyExplicitOutput {
	return o
}

func (o WebproxyExplicitOutput) ToWebproxyExplicitOutputWithContext(ctx context.Context) WebproxyExplicitOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o WebproxyExplicitOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
func (o WebproxyExplicitOutput) FtpIncomingPort() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.FtpIncomingPort }).(pulumi.StringOutput)
}

// Enable to proxy FTP-over-HTTP sessions sent from a web browser. Valid values: `enable`, `disable`.
func (o WebproxyExplicitOutput) FtpOverHttp() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.FtpOverHttp }).(pulumi.StringOutput)
}

// Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080).
func (o WebproxyExplicitOutput) HttpIncomingPort() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.HttpIncomingPort }).(pulumi.StringOutput)
}

// Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP).
func (o WebproxyExplicitOutput) HttpsIncomingPort() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.HttpsIncomingPort }).(pulumi.StringOutput)
}

// Enable/disable sending the client a replacement message for HTTPS requests. Valid values: `enable`, `disable`.
func (o WebproxyExplicitOutput) HttpsReplacementMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.HttpsReplacementMessage }).(pulumi.StringOutput)
}

// Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address.
func (o WebproxyExplicitOutput) IncomingIp() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.IncomingIp }).(pulumi.StringOutput)
}

// Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address.
func (o WebproxyExplicitOutput) IncomingIp6() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.IncomingIp6 }).(pulumi.StringOutput)
}

// Enable/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command. Valid values: `enable`, `disable`.
func (o WebproxyExplicitOutput) Ipv6Status() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.Ipv6Status }).(pulumi.StringOutput)
}

// Enable/disable displaying a replacement message when a server error is detected. Valid values: `enable`, `disable`.
func (o WebproxyExplicitOutput) MessageUponServerError() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.MessageUponServerError }).(pulumi.StringOutput)
}

// Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address.
func (o WebproxyExplicitOutput) OutgoingIp() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.OutgoingIp }).(pulumi.StringOutput)
}

// Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses.
func (o WebproxyExplicitOutput) OutgoingIp6() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.OutgoingIp6 }).(pulumi.StringOutput)
}

// PAC file contents enclosed in quotes (maximum of 256K bytes).
func (o WebproxyExplicitOutput) PacFileData() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.PacFileData }).(pulumi.StringOutput)
}

// Pac file name.
func (o WebproxyExplicitOutput) PacFileName() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.PacFileName }).(pulumi.StringOutput)
}

// Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP).
func (o WebproxyExplicitOutput) PacFileServerPort() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.PacFileServerPort }).(pulumi.StringOutput)
}

// Enable/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile. Valid values: `enable`, `disable`.
func (o WebproxyExplicitOutput) PacFileServerStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.PacFileServerStatus }).(pulumi.StringOutput)
}

// Enable/disable to get Proxy Auto-Configuration (PAC) through HTTPS. Valid values: `enable`, `disable`.
func (o WebproxyExplicitOutput) PacFileThroughHttps() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.PacFileThroughHttps }).(pulumi.StringOutput)
}

// PAC file access URL.
func (o WebproxyExplicitOutput) PacFileUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.PacFileUrl }).(pulumi.StringOutput)
}

// PAC policies. The structure of `pacPolicy` block is documented below.
func (o WebproxyExplicitOutput) PacPolicies() WebproxyExplicitPacPolicyArrayOutput {
	return o.ApplyT(func(v *WebproxyExplicit) WebproxyExplicitPacPolicyArrayOutput { return v.PacPolicies }).(WebproxyExplicitPacPolicyArrayOutput)
}

// Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4). Valid values: `ipv4`, `ipv6`.
func (o WebproxyExplicitOutput) PrefDnsResult() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.PrefDnsResult }).(pulumi.StringOutput)
}

// Authentication realm used to identify the explicit web proxy (maximum of 63 characters).
func (o WebproxyExplicitOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.Realm }).(pulumi.StringOutput)
}

// Accept or deny explicit web proxy sessions when no web proxy firewall policy exists. Valid values: `accept`, `deny`.
func (o WebproxyExplicitOutput) SecDefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.SecDefaultAction }).(pulumi.StringOutput)
}

// Enable/disable the SOCKS proxy. Valid values: `enable`, `disable`.
func (o WebproxyExplicitOutput) Socks() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.Socks }).(pulumi.StringOutput)
}

// Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP).
func (o WebproxyExplicitOutput) SocksIncomingPort() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.SocksIncomingPort }).(pulumi.StringOutput)
}

// Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low. Valid values: `high`, `medium`, `low`.
func (o WebproxyExplicitOutput) SslAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.SslAlgorithm }).(pulumi.StringOutput)
}

// Enable/disable the explicit Web proxy for HTTP and HTTPS session. Valid values: `enable`, `disable`.
func (o WebproxyExplicitOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Enable/disable strict guest user checking by the explicit web proxy. Valid values: `enable`, `disable`.
func (o WebproxyExplicitOutput) StrictGuest() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.StrictGuest }).(pulumi.StringOutput)
}

// Enable/disable logging timed-out authentication requests. Valid values: `enable`, `disable`.
func (o WebproxyExplicitOutput) TraceAuthNoRsp() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.TraceAuthNoRsp }).(pulumi.StringOutput)
}

// Either reject unknown HTTP traffic as malformed or handle unknown HTTP traffic as best as the proxy server can.
func (o WebproxyExplicitOutput) UnknownHttpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringOutput { return v.UnknownHttpVersion }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o WebproxyExplicitOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebproxyExplicit) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WebproxyExplicitArrayOutput struct{ *pulumi.OutputState }

func (WebproxyExplicitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebproxyExplicit)(nil)).Elem()
}

func (o WebproxyExplicitArrayOutput) ToWebproxyExplicitArrayOutput() WebproxyExplicitArrayOutput {
	return o
}

func (o WebproxyExplicitArrayOutput) ToWebproxyExplicitArrayOutputWithContext(ctx context.Context) WebproxyExplicitArrayOutput {
	return o
}

func (o WebproxyExplicitArrayOutput) Index(i pulumi.IntInput) WebproxyExplicitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebproxyExplicit {
		return vs[0].([]*WebproxyExplicit)[vs[1].(int)]
	}).(WebproxyExplicitOutput)
}

type WebproxyExplicitMapOutput struct{ *pulumi.OutputState }

func (WebproxyExplicitMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebproxyExplicit)(nil)).Elem()
}

func (o WebproxyExplicitMapOutput) ToWebproxyExplicitMapOutput() WebproxyExplicitMapOutput {
	return o
}

func (o WebproxyExplicitMapOutput) ToWebproxyExplicitMapOutputWithContext(ctx context.Context) WebproxyExplicitMapOutput {
	return o
}

func (o WebproxyExplicitMapOutput) MapIndex(k pulumi.StringInput) WebproxyExplicitOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebproxyExplicit {
		return vs[0].(map[string]*WebproxyExplicit)[vs[1].(string)]
	}).(WebproxyExplicitOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitInput)(nil)).Elem(), &WebproxyExplicit{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitArrayInput)(nil)).Elem(), WebproxyExplicitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebproxyExplicitMapInput)(nil)).Elem(), WebproxyExplicitMap{})
	pulumi.RegisterOutputType(WebproxyExplicitOutput{})
	pulumi.RegisterOutputType(WebproxyExplicitArrayOutput{})
	pulumi.RegisterOutputType(WebproxyExplicitMapOutput{})
}
