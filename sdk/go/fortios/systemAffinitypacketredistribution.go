// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure packet redistribution.
//
// ## Import
//
// # System AffinityPacketRedistribution can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemAffinitypacketredistribution:SystemAffinitypacketredistribution labelname {{fosid}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemAffinitypacketredistribution:SystemAffinitypacketredistribution labelname {{fosid}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemAffinitypacketredistribution struct {
	pulumi.CustomResourceState

	// Affinity setting for VM throughput (64-bit hexadecimal value in the format of 0xxxxxxxxxxxxxxxxx).
	AffinityCpumask pulumi.StringOutput `pulumi:"affinityCpumask"`
	// ID of the packet redistribution setting.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Physical interface name on which to perform packet redistribution.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// ID of the receive queue (when the interface has multiple queues) on which to perform packet redistribution.
	Rxqid pulumi.IntOutput `pulumi:"rxqid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemAffinitypacketredistribution registers a new resource with the given unique name, arguments, and options.
func NewSystemAffinitypacketredistribution(ctx *pulumi.Context,
	name string, args *SystemAffinitypacketredistributionArgs, opts ...pulumi.ResourceOption) (*SystemAffinitypacketredistribution, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AffinityCpumask == nil {
		return nil, errors.New("invalid value for required argument 'AffinityCpumask'")
	}
	if args.Fosid == nil {
		return nil, errors.New("invalid value for required argument 'Fosid'")
	}
	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.Rxqid == nil {
		return nil, errors.New("invalid value for required argument 'Rxqid'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemAffinitypacketredistribution
	err := ctx.RegisterResource("fortios:index/systemAffinitypacketredistribution:SystemAffinitypacketredistribution", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemAffinitypacketredistribution gets an existing SystemAffinitypacketredistribution resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemAffinitypacketredistribution(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemAffinitypacketredistributionState, opts ...pulumi.ResourceOption) (*SystemAffinitypacketredistribution, error) {
	var resource SystemAffinitypacketredistribution
	err := ctx.ReadResource("fortios:index/systemAffinitypacketredistribution:SystemAffinitypacketredistribution", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemAffinitypacketredistribution resources.
type systemAffinitypacketredistributionState struct {
	// Affinity setting for VM throughput (64-bit hexadecimal value in the format of 0xxxxxxxxxxxxxxxxx).
	AffinityCpumask *string `pulumi:"affinityCpumask"`
	// ID of the packet redistribution setting.
	Fosid *int `pulumi:"fosid"`
	// Physical interface name on which to perform packet redistribution.
	Interface *string `pulumi:"interface"`
	// ID of the receive queue (when the interface has multiple queues) on which to perform packet redistribution.
	Rxqid *int `pulumi:"rxqid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemAffinitypacketredistributionState struct {
	// Affinity setting for VM throughput (64-bit hexadecimal value in the format of 0xxxxxxxxxxxxxxxxx).
	AffinityCpumask pulumi.StringPtrInput
	// ID of the packet redistribution setting.
	Fosid pulumi.IntPtrInput
	// Physical interface name on which to perform packet redistribution.
	Interface pulumi.StringPtrInput
	// ID of the receive queue (when the interface has multiple queues) on which to perform packet redistribution.
	Rxqid pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemAffinitypacketredistributionState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAffinitypacketredistributionState)(nil)).Elem()
}

type systemAffinitypacketredistributionArgs struct {
	// Affinity setting for VM throughput (64-bit hexadecimal value in the format of 0xxxxxxxxxxxxxxxxx).
	AffinityCpumask string `pulumi:"affinityCpumask"`
	// ID of the packet redistribution setting.
	Fosid int `pulumi:"fosid"`
	// Physical interface name on which to perform packet redistribution.
	Interface string `pulumi:"interface"`
	// ID of the receive queue (when the interface has multiple queues) on which to perform packet redistribution.
	Rxqid int `pulumi:"rxqid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemAffinitypacketredistribution resource.
type SystemAffinitypacketredistributionArgs struct {
	// Affinity setting for VM throughput (64-bit hexadecimal value in the format of 0xxxxxxxxxxxxxxxxx).
	AffinityCpumask pulumi.StringInput
	// ID of the packet redistribution setting.
	Fosid pulumi.IntInput
	// Physical interface name on which to perform packet redistribution.
	Interface pulumi.StringInput
	// ID of the receive queue (when the interface has multiple queues) on which to perform packet redistribution.
	Rxqid pulumi.IntInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemAffinitypacketredistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAffinitypacketredistributionArgs)(nil)).Elem()
}

type SystemAffinitypacketredistributionInput interface {
	pulumi.Input

	ToSystemAffinitypacketredistributionOutput() SystemAffinitypacketredistributionOutput
	ToSystemAffinitypacketredistributionOutputWithContext(ctx context.Context) SystemAffinitypacketredistributionOutput
}

func (*SystemAffinitypacketredistribution) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAffinitypacketredistribution)(nil)).Elem()
}

func (i *SystemAffinitypacketredistribution) ToSystemAffinitypacketredistributionOutput() SystemAffinitypacketredistributionOutput {
	return i.ToSystemAffinitypacketredistributionOutputWithContext(context.Background())
}

func (i *SystemAffinitypacketredistribution) ToSystemAffinitypacketredistributionOutputWithContext(ctx context.Context) SystemAffinitypacketredistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAffinitypacketredistributionOutput)
}

// SystemAffinitypacketredistributionArrayInput is an input type that accepts SystemAffinitypacketredistributionArray and SystemAffinitypacketredistributionArrayOutput values.
// You can construct a concrete instance of `SystemAffinitypacketredistributionArrayInput` via:
//
//	SystemAffinitypacketredistributionArray{ SystemAffinitypacketredistributionArgs{...} }
type SystemAffinitypacketredistributionArrayInput interface {
	pulumi.Input

	ToSystemAffinitypacketredistributionArrayOutput() SystemAffinitypacketredistributionArrayOutput
	ToSystemAffinitypacketredistributionArrayOutputWithContext(context.Context) SystemAffinitypacketredistributionArrayOutput
}

type SystemAffinitypacketredistributionArray []SystemAffinitypacketredistributionInput

func (SystemAffinitypacketredistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAffinitypacketredistribution)(nil)).Elem()
}

func (i SystemAffinitypacketredistributionArray) ToSystemAffinitypacketredistributionArrayOutput() SystemAffinitypacketredistributionArrayOutput {
	return i.ToSystemAffinitypacketredistributionArrayOutputWithContext(context.Background())
}

func (i SystemAffinitypacketredistributionArray) ToSystemAffinitypacketredistributionArrayOutputWithContext(ctx context.Context) SystemAffinitypacketredistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAffinitypacketredistributionArrayOutput)
}

// SystemAffinitypacketredistributionMapInput is an input type that accepts SystemAffinitypacketredistributionMap and SystemAffinitypacketredistributionMapOutput values.
// You can construct a concrete instance of `SystemAffinitypacketredistributionMapInput` via:
//
//	SystemAffinitypacketredistributionMap{ "key": SystemAffinitypacketredistributionArgs{...} }
type SystemAffinitypacketredistributionMapInput interface {
	pulumi.Input

	ToSystemAffinitypacketredistributionMapOutput() SystemAffinitypacketredistributionMapOutput
	ToSystemAffinitypacketredistributionMapOutputWithContext(context.Context) SystemAffinitypacketredistributionMapOutput
}

type SystemAffinitypacketredistributionMap map[string]SystemAffinitypacketredistributionInput

func (SystemAffinitypacketredistributionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAffinitypacketredistribution)(nil)).Elem()
}

func (i SystemAffinitypacketredistributionMap) ToSystemAffinitypacketredistributionMapOutput() SystemAffinitypacketredistributionMapOutput {
	return i.ToSystemAffinitypacketredistributionMapOutputWithContext(context.Background())
}

func (i SystemAffinitypacketredistributionMap) ToSystemAffinitypacketredistributionMapOutputWithContext(ctx context.Context) SystemAffinitypacketredistributionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAffinitypacketredistributionMapOutput)
}

type SystemAffinitypacketredistributionOutput struct{ *pulumi.OutputState }

func (SystemAffinitypacketredistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAffinitypacketredistribution)(nil)).Elem()
}

func (o SystemAffinitypacketredistributionOutput) ToSystemAffinitypacketredistributionOutput() SystemAffinitypacketredistributionOutput {
	return o
}

func (o SystemAffinitypacketredistributionOutput) ToSystemAffinitypacketredistributionOutputWithContext(ctx context.Context) SystemAffinitypacketredistributionOutput {
	return o
}

// Affinity setting for VM throughput (64-bit hexadecimal value in the format of 0xxxxxxxxxxxxxxxxx).
func (o SystemAffinitypacketredistributionOutput) AffinityCpumask() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAffinitypacketredistribution) pulumi.StringOutput { return v.AffinityCpumask }).(pulumi.StringOutput)
}

// ID of the packet redistribution setting.
func (o SystemAffinitypacketredistributionOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemAffinitypacketredistribution) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

// Physical interface name on which to perform packet redistribution.
func (o SystemAffinitypacketredistributionOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAffinitypacketredistribution) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// ID of the receive queue (when the interface has multiple queues) on which to perform packet redistribution.
func (o SystemAffinitypacketredistributionOutput) Rxqid() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemAffinitypacketredistribution) pulumi.IntOutput { return v.Rxqid }).(pulumi.IntOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemAffinitypacketredistributionOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAffinitypacketredistribution) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemAffinitypacketredistributionArrayOutput struct{ *pulumi.OutputState }

func (SystemAffinitypacketredistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAffinitypacketredistribution)(nil)).Elem()
}

func (o SystemAffinitypacketredistributionArrayOutput) ToSystemAffinitypacketredistributionArrayOutput() SystemAffinitypacketredistributionArrayOutput {
	return o
}

func (o SystemAffinitypacketredistributionArrayOutput) ToSystemAffinitypacketredistributionArrayOutputWithContext(ctx context.Context) SystemAffinitypacketredistributionArrayOutput {
	return o
}

func (o SystemAffinitypacketredistributionArrayOutput) Index(i pulumi.IntInput) SystemAffinitypacketredistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemAffinitypacketredistribution {
		return vs[0].([]*SystemAffinitypacketredistribution)[vs[1].(int)]
	}).(SystemAffinitypacketredistributionOutput)
}

type SystemAffinitypacketredistributionMapOutput struct{ *pulumi.OutputState }

func (SystemAffinitypacketredistributionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAffinitypacketredistribution)(nil)).Elem()
}

func (o SystemAffinitypacketredistributionMapOutput) ToSystemAffinitypacketredistributionMapOutput() SystemAffinitypacketredistributionMapOutput {
	return o
}

func (o SystemAffinitypacketredistributionMapOutput) ToSystemAffinitypacketredistributionMapOutputWithContext(ctx context.Context) SystemAffinitypacketredistributionMapOutput {
	return o
}

func (o SystemAffinitypacketredistributionMapOutput) MapIndex(k pulumi.StringInput) SystemAffinitypacketredistributionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemAffinitypacketredistribution {
		return vs[0].(map[string]*SystemAffinitypacketredistribution)[vs[1].(string)]
	}).(SystemAffinitypacketredistributionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAffinitypacketredistributionInput)(nil)).Elem(), &SystemAffinitypacketredistribution{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAffinitypacketredistributionArrayInput)(nil)).Elem(), SystemAffinitypacketredistributionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAffinitypacketredistributionMapInput)(nil)).Elem(), SystemAffinitypacketredistributionMap{})
	pulumi.RegisterOutputType(SystemAffinitypacketredistributionOutput{})
	pulumi.RegisterOutputType(SystemAffinitypacketredistributionArrayOutput{})
	pulumi.RegisterOutputType(SystemAffinitypacketredistributionMapOutput{})
}
