// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Replacement messages.
//
// ## Import
//
// # SystemReplacemsg Sslvpn can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgSslvpn:SystemreplacemsgSslvpn labelname {{msg_type}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemreplacemsgSslvpn:SystemreplacemsgSslvpn labelname {{msg_type}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemreplacemsgSslvpn struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemreplacemsgSslvpn registers a new resource with the given unique name, arguments, and options.
func NewSystemreplacemsgSslvpn(ctx *pulumi.Context,
	name string, args *SystemreplacemsgSslvpnArgs, opts ...pulumi.ResourceOption) (*SystemreplacemsgSslvpn, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemreplacemsgSslvpn
	err := ctx.RegisterResource("fortios:index/systemreplacemsgSslvpn:SystemreplacemsgSslvpn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemreplacemsgSslvpn gets an existing SystemreplacemsgSslvpn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemreplacemsgSslvpn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemreplacemsgSslvpnState, opts ...pulumi.ResourceOption) (*SystemreplacemsgSslvpn, error) {
	var resource SystemreplacemsgSslvpn
	err := ctx.ReadResource("fortios:index/systemreplacemsgSslvpn:SystemreplacemsgSslvpn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemreplacemsgSslvpn resources.
type systemreplacemsgSslvpnState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemreplacemsgSslvpnState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgSslvpnState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgSslvpnState)(nil)).Elem()
}

type systemreplacemsgSslvpnArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemreplacemsgSslvpn resource.
type SystemreplacemsgSslvpnArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemreplacemsgSslvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemreplacemsgSslvpnArgs)(nil)).Elem()
}

type SystemreplacemsgSslvpnInput interface {
	pulumi.Input

	ToSystemreplacemsgSslvpnOutput() SystemreplacemsgSslvpnOutput
	ToSystemreplacemsgSslvpnOutputWithContext(ctx context.Context) SystemreplacemsgSslvpnOutput
}

func (*SystemreplacemsgSslvpn) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgSslvpn)(nil)).Elem()
}

func (i *SystemreplacemsgSslvpn) ToSystemreplacemsgSslvpnOutput() SystemreplacemsgSslvpnOutput {
	return i.ToSystemreplacemsgSslvpnOutputWithContext(context.Background())
}

func (i *SystemreplacemsgSslvpn) ToSystemreplacemsgSslvpnOutputWithContext(ctx context.Context) SystemreplacemsgSslvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgSslvpnOutput)
}

// SystemreplacemsgSslvpnArrayInput is an input type that accepts SystemreplacemsgSslvpnArray and SystemreplacemsgSslvpnArrayOutput values.
// You can construct a concrete instance of `SystemreplacemsgSslvpnArrayInput` via:
//
//	SystemreplacemsgSslvpnArray{ SystemreplacemsgSslvpnArgs{...} }
type SystemreplacemsgSslvpnArrayInput interface {
	pulumi.Input

	ToSystemreplacemsgSslvpnArrayOutput() SystemreplacemsgSslvpnArrayOutput
	ToSystemreplacemsgSslvpnArrayOutputWithContext(context.Context) SystemreplacemsgSslvpnArrayOutput
}

type SystemreplacemsgSslvpnArray []SystemreplacemsgSslvpnInput

func (SystemreplacemsgSslvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgSslvpn)(nil)).Elem()
}

func (i SystemreplacemsgSslvpnArray) ToSystemreplacemsgSslvpnArrayOutput() SystemreplacemsgSslvpnArrayOutput {
	return i.ToSystemreplacemsgSslvpnArrayOutputWithContext(context.Background())
}

func (i SystemreplacemsgSslvpnArray) ToSystemreplacemsgSslvpnArrayOutputWithContext(ctx context.Context) SystemreplacemsgSslvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgSslvpnArrayOutput)
}

// SystemreplacemsgSslvpnMapInput is an input type that accepts SystemreplacemsgSslvpnMap and SystemreplacemsgSslvpnMapOutput values.
// You can construct a concrete instance of `SystemreplacemsgSslvpnMapInput` via:
//
//	SystemreplacemsgSslvpnMap{ "key": SystemreplacemsgSslvpnArgs{...} }
type SystemreplacemsgSslvpnMapInput interface {
	pulumi.Input

	ToSystemreplacemsgSslvpnMapOutput() SystemreplacemsgSslvpnMapOutput
	ToSystemreplacemsgSslvpnMapOutputWithContext(context.Context) SystemreplacemsgSslvpnMapOutput
}

type SystemreplacemsgSslvpnMap map[string]SystemreplacemsgSslvpnInput

func (SystemreplacemsgSslvpnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgSslvpn)(nil)).Elem()
}

func (i SystemreplacemsgSslvpnMap) ToSystemreplacemsgSslvpnMapOutput() SystemreplacemsgSslvpnMapOutput {
	return i.ToSystemreplacemsgSslvpnMapOutputWithContext(context.Background())
}

func (i SystemreplacemsgSslvpnMap) ToSystemreplacemsgSslvpnMapOutputWithContext(ctx context.Context) SystemreplacemsgSslvpnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemreplacemsgSslvpnMapOutput)
}

type SystemreplacemsgSslvpnOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgSslvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemreplacemsgSslvpn)(nil)).Elem()
}

func (o SystemreplacemsgSslvpnOutput) ToSystemreplacemsgSslvpnOutput() SystemreplacemsgSslvpnOutput {
	return o
}

func (o SystemreplacemsgSslvpnOutput) ToSystemreplacemsgSslvpnOutputWithContext(ctx context.Context) SystemreplacemsgSslvpnOutput {
	return o
}

// Message string.
func (o SystemreplacemsgSslvpnOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgSslvpn) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

// Format flag.
func (o SystemreplacemsgSslvpnOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgSslvpn) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// Header flag. Valid values: `none`, `http`, `8bit`.
func (o SystemreplacemsgSslvpnOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgSslvpn) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Message type.
func (o SystemreplacemsgSslvpnOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemreplacemsgSslvpn) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemreplacemsgSslvpnOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemreplacemsgSslvpn) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemreplacemsgSslvpnArrayOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgSslvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemreplacemsgSslvpn)(nil)).Elem()
}

func (o SystemreplacemsgSslvpnArrayOutput) ToSystemreplacemsgSslvpnArrayOutput() SystemreplacemsgSslvpnArrayOutput {
	return o
}

func (o SystemreplacemsgSslvpnArrayOutput) ToSystemreplacemsgSslvpnArrayOutputWithContext(ctx context.Context) SystemreplacemsgSslvpnArrayOutput {
	return o
}

func (o SystemreplacemsgSslvpnArrayOutput) Index(i pulumi.IntInput) SystemreplacemsgSslvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemreplacemsgSslvpn {
		return vs[0].([]*SystemreplacemsgSslvpn)[vs[1].(int)]
	}).(SystemreplacemsgSslvpnOutput)
}

type SystemreplacemsgSslvpnMapOutput struct{ *pulumi.OutputState }

func (SystemreplacemsgSslvpnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemreplacemsgSslvpn)(nil)).Elem()
}

func (o SystemreplacemsgSslvpnMapOutput) ToSystemreplacemsgSslvpnMapOutput() SystemreplacemsgSslvpnMapOutput {
	return o
}

func (o SystemreplacemsgSslvpnMapOutput) ToSystemreplacemsgSslvpnMapOutputWithContext(ctx context.Context) SystemreplacemsgSslvpnMapOutput {
	return o
}

func (o SystemreplacemsgSslvpnMapOutput) MapIndex(k pulumi.StringInput) SystemreplacemsgSslvpnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemreplacemsgSslvpn {
		return vs[0].(map[string]*SystemreplacemsgSslvpn)[vs[1].(string)]
	}).(SystemreplacemsgSslvpnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgSslvpnInput)(nil)).Elem(), &SystemreplacemsgSslvpn{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgSslvpnArrayInput)(nil)).Elem(), SystemreplacemsgSslvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemreplacemsgSslvpnMapInput)(nil)).Elem(), SystemreplacemsgSslvpnMap{})
	pulumi.RegisterOutputType(SystemreplacemsgSslvpnOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgSslvpnArrayOutput{})
	pulumi.RegisterOutputType(SystemreplacemsgSslvpnMapOutput{})
}
