// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure redundant internet connections using SD-WAN (formerly virtual WAN link). Applies to FortiOS Version `<= 6.4.0`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSystemVirtualwanlink(ctx, "trname", &fortios.SystemVirtualwanlinkArgs{
//				FailDetect:      pulumi.String("disable"),
//				LoadBalanceMode: pulumi.String("source-ip-based"),
//				Status:          pulumi.String("disable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # System VirtualWanLink can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/systemVirtualwanlink:SystemVirtualwanlink labelname SystemVirtualWanLink
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/systemVirtualwanlink:SystemVirtualwanlink labelname SystemVirtualWanLink
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SystemVirtualwanlink struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces SystemVirtualwanlinkFailAlertInterfaceArrayOutput `pulumi:"failAlertInterfaces"`
	// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
	FailDetect pulumi.StringOutput `pulumi:"failDetect"`
	// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
	HealthChecks SystemVirtualwanlinkHealthCheckArrayOutput `pulumi:"healthChecks"`
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
	LoadBalanceMode pulumi.StringOutput `pulumi:"loadBalanceMode"`
	// Physical FortiGate interfaces added to the virtual-wan-link. The structure of `members` block is documented below.
	Members SystemVirtualwanlinkMemberArrayOutput `pulumi:"members"`
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime pulumi.IntOutput `pulumi:"neighborHoldBootTime"`
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
	NeighborHoldDown pulumi.StringOutput `pulumi:"neighborHoldDown"`
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime pulumi.IntOutput `pulumi:"neighborHoldDownTime"`
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors SystemVirtualwanlinkNeighborArrayOutput `pulumi:"neighbors"`
	// Create SD-WAN rules or priority rules (also called services) to control how sessions are distributed to physical interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services SystemVirtualwanlinkServiceArrayOutput `pulumi:"services"`
	// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones SystemVirtualwanlinkZoneArrayOutput `pulumi:"zones"`
}

// NewSystemVirtualwanlink registers a new resource with the given unique name, arguments, and options.
func NewSystemVirtualwanlink(ctx *pulumi.Context,
	name string, args *SystemVirtualwanlinkArgs, opts ...pulumi.ResourceOption) (*SystemVirtualwanlink, error) {
	if args == nil {
		args = &SystemVirtualwanlinkArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemVirtualwanlink
	err := ctx.RegisterResource("fortios:index/systemVirtualwanlink:SystemVirtualwanlink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemVirtualwanlink gets an existing SystemVirtualwanlink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemVirtualwanlink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemVirtualwanlinkState, opts ...pulumi.ResourceOption) (*SystemVirtualwanlink, error) {
	var resource SystemVirtualwanlink
	err := ctx.ReadResource("fortios:index/systemVirtualwanlink:SystemVirtualwanlink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemVirtualwanlink resources.
type systemVirtualwanlinkState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces []SystemVirtualwanlinkFailAlertInterface `pulumi:"failAlertInterfaces"`
	// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
	FailDetect *string `pulumi:"failDetect"`
	// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
	HealthChecks []SystemVirtualwanlinkHealthCheck `pulumi:"healthChecks"`
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
	LoadBalanceMode *string `pulumi:"loadBalanceMode"`
	// Physical FortiGate interfaces added to the virtual-wan-link. The structure of `members` block is documented below.
	Members []SystemVirtualwanlinkMember `pulumi:"members"`
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime *int `pulumi:"neighborHoldBootTime"`
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
	NeighborHoldDown *string `pulumi:"neighborHoldDown"`
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime *int `pulumi:"neighborHoldDownTime"`
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors []SystemVirtualwanlinkNeighbor `pulumi:"neighbors"`
	// Create SD-WAN rules or priority rules (also called services) to control how sessions are distributed to physical interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services []SystemVirtualwanlinkService `pulumi:"services"`
	// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones []SystemVirtualwanlinkZone `pulumi:"zones"`
}

type SystemVirtualwanlinkState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces SystemVirtualwanlinkFailAlertInterfaceArrayInput
	// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
	FailDetect pulumi.StringPtrInput
	// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
	HealthChecks SystemVirtualwanlinkHealthCheckArrayInput
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
	LoadBalanceMode pulumi.StringPtrInput
	// Physical FortiGate interfaces added to the virtual-wan-link. The structure of `members` block is documented below.
	Members SystemVirtualwanlinkMemberArrayInput
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime pulumi.IntPtrInput
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
	NeighborHoldDown pulumi.StringPtrInput
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime pulumi.IntPtrInput
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors SystemVirtualwanlinkNeighborArrayInput
	// Create SD-WAN rules or priority rules (also called services) to control how sessions are distributed to physical interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services SystemVirtualwanlinkServiceArrayInput
	// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones SystemVirtualwanlinkZoneArrayInput
}

func (SystemVirtualwanlinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemVirtualwanlinkState)(nil)).Elem()
}

type systemVirtualwanlinkArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces []SystemVirtualwanlinkFailAlertInterface `pulumi:"failAlertInterfaces"`
	// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
	FailDetect *string `pulumi:"failDetect"`
	// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
	HealthChecks []SystemVirtualwanlinkHealthCheck `pulumi:"healthChecks"`
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
	LoadBalanceMode *string `pulumi:"loadBalanceMode"`
	// Physical FortiGate interfaces added to the virtual-wan-link. The structure of `members` block is documented below.
	Members []SystemVirtualwanlinkMember `pulumi:"members"`
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime *int `pulumi:"neighborHoldBootTime"`
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
	NeighborHoldDown *string `pulumi:"neighborHoldDown"`
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime *int `pulumi:"neighborHoldDownTime"`
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors []SystemVirtualwanlinkNeighbor `pulumi:"neighbors"`
	// Create SD-WAN rules or priority rules (also called services) to control how sessions are distributed to physical interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services []SystemVirtualwanlinkService `pulumi:"services"`
	// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones []SystemVirtualwanlinkZone `pulumi:"zones"`
}

// The set of arguments for constructing a SystemVirtualwanlink resource.
type SystemVirtualwanlinkArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces SystemVirtualwanlinkFailAlertInterfaceArrayInput
	// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
	FailDetect pulumi.StringPtrInput
	// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
	HealthChecks SystemVirtualwanlinkHealthCheckArrayInput
	// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
	LoadBalanceMode pulumi.StringPtrInput
	// Physical FortiGate interfaces added to the virtual-wan-link. The structure of `members` block is documented below.
	Members SystemVirtualwanlinkMemberArrayInput
	// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
	NeighborHoldBootTime pulumi.IntPtrInput
	// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
	NeighborHoldDown pulumi.StringPtrInput
	// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
	NeighborHoldDownTime pulumi.IntPtrInput
	// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
	Neighbors SystemVirtualwanlinkNeighborArrayInput
	// Create SD-WAN rules or priority rules (also called services) to control how sessions are distributed to physical interfaces in the SD-WAN. The structure of `service` block is documented below.
	Services SystemVirtualwanlinkServiceArrayInput
	// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Configure SD-WAN zones. The structure of `zone` block is documented below.
	Zones SystemVirtualwanlinkZoneArrayInput
}

func (SystemVirtualwanlinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemVirtualwanlinkArgs)(nil)).Elem()
}

type SystemVirtualwanlinkInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkOutput() SystemVirtualwanlinkOutput
	ToSystemVirtualwanlinkOutputWithContext(ctx context.Context) SystemVirtualwanlinkOutput
}

func (*SystemVirtualwanlink) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemVirtualwanlink)(nil)).Elem()
}

func (i *SystemVirtualwanlink) ToSystemVirtualwanlinkOutput() SystemVirtualwanlinkOutput {
	return i.ToSystemVirtualwanlinkOutputWithContext(context.Background())
}

func (i *SystemVirtualwanlink) ToSystemVirtualwanlinkOutputWithContext(ctx context.Context) SystemVirtualwanlinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkOutput)
}

// SystemVirtualwanlinkArrayInput is an input type that accepts SystemVirtualwanlinkArray and SystemVirtualwanlinkArrayOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkArrayInput` via:
//
//	SystemVirtualwanlinkArray{ SystemVirtualwanlinkArgs{...} }
type SystemVirtualwanlinkArrayInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkArrayOutput() SystemVirtualwanlinkArrayOutput
	ToSystemVirtualwanlinkArrayOutputWithContext(context.Context) SystemVirtualwanlinkArrayOutput
}

type SystemVirtualwanlinkArray []SystemVirtualwanlinkInput

func (SystemVirtualwanlinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemVirtualwanlink)(nil)).Elem()
}

func (i SystemVirtualwanlinkArray) ToSystemVirtualwanlinkArrayOutput() SystemVirtualwanlinkArrayOutput {
	return i.ToSystemVirtualwanlinkArrayOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkArray) ToSystemVirtualwanlinkArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkArrayOutput)
}

// SystemVirtualwanlinkMapInput is an input type that accepts SystemVirtualwanlinkMap and SystemVirtualwanlinkMapOutput values.
// You can construct a concrete instance of `SystemVirtualwanlinkMapInput` via:
//
//	SystemVirtualwanlinkMap{ "key": SystemVirtualwanlinkArgs{...} }
type SystemVirtualwanlinkMapInput interface {
	pulumi.Input

	ToSystemVirtualwanlinkMapOutput() SystemVirtualwanlinkMapOutput
	ToSystemVirtualwanlinkMapOutputWithContext(context.Context) SystemVirtualwanlinkMapOutput
}

type SystemVirtualwanlinkMap map[string]SystemVirtualwanlinkInput

func (SystemVirtualwanlinkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemVirtualwanlink)(nil)).Elem()
}

func (i SystemVirtualwanlinkMap) ToSystemVirtualwanlinkMapOutput() SystemVirtualwanlinkMapOutput {
	return i.ToSystemVirtualwanlinkMapOutputWithContext(context.Background())
}

func (i SystemVirtualwanlinkMap) ToSystemVirtualwanlinkMapOutputWithContext(ctx context.Context) SystemVirtualwanlinkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualwanlinkMapOutput)
}

type SystemVirtualwanlinkOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemVirtualwanlink)(nil)).Elem()
}

func (o SystemVirtualwanlinkOutput) ToSystemVirtualwanlinkOutput() SystemVirtualwanlinkOutput {
	return o
}

func (o SystemVirtualwanlinkOutput) ToSystemVirtualwanlinkOutputWithContext(ctx context.Context) SystemVirtualwanlinkOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SystemVirtualwanlinkOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Physical interfaces that will be alerted. The structure of `failAlertInterfaces` block is documented below.
func (o SystemVirtualwanlinkOutput) FailAlertInterfaces() SystemVirtualwanlinkFailAlertInterfaceArrayOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) SystemVirtualwanlinkFailAlertInterfaceArrayOutput {
		return v.FailAlertInterfaces
	}).(SystemVirtualwanlinkFailAlertInterfaceArrayOutput)
}

// Enable/disable SD-WAN Internet connection status checking (failure detection). Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkOutput) FailDetect() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) pulumi.StringOutput { return v.FailDetect }).(pulumi.StringOutput)
}

// SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can communicate with it. The structure of `healthCheck` block is documented below.
func (o SystemVirtualwanlinkOutput) HealthChecks() SystemVirtualwanlinkHealthCheckArrayOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) SystemVirtualwanlinkHealthCheckArrayOutput { return v.HealthChecks }).(SystemVirtualwanlinkHealthCheckArrayOutput)
}

// Algorithm or mode to use for load balancing Internet traffic to SD-WAN members. Valid values: `source-ip-based`, `weight-based`, `usage-based`, `source-dest-ip-based`, `measured-volume-based`.
func (o SystemVirtualwanlinkOutput) LoadBalanceMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) pulumi.StringOutput { return v.LoadBalanceMode }).(pulumi.StringOutput)
}

// Physical FortiGate interfaces added to the virtual-wan-link. The structure of `members` block is documented below.
func (o SystemVirtualwanlinkOutput) Members() SystemVirtualwanlinkMemberArrayOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) SystemVirtualwanlinkMemberArrayOutput { return v.Members }).(SystemVirtualwanlinkMemberArrayOutput)
}

// Waiting period in seconds when switching from the primary neighbor to the secondary neighbor from the neighbor start. (0 - 10000000, default = 0).
func (o SystemVirtualwanlinkOutput) NeighborHoldBootTime() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) pulumi.IntOutput { return v.NeighborHoldBootTime }).(pulumi.IntOutput)
}

// Enable/disable hold switching from the secondary neighbor to the primary neighbor. Valid values: `enable`, `disable`.
func (o SystemVirtualwanlinkOutput) NeighborHoldDown() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) pulumi.StringOutput { return v.NeighborHoldDown }).(pulumi.StringOutput)
}

// Waiting period in seconds when switching from the secondary neighbor to the primary neighbor when hold-down is disabled. (0 - 10000000, default = 0).
func (o SystemVirtualwanlinkOutput) NeighborHoldDownTime() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) pulumi.IntOutput { return v.NeighborHoldDownTime }).(pulumi.IntOutput)
}

// Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status. The structure of `neighbor` block is documented below.
func (o SystemVirtualwanlinkOutput) Neighbors() SystemVirtualwanlinkNeighborArrayOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) SystemVirtualwanlinkNeighborArrayOutput { return v.Neighbors }).(SystemVirtualwanlinkNeighborArrayOutput)
}

// Create SD-WAN rules or priority rules (also called services) to control how sessions are distributed to physical interfaces in the SD-WAN. The structure of `service` block is documented below.
func (o SystemVirtualwanlinkOutput) Services() SystemVirtualwanlinkServiceArrayOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) SystemVirtualwanlinkServiceArrayOutput { return v.Services }).(SystemVirtualwanlinkServiceArrayOutput)
}

// Enable/disable SD-WAN. Valid values: `disable`, `enable`.
func (o SystemVirtualwanlinkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SystemVirtualwanlinkOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Configure SD-WAN zones. The structure of `zone` block is documented below.
func (o SystemVirtualwanlinkOutput) Zones() SystemVirtualwanlinkZoneArrayOutput {
	return o.ApplyT(func(v *SystemVirtualwanlink) SystemVirtualwanlinkZoneArrayOutput { return v.Zones }).(SystemVirtualwanlinkZoneArrayOutput)
}

type SystemVirtualwanlinkArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemVirtualwanlink)(nil)).Elem()
}

func (o SystemVirtualwanlinkArrayOutput) ToSystemVirtualwanlinkArrayOutput() SystemVirtualwanlinkArrayOutput {
	return o
}

func (o SystemVirtualwanlinkArrayOutput) ToSystemVirtualwanlinkArrayOutputWithContext(ctx context.Context) SystemVirtualwanlinkArrayOutput {
	return o
}

func (o SystemVirtualwanlinkArrayOutput) Index(i pulumi.IntInput) SystemVirtualwanlinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemVirtualwanlink {
		return vs[0].([]*SystemVirtualwanlink)[vs[1].(int)]
	}).(SystemVirtualwanlinkOutput)
}

type SystemVirtualwanlinkMapOutput struct{ *pulumi.OutputState }

func (SystemVirtualwanlinkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemVirtualwanlink)(nil)).Elem()
}

func (o SystemVirtualwanlinkMapOutput) ToSystemVirtualwanlinkMapOutput() SystemVirtualwanlinkMapOutput {
	return o
}

func (o SystemVirtualwanlinkMapOutput) ToSystemVirtualwanlinkMapOutputWithContext(ctx context.Context) SystemVirtualwanlinkMapOutput {
	return o
}

func (o SystemVirtualwanlinkMapOutput) MapIndex(k pulumi.StringInput) SystemVirtualwanlinkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemVirtualwanlink {
		return vs[0].(map[string]*SystemVirtualwanlink)[vs[1].(string)]
	}).(SystemVirtualwanlinkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkInput)(nil)).Elem(), &SystemVirtualwanlink{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkArrayInput)(nil)).Elem(), SystemVirtualwanlinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualwanlinkMapInput)(nil)).Elem(), SystemVirtualwanlinkMap{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualwanlinkMapOutput{})
}
