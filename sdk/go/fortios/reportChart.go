// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Report chart widget configuration. Applies to FortiOS Version `<= 7.0.0`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewReportChart(ctx, "trname", &fortios.ReportChartArgs{
//				Category:       pulumi.String("misc"),
//				Comments:       pulumi.String("test report chart"),
//				Dataset:        pulumi.String("s1"),
//				Dimension:      pulumi.String("3D"),
//				Favorite:       pulumi.String("no"),
//				GraphType:      pulumi.String("none"),
//				Legend:         pulumi.String("enable"),
//				LegendFontSize: pulumi.Int(0),
//				Period:         pulumi.String("last24h"),
//				Policy:         pulumi.Int(0),
//				Style:          pulumi.String("auto"),
//				TitleFontSize:  pulumi.Int(0),
//				Type:           pulumi.String("graph"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Report Chart can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/reportChart:ReportChart labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/reportChart:ReportChart labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type ReportChart struct {
	pulumi.CustomResourceState

	// Chart background.
	Background pulumi.StringOutput `pulumi:"background"`
	// Category. Valid values: `misc`, `traffic`, `event`, `virus`, `webfilter`, `attack`, `spam`, `dlp`, `app-ctrl`, `vulnerability`.
	Category pulumi.StringOutput `pulumi:"category"`
	// Category series of pie chart. The structure of `categorySeries` block is documented below.
	CategorySeries ReportChartCategorySeriesOutput `pulumi:"categorySeries"`
	// Color palette (system will pick color automatically by default).
	ColorPalette pulumi.StringOutput `pulumi:"colorPalette"`
	// Table column definition. The structure of `column` block is documented below.
	Columns ReportChartColumnArrayOutput `pulumi:"columns"`
	// Comment.
	Comments pulumi.StringOutput `pulumi:"comments"`
	// Bind dataset to chart.
	Dataset pulumi.StringOutput `pulumi:"dataset"`
	// Dimension. Valid values: `2D`, `3D`.
	Dimension pulumi.StringOutput `pulumi:"dimension"`
	// Drill down charts. The structure of `drillDownCharts` block is documented below.
	DrillDownCharts ReportChartDrillDownChartArrayOutput `pulumi:"drillDownCharts"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Favorite. Valid values: `no`, `yes`.
	Favorite pulumi.StringOutput `pulumi:"favorite"`
	// Graph type. Valid values: `none`, `bar`, `pie`, `line`, `flow`.
	GraphType pulumi.StringOutput `pulumi:"graphType"`
	// Enable/Disable Legend area. Valid values: `enable`, `disable`.
	Legend pulumi.StringOutput `pulumi:"legend"`
	// Font size of legend area.
	LegendFontSize pulumi.IntOutput `pulumi:"legendFontSize"`
	// Chart Widget Name
	Name pulumi.StringOutput `pulumi:"name"`
	// Time period. Valid values: `last24h`, `last7d`.
	Period pulumi.StringOutput `pulumi:"period"`
	// Used by monitor policy.
	Policy pulumi.IntOutput `pulumi:"policy"`
	// Style. Valid values: `auto`, `manual`.
	Style pulumi.StringOutput `pulumi:"style"`
	// Chart title.
	Title pulumi.StringOutput `pulumi:"title"`
	// Font size of chart title.
	TitleFontSize pulumi.IntOutput `pulumi:"titleFontSize"`
	// Chart type. Valid values: `graph`, `table`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Value series of pie chart. The structure of `valueSeries` block is documented below.
	ValueSeries ReportChartValueSeriesOutput `pulumi:"valueSeries"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// X-series of chart. The structure of `xSeries` block is documented below.
	XSeries ReportChartXSeriesOutput `pulumi:"xSeries"`
	// Y-series of chart. The structure of `ySeries` block is documented below.
	YSeries ReportChartYSeriesOutput `pulumi:"ySeries"`
}

// NewReportChart registers a new resource with the given unique name, arguments, and options.
func NewReportChart(ctx *pulumi.Context,
	name string, args *ReportChartArgs, opts ...pulumi.ResourceOption) (*ReportChart, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Comments == nil {
		return nil, errors.New("invalid value for required argument 'Comments'")
	}
	if args.Dataset == nil {
		return nil, errors.New("invalid value for required argument 'Dataset'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ReportChart
	err := ctx.RegisterResource("fortios:index/reportChart:ReportChart", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportChart gets an existing ReportChart resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportChart(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportChartState, opts ...pulumi.ResourceOption) (*ReportChart, error) {
	var resource ReportChart
	err := ctx.ReadResource("fortios:index/reportChart:ReportChart", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportChart resources.
type reportChartState struct {
	// Chart background.
	Background *string `pulumi:"background"`
	// Category. Valid values: `misc`, `traffic`, `event`, `virus`, `webfilter`, `attack`, `spam`, `dlp`, `app-ctrl`, `vulnerability`.
	Category *string `pulumi:"category"`
	// Category series of pie chart. The structure of `categorySeries` block is documented below.
	CategorySeries *ReportChartCategorySeries `pulumi:"categorySeries"`
	// Color palette (system will pick color automatically by default).
	ColorPalette *string `pulumi:"colorPalette"`
	// Table column definition. The structure of `column` block is documented below.
	Columns []ReportChartColumn `pulumi:"columns"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Bind dataset to chart.
	Dataset *string `pulumi:"dataset"`
	// Dimension. Valid values: `2D`, `3D`.
	Dimension *string `pulumi:"dimension"`
	// Drill down charts. The structure of `drillDownCharts` block is documented below.
	DrillDownCharts []ReportChartDrillDownChart `pulumi:"drillDownCharts"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Favorite. Valid values: `no`, `yes`.
	Favorite *string `pulumi:"favorite"`
	// Graph type. Valid values: `none`, `bar`, `pie`, `line`, `flow`.
	GraphType *string `pulumi:"graphType"`
	// Enable/Disable Legend area. Valid values: `enable`, `disable`.
	Legend *string `pulumi:"legend"`
	// Font size of legend area.
	LegendFontSize *int `pulumi:"legendFontSize"`
	// Chart Widget Name
	Name *string `pulumi:"name"`
	// Time period. Valid values: `last24h`, `last7d`.
	Period *string `pulumi:"period"`
	// Used by monitor policy.
	Policy *int `pulumi:"policy"`
	// Style. Valid values: `auto`, `manual`.
	Style *string `pulumi:"style"`
	// Chart title.
	Title *string `pulumi:"title"`
	// Font size of chart title.
	TitleFontSize *int `pulumi:"titleFontSize"`
	// Chart type. Valid values: `graph`, `table`.
	Type *string `pulumi:"type"`
	// Value series of pie chart. The structure of `valueSeries` block is documented below.
	ValueSeries *ReportChartValueSeries `pulumi:"valueSeries"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// X-series of chart. The structure of `xSeries` block is documented below.
	XSeries *ReportChartXSeries `pulumi:"xSeries"`
	// Y-series of chart. The structure of `ySeries` block is documented below.
	YSeries *ReportChartYSeries `pulumi:"ySeries"`
}

type ReportChartState struct {
	// Chart background.
	Background pulumi.StringPtrInput
	// Category. Valid values: `misc`, `traffic`, `event`, `virus`, `webfilter`, `attack`, `spam`, `dlp`, `app-ctrl`, `vulnerability`.
	Category pulumi.StringPtrInput
	// Category series of pie chart. The structure of `categorySeries` block is documented below.
	CategorySeries ReportChartCategorySeriesPtrInput
	// Color palette (system will pick color automatically by default).
	ColorPalette pulumi.StringPtrInput
	// Table column definition. The structure of `column` block is documented below.
	Columns ReportChartColumnArrayInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Bind dataset to chart.
	Dataset pulumi.StringPtrInput
	// Dimension. Valid values: `2D`, `3D`.
	Dimension pulumi.StringPtrInput
	// Drill down charts. The structure of `drillDownCharts` block is documented below.
	DrillDownCharts ReportChartDrillDownChartArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Favorite. Valid values: `no`, `yes`.
	Favorite pulumi.StringPtrInput
	// Graph type. Valid values: `none`, `bar`, `pie`, `line`, `flow`.
	GraphType pulumi.StringPtrInput
	// Enable/Disable Legend area. Valid values: `enable`, `disable`.
	Legend pulumi.StringPtrInput
	// Font size of legend area.
	LegendFontSize pulumi.IntPtrInput
	// Chart Widget Name
	Name pulumi.StringPtrInput
	// Time period. Valid values: `last24h`, `last7d`.
	Period pulumi.StringPtrInput
	// Used by monitor policy.
	Policy pulumi.IntPtrInput
	// Style. Valid values: `auto`, `manual`.
	Style pulumi.StringPtrInput
	// Chart title.
	Title pulumi.StringPtrInput
	// Font size of chart title.
	TitleFontSize pulumi.IntPtrInput
	// Chart type. Valid values: `graph`, `table`.
	Type pulumi.StringPtrInput
	// Value series of pie chart. The structure of `valueSeries` block is documented below.
	ValueSeries ReportChartValueSeriesPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// X-series of chart. The structure of `xSeries` block is documented below.
	XSeries ReportChartXSeriesPtrInput
	// Y-series of chart. The structure of `ySeries` block is documented below.
	YSeries ReportChartYSeriesPtrInput
}

func (ReportChartState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportChartState)(nil)).Elem()
}

type reportChartArgs struct {
	// Chart background.
	Background *string `pulumi:"background"`
	// Category. Valid values: `misc`, `traffic`, `event`, `virus`, `webfilter`, `attack`, `spam`, `dlp`, `app-ctrl`, `vulnerability`.
	Category *string `pulumi:"category"`
	// Category series of pie chart. The structure of `categorySeries` block is documented below.
	CategorySeries *ReportChartCategorySeries `pulumi:"categorySeries"`
	// Color palette (system will pick color automatically by default).
	ColorPalette *string `pulumi:"colorPalette"`
	// Table column definition. The structure of `column` block is documented below.
	Columns []ReportChartColumn `pulumi:"columns"`
	// Comment.
	Comments string `pulumi:"comments"`
	// Bind dataset to chart.
	Dataset string `pulumi:"dataset"`
	// Dimension. Valid values: `2D`, `3D`.
	Dimension *string `pulumi:"dimension"`
	// Drill down charts. The structure of `drillDownCharts` block is documented below.
	DrillDownCharts []ReportChartDrillDownChart `pulumi:"drillDownCharts"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Favorite. Valid values: `no`, `yes`.
	Favorite *string `pulumi:"favorite"`
	// Graph type. Valid values: `none`, `bar`, `pie`, `line`, `flow`.
	GraphType *string `pulumi:"graphType"`
	// Enable/Disable Legend area. Valid values: `enable`, `disable`.
	Legend *string `pulumi:"legend"`
	// Font size of legend area.
	LegendFontSize *int `pulumi:"legendFontSize"`
	// Chart Widget Name
	Name *string `pulumi:"name"`
	// Time period. Valid values: `last24h`, `last7d`.
	Period *string `pulumi:"period"`
	// Used by monitor policy.
	Policy *int `pulumi:"policy"`
	// Style. Valid values: `auto`, `manual`.
	Style *string `pulumi:"style"`
	// Chart title.
	Title *string `pulumi:"title"`
	// Font size of chart title.
	TitleFontSize *int `pulumi:"titleFontSize"`
	// Chart type. Valid values: `graph`, `table`.
	Type *string `pulumi:"type"`
	// Value series of pie chart. The structure of `valueSeries` block is documented below.
	ValueSeries *ReportChartValueSeries `pulumi:"valueSeries"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// X-series of chart. The structure of `xSeries` block is documented below.
	XSeries *ReportChartXSeries `pulumi:"xSeries"`
	// Y-series of chart. The structure of `ySeries` block is documented below.
	YSeries *ReportChartYSeries `pulumi:"ySeries"`
}

// The set of arguments for constructing a ReportChart resource.
type ReportChartArgs struct {
	// Chart background.
	Background pulumi.StringPtrInput
	// Category. Valid values: `misc`, `traffic`, `event`, `virus`, `webfilter`, `attack`, `spam`, `dlp`, `app-ctrl`, `vulnerability`.
	Category pulumi.StringPtrInput
	// Category series of pie chart. The structure of `categorySeries` block is documented below.
	CategorySeries ReportChartCategorySeriesPtrInput
	// Color palette (system will pick color automatically by default).
	ColorPalette pulumi.StringPtrInput
	// Table column definition. The structure of `column` block is documented below.
	Columns ReportChartColumnArrayInput
	// Comment.
	Comments pulumi.StringInput
	// Bind dataset to chart.
	Dataset pulumi.StringInput
	// Dimension. Valid values: `2D`, `3D`.
	Dimension pulumi.StringPtrInput
	// Drill down charts. The structure of `drillDownCharts` block is documented below.
	DrillDownCharts ReportChartDrillDownChartArrayInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Favorite. Valid values: `no`, `yes`.
	Favorite pulumi.StringPtrInput
	// Graph type. Valid values: `none`, `bar`, `pie`, `line`, `flow`.
	GraphType pulumi.StringPtrInput
	// Enable/Disable Legend area. Valid values: `enable`, `disable`.
	Legend pulumi.StringPtrInput
	// Font size of legend area.
	LegendFontSize pulumi.IntPtrInput
	// Chart Widget Name
	Name pulumi.StringPtrInput
	// Time period. Valid values: `last24h`, `last7d`.
	Period pulumi.StringPtrInput
	// Used by monitor policy.
	Policy pulumi.IntPtrInput
	// Style. Valid values: `auto`, `manual`.
	Style pulumi.StringPtrInput
	// Chart title.
	Title pulumi.StringPtrInput
	// Font size of chart title.
	TitleFontSize pulumi.IntPtrInput
	// Chart type. Valid values: `graph`, `table`.
	Type pulumi.StringPtrInput
	// Value series of pie chart. The structure of `valueSeries` block is documented below.
	ValueSeries ReportChartValueSeriesPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// X-series of chart. The structure of `xSeries` block is documented below.
	XSeries ReportChartXSeriesPtrInput
	// Y-series of chart. The structure of `ySeries` block is documented below.
	YSeries ReportChartYSeriesPtrInput
}

func (ReportChartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportChartArgs)(nil)).Elem()
}

type ReportChartInput interface {
	pulumi.Input

	ToReportChartOutput() ReportChartOutput
	ToReportChartOutputWithContext(ctx context.Context) ReportChartOutput
}

func (*ReportChart) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChart)(nil)).Elem()
}

func (i *ReportChart) ToReportChartOutput() ReportChartOutput {
	return i.ToReportChartOutputWithContext(context.Background())
}

func (i *ReportChart) ToReportChartOutputWithContext(ctx context.Context) ReportChartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartOutput)
}

// ReportChartArrayInput is an input type that accepts ReportChartArray and ReportChartArrayOutput values.
// You can construct a concrete instance of `ReportChartArrayInput` via:
//
//	ReportChartArray{ ReportChartArgs{...} }
type ReportChartArrayInput interface {
	pulumi.Input

	ToReportChartArrayOutput() ReportChartArrayOutput
	ToReportChartArrayOutputWithContext(context.Context) ReportChartArrayOutput
}

type ReportChartArray []ReportChartInput

func (ReportChartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportChart)(nil)).Elem()
}

func (i ReportChartArray) ToReportChartArrayOutput() ReportChartArrayOutput {
	return i.ToReportChartArrayOutputWithContext(context.Background())
}

func (i ReportChartArray) ToReportChartArrayOutputWithContext(ctx context.Context) ReportChartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartArrayOutput)
}

// ReportChartMapInput is an input type that accepts ReportChartMap and ReportChartMapOutput values.
// You can construct a concrete instance of `ReportChartMapInput` via:
//
//	ReportChartMap{ "key": ReportChartArgs{...} }
type ReportChartMapInput interface {
	pulumi.Input

	ToReportChartMapOutput() ReportChartMapOutput
	ToReportChartMapOutputWithContext(context.Context) ReportChartMapOutput
}

type ReportChartMap map[string]ReportChartInput

func (ReportChartMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportChart)(nil)).Elem()
}

func (i ReportChartMap) ToReportChartMapOutput() ReportChartMapOutput {
	return i.ToReportChartMapOutputWithContext(context.Background())
}

func (i ReportChartMap) ToReportChartMapOutputWithContext(ctx context.Context) ReportChartMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartMapOutput)
}

type ReportChartOutput struct{ *pulumi.OutputState }

func (ReportChartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChart)(nil)).Elem()
}

func (o ReportChartOutput) ToReportChartOutput() ReportChartOutput {
	return o
}

func (o ReportChartOutput) ToReportChartOutputWithContext(ctx context.Context) ReportChartOutput {
	return o
}

// Chart background.
func (o ReportChartOutput) Background() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Background }).(pulumi.StringOutput)
}

// Category. Valid values: `misc`, `traffic`, `event`, `virus`, `webfilter`, `attack`, `spam`, `dlp`, `app-ctrl`, `vulnerability`.
func (o ReportChartOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

// Category series of pie chart. The structure of `categorySeries` block is documented below.
func (o ReportChartOutput) CategorySeries() ReportChartCategorySeriesOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartCategorySeriesOutput { return v.CategorySeries }).(ReportChartCategorySeriesOutput)
}

// Color palette (system will pick color automatically by default).
func (o ReportChartOutput) ColorPalette() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.ColorPalette }).(pulumi.StringOutput)
}

// Table column definition. The structure of `column` block is documented below.
func (o ReportChartOutput) Columns() ReportChartColumnArrayOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartColumnArrayOutput { return v.Columns }).(ReportChartColumnArrayOutput)
}

// Comment.
func (o ReportChartOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Comments }).(pulumi.StringOutput)
}

// Bind dataset to chart.
func (o ReportChartOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Dataset }).(pulumi.StringOutput)
}

// Dimension. Valid values: `2D`, `3D`.
func (o ReportChartOutput) Dimension() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Dimension }).(pulumi.StringOutput)
}

// Drill down charts. The structure of `drillDownCharts` block is documented below.
func (o ReportChartOutput) DrillDownCharts() ReportChartDrillDownChartArrayOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartDrillDownChartArrayOutput { return v.DrillDownCharts }).(ReportChartDrillDownChartArrayOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o ReportChartOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Favorite. Valid values: `no`, `yes`.
func (o ReportChartOutput) Favorite() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Favorite }).(pulumi.StringOutput)
}

// Graph type. Valid values: `none`, `bar`, `pie`, `line`, `flow`.
func (o ReportChartOutput) GraphType() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.GraphType }).(pulumi.StringOutput)
}

// Enable/Disable Legend area. Valid values: `enable`, `disable`.
func (o ReportChartOutput) Legend() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Legend }).(pulumi.StringOutput)
}

// Font size of legend area.
func (o ReportChartOutput) LegendFontSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.IntOutput { return v.LegendFontSize }).(pulumi.IntOutput)
}

// Chart Widget Name
func (o ReportChartOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Time period. Valid values: `last24h`, `last7d`.
func (o ReportChartOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Period }).(pulumi.StringOutput)
}

// Used by monitor policy.
func (o ReportChartOutput) Policy() pulumi.IntOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.IntOutput { return v.Policy }).(pulumi.IntOutput)
}

// Style. Valid values: `auto`, `manual`.
func (o ReportChartOutput) Style() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Style }).(pulumi.StringOutput)
}

// Chart title.
func (o ReportChartOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

// Font size of chart title.
func (o ReportChartOutput) TitleFontSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.IntOutput { return v.TitleFontSize }).(pulumi.IntOutput)
}

// Chart type. Valid values: `graph`, `table`.
func (o ReportChartOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Value series of pie chart. The structure of `valueSeries` block is documented below.
func (o ReportChartOutput) ValueSeries() ReportChartValueSeriesOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartValueSeriesOutput { return v.ValueSeries }).(ReportChartValueSeriesOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o ReportChartOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// X-series of chart. The structure of `xSeries` block is documented below.
func (o ReportChartOutput) XSeries() ReportChartXSeriesOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartXSeriesOutput { return v.XSeries }).(ReportChartXSeriesOutput)
}

// Y-series of chart. The structure of `ySeries` block is documented below.
func (o ReportChartOutput) YSeries() ReportChartYSeriesOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartYSeriesOutput { return v.YSeries }).(ReportChartYSeriesOutput)
}

type ReportChartArrayOutput struct{ *pulumi.OutputState }

func (ReportChartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportChart)(nil)).Elem()
}

func (o ReportChartArrayOutput) ToReportChartArrayOutput() ReportChartArrayOutput {
	return o
}

func (o ReportChartArrayOutput) ToReportChartArrayOutputWithContext(ctx context.Context) ReportChartArrayOutput {
	return o
}

func (o ReportChartArrayOutput) Index(i pulumi.IntInput) ReportChartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReportChart {
		return vs[0].([]*ReportChart)[vs[1].(int)]
	}).(ReportChartOutput)
}

type ReportChartMapOutput struct{ *pulumi.OutputState }

func (ReportChartMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportChart)(nil)).Elem()
}

func (o ReportChartMapOutput) ToReportChartMapOutput() ReportChartMapOutput {
	return o
}

func (o ReportChartMapOutput) ToReportChartMapOutputWithContext(ctx context.Context) ReportChartMapOutput {
	return o
}

func (o ReportChartMapOutput) MapIndex(k pulumi.StringInput) ReportChartOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReportChart {
		return vs[0].(map[string]*ReportChart)[vs[1].(string)]
	}).(ReportChartOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartInput)(nil)).Elem(), &ReportChart{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartArrayInput)(nil)).Elem(), ReportChartArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartMapInput)(nil)).Elem(), ReportChartMap{})
	pulumi.RegisterOutputType(ReportChartOutput{})
	pulumi.RegisterOutputType(ReportChartArrayOutput{})
	pulumi.RegisterOutputType(ReportChartMapOutput{})
}
