// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure firewall authentication portals.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewFirewallAuthportal(ctx, "trname", &fortios.FirewallAuthportalArgs{
//				Groups: fortios.FirewallAuthportalGroupArray{
//					&fortios.FirewallAuthportalGroupArgs{
//						Name: pulumi.String("Guest-group"),
//					},
//				},
//				PortalAddr: pulumi.String("1.1.1.1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Firewall AuthPortal can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/firewallAuthportal:FirewallAuthportal labelname FirewallAuthPortal
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/firewallAuthportal:FirewallAuthportal labelname FirewallAuthPortal
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type FirewallAuthportal struct {
	pulumi.CustomResourceState

	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
	Groups FirewallAuthportalGroupArrayOutput `pulumi:"groups"`
	// Name of the identity-based route that applies to this portal.
	IdentityBasedRoute pulumi.StringOutput `pulumi:"identityBasedRoute"`
	// Address (or FQDN) of the authentication portal.
	PortalAddr pulumi.StringOutput `pulumi:"portalAddr"`
	// IPv6 address (or FQDN) of authentication portal.
	PortalAddr6 pulumi.StringOutput `pulumi:"portalAddr6"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallAuthportal registers a new resource with the given unique name, arguments, and options.
func NewFirewallAuthportal(ctx *pulumi.Context,
	name string, args *FirewallAuthportalArgs, opts ...pulumi.ResourceOption) (*FirewallAuthportal, error) {
	if args == nil {
		args = &FirewallAuthportalArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallAuthportal
	err := ctx.RegisterResource("fortios:index/firewallAuthportal:FirewallAuthportal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallAuthportal gets an existing FirewallAuthportal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallAuthportal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallAuthportalState, opts ...pulumi.ResourceOption) (*FirewallAuthportal, error) {
	var resource FirewallAuthportal
	err := ctx.ReadResource("fortios:index/firewallAuthportal:FirewallAuthportal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallAuthportal resources.
type firewallAuthportalState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
	Groups []FirewallAuthportalGroup `pulumi:"groups"`
	// Name of the identity-based route that applies to this portal.
	IdentityBasedRoute *string `pulumi:"identityBasedRoute"`
	// Address (or FQDN) of the authentication portal.
	PortalAddr *string `pulumi:"portalAddr"`
	// IPv6 address (or FQDN) of authentication portal.
	PortalAddr6 *string `pulumi:"portalAddr6"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallAuthportalState struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
	Groups FirewallAuthportalGroupArrayInput
	// Name of the identity-based route that applies to this portal.
	IdentityBasedRoute pulumi.StringPtrInput
	// Address (or FQDN) of the authentication portal.
	PortalAddr pulumi.StringPtrInput
	// IPv6 address (or FQDN) of authentication portal.
	PortalAddr6 pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallAuthportalState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAuthportalState)(nil)).Elem()
}

type firewallAuthportalArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
	Groups []FirewallAuthportalGroup `pulumi:"groups"`
	// Name of the identity-based route that applies to this portal.
	IdentityBasedRoute *string `pulumi:"identityBasedRoute"`
	// Address (or FQDN) of the authentication portal.
	PortalAddr *string `pulumi:"portalAddr"`
	// IPv6 address (or FQDN) of authentication portal.
	PortalAddr6 *string `pulumi:"portalAddr6"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallAuthportal resource.
type FirewallAuthportalArgs struct {
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
	Groups FirewallAuthportalGroupArrayInput
	// Name of the identity-based route that applies to this portal.
	IdentityBasedRoute pulumi.StringPtrInput
	// Address (or FQDN) of the authentication portal.
	PortalAddr pulumi.StringPtrInput
	// IPv6 address (or FQDN) of authentication portal.
	PortalAddr6 pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallAuthportalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAuthportalArgs)(nil)).Elem()
}

type FirewallAuthportalInput interface {
	pulumi.Input

	ToFirewallAuthportalOutput() FirewallAuthportalOutput
	ToFirewallAuthportalOutputWithContext(ctx context.Context) FirewallAuthportalOutput
}

func (*FirewallAuthportal) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAuthportal)(nil)).Elem()
}

func (i *FirewallAuthportal) ToFirewallAuthportalOutput() FirewallAuthportalOutput {
	return i.ToFirewallAuthportalOutputWithContext(context.Background())
}

func (i *FirewallAuthportal) ToFirewallAuthportalOutputWithContext(ctx context.Context) FirewallAuthportalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAuthportalOutput)
}

// FirewallAuthportalArrayInput is an input type that accepts FirewallAuthportalArray and FirewallAuthportalArrayOutput values.
// You can construct a concrete instance of `FirewallAuthportalArrayInput` via:
//
//	FirewallAuthportalArray{ FirewallAuthportalArgs{...} }
type FirewallAuthportalArrayInput interface {
	pulumi.Input

	ToFirewallAuthportalArrayOutput() FirewallAuthportalArrayOutput
	ToFirewallAuthportalArrayOutputWithContext(context.Context) FirewallAuthportalArrayOutput
}

type FirewallAuthportalArray []FirewallAuthportalInput

func (FirewallAuthportalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAuthportal)(nil)).Elem()
}

func (i FirewallAuthportalArray) ToFirewallAuthportalArrayOutput() FirewallAuthportalArrayOutput {
	return i.ToFirewallAuthportalArrayOutputWithContext(context.Background())
}

func (i FirewallAuthportalArray) ToFirewallAuthportalArrayOutputWithContext(ctx context.Context) FirewallAuthportalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAuthportalArrayOutput)
}

// FirewallAuthportalMapInput is an input type that accepts FirewallAuthportalMap and FirewallAuthportalMapOutput values.
// You can construct a concrete instance of `FirewallAuthportalMapInput` via:
//
//	FirewallAuthportalMap{ "key": FirewallAuthportalArgs{...} }
type FirewallAuthportalMapInput interface {
	pulumi.Input

	ToFirewallAuthportalMapOutput() FirewallAuthportalMapOutput
	ToFirewallAuthportalMapOutputWithContext(context.Context) FirewallAuthportalMapOutput
}

type FirewallAuthportalMap map[string]FirewallAuthportalInput

func (FirewallAuthportalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAuthportal)(nil)).Elem()
}

func (i FirewallAuthportalMap) ToFirewallAuthportalMapOutput() FirewallAuthportalMapOutput {
	return i.ToFirewallAuthportalMapOutputWithContext(context.Background())
}

func (i FirewallAuthportalMap) ToFirewallAuthportalMapOutputWithContext(ctx context.Context) FirewallAuthportalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAuthportalMapOutput)
}

type FirewallAuthportalOutput struct{ *pulumi.OutputState }

func (FirewallAuthportalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAuthportal)(nil)).Elem()
}

func (o FirewallAuthportalOutput) ToFirewallAuthportalOutput() FirewallAuthportalOutput {
	return o
}

func (o FirewallAuthportalOutput) ToFirewallAuthportalOutputWithContext(ctx context.Context) FirewallAuthportalOutput {
	return o
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o FirewallAuthportalOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallAuthportal) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Firewall user groups permitted to authenticate through this portal. Separate group names with spaces. The structure of `groups` block is documented below.
func (o FirewallAuthportalOutput) Groups() FirewallAuthportalGroupArrayOutput {
	return o.ApplyT(func(v *FirewallAuthportal) FirewallAuthportalGroupArrayOutput { return v.Groups }).(FirewallAuthportalGroupArrayOutput)
}

// Name of the identity-based route that applies to this portal.
func (o FirewallAuthportalOutput) IdentityBasedRoute() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAuthportal) pulumi.StringOutput { return v.IdentityBasedRoute }).(pulumi.StringOutput)
}

// Address (or FQDN) of the authentication portal.
func (o FirewallAuthportalOutput) PortalAddr() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAuthportal) pulumi.StringOutput { return v.PortalAddr }).(pulumi.StringOutput)
}

// IPv6 address (or FQDN) of authentication portal.
func (o FirewallAuthportalOutput) PortalAddr6() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAuthportal) pulumi.StringOutput { return v.PortalAddr6 }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FirewallAuthportalOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallAuthportal) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallAuthportalArrayOutput struct{ *pulumi.OutputState }

func (FirewallAuthportalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAuthportal)(nil)).Elem()
}

func (o FirewallAuthportalArrayOutput) ToFirewallAuthportalArrayOutput() FirewallAuthportalArrayOutput {
	return o
}

func (o FirewallAuthportalArrayOutput) ToFirewallAuthportalArrayOutputWithContext(ctx context.Context) FirewallAuthportalArrayOutput {
	return o
}

func (o FirewallAuthportalArrayOutput) Index(i pulumi.IntInput) FirewallAuthportalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallAuthportal {
		return vs[0].([]*FirewallAuthportal)[vs[1].(int)]
	}).(FirewallAuthportalOutput)
}

type FirewallAuthportalMapOutput struct{ *pulumi.OutputState }

func (FirewallAuthportalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAuthportal)(nil)).Elem()
}

func (o FirewallAuthportalMapOutput) ToFirewallAuthportalMapOutput() FirewallAuthportalMapOutput {
	return o
}

func (o FirewallAuthportalMapOutput) ToFirewallAuthportalMapOutputWithContext(ctx context.Context) FirewallAuthportalMapOutput {
	return o
}

func (o FirewallAuthportalMapOutput) MapIndex(k pulumi.StringInput) FirewallAuthportalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallAuthportal {
		return vs[0].(map[string]*FirewallAuthportal)[vs[1].(string)]
	}).(FirewallAuthportalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAuthportalInput)(nil)).Elem(), &FirewallAuthportal{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAuthportalArrayInput)(nil)).Elem(), FirewallAuthportalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAuthportalMapInput)(nil)).Elem(), FirewallAuthportalMap{})
	pulumi.RegisterOutputType(FirewallAuthportalOutput{})
	pulumi.RegisterOutputType(FirewallAuthportalArrayOutput{})
	pulumi.RegisterOutputType(FirewallAuthportalMapOutput{})
}
