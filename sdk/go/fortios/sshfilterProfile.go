// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SSH filter profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fortios.NewSshfilterProfile(ctx, "trname", &fortios.SshfilterProfileArgs{
//				Block:             pulumi.String("x11"),
//				DefaultCommandLog: pulumi.String("enable"),
//				Log:               pulumi.String("x11"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # SshFilter Profile can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/sshfilterProfile:SshfilterProfile labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/sshfilterProfile:SshfilterProfile labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SshfilterProfile struct {
	pulumi.CustomResourceState

	// SSH blocking options.
	Block pulumi.StringOutput `pulumi:"block"`
	// Enable/disable logging unmatched shell commands. Valid values: `enable`, `disable`.
	DefaultCommandLog pulumi.StringOutput `pulumi:"defaultCommandLog"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// File filter. The structure of `fileFilter` block is documented below.
	FileFilter SshfilterProfileFileFilterOutput `pulumi:"fileFilter"`
	// SSH logging options.
	Log pulumi.StringOutput `pulumi:"log"`
	// SSH filter profile name.
	Name pulumi.StringOutput `pulumi:"name"`
	// SSH command filter. The structure of `shellCommands` block is documented below.
	ShellCommands SshfilterProfileShellCommandArrayOutput `pulumi:"shellCommands"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSshfilterProfile registers a new resource with the given unique name, arguments, and options.
func NewSshfilterProfile(ctx *pulumi.Context,
	name string, args *SshfilterProfileArgs, opts ...pulumi.ResourceOption) (*SshfilterProfile, error) {
	if args == nil {
		args = &SshfilterProfileArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SshfilterProfile
	err := ctx.RegisterResource("fortios:index/sshfilterProfile:SshfilterProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSshfilterProfile gets an existing SshfilterProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSshfilterProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SshfilterProfileState, opts ...pulumi.ResourceOption) (*SshfilterProfile, error) {
	var resource SshfilterProfile
	err := ctx.ReadResource("fortios:index/sshfilterProfile:SshfilterProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SshfilterProfile resources.
type sshfilterProfileState struct {
	// SSH blocking options.
	Block *string `pulumi:"block"`
	// Enable/disable logging unmatched shell commands. Valid values: `enable`, `disable`.
	DefaultCommandLog *string `pulumi:"defaultCommandLog"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// File filter. The structure of `fileFilter` block is documented below.
	FileFilter *SshfilterProfileFileFilter `pulumi:"fileFilter"`
	// SSH logging options.
	Log *string `pulumi:"log"`
	// SSH filter profile name.
	Name *string `pulumi:"name"`
	// SSH command filter. The structure of `shellCommands` block is documented below.
	ShellCommands []SshfilterProfileShellCommand `pulumi:"shellCommands"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SshfilterProfileState struct {
	// SSH blocking options.
	Block pulumi.StringPtrInput
	// Enable/disable logging unmatched shell commands. Valid values: `enable`, `disable`.
	DefaultCommandLog pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// File filter. The structure of `fileFilter` block is documented below.
	FileFilter SshfilterProfileFileFilterPtrInput
	// SSH logging options.
	Log pulumi.StringPtrInput
	// SSH filter profile name.
	Name pulumi.StringPtrInput
	// SSH command filter. The structure of `shellCommands` block is documented below.
	ShellCommands SshfilterProfileShellCommandArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SshfilterProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*sshfilterProfileState)(nil)).Elem()
}

type sshfilterProfileArgs struct {
	// SSH blocking options.
	Block *string `pulumi:"block"`
	// Enable/disable logging unmatched shell commands. Valid values: `enable`, `disable`.
	DefaultCommandLog *string `pulumi:"defaultCommandLog"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// File filter. The structure of `fileFilter` block is documented below.
	FileFilter *SshfilterProfileFileFilter `pulumi:"fileFilter"`
	// SSH logging options.
	Log *string `pulumi:"log"`
	// SSH filter profile name.
	Name *string `pulumi:"name"`
	// SSH command filter. The structure of `shellCommands` block is documented below.
	ShellCommands []SshfilterProfileShellCommand `pulumi:"shellCommands"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SshfilterProfile resource.
type SshfilterProfileArgs struct {
	// SSH blocking options.
	Block pulumi.StringPtrInput
	// Enable/disable logging unmatched shell commands. Valid values: `enable`, `disable`.
	DefaultCommandLog pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// File filter. The structure of `fileFilter` block is documented below.
	FileFilter SshfilterProfileFileFilterPtrInput
	// SSH logging options.
	Log pulumi.StringPtrInput
	// SSH filter profile name.
	Name pulumi.StringPtrInput
	// SSH command filter. The structure of `shellCommands` block is documented below.
	ShellCommands SshfilterProfileShellCommandArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SshfilterProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sshfilterProfileArgs)(nil)).Elem()
}

type SshfilterProfileInput interface {
	pulumi.Input

	ToSshfilterProfileOutput() SshfilterProfileOutput
	ToSshfilterProfileOutputWithContext(ctx context.Context) SshfilterProfileOutput
}

func (*SshfilterProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**SshfilterProfile)(nil)).Elem()
}

func (i *SshfilterProfile) ToSshfilterProfileOutput() SshfilterProfileOutput {
	return i.ToSshfilterProfileOutputWithContext(context.Background())
}

func (i *SshfilterProfile) ToSshfilterProfileOutputWithContext(ctx context.Context) SshfilterProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileOutput)
}

// SshfilterProfileArrayInput is an input type that accepts SshfilterProfileArray and SshfilterProfileArrayOutput values.
// You can construct a concrete instance of `SshfilterProfileArrayInput` via:
//
//	SshfilterProfileArray{ SshfilterProfileArgs{...} }
type SshfilterProfileArrayInput interface {
	pulumi.Input

	ToSshfilterProfileArrayOutput() SshfilterProfileArrayOutput
	ToSshfilterProfileArrayOutputWithContext(context.Context) SshfilterProfileArrayOutput
}

type SshfilterProfileArray []SshfilterProfileInput

func (SshfilterProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SshfilterProfile)(nil)).Elem()
}

func (i SshfilterProfileArray) ToSshfilterProfileArrayOutput() SshfilterProfileArrayOutput {
	return i.ToSshfilterProfileArrayOutputWithContext(context.Background())
}

func (i SshfilterProfileArray) ToSshfilterProfileArrayOutputWithContext(ctx context.Context) SshfilterProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileArrayOutput)
}

// SshfilterProfileMapInput is an input type that accepts SshfilterProfileMap and SshfilterProfileMapOutput values.
// You can construct a concrete instance of `SshfilterProfileMapInput` via:
//
//	SshfilterProfileMap{ "key": SshfilterProfileArgs{...} }
type SshfilterProfileMapInput interface {
	pulumi.Input

	ToSshfilterProfileMapOutput() SshfilterProfileMapOutput
	ToSshfilterProfileMapOutputWithContext(context.Context) SshfilterProfileMapOutput
}

type SshfilterProfileMap map[string]SshfilterProfileInput

func (SshfilterProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SshfilterProfile)(nil)).Elem()
}

func (i SshfilterProfileMap) ToSshfilterProfileMapOutput() SshfilterProfileMapOutput {
	return i.ToSshfilterProfileMapOutputWithContext(context.Background())
}

func (i SshfilterProfileMap) ToSshfilterProfileMapOutputWithContext(ctx context.Context) SshfilterProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshfilterProfileMapOutput)
}

type SshfilterProfileOutput struct{ *pulumi.OutputState }

func (SshfilterProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshfilterProfile)(nil)).Elem()
}

func (o SshfilterProfileOutput) ToSshfilterProfileOutput() SshfilterProfileOutput {
	return o
}

func (o SshfilterProfileOutput) ToSshfilterProfileOutputWithContext(ctx context.Context) SshfilterProfileOutput {
	return o
}

// SSH blocking options.
func (o SshfilterProfileOutput) Block() pulumi.StringOutput {
	return o.ApplyT(func(v *SshfilterProfile) pulumi.StringOutput { return v.Block }).(pulumi.StringOutput)
}

// Enable/disable logging unmatched shell commands. Valid values: `enable`, `disable`.
func (o SshfilterProfileOutput) DefaultCommandLog() pulumi.StringOutput {
	return o.ApplyT(func(v *SshfilterProfile) pulumi.StringOutput { return v.DefaultCommandLog }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SshfilterProfileOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshfilterProfile) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// File filter. The structure of `fileFilter` block is documented below.
func (o SshfilterProfileOutput) FileFilter() SshfilterProfileFileFilterOutput {
	return o.ApplyT(func(v *SshfilterProfile) SshfilterProfileFileFilterOutput { return v.FileFilter }).(SshfilterProfileFileFilterOutput)
}

// SSH logging options.
func (o SshfilterProfileOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v *SshfilterProfile) pulumi.StringOutput { return v.Log }).(pulumi.StringOutput)
}

// SSH filter profile name.
func (o SshfilterProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SshfilterProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// SSH command filter. The structure of `shellCommands` block is documented below.
func (o SshfilterProfileOutput) ShellCommands() SshfilterProfileShellCommandArrayOutput {
	return o.ApplyT(func(v *SshfilterProfile) SshfilterProfileShellCommandArrayOutput { return v.ShellCommands }).(SshfilterProfileShellCommandArrayOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SshfilterProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshfilterProfile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SshfilterProfileArrayOutput struct{ *pulumi.OutputState }

func (SshfilterProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SshfilterProfile)(nil)).Elem()
}

func (o SshfilterProfileArrayOutput) ToSshfilterProfileArrayOutput() SshfilterProfileArrayOutput {
	return o
}

func (o SshfilterProfileArrayOutput) ToSshfilterProfileArrayOutputWithContext(ctx context.Context) SshfilterProfileArrayOutput {
	return o
}

func (o SshfilterProfileArrayOutput) Index(i pulumi.IntInput) SshfilterProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SshfilterProfile {
		return vs[0].([]*SshfilterProfile)[vs[1].(int)]
	}).(SshfilterProfileOutput)
}

type SshfilterProfileMapOutput struct{ *pulumi.OutputState }

func (SshfilterProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SshfilterProfile)(nil)).Elem()
}

func (o SshfilterProfileMapOutput) ToSshfilterProfileMapOutput() SshfilterProfileMapOutput {
	return o
}

func (o SshfilterProfileMapOutput) ToSshfilterProfileMapOutputWithContext(ctx context.Context) SshfilterProfileMapOutput {
	return o
}

func (o SshfilterProfileMapOutput) MapIndex(k pulumi.StringInput) SshfilterProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SshfilterProfile {
		return vs[0].(map[string]*SshfilterProfile)[vs[1].(string)]
	}).(SshfilterProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileInput)(nil)).Elem(), &SshfilterProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileArrayInput)(nil)).Elem(), SshfilterProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshfilterProfileMapInput)(nil)).Elem(), SshfilterProfileMap{})
	pulumi.RegisterOutputType(SshfilterProfileOutput{})
	pulumi.RegisterOutputType(SshfilterProfileArrayOutput{})
	pulumi.RegisterOutputType(SshfilterProfileMapOutput{})
}
