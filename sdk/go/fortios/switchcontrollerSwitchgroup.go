// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiSwitch switch groups.
//
// ## Import
//
// # SwitchController SwitchGroup can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/switchcontrollerSwitchgroup:SwitchcontrollerSwitchgroup labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/switchcontrollerSwitchgroup:SwitchcontrollerSwitchgroup labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type SwitchcontrollerSwitchgroup struct {
	pulumi.CustomResourceState

	// Optional switch group description.
	Description pulumi.StringOutput `pulumi:"description"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// FortiLink interface to which switch group members belong.
	Fortilink pulumi.StringOutput `pulumi:"fortilink"`
	// FortiSwitch members belonging to this switch group. The structure of `members` block is documented below.
	Members SwitchcontrollerSwitchgroupMemberArrayOutput `pulumi:"members"`
	// Switch group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchcontrollerSwitchgroup registers a new resource with the given unique name, arguments, and options.
func NewSwitchcontrollerSwitchgroup(ctx *pulumi.Context,
	name string, args *SwitchcontrollerSwitchgroupArgs, opts ...pulumi.ResourceOption) (*SwitchcontrollerSwitchgroup, error) {
	if args == nil {
		args = &SwitchcontrollerSwitchgroupArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchcontrollerSwitchgroup
	err := ctx.RegisterResource("fortios:index/switchcontrollerSwitchgroup:SwitchcontrollerSwitchgroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchcontrollerSwitchgroup gets an existing SwitchcontrollerSwitchgroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchcontrollerSwitchgroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchcontrollerSwitchgroupState, opts ...pulumi.ResourceOption) (*SwitchcontrollerSwitchgroup, error) {
	var resource SwitchcontrollerSwitchgroup
	err := ctx.ReadResource("fortios:index/switchcontrollerSwitchgroup:SwitchcontrollerSwitchgroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchcontrollerSwitchgroup resources.
type switchcontrollerSwitchgroupState struct {
	// Optional switch group description.
	Description *string `pulumi:"description"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// FortiLink interface to which switch group members belong.
	Fortilink *string `pulumi:"fortilink"`
	// FortiSwitch members belonging to this switch group. The structure of `members` block is documented below.
	Members []SwitchcontrollerSwitchgroupMember `pulumi:"members"`
	// Switch group name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchcontrollerSwitchgroupState struct {
	// Optional switch group description.
	Description pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// FortiLink interface to which switch group members belong.
	Fortilink pulumi.StringPtrInput
	// FortiSwitch members belonging to this switch group. The structure of `members` block is documented below.
	Members SwitchcontrollerSwitchgroupMemberArrayInput
	// Switch group name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchcontrollerSwitchgroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchcontrollerSwitchgroupState)(nil)).Elem()
}

type switchcontrollerSwitchgroupArgs struct {
	// Optional switch group description.
	Description *string `pulumi:"description"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// FortiLink interface to which switch group members belong.
	Fortilink *string `pulumi:"fortilink"`
	// FortiSwitch members belonging to this switch group. The structure of `members` block is documented below.
	Members []SwitchcontrollerSwitchgroupMember `pulumi:"members"`
	// Switch group name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchcontrollerSwitchgroup resource.
type SwitchcontrollerSwitchgroupArgs struct {
	// Optional switch group description.
	Description pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// FortiLink interface to which switch group members belong.
	Fortilink pulumi.StringPtrInput
	// FortiSwitch members belonging to this switch group. The structure of `members` block is documented below.
	Members SwitchcontrollerSwitchgroupMemberArrayInput
	// Switch group name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchcontrollerSwitchgroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchcontrollerSwitchgroupArgs)(nil)).Elem()
}

type SwitchcontrollerSwitchgroupInput interface {
	pulumi.Input

	ToSwitchcontrollerSwitchgroupOutput() SwitchcontrollerSwitchgroupOutput
	ToSwitchcontrollerSwitchgroupOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupOutput
}

func (*SwitchcontrollerSwitchgroup) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerSwitchgroup)(nil)).Elem()
}

func (i *SwitchcontrollerSwitchgroup) ToSwitchcontrollerSwitchgroupOutput() SwitchcontrollerSwitchgroupOutput {
	return i.ToSwitchcontrollerSwitchgroupOutputWithContext(context.Background())
}

func (i *SwitchcontrollerSwitchgroup) ToSwitchcontrollerSwitchgroupOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerSwitchgroupOutput)
}

// SwitchcontrollerSwitchgroupArrayInput is an input type that accepts SwitchcontrollerSwitchgroupArray and SwitchcontrollerSwitchgroupArrayOutput values.
// You can construct a concrete instance of `SwitchcontrollerSwitchgroupArrayInput` via:
//
//	SwitchcontrollerSwitchgroupArray{ SwitchcontrollerSwitchgroupArgs{...} }
type SwitchcontrollerSwitchgroupArrayInput interface {
	pulumi.Input

	ToSwitchcontrollerSwitchgroupArrayOutput() SwitchcontrollerSwitchgroupArrayOutput
	ToSwitchcontrollerSwitchgroupArrayOutputWithContext(context.Context) SwitchcontrollerSwitchgroupArrayOutput
}

type SwitchcontrollerSwitchgroupArray []SwitchcontrollerSwitchgroupInput

func (SwitchcontrollerSwitchgroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchcontrollerSwitchgroup)(nil)).Elem()
}

func (i SwitchcontrollerSwitchgroupArray) ToSwitchcontrollerSwitchgroupArrayOutput() SwitchcontrollerSwitchgroupArrayOutput {
	return i.ToSwitchcontrollerSwitchgroupArrayOutputWithContext(context.Background())
}

func (i SwitchcontrollerSwitchgroupArray) ToSwitchcontrollerSwitchgroupArrayOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerSwitchgroupArrayOutput)
}

// SwitchcontrollerSwitchgroupMapInput is an input type that accepts SwitchcontrollerSwitchgroupMap and SwitchcontrollerSwitchgroupMapOutput values.
// You can construct a concrete instance of `SwitchcontrollerSwitchgroupMapInput` via:
//
//	SwitchcontrollerSwitchgroupMap{ "key": SwitchcontrollerSwitchgroupArgs{...} }
type SwitchcontrollerSwitchgroupMapInput interface {
	pulumi.Input

	ToSwitchcontrollerSwitchgroupMapOutput() SwitchcontrollerSwitchgroupMapOutput
	ToSwitchcontrollerSwitchgroupMapOutputWithContext(context.Context) SwitchcontrollerSwitchgroupMapOutput
}

type SwitchcontrollerSwitchgroupMap map[string]SwitchcontrollerSwitchgroupInput

func (SwitchcontrollerSwitchgroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchcontrollerSwitchgroup)(nil)).Elem()
}

func (i SwitchcontrollerSwitchgroupMap) ToSwitchcontrollerSwitchgroupMapOutput() SwitchcontrollerSwitchgroupMapOutput {
	return i.ToSwitchcontrollerSwitchgroupMapOutputWithContext(context.Background())
}

func (i SwitchcontrollerSwitchgroupMap) ToSwitchcontrollerSwitchgroupMapOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchcontrollerSwitchgroupMapOutput)
}

type SwitchcontrollerSwitchgroupOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerSwitchgroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchcontrollerSwitchgroup)(nil)).Elem()
}

func (o SwitchcontrollerSwitchgroupOutput) ToSwitchcontrollerSwitchgroupOutput() SwitchcontrollerSwitchgroupOutput {
	return o
}

func (o SwitchcontrollerSwitchgroupOutput) ToSwitchcontrollerSwitchgroupOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupOutput {
	return o
}

// Optional switch group description.
func (o SwitchcontrollerSwitchgroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerSwitchgroup) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o SwitchcontrollerSwitchgroupOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerSwitchgroup) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// FortiLink interface to which switch group members belong.
func (o SwitchcontrollerSwitchgroupOutput) Fortilink() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerSwitchgroup) pulumi.StringOutput { return v.Fortilink }).(pulumi.StringOutput)
}

// FortiSwitch members belonging to this switch group. The structure of `members` block is documented below.
func (o SwitchcontrollerSwitchgroupOutput) Members() SwitchcontrollerSwitchgroupMemberArrayOutput {
	return o.ApplyT(func(v *SwitchcontrollerSwitchgroup) SwitchcontrollerSwitchgroupMemberArrayOutput { return v.Members }).(SwitchcontrollerSwitchgroupMemberArrayOutput)
}

// Switch group name.
func (o SwitchcontrollerSwitchgroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchcontrollerSwitchgroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o SwitchcontrollerSwitchgroupOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchcontrollerSwitchgroup) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchcontrollerSwitchgroupArrayOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerSwitchgroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchcontrollerSwitchgroup)(nil)).Elem()
}

func (o SwitchcontrollerSwitchgroupArrayOutput) ToSwitchcontrollerSwitchgroupArrayOutput() SwitchcontrollerSwitchgroupArrayOutput {
	return o
}

func (o SwitchcontrollerSwitchgroupArrayOutput) ToSwitchcontrollerSwitchgroupArrayOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupArrayOutput {
	return o
}

func (o SwitchcontrollerSwitchgroupArrayOutput) Index(i pulumi.IntInput) SwitchcontrollerSwitchgroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchcontrollerSwitchgroup {
		return vs[0].([]*SwitchcontrollerSwitchgroup)[vs[1].(int)]
	}).(SwitchcontrollerSwitchgroupOutput)
}

type SwitchcontrollerSwitchgroupMapOutput struct{ *pulumi.OutputState }

func (SwitchcontrollerSwitchgroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchcontrollerSwitchgroup)(nil)).Elem()
}

func (o SwitchcontrollerSwitchgroupMapOutput) ToSwitchcontrollerSwitchgroupMapOutput() SwitchcontrollerSwitchgroupMapOutput {
	return o
}

func (o SwitchcontrollerSwitchgroupMapOutput) ToSwitchcontrollerSwitchgroupMapOutputWithContext(ctx context.Context) SwitchcontrollerSwitchgroupMapOutput {
	return o
}

func (o SwitchcontrollerSwitchgroupMapOutput) MapIndex(k pulumi.StringInput) SwitchcontrollerSwitchgroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchcontrollerSwitchgroup {
		return vs[0].(map[string]*SwitchcontrollerSwitchgroup)[vs[1].(string)]
	}).(SwitchcontrollerSwitchgroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerSwitchgroupInput)(nil)).Elem(), &SwitchcontrollerSwitchgroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerSwitchgroupArrayInput)(nil)).Elem(), SwitchcontrollerSwitchgroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchcontrollerSwitchgroupMapInput)(nil)).Elem(), SwitchcontrollerSwitchgroupMap{})
	pulumi.RegisterOutputType(SwitchcontrollerSwitchgroupOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerSwitchgroupArrayOutput{})
	pulumi.RegisterOutputType(SwitchcontrollerSwitchgroupMapOutput{})
}
