// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPv4 access proxy. Applies to FortiOS Version `>= 7.0.1`.
//
// ## Import
//
// # Firewall AccessProxy can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import fortios:index/firewallAccessproxy:FirewallAccessproxy labelname {{name}}
//
// ```
//
//	If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//
//	$ pulumi import fortios:index/firewallAccessproxy:FirewallAccessproxy labelname {{name}}
//
// ```
//
//	$ unset "FORTIOS_IMPORT_TABLE"
type FirewallAccessproxy struct {
	pulumi.CustomResourceState

	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb pulumi.StringOutput `pulumi:"addVhostDomainToDnsdb"`
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s FirewallAccessproxyApiGateway6ArrayOutput `pulumi:"apiGateway6s"`
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways FirewallAccessproxyApiGatewayArrayOutput `pulumi:"apiGateways"`
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal pulumi.StringOutput `pulumi:"authPortal"`
	// Virtual host for authentication portal.
	AuthVirtualHost pulumi.StringOutput `pulumi:"authVirtualHost"`
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert pulumi.StringOutput `pulumi:"clientCert"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringOutput `pulumi:"decryptedTrafficMirror"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Action of an empty client certificate.
	EmptyCertAction pulumi.StringOutput `pulumi:"emptyCertAction"`
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic pulumi.StringOutput `pulumi:"logBlockedTraffic"`
	// Access Proxy name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect pulumi.StringOutput `pulumi:"userAgentDetect"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Virtual IP name.
	Vip pulumi.StringOutput `pulumi:"vip"`
}

// NewFirewallAccessproxy registers a new resource with the given unique name, arguments, and options.
func NewFirewallAccessproxy(ctx *pulumi.Context,
	name string, args *FirewallAccessproxyArgs, opts ...pulumi.ResourceOption) (*FirewallAccessproxy, error) {
	if args == nil {
		args = &FirewallAccessproxyArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallAccessproxy
	err := ctx.RegisterResource("fortios:index/firewallAccessproxy:FirewallAccessproxy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallAccessproxy gets an existing FirewallAccessproxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallAccessproxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallAccessproxyState, opts ...pulumi.ResourceOption) (*FirewallAccessproxy, error) {
	var resource FirewallAccessproxy
	err := ctx.ReadResource("fortios:index/firewallAccessproxy:FirewallAccessproxy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallAccessproxy resources.
type firewallAccessproxyState struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb *string `pulumi:"addVhostDomainToDnsdb"`
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s []FirewallAccessproxyApiGateway6 `pulumi:"apiGateway6s"`
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways []FirewallAccessproxyApiGateway `pulumi:"apiGateways"`
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal *string `pulumi:"authPortal"`
	// Virtual host for authentication portal.
	AuthVirtualHost *string `pulumi:"authVirtualHost"`
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert *string `pulumi:"clientCert"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror *string `pulumi:"decryptedTrafficMirror"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Action of an empty client certificate.
	EmptyCertAction *string `pulumi:"emptyCertAction"`
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic *string `pulumi:"logBlockedTraffic"`
	// Access Proxy name.
	Name *string `pulumi:"name"`
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect *string `pulumi:"userAgentDetect"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual IP name.
	Vip *string `pulumi:"vip"`
}

type FirewallAccessproxyState struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb pulumi.StringPtrInput
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s FirewallAccessproxyApiGateway6ArrayInput
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways FirewallAccessproxyApiGatewayArrayInput
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal pulumi.StringPtrInput
	// Virtual host for authentication portal.
	AuthVirtualHost pulumi.StringPtrInput
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert pulumi.StringPtrInput
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Action of an empty client certificate.
	EmptyCertAction pulumi.StringPtrInput
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic pulumi.StringPtrInput
	// Access Proxy name.
	Name pulumi.StringPtrInput
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual IP name.
	Vip pulumi.StringPtrInput
}

func (FirewallAccessproxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAccessproxyState)(nil)).Elem()
}

type firewallAccessproxyArgs struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb *string `pulumi:"addVhostDomainToDnsdb"`
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s []FirewallAccessproxyApiGateway6 `pulumi:"apiGateway6s"`
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways []FirewallAccessproxyApiGateway `pulumi:"apiGateways"`
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal *string `pulumi:"authPortal"`
	// Virtual host for authentication portal.
	AuthVirtualHost *string `pulumi:"authVirtualHost"`
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert *string `pulumi:"clientCert"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror *string `pulumi:"decryptedTrafficMirror"`
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Action of an empty client certificate.
	EmptyCertAction *string `pulumi:"emptyCertAction"`
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic *string `pulumi:"logBlockedTraffic"`
	// Access Proxy name.
	Name *string `pulumi:"name"`
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect *string `pulumi:"userAgentDetect"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual IP name.
	Vip *string `pulumi:"vip"`
}

// The set of arguments for constructing a FirewallAccessproxy resource.
type FirewallAccessproxyArgs struct {
	// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
	AddVhostDomainToDnsdb pulumi.StringPtrInput
	// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
	ApiGateway6s FirewallAccessproxyApiGateway6ArrayInput
	// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
	ApiGateways FirewallAccessproxyApiGatewayArrayInput
	// Enable/disable authentication portal. Valid values: `disable`, `enable`.
	AuthPortal pulumi.StringPtrInput
	// Virtual host for authentication portal.
	AuthVirtualHost pulumi.StringPtrInput
	// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
	ClientCert pulumi.StringPtrInput
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringPtrInput
	// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
	DynamicSortSubtable pulumi.StringPtrInput
	// Action of an empty client certificate.
	EmptyCertAction pulumi.StringPtrInput
	// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
	LogBlockedTraffic pulumi.StringPtrInput
	// Access Proxy name.
	Name pulumi.StringPtrInput
	// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
	UserAgentDetect pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual IP name.
	Vip pulumi.StringPtrInput
}

func (FirewallAccessproxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAccessproxyArgs)(nil)).Elem()
}

type FirewallAccessproxyInput interface {
	pulumi.Input

	ToFirewallAccessproxyOutput() FirewallAccessproxyOutput
	ToFirewallAccessproxyOutputWithContext(ctx context.Context) FirewallAccessproxyOutput
}

func (*FirewallAccessproxy) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAccessproxy)(nil)).Elem()
}

func (i *FirewallAccessproxy) ToFirewallAccessproxyOutput() FirewallAccessproxyOutput {
	return i.ToFirewallAccessproxyOutputWithContext(context.Background())
}

func (i *FirewallAccessproxy) ToFirewallAccessproxyOutputWithContext(ctx context.Context) FirewallAccessproxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyOutput)
}

// FirewallAccessproxyArrayInput is an input type that accepts FirewallAccessproxyArray and FirewallAccessproxyArrayOutput values.
// You can construct a concrete instance of `FirewallAccessproxyArrayInput` via:
//
//	FirewallAccessproxyArray{ FirewallAccessproxyArgs{...} }
type FirewallAccessproxyArrayInput interface {
	pulumi.Input

	ToFirewallAccessproxyArrayOutput() FirewallAccessproxyArrayOutput
	ToFirewallAccessproxyArrayOutputWithContext(context.Context) FirewallAccessproxyArrayOutput
}

type FirewallAccessproxyArray []FirewallAccessproxyInput

func (FirewallAccessproxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAccessproxy)(nil)).Elem()
}

func (i FirewallAccessproxyArray) ToFirewallAccessproxyArrayOutput() FirewallAccessproxyArrayOutput {
	return i.ToFirewallAccessproxyArrayOutputWithContext(context.Background())
}

func (i FirewallAccessproxyArray) ToFirewallAccessproxyArrayOutputWithContext(ctx context.Context) FirewallAccessproxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyArrayOutput)
}

// FirewallAccessproxyMapInput is an input type that accepts FirewallAccessproxyMap and FirewallAccessproxyMapOutput values.
// You can construct a concrete instance of `FirewallAccessproxyMapInput` via:
//
//	FirewallAccessproxyMap{ "key": FirewallAccessproxyArgs{...} }
type FirewallAccessproxyMapInput interface {
	pulumi.Input

	ToFirewallAccessproxyMapOutput() FirewallAccessproxyMapOutput
	ToFirewallAccessproxyMapOutputWithContext(context.Context) FirewallAccessproxyMapOutput
}

type FirewallAccessproxyMap map[string]FirewallAccessproxyInput

func (FirewallAccessproxyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAccessproxy)(nil)).Elem()
}

func (i FirewallAccessproxyMap) ToFirewallAccessproxyMapOutput() FirewallAccessproxyMapOutput {
	return i.ToFirewallAccessproxyMapOutputWithContext(context.Background())
}

func (i FirewallAccessproxyMap) ToFirewallAccessproxyMapOutputWithContext(ctx context.Context) FirewallAccessproxyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessproxyMapOutput)
}

type FirewallAccessproxyOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAccessproxy)(nil)).Elem()
}

func (o FirewallAccessproxyOutput) ToFirewallAccessproxyOutput() FirewallAccessproxyOutput {
	return o
}

func (o FirewallAccessproxyOutput) ToFirewallAccessproxyOutputWithContext(ctx context.Context) FirewallAccessproxyOutput {
	return o
}

// Enable/disable adding vhost/domain to dnsdb for ztna dox tunnel. Valid values: `enable`, `disable`.
func (o FirewallAccessproxyOutput) AddVhostDomainToDnsdb() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringOutput { return v.AddVhostDomainToDnsdb }).(pulumi.StringOutput)
}

// Set IPv6 API Gateway. The structure of `apiGateway6` block is documented below.
func (o FirewallAccessproxyOutput) ApiGateway6s() FirewallAccessproxyApiGateway6ArrayOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) FirewallAccessproxyApiGateway6ArrayOutput { return v.ApiGateway6s }).(FirewallAccessproxyApiGateway6ArrayOutput)
}

// Set IPv4 API Gateway. The structure of `apiGateway` block is documented below.
func (o FirewallAccessproxyOutput) ApiGateways() FirewallAccessproxyApiGatewayArrayOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) FirewallAccessproxyApiGatewayArrayOutput { return v.ApiGateways }).(FirewallAccessproxyApiGatewayArrayOutput)
}

// Enable/disable authentication portal. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyOutput) AuthPortal() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringOutput { return v.AuthPortal }).(pulumi.StringOutput)
}

// Virtual host for authentication portal.
func (o FirewallAccessproxyOutput) AuthVirtualHost() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringOutput { return v.AuthVirtualHost }).(pulumi.StringOutput)
}

// Enable/disable to request client certificate. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyOutput) ClientCert() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringOutput { return v.ClientCert }).(pulumi.StringOutput)
}

// Decrypted traffic mirror.
func (o FirewallAccessproxyOutput) DecryptedTrafficMirror() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringOutput { return v.DecryptedTrafficMirror }).(pulumi.StringOutput)
}

// Sort sub-tables, please do not set this parameter when configuring static sub-tables. Options: [ false, true, natural, alphabetical ]. false: Default value, do not sort tables; true/natural: sort tables in natural order. For example: [ a10, a2 ] -> [ a2, a10 ]; alphabetical: sort tables in alphabetical order. For example: [ a10, a2 ] -> [ a10, a2 ].
func (o FirewallAccessproxyOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

// Action of an empty client certificate.
func (o FirewallAccessproxyOutput) EmptyCertAction() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringOutput { return v.EmptyCertAction }).(pulumi.StringOutput)
}

// Enable/disable logging of blocked traffic. Valid values: `enable`, `disable`.
func (o FirewallAccessproxyOutput) LogBlockedTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringOutput { return v.LogBlockedTraffic }).(pulumi.StringOutput)
}

// Access Proxy name.
func (o FirewallAccessproxyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable to detect device type by HTTP user-agent if no client certificate provided. Valid values: `disable`, `enable`.
func (o FirewallAccessproxyOutput) UserAgentDetect() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringOutput { return v.UserAgentDetect }).(pulumi.StringOutput)
}

// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
func (o FirewallAccessproxyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Virtual IP name.
func (o FirewallAccessproxyOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessproxy) pulumi.StringOutput { return v.Vip }).(pulumi.StringOutput)
}

type FirewallAccessproxyArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAccessproxy)(nil)).Elem()
}

func (o FirewallAccessproxyArrayOutput) ToFirewallAccessproxyArrayOutput() FirewallAccessproxyArrayOutput {
	return o
}

func (o FirewallAccessproxyArrayOutput) ToFirewallAccessproxyArrayOutputWithContext(ctx context.Context) FirewallAccessproxyArrayOutput {
	return o
}

func (o FirewallAccessproxyArrayOutput) Index(i pulumi.IntInput) FirewallAccessproxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallAccessproxy {
		return vs[0].([]*FirewallAccessproxy)[vs[1].(int)]
	}).(FirewallAccessproxyOutput)
}

type FirewallAccessproxyMapOutput struct{ *pulumi.OutputState }

func (FirewallAccessproxyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAccessproxy)(nil)).Elem()
}

func (o FirewallAccessproxyMapOutput) ToFirewallAccessproxyMapOutput() FirewallAccessproxyMapOutput {
	return o
}

func (o FirewallAccessproxyMapOutput) ToFirewallAccessproxyMapOutputWithContext(ctx context.Context) FirewallAccessproxyMapOutput {
	return o
}

func (o FirewallAccessproxyMapOutput) MapIndex(k pulumi.StringInput) FirewallAccessproxyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallAccessproxy {
		return vs[0].(map[string]*FirewallAccessproxy)[vs[1].(string)]
	}).(FirewallAccessproxyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyInput)(nil)).Elem(), &FirewallAccessproxy{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyArrayInput)(nil)).Elem(), FirewallAccessproxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessproxyMapInput)(nil)).Elem(), FirewallAccessproxyMap{})
	pulumi.RegisterOutputType(FirewallAccessproxyOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessproxyMapOutput{})
}
